{"resultsPerPage":195,"startIndex":0,"totalResults":195,"format":"NVD_CVE","version":"2.0","timestamp":"2025-10-05T17:10:18.064","vulnerabilities":[{"cve":{"id":"CVE-2025-10751","sourceIdentifier":"help@fluidattacks.com","published":"2025-10-04T01:15:29.800","lastModified":"2025-10-04T01:15:29.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"MacForge contains an insecure XPC service that allows local, unprivileged users to escalate their privileges to root.This issue affects MacForge: 1.2.0 Beta 1."}],"metrics":{"cvssMetricV40":[{"source":"help@fluidattacks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.5,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"help@fluidattacks.com","type":"Primary","description":[{"lang":"en","value":"CWE-732"}]}],"references":[{"url":"https:\/\/fluidattacks.com\/advisories\/m83","source":"help@fluidattacks.com"},{"url":"https:\/\/github.com\/MacEnhance\/MacForge","source":"help@fluidattacks.com"},{"url":"https:\/\/www.macenhance.com\/macforge","source":"help@fluidattacks.com"}]}},{"cve":{"id":"CVE-2025-10746","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:35.860","lastModified":"2025-10-04T03:15:35.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Integrate Dynamics 365 CRM plugin for WordPress is vulnerable to unauthorized access in all versions up to, and including, 1.0.9. This is due to missing capability checks and nonce verification on functions hooked to 'init'. This makes it possible for unauthenticated attackers to deactivate the plugin, tamper with OAuth configuration, and trigger test connections that expose sensitive data via direct request to vulnerable endpoints granted they can craft malicious requests with specific parameters."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-306"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/integrate-dynamics-365-crm\/tags\/1.0.9\/Observer\/adminObserver.php#L26","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/integrate-dynamics-365-crm\/tags\/1.0.9\/integrate-dynamics-365-crm.php#L48","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/integrate-dynamics-365-crm\/trunk\/Observer\/class-adminobserver.php?rev=3370266#L71","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/b7fb23e8-dabb-4d6e-a2b2-2b27d6a38b3c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-11227","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:36.873","lastModified":"2025-10-04T03:15:36.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 4.10.0 via the 'registerGetForm', 'registerGetForms', 'registerGetCampaign' and 'registerGetCampaigns' functions due to a missing capability check. This makes it possible for unauthenticated attackers to extract data from private and draft donation forms, as well as archived campaigns."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-285"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/give\/tags\/4.9.0\/src\/API\/REST\/V3\/Routes\/Campaigns\/RegisterCampaignRoutes.php#L60","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/give\/tags\/4.9.0\/src\/API\/REST\/V3\/Routes\/Campaigns\/RegisterCampaignRoutes.php#L91","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/give\/tags\/4.9.0\/src\/DonationForms\/Routes\/DonationFormsEntityRoute.php#L52","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/give\/tags\/4.9.0\/src\/DonationForms\/Routes\/DonationFormsEntityRoute.php#L82","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3371948%40give&new=3371948%40give&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/54db1807-69ff-445c-9e02-9abce9fd3940?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-11228","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:37.043","lastModified":"2025-10-04T03:15:37.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The GiveWP – Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the `registerAssociateFormsWithCampaign` function in all versions up to, and including, 4.10.0. This makes it possible for unauthenticated attackers to associate any donation forms with any campaign."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/give\/tags\/4.9.0\/src\/DonationForms\/Routes\/DonationFormsEntityRoute.php#L131","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3371948%40give&new=3371948%40give&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/ddf9a043-5eb6-46fd-88c2-0f5a04f73fc9?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-61887","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.220","lastModified":"2025-10-04T03:15:37.220","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61888","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.310","lastModified":"2025-10-04T03:15:37.310","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61889","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.380","lastModified":"2025-10-04T03:15:37.380","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61890","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.457","lastModified":"2025-10-04T03:15:37.457","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61891","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.527","lastModified":"2025-10-04T03:15:37.527","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61892","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.597","lastModified":"2025-10-04T03:15:37.597","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61893","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.670","lastModified":"2025-10-04T03:15:37.670","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61894","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.740","lastModified":"2025-10-04T03:15:37.740","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61895","sourceIdentifier":"psirt@fortinet.com","published":"2025-10-04T03:15:37.800","lastModified":"2025-10-04T03:15:37.800","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: Not used"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-61962","sourceIdentifier":"cve@mitre.org","published":"2025-10-04T03:15:37.870","lastModified":"2025-10-04T03:15:37.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In fetchmail before 6.5.6, the SMTP client can crash when authenticating upon receiving a 334 status code in a malformed context."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":5.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.2,"impactScore":3.6}]},"weaknesses":[{"source":"cve@mitre.org","type":"Primary","description":[{"lang":"en","value":"CWE-142"}]}],"references":[{"url":"https:\/\/gitlab.com\/fetchmail\/fetchmail\/-\/commit\/4c3cebfa4e659fb778ca2cae0ccb3f69201609a8","source":"cve@mitre.org"},{"url":"https:\/\/www.fetchmail.info\/fetchmail-SA-2025-01.txt","source":"cve@mitre.org"},{"url":"https:\/\/www.openwall.com\/lists\/oss-security\/2025\/10\/03\/2","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-8726","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:38.123","lastModified":"2025-10-04T03:15:38.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Photo Album Plus plugin for WordPress is vulnerable to Cross-Site Scripting in all versions up to, and including, 9.0.11.006 due to insufficient input sanitization and output escaping in the wppa_user_upload function. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in the photo album descriptions that execute in a victim's browser."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wp-photo-album-plus\/tags\/9.0.09.003\/wppa-functions.php#L4977","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3349261\/wp-photo-album-plus","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/575b11a3-9fa4-4ee0-8f19-7d53e6c1785f?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9029","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:38.290","lastModified":"2025-10-04T03:15:38.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WDesignKit – Elementor & Gutenberg Starter Templates, Patterns, Cloud Workspace & Widget Builder plugin for WordPress is vulnerable to missing authorization via the wdkit_handle_review_submission function in versions less than, or equal to, 1.2.16. This is due to the plugin not properly verifying that a user is authorized to perform an action. This makes it possible for unauthenticated attackers to submit feedback data to external services."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wdesignkit\/tags\/1.2.17\/includes\/admin\/notices\/class-wdkit-review-form.php#L117","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e89f0699-42be-403a-8cdb-31e214a85851?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9030","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:38.450","lastModified":"2025-10-04T03:15:38.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Majestic Before After Image plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'before_label' and 'after_label' parameters in versions less than, or equal to, 2.0.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3358300\/majestic-before-after-image","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e54f1a23-0b1f-4b0b-909e-e877e4ee2c86?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9243","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:38.613","lastModified":"2025-10-04T03:15:38.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Cost Calculator Builder plugin for WordPress is vulnerable to unauthorizedmodification of data due to a missing capability check on the get_cc_orders and update_order_status functions in all versions up to, and including, 3.5.32. This makes it possible for authenticated attackers, with Subscriber-level access and above, to access order management functions and modify order status."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","baseScore":8.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3371684\/cost-calculator-builder#file388","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3371684\/cost-calculator-builder#file389","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/aa46bdb3-6bbe-4f2f-8e1a-fbb54c5b39fd?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9485","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T03:15:38.780","lastModified":"2025-10-04T03:15:38.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The OAuth Single Sign On – SSO (OAuth Client) plugin for WordPress is vulnerable to Improper Verification of Cryptographic Signature in versions up to, and including, 6.26.12. This is due to the plugin performing unsafe JWT token processing without verification or validation in the `get_resource_owner_from_id_token` function. This makes it possible for unauthenticated attackers to bypass authentication and gain access to any existing user account - including administrators in certain configurations - or to create arbitrary subscriber-level accounts."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-347"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/miniorange-login-with-eve-online-google-facebook\/tags\/6.26.12\/class-mooauth-widget.php#L577","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3360768\/miniorange-login-with-eve-online-google-facebook","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/d2448afc-70d1-4dd5-b73b-62d182ee9a8a?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-10383","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T04:16:23.820","lastModified":"2025-10-04T04:16:23.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Contest Gallery – Upload, Vote & Sell with PayPal and Stripe plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple form field parameters in all versions up to, and including, 27.0.2. This is due to insufficient input sanitization and output escaping on user-supplied attributes. This makes it possible for authenticated attackers, with author-level access or higher, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/contest-gallery\/tags\/26.1.1\/v10\/v10-admin\/upload\/fields\/input.php#L367","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/contest-gallery\/tags\/26.1.1\/v10\/v10-admin\/upload\/fields\/input.php#L381","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/contest-gallery\/tags\/26.1.1\/v10\/v10-admin\/upload\/fields\/input.php#L389","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/contest-gallery\/tags\/26.1.1\/v10\/v10-admin\/upload\/fields\/textarea.php#L330","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/contest-gallery\/tags\/26.1.1\/v10\/v10-admin\/upload\/fields\/textarea.php#L338","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3372123%40contest-gallery&new=3372123%40contest-gallery&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/de379f74-660a-4e59-b1c4-4b88dff8a843?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9886","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T04:16:24.730","lastModified":"2025-10-04T04:16:24.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Trinity Audio – Text to Speech AI audio player to convert content into audio plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 5.20.2. This is due to missing or incorrect nonce validation in the '\/admin\/inc\/post-management.php' file. This makes it possible for unauthenticated attackers to activate\/deactivate posts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trinity-audio\/tags\/5.20.1\/admin\/inc\/post-management.php#L7","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3371934%40trinity-audio&new=3371934%40trinity-audio&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/f57d99dc-3faa-4dfc-9cb6-fdb5647daf9a?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-9952","sourceIdentifier":"security@wordfence.com","published":"2025-10-04T04:16:24.937","lastModified":"2025-10-04T04:16:24.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Trinity Audio – Text to Speech AI audio player to convert content into audio plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'range-date' parameter in all versions up to, and including, 5.20.2 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trinity-audio\/tags\/5.20.1\/admin\/inc\/post-management.php#L37","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trinity-audio\/tags\/5.20.1\/admin\/inc\/post-management.php#L44","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3371934\/trinity-audio\/trunk\/admin\/inc\/post-management.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a68ca792-6870-4e28-b118-ee1125842955?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-39929","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:44.620","lastModified":"2025-10-04T08:15:44.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix smbdirect_recv_io leak in smbd_negotiate() error path\n\nDuring tests of another unrelated patch I was able to trigger this\nerror: Objects remaining on __kmem_cache_shutdown()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0991418bf98f191d0c320bd25245fcffa1998c7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d7c075c878ac844e33c43e506c2fa27ac7e9689","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/922338efaad63cfe30d459dfc59f9d69ff93ded4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/daac51c7032036a0ca5f1aa419ad1b0471d1c6e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7b7a93879558e77d950f1ff9a6f3daa385b33df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39931","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:45.827","lastModified":"2025-10-04T08:15:45.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: af_alg - Set merge to zero early in af_alg_sendmsg\n\nIf an error causes af_alg_sendmsg to abort, ctx->merge may contain\na garbage value from the previous loop.  This may then trigger a\ncrash on the next entry into af_alg_sendmsg when it attempts to do\na merge that can't be done.\n\nFix this by setting ctx->merge to zero near the start of the loop."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/045ee26aa3920a47ec46d7fcb302420bf01fd753","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2374c11189ef704a3e4863646369f1b8e6a27d71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24c1106504c625fabd3b7229611af617b4c27ac7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6241b9e2809b12da9130894cf5beddf088dc1b8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9574b2330dbd2b5459b74d3b5e9619d39299fc6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39932","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:45.953","lastModified":"2025-10-04T08:15:45.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: let smbd_destroy() call disable_work_sync(&info->post_send_credits_work)\n\nIn smbd_destroy() we may destroy the memory so we better\nwait until post_send_credits_work is no longer pending\nand will never be started again.\n\nI actually just hit the case using rxe:\n\nWARNING: CPU: 0 PID: 138 at drivers\/infiniband\/sw\/rxe\/rxe_verbs.c:1032 rxe_post_recv+0x1ee\/0x480 [rdma_rxe]\n...\n[ 5305.686979] [    T138]  smbd_post_recv+0x445\/0xc10 [cifs]\n[ 5305.687135] [    T138]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[ 5305.687149] [    T138]  ? __kasan_check_write+0x14\/0x30\n[ 5305.687185] [    T138]  ? __pfx_smbd_post_recv+0x10\/0x10 [cifs]\n[ 5305.687329] [    T138]  ? __pfx__raw_spin_lock_irqsave+0x10\/0x10\n[ 5305.687356] [    T138]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[ 5305.687368] [    T138]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[ 5305.687378] [    T138]  ? _raw_spin_unlock_irqrestore+0x11\/0x60\n[ 5305.687389] [    T138]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[ 5305.687399] [    T138]  ? get_receive_buffer+0x168\/0x210 [cifs]\n[ 5305.687555] [    T138]  smbd_post_send_credits+0x382\/0x4b0 [cifs]\n[ 5305.687701] [    T138]  ? __pfx_smbd_post_send_credits+0x10\/0x10 [cifs]\n[ 5305.687855] [    T138]  ? __pfx___schedule+0x10\/0x10\n[ 5305.687865] [    T138]  ? __pfx__raw_spin_lock_irq+0x10\/0x10\n[ 5305.687875] [    T138]  ? queue_delayed_work_on+0x8e\/0xa0\n[ 5305.687889] [    T138]  process_one_work+0x629\/0xf80\n[ 5305.687908] [    T138]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[ 5305.687917] [    T138]  ? __kasan_check_write+0x14\/0x30\n[ 5305.687933] [    T138]  worker_thread+0x87f\/0x1570\n...\n\nIt means rxe_post_recv was called after rdma_destroy_qp().\nThis happened because put_receive_buffer() was triggered\nby ib_drain_qp() and called:\nqueue_work(info->workqueue, &info->post_send_credits_work);"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3fabb1236f2e3ad78d531be0a4ad9f4a4ccdda87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ae90a2baf923e85eb037b636aa641250bf4220f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9dcbbcf9145b68aa85c40947311a6907277e097","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39933","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.090","lastModified":"2025-10-04T08:15:46.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: let recv_done verify data_offset, data_length and remaining_data_length\n\nThis is inspired by the related server fixes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/581fb78e0388b78911b0c920e4073737090c8b5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f57e53ea252363234f86674db475839e5b87102e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39934","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.210","lastModified":"2025-10-04T08:15:46.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge: anx7625: Fix NULL pointer dereference with early IRQ\n\nIf the interrupt occurs before resource initialization is complete, the\ninterrupt handler\/worker may access uninitialized data such as the I2C\ntcpc_client device, potentially leading to NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0da73f7827691a5e2265b110d5fe12f29535ec92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/15a77e1ab0a994d69b471c76b8d01117128dda26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a7ea294d57fb61485d11b3f2241d631d73025cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51a501e990a353a4f15da6bab295b28e5d118f64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a10f910c77f280327b481e77eab909934ec508f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9a089d0a6d537d0f2061c8a37a7de535ce0310e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39935","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.333","lastModified":"2025-10-04T08:15:46.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codec: sma1307: Fix memory corruption in sma1307_setting_loaded()\n\nThe sma1307->set.header_size is how many integers are in the header\n(there are 8 of them) but instead of allocating space of 8 integers\nwe allocate 8 bytes.  This leads to memory corruption when we copy data\nit on the next line:\n\n        memcpy(sma1307->set.header, data,\n               sma1307->set.header_size * sizeof(int));\n\nAlso since we're immediately copying over the memory in ->set.header,\nthere is no need to zero it in the allocator.  Use devm_kmalloc_array()\nto allocate the memory instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/78338108b5a856dc98223a335f147846a8a18c51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd59ca8f75dbb42a67fcae975c766114644e36c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39936","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.460","lastModified":"2025-10-04T08:15:46.460","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: ccp - Always pass in an error pointer to __sev_platform_shutdown_locked()\n\nWhen\n\n  9770b428b1a2 (\"crypto: ccp - Move dev_info\/err messages for SEV\/SNP init and shutdown\")\n\nmoved the error messages dumping so that they don't need to be issued by\nthe callers, it missed the case where __sev_firmware_shutdown() calls\n__sev_platform_shutdown_locked() with a NULL argument which leads to\na NULL ptr deref on the shutdown path, during suspend to disk:\n\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: Oops: 0000 [#1] SMP NOPTI\n  CPU: 0 UID: 0 PID: 983 Comm: hib.sh Not tainted 6.17.0-rc4+ #1 PREEMPT(voluntary)\n  Hardware name: Supermicro Super Server\/H12SSL-i, BIOS 2.5 09\/08\/2022\n  RIP: 0010:__sev_platform_shutdown_locked.cold+0x0\/0x21 [ccp]\n\nThat rIP is:\n\n  00000000000006fd <__sev_platform_shutdown_locked.cold>:\n   6fd:   8b 13                   mov    (%rbx),%edx\n   6ff:   48 8b 7d 00             mov    0x0(%rbp),%rdi\n   703:   89 c1                   mov    %eax,%ecx\n\n  Code: 74 05 31 ff 41 89 3f 49 8b 3e 89 ea 48 c7 c6 a0 8e 54 a0 41 bf 92 ff ff ff e8 e5 2e 09 e1 c6 05 2a d4 38 00 01 e9 26 af ff ff <8b> 13 48 8b 7d 00 89 c1 48 c7 c6 18 90 54 a0 89 44 24 04 e8 c1 2e\n  RSP: 0018:ffffc90005467d00 EFLAGS: 00010282\n  RAX: 00000000ffffff92 RBX: 0000000000000000 RCX: 0000000000000000\n  \t\t\t     ^^^^^^^^^^^^^^^^\nand %rbx is nice and clean.\n\n  Call Trace:\n   <TASK>\n   __sev_firmware_shutdown.isra.0\n   sev_dev_destroy\n   psp_dev_destroy\n   sp_destroy\n   pci_device_shutdown\n   device_shutdown\n   kernel_power_off\n   hibernate.cold\n   state_store\n   kernfs_fop_write_iter\n   vfs_write\n   ksys_write\n   do_syscall_64\n   entry_SYSCALL_64_after_hwframe\n\nPass in a pointer to the function-local error var in the caller.\n\nWith that addressed, suspending the ccp shows the error properly at\nleast:\n\n  ccp 0000:47:00.1: sev command 0x2 timed out, disabling PSP\n  ccp 0000:47:00.1: SEV: failed to SHUTDOWN error 0x0, rc -110\n  SEV-SNP: Leaking PFN range 0x146800-0x146a00\n  SEV-SNP: PFN 0x146800 unassigned, dumping non-zero entries in 2M PFN region: [0x146800 - 0x146a00]\n  ...\n  ccp 0000:47:00.1: SEV-SNP firmware shutdown failed, rc -16, error 0x0\n  ACPI: PM: Preparing to enter system sleep state S5\n  kvm: exiting hardware virtualization\n  reboot: Power down\n\nBtw, this driver is crying to be cleaned up to pass in a proper I\/O\nstruct which can be used to store information between the different\nfunctions, otherwise stuff like that will happen in the future again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46834d90a9a13549264b9581067d8f746b4b36cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc509293c9d4f4f74e776f4a0bbb61f63c041938","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39937","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.593","lastModified":"2025-10-04T08:15:46.593","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rfkill: gpio: Fix crash due to dereferencering uninitialized pointer\n\nSince commit 7d5e9737efda (\"net: rfkill: gpio: get the name and type from\ndevice property\") rfkill_find_type() gets called with the possibly\nuninitialized \"const char *type_name;\" local variable.\n\nOn x86 systems when rfkill-gpio binds to a \"BCM4752\" or \"LNV4752\"\nacpi_device, the rfkill->type is set based on the ACPI acpi_device_id:\n\n        rfkill->type = (unsigned)id->driver_data;\n\nand there is no \"type\" property so device_property_read_string() will fail\nand leave type_name uninitialized, leading to a potential crash.\n\nrfkill_find_type() does accept a NULL pointer, fix the potential crash\nby initializing type_name to NULL.\n\nNote likely sofar this has not been caught because:\n\n1. Not many x86 machines actually have a \"BCM4752\"\/\"LNV4752\" acpi_device\n2. The stack happened to contain NULL where type_name is stored"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/184f608a68f96794e8fe58cd5535014d53622cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21a39b958b4bcf44f7674bfbbe1bbb8cad0d842d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21ba85d9d508422ca9e6698463ff9357c928c22d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47ade5f9d70b23a119ec20b1c6504864b2543a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/689aee35ce671aab752f159e5c8e66d7685e6887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8793e7a8e1b60131a825457174ed6398111daeb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada2282259243387e6b6e89239aeb4897e62f051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6f56a44e4c1014b08859dcf04ed246500e310e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39938","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.730","lastModified":"2025-10-04T08:15:46.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: qcom: q6apm-lpass-dais: Fix NULL pointer dereference if source graph failed\n\nIf earlier opening of source graph fails (e.g. ADSP rejects due to\nincorrect audioreach topology), the graph is closed and\n\"dai_data->graph[dai->id]\" is assigned NULL.  Preparing the DAI for sink\ngraph continues though and next call to q6apm_lpass_dai_prepare()\nreceives dai_data->graph[dai->id]=NULL leading to NULL pointer\nexception:\n\n  qcom-apm gprsvc:service:2:1: Error (1) Processing 0x01001002 cmd\n  qcom-apm gprsvc:service:2:1: DSP returned error[1001002] 1\n  q6apm-lpass-dais 30000000.remoteproc:glink-edge:gpr:service@1:bedais: fail to start APM port 78\n  q6apm-lpass-dais 30000000.remoteproc:glink-edge:gpr:service@1:bedais: ASoC: error at snd_soc_pcm_dai_prepare on TX_CODEC_DMA_TX_3: -22\n  Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a8\n  ...\n  Call trace:\n   q6apm_graph_media_format_pcm+0x48\/0x120 (P)\n   q6apm_lpass_dai_prepare+0x110\/0x1b4\n   snd_soc_pcm_dai_prepare+0x74\/0x108\n   __soc_pcm_prepare+0x44\/0x160\n   dpcm_be_dai_prepare+0x124\/0x1c0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01d1ba106c9e02a2e7d41e07be49031a0ff0ecaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/411f7d4f7038200cdf6d4f71ee31026ebf2dfedb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68f27f7c7708183e7873c585ded2f1b057ac5b97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c534dbfd1726502abcf0bd393a04214f62c050b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc336b242ea7e7a09b3ab9f885341455ca0a3bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39939","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.860","lastModified":"2025-10-04T08:15:46.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/s390: Fix memory corruption when using identity domain\n\nzpci_get_iommu_ctrs() returns counter information to be reported as part\nof device statistics; these counters are stored as part of the s390_domain.\nThe problem, however, is that the identity domain is not backed by an\ns390_domain and so the conversion via to_s390_domain() yields a bad address\nthat is zero'd initially and read on-demand later via a sysfs read.\nThese counters aren't necessary for the identity domain; just return NULL\nin this case.\n\nThis issue was discovered via KASAN with reports that look like:\nBUG: KASAN: global-out-of-bounds in zpci_fmb_enable_device\nwhen using the identity domain for a device on s390."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17a58caf3863163c4a84a218a9649be2c8061443","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3506e9bcc777ed6af2ab631c86a9990ed97b474","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39940","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:46.973","lastModified":"2025-10-04T08:15:46.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm-stripe: fix a possible integer overflow\n\nThere's a possible integer overflow in stripe_io_hints if we have too\nlarge chunk size. Test if the overflow happened, and if it did, don't set\nlimits->io_min and limits->io_opt;"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1071d560afb4c245c2076494226df47db5a35708","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee27658c239b27721397f3e4eb16370b5cce596e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8f64254bca5ae58f3b679441962bda4c409f659","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39941","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.103","lastModified":"2025-10-04T08:15:47.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nzram: fix slot write race condition\n\nParallel concurrent writes to the same zram index result in leaked\nzsmalloc handles.  Schematically we can have something like this:\n\nCPU0                              CPU1\nzram_slot_lock()\nzs_free(handle)\nzram_slot_lock()\n\t\t\t\tzram_slot_lock()\n\t\t\t\tzs_free(handle)\n\t\t\t\tzram_slot_lock()\n\ncompress\t\t\tcompress\nhandle = zs_malloc()\t\thandle = zs_malloc()\nzram_slot_lock\nzram_set_handle(handle)\nzram_slot_lock\n\t\t\t\tzram_slot_lock\n\t\t\t\tzram_set_handle(handle)\n\t\t\t\tzram_slot_lock\n\nEither CPU0 or CPU1 zsmalloc handle will leak because zs_free() is done\ntoo early.  In fact, we need to reset zram entry right before we set its\nnew handle, all under the same slot lock scope."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ce4be9e4307c5a60701ff6e0cafa74caffdc54ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff750e9f2c4d63854c33967d1646b5e89a9a19a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39942","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.230","lastModified":"2025-10-04T08:15:47.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: smbdirect: verify remaining_data_length respects max_fragmented_recv_size\n\nThis is inspired by the check for data_offset + data_length."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/196a3a7676d726ee67621ea2bf3b7815ac2685b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9644798294c7287e65a7b26e35aa6d2ce3345bcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c64b915bb3d9339adcae5db4be2c35ffbef5e615","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3cb3f209d35c44b7ee74f77ed27ebb28995b9ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1868ba37fd27c6a68e31565402b154beaa65df0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39943","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.357","lastModified":"2025-10-04T08:15:47.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: smbdirect: validate data_offset and data_length field of smb_direct_data_transfer\n\nIf data_offset and data_length of smb_direct_data_transfer struct are\ninvalid, out of bounds issue could happen.\nThis patch validate data_offset and data_length field in recv_done."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5282491fc49d5614ac6ddcd012e5743eecb6a67c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/529b121b00a6ee3c88fb3c01b443b2b81f686d48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/773fddf976d282ef059c36c575ddb81567acd6bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8be498fcbd5b07272f560b45981d4b9e5a2ad885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdaab5c6538e250a9654127e688ecbbeb6f771d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb0378dde086363046ed3d7db7f126fc3f76fd70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39944","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.480","lastModified":"2025-10-04T08:15:47.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix use-after-free bugs in otx2_sync_tstamp()\n\nThe original code relies on cancel_delayed_work() in otx2_ptp_destroy(),\nwhich does not ensure that the delayed work item synctstamp_work has fully\ncompleted if it was already running. This leads to use-after-free scenarios\nwhere otx2_ptp is deallocated by otx2_ptp_destroy(), while synctstamp_work\nremains active and attempts to dereference otx2_ptp in otx2_sync_tstamp().\nFurthermore, the synctstamp_work is cyclic, the likelihood of triggering\nthe bug is nonnegligible.\n\nA typical race condition is illustrated below:\n\nCPU 0 (cleanup)           | CPU 1 (delayed work callback)\notx2_remove()             |\n  otx2_ptp_destroy()      | otx2_sync_tstamp()\n    cancel_delayed_work() |\n    kfree(ptp)            |\n                          |   ptp = container_of(...); \/\/UAF\n                          |   ptp-> \/\/UAF\n\nThis is confirmed by a KASAN report:\n\nBUG: KASAN: slab-use-after-free in __run_timer_base.part.0+0x7d7\/0x8c0\nWrite of size 8 at addr ffff88800aa09a18 by task bash\/136\n...\nCall Trace:\n <IRQ>\n dump_stack_lvl+0x55\/0x70\n print_report+0xcf\/0x610\n ? __run_timer_base.part.0+0x7d7\/0x8c0\n kasan_report+0xb8\/0xf0\n ? __run_timer_base.part.0+0x7d7\/0x8c0\n __run_timer_base.part.0+0x7d7\/0x8c0\n ? __pfx___run_timer_base.part.0+0x10\/0x10\n ? __pfx_read_tsc+0x10\/0x10\n ? ktime_get+0x60\/0x140\n ? lapic_next_event+0x11\/0x20\n ? clockevents_program_event+0x1d4\/0x2a0\n run_timer_softirq+0xd1\/0x190\n handle_softirqs+0x16a\/0x550\n irq_exit_rcu+0xaf\/0xe0\n sysvec_apic_timer_interrupt+0x70\/0x80\n <\/IRQ>\n...\nAllocated by task 1:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n __kasan_kmalloc+0x7f\/0x90\n otx2_ptp_init+0xb1\/0x860\n otx2_probe+0x4eb\/0xc30\n local_pci_probe+0xdc\/0x190\n pci_device_probe+0x2fe\/0x470\n really_probe+0x1ca\/0x5c0\n __driver_probe_device+0x248\/0x310\n driver_probe_device+0x44\/0x120\n __driver_attach+0xd2\/0x310\n bus_for_each_dev+0xed\/0x170\n bus_add_driver+0x208\/0x500\n driver_register+0x132\/0x460\n do_one_initcall+0x89\/0x300\n kernel_init_freeable+0x40d\/0x720\n kernel_init+0x1a\/0x150\n ret_from_fork+0x10c\/0x1a0\n ret_from_fork_asm+0x1a\/0x30\n\nFreed by task 136:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3a\/0x60\n __kasan_slab_free+0x3f\/0x50\n kfree+0x137\/0x370\n otx2_ptp_destroy+0x38\/0x80\n otx2_remove+0x10d\/0x4c0\n pci_device_remove+0xa6\/0x1d0\n device_release_driver_internal+0xf8\/0x210\n pci_stop_bus_device+0x105\/0x150\n pci_stop_and_remove_bus_device_locked+0x15\/0x30\n remove_store+0xcc\/0xe0\n kernfs_fop_write_iter+0x2c3\/0x440\n vfs_write+0x871\/0xd70\n ksys_write+0xee\/0x1c0\n do_syscall_64+0xac\/0x280\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n...\n\nReplace cancel_delayed_work() with cancel_delayed_work_sync() to ensure\nthat the delayed work item is properly canceled before the otx2_ptp is\ndeallocated.\n\nThis bug was initially identified through static analysis. To reproduce\nand test it, I simulated the OcteonTX2 PCI device in QEMU and introduced\nartificial delays within the otx2_sync_tstamp() function to increase the\nlikelihood of triggering the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2786879aebf363806a13d41e8d5f99202ddd23d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ca20bb7b4bde72110c3ae78423cbfdd0157aa36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2cfefa14ce8137b17f99683f968bebf134b6a48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8b4687151021db61841af983f1cb7be6915d4ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff27e23b311fed4d25e3852e27ba693416d4c7b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39945","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.613","lastModified":"2025-10-04T08:15:47.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncnic: Fix use-after-free bugs in cnic_delete_task\n\nThe original code uses cancel_delayed_work() in cnic_cm_stop_bnx2x_hw(),\nwhich does not guarantee that the delayed work item 'delete_task' has\nfully completed if it was already running. Additionally, the delayed work\nitem is cyclic, the flush_workqueue() in cnic_cm_stop_bnx2x_hw() only\nblocks and waits for work items that were already queued to the\nworkqueue prior to its invocation. Any work items submitted after\nflush_workqueue() is called are not included in the set of tasks that the\nflush operation awaits. This means that after the cyclic work items have\nfinished executing, a delayed work item may still exist in the workqueue.\nThis leads to use-after-free scenarios where the cnic_dev is deallocated\nby cnic_free_dev(), while delete_task remains active and attempt to\ndereference cnic_dev in cnic_delete_task().\n\nA typical race condition is illustrated below:\n\nCPU 0 (cleanup)              | CPU 1 (delayed work callback)\ncnic_netdev_event()          |\n  cnic_stop_hw()             | cnic_delete_task()\n    cnic_cm_stop_bnx2x_hw()  | ...\n      cancel_delayed_work()  | \/* the queue_delayed_work()\n      flush_workqueue()      |    executes after flush_workqueue()*\/\n                             | queue_delayed_work()\n  cnic_free_dev(dev)\/\/free   | cnic_delete_task() \/\/new instance\n                             |   dev = cp->dev; \/\/use\n\nReplace cancel_delayed_work() with cancel_delayed_work_sync() to ensure\nthat the cyclic delayed work item is properly canceled and that any\nongoing execution of the work item completes before the cnic_dev is\ndeallocated. Furthermore, since cancel_delayed_work_sync() uses\n__flush_work(work, true) to synchronously wait for any currently\nexecuting instance of the work item to finish, the flush_workqueue()\nbecomes redundant and should be removed.\n\nThis bug was identified through static analysis. To reproduce the issue\nand validate the fix, I simulated the cnic PCI device in QEMU and\nintroduced intentional delays — such as inserting calls to ssleep()\nwithin the cnic_delete_task() function — to increase the likelihood\nof triggering the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0405055930264ea8fd26f4131466fa7652e5e47d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0627e1481676669cae2df0d85b5ff13e7d24c390","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e33a7eed587062ca8161ad1f4584882a860d697","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b6a5b0a6b392263c3767fc945b311ea04b34bbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8eeb2091e72d75df8ceaa2172638d61b4cf8929a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfa7d9b1e3a8604afc84e9e51d789c29574fb216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1fcd4a9c09feac0902a65615e866dbf22616125","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fde6e73189f40ebcf0633aed2b68e731c25f3aa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39946","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.747","lastModified":"2025-10-04T08:15:47.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntls: make sure to abort the stream if headers are bogus\n\nNormally we wait for the socket to buffer up the whole record\nbefore we service it. If the socket has a tiny buffer, however,\nwe read out the data sooner, to prevent connection stalls.\nMake sure that we abort the connection when we find out late\nthat the record is actually invalid. Retrying the parsing is\nfine in itself but since we copy some more data each time\nbefore we parse we can overflow the allocated skb space.\n\nConstructing a scenario in which we're under pressure without\nenough data in the socket to parse the length upfront is quite\nhard. syzbot figured out a way to do this by serving us the header\nin small OOB sends, and then filling in the recvbuf with a large\nnormal send.\n\nMake sure that tls_rx_msg_size() aborts strp, if we reach\nan invalid record there's really no way to recover."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0aeb54ac4cd5cf8f60131b4d9ec0b6dc9c27b20d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/208640e6225cc929a05adbf79d1df558add3e231","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cefe5be73886f383639fe0850bb72d5b568a7b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61ca2da5fb8f433ce8bbd1657c84a86272133e6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b36462146d86b1f22e594fe4dae611dffacfb203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39947","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.867","lastModified":"2025-10-04T08:15:47.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Harden uplink netdev access against device unbind\n\nThe function mlx5_uplink_netdev_get() gets the uplink netdevice\npointer from mdev->mlx5e_res.uplink_netdev. However, the netdevice can\nbe removed and its pointer cleared when unbound from the mlx5_core.eth\ndriver. This results in a NULL pointer, causing a kernel panic.\n\n BUG: unable to handle page fault for address: 0000000000001300\n at RIP: 0010:mlx5e_vport_rep_load+0x22a\/0x270 [mlx5_core]\n Call Trace:\n  <TASK>\n  mlx5_esw_offloads_rep_load+0x68\/0xe0 [mlx5_core]\n  esw_offloads_enable+0x593\/0x910 [mlx5_core]\n  mlx5_eswitch_enable_locked+0x341\/0x420 [mlx5_core]\n  mlx5_devlink_eswitch_mode_set+0x17e\/0x3a0 [mlx5_core]\n  devlink_nl_eswitch_set_doit+0x60\/0xd0\n  genl_family_rcv_msg_doit+0xe0\/0x130\n  genl_rcv_msg+0x183\/0x290\n  netlink_rcv_skb+0x4b\/0xf0\n  genl_rcv+0x24\/0x40\n  netlink_unicast+0x255\/0x380\n  netlink_sendmsg+0x1f3\/0x420\n  __sock_sendmsg+0x38\/0x60\n  __sys_sendto+0x119\/0x180\n  do_syscall_64+0x53\/0x1d0\n  entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n\nEnsure the pointer is valid before use by checking it for NULL. If it\nis valid, immediately call netdev_hold() to take a reference, and\npreventing the netdevice from being freed while it is in use."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cb17c88edd3a1c7aa6bc880dcdb35a6866fcb2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b4be64fd9fec16418f365c2d8e47a7566e9eba5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8df354eb2dd63d111ed5ae2e956e0dbb22bcf93b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1f3db4e7a3be29fc17f01850f162363f919370d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39948","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:47.990","lastModified":"2025-10-04T08:15:47.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix Rx page leak on multi-buffer frames\n\nThe ice_put_rx_mbuf() function handles calling ice_put_rx_buf() for each\nbuffer in the current frame. This function was introduced as part of\nhandling multi-buffer XDP support in the ice driver.\n\nIt works by iterating over the buffers from first_desc up to 1 plus the\ntotal number of fragments in the frame, cached from before the XDP program\nwas executed.\n\nIf the hardware posts a descriptor with a size of 0, the logic used in\nice_put_rx_mbuf() breaks. Such descriptors get skipped and don't get added\nas fragments in ice_add_xdp_frag. Since the buffer isn't counted as a\nfragment, we do not iterate over it in ice_put_rx_mbuf(), and thus we don't\ncall ice_put_rx_buf().\n\nBecause we don't call ice_put_rx_buf(), we don't attempt to re-use the\npage or free it. This leaves a stale page in the ring, as we don't\nincrement next_to_alloc.\n\nThe ice_reuse_rx_page() assumes that the next_to_alloc has been incremented\nproperly, and that it always points to a buffer with a NULL page. Since\nthis function doesn't check, it will happily recycle a page over the top\nof the next_to_alloc buffer, losing track of the old page.\n\nNote that this leak only occurs for multi-buffer frames. The\nice_put_rx_mbuf() function always handles at least one buffer, so a\nsingle-buffer frame will always get handled correctly. It is not clear\nprecisely why the hardware hands us descriptors with a size of 0 sometimes,\nbut it happens somewhat regularly with \"jumbo frames\" used by 9K MTU.\n\nTo fix ice_put_rx_mbuf(), we need to make sure to call ice_put_rx_buf() on\nall buffers between first_desc and next_to_clean. Borrow the logic of a\nsimilar function in i40e used for this same purpose. Use the same logic\nalso in ice_get_pgcnts().\n\nInstead of iterating over just the number of fragments, use a loop which\niterates until the current index reaches to the next_to_clean element just\npast the current frame. Unlike i40e, the ice_put_rx_mbuf() function does\ncall ice_put_rx_buf() on the last buffer of the frame indicating the end of\npacket.\n\nFor non-linear (multi-buffer) frames, we need to take care when adjusting\nthe pagecnt_bias. An XDP program might release fragments from the tail of\nthe frame, in which case that fragment page is already released. Only\nupdate the pagecnt_bias for the first descriptor and fragments still\nremaining post-XDP program. Take care to only access the shared info for\nfragmented buffers, as this avoids a significant cache miss.\n\nThe xdp_xmit value only needs to be updated if an XDP program is run, and\nonly once per packet. Drop the xdp_xmit pointer argument from\nice_put_rx_mbuf(). Instead, set xdp_xmit in the ice_clean_rx_irq() function\ndirectly. This avoids needing to pass the argument and avoids an extra\nbit-wise OR for each buffer in the frame.\n\nMove the increment of the ntc local variable to ensure its updated *before*\nall calls to ice_get_pgcnts() or ice_put_rx_mbuf(), as the loop logic\nrequires the index of the element just after the current frame.\n\nNow that we use an index pointer in the ring to identify the packet, we no\nlonger need to track or cache the number of fragments in the rx_ring."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/80555adb5c892f0e21d243ae96ed997ee520aea9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84bf1ac85af84d354c7a2fdbdc0d4efc8aaec34b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcb5718ebfe7fd64144e3399280440cce361a3ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39949","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:48.120","lastModified":"2025-10-04T08:15:48.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nqed: Don't collect too many protection override GRC elements\n\nIn the protection override dump path, the firmware can return far too\nmany GRC elements, resulting in attempting to write past the end of the\npreviously-kmalloc'ed dump buffer.\n\nThis will result in a kernel panic with reason:\n\n BUG: unable to handle kernel paging request at ADDRESS\n\nwhere \"ADDRESS\" is just past the end of the protection override dump\nbuffer. The start address of the buffer is:\n p_hwfn->cdev->dbg_features[DBG_FEATURE_PROTECTION_OVERRIDE].dump_buf\nand the size of the buffer is buf_size in the same data structure.\n\nThe panic can be arrived at from either the qede Ethernet driver path:\n\n    [exception RIP: qed_grc_dump_addr_range+0x108]\n qed_protection_override_dump at ffffffffc02662ed [qed]\n qed_dbg_protection_override_dump at ffffffffc0267792 [qed]\n qed_dbg_feature at ffffffffc026aa8f [qed]\n qed_dbg_all_data at ffffffffc026b211 [qed]\n qed_fw_fatal_reporter_dump at ffffffffc027298a [qed]\n devlink_health_do_dump at ffffffff82497f61\n devlink_health_report at ffffffff8249cf29\n qed_report_fatal_error at ffffffffc0272baf [qed]\n qede_sp_task at ffffffffc045ed32 [qede]\n process_one_work at ffffffff81d19783\n\nor the qedf storage driver path:\n\n    [exception RIP: qed_grc_dump_addr_range+0x108]\n qed_protection_override_dump at ffffffffc068b2ed [qed]\n qed_dbg_protection_override_dump at ffffffffc068c792 [qed]\n qed_dbg_feature at ffffffffc068fa8f [qed]\n qed_dbg_all_data at ffffffffc0690211 [qed]\n qed_fw_fatal_reporter_dump at ffffffffc069798a [qed]\n devlink_health_do_dump at ffffffff8aa95e51\n devlink_health_report at ffffffff8aa9ae19\n qed_report_fatal_error at ffffffffc0697baf [qed]\n qed_hw_err_notify at ffffffffc06d32d7 [qed]\n qed_spq_post at ffffffffc06b1011 [qed]\n qed_fcoe_destroy_conn at ffffffffc06b2e91 [qed]\n qedf_cleanup_fcport at ffffffffc05e7597 [qedf]\n qedf_rport_event_handler at ffffffffc05e7bf7 [qedf]\n fc_rport_work at ffffffffc02da715 [libfc]\n process_one_work at ffffffff8a319663\n\nResolve this by clamping the firmware's return value to the maximum\nnumber of legal elements the firmware should return."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25672c620421fa2105703a94a29a03487245e6d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56c0a2a9ddc2f5b5078c5fb0f81ab76bbc3d4c37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/660b2a8f5a306a28c7efc1b4990ecc4912a68f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70affe82e38fd3dc76b9c68b5a1989f11e7fa0f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8141910869596b7a3a5d9b46107da2191d523f82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0e24571a7b2f8c8f06e25d3417253ebbdbc8d5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea53e6a47e148b490b1c652fc65d2de5a086df76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39950","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:48.253","lastModified":"2025-10-04T08:15:48.253","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/tcp: Fix a NULL pointer dereference when using TCP-AO with TCP_REPAIR\n\nA NULL pointer dereference can occur in tcp_ao_finish_connect() during a\nconnect() system call on a socket with a TCP-AO key added and TCP_REPAIR\nenabled.\n\nThe function is called with skb being NULL and attempts to dereference it\non tcp_hdr(skb)->seq without a prior skb validation.\n\nFix this by checking if skb is NULL before dereferencing it.\n\nThe commentary is taken from bpf_skops_established(), which is also called\nin the same flow. Unlike the function being patched,\nbpf_skops_established() validates the skb before dereferencing it.\n\nint main(void){\n\tstruct sockaddr_in sockaddr;\n\tstruct tcp_ao_add tcp_ao;\n\tint sk;\n\tint one = 1;\n\n\tmemset(&sockaddr,'\\0',sizeof(sockaddr));\n\tmemset(&tcp_ao,'\\0',sizeof(tcp_ao));\n\n\tsk = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\n\tsockaddr.sin_family = AF_INET;\n\n\tmemcpy(tcp_ao.alg_name,\"cmac(aes128)\",12);\n\tmemcpy(tcp_ao.key,\"ABCDEFGHABCDEFGH\",16);\n\ttcp_ao.keylen = 16;\n\n\tmemcpy(&tcp_ao.addr,&sockaddr,sizeof(sockaddr));\n\n\tsetsockopt(sk, IPPROTO_TCP, TCP_AO_ADD_KEY, &tcp_ao,\n\tsizeof(tcp_ao));\n\tsetsockopt(sk, IPPROTO_TCP, TCP_REPAIR, &one, sizeof(one));\n\n\tsockaddr.sin_family = AF_INET;\n\tsockaddr.sin_port = htobe16(123);\n\n\tinet_aton(\"127.0.0.1\", &sockaddr.sin_addr);\n\n\tconnect(sk,(struct sockaddr *)&sockaddr,sizeof(sockaddr));\n\nreturn 0;\n}\n\n$ gcc tcp-ao-nullptr.c -o tcp-ao-nullptr -Wall\n$ unshare -Urn\n\nBUG: kernel NULL pointer dereference, address: 00000000000000b6\nPGD 1f648d067 P4D 1f648d067 PUD 1982e8067 PMD 0\nOops: Oops: 0000 [#1] SMP NOPTI\nHardware name: VMware, Inc. VMware Virtual Platform\/440BX Desktop\nReference Platform, BIOS 6.00 11\/12\/2020\nRIP: 0010:tcp_ao_finish_connect (net\/ipv4\/tcp_ao.c:1182)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e7bba08923ebc675b1f0e0e0959e68e53047838","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f445eb259906b61a518487a790e11d07d31738c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/993b734d31ab804747ac961b1ee664b023c3b5fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39951","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:48.380","lastModified":"2025-10-04T08:15:48.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\num: virtio_uml: Fix use-after-free after put_device in probe\n\nWhen register_virtio_device() fails in virtio_uml_probe(),\nthe code sets vu_dev->registered = 1 even though\nthe device was not successfully registered.\nThis can lead to use-after-free or other issues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00e98b5a69034b251bb36dc6e7123d7648e218e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14c231959a16ca41bfdcaede72483362a8c645d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f364023ddcfe83f7073b973a9cb98584b7f2a46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e94e44c9cb30d7a383d8ac227f24a8c9326b770","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ebf70cf181651fe3f2e44e95e7e5073d594c9c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaf900a83508c8cd5cdf765e7749f9076196ec7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2ff91255e0157b356cff115d8dc3eeb5162edf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39952","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:48.507","lastModified":"2025-10-04T08:15:48.507","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: avoid buffer overflow in WID string configuration\n\nFix the following copy overflow warning identified by Smatch checker.\n\n drivers\/net\/wireless\/microchip\/wilc1000\/wlan_cfg.c:184 wilc_wlan_parse_response_frame()\n        error: '__memcpy()' 'cfg->s[i]->str' copy overflow (512 vs 65537)\n\nThis patch introduces size check before accessing the memory buffer.\nThe checks are base on the WID type of received data from the firmware.\nFor WID string configuration, the size limit is determined by individual\nelement size in 'struct wilc_cfg_str_vals' that is maintained in 'len' field\nof 'struct wilc_cfg_str'."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2203ef417044b10a8563ade6a17c74183745d72e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6085291a1a5865d4ad70f0e5812d524ebd5d1711","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae50f8562306a7ea1cf3c9722f97ee244f974729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe9e4d0c39311d0f97b024147a0d155333f388b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-39953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T08:15:48.627","lastModified":"2025-10-04T08:15:48.627","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup: split cgroup_destroy_wq into 3 workqueues\n\nA hung task can occur during [1] LTP cgroup testing when repeatedly\nmounting\/unmounting perf_event and net_prio controllers with\nsystemd.unified_cgroup_hierarchy=1. The hang manifests in\ncgroup_lock_and_drain_offline() during root destruction.\n\nRelated case:\ncgroup_fj_function_perf_event cgroup_fj_function.sh perf_event\ncgroup_fj_function_net_prio cgroup_fj_function.sh net_prio\n\nCall Trace:\n\tcgroup_lock_and_drain_offline+0x14c\/0x1e8\n\tcgroup_destroy_root+0x3c\/0x2c0\n\tcss_free_rwork_fn+0x248\/0x338\n\tprocess_one_work+0x16c\/0x3b8\n\tworker_thread+0x22c\/0x3b0\n\tkthread+0xec\/0x100\n\tret_from_fork+0x10\/0x20\n\nRoot Cause:\n\nCPU0                            CPU1\nmount perf_event                umount net_prio\ncgroup1_get_tree                cgroup_kill_sb\nrebind_subsystems               \/\/ root destruction enqueues\n\t\t\t\t\/\/ cgroup_destroy_wq\n\/\/ kill all perf_event css\n                                \/\/ one perf_event css A is dying\n                                \/\/ css A offline enqueues cgroup_destroy_wq\n                                \/\/ root destruction will be executed first\n                                css_free_rwork_fn\n                                cgroup_destroy_root\n                                cgroup_lock_and_drain_offline\n                                \/\/ some perf descendants are dying\n                                \/\/ cgroup_destroy_wq max_active = 1\n                                \/\/ waiting for css A to die\n\nProblem scenario:\n1. CPU0 mounts perf_event (rebind_subsystems)\n2. CPU1 unmounts net_prio (cgroup_kill_sb), queuing root destruction work\n3. A dying perf_event CSS gets queued for offline after root destruction\n4. Root destruction waits for offline completion, but offline work is\n   blocked behind root destruction in cgroup_destroy_wq (max_active=1)\n\nSolution:\nSplit cgroup_destroy_wq into three dedicated workqueues:\ncgroup_offline_wq – Handles CSS offline operations\ncgroup_release_wq – Manages resource release\ncgroup_free_wq – Performs final memory deallocation\n\nThis separation eliminates blocking in the CSS free path while waiting for\noffline operations to complete.\n\n[1] https:\/\/github.com\/linux-test-project\/ltp\/blob\/master\/runtest\/controllers"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05e0b03447cf215ec384210441b34b7a3b16e8b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a1e3ec28e8062cd9f339aa6a942df9c5bcb6811","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79f919a89c9d06816dbdbbd168fa41d27411a7f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/993049c9b1355c78918344a6403427d53f9ee700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0c896bda7077aa5005473e2c5b3c27173313b4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cabadd7fd15f97090f752fd22dd7f876a0dc3dc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ded4d207a3209a834b6831ceec7f39b934c74802","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2795d1b92506e3adf52a298f7181032a1525e04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50470","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:42.380","lastModified":"2025-10-04T16:15:42.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxhci: Remove device endpoints from bandwidth list when freeing the device\n\nEndpoints are normally deleted from the bandwidth list when they are\ndropped, before the virt device is freed.\n\nIf xHC host is dying or being removed then the endpoints aren't dropped\ncleanly due to functions returning early to avoid interacting with a\nnon-accessible host controller.\n\nSo check and delete endpoints that are still on the bandwidth list when\nfreeing the virt device.\n\nSolves a list_del corruption kernel crash when unbinding xhci-pci,\ncaused by xhci_mem_cleanup() when it later tried to delete already freed\nendpoints from the bandwidth list.\n\nThis only affects hosts that use software bandwidth checking, which\ncurrenty is only the xHC in intel Panther Point PCH (Ivy Bridge)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3bf860a41e0f2fcea0ac3aae8f7ef887a7994b70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5aed5b7c2430ce318a8e62f752f181e66f0d1053","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e4ce28ad907aa54f13b21d5f1dc490525957b0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/678d2cc2041cc6ce05030852dce9ad42719abcfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f1cd9633d1f21efc13e8fc75be8f2b6bb85e38c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c892a81c7424b4f6a660cb9c249d354ccf3afeca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cebbc8d335d6bcc1316584f779c08f80287c6af8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0de39474078adef6ece7a183e34c15ce2c1d8d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50471","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:43.540","lastModified":"2025-10-04T16:15:43.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxen\/gntdev: Accommodate VMA splitting\n\nPrior to this commit, the gntdev driver code did not handle the\nfollowing scenario correctly with paravirtualized (PV) Xen domains:\n\n* User process sets up a gntdev mapping composed of two grant mappings\n  (i.e., two pages shared by another Xen domain).\n* User process munmap()s one of the pages.\n* User process munmap()s the remaining page.\n* User process exits.\n\nIn the scenario above, the user process would cause the kernel to log\nthe following messages in dmesg for the first munmap(), and the second\nmunmap() call would result in similar log messages:\n\n  BUG: Bad page map in process doublemap.test  pte:... pmd:...\n  page:0000000057c97bff refcount:1 mapcount:-1 \\\n    mapping:0000000000000000 index:0x0 pfn:...\n  ...\n  page dumped because: bad pte\n  ...\n  file:gntdev fault:0x0 mmap:gntdev_mmap [xen_gntdev] readpage:0x0\n  ...\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x46\/0x5e\n   print_bad_pte.cold+0x66\/0xb6\n   unmap_page_range+0x7e5\/0xdc0\n   unmap_vmas+0x78\/0xf0\n   unmap_region+0xa8\/0x110\n   __do_munmap+0x1ea\/0x4e0\n   __vm_munmap+0x75\/0x120\n   __x64_sys_munmap+0x28\/0x40\n   do_syscall_64+0x38\/0x90\n   entry_SYSCALL_64_after_hwframe+0x61\/0xcb\n   ...\n\nFor each munmap() call, the Xen hypervisor (if built with CONFIG_DEBUG)\nwould print out the following and trigger a general protection fault in\nthe affected Xen PV domain:\n\n  (XEN) d0v... Attempt to implicitly unmap d0's grant PTE ...\n  (XEN) d0v... Attempt to implicitly unmap d0's grant PTE ...\n\nAs of this writing, gntdev_grant_map structure's vma field (referred to\nas map->vma below) is mainly used for checking the start and end\naddresses of mappings. However, with split VMAs, these may change, and\nthere could be more than one VMA associated with a gntdev mapping.\nHence, remove the use of map->vma and rely on map->pages_vm_start for\nthe original start address and on (map->count << PAGE_SHIFT) for the\noriginal mapping size. Let the invalidate() and find_special_page()\nhooks use these.\n\nAlso, given that there can be multiple VMAs associated with a gntdev\nmapping, move the \"mmu_interval_notifier_remove(&map->notifier)\" call to\nthe end of gntdev_put_map, so that the MMU notifier is only removed\nafter the closing of the last remaining VMA.\n\nFinally, use an atomic to prevent inadvertent gntdev mapping re-use,\ninstead of using the map->live_grants atomic counter and\/or the map->vma\npointer (the latter of which is now removed). This prevents the\nuserspace from mmap()'ing (with MAP_FIXED) a gntdev mapping over the\nsame address range as a previously set up gntdev mapping. This scenario\ncan be summarized with the following call-trace, which was valid prior\nto this commit:\n\n  mmap\n    gntdev_mmap\n  mmap (repeat mmap with MAP_FIXED over the same address range)\n    gntdev_invalidate\n      unmap_grant_pages (sets 'being_removed' entries to true)\n        gnttab_unmap_refs_async\n    unmap_single_vma\n    gntdev_mmap (maps the shared pages again)\n  munmap\n    gntdev_invalidate\n      unmap_grant_pages\n        (no-op because 'being_removed' entries are true)\n    unmap_single_vma (For PV domains, Xen reports that a granted page\n      is being unmapped and triggers a general protection fault in the\n      affected domain, if Xen was built with CONFIG_DEBUG)\n\nThe fix for this last scenario could be worth its own commit, but we\nopted for a single commit, because removing the gntdev_grant_map\nstructure's vma field requires guarding the entry to gntdev_mmap(), and\nthe live_grants atomic counter is not sufficient on its own to prevent\nthe mmap() over a pre-existing mapping."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c6a888e352283a14f37b9b433cd598a1a3a7dd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fb4053d90caa9985b87ec0e0c32c66a55bdfa3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c13a4a0291b30191eff9ead8d010e1ca43a4d0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c16d0a4e6a436b4e7c92bead3fab55aaa4c1141","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdafa219ace013c594e2491158ad1b51f9923dde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50472","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:43.673","lastModified":"2025-10-04T16:15:43.673","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/mad: Don't call to function that might sleep while in atomic context\n\nTracepoints are not allowed to sleep, as such the following splat is\ngenerated due to call to ib_query_pkey() in atomic context.\n\nWARNING: CPU: 0 PID: 1888000 at kernel\/trace\/ring_buffer.c:2492 rb_commit+0xc1\/0x220\nCPU: 0 PID: 1888000 Comm: kworker\/u9:0 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-305.3.1.el8.x86_64 #1\n Hardware name: Red Hat KVM, BIOS 1.13.0-2.module_el8.3.0+555+a55c8938 04\/01\/2014\n Workqueue: ib-comp-unb-wq ib_cq_poll_work [ib_core]\n RIP: 0010:rb_commit+0xc1\/0x220\n RSP: 0000:ffffa8ac80f9bca0 EFLAGS: 00010202\n RAX: ffff8951c7c01300 RBX: ffff8951c7c14a00 RCX: 0000000000000246\n RDX: ffff8951c707c000 RSI: ffff8951c707c57c RDI: ffff8951c7c14a00\n RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\n R10: ffff8951c7c01300 R11: 0000000000000001 R12: 0000000000000246\n R13: 0000000000000000 R14: ffffffff964c70c0 R15: 0000000000000000\n FS:  0000000000000000(0000) GS:ffff8951fbc00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f20e8f39010 CR3: 000000002ca10005 CR4: 0000000000170ef0\n Call Trace:\n  ring_buffer_unlock_commit+0x1d\/0xa0\n  trace_buffer_unlock_commit_regs+0x3b\/0x1b0\n  trace_event_buffer_commit+0x67\/0x1d0\n  trace_event_raw_event_ib_mad_recv_done_handler+0x11c\/0x160 [ib_core]\n  ib_mad_recv_done+0x48b\/0xc10 [ib_core]\n  ? trace_event_raw_event_cq_poll+0x6f\/0xb0 [ib_core]\n  __ib_process_cq+0x91\/0x1c0 [ib_core]\n  ib_cq_poll_work+0x26\/0x80 [ib_core]\n  process_one_work+0x1a7\/0x360\n  ? create_worker+0x1a0\/0x1a0\n  worker_thread+0x30\/0x390\n  ? create_worker+0x1a0\/0x1a0\n  kthread+0x116\/0x130\n  ? kthread_flush_work_fn+0x10\/0x10\n  ret_from_fork+0x35\/0x40\n ---[ end trace 78ba8509d3830a16 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47e31b86edff36f2d26cbc88ce695d98ff804178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c20311d76cbaeb7ed2ecf9c8b8322f8fc4a7ae3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cea70a572c0cb9728d728cfebe7d5bd485e97513","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa8a2f3be78e4585996bcf4c15e4504441a4c7a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50473","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:43.793","lastModified":"2025-10-04T16:15:43.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: Init completion before kobject_init_and_add()\n\nIn cpufreq_policy_alloc(), it will call uninitialed completion in\ncpufreq_sysfs_release() when kobject_init_and_add() fails. And\nthat will cause a crash such as the following page fault in complete:\n\nBUG: unable to handle page fault for address: fffffffffffffff8\n[..]\nRIP: 0010:complete+0x98\/0x1f0\n[..]\nCall Trace:\n kobject_put+0x1be\/0x4c0\n cpufreq_online.cold+0xee\/0x1fd\n cpufreq_add_dev+0x183\/0x1e0\n subsys_interface_register+0x3f5\/0x4e0\n cpufreq_register_driver+0x3b7\/0x670\n acpi_cpufreq_init+0x56c\/0x1000 [acpi_cpufreq]\n do_one_initcall+0x13d\/0x780\n do_init_module+0x1c3\/0x630\n load_module+0x6e67\/0x73b0\n __do_sys_finit_module+0x181\/0x240\n do_syscall_64+0x35\/0x80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cdd91a9163248935720927531066b74f57aa43b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c51054896bcce1d33d39fead2af73fec24f40b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb4c98f20dfca1237de2e3dfdbe78d156784fd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d88540acfc7a17079021d866de914112c396edb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e379b88a8f8cffc99b318e028705ed9e3da0e1e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7c0c943ed675b66d4bbb16c51c6a3bb58da047e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50474","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:43.910","lastModified":"2025-10-04T16:15:43.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmacintosh: fix possible memory leak in macio_add_one_device()\n\nAfer commit 1fa5ae857bb1 (\"driver core: get rid of struct device's\nbus_id string array\"), the name of device is allocated dynamically. It\nneeds to be freed when of_device_register() fails. Call put_device() to\ngive up the reference that's taken in device_initialize(), so that it\ncan be freed in kobject_cleanup() when the refcount hits 0.\n\nmacio device is freed in macio_release_dev(), so the kfree() can be\nremoved."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19ded60b40e86b0903c8d5bd0161437ed5107a8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ac0a7059b7bcbed35bfffa34a82c9a9e99638ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35858b87a943917fa30172aa4bf01ce7adbcb42c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a866ff6fc2232c8e393cdb55ffb8ce947349e03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ca86eae55a2f006e6c1edd2029b2cacb6979515","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76837e7f6b30da72ad59f56291e22804a219e015","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa9054267366ff0a382d403d17728e21951ddbb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b29a2f1dd33ae9b94821ab2f4d398b9081786748","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca765257feb89dacf604ced9cd233db5f865dee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50475","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.050","lastModified":"2025-10-04T16:15:44.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/core: Make sure \"ib_port\" is valid when access sysfs node\n\nThe \"ib_port\" structure must be set before adding the sysfs kobject,\nand reset after removing it, otherwise it may crash when accessing\nthe sysfs node:\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000050\n  Mem abort info:\n    ESR = 0x96000006\n    Exception class = DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n  Data abort info:\n    ISV = 0, ISS = 0x00000006\n    CM = 0, WnR = 0\n  user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000e85f5ba5\n  [0000000000000050] pgd=0000000848fd9003, pud=000000085b387003, pmd=0000000000000000\n  Internal error: Oops: 96000006 [#2] PREEMPT SMP\n  Modules linked in: ib_umad(O) mlx5_ib(O) nfnetlink_cttimeout(E) nfnetlink(E) act_gact(E) cls_flower(E) sch_ingress(E) openvswitch(E) nsh(E) nf_nat_ipv6(E) nf_nat_ipv4(E) nf_conncount(E) nf_nat(E) nf_conntrack(E) nf_defrag_ipv6(E) nf_defrag_ipv4(E) mst_pciconf(O) ipmi_devintf(E) ipmi_msghandler(E) ipmb_dev_int(OE) mlx5_core(O) mlxfw(O) mlxdevm(O) auxiliary(O) ib_uverbs(O) ib_core(O) mlx_compat(O) psample(E) sbsa_gwdt(E) uio_pdrv_genirq(E) uio(E) mlxbf_pmc(OE) mlxbf_gige(OE) mlxbf_tmfifo(OE) gpio_mlxbf2(OE) pwr_mlxbf(OE) mlx_trio(OE) i2c_mlxbf(OE) mlx_bootctl(OE) bluefield_edac(OE) knem(O) ip_tables(E) ipv6(E) crc_ccitt(E) [last unloaded: mst_pci]\n  Process grep (pid: 3372, stack limit = 0x0000000022055c92)\n  CPU: 5 PID: 3372 Comm: grep Tainted: G      D    OE     4.19.161-mlnx.47.gadcd9e3 #1\n  Hardware name: https:\/\/www.mellanox.com BlueField SoC\/BlueField SoC, BIOS BlueField:3.9.2-15-ga2403ab Sep  8 2022\n  pstate: 40000005 (nZcv daif -PAN -UAO)\n  pc : hw_stat_port_show+0x4c\/0x80 [ib_core]\n  lr : port_attr_show+0x40\/0x58 [ib_core]\n  sp : ffff000029f43b50\n  x29: ffff000029f43b50 x28: 0000000019375000\n  x27: ffff8007b821a540 x26: ffff000029f43e30\n  x25: 0000000000008000 x24: ffff000000eaa958\n  x23: 0000000000001000 x22: ffff8007a4ce3000\n  x21: ffff8007baff8000 x20: ffff8007b9066ac0\n  x19: ffff8007bae97578 x18: 0000000000000000\n  x17: 0000000000000000 x16: 0000000000000000\n  x15: 0000000000000000 x14: 0000000000000000\n  x13: 0000000000000000 x12: 0000000000000000\n  x11: 0000000000000000 x10: 0000000000000000\n  x9 : 0000000000000000 x8 : ffff8007a4ce4000\n  x7 : 0000000000000000 x6 : 000000000000003f\n  x5 : ffff000000e6a280 x4 : ffff8007a4ce3000\n  x3 : 0000000000000000 x2 : aaaaaaaaaaaaaaab\n  x1 : ffff8007b9066a10 x0 : ffff8007baff8000\n  Call trace:\n   hw_stat_port_show+0x4c\/0x80 [ib_core]\n   port_attr_show+0x40\/0x58 [ib_core]\n   sysfs_kf_seq_show+0x8c\/0x150\n   kernfs_seq_show+0x44\/0x50\n   seq_read+0x1b4\/0x45c\n   kernfs_fop_read+0x148\/0x1d8\n   __vfs_read+0x58\/0x180\n   vfs_read+0x94\/0x154\n   ksys_read+0x68\/0xd8\n   __arm64_sys_read+0x28\/0x34\n   el0_svc_common+0x88\/0x18c\n   el0_svc_handler+0x78\/0x94\n   el0_svc+0x8\/0xe8\n  Code: f2955562 aa1603e4 aa1503e0 f9405683 (f9402861)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e15ff29b156bbbdeadae230c8ecd5ecd8ca2477","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac7a7d7079124f46180714b2d41a1703d37101bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd06d32a71fbb198b2d43dddf794badd80ffd25d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f981c697b2f9bd5dd2f060e47ff8b5e0a2cd0c06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50476","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.177","lastModified":"2025-10-04T16:15:44.177","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntb_netdev: Use dev_kfree_skb_any() in interrupt context\n\nTX\/RX callback handlers (ntb_netdev_tx_handler(),\nntb_netdev_rx_handler()) can be called in interrupt\ncontext via the DMA framework when the respective\nDMA operations have completed. As such, any calls\nby these routines to free skb's, should use the\ninterrupt context safe dev_kfree_skb_any() function.\n\nPreviously, these callback handlers would call the\ninterrupt unsafe version of dev_kfree_skb(). This has\nnot presented an issue on Intel IOAT DMA engines as\nthat driver utilizes tasklets rather than a hard\ninterrupt handler, like the AMD PTDMA DMA driver.\nOn AMD systems, a kernel WARNING message is\nencountered, which is being issued from\nskb_release_head_state() due to in_hardirq()\nbeing true.\n\nBesides the user visible WARNING from the kernel,\nthe other symptom of this bug was that TCP\/IP performance\nacross the ntb_netdev interface was very poor, i.e.\napproximately an order of magnitude below what was\nexpected. With the repair to use dev_kfree_skb_any(),\nkernel WARNINGs from skb_release_head_state() ceased\nand TCP\/IP performance, as measured by iperf, was on\npar with expected results, approximately 20 Gb\/s on\nAMD Milan based server. Note that this performance\nis comparable with Intel based servers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07e28a8f450217db679802ebd4de0915556ce846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13286ad1c7c49c606fdcba4cf66f953a1a16c1ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14d245da57a11e80277ab455aa9b6dcc5ed38a19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21296a52caa6a6bad6debdfe40ad81d4f1a27e69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f7d78b2b12a9d561f48fa00bab29b40f4616dad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b78493968ed3cef0326183ed059c55e42f24d5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6b9e09403102bdf8402dae734800e4916c7ea58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4460c82177899751975180c268f352893302221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd860b39aa7c7b82e6c99b6fdb99d4610ce49d67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50477","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.300","lastModified":"2025-10-04T16:15:44.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: class: Fix potential memleak in devm_rtc_allocate_device()\n\ndevm_rtc_allocate_device() will alloc a rtc_device first, and then run\ndev_set_name(). If dev_set_name() failed, the rtc_device will memleak.\nMove devm_add_action_or_reset() in front of dev_set_name() to prevent\nmemleak.\n\nunreferenced object 0xffff888110a53000 (size 2048):\n  comm \"python3\", pid 470, jiffies 4296078308 (age 58.882s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 08 30 a5 10 81 88 ff ff  .........0......\n    08 30 a5 10 81 88 ff ff 00 00 00 00 00 00 00 00  .0..............\n  backtrace:\n    [<000000004aac0364>] kmalloc_trace+0x21\/0x110\n    [<000000000ff02202>] devm_rtc_allocate_device+0xd4\/0x400\n    [<000000001bdf5639>] devm_rtc_device_register+0x1a\/0x80\n    [<00000000351bf81c>] rx4581_probe+0xdd\/0x110 [rtc_rx4581]\n    [<00000000f0eba0ae>] spi_probe+0xde\/0x130\n    [<00000000bff89ee8>] really_probe+0x175\/0x3f0\n    [<00000000128e8d84>] __driver_probe_device+0xe6\/0x170\n    [<00000000ee5bf913>] device_driver_attach+0x32\/0x80\n    [<00000000f3f28f92>] bind_store+0x10b\/0x1a0\n    [<000000009ff812d8>] drv_attr_store+0x49\/0x70\n    [<000000008139c323>] sysfs_kf_write+0x8d\/0xb0\n    [<00000000b6146e01>] kernfs_fop_write_iter+0x214\/0x2d0\n    [<00000000ecbe3895>] vfs_write+0x61a\/0x7d0\n    [<00000000aa2196ea>] ksys_write+0xc8\/0x190\n    [<0000000046a600f5>] do_syscall_64+0x37\/0x90\n    [<00000000541a336f>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bcfc8fd3e596994f527b46730579428b3a4fa5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59457a0f079eae19aaf322b3cc1c8ba66f55c5f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60da73808298ff2cfa9f165d55eb3d7aa7078601","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50478","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.417","lastModified":"2025-10-04T16:15:44.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix shift-out-of-bounds\/overflow in nilfs_sb2_bad_offset()\n\nPatch series \"nilfs2: fix UBSAN shift-out-of-bounds warnings on mount\ntime\".\n\nThe first patch fixes a bug reported by syzbot, and the second one fixes\nthe remaining bug of the same kind.  Although they are triggered by the\nsame super block data anomaly, I divided it into the above two because the\ndetails of the issues and how to fix it are different.\n\nBoth are required to eliminate the shift-out-of-bounds issues at mount\ntime.\n\n\nThis patch (of 2):\n\nIf the block size exponent information written in an on-disk superblock is\ncorrupted, nilfs_sb2_bad_offset helper function can trigger\nshift-out-of-bounds warning followed by a kernel panic (if panic_on_warn\nis set):\n\n shift exponent 38983 is too large for 64-bit type 'unsigned long long'\n Call Trace:\n  <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x1b1\/0x28e lib\/dump_stack.c:106\n  ubsan_epilogue lib\/ubsan.c:151 [inline]\n  __ubsan_handle_shift_out_of_bounds+0x33d\/0x3b0 lib\/ubsan.c:322\n  nilfs_sb2_bad_offset fs\/nilfs2\/the_nilfs.c:449 [inline]\n  nilfs_load_super_block+0xdf5\/0xe00 fs\/nilfs2\/the_nilfs.c:523\n  init_nilfs+0xb7\/0x7d0 fs\/nilfs2\/the_nilfs.c:577\n  nilfs_fill_super+0xb1\/0x5d0 fs\/nilfs2\/super.c:1047\n  nilfs_mount+0x613\/0x9b0 fs\/nilfs2\/super.c:1317\n  ...\n\nIn addition, since nilfs_sb2_bad_offset() performs multiplication without\nconsidering the upper bound, the computation may overflow if the disk\nlayout parameters are not normal.\n\nThis fixes these issues by inserting preliminary sanity checks for those\nparameters and by converting the comparison from one involving\nmultiplication and left bit-shifting to one using division and right\nbit-shifting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1012ff77284e3bec0ec0a35a820b03ec43dec2cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/610a2a3d7d8be3537458a378ec69396a76c385b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62d11ec205ef14d8acf172cfc9904fdbf200025a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b0ea3df56cccd53398d0289f399f19d43136b2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b3ba54025357440d6c4414c670984f628c6f6bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6f89b10042baca218c8598d6db5a44c7e32625f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b47f5c579c8186f7f5ab5e4254e0734ea5b7bf7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d464b035c0613856d012cf1704879d3ff3f057fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d706485dffbbbf848e681edda29c7a46ac55698c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50479","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.547","lastModified":"2025-10-04T16:15:44.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd: fix potential memory leak\n\nThis patch fix potential memory leak (clk_src) when function run\ninto last return NULL.\n\ns\/free\/kfree\/ - Alex"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6160216fd2c97107e8a9ab39863b056d677fcd85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6e6ab9caeac96b277a3fe7da1dfa8f69a591759","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50480","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.683","lastModified":"2025-10-04T16:15:44.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: pl353-smc: Fix refcount leak bug in pl353_smc_probe()\n\nThe break of for_each_available_child_of_node() needs a\ncorresponding of_node_put() when the reference 'child' is not\nused anymore. Here we do not need to call of_node_put() in\nfail path as '!match' means no break.\n\nWhile the of_platform_device_create() will created a new\nreference by 'child' but it has considered the refcounting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44db35ceb94756ba513dcf6b69bf9e949b28469c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49605dc25e7fb33bf8b671279d4468531da90f89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/566b143aa5112a0c2784e20603778518bb799537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61b3c876c1cbdb1efd1f52a1f348580e6e14efb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b37f4a711e5d4bf3608ccbc6de82b52e92b441a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fde46754d5483bc398018bbec3c8ef5c55219e67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50481","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.840","lastModified":"2025-10-04T16:15:44.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl: fix possible null-ptr-deref in cxl_guest_init_afu|adapter()\n\nIf device_register() fails in cxl_register_afu|adapter(), the device\nis not added, device_unregister() can not be called in the error path,\notherwise it will cause a null-ptr-deref because of removing not added\ndevice.\n\nAs comment of device_register() says, it should use put_device() to give\nup the reference in the error path. So split device_unregister() into\ndevice_del() and put_device(), then goes to put dev when register fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/170e8c2d2b61e15e7f7cfeded81bc1e959a15ed8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ae581696b7a799afa39a664c4b721569643f58a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60b2ed21a65f3f5318666ccd765c3507991370cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61c80d1c3833e196256fb060382db94f24d3d9a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96fba6fb95bdede80583c262ac185da09661f264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab44c182353be101c3be9465e1d15d42130c53c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b32559ee4e6667c5c3daf4ec5454c277d1f255d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d775a1da5a52b4f4bb02f2707ba420d1bec48dbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5021bbf11b024cc65ea1e84c377df484183be4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50482","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:44.967","lastModified":"2025-10-04T16:15:44.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Clean up si_domain in the init_dmars() error path\n\nA splat from kmem_cache_destroy() was seen with a kernel prior to\ncommit ee2653bbe89d (\"iommu\/vt-d: Remove domain and devinfo mempool\")\nwhen there was a failure in init_dmars(), because the iommu_domain\ncache still had objects. While the mempool code is now gone, there\nstill is a leak of the si_domain memory if init_dmars() fails. So\nclean up si_domain in the init_dmars() error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0365d6af75f9f2696e94a0fef24a2c8464c037c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cecfe151874b835331efe086bbdcaeaf64f6b90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/620bf9f981365c18cc2766c53d92bf8131c63f32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/724483b585a1b1e063d42ac5aa835707ff2ec165","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/749bea542b67513e99240dc58bbfc099e842d508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4ad3ae4c6be9d8b0701761c839771116bca6ea3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d74196bb278b8f8af88e16bd595997dfa3d6fdb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50483","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.093","lastModified":"2025-10-04T16:15:45.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: enetc: avoid buffer leaks on xdp_do_redirect() failure\n\nBefore enetc_clean_rx_ring_xdp() calls xdp_do_redirect(), each software\nBD in the RX ring between index orig_i and i can have one of 2 refcount\nvalues on its page.\n\nWe are the owner of the current buffer that is being processed, so the\nrefcount will be at least 1.\n\nIf the current owner of the buffer at the diametrically opposed index\nin the RX ring (i.o.w, the other half of this page) has not yet called\nkfree(), this page's refcount could even be 2.\n\nenetc_page_reusable() in enetc_flip_rx_buff() tests for the page\nrefcount against 1, and [ if it's 2 ] does not attempt to reuse it.\n\nBut if enetc_flip_rx_buff() is put after the xdp_do_redirect() call,\nthe page refcount can have one of 3 values. It can also be 0, if there\nis no owner of the other page half, and xdp_do_redirect() for this\nbuffer ran so far that it triggered a flush of the devmap\/cpumap bulk\nqueue, and the consumers of those bulk queues also freed the buffer,\nall by the time xdp_do_redirect() returns the execution back to enetc.\n\nThis is the reason why enetc_flip_rx_buff() is called before\nxdp_do_redirect(), but there is a big flaw with that reasoning:\nenetc_flip_rx_buff() will set rx_swbd->page = NULL on both sides of the\nenetc_page_reusable() branch, and if xdp_do_redirect() returns an error,\nwe call enetc_xdp_free(), which does not deal gracefully with that.\n\nIn fact, what happens is quite special. The page refcounts start as 1.\nenetc_flip_rx_buff() figures they're reusable, transfers these\nrx_swbd->page pointers to a different rx_swbd in enetc_reuse_page(), and\nbumps the refcount to 2. When xdp_do_redirect() later returns an error,\nwe call the no-op enetc_xdp_free(), but we still haven't lost the\nreference to that page. A copy of it is still at rx_ring->next_to_alloc,\nbut that has refcount 2 (and there are no concurrent owners of it in\nflight, to drop the refcount). What really kills the system is when\nwe'll flip the rx_swbd->page the second time around. With an updated\nrefcount of 2, the page will not be reusable and we'll really leak it.\nThen enetc_new_page() will have to allocate more pages, which will then\neventually leak again on further errors from xdp_do_redirect().\n\nThe problem, summarized, is that we zeroize rx_swbd->page before we're\ncompletely done with it, and this makes it impossible for the error path\nto do something with it.\n\nSince the packet is potentially multi-buffer and therefore the\nrx_swbd->page is potentially an array, manual passing of the old\npointers between enetc_flip_rx_buff() and enetc_xdp_free() is a bit\ndifficult.\n\nFor the sake of going with a simple solution, we accept the possibility\nof racing with xdp_do_redirect(), and we move the flip procedure to\nexecute only on the redirect success path. By racing, I mean that the\npage may be deemed as not reusable by enetc (having a refcount of 0),\nbut there will be no leak in that case, either.\n\nOnce we accept that, we have something better to do with buffers on\nXDP_REDIRECT failure. Since we haven't performed half-page flipping yet,\nwe won't, either (and this way, we can avoid enetc_xdp_free()\ncompletely, which gives the entire page to the slab allocator).\nInstead, we'll call enetc_xdp_drop(), which will recycle this half of\nthe buffer back to the RX ring."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/306526331e7a37e714e11ab7c6d73eb004745224","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/628050ec952d2e2e46ec9fb6aa07e41139e030c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fba523b51ccce5f7981f8a43ad84d664da68131","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcf2c1dc5358dcf7e34a68cdb6b0bbf967801efa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50484","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.210","lastModified":"2025-10-04T16:15:45.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix potential memory leaks\n\nWhen the driver hits -ENOMEM at allocating a URB or a buffer, it\naborts and goes to the error path that releases the all previously\nallocated resources.  However, when -ENOMEM hits at the middle of the\nsync EP URB allocation loop, the partially allocated URBs might be\nleft without released, because ep->nurbs is still zero at that point.\n\nFix it by setting ep->nurbs at first, so that the error handler loops\nover the full URB list."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0604e5e5537af099ea2f6dfd892afe5c92db8a80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0672215994e2347a9b4f145e2bc1709b1e01cee3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28d8d267af5d73f91d7640cbdb4024703256e36c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46f0aed47673e275d682af60ed26dcc28add8eae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6382da0828995af87aa8b8bef28cc61aceb4aff3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/988ec0cd0a2643c25c1658f7c33de2e15a5a2e31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc1d16d282bca421c6fc31de4b8fd412010f01bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4442410f76d66b9f7e854010bce04853f665324","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faa8c1ed77d0169955b9b3516b714cc5fb512f27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50485","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.340","lastModified":"2025-10-04T16:15:45.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: add EXT4_IGET_BAD flag to prevent unexpected bad inode\n\nThere are many places that will get unhappy (and crash) when ext4_iget()\nreturns a bad inode. However, if iget the boot loader inode, allows a bad\ninode to be returned, because the inode may not be initialized. This\nmechanism can be used to bypass some checks and cause panic. To solve this\nproblem, we add a special iget flag EXT4_IGET_BAD. Only with this flag\nwe'd be returning bad inode from ext4_iget(), otherwise we always return\nthe error code if the inode is bad inode.(suggested by Jan Kara)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2142dfa1de61e25b83198af0308ec7689cca25d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/488a5c2bf7543c3cd3f07a025f2e62be91599430","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63b1e9bccb71fe7d7e3ddc9877dbdc85e5d2d023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0a738875c2e9c8c3366d792f8bf7fe508d5e5a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f725b290ed79ad61e4f721fee95a287892d8b1ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7e6b5548f915d7aa435d0764d41eacfb49c6e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50486","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.463","lastModified":"2025-10-04T16:15:45.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: ti: Fix return type of netcp_ndo_start_xmit()\n\nWith clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),\nindirect call targets are validated against the expected function\npointer prototype to make sure the call target is valid to help mitigate\nROP attacks. If they are not identical, there is a failure at run time,\nwhich manifests as either a kernel panic or thread getting killed. A\nproposed warning in clang aims to catch these at compile time, which\nreveals:\n\n  drivers\/net\/ethernet\/ti\/netcp_core.c:1944:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]\n          .ndo_start_xmit         = netcp_ndo_start_xmit,\n                                    ^~~~~~~~~~~~~~~~~~~~\n  1 error generated.\n\n->ndo_start_xmit() in 'struct net_device_ops' expects a return type of\n'netdev_tx_t', not 'int'. Adjust the return type of\nnetcp_ndo_start_xmit() to match the prototype's to resolve the warning\nand CFI failure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17bb9bdf701f3e811a9f4820b08b9538ade2641c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e4953b826e12b31995564a459dbd4e9e4604a35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b0b6553bf4ad3a435a57e02c68d6075f384e1be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63fe6ff674a96cfcfc0fa8df1051a27aa31c70b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/765636e58ba505cfe4927eda7ee83791b1c6402a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a413ebb6049edd881c6427cfa25a7efddd6a4f74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a447479ea2cf35603b5739ea947885024b901222","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d837d74eae077cc3ef9e191ba8535b5f602d4673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbe1a6b930ae9647e8ce0b684c903ac67d4398eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50487","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.590","lastModified":"2025-10-04T16:15:45.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Protect against send buffer overflow in NFSv3 READDIR\n\nSince before the git era, NFSD has conserved the number of pages\nheld by each nfsd thread by combining the RPC receive and send\nbuffers into a single array of pages. This works because there are\nno cases where an operation needs a large RPC Call message and a\nlarge RPC Reply message at the same time.\n\nOnce an RPC Call has been received, svc_process() updates\nsvc_rqst::rq_res to describe the part of rq_pages that can be\nused for constructing the Reply. This means that the send buffer\n(rq_res) shrinks when the received RPC record containing the RPC\nCall is large.\n\nA client can force this shrinkage on TCP by sending a correctly-\nformed RPC Call header contained in an RPC record that is\nexcessively large. The full maximum payload size cannot be\nconstructed in that case.\n\nThanks to Aleksi Illikainen and Kari Hulkko for uncovering this\nissue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/071a076fd1b763aa6fe478efa047e0a549ba9c22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/279274e31270c28b86feffe5e166d4088f22317b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57774b1526163766403167b7bf00b136fb103761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/640f87c190e0d1b2a0fcb2ecf6d2cd53b1c41991","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c3224826ec17f14e8bdfc86cb7e82fe52d744a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50488","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.707","lastModified":"2025-10-04T16:15:45.707","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix possible uaf for 'bfqq->bic'\n\nOur test report a uaf for 'bfqq->bic' in 5.10:\n\n==================================================================\nBUG: KASAN: use-after-free in bfq_select_queue+0x378\/0xa30\n\nCPU: 6 PID: 2318352 Comm: fsstress Kdump: loaded Not tainted 5.10.0-60.18.0.50.h602.kasan.eulerosv2r11.x86_64 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58-20220320_160524-szxrtosci10000 04\/01\/2014\nCall Trace:\n bfq_select_queue+0x378\/0xa30\n bfq_dispatch_request+0xe8\/0x130\n blk_mq_do_dispatch_sched+0x62\/0xb0\n __blk_mq_sched_dispatch_requests+0x215\/0x2a0\n blk_mq_sched_dispatch_requests+0x8f\/0xd0\n __blk_mq_run_hw_queue+0x98\/0x180\n __blk_mq_delay_run_hw_queue+0x22b\/0x240\n blk_mq_run_hw_queue+0xe3\/0x190\n blk_mq_sched_insert_requests+0x107\/0x200\n blk_mq_flush_plug_list+0x26e\/0x3c0\n blk_finish_plug+0x63\/0x90\n __iomap_dio_rw+0x7b5\/0x910\n iomap_dio_rw+0x36\/0x80\n ext4_dio_read_iter+0x146\/0x190 [ext4]\n ext4_file_read_iter+0x1e2\/0x230 [ext4]\n new_sync_read+0x29f\/0x400\n vfs_read+0x24e\/0x2d0\n ksys_read+0xd5\/0x1b0\n do_syscall_64+0x33\/0x40\n entry_SYSCALL_64_after_hwframe+0x61\/0xc6\n\nCommit 3bc5e683c67d (\"bfq: Split shared queues on move between cgroups\")\nchanges that move process to a new cgroup will allocate a new bfqq to\nuse, however, the old bfqq and new bfqq can point to the same bic:\n\n1) Initial state, two process with io in the same cgroup.\n\nProcess 1       Process 2\n (BIC1)          (BIC2)\n  |  Λ            |  Λ\n  |  |            |  |\n  V  |            V  |\n  bfqq1           bfqq2\n\n2) bfqq1 is merged to bfqq2.\n\nProcess 1       Process 2\n (BIC1)          (BIC2)\n  |               |\n   \\-------------\\|\n                  V\n  bfqq1           bfqq2(coop)\n\n3) Process 1 exit, then issue new io(denoce IOA) from Process 2.\n\n (BIC2)\n  |  Λ\n  |  |\n  V  |\n  bfqq2(coop)\n\n4) Before IOA is completed, move Process 2 to another cgroup and issue io.\n\nProcess 2\n (BIC2)\n   Λ\n   |\\--------------\\\n   |                V\n  bfqq2           bfqq3\n\nNow that BIC2 points to bfqq3, while bfqq2 and bfqq3 both point to BIC2.\nIf all the requests are completed, and Process 2 exit, BIC2 will be\nfreed while there is no guarantee that bfqq2 will be freed before BIC2.\n\nFix the problem by clearing bfqq->bic while bfqq is detached from bic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/094f3d9314d67691cb21ba091c1b528f6e3c4893","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5533742c7cb1bc9b1f0bf401cc397d44a3a9e07a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64dc8c732f5c2b406cc752e6aaa1bd5471159cab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/761564d93c8265f65543acf0a576b32d66bfa26a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b22fd72bfebda3956efc4431b60ddfc0a51e03e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50489","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.827","lastModified":"2025-10-04T16:15:45.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/mipi-dsi: Detach devices when removing the host\n\nWhenever the MIPI-DSI host is unregistered, the code of\nmipi_dsi_host_unregister() loops over every device currently found on that\nbus and will unregister it.\n\nHowever, it doesn't detach it from the bus first, which leads to all kind\nof resource leaks if the host wants to perform some clean up whenever a\ndevice is detached."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/262364574b05676d4b9ebde2ddd3588cd2efd8ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26c1b4cfe56f040f71a51c92da1f4cac2e3b9455","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/353ab1c13fdd6e524edde780235a8ce9b892c81c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45120fa5e522d444e3fc1c5a9afc5d53eed91d00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/668a8f17b5290d04ef7343636a5588a0692731a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fc2cd40db1969ba372ce9536dcfcdb87271eac4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8242167cfc83dd7e4c96f44b45f108db9bb88146","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95ae458209f5a556bba98aff872f933694914eb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c202cda08cd5693645d4990ad1eb2e8068a884ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50490","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:45.947","lastModified":"2025-10-04T16:15:45.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Propagate error from htab_lock_bucket() to userspace\n\nIn __htab_map_lookup_and_delete_batch() if htab_lock_bucket() returns\n-EBUSY, it will go to next bucket. Going to next bucket may not only\nskip the elements in current bucket silently, but also incur\nout-of-bound memory access or expose kernel memory to userspace if\ncurrent bucket_cnt is greater than bucket_size or zero.\n\nFixing it by stopping batch operation and returning -EBUSY when\nhtab_lock_bucket() fails, and the application can retry or skip the busy\nbatch as needed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e13425104903970a5ede853082d3bbb4edec6f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f1f39a8f1ce1b24fee6852d7dcd704ce7c4334d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66a7a92e4d0d091e79148a4c6ec15d1da65f4280","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bfee6eb3d6b96ae730a542909dd22b5f9f50d58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50491","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.073","lastModified":"2025-10-04T16:15:46.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: cti: Fix hang in cti_disable_hw()\n\ncti_enable_hw() and cti_disable_hw() are called from an atomic context\nso shouldn't use runtime PM because it can result in a sleep when\ncommunicating with firmware.\n\nSince commit 3c6656337852 (\"Revert \"firmware: arm_scmi: Add clock\nmanagement to the SCMI power domain\"\"), this causes a hang on Juno when\nrunning the Perf Coresight tests or running this command:\n\n  perf record -e cs_etm\/\/u -- ls\n\nThis was also missed until the revert commit because pm_runtime_put()\nwas called with the wrong device until commit 692c9a499b28 (\"coresight:\ncti: Correct the parameter for pm_runtime_put\")\n\nWith lock and scheduler debugging enabled the following is output:\n\n   coresight cti_sys0: cti_enable_hw -- dev:cti_sys0  parent: 20020000.cti\n   BUG: sleeping function called from invalid context at drivers\/base\/power\/runtime.c:1151\n   in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 330, name: perf-exec\n   preempt_count: 2, expected: 0\n   RCU nest depth: 0, expected: 0\n   INFO: lockdep is turned off.\n   irq event stamp: 0\n   hardirqs last  enabled at (0): [<0000000000000000>] 0x0\n   hardirqs last disabled at (0): [<ffff80000822b394>] copy_process+0xa0c\/0x1948\n   softirqs last  enabled at (0): [<ffff80000822b394>] copy_process+0xa0c\/0x1948\n   softirqs last disabled at (0): [<0000000000000000>] 0x0\n   CPU: 3 PID: 330 Comm: perf-exec Not tainted 6.0.0-00053-g042116d99298 #7\n   Hardware name: ARM LTD ARM Juno Development Platform\/ARM Juno Development Platform, BIOS EDK II Sep 13 2022\n   Call trace:\n    dump_backtrace+0x134\/0x140\n    show_stack+0x20\/0x58\n    dump_stack_lvl+0x8c\/0xb8\n    dump_stack+0x18\/0x34\n    __might_resched+0x180\/0x228\n    __might_sleep+0x50\/0x88\n    __pm_runtime_resume+0xac\/0xb0\n    cti_enable+0x44\/0x120\n    coresight_control_assoc_ectdev+0xc0\/0x150\n    coresight_enable_path+0xb4\/0x288\n    etm_event_start+0x138\/0x170\n    etm_event_add+0x48\/0x70\n    event_sched_in.isra.122+0xb4\/0x280\n    merge_sched_in+0x1fc\/0x3d0\n    visit_groups_merge.constprop.137+0x16c\/0x4b0\n    ctx_sched_in+0x114\/0x1f0\n    perf_event_sched_in+0x60\/0x90\n    ctx_resched+0x68\/0xb0\n    perf_event_exec+0x138\/0x508\n    begin_new_exec+0x52c\/0xd40\n    load_elf_binary+0x6b8\/0x17d0\n    bprm_execve+0x360\/0x7f8\n    do_execveat_common.isra.47+0x218\/0x238\n    __arm64_sys_execve+0x48\/0x60\n    invoke_syscall+0x4c\/0x110\n    el0_svc_common.constprop.4+0xfc\/0x120\n    do_el0_svc+0x34\/0xc0\n    el0_svc+0x40\/0x98\n    el0t_64_sync_handler+0x98\/0xc0\n    el0t_64_sync+0x170\/0x174\n\nFix the issue by removing the runtime PM calls completely. They are not\nneeded here because it must have already been done when building the\npath for a trace.\n\n[ Fix build warnings ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c365a0c21aaf2b8fcc88de8dc298803288f61ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6746eae4bbaddcc16b40efb33dab79210828b3ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c51cfba50df8b9e16bfe0e6d4f2f252a4a10063d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e33ce54cef5d429430e3b1ae5c8ee4f4103c4fdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50492","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.190","lastModified":"2025-10-04T16:15:46.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm: fix use-after-free on probe deferral\n\nThe bridge counter was never reset when tearing down the DRM device so\nthat stale pointers to deallocated structures would be accessed on the\nnext tear down (e.g. after a second late bind deferral).\n\nGiven enough bridges and a few probe deferrals this could currently also\nlead to data beyond the bridge array being corrupted.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/502665\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a30a47741b6df1f9555a0fac6aebb7e8c363bad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6808abdb33bf90330e70a687d29f038507e06ebb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50493","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.300","lastModified":"2025-10-04T16:15:46.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix crash when I\/O abort times out\n\nWhile performing CPU hotplug, a crash with the following stack was seen:\n\nCall Trace:\n     qla24xx_process_response_queue+0x42a\/0x970 [qla2xxx]\n     qla2x00_start_nvme_mq+0x3a2\/0x4b0 [qla2xxx]\n     qla_nvme_post_cmd+0x166\/0x240 [qla2xxx]\n     nvme_fc_start_fcp_op.part.0+0x119\/0x2e0 [nvme_fc]\n     blk_mq_dispatch_rq_list+0x17b\/0x610\n     __blk_mq_sched_dispatch_requests+0xb0\/0x140\n     blk_mq_sched_dispatch_requests+0x30\/0x60\n     __blk_mq_run_hw_queue+0x35\/0x90\n     __blk_mq_delay_run_hw_queue+0x161\/0x180\n     blk_execute_rq+0xbe\/0x160\n     __nvme_submit_sync_cmd+0x16f\/0x220 [nvme_core]\n     nvmf_connect_admin_queue+0x11a\/0x170 [nvme_fabrics]\n     nvme_fc_create_association.cold+0x50\/0x3dc [nvme_fc]\n     nvme_fc_connect_ctrl_work+0x19\/0x30 [nvme_fc]\n     process_one_work+0x1e8\/0x3c0\n\nOn abort timeout, completion was called without checking if the I\/O was\nalready completed.\n\nVerify that I\/O and abort request are indeed outstanding before attempting\ncompletion."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05382ed9142cf8a8a3fb662224477eecc415778b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68ad83188d782b2ecef2e41ac245d27e0710fe8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb4dff498468b62e8c520568559b3a9007e104d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3871af13aa03fbbe7fbb812eaf140501229a72e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50494","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.420","lastModified":"2025-10-04T16:15:46.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: intel_powerclamp: Use get_cpu() instead of smp_processor_id() to avoid crash\n\nWhen CPU 0 is offline and intel_powerclamp is used to inject\nidle, it generates kernel BUG:\n\nBUG: using smp_processor_id() in preemptible [00000000] code: bash\/15687\ncaller is debug_smp_processor_id+0x17\/0x20\nCPU: 4 PID: 15687 Comm: bash Not tainted 5.19.0-rc7+ #57\nCall Trace:\n<TASK>\ndump_stack_lvl+0x49\/0x63\ndump_stack+0x10\/0x16\ncheck_preemption_disabled+0xdd\/0xe0\ndebug_smp_processor_id+0x17\/0x20\npowerclamp_set_cur_state+0x7f\/0xf9 [intel_powerclamp]\n...\n...\n\nHere CPU 0 is the control CPU by default and changed to the current CPU,\nif CPU 0 offlined. This check has to be performed under cpus_read_lock(),\nhence the above warning.\n\nUse get_cpu() instead of smp_processor_id() to avoid this BUG.\n\n[ rjw: Subject edits ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f91f66c568b316b19cb042cf50584467b3bdff4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e799e815097febbcb81b472285be824f5d089f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/418fae0700e85a498062424f8656435c32cdb200","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/513943bf879d45005213e6f5cfb7d9e9943f589f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5614908434451aafbf9b24cb5247cf1d21269f76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a646c38f648185ee2c62f2a19da3c6f04e27612","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68b99e94a4a2db6ba9b31fe0485e057b9354a640","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6904727db0eb62fb0c2dce1cf331c341d97ee4b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2a347b304224b2aeb1c0ea000d1cf8a02cc592","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50495","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.540","lastModified":"2025-10-05T10:15:31.590","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-50496","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.657","lastModified":"2025-10-04T16:15:46.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm cache: Fix UAF in destroy()\n\nDm_cache also has the same UAF problem when dm_resume()\nand dm_destroy() are concurrent.\n\nTherefore, cancelling timer again in destroy()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/034cbc8d3b47a56acd89453c29632a9c117de09d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b17026685a270b2beaf1cdd9857fcedd3505c7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f097dfac7579fd84ff98eb1d3acd41d53a485f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d20032dd90664de09f2902a7ea49ae2f7771746","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a3e412c2ab131c54945327a7676b006f000a209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a459d8edbdbe7b24db42a5a9f21e6aa9e00c2aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ac4f36910764cb510bafc4c3768544f86ca48ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/993406104d2b28fe470126a062ad37a1e21e792e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2a0b298ebf83ab6236f66788a3541e91ce75a70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50497","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.777","lastModified":"2025-10-04T16:15:46.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinfmt_misc: fix shift-out-of-bounds in check_special_flags\n\nUBSAN reported a shift-out-of-bounds warning:\n\n left shift of 1 by 31 places cannot be represented in type 'int'\n Call Trace:\n  <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x8d\/0xcf lib\/dump_stack.c:106\n  ubsan_epilogue+0xa\/0x44 lib\/ubsan.c:151\n  __ubsan_handle_shift_out_of_bounds+0x1e7\/0x208 lib\/ubsan.c:322\n  check_special_flags fs\/binfmt_misc.c:241 [inline]\n  create_entry fs\/binfmt_misc.c:456 [inline]\n  bm_register_write+0x9d3\/0xa20 fs\/binfmt_misc.c:654\n  vfs_write+0x11e\/0x580 fs\/read_write.c:582\n  ksys_write+0xcf\/0x120 fs\/read_write.c:637\n  do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n  do_syscall_64+0x34\/0x80 arch\/x86\/entry\/common.c:80\n  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n RIP: 0033:0x4194e1\n\nSince the type of Node's flags is unsigned long, we should define these\nmacros with same type too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f1a48994b3e516d5c7fd5d12204fdba7a604771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/419b808504c26b3e3342365f34ccd0843e09a7f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a46bf558803dd2b959ca7435a5c143efe837217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88cea1676a09f7c45a1438153a126610c33b1590","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97382a2639b1cd9631f6069061e9d7062cd2b098","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a651bb5ff997b9f02662bcdef3d8b4e6f0d79656","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a91123d4bda463469f68f0427adabf8108001f94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcbc51d31d0afbd45e830e3cf565a7b3ca7bf0d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6145370be8016755c43aca799815fc4b8c88b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50498","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:46.907","lastModified":"2025-10-04T16:15:46.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\neth: alx: take rtnl_lock on resume\n\nZbynek reports that alx trips an rtnl assertion on resume:\n\n RTNL: assertion failed at net\/core\/dev.c (2891)\n RIP: 0010:netif_set_real_num_tx_queues+0x1ac\/0x1c0\n Call Trace:\n  <TASK>\n  __alx_open+0x230\/0x570 [alx]\n  alx_resume+0x54\/0x80 [alx]\n  ? pci_legacy_resume+0x80\/0x80\n  dpm_run_callback+0x4a\/0x150\n  device_resume+0x8b\/0x190\n  async_resume+0x19\/0x30\n  async_run_entry_fn+0x30\/0x130\n  process_one_work+0x1e5\/0x3b0\n\nindeed the driver does not hold rtnl_lock during its internal close\nand re-open functions during suspend\/resume. Note that this is not\na huge bug as the driver implements its own locking, and does not\nimplement changing the number of queues, but we need to silence\nthe splat."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6ad1c94e1e7e374d88f0cfd77936dddb8339aaba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f1991a940b90753b34570f093a21dba366e8cc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a845a0c4bdece2c0073ecea2fca7c4d5f0550f78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0323c0fd07804d5874699e93f935cda0d989c67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50499","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.027","lastModified":"2025-10-04T16:15:47.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dvb-core: Fix double free in dvb_register_device()\n\nIn function dvb_register_device() -> dvb_register_media_device() ->\ndvb_create_media_entity(), dvb->entity is allocated and initialized. If\nthe initialization fails, it frees the dvb->entity, and return an error\ncode. The caller takes the error code and handles the error by calling\ndvb_media_device_free(), which unregisters the entity and frees the\nfield again if it is not NULL. As dvb->entity may not NULLed in\ndvb_create_media_entity() when the allocation of dvbdev->pad fails, a\ndouble free may occur. This may also cause an Use After free in\nmedia_device_unregister_entity().\n\nFix this by storing NULL to dvb->entity when it is freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0588b12c418c3e4f927ced11f27b02ef4a5bfb07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/123eddf92a114e03919942641d2c2b1f4ca56ea6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b0d0477fce747d4137aa65856318b55fba72198","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70bc51303871159796b55ba1a8f16637b46c2511","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/772892b29ac50c2c5e918fc80104aa6ede81d837","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dd5a68cdbbbe7fc67ba701cb52ba10d8ba149f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acf984a3718c2458eb9e08b6714490a04f213c58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b21f62b49ee9c3e0216d685d9cfd6003e5727271","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9a78485b658361fab6a5547377be6c1af6f1b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50500","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.153","lastModified":"2025-10-04T16:15:47.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetdevsim: fix memory leak in nsim_drv_probe() when nsim_dev_resources_register() failed\n\nIf some items in nsim_dev_resources_register() fail, memory leak will\noccur. The following is the memory leak information.\n\nunreferenced object 0xffff888074c02600 (size 128):\n  comm \"echo\", pid 8159, jiffies 4294945184 (age 493.530s)\n  hex dump (first 32 bytes):\n    40 47 ea 89 ff ff ff ff 01 00 00 00 00 00 00 00  @G..............\n    ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff  ................\n  backtrace:\n    [<0000000011a31c98>] kmalloc_trace+0x22\/0x60\n    [<0000000027384c69>] devl_resource_register+0x144\/0x4e0\n    [<00000000a16db248>] nsim_drv_probe+0x37a\/0x1260\n    [<000000007d1f448c>] really_probe+0x20b\/0xb10\n    [<00000000c416848a>] __driver_probe_device+0x1b3\/0x4a0\n    [<00000000077e0351>] driver_probe_device+0x49\/0x140\n    [<0000000054f2465a>] __device_attach_driver+0x18c\/0x2a0\n    [<000000008538f359>] bus_for_each_drv+0x151\/0x1d0\n    [<0000000038e09747>] __device_attach+0x1c9\/0x4e0\n    [<00000000dd86e533>] bus_probe_device+0x1d5\/0x280\n    [<00000000839bea35>] device_add+0xae0\/0x1cb0\n    [<000000009c2abf46>] new_device_store+0x3b6\/0x5f0\n    [<00000000fb823d7f>] bus_attr_store+0x72\/0xa0\n    [<000000007acc4295>] sysfs_kf_write+0x106\/0x160\n    [<000000005f50cb4d>] kernfs_fop_write_iter+0x3a8\/0x5a0\n    [<0000000075eb41bf>] vfs_write+0x8f0\/0xc80"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b1da9f7126f05e857da6db24c6a04aa7974d644","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c4957fe40e2a628b7cceaf4c9bfb5b701774d05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50501","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.267","lastModified":"2025-10-04T16:15:47.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: coda: Add check for dcoda_iram_alloc\n\nAs the coda_iram_alloc may return NULL pointer,\nit should be better to check the return value\nin order to avoid NULL poineter dereference,\nsame as the others."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05f165ded4a7baec31b65aba88e2cd1fb9b91db2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b436f1410245412ea5e4c356a175a928d73eed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c6887d5a29024bada6928d1d0959c9990401384","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35ddd00b36589cf948875b825eedaab1aefd5ad5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f57abaee136a1e39d2b04443a1bd5311ba7d94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/532417dc98cb9c1185ada4ea4e7ccf965c06bcb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5688d33aa293dfa122d66bef9c0258ddf7ef11e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b8082238fb8bb20f67e46388123e67a5bbc558d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b99872178e7473f21904fdeea38109275aad8ae8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50502","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.390","lastModified":"2025-10-04T16:15:47.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: \/proc\/pid\/smaps_rollup: fix no vma's null-deref\n\nCommit 258f669e7e88 (\"mm: \/proc\/pid\/smaps_rollup: convert to single value\nseq_file\") introduced a null-deref if there are no vma's in the task in\nshow_smaps_rollup."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6bb8769326c46db3058780c0640dcc49d8187b24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50503","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.497","lastModified":"2025-10-04T16:15:47.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: lpddr2_nvm: Fix possible null-ptr-deref\n\nIt will cause null-ptr-deref when resource_size(add_range) invoked,\nif platform_get_resource() returns NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0919982a1744346269320615615c7deb14106661","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d10bd7416e8383340b5524b8d616b8ad01ef1e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bdd45d795adf9e73b38ced5e7f750cd199499ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8eb64dc5a790a529ef49ec94b3337af09dac15d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb9ccb6121ec4140d366147aa866ceb5a21a8d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4cc41e94d8357f5f02b8ef40257bb23931d8438","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d3e46ac6669cdf1b99bc7b7d92f1221b9a1ff2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6aafb57d90ff2c1e18554f3a3c36247a59825ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f82f63b3911f1b2da68a14d9c4babf3b55feca55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50504","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.607","lastModified":"2025-10-04T16:15:47.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/rtas: avoid scheduling in rtas_os_term()\n\nIt's unsafe to use rtas_busy_delay() to handle a busy status from\nthe ibm,os-term RTAS function in rtas_os_term():\n\nKernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b\nBUG: sleeping function called from invalid context at arch\/powerpc\/kernel\/rtas.c:618\nin_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 1, name: swapper\/0\npreempt_count: 2, expected: 0\nCPU: 7 PID: 1 Comm: swapper\/0 Tainted: G      D            6.0.0-rc5-02182-gf8553a572277-dirty #9\nCall Trace:\n[c000000007b8f000] [c000000001337110] dump_stack_lvl+0xb4\/0x110 (unreliable)\n[c000000007b8f040] [c0000000002440e4] __might_resched+0x394\/0x3c0\n[c000000007b8f0e0] [c00000000004f680] rtas_busy_delay+0x120\/0x1b0\n[c000000007b8f100] [c000000000052d04] rtas_os_term+0xb8\/0xf4\n[c000000007b8f180] [c0000000001150fc] pseries_panic+0x50\/0x68\n[c000000007b8f1f0] [c000000000036354] ppc_panic_platform_handler+0x34\/0x50\n[c000000007b8f210] [c0000000002303c4] notifier_call_chain+0xd4\/0x1c0\n[c000000007b8f2b0] [c0000000002306cc] atomic_notifier_call_chain+0xac\/0x1c0\n[c000000007b8f2f0] [c0000000001d62b8] panic+0x228\/0x4d0\n[c000000007b8f390] [c0000000001e573c] do_exit+0x140c\/0x1420\n[c000000007b8f480] [c0000000001e586c] make_task_dead+0xdc\/0x200\n\nUse rtas_busy_delay_time() instead, which signals without side effects\nwhether to attempt the ibm,os-term RTAS call again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4768935b8cc2d2afeb7956292df0f6e2c49ca0a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/482d990a5dd1027ee0b70a8a570d56749cac8103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/515959eb49e6d218a46979d66f36fdef329ac7d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c606e57eecc37d6b36d732b1ff7e55b7dc32dd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f7e2fcab73372a371ab4017cbedf7a71f4f9b40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7280fdb80bf0fe35d9b799fc7009f2cbe0a397d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bed48651c87bef59ea1a9d6dbc381bcbc452f4ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f413135b337c4e90c1e593c6613f8717e17bc724","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffa991a003abb4f8cb9e5004646bfe2d9a46912c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50505","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.730","lastModified":"2025-10-04T16:15:47.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/amd: Fix pci device refcount leak in ppr_notifier()\n\nAs comment of pci_get_domain_bus_and_slot() says, it returns\na pci device with refcount increment, when finish using it,\nthe caller must decrement the reference count by calling\npci_dev_put(). So call it before returning from ppr_notifier()\nto avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03f51c72997559e73b327608f0cccfded715c9a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cf0981c2233f97d56938d9d61845383d6eb227c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e501b3fd7a2e1c4372d72bc70717aaca2beb8a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8581ec1feb895ff596fe3d326d9ba320083290aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/902cc2507091a81643502d8ceb0e2f105e902518","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0637f4bd426925f5c3a15e8f8e36190fe06bac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdb2113dd8f17a3cc84a2b4be4968a849f69ec72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efd50c65fd1cdef63eb58825f3fe72496443764c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50506","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.850","lastModified":"2025-10-04T16:15:47.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrbd: only clone bio if we have a backing device\n\nCommit c347a787e34cb (drbd: set ->bi_bdev in drbd_req_new) moved a\nbio_set_dev call (which has since been removed) to \"earlier\", from\ndrbd_request_prepare to drbd_req_new.\n\nThe problem is that this accesses device->ldev->backing_bdev, which is\nnot NULL-checked at this point. When we don't have an ldev (i.e. when\nthe DRBD device is diskless), this leads to a null pointer deref.\n\nSo, only allocate the private_bio if we actually have a disk. This is\nalso a small optimization, since we don't clone the bio to only to\nimmediately free it again in the diskless case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05580a3bbf3cec677cb00a85dfeb21d6a9b48eaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d42ddf7f27b6723549ee6d4c8b1b418b59bf6b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50507","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:47.960","lastModified":"2025-10-04T16:15:47.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/ntfs3: Validate data run offset\n\nThis adds sanity checks for data run offset. We should make sure data\nrun offset is legit before trying to unpack them, otherwise we may\nencounter use-after-free or some unexpected memory access behaviors.\n\n[   82.940342] BUG: KASAN: use-after-free in run_unpack+0x2e3\/0x570\n[   82.941180] Read of size 1 at addr ffff888008a8487f by task mount\/240\n[   82.941670]\n[   82.942069] CPU: 0 PID: 240 Comm: mount Not tainted 5.19.0+ #15\n[   82.942482] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\n[   82.943720] Call Trace:\n[   82.944204]  <TASK>\n[   82.944471]  dump_stack_lvl+0x49\/0x63\n[   82.944908]  print_report.cold+0xf5\/0x67b\n[   82.945141]  ? __wait_on_bit+0x106\/0x120\n[   82.945750]  ? run_unpack+0x2e3\/0x570\n[   82.946626]  kasan_report+0xa7\/0x120\n[   82.947046]  ? run_unpack+0x2e3\/0x570\n[   82.947280]  __asan_load1+0x51\/0x60\n[   82.947483]  run_unpack+0x2e3\/0x570\n[   82.947709]  ? memcpy+0x4e\/0x70\n[   82.947927]  ? run_pack+0x7a0\/0x7a0\n[   82.948158]  run_unpack_ex+0xad\/0x3f0\n[   82.948399]  ? mi_enum_attr+0x14a\/0x200\n[   82.948717]  ? run_unpack+0x570\/0x570\n[   82.949072]  ? ni_enum_attr_ex+0x1b2\/0x1c0\n[   82.949332]  ? ni_fname_type.part.0+0xd0\/0xd0\n[   82.949611]  ? mi_read+0x262\/0x2c0\n[   82.949970]  ? ntfs_cmp_names_cpu+0x125\/0x180\n[   82.950249]  ntfs_iget5+0x632\/0x1870\n[   82.950621]  ? ntfs_get_block_bmap+0x70\/0x70\n[   82.951192]  ? evict+0x223\/0x280\n[   82.951525]  ? iput.part.0+0x286\/0x320\n[   82.951969]  ntfs_fill_super+0x1321\/0x1e20\n[   82.952436]  ? put_ntfs+0x1d0\/0x1d0\n[   82.952822]  ? vsprintf+0x20\/0x20\n[   82.953188]  ? mutex_unlock+0x81\/0xd0\n[   82.953379]  ? set_blocksize+0x95\/0x150\n[   82.954001]  get_tree_bdev+0x232\/0x370\n[   82.954438]  ? put_ntfs+0x1d0\/0x1d0\n[   82.954700]  ntfs_fs_get_tree+0x15\/0x20\n[   82.955049]  vfs_get_tree+0x4c\/0x130\n[   82.955292]  path_mount+0x645\/0xfd0\n[   82.955615]  ? putname+0x80\/0xa0\n[   82.955955]  ? finish_automount+0x2e0\/0x2e0\n[   82.956310]  ? kmem_cache_free+0x110\/0x390\n[   82.956723]  ? putname+0x80\/0xa0\n[   82.957023]  do_mount+0xd6\/0xf0\n[   82.957411]  ? path_mount+0xfd0\/0xfd0\n[   82.957638]  ? __kasan_check_write+0x14\/0x20\n[   82.957948]  __x64_sys_mount+0xca\/0x110\n[   82.958310]  do_syscall_64+0x3b\/0x90\n[   82.958719]  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n[   82.959341] RIP: 0033:0x7fd0d1ce948a\n[   82.960193] Code: 48 8b 0d 11 fa 2a 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 008\n[   82.961532] RSP: 002b:00007ffe59ff69a8 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5\n[   82.962527] RAX: ffffffffffffffda RBX: 0000564dcc107060 RCX: 00007fd0d1ce948a\n[   82.963266] RDX: 0000564dcc107260 RSI: 0000564dcc1072e0 RDI: 0000564dcc10fce0\n[   82.963686] RBP: 0000000000000000 R08: 0000564dcc107280 R09: 0000000000000020\n[   82.964272] R10: 00000000c0ed0000 R11: 0000000000000202 R12: 0000564dcc10fce0\n[   82.964785] R13: 0000564dcc107260 R14: 0000000000000000 R15: 00000000ffffffff"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6db620863f8528ed9a9aa5ad323b26554a17881d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9173b89c16a603d73c434b695fe2a7a13491300f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de5e0955248ff90a2ae91e7f5c108392b52152d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0455361d3068066a91fe18282b751925d7b5ee7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-50508","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.087","lastModified":"2025-10-04T16:15:48.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt76x0: fix oob access in mt76x0_phy_get_target_power\n\nAfter 'commit ba45841ca5eb (\"wifi: mt76: mt76x02: simplify struct\nmt76x02_rate_power\")', mt76x02 relies on ht[0-7] rate_power data for\nvht mcs{0,7}, while it uses vth[0-1] rate_power for vht mcs {8,9}.\nFix a possible out-of-bound access in mt76x0_phy_get_target_power routine."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6e1abc51c945663bddebfa1beb9590ff5b250eb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf425c5d7ef6fb4083c1e0d46440f886127b5ee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53533","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.217","lastModified":"2025-10-04T16:15:48.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: raspberrypi-ts - fix refcount leak in rpi_ts_probe\n\nrpi_firmware_get() take reference, we need to release it in error paths\nas well. Use devm_rpi_firmware_get() helper to handling the resources.\nAlso remove the existing rpi_firmware_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d6a5c9489c8a3d434e685066119c4333476dccd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dfa3c9dd27bdc347733d06e980395768520bc3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36d087e49dabd28d2c13a7532dac72d625ce69fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bca3688bdbc3b58a2894b8671a8e2378efe28bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7acad58049acc6ac148e8b613a6eceeca4bcb4a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9216aa5cfd86809a2681be3683cd9ac30432de0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9dbbe9db224c23a60dc7b1e00c701be93328c873","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53534","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.340","lastModified":"2025-10-04T16:15:48.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/mediatek: mtk_drm_crtc: Add checks for devm_kcalloc\n\nAs the devm_kcalloc may return NULL, the return value needs to be checked\nto avoid NULL poineter dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5bf1e3bd7da625ccf9a22c8cb7d65271e6e47f4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62952905e195f7350bc230cf0960a74ddbceed5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67ea657c7891c2f86a7750395640d9bdf2555926","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d569ae98ee5490585929be69fea68047679b7b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b64b6dff15a38468b8cd33fc7864fa4e02b0933a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53535","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.457","lastModified":"2025-10-04T16:15:48.457","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bcmgenet: Add a check for oversized packets\n\nOccasionnaly we may get oversized packets from the hardware which\nexceed the nomimal 2KiB buffer size we allocate SKBs with. Add an early\ncheck which drops the packet to avoid invoking skb_over_panic() and move\non to processing the next packet."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/124ca24e0de958d2e20e0aa1e2434af7b72f8887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/411317d2a4a7d6049d8efeef0d32ae43f8baefce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c0862c2c962052ed5055220a00ac1cefb92fbcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f56767fb5f2df875b6553e08dbec6a45431c988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cdb07e10c1258c08f31b24898930e4ece88d163","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/841881320562cbeac7046b537b91cd000480cea2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87363d1ab55e497702a9506ff423c422639c8a25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c34b1c0870323649d45c5074828d7f754dea2673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53536","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.580","lastModified":"2025-10-04T16:15:48.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-crypto: make blk_crypto_evict_key() more robust\n\nIf blk_crypto_evict_key() sees that the key is still in-use (due to a\nbug) or that ->keyslot_evict failed, it currently just returns while\nleaving the key linked into the keyslot management structures.\n\nHowever, blk_crypto_evict_key() is only called in contexts such as inode\neviction where failure is not an option.  So actually the caller\nproceeds with freeing the blk_crypto_key regardless of the return value\nof blk_crypto_evict_key().\n\nThese two assumptions don't match, and the result is that there can be a\nuse-after-free in blk_crypto_reprogram_all_keys() after one of these\nerrors occurs.  (Note, these errors *shouldn't* happen; we're just\ntalking about what happens if they do anyway.)\n\nFix this by making blk_crypto_evict_key() unlink the key from the\nkeyslot management structures even on failure.\n\nAlso improve some comments."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5bb4005fb667c6e2188fa87950f8d5faf2994410","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c62852942667c613de0458fc797c5b8c36112b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7cb94452901a93e90c2230632e2c12a681bc92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64ef787bb1588475163069c2e62fdd8f6c27b1f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/701a8220762ff90615dc91d3543f789391b63298","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/809a5be62e92a444a3c3d7b9f438019d0b322f55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53537","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.697","lastModified":"2025-10-04T16:15:48.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid use-after-free for cached IPU bio\n\nxfstest generic\/019 reports a bug:\n\nkernel BUG at mm\/filemap.c:1619!\nRIP: 0010:folio_end_writeback+0x8a\/0x90\nCall Trace:\n end_page_writeback+0x1c\/0x60\n f2fs_write_end_io+0x199\/0x420\n bio_endio+0x104\/0x180\n submit_bio_noacct+0xa5\/0x510\n submit_bio+0x48\/0x80\n f2fs_submit_write_bio+0x35\/0x300\n f2fs_submit_merged_ipu_write+0x2a0\/0x2b0\n f2fs_write_single_data_page+0x838\/0x8b0\n f2fs_write_cache_pages+0x379\/0xa30\n f2fs_write_data_pages+0x30c\/0x340\n do_writepages+0xd8\/0x1b0\n __writeback_single_inode+0x44\/0x370\n writeback_sb_inodes+0x233\/0x4d0\n __writeback_inodes_wb+0x56\/0xf0\n wb_writeback+0x1dd\/0x2d0\n wb_workfn+0x367\/0x4a0\n process_one_work+0x21d\/0x430\n worker_thread+0x4e\/0x3c0\n kthread+0x103\/0x130\n ret_from_fork+0x2c\/0x50\n\nThe root cause is: after cp_error is set, f2fs_submit_merged_ipu_write()\nin f2fs_write_single_data_page() tries to flush IPU bio in cache, however\nf2fs_submit_merged_ipu_write() missed to check validity of @bio parameter,\nresult in submitting random cached bio which belong to other IO context,\nthen it will cause use-after-free issue, fix it by adding additional\nvalidity check."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5cdb422c839134273866208dad5360835ddb9794","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d058f0ab161437369ad6e45a4b67c2886e71373","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97ec6f1788cc6bee3f8c89cb908e1a2a1cd859bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a7f63283af6befc0f91d549f4f6917dff7479a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af4ce124d7bd74cb839bbdaccffbb416771a56b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2f423fda64fb49213aa0ed5056079cf295a5df2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53538","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.813","lastModified":"2025-10-04T16:15:48.813","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: insert tree mod log move in push_node_left\n\nThere is a fairly unlikely race condition in tree mod log rewind that\ncan result in a kernel panic which has the following trace:\n\n  [530.569] BTRFS critical (device sda3): unable to find logical 0 length 4096\n  [530.585] BTRFS critical (device sda3): unable to find logical 0 length 4096\n  [530.602] BUG: kernel NULL pointer dereference, address: 0000000000000002\n  [530.618] #PF: supervisor read access in kernel mode\n  [530.629] #PF: error_code(0x0000) - not-present page\n  [530.641] PGD 0 P4D 0\n  [530.647] Oops: 0000 [#1] SMP\n  [530.654] CPU: 30 PID: 398973 Comm: below Kdump: loaded Tainted: G S         O  K   5.12.0-0_fbk13_clang_7455_gb24de3bdb045 #1\n  [530.680] Hardware name: Quanta Mono Lake-M.2 SATA 1HY9U9Z001G\/Mono Lake-M.2 SATA, BIOS F20_3A15 08\/16\/2017\n  [530.703] RIP: 0010:__btrfs_map_block+0xaa\/0xd00\n  [530.755] RSP: 0018:ffffc9002c2f7600 EFLAGS: 00010246\n  [530.767] RAX: ffffffffffffffea RBX: ffff888292e41000 RCX: f2702d8b8be15100\n  [530.784] RDX: ffff88885fda6fb8 RSI: ffff88885fd973c8 RDI: ffff88885fd973c8\n  [530.800] RBP: ffff888292e410d0 R08: ffffffff82fd7fd0 R09: 00000000fffeffff\n  [530.816] R10: ffffffff82e57fd0 R11: ffffffff82e57d70 R12: 0000000000000000\n  [530.832] R13: 0000000000001000 R14: 0000000000001000 R15: ffffc9002c2f76f0\n  [530.848] FS:  00007f38d64af000(0000) GS:ffff88885fd80000(0000) knlGS:0000000000000000\n  [530.866] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [530.880] CR2: 0000000000000002 CR3: 00000002b6770004 CR4: 00000000003706e0\n  [530.896] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  [530.912] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  [530.928] Call Trace:\n  [530.934]  ? btrfs_printk+0x13b\/0x18c\n  [530.943]  ? btrfs_bio_counter_inc_blocked+0x3d\/0x130\n  [530.955]  btrfs_map_bio+0x75\/0x330\n  [530.963]  ? kmem_cache_alloc+0x12a\/0x2d0\n  [530.973]  ? btrfs_submit_metadata_bio+0x63\/0x100\n  [530.984]  btrfs_submit_metadata_bio+0xa4\/0x100\n  [530.995]  submit_extent_page+0x30f\/0x360\n  [531.004]  read_extent_buffer_pages+0x49e\/0x6d0\n  [531.015]  ? submit_extent_page+0x360\/0x360\n  [531.025]  btree_read_extent_buffer_pages+0x5f\/0x150\n  [531.037]  read_tree_block+0x37\/0x60\n  [531.046]  read_block_for_search+0x18b\/0x410\n  [531.056]  btrfs_search_old_slot+0x198\/0x2f0\n  [531.066]  resolve_indirect_ref+0xfe\/0x6f0\n  [531.076]  ? ulist_alloc+0x31\/0x60\n  [531.084]  ? kmem_cache_alloc_trace+0x12e\/0x2b0\n  [531.095]  find_parent_nodes+0x720\/0x1830\n  [531.105]  ? ulist_alloc+0x10\/0x60\n  [531.113]  iterate_extent_inodes+0xea\/0x370\n  [531.123]  ? btrfs_previous_extent_item+0x8f\/0x110\n  [531.134]  ? btrfs_search_path_in_tree+0x240\/0x240\n  [531.146]  iterate_inodes_from_logical+0x98\/0xd0\n  [531.157]  ? btrfs_search_path_in_tree+0x240\/0x240\n  [531.168]  btrfs_ioctl_logical_to_ino+0xd9\/0x180\n  [531.179]  btrfs_ioctl+0xe2\/0x2eb0\n\nThis occurs when logical inode resolution takes a tree mod log sequence\nnumber, and then while backref walking hits a rewind on a busy node\nwhich has the following sequence of tree mod log operations (numbers\nfilled in from a specific example, but they are somewhat arbitrary)\n\n  REMOVE_WHILE_FREEING slot 532\n  REMOVE_WHILE_FREEING slot 531\n  REMOVE_WHILE_FREEING slot 530\n  ...\n  REMOVE_WHILE_FREEING slot 0\n  REMOVE slot 455\n  REMOVE slot 454\n  REMOVE slot 453\n  ...\n  REMOVE slot 0\n  ADD slot 455\n  ADD slot 454\n  ADD slot 453\n  ...\n  ADD slot 0\n  MOVE src slot 0 -> dst slot 456 nritems 533\n  REMOVE slot 455\n  REMOVE slot 454\n  REMOVE slot 453\n  ...\n  REMOVE slot 0\n\nWhen this sequence gets applied via btrfs_tree_mod_log_rewind, it\nallocates a fresh rewind eb, and first inserts the correct key info for\nthe 533 elements, then overwrites the first 456 of them, then decrements\nthe count by 456 via the add ops, then rewinds the move by doing a\nmemmove from 456:988->0:532. We have never written anything past 532,\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11f14402fe3437852cb44945b3b9f1bdb4032956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cead5422a0e3d13b0bcee986c0f5c4ebb94100b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53539","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:48.930","lastModified":"2025-10-04T16:15:48.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/rxe: Fix incomplete state save in rxe_requester\n\nIf a send packet is dropped by the IP layer in rxe_requester()\nthe call to rxe_xmit_packet() can fail with err == -EAGAIN.\nTo recover, the state of the wqe is restored to the state before\nthe packet was sent so it can be resent. However, the routines\nthat save and restore the state miss a significnt part of the\nvariable state in the wqe, the dma struct which is used to process\nthrough the sge table. And, the state is not saved before the packet\nis built which modifies the dma struct.\n\nUnder heavy stress testing with many QPs on a fast node sending\nlarge messages to a slow node dropped packets are observed and\nthe resent packets are corrupted because the dma struct was not\nrestored. This patch fixes this behavior and allows the test cases\nto succeed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/255c0e60e1d16874fc151358d94bc8df661600dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f2a6422287fe29f9343247d77b645100ece0652","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d122db2ff80cd2aed4dcd630befb56b51ddf947","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70518f3aaf5a059b691867d7d2d46b999319656a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53540","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.050","lastModified":"2025-10-04T16:15:49.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: reject auth\/assoc to AP with our address\n\nIf the AP uses our own address as its MLD address or BSSID, then\nclearly something's wrong. Reject such connections so we don't\ntry and fail later."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07added2c6cd63de047bc786b39436322abb67c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d4e04bf3a0f098bd9033de3a5291810fa14c7a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/676a423410131d111a264d29aecbe6aadd57fb22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53541","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.160","lastModified":"2025-10-04T16:15:49.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: brcmnand: Fix potential out-of-bounds access in oob write\n\nWhen the oob buffer length is not in multiple of words, the oob write\nfunction does out-of-bounds read on the oob source buffer at the last\niteration. Fix that by always checking length limit on the oob buffer\nread and fill with 0xff when reaching the end of the buffer to the oob\nregisters."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14b1d00520b4d6a4818364334ce472b79cfc8976","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2353b7bb61e45e7cfd21505d0c6747ac8c9496a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bc3d6ac704ea7263175ea3da663fdbbb7f3dd8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45fe4ad7f439799ee1b7b5f80bf82e8b34a98d25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d53244186c9ac58cb88d76a0958ca55b83a15cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/648d1150a688698e37f7aaf302860180901cb30e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aae45746f4aee9818296e0500e0703e9d8caa5b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d00b031266514a9395124704630b056a5185ec17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53542","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.290","lastModified":"2025-10-04T16:15:49.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: dts: exynos: Use Exynos5420 compatible for the MIPI video phy\n\nFor some reason, the driver adding support for Exynos5420 MIPI phy\nback in 2016 wasn't used on Exynos5420, which caused a kernel panic.\nAdd the proper compatible for it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/199624f3144d79fab1cff533ce6a4b82390520a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29961ee63dd676cc67f7c00f76faa21e11f0d7c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e68a0f7bc576318a58335c31c542b358bc63f83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/537bdfc1a67836fbd68bbe4210bc380f72cca47f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d5aa219a790d61cad2c38e1aa32058f16ad2f0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c075aa3467a799855a92289a3c619afc0a2ad193","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f10001af0f7246cf3e43530d25f8d59a8db10df6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2a6198f5ed7d6e4e06d87a4de007f2e45cc9583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53543","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.413","lastModified":"2025-10-04T16:15:49.413","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvdpa: Add max vqp attr to vdpa_nl_policy for nlattr length check\n\nThe vdpa_nl_policy structure is used to validate the nlattr when parsing\nthe incoming nlmsg. It will ensure the attribute being described produces\na valid nlattr pointer in info->attrs before entering into each handler\nin vdpa_nl_ops.\n\nThat is to say, the missing part in vdpa_nl_policy may lead to illegal\nnlattr after parsing, which could lead to OOB read just like CVE-2023-3773.\n\nThis patch adds the missing nla_policy for vdpa max vqp attr to avoid\nsuch bugs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d6ba607d6cb5c58a4ddf33381e18c83dbb4098f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea65e8b5e6b1a34deda7564f09c90e9e80db436a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff71709445ac033e6e250d971683110e4781c068","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53544","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.527","lastModified":"2025-10-04T16:15:49.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: davinci: Fix clk use after free\n\nThe remove function first frees the clks and only then calls\ncpufreq_unregister_driver(). If one of the cpufreq callbacks is called\njust before cpufreq_unregister_driver() is run, the freed clks might be\nused."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d8f384a9b4fc50f6a18405f1c08e5a87a77b5b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66b3bbe6fbd8dd410868e5b53ac3944a934b9310","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5f024d0e6f91e05c816ad4ee8837173369dd5cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab05ae4ab831f64bbc427592c86f599ed9c4324f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53545","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.637","lastModified":"2025-10-04T16:15:49.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: unmap and remove csa_va properly\n\nRoot PD BO should be reserved before unmap and remove\na bo_va from VM otherwise lockdep will complain.\n\nv2: check fpriv->csa_va is not NULL instead of amdgpu_mcbp (christian)\n\n[14616.936827] WARNING: CPU: 6 PID: 1711 at drivers\/gpu\/drm\/amd\/amdgpu\/amdgpu_vm.c:1762 amdgpu_vm_bo_del+0x399\/0x3f0 [amdgpu]\n[14616.937096] Call Trace:\n[14616.937097]  <TASK>\n[14616.937102]  amdgpu_driver_postclose_kms+0x249\/0x2f0 [amdgpu]\n[14616.937187]  drm_file_free+0x1d6\/0x300 [drm]\n[14616.937207]  drm_close_helper.isra.0+0x62\/0x70 [drm]\n[14616.937220]  drm_release+0x5e\/0x100 [drm]\n[14616.937234]  __fput+0x9f\/0x280\n[14616.937239]  ____fput+0xe\/0x20\n[14616.937241]  task_work_run+0x61\/0x90\n[14616.937246]  exit_to_user_mode_prepare+0x215\/0x220\n[14616.937251]  syscall_exit_to_user_mode+0x2a\/0x60\n[14616.937254]  do_syscall_64+0x48\/0x90\n[14616.937257]  entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5daff15cd013422bc6d1efcfe82b586800025384","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3a96bf843c356d1d9b2d7f6d0784b6ee28ca9d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53546","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.747","lastModified":"2025-10-04T16:15:49.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: DR, fix memory leak in mlx5dr_cmd_create_reformat_ctx\n\nwhen mlx5_cmd_exec failed in mlx5dr_cmd_create_reformat_ctx, the memory\npointed by 'in' is not released, which will cause memory leak. Move memory\nrelease after mlx5_cmd_exec."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00cecb0a8f9e7a21754d5ad85813ab6b47b3308f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/165159854757dbae0dfd1812b27051da35aa6223","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3169c3854397f3070a63b1b772db16dcb8cba7b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dd77585dd9d0e03dd1bceb95f0269a7eaf6b936","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/622d71d99124e69f7bf2e2b7a89f5f444a24d235","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/800d8c96bf997da5eb76ccf8d88795c4231c83fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53547","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:49.907","lastModified":"2025-10-04T16:15:49.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Fix sdma v4 sw fini error\n\nFix sdma v4 sw fini error for sdma 4.2.2 to\nsolve the following general protection fault\n\n[  +0.108196] general protection fault, probably for non-canonical\naddress 0xd5e5a4ae79d24a32: 0000 [#1] PREEMPT SMP PTI\n[  +0.000018] RIP: 0010:free_fw_priv+0xd\/0x70\n[  +0.000022] Call Trace:\n[  +0.000012]  <TASK>\n[  +0.000011]  release_firmware+0x55\/0x80\n[  +0.000021]  amdgpu_ucode_release+0x11\/0x20 [amdgpu]\n[  +0.000415]  amdgpu_sdma_destroy_inst_ctx+0x4f\/0x90 [amdgpu]\n[  +0.000360]  sdma_v4_0_sw_fini+0xce\/0x110 [amdgpu]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ebc02d9ff85626a526353584526da6aa9c96792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/210ef6cd8e634f18fd889421012192b81325b27b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e08e9c742a00384e5abe74bd40cf4dc15cb3a2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53548","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.020","lastModified":"2025-10-04T16:15:50.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usbnet: Fix WARNING in usbnet_start_xmit\/usb_submit_urb\n\nThe syzbot fuzzer identified a problem in the usbnet driver:\n\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 0 PID: 754 at drivers\/usb\/core\/urb.c:504 usb_submit_urb+0xed6\/0x1880 drivers\/usb\/core\/urb.c:504\nModules linked in:\nCPU: 0 PID: 754 Comm: kworker\/0:2 Not tainted 6.4.0-rc7-syzkaller-00014-g692b7dc87ca6 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 05\/27\/2023\nWorkqueue: mld mld_ifc_work\nRIP: 0010:usb_submit_urb+0xed6\/0x1880 drivers\/usb\/core\/urb.c:504\nCode: 7c 24 18 e8 2c b4 5b fb 48 8b 7c 24 18 e8 42 07 f0 fe 41 89 d8 44 89 e1 4c 89 ea 48 89 c6 48 c7 c7 a0 c9 fc 8a e8 5a 6f 23 fb <0f> 0b e9 58 f8 ff ff e8 fe b3 5b fb 48 81 c5 c0 05 00 00 e9 84 f7\nRSP: 0018:ffffc9000463f568 EFLAGS: 00010086\nRAX: 0000000000000000 RBX: 0000000000000001 RCX: 0000000000000000\nRDX: ffff88801eb28000 RSI: ffffffff814c03b7 RDI: 0000000000000001\nRBP: ffff8881443b7190 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000003\nR13: ffff88802a77cb18 R14: 0000000000000003 R15: ffff888018262500\nFS:  0000000000000000(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000556a99c15a18 CR3: 0000000028c71000 CR4: 0000000000350ef0\nCall Trace:\n <TASK>\n usbnet_start_xmit+0xfe5\/0x2190 drivers\/net\/usb\/usbnet.c:1453\n __netdev_start_xmit include\/linux\/netdevice.h:4918 [inline]\n netdev_start_xmit include\/linux\/netdevice.h:4932 [inline]\n xmit_one net\/core\/dev.c:3578 [inline]\n dev_hard_start_xmit+0x187\/0x700 net\/core\/dev.c:3594\n...\n\nThis bug is caused by the fact that usbnet trusts the bulk endpoint\naddresses its probe routine receives in the driver_info structure, and\nit does not check to see that these endpoints actually exist and have\nthe expected type and directions.\n\nThe fix is simply to add such a check."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd3e0c31bf3e933fb85faf1443833aef90b8e46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bebbd9b8037a9cc75984317cb495dec4824c399","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27d0f755d649d388fcd12f01436c9a33289e14e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53c250ea57cf03af41339234b9855ae284f9db91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e1627cb43ddf1b24b92eb26f8d958a3f5676ccb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a05ac5d00eb7fcb2fda806caa4f56e88df6bc6bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0715d04cf687a7e21f0d6ac8c1d479294a3f6f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec0d0be41721aca683c5606354a58ee2c687e3f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53549","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.143","lastModified":"2025-10-04T16:15:50.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: Rework long task execution when adding\/deleting entries\n\nWhen adding\/deleting large number of elements in one step in ipset, it can\ntake a reasonable amount of time and can result in soft lockup errors. The\npatch 5f7b51bf09ba (\"netfilter: ipset: Limit the maximal range of\nconsecutive elements to add\/delete\") tried to fix it by limiting the max\nelements to process at all. However it was not enough, it is still possible\nthat we get hung tasks. Lowering the limit is not reasonable, so the\napproach in this patch is as follows: rely on the method used at resizing\nsets and save the state when we reach a smaller internal batch limit,\nunlock\/lock and proceed from the saved state. Thus we can avoid long\ncontinuous tasks and at the same time removed the limit to add\/delete large\nnumber of elements in one step.\n\nThe nfnl mutex is held during the whole operation which prevents one to\nissue other ipset commands in parallel."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24a828f5a54bdeca0846526860d72b3766c5fe95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e29dc36bd5e2166b834ceb19990d9e68a734d7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8964cc36ba011dc0e1041131fa2e91fb4c2a811b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1e1521b463968b4eca7163f61fb6cc54d008061","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee756980e491c829ba0495bb420b7224a9ee26b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53550","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.260","lastModified":"2025-10-04T16:15:50.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: amd-pstate: fix global sysfs attribute type\n\nIn commit 3666062b87ec (\"cpufreq: amd-pstate: move to use bus_get_dev_root()\")\nthe \"amd_pstate\" attributes where moved from a dedicated kobject to the\ncpu root kobject.\n\nWhile the dedicated kobject expects to contain kobj_attributes the root\nkobject needs device_attributes.\n\nAs the changed arguments are not used by the callbacks it works most of\nthe time.\nHowever CFI will detect this issue:\n\n[ 4947.849350] CFI failure at dev_attr_show+0x24\/0x60 (target: show_status+0x0\/0x70; expected type: 0x8651b1de)\n...\n[ 4947.849409] Call Trace:\n[ 4947.849410]  <TASK>\n[ 4947.849411]  ? __warn+0xcf\/0x1c0\n[ 4947.849414]  ? dev_attr_show+0x24\/0x60\n[ 4947.849415]  ? report_cfi_failure+0x4e\/0x60\n[ 4947.849417]  ? handle_cfi_failure+0x14c\/0x1d0\n[ 4947.849419]  ? __cfi_show_status+0x10\/0x10\n[ 4947.849420]  ? handle_bug+0x4f\/0x90\n[ 4947.849421]  ? exc_invalid_op+0x1a\/0x60\n[ 4947.849422]  ? asm_exc_invalid_op+0x1a\/0x20\n[ 4947.849424]  ? __cfi_show_status+0x10\/0x10\n[ 4947.849425]  ? dev_attr_show+0x24\/0x60\n[ 4947.849426]  sysfs_kf_seq_show+0xa6\/0x110\n[ 4947.849433]  seq_read_iter+0x16c\/0x4b0\n[ 4947.849436]  vfs_read+0x272\/0x2d0\n[ 4947.849438]  ksys_read+0x72\/0xe0\n[ 4947.849439]  do_syscall_64+0x76\/0xb0\n[ 4947.849440]  ? do_user_addr_fault+0x252\/0x650\n[ 4947.849442]  ? exc_page_fault+0x7a\/0x1b0\n[ 4947.849443]  entry_SYSCALL_64_after_hwframe+0x72\/0xdc"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e720f8c8c9d959283c3908bbf32a91a01a86547","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddcfc33a20380508f7fea18e1c330abe17ed4fc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53551","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.370","lastModified":"2025-10-04T16:15:50.370","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_serial: Add null pointer check in gserial_resume\n\nConsider a case where gserial_disconnect has already cleared\ngser->ioport. And if a wakeup interrupt triggers afterwards,\ngserial_resume gets called, which will lead to accessing of\ngser->ioport and thus causing null pointer dereference.Add\na null pointer check to prevent this.\n\nAdded a static spinlock to prevent gser->ioport from becoming\nnull after the newly added check."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b24c980dc07be4550a9d1450ed7057f882530e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44e004f757a7ae13dfebaadbcfdb1a6f98c10377","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ec63fdbca604568890c577753c6f66c5b3ef0b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5360eec648bd506afa304ae4a71f82e13d41897","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec357cd3e8af614855d286dd378725cdc7264df6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53552","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.480","lastModified":"2025-10-04T16:15:50.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915: mark requests for GuC virtual engines to avoid use-after-free\n\nReferences to i915_requests may be trapped by userspace inside a\nsync_file or dmabuf (dma-resv) and held indefinitely across different\nproceses. To counter-act the memory leaks, we try to not to keep\nreferences from the request past their completion.\nOn the other side on fence release we need to know if rq->engine\nis valid and points to hw engine (true for non-virtual requests).\nTo make it possible extra bit has been added to rq->execution_mask,\nfor marking virtual engines.\n\n(cherry picked from commit 280410677af763f3871b93e794a199cfcf6fb580)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5eefc5307c983b59344a4cb89009819f580c84fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fb464d52fa41c31a6fd1ad82888e67c65935d94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8017a27cec32eac8c8f9430b0a3055840136b856","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53553","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.590","lastModified":"2025-10-04T16:15:50.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hyperv: avoid struct memcpy overrun warning\n\nA previous patch addressed the fortified memcpy warning for most\nbuilds, but I still see this one with gcc-9:\n\nIn file included from include\/linux\/string.h:254,\n                 from drivers\/hid\/hid-hyperv.c:8:\nIn function 'fortify_memcpy_chk',\n    inlined from 'mousevsc_on_receive' at drivers\/hid\/hid-hyperv.c:272:3:\ninclude\/linux\/fortify-string.h:583:4: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]\n  583 |    __write_overflow_field(p_size_field, size);\n      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMy guess is that the WARN_ON() itself is what confuses gcc, so it no\nlonger sees that there is a correct range check. Rework the code in a\nway that helps readability and avoids the warning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5f151364b1da6bd217632fd4ee8cc24eaf66a497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7902cc5f5b9c95997017c8e309da760fb1deb6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53554","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.697","lastModified":"2025-10-04T16:15:50.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: ks7010: potential buffer overflow in ks_wlan_set_encode_ext()\n\nThe \"exc->key_len\" is a u16 that comes from the user.  If it's over\nIW_ENCODING_TOKEN_MAX (64) that could lead to memory corruption."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5373a1aa91b2298f9305794b8270cf9896be96b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f1c7031e044cb2fba82836d55cc235e2ad619dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/663fff29fd613e2b0d30c4138157312ba93c4939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ae9f55a495077f838bab466411ee6f38574df9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9496fb96ddeb740dc6b966f4a7d8dfb8b93921c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1b04b56745bc79286c80aa876fabfab1e08ebf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baf420e30364ef9efe3e29a5c0e01e612aebf3fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/caac4b6c15b66feae4d83f602e1e46f124540202","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53555","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.813","lastModified":"2025-10-04T16:15:50.813","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/damon\/core: initialize damo_filter->list from damos_new_filter()\n\ndamos_new_filter() is not initializing the list field of newly allocated\nfilter object.  However, DAMON sysfs interface and DAMON_RECLAIM are not\ninitializing it after calling damos_new_filter().  As a result, accessing\nuninitialized memory is possible.  Actually, adding multiple DAMOS filters\nvia DAMON sysfs interface caused NULL pointer dereferencing.  Initialize\nthe field just after the allocation from damos_new_filter()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5f1fc67f2cb8d3035d3acd273b48b97835af8afd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da7beebb49c643cd03c54447ed66595936a7a1ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53556","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:50.927","lastModified":"2025-10-04T16:15:50.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix use-after-free in free_netdev\n\nWe do netif_napi_add() for all allocated q_vectors[], but potentially\ndo netif_napi_del() for part of them, then kfree q_vectors and leave\ninvalid pointers at dev->napi_list.\n\nReproducer:\n\n  [root@host ~]# cat repro.sh\n  #!\/bin\/bash\n\n  pf_dbsf=\"0000:41:00.0\"\n  vf0_dbsf=\"0000:41:02.0\"\n  g_pids=()\n\n  function do_set_numvf()\n  {\n      echo 2 >\/sys\/bus\/pci\/devices\/${pf_dbsf}\/sriov_numvfs\n      sleep $((RANDOM%3+1))\n      echo 0 >\/sys\/bus\/pci\/devices\/${pf_dbsf}\/sriov_numvfs\n      sleep $((RANDOM%3+1))\n  }\n\n  function do_set_channel()\n  {\n      local nic=$(ls -1 --indicator-style=none \/sys\/bus\/pci\/devices\/${vf0_dbsf}\/net\/)\n      [ -z \"$nic\" ] && { sleep $((RANDOM%3)) ; return 1; }\n      ifconfig $nic 192.168.18.5 netmask 255.255.255.0\n      ifconfig $nic up\n      ethtool -L $nic combined 1\n      ethtool -L $nic combined 4\n      sleep $((RANDOM%3))\n  }\n\n  function on_exit()\n  {\n      local pid\n      for pid in \"${g_pids[@]}\"; do\n          kill -0 \"$pid\" &>\/dev\/null && kill \"$pid\" &>\/dev\/null\n      done\n      g_pids=()\n  }\n\n  trap \"on_exit; exit\" EXIT\n\n  while :; do do_set_numvf ; done &\n  g_pids+=($!)\n  while :; do do_set_channel ; done &\n  g_pids+=($!)\n\n  wait\n\nResult:\n\n[ 4093.900222] ==================================================================\n[ 4093.900230] BUG: KASAN: use-after-free in free_netdev+0x308\/0x390\n[ 4093.900232] Read of size 8 at addr ffff88b4dc145640 by task repro.sh\/6699\n[ 4093.900233]\n[ 4093.900236] CPU: 10 PID: 6699 Comm: repro.sh Kdump: loaded Tainted: G           O     --------- -t - 4.18.0 #1\n[ 4093.900238] Hardware name: Powerleader PR2008AL\/H12DSi-N6, BIOS 2.0 04\/09\/2021\n[ 4093.900239] Call Trace:\n[ 4093.900244]  dump_stack+0x71\/0xab\n[ 4093.900249]  print_address_description+0x6b\/0x290\n[ 4093.900251]  ? free_netdev+0x308\/0x390\n[ 4093.900252]  kasan_report+0x14a\/0x2b0\n[ 4093.900254]  free_netdev+0x308\/0x390\n[ 4093.900261]  iavf_remove+0x825\/0xd20 [iavf]\n[ 4093.900265]  pci_device_remove+0xa8\/0x1f0\n[ 4093.900268]  device_release_driver_internal+0x1c6\/0x460\n[ 4093.900271]  pci_stop_bus_device+0x101\/0x150\n[ 4093.900273]  pci_stop_and_remove_bus_device+0xe\/0x20\n[ 4093.900275]  pci_iov_remove_virtfn+0x187\/0x420\n[ 4093.900277]  ? pci_iov_add_virtfn+0xe10\/0xe10\n[ 4093.900278]  ? pci_get_subsys+0x90\/0x90\n[ 4093.900280]  sriov_disable+0xed\/0x3e0\n[ 4093.900282]  ? bus_find_device+0x12d\/0x1a0\n[ 4093.900290]  i40e_free_vfs+0x754\/0x1210 [i40e]\n[ 4093.900298]  ? i40e_reset_all_vfs+0x880\/0x880 [i40e]\n[ 4093.900299]  ? pci_get_device+0x7c\/0x90\n[ 4093.900300]  ? pci_get_subsys+0x90\/0x90\n[ 4093.900306]  ? pci_vfs_assigned.part.7+0x144\/0x210\n[ 4093.900309]  ? __mutex_lock_slowpath+0x10\/0x10\n[ 4093.900315]  i40e_pci_sriov_configure+0x1fa\/0x2e0 [i40e]\n[ 4093.900318]  sriov_numvfs_store+0x214\/0x290\n[ 4093.900320]  ? sriov_totalvfs_show+0x30\/0x30\n[ 4093.900321]  ? __mutex_lock_slowpath+0x10\/0x10\n[ 4093.900323]  ? __check_object_size+0x15a\/0x350\n[ 4093.900326]  kernfs_fop_write+0x280\/0x3f0\n[ 4093.900329]  vfs_write+0x145\/0x440\n[ 4093.900330]  ksys_write+0xab\/0x160\n[ 4093.900332]  ? __ia32_sys_read+0xb0\/0xb0\n[ 4093.900334]  ? fput_many+0x1a\/0x120\n[ 4093.900335]  ? filp_close+0xf0\/0x130\n[ 4093.900338]  do_syscall_64+0xa0\/0x370\n[ 4093.900339]  ? page_fault+0x8\/0x30\n[ 4093.900341]  entry_SYSCALL_64_after_hwframe+0x65\/0xca\n[ 4093.900357] RIP: 0033:0x7f16ad4d22c0\n[ 4093.900359] Code: 73 01 c3 48 8b 0d d8 cb 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 89 24 2d 00 00 75 10 b8 01 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 fe dd 01 00 48 89 04 24\n[ 4093.900360] RSP: 002b:00007ffd6491b7f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ 4093.900362] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f16ad4d22c0\n[ 4093.900363] RDX: 0000000000000002 RSI: 0000000001a41408 RDI: 0000000000000001\n[ 4093.900364] RBP: 0000000001a41408 R08: 00007f16ad7a1780 R09: 00007f16ae1f2700\n[ 4093.9003\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17046107ca15d7571551539d94e76aba2bf71fd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/345c44e18cc10cded85cb9134830e1684495c866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f4fa1672d98fe99d2297b03add35346f1685d6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d781a9c53034813c3194b7d94409c7d24ac73eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4635f190f332304db4a49e827ece790b804b5db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca12b98e04b5d1902ac08fe826d3500cb4b6e891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53557","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.050","lastModified":"2025-10-04T16:15:51.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfprobe: Release rethook after the ftrace_ops is unregistered\n\nWhile running bpf selftests it's possible to get following fault:\n\n  general protection fault, probably for non-canonical address \\\n  0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC NOPTI\n  ...\n  Call Trace:\n   <TASK>\n   fprobe_handler+0xc1\/0x270\n   ? __pfx_bpf_testmod_init+0x10\/0x10\n   ? __pfx_bpf_testmod_init+0x10\/0x10\n   ? bpf_fentry_test1+0x5\/0x10\n   ? bpf_fentry_test1+0x5\/0x10\n   ? bpf_testmod_init+0x22\/0x80\n   ? do_one_initcall+0x63\/0x2e0\n   ? rcu_is_watching+0xd\/0x40\n   ? kmalloc_trace+0xaf\/0xc0\n   ? do_init_module+0x60\/0x250\n   ? __do_sys_finit_module+0xac\/0x120\n   ? do_syscall_64+0x37\/0x90\n   ? entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n   <\/TASK>\n\nIn unregister_fprobe function we can't release fp->rethook while it's\npossible there are some of its users still running on another cpu.\n\nMoving rethook_free call after fp->ops is unregistered with\nunregister_ftrace_function call."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03d63255a5783243c110aec5e6ae2f1475c3be76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f81018753dfd4989e33ece1f0cb6b8aae498b82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce3ec57faff559ccae1e0150c1f077eb2df648a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53558","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.163","lastModified":"2025-10-04T16:15:51.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu-tasks: Avoid pr_info() with spin lock in cblist_init_generic()\n\npr_info() is called with rtp->cbs_gbl_lock spin lock locked.  Because\npr_info() calls printk() that might sleep, this will result in BUG\nlike below:\n\n[    0.206455] cblist_init_generic: Setting adjustable number of callback queues.\n[    0.206463]\n[    0.206464] =============================\n[    0.206464] [ BUG: Invalid wait context ]\n[    0.206465] 5.19.0-00428-g9de1f9c8ca51 #5 Not tainted\n[    0.206466] -----------------------------\n[    0.206466] swapper\/0\/1 is trying to lock:\n[    0.206467] ffffffffa0167a58 (&port_lock_key){....}-{3:3}, at: serial8250_console_write+0x327\/0x4a0\n[    0.206473] other info that might help us debug this:\n[    0.206473] context-{5:5}\n[    0.206474] 3 locks held by swapper\/0\/1:\n[    0.206474]  #0: ffffffff9eb597e0 (rcu_tasks.cbs_gbl_lock){....}-{2:2}, at: cblist_init_generic.constprop.0+0x14\/0x1f0\n[    0.206478]  #1: ffffffff9eb579c0 (console_lock){+.+.}-{0:0}, at: _printk+0x63\/0x7e\n[    0.206482]  #2: ffffffff9ea77780 (console_owner){....}-{0:0}, at: console_emit_next_record.constprop.0+0x111\/0x330\n[    0.206485] stack backtrace:\n[    0.206486] CPU: 0 PID: 1 Comm: swapper\/0 Not tainted 5.19.0-00428-g9de1f9c8ca51 #5\n[    0.206488] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-1.fc36 04\/01\/2014\n[    0.206489] Call Trace:\n[    0.206490]  <TASK>\n[    0.206491]  dump_stack_lvl+0x6a\/0x9f\n[    0.206493]  __lock_acquire.cold+0x2d7\/0x2fe\n[    0.206496]  ? stack_trace_save+0x46\/0x70\n[    0.206497]  lock_acquire+0xd1\/0x2f0\n[    0.206499]  ? serial8250_console_write+0x327\/0x4a0\n[    0.206500]  ? __lock_acquire+0x5c7\/0x2720\n[    0.206502]  _raw_spin_lock_irqsave+0x3d\/0x90\n[    0.206504]  ? serial8250_console_write+0x327\/0x4a0\n[    0.206506]  serial8250_console_write+0x327\/0x4a0\n[    0.206508]  console_emit_next_record.constprop.0+0x180\/0x330\n[    0.206511]  console_unlock+0xf7\/0x1f0\n[    0.206512]  vprintk_emit+0xf7\/0x330\n[    0.206514]  _printk+0x63\/0x7e\n[    0.206516]  cblist_init_generic.constprop.0.cold+0x24\/0x32\n[    0.206518]  rcu_init_tasks_generic+0x5\/0xd9\n[    0.206522]  kernel_init_freeable+0x15b\/0x2a2\n[    0.206523]  ? rest_init+0x160\/0x160\n[    0.206526]  kernel_init+0x11\/0x120\n[    0.206527]  ret_from_fork+0x1f\/0x30\n[    0.206530]  <\/TASK>\n[    0.207018] cblist_init_generic: Setting shift to 1 and lim to 1.\n\nThis patch moves pr_info() so that it is called without\nrtp->cbs_gbl_lock locked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5fc8cbe4cf0fd34ded8045c385790c3bf04f6785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9027d69221ff96e1356f070f7feb2ff989ae7388","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea9b81c7d9104040b46a84d2303045de267f5557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53559","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.280","lastModified":"2025-10-04T16:15:51.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip_vti: fix potential slab-use-after-free in decode_session6\n\nWhen ip_vti device is set to the qdisc of the sfb type, the cb field\nof the sent skb may be modified during enqueuing. Then,\nslab-use-after-free may occur when ip_vti device sends IPv6 packets.\nAs commit f855691975bb (\"xfrm6: Fix the nexthdr offset in\n_decode_session6.\") showed, xfrm_decode_session was originally intended\nonly for the receive path. IP6CB(skb)->nhoff is not set during\ntransmission. Therefore, set the cb field in the skb to 0 before\nsending packets."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b4d69539fdea138af2befe08893850c89248068","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b05bf5dc437f7891dd409a3eaf5058459391c7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6018a266279b1a75143c7c0804dd08a5fc4c3e0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78e397a43e1c47321a4679cc49a6c4530bf820b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dfe23659f3677c08a60a0056cda2d91a79c15ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82fb41c5de243e7dfa90f32ca58e35adaff56c1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d34c30442d5e53a33cde79ca163320dbe2432cbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1e04cc2ef2c0c0866c19f5627149a76c2baae32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53560","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.397","lastModified":"2025-10-04T16:15:51.397","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing\/histograms: Add histograms to hist_vars if they have referenced variables\n\nHist triggers can have referenced variables without having direct\nvariables fields. This can be the case if referenced variables are added\nfor trigger actions. In this case the newly added references will not\nhave field variables. Not taking such referenced variables into\nconsideration can result in a bug where it would be possible to remove\nhist trigger with variables being refenced. This will result in a bug\nthat is easily reproducable like so\n\n$ cd \/sys\/kernel\/tracing\n$ echo 'synthetic_sys_enter char[] comm; long id' >> synthetic_events\n$ echo 'hist:keys=common_pid.execname,id.syscall:vals=hitcount:comm=common_pid.execname' >> events\/raw_syscalls\/sys_enter\/trigger\n$ echo 'hist:keys=common_pid.execname,id.syscall:onmatch(raw_syscalls.sys_enter).synthetic_sys_enter($comm, id)' >> events\/raw_syscalls\/sys_enter\/trigger\n$ echo '!hist:keys=common_pid.execname,id.syscall:vals=hitcount:comm=common_pid.execname' >> events\/raw_syscalls\/sys_enter\/trigger\n\n[  100.263533] ==================================================================\n[  100.264634] BUG: KASAN: slab-use-after-free in resolve_var_refs+0xc7\/0x180\n[  100.265520] Read of size 8 at addr ffff88810375d0f0 by task bash\/439\n[  100.266320]\n[  100.266533] CPU: 2 PID: 439 Comm: bash Not tainted 6.5.0-rc1 #4\n[  100.267277] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-20220807_005459-localhost 04\/01\/2014\n[  100.268561] Call Trace:\n[  100.268902]  <TASK>\n[  100.269189]  dump_stack_lvl+0x4c\/0x70\n[  100.269680]  print_report+0xc5\/0x600\n[  100.270165]  ? resolve_var_refs+0xc7\/0x180\n[  100.270697]  ? kasan_complete_mode_report_info+0x80\/0x1f0\n[  100.271389]  ? resolve_var_refs+0xc7\/0x180\n[  100.271913]  kasan_report+0xbd\/0x100\n[  100.272380]  ? resolve_var_refs+0xc7\/0x180\n[  100.272920]  __asan_load8+0x71\/0xa0\n[  100.273377]  resolve_var_refs+0xc7\/0x180\n[  100.273888]  event_hist_trigger+0x749\/0x860\n[  100.274505]  ? kasan_save_stack+0x2a\/0x50\n[  100.275024]  ? kasan_set_track+0x29\/0x40\n[  100.275536]  ? __pfx_event_hist_trigger+0x10\/0x10\n[  100.276138]  ? ksys_write+0xd1\/0x170\n[  100.276607]  ? do_syscall_64+0x3c\/0x90\n[  100.277099]  ? entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n[  100.277771]  ? destroy_hist_data+0x446\/0x470\n[  100.278324]  ? event_hist_trigger_parse+0xa6c\/0x3860\n[  100.278962]  ? __pfx_event_hist_trigger_parse+0x10\/0x10\n[  100.279627]  ? __kasan_check_write+0x18\/0x20\n[  100.280177]  ? mutex_unlock+0x85\/0xd0\n[  100.280660]  ? __pfx_mutex_unlock+0x10\/0x10\n[  100.281200]  ? kfree+0x7b\/0x120\n[  100.281619]  ? ____kasan_slab_free+0x15d\/0x1d0\n[  100.282197]  ? event_trigger_write+0xac\/0x100\n[  100.282764]  ? __kasan_slab_free+0x16\/0x20\n[  100.283293]  ? __kmem_cache_free+0x153\/0x2f0\n[  100.283844]  ? sched_mm_cid_remote_clear+0xb1\/0x250\n[  100.284550]  ? __pfx_sched_mm_cid_remote_clear+0x10\/0x10\n[  100.285221]  ? event_trigger_write+0xbc\/0x100\n[  100.285781]  ? __kasan_check_read+0x15\/0x20\n[  100.286321]  ? __bitmap_weight+0x66\/0xa0\n[  100.286833]  ? _find_next_bit+0x46\/0xe0\n[  100.287334]  ? task_mm_cid_work+0x37f\/0x450\n[  100.287872]  event_triggers_call+0x84\/0x150\n[  100.288408]  trace_event_buffer_commit+0x339\/0x430\n[  100.289073]  ? ring_buffer_event_data+0x3f\/0x60\n[  100.292189]  trace_event_raw_event_sys_enter+0x8b\/0xe0\n[  100.295434]  syscall_trace_enter.constprop.0+0x18f\/0x1b0\n[  100.298653]  syscall_enter_from_user_mode+0x32\/0x40\n[  100.301808]  do_syscall_64+0x1a\/0x90\n[  100.304748]  entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n[  100.307775] RIP: 0033:0x7f686c75c1cb\n[  100.310617] Code: 73 01 c3 48 8b 0d 65 3c 10 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 21 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 35 3c 10 00 f7 d8 64 89 01 48\n[  100.317847] RSP: 002b:00007ffc60137a38 EFLAGS: 00000246 ORIG_RAX: 0000000000000021\n[  100.321200] RA\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1576f0df7b4d1f82db588d6654b89d796fa06929","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4815359056083c555f97a5ee3af86519be5166de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a540f63618e525e433b37d2b5522cda08e321d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ffad1528e81c91769d9da1f8436080861c8ec67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fd32eb6fa0ac795aa5a64bc004ab68d7b44196a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6018b585e8c6fa7d85d4b38d9ce49a5b67be7078","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97f54b330c797ed27fba8791baeaa38ace886cbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53561","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.530","lastModified":"2025-10-04T16:15:51.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: iosm: fix NULL pointer dereference when removing device\n\nIn suspend and resume cycle, the removal and rescan of device ends\nup in NULL pointer dereference.\n\nDuring driver initialization, if the ipc_imem_wwan_channel_init()\nfails to get the valid device capabilities it returns an error and\nfurther no resource (wwan struct) will be allocated. Now in this\nsituation if driver removal procedure is initiated it would result\nin NULL pointer exception since unallocated wwan struct is dereferenced\ninside ipc_wwan_deinit().\n\nipc_imem_run_state_worker() to handle the called functions return value\nand to release the resource in failure case. It also reports the link\ndown event in failure cases. The user space application can handle this\nevent to do a device reset for restoring the device communication."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60829145f1e2650b31ebe6a0ec70a9725b38fa2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/862c6e3e26735247d8a4df41fa2421909c3f4d63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee44bacf462db3ec6e4f0dcfa7931e768670d77c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53562","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.643","lastModified":"2025-10-04T16:15:51.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm: fix vram leak on bind errors\n\nMake sure to release the VRAM buffer also in a case a subcomponent fails\nto bind.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/525094\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/544711591a67a6da4d9f0f70ba3c805eb2548729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60d476af96015891c7959f30838ae7a9749932bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c02e8c1c5b3eb0b6193946194ac280f58f48b3b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3401e07ba98a94b978164b7e873c25e5fc82b4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53563","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.757","lastModified":"2025-10-04T16:15:51.757","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: amd-pstate-ut: Fix kernel panic when loading the driver\n\nAfter loading the amd-pstate-ut driver, amd_pstate_ut_check_perf()\nand amd_pstate_ut_check_freq() use cpufreq_cpu_get() to get the policy\nof the CPU and mark it as busy.\n\nIn these functions, cpufreq_cpu_put() should be used to release the\npolicy, but it is not, so any other entity trying to access the policy\nis blocked indefinitely.\n\nOne such scenario is when amd_pstate mode is changed, leading to the\nfollowing splat:\n\n[ 1332.103727] INFO: task bash:2929 blocked for more than 120 seconds.\n[ 1332.110001]       Not tainted 6.5.0-rc2-amd-pstate-ut #5\n[ 1332.115315] \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n[ 1332.123140] task:bash            state:D stack:0     pid:2929  ppid:2873   flags:0x00004006\n[ 1332.123143] Call Trace:\n[ 1332.123145]  <TASK>\n[ 1332.123148]  __schedule+0x3c1\/0x16a0\n[ 1332.123154]  ? _raw_read_lock_irqsave+0x2d\/0x70\n[ 1332.123157]  schedule+0x6f\/0x110\n[ 1332.123160]  schedule_timeout+0x14f\/0x160\n[ 1332.123162]  ? preempt_count_add+0x86\/0xd0\n[ 1332.123165]  __wait_for_common+0x92\/0x190\n[ 1332.123168]  ? __pfx_schedule_timeout+0x10\/0x10\n[ 1332.123170]  wait_for_completion+0x28\/0x30\n[ 1332.123173]  cpufreq_policy_put_kobj+0x4d\/0x90\n[ 1332.123177]  cpufreq_policy_free+0x157\/0x1d0\n[ 1332.123178]  ? preempt_count_add+0x58\/0xd0\n[ 1332.123180]  cpufreq_remove_dev+0xb6\/0x100\n[ 1332.123182]  subsys_interface_unregister+0x114\/0x120\n[ 1332.123185]  ? preempt_count_add+0x58\/0xd0\n[ 1332.123187]  ? __pfx_amd_pstate_change_driver_mode+0x10\/0x10\n[ 1332.123190]  cpufreq_unregister_driver+0x3b\/0xd0\n[ 1332.123192]  amd_pstate_change_driver_mode+0x1e\/0x50\n[ 1332.123194]  store_status+0xe9\/0x180\n[ 1332.123197]  dev_attr_store+0x1b\/0x30\n[ 1332.123199]  sysfs_kf_write+0x42\/0x50\n[ 1332.123202]  kernfs_fop_write_iter+0x143\/0x1d0\n[ 1332.123204]  vfs_write+0x2df\/0x400\n[ 1332.123208]  ksys_write+0x6b\/0xf0\n[ 1332.123210]  __x64_sys_write+0x1d\/0x30\n[ 1332.123213]  do_syscall_64+0x60\/0x90\n[ 1332.123216]  ? fpregs_assert_state_consistent+0x2e\/0x50\n[ 1332.123219]  ? exit_to_user_mode_prepare+0x49\/0x1a0\n[ 1332.123223]  ? irqentry_exit_to_user_mode+0xd\/0x20\n[ 1332.123225]  ? irqentry_exit+0x3f\/0x50\n[ 1332.123226]  ? exc_page_fault+0x8e\/0x190\n[ 1332.123228]  entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n[ 1332.123232] RIP: 0033:0x7fa74c514a37\n[ 1332.123234] RSP: 002b:00007ffe31dd0788 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ 1332.123238] RAX: ffffffffffffffda RBX: 0000000000000008 RCX: 00007fa74c514a37\n[ 1332.123239] RDX: 0000000000000008 RSI: 000055e27c447aa0 RDI: 0000000000000001\n[ 1332.123241] RBP: 000055e27c447aa0 R08: 00007fa74c5d1460 R09: 000000007fffffff\n[ 1332.123242] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000008\n[ 1332.123244] R13: 00007fa74c61a780 R14: 00007fa74c616600 R15: 00007fa74c615a00\n[ 1332.123247]  <\/TASK>\n\nFix this by calling cpufreq_cpu_put() wherever necessary.\n\n[ rjw: Subject and changelog edits ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f74f12ee042fd72e45f0e8700e063c84ef3883b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60dd283804479c4a52f995b713f448e2cd65b8c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84857640c67405eed258c461b3ef909002f1e201","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcf78a17bbb94bebaa912f0460a1848f7d374c94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53564","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.870","lastModified":"2025-10-04T16:15:51.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix defrag path triggering jbd2 ASSERT\n\ncode path:\n\nocfs2_ioctl_move_extents\n ocfs2_move_extents\n  ocfs2_defrag_extent\n   __ocfs2_move_extent\n    + ocfs2_journal_access_di\n    + ocfs2_split_extent  \/\/sub-paths call jbd2_journal_restart\n    + ocfs2_journal_dirty \/\/crash by jbs2 ASSERT\n\ncrash stacks:\n\nPID: 11297  TASK: ffff974a676dcd00  CPU: 67  COMMAND: \"defragfs.ocfs2\"\n #0 [ffffb25d8dad3900] machine_kexec at ffffffff8386fe01\n #1 [ffffb25d8dad3958] __crash_kexec at ffffffff8395959d\n #2 [ffffb25d8dad3a20] crash_kexec at ffffffff8395a45d\n #3 [ffffb25d8dad3a38] oops_end at ffffffff83836d3f\n #4 [ffffb25d8dad3a58] do_trap at ffffffff83833205\n #5 [ffffb25d8dad3aa0] do_invalid_op at ffffffff83833aa6\n #6 [ffffb25d8dad3ac0] invalid_op at ffffffff84200d18\n    [exception RIP: jbd2_journal_dirty_metadata+0x2ba]\n    RIP: ffffffffc09ca54a  RSP: ffffb25d8dad3b70  RFLAGS: 00010207\n    RAX: 0000000000000000  RBX: ffff9706eedc5248  RCX: 0000000000000000\n    RDX: 0000000000000001  RSI: ffff97337029ea28  RDI: ffff9706eedc5250\n    RBP: ffff9703c3520200   R8: 000000000f46b0b2   R9: 0000000000000000\n    R10: 0000000000000001  R11: 00000001000000fe  R12: ffff97337029ea28\n    R13: 0000000000000000  R14: ffff9703de59bf60  R15: ffff9706eedc5250\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #7 [ffffb25d8dad3ba8] ocfs2_journal_dirty at ffffffffc137fb95 [ocfs2]\n #8 [ffffb25d8dad3be8] __ocfs2_move_extent at ffffffffc139a950 [ocfs2]\n #9 [ffffb25d8dad3c80] ocfs2_defrag_extent at ffffffffc139b2d2 [ocfs2]\n\nAnalysis\n\nThis bug has the same root cause of 'commit 7f27ec978b0e (\"ocfs2: call\nocfs2_journal_access_di() before ocfs2_journal_dirty() in\nocfs2_write_end_nolock()\")'.  For this bug, jbd2_journal_restart() is\ncalled by ocfs2_split_extent() during defragmenting.\n\nHow to fix\n\nFor ocfs2_split_extent() can handle journal operations totally by itself. \nCaller doesn't need to call journal access\/dirty pair, and caller only\nneeds to call journal start\/stop pair.  The fix method is to remove\njournal access\/dirty from __ocfs2_move_extent().\n\nThe discussion for this patch:\nhttps:\/\/oss.oracle.com\/pipermail\/ocfs2-devel\/2023-February\/000647.html"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c559b3ba8e0b9e3c4bb08159a28ccadc698410f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33665d1042666f2e5c736a3df1f453e31f030663","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/590507ebabd33cd93324c04f9a5538309a5ba934","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f43d34a51ed30e6a60f7e59d224a63014fe2cd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60eed1e3d45045623e46944ebc7c42c30a4350f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/669134a66d37258e1c4a5cfbd5b82f547ae30fca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f3b1c28e2908755fb248d3ee8ff56826f2387db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8163ea90d89b7012dd1fa4b28edf5db0c641eca7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53565","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:51.987","lastModified":"2025-10-04T16:15:51.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: Check for probe() id argument being NULL\n\nThe probe() id argument may be NULL in 2 scenarios:\n\n1. brcmf_pcie_pm_leave_D3() calling brcmf_pcie_probe() to reprobe\n   the device.\n\n2. If a user tries to manually bind the driver from sysfs then the sdio \/\n   pcie \/ usb probe() function gets called with NULL as id argument.\n\n1. Is being hit by users causing the following oops on resume and causing\nwifi to stop working:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000018\n<snip>\nHardware name: Dell Inc. XPS 13 9350\/0PWNCR, BIDS 1.13.0 02\/10\/2020\nWorkgueue: events_unbound async_run_entry_fn\nRIP: 0010:brcmf_pcie_probe+Ox16b\/0x7a0 [brcmfmac]\n<snip>\nCall Trace:\n <TASK>\n brcmf_pcie_pm_leave_D3+0xc5\/8x1a0 [brcmfmac be3b4cefca451e190fa35be8f00db1bbec293887]\n ? pci_pm_resume+0x5b\/0xf0\n ? pci_legacy_resume+0x80\/0x80\n dpm_run_callback+0x47\/0x150\n device_resume+0xa2\/0x1f0\n async_resume+0x1d\/0x30\n<snip>\n\nFix this by checking for id being NULL.\n\nIn the PCI and USB cases try a manual lookup of the id so that manually\nbinding the driver through sysfs and more importantly brcmf_pcie_probe()\non resume will work.\n\nFor the SDIO case there is no helper to do a manual sdio_device_id lookup,\nso just directly error out on a NULL id there."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60fc756fc8e6954a5618eecac73b255d651602e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84766e77a5c35e2b60e34f570c62fc97adc05e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53566","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.103","lastModified":"2025-10-04T16:15:52.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_set_rbtree: fix null deref on element insertion\n\nThere is no guarantee that rb_prev() will not return NULL in nft_rbtree_gc_elem():\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]\n nft_add_set_elem+0x14b0\/0x2990\n  nf_tables_newsetelem+0x528\/0xb30\n\nFurthermore, there is a possible use-after-free while iterating,\n'node' can be free'd so we need to cache the next value to use."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3fa13203b6d90cc3a33af47b058739f92ab82eef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61ae320a29b0540c16931816299eb86bf2b66c08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/899aa5638568abf5d69de7a7bb95e4615157375b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a337706c1fb35aac3f26b48aca80421bdbe1d33a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a836be60a3aabcedcd9c79f545d409ace1f20ba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b76db53ee8802ee5683f8cb401d7e2ec6f9b3d56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec5caa765f7f6960011c919c9aeb1467940421f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53567","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.223","lastModified":"2025-10-04T16:15:52.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: qup: Don't skip cleanup in remove's error path\n\nReturning early in a platform driver's remove callback is wrong. In this\ncase the dma resources are not released in the error path. this is never\nretried later and so this is a permanent leak. To fix this, only skip\nhardware disabling if waking the device fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d0f63077f481f11a07f20eab1c1f4367dfaef32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49c17fccae36505550c9121891722fff337f148a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55ecdcd12bc176b86fecbcb125ac814ac8fe857a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61f49171a43ab1f80c73c5c88c508770c461e0f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8632384337038b97910c2f7bb5a3f377aa68d001","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc88243bbe6140d289bb32b4ee4607ba5ce1124a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f345d4d71e87d878437417ffbb9a7d4e16d235eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd53f41bd86daa39b454fd4637a908ff2123547f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53568","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.343","lastModified":"2025-10-04T16:15:52.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/zcrypt: don't leak memory if dev_set_name() fails\n\nWhen dev_set_name() fails, zcdn_create() doesn't free the newly\nallocated resources. Do it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0878052579cb2773caee64812a811edcab6b5a55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/131cd74a8e38d75239f2c81dfee53d6554eb8bf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/147d8da33a2c2195ec63acd56cd7d80a3458c253","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/174f11ef1615ec3ab1e2189685864433c0d855a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6252f47b78031979ad919f971dc8468b893488bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b0cb9c055843777b374309503d89eabeb769355","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53569","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.460","lastModified":"2025-10-04T16:15:52.460","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next2: Check block size validity during mount\n\nCheck that log of block size stored in the superblock has sensible\nvalue. Otherwise the shift computing the block size can overflow leading\nto undefined behavior."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ebfaf14150f55550cffb1148ed3920143c7a69c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22ab5fed07ad4b206ea910fd0132d1a0d4831584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/451b98155be5dfee05bc6e7c8b30c0be4add3f71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62aeb94433fcec80241754b70d0d1836d5926b0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99f8a15af6c9f0653193104a9e70891f950c6001","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2e7776843a953fd7e48895c3880c277f996193e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4813f858e5c3e4c4659ce95385c1c400c593e1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6f4fb28890c1361e0db9eb1adee3fc04e7fe7f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53570","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.577","lastModified":"2025-10-04T16:15:52.577","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: fix integer overflow in nl80211_parse_mbssid_elems()\n\nnl80211_parse_mbssid_elems() uses a u8 variable num_elems to count the\nnumber of MBSSID elements in the nested netlink attribute attrs, which can\nlead to an integer overflow if a user of the nl80211 interface specifies\n256 or more elements in the corresponding attribute in userspace. The\ninteger overflow can lead to a heap buffer overflow as num_elems determines\nthe size of the trailing array in elems, and this array is thereafter\nwritten to for each element in attrs.\n\nNote that this vulnerability only affects devices with the\nwiphy->mbssid_max_interfaces member set for the wireless physical device\nstruct in the device driver, and can only be triggered by a process with\nCAP_NET_ADMIN capabilities.\n\nFix this by checking for a maximum of 255 elements in attrs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6311071a056272e1e761de8d0305e87cc566f734","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d09f9f255a5f78578deba5454923072bb53b16c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e642eb67b8c10dcce758d549cc81564116e0fa49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53571","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.690","lastModified":"2025-10-04T16:15:52.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915: Make intel_get_crtc_new_encoder() less oopsy\n\nThe point of the WARN was to print something, not oops\nstraight up. Currently that is precisely what happens\nif we can't find the connector for the crtc in the atomic\nstate. Get the dev pointer from the atomic state instead\nof the potentially NULL encoder to avoid that.\n\n(cherry picked from commit 3b6692357f70498f617ea1b31a0378070a0acf1c)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fe6ef82e4f4764e8f556632e4cd93d78d448e99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54202488c835dab8c648acd107f0bb8eaa699894","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/631420b06597a33c72b6dcef78d1c2dea17f452d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/780f303233c35eeb5132e3ee1cbc8f4cebe86dd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cd725315c559a8a4d18ac1d7fce1d6b9a667529","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd8b0abecdf66379e9d25d7448b942b5be379cb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53572","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.803","lastModified":"2025-10-04T16:15:52.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: imx: scu: use _safe list iterator to avoid a use after free\n\nThis loop is freeing \"clk\" so it needs to use list_for_each_entry_safe().\nOtherwise it dereferences a freed variable to get the next item on the\nloop."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08cc7cd2c2a29a2abf5bceb8f048c0734d3694ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a719f0e4b6f233979e219baff73923e76a96e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d90921f91fc6a8c801d527bb5848c99e335c1cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/632c60ecd25dbacee54d5581fe3aeb834b57010a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f95ff838ac39f861d1f95a0f3bbb1e01c2517d79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53573","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:52.917","lastModified":"2025-10-04T16:15:52.917","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: rs9: Fix suspend\/resume\n\nDisabling the cache in commit 2ff4ba9e3702 (\"clk: rs9: Fix I2C accessors\")\nwithout removing cache synchronization in resume path results in a\nkernel panic as map->cache_ops is unset, due to REGCACHE_NONE.\nEnable flat cache again to support resume again. num_reg_defaults_raw\nis necessary to read the cache defaults from hardware. Some registers\nare strapped in hardware and cannot be provided in software."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/632e04739c8f45c2d9ca4d4c5bd18d80c2ac9296","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74f4471ad64214dd5046213ebdd6e0930da7bd2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a983967602675880d6160a17ace2c0f48717ff33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53574","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.023","lastModified":"2025-10-04T16:15:53.023","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw88: delete timer and free skb queue when unloading\n\nFix possible crash and memory leak on driver unload by deleting\nTX purge timer and freeing C2H queue in 'rtw_core_deinit()',\nshrink critical section in the latter by freeing COEX queue\nout of TX report lock scope."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4128b00a6006870e117ab1841e58f369e9284ecb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/634fcbcaa4062db39aeb5ac6ed1bc1feb8dd5216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53575","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.140","lastModified":"2025-10-04T16:15:53.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: fix potential array out of bounds access\n\nAccount for IWL_SEC_WEP_KEY_OFFSET when needed while verifying\nkey_len size in iwl_mvm_sec_key_add()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/133b1cd4d98bb8b272335c8e6b0e0c399c0b2ffa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/637452360ecde9ac972d19416e9606529576b302","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53576","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.250","lastModified":"2025-10-04T16:15:53.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnull_blk: Always check queue mode setting from configfs\n\nMake sure to check device queue mode in the null_validate_conf() and\nreturn error for NULL_Q_RQ as we don't allow legacy I\/O path, without\nthis patch we get OOPs when queue mode is set to 1 from configfs,\nfollowing are repro steps :-\n\nmodprobe null_blk nr_devices=0\nmkdir config\/nullb\/nullb0\necho 1 > config\/nullb\/nullb0\/memory_backed\necho 4096 > config\/nullb\/nullb0\/blocksize\necho 20480 > config\/nullb\/nullb0\/size\necho 1 > config\/nullb\/nullb0\/queue_mode\necho 1 > config\/nullb\/nullb0\/power\n\nEntering kdb (current=0xffff88810acdd080, pid 2372) on processor 42 Oops: (null)\ndue to oops @ 0xffffffffc041c329\nCPU: 42 PID: 2372 Comm: sh Tainted: G           O     N 6.3.0-rc5lblk+ #5\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:null_add_dev.part.0+0xd9\/0x720 [null_blk]\nCode: 01 00 00 85 d2 0f 85 a1 03 00 00 48 83 bb 08 01 00 00 00 0f 85 f7 03 00 00 80 bb 62 01 00 00 00 48 8b 75 20 0f 85 6d 02 00 00 <48> 89 6e 60 48 8b 75 20 bf 06 00 00 00 e8 f5 37 2c c1 48 8b 75 20\nRSP: 0018:ffffc900052cbde0 EFLAGS: 00010246\nRAX: 0000000000000001 RBX: ffff88811084d800 RCX: 0000000000000001\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888100042e00\nRBP: ffff8881053d8200 R08: ffffc900052cbd68 R09: ffff888105db2000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000002\nR13: ffff888104765200 R14: ffff88810eec1748 R15: ffff88810eec1740\nFS:  00007fd445fd1740(0000) GS:ffff8897dfc80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000060 CR3: 0000000166a00000 CR4: 0000000000350ee0\nDR0: ffffffff8437a488 DR1: ffffffff8437a489 DR2: ffffffff8437a48a\nDR3: ffffffff8437a48b DR6: 00000000ffff0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n nullb_device_power_store+0xd1\/0x120 [null_blk]\n configfs_write_iter+0xb4\/0x120\n vfs_write+0x2ba\/0x3c0\n ksys_write+0x5f\/0xe0\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x72\/0xdc\nRIP: 0033:0x7fd4460c57a7\nCode: 0d 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 48 89 54 24 18 48 89 74 24\nRSP: 002b:00007ffd3792a4a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007fd4460c57a7\nRDX: 0000000000000002 RSI: 000055b43c02e4c0 RDI: 0000000000000001\nRBP: 000055b43c02e4c0 R08: 000000000000000a R09: 00007fd44615b4e0\nR10: 00007fd44615b3e0 R11: 0000000000000246 R12: 0000000000000002\nR13: 00007fd446198520 R14: 0000000000000002 R15: 00007fd446198700\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35e304dbcefa95237a3d6f94c007bfb10f012b17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63f8793ee60513a09f110ea460a6ff2c33811cdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/651260e563d9f50827dac496dc8a0b9b23d5db1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e732a266b973cd4e115e2cc2ea5007119e8a7fbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd35b7bb6d5a329c427924886949ab51f210200a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53577","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.363","lastModified":"2025-10-04T16:15:53.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, cpumap: Make sure kthread is running before map update returns\n\nThe following warning was reported when running stress-mode enabled\nxdp_redirect_cpu with some RT threads:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 4 PID: 65 at kernel\/bpf\/cpumap.c:135\n  CPU: 4 PID: 65 Comm: kworker\/4:1 Not tainted 6.5.0-rc2+ #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n  Workqueue: events cpu_map_kthread_stop\n  RIP: 0010:put_cpu_map_entry+0xda\/0x220\n  ......\n  Call Trace:\n   <TASK>\n   ? show_regs+0x65\/0x70\n   ? __warn+0xa5\/0x240\n   ......\n   ? put_cpu_map_entry+0xda\/0x220\n   cpu_map_kthread_stop+0x41\/0x60\n   process_one_work+0x6b0\/0xb80\n   worker_thread+0x96\/0x720\n   kthread+0x1a5\/0x1f0\n   ret_from_fork+0x3a\/0x70\n   ret_from_fork_asm+0x1b\/0x30\n   <\/TASK>\n\nThe root cause is the same as commit 436901649731 (\"bpf: cpumap: Fix memory\nleak in cpu_map_update_elem\"). The kthread is stopped prematurely by\nkthread_stop() in cpu_map_kthread_stop(), and kthread() doesn't call\ncpu_map_kthread_run() at all but XDP program has already queued some\nframes or skbs into ptr_ring. So when __cpu_map_ring_cleanup() checks\nthe ptr_ring, it will find it was not emptied and report a warning.\n\nAn alternative fix is to use __cpu_map_ring_cleanup() to drop these\npending frames or skbs when kthread_stop() returns -EINTR, but it may\nconfuse the user, because these frames or skbs have been handled\ncorrectly by XDP program. So instead of dropping these frames or skbs,\njust make sure the per-cpu kthread is running before\n__cpu_map_entry_alloc() returns.\n\nAfter apply the fix, the error handle for kthread_stop() will be\nunnecessary because it will always return 0, so just remove it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/640a604585aa30f93e39b17d4d6ba69fcb1e66c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a1178a3671b40746830d355836b72e47ceb2490","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b44d28b98f185d2f2348aa3c3636838c316f889e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb45b852af5e88257020b88bea5ff0798d72aca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53578","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.483","lastModified":"2025-10-04T16:15:53.483","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()\n\nSyzbot reported a bug as following:\n\n=====================================================\nBUG: KMSAN: uninit-value in qrtr_tx_resume+0x185\/0x1f0 net\/qrtr\/af_qrtr.c:230\n qrtr_tx_resume+0x185\/0x1f0 net\/qrtr\/af_qrtr.c:230\n qrtr_endpoint_post+0xf85\/0x11b0 net\/qrtr\/af_qrtr.c:519\n qrtr_tun_write_iter+0x270\/0x400 net\/qrtr\/tun.c:108\n call_write_iter include\/linux\/fs.h:2189 [inline]\n aio_write+0x63a\/0x950 fs\/aio.c:1600\n io_submit_one+0x1d1c\/0x3bf0 fs\/aio.c:2019\n __do_sys_io_submit fs\/aio.c:2078 [inline]\n __se_sys_io_submit+0x293\/0x770 fs\/aio.c:2048\n __x64_sys_io_submit+0x92\/0xd0 fs\/aio.c:2048\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nUninit was created at:\n slab_post_alloc_hook mm\/slab.h:766 [inline]\n slab_alloc_node mm\/slub.c:3452 [inline]\n __kmem_cache_alloc_node+0x71f\/0xce0 mm\/slub.c:3491\n __do_kmalloc_node mm\/slab_common.c:967 [inline]\n __kmalloc_node_track_caller+0x114\/0x3b0 mm\/slab_common.c:988\n kmalloc_reserve net\/core\/skbuff.c:492 [inline]\n __alloc_skb+0x3af\/0x8f0 net\/core\/skbuff.c:565\n __netdev_alloc_skb+0x120\/0x7d0 net\/core\/skbuff.c:630\n qrtr_endpoint_post+0xbd\/0x11b0 net\/qrtr\/af_qrtr.c:446\n qrtr_tun_write_iter+0x270\/0x400 net\/qrtr\/tun.c:108\n call_write_iter include\/linux\/fs.h:2189 [inline]\n aio_write+0x63a\/0x950 fs\/aio.c:1600\n io_submit_one+0x1d1c\/0x3bf0 fs\/aio.c:2019\n __do_sys_io_submit fs\/aio.c:2078 [inline]\n __se_sys_io_submit+0x293\/0x770 fs\/aio.c:2048\n __x64_sys_io_submit+0x92\/0xd0 fs\/aio.c:2048\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nIt is because that skb->len requires at least sizeof(struct qrtr_ctrl_pkt)\nin qrtr_tx_resume(). And skb->len equals to size in qrtr_endpoint_post().\nBut size is less than sizeof(struct qrtr_ctrl_pkt) when qrtr_cb->type\nequals to QRTR_TYPE_RESUME_TX in qrtr_endpoint_post() under the syzbot\nscenario. This triggers the uninit variable access bug.\n\nAdd size check when qrtr_cb->type equals to QRTR_TYPE_RESUME_TX in\nqrtr_endpoint_post() to fix the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3814d211ff13ee35f2d9437439a6c7df58524137","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6417070918de3bcdbe0646e7256dae58fd8083ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c9ce34a6ff2c544f96ce0b088e8fd3c1b9698c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bef57c227b52c2bde00fad33556175d36d12cfa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6a796ee5a639ffb83c6e5469408cc2ec16cac6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53579","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.597","lastModified":"2025-10-04T16:15:53.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: mvebu: fix irq domain leak\n\nUwe Kleine-König pointed out we still have one resource leak in the mvebu\ndriver triggered on driver detach. Let's address it with a custom devm\naction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44e2afbf650f3264519643fcc9e6b4d2f6e8d547","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/644ee70267a934be27370f9aa618b29af7290544","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b19e90521286a03bc3793fd598f20277a8f99c85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9b791d8362359d241b4e8f4b4767c681ffdb6ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53580","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.713","lastModified":"2025-10-04T16:15:53.713","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: Gadget: core: Help prevent panic during UVC unconfigure\n\nAvichal Rakesh reported a kernel panic that occurred when the UVC\ngadget driver was removed from a gadget's configuration.  The panic\ninvolves a somewhat complicated interaction between the kernel driver\nand a userspace component (as described in the Link tag below), but\nthe analysis did make one thing clear: The Gadget core should\naccomodate gadget drivers calling usb_gadget_deactivate() as part of\ntheir unbind procedure.\n\nCurrently this doesn't work.  gadget_unbind_driver() calls\ndriver->unbind() while holding the udc->connect_lock mutex, and\nusb_gadget_deactivate() attempts to acquire that mutex, which will\nresult in a deadlock.\n\nThe simple fix is for gadget_unbind_driver() to release the mutex when\ninvoking the ->unbind() callback.  There is no particular reason for\nit to be holding the mutex at that time, and the mutex isn't held\nwhile the ->bind() callback is invoked.  So we'll drop the mutex\nbefore performing the unbind callback and reacquire it afterward.\n\nWe'll also add a couple of comments to usb_gadget_activate() and\nusb_gadget_deactivate().  Because they run in process context they\nmust not be called from a gadget driver's ->disconnect() callback,\nwhich (according to the kerneldoc for struct usb_gadget_driver in\ninclude\/linux\/usb\/gadget.h) may run in interrupt context.  This may\nhelp prevent similar bugs from arising in the future."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/65dadb2beeb7360232b09ebc4585b54475dfee06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c1edc00db65f6d4408b3d1cd845e8da3b9e0ca4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bed19d95fcb9c98dfaa9585922b39a2dfba7898d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53581","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.820","lastModified":"2025-10-04T16:15:53.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Check for NOT_READY flag state after locking\n\nCurrently the check for NOT_READY flag is performed before obtaining the\nnecessary lock. This opens a possibility for race condition when the flow\nis concurrently removed from unready_flows list by the workqueue task,\nwhich causes a double-removal from the list and a crash[0]. Fix the issue\nby moving the flag check inside the section protected by\nuplink_priv->unready_flows_lock mutex.\n\n[0]:\n[44376.389654] general protection fault, probably for non-canonical address 0xdead000000000108: 0000 [#1] SMP\n[44376.391665] CPU: 7 PID: 59123 Comm: tc Not tainted 6.4.0-rc4+ #1\n[44376.392984] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n[44376.395342] RIP: 0010:mlx5e_tc_del_fdb_flow+0xb3\/0x340 [mlx5_core]\n[44376.396857] Code: 00 48 8b b8 68 ce 02 00 e8 8a 4d 02 00 4c 8d a8 a8 01 00 00 4c 89 ef e8 8b 79 88 e1 48 8b 83 98 06 00 00 48 8b 93 90 06 00 00 <48> 89 42 08 48 89 10 48 b8 00 01 00 00 00 00 ad de 48 89 83 90 06\n[44376.399167] RSP: 0018:ffff88812cc97570 EFLAGS: 00010246\n[44376.399680] RAX: dead000000000122 RBX: ffff8881088e3800 RCX: ffff8881881bac00\n[44376.400337] RDX: dead000000000100 RSI: ffff88812cc97500 RDI: ffff8881242f71b0\n[44376.401001] RBP: ffff88811cbb0940 R08: 0000000000000400 R09: 0000000000000001\n[44376.401663] R10: 0000000000000001 R11: 0000000000000000 R12: ffff88812c944000\n[44376.402342] R13: ffff8881242f71a8 R14: ffff8881222b4000 R15: 0000000000000000\n[44376.402999] FS:  00007f0451104800(0000) GS:ffff88852cb80000(0000) knlGS:0000000000000000\n[44376.403787] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[44376.404343] CR2: 0000000000489108 CR3: 0000000123a79003 CR4: 0000000000370ea0\n[44376.405004] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[44376.405665] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[44376.406339] Call Trace:\n[44376.406651]  <TASK>\n[44376.406939]  ? die_addr+0x33\/0x90\n[44376.407311]  ? exc_general_protection+0x192\/0x390\n[44376.407795]  ? asm_exc_general_protection+0x22\/0x30\n[44376.408292]  ? mlx5e_tc_del_fdb_flow+0xb3\/0x340 [mlx5_core]\n[44376.408876]  __mlx5e_tc_del_fdb_peer_flow+0xbc\/0xe0 [mlx5_core]\n[44376.409482]  mlx5e_tc_del_flow+0x42\/0x210 [mlx5_core]\n[44376.410055]  mlx5e_flow_put+0x25\/0x50 [mlx5_core]\n[44376.410529]  mlx5e_delete_flower+0x24b\/0x350 [mlx5_core]\n[44376.411043]  tc_setup_cb_reoffload+0x22\/0x80\n[44376.411462]  fl_reoffload+0x261\/0x2f0 [cls_flower]\n[44376.411907]  ? mlx5e_rep_indr_setup_ft_cb+0x160\/0x160 [mlx5_core]\n[44376.412481]  ? mlx5e_rep_indr_setup_ft_cb+0x160\/0x160 [mlx5_core]\n[44376.413044]  tcf_block_playback_offloads+0x76\/0x170\n[44376.413497]  tcf_block_unbind+0x7b\/0xd0\n[44376.413881]  tcf_block_setup+0x17d\/0x1c0\n[44376.414269]  tcf_block_offload_cmd.isra.0+0xf1\/0x130\n[44376.414725]  tcf_block_offload_unbind+0x43\/0x70\n[44376.415153]  __tcf_block_put+0x82\/0x150\n[44376.415532]  ingress_destroy+0x22\/0x30 [sch_ingress]\n[44376.415986]  qdisc_destroy+0x3b\/0xd0\n[44376.416343]  qdisc_graft+0x4d0\/0x620\n[44376.416706]  tc_get_qdisc+0x1c9\/0x3b0\n[44376.417074]  rtnetlink_rcv_msg+0x29c\/0x390\n[44376.419978]  ? rep_movs_alternative+0x3a\/0xa0\n[44376.420399]  ? rtnl_calcit.isra.0+0x120\/0x120\n[44376.420813]  netlink_rcv_skb+0x54\/0x100\n[44376.421192]  netlink_unicast+0x1f6\/0x2c0\n[44376.421573]  netlink_sendmsg+0x232\/0x4a0\n[44376.421980]  sock_sendmsg+0x38\/0x60\n[44376.422328]  ____sys_sendmsg+0x1d0\/0x1e0\n[44376.422709]  ? copy_msghdr_from_user+0x6d\/0xa0\n[44376.423127]  ___sys_sendmsg+0x80\/0xc0\n[44376.423495]  ? ___sys_recvmsg+0x8b\/0xc0\n[44376.423869]  __sys_sendmsg+0x51\/0x90\n[44376.424226]  do_syscall_64+0x3d\/0x90\n[44376.424587]  entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n[44376.425046] RIP: 0033:0x7f045134f887\n[44376.425403] Code: 0a 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b9 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 2e 00\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30c281a77fb1b2d362030ea243dd663201d62a21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65e64640e97c0f223e77f9ea69b5a46186b93470","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82ac62d76a000871004f534ad294e763e966d3b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e962fd5933ebc767ce2a1cf7b7c85035b5a5d04c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7ceedd1d124217a67ed1a67bbd7a7b1288705e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53582","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:53.957","lastModified":"2025-10-04T16:15:53.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: ensure CLM version is null-terminated to prevent stack-out-of-bounds\n\nFix a stack-out-of-bounds read in brcmfmac that occurs\nwhen 'buf' that is not null-terminated is passed as an argument of\nstrreplace() in brcmf_c_preinit_dcmds(). This buffer is filled with\na CLM version string by memcpy() in brcmf_fil_iovar_data_get().\nEnsure buf is null-terminated.\n\nFound by a modified version of syzkaller.\n\n[   33.004414][ T1896] brcmfmac: brcmf_c_process_clm_blob: no clm_blob available (err=-2), device may have limited channels available\n[   33.013486][ T1896] brcmfmac: brcmf_c_preinit_dcmds: Firmware: BCM43236\/3 wl0: Nov 30 2011 17:33:42 version 5.90.188.22\n[   33.021554][ T1896] ==================================================================\n[   33.022379][ T1896] BUG: KASAN: stack-out-of-bounds in strreplace+0xf2\/0x110\n[   33.023122][ T1896] Read of size 1 at addr ffffc90001d6efc8 by task kworker\/0:2\/1896\n[   33.023852][ T1896]\n[   33.024096][ T1896] CPU: 0 PID: 1896 Comm: kworker\/0:2 Tainted: G           O      5.14.0+ #132\n[   33.024927][ T1896] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04\/01\/2014\n[   33.026065][ T1896] Workqueue: usb_hub_wq hub_event\n[   33.026581][ T1896] Call Trace:\n[   33.026896][ T1896]  dump_stack_lvl+0x57\/0x7d\n[   33.027372][ T1896]  print_address_description.constprop.0.cold+0xf\/0x334\n[   33.028037][ T1896]  ? strreplace+0xf2\/0x110\n[   33.028403][ T1896]  ? strreplace+0xf2\/0x110\n[   33.028807][ T1896]  kasan_report.cold+0x83\/0xdf\n[   33.029283][ T1896]  ? strreplace+0xf2\/0x110\n[   33.029666][ T1896]  strreplace+0xf2\/0x110\n[   33.029966][ T1896]  brcmf_c_preinit_dcmds+0xab1\/0xc40\n[   33.030351][ T1896]  ? brcmf_c_set_joinpref_default+0x100\/0x100\n[   33.030787][ T1896]  ? rcu_read_lock_sched_held+0xa1\/0xd0\n[   33.031223][ T1896]  ? rcu_read_lock_bh_held+0xb0\/0xb0\n[   33.031661][ T1896]  ? lock_acquire+0x19d\/0x4e0\n[   33.032091][ T1896]  ? find_held_lock+0x2d\/0x110\n[   33.032605][ T1896]  ? brcmf_usb_deq+0x1a7\/0x260\n[   33.033087][ T1896]  ? brcmf_usb_rx_fill_all+0x5a\/0xf0\n[   33.033582][ T1896]  brcmf_attach+0x246\/0xd40\n[   33.034022][ T1896]  ? wiphy_new_nm+0x1476\/0x1d50\n[   33.034383][ T1896]  ? kmemdup+0x30\/0x40\n[   33.034722][ T1896]  brcmf_usb_probe+0x12de\/0x1690\n[   33.035223][ T1896]  ? brcmf_usbdev_qinit.constprop.0+0x470\/0x470\n[   33.035833][ T1896]  usb_probe_interface+0x25f\/0x710\n[   33.036315][ T1896]  really_probe+0x1be\/0xa90\n[   33.036656][ T1896]  __driver_probe_device+0x2ab\/0x460\n[   33.037026][ T1896]  ? usb_match_id.part.0+0x88\/0xc0\n[   33.037383][ T1896]  driver_probe_device+0x49\/0x120\n[   33.037790][ T1896]  __device_attach_driver+0x18a\/0x250\n[   33.038300][ T1896]  ? driver_allows_async_probing+0x120\/0x120\n[   33.038986][ T1896]  bus_for_each_drv+0x123\/0x1a0\n[   33.039906][ T1896]  ? bus_rescan_devices+0x20\/0x20\n[   33.041412][ T1896]  ? lockdep_hardirqs_on_prepare+0x273\/0x3e0\n[   33.041861][ T1896]  ? trace_hardirqs_on+0x1c\/0x120\n[   33.042330][ T1896]  __device_attach+0x207\/0x330\n[   33.042664][ T1896]  ? device_bind_driver+0xb0\/0xb0\n[   33.043026][ T1896]  ? kobject_uevent_env+0x230\/0x12c0\n[   33.043515][ T1896]  bus_probe_device+0x1a2\/0x260\n[   33.043914][ T1896]  device_add+0xa61\/0x1ce0\n[   33.044227][ T1896]  ? __mutex_unlock_slowpath+0xe7\/0x660\n[   33.044891][ T1896]  ? __fw_devlink_link_to_suppliers+0x550\/0x550\n[   33.045531][ T1896]  usb_set_configuration+0x984\/0x1770\n[   33.046051][ T1896]  ? kernfs_create_link+0x175\/0x230\n[   33.046548][ T1896]  usb_generic_driver_probe+0x69\/0x90\n[   33.046931][ T1896]  usb_probe_device+0x9c\/0x220\n[   33.047434][ T1896]  really_probe+0x1be\/0xa90\n[   33.047760][ T1896]  __driver_probe_device+0x2ab\/0x460\n[   33.048134][ T1896]  driver_probe_device+0x49\/0x120\n[   33.048516][ T1896]  __device_attach_driver+0x18a\/0x250\n[   33.048910][ T1896]  ? driver_allows_async_probing+0x120\/0x120\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ca2efea4f11c6255061e852ac188264c469c197","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b173b4ad9c001a555f44adc7836d6fe3afbe9ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/423a1297ea72bbddf64dbb0957f2879c0f2aa5d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/660145d708be52f946a82e5b633c020f58f996de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0f0ce1c8ab9fe90618dc394e3d1568b5a9ac154","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c02f733024d70105f22de8dd0a1252a0350cd516","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb980dc79709c02f579a9c03cb92ccec189ab38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53583","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:54.090","lastModified":"2025-10-04T16:15:54.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf: RISC-V: Remove PERF_HES_STOPPED flag checking in riscv_pmu_start()\n\nSince commit 096b52fd2bb4 (\"perf: RISC-V: throttle perf events\") the\nperf_sample_event_took() function was added to report time spent in\noverflow interrupts. If the interrupt takes too long, the perf framework\nwill lower the sysctl_perf_event_sample_rate and max_samples_per_tick.\nWhen hwc->interrupts is larger than max_samples_per_tick, the\nhwc->interrupts will be set to MAX_INTERRUPTS, and events will be\nthrottled within the __perf_event_account_interrupt() function.\n\nHowever, the RISC-V PMU driver doesn't call riscv_pmu_stop() to update the\nPERF_HES_STOPPED flag after perf_event_overflow() in pmu_sbi_ovf_handler()\nfunction to avoid throttling. When the perf framework unthrottled the event\nin the timer interrupt handler, it triggers riscv_pmu_start() function\nand causes a WARN_ON_ONCE() warning, as shown below:\n\n ------------[ cut here ]------------\n WARNING: CPU: 0 PID: 240 at drivers\/perf\/riscv_pmu.c:184 riscv_pmu_start+0x7c\/0x8e\n Modules linked in:\n CPU: 0 PID: 240 Comm: ls Not tainted 6.4-rc4-g19d0788e9ef2 #1\n Hardware name: SiFive (DT)\n epc : riscv_pmu_start+0x7c\/0x8e\n  ra : riscv_pmu_start+0x28\/0x8e\n epc : ffffffff80aef864 ra : ffffffff80aef810 sp : ffff8f80004db6f0\n  gp : ffffffff81c83750 tp : ffffaf80069f9bc0 t0 : ffff8f80004db6c0\n  t1 : 0000000000000000 t2 : 000000000000001f s0 : ffff8f80004db720\n  s1 : ffffaf8008ca1068 a0 : 0000ffffffffffff a1 : 0000000000000000\n  a2 : 0000000000000001 a3 : 0000000000000870 a4 : 0000000000000000\n  a5 : 0000000000000000 a6 : 0000000000000840 a7 : 0000000000000030\n  s2 : 0000000000000000 s3 : ffffaf8005165800 s4 : ffffaf800424da00\n  s5 : ffffffffffffffff s6 : ffffffff81cc7590 s7 : 0000000000000000\n  s8 : 0000000000000006 s9 : 0000000000000001 s10: ffffaf807efbc340\n  s11: ffffaf807efbbf00 t3 : ffffaf8006a16028 t4 : 00000000dbfbb796\n  t5 : 0000000700000000 t6 : ffffaf8005269870\n status: 0000000200000100 badaddr: 0000000000000000 cause: 0000000000000003\n [<ffffffff80aef864>] riscv_pmu_start+0x7c\/0x8e\n [<ffffffff80185b56>] perf_adjust_freq_unthr_context+0x15e\/0x174\n [<ffffffff80188642>] perf_event_task_tick+0x88\/0x9c\n [<ffffffff800626a8>] scheduler_tick+0xfe\/0x27c\n [<ffffffff800b5640>] update_process_times+0x9a\/0xba\n [<ffffffff800c5bd4>] tick_sched_handle+0x32\/0x66\n [<ffffffff800c5e0c>] tick_sched_timer+0x64\/0xb0\n [<ffffffff800b5e50>] __hrtimer_run_queues+0x156\/0x2f4\n [<ffffffff800b6bdc>] hrtimer_interrupt+0xe2\/0x1fe\n [<ffffffff80acc9e8>] riscv_timer_interrupt+0x38\/0x42\n [<ffffffff80090a16>] handle_percpu_devid_irq+0x90\/0x1d2\n [<ffffffff8008a9f4>] generic_handle_domain_irq+0x28\/0x36\n\nAfter referring other PMU drivers like Arm, Loongarch, Csky, and Mips,\nthey don't call *_pmu_stop() to update with PERF_HES_STOPPED flag\nafter perf_event_overflow() function nor do they add PERF_HES_STOPPED\nflag checking in *_pmu_start() which don't cause this warning.\n\nThus, it's recommended to remove this unnecessary check in\nriscv_pmu_start() function to prevent this warning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66843b14fb71825fdd73ab12f6594f2243b402be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8270d539a943d00cf6a094da0073e2b5972b641d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeb62beaf9cbd0a72e7f97c9af6d3e7f76ce2946","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53584","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:54.217","lastModified":"2025-10-04T16:15:54.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: ubifs_releasepage: Remove ubifs_assert(0) to valid this process\n\nThere are two states for ubifs writing pages:\n1. Dirty, Private\n2. Not Dirty, Not Private\n\nThe normal process cannot go to ubifs_releasepage() which means there\nexists pages being private but not dirty. Reproducer[1] shows that it\ncould occur (which maybe related to [2]) with following process:\n\n     PA                     PB                    PC\nlock(page)[PA]\nubifs_write_end\n  attach_page_private         \/\/ set Private\n  __set_page_dirty_nobuffers  \/\/ set Dirty\nunlock(page)\n\nwrite_cache_pages[PA]\n  lock(page)\n  clear_page_dirty_for_io(page)\t\/\/ clear Dirty\n  ubifs_writepage\n\n                        do_truncation[PB]\n\t\t\t  truncate_setsize\n\t\t\t    i_size_write(inode, newsize) \/\/ newsize = 0\n\n    i_size = i_size_read(inode)\t\/\/ i_size = 0\n    end_index = i_size >> PAGE_SHIFT\n    if (page->index > end_index)\n      goto out \/\/ jump\nout:\nunlock(page)   \/\/ Private, Not Dirty\n\n\t\t\t\t\t\tgeneric_fadvise[PC]\n\t\t\t\t\t\t  lock(page)\n\t\t\t\t\t\t  invalidate_inode_page\n\t\t\t\t\t\t    try_to_release_page\n\t\t\t\t\t\t      ubifs_releasepage\n\t\t\t\t\t\t        ubifs_assert(c, 0)\n\t\t                                        \/\/ bad assertion!\n\t\t\t\t\t\t  unlock(page)\n\t\t\t  truncate_pagecache[PB]\n\nThen we may get following assertion failed:\n  UBIFS error (ubi0:0 pid 1683): ubifs_assert_failed [ubifs]:\n  UBIFS assert failed: 0, in fs\/ubifs\/file.c:1513\n  UBIFS warning (ubi0:0 pid 1683): ubifs_ro_mode [ubifs]:\n  switched to read-only mode, error -22\n  CPU: 2 PID: 1683 Comm: aa Not tainted 5.16.0-rc5-00184-g0bca5994cacc-dirty #308\n  Call Trace:\n    dump_stack+0x13\/0x1b\n    ubifs_ro_mode+0x54\/0x60 [ubifs]\n    ubifs_assert_failed+0x4b\/0x80 [ubifs]\n    ubifs_releasepage+0x67\/0x1d0 [ubifs]\n    try_to_release_page+0x57\/0xe0\n    invalidate_inode_page+0xfb\/0x130\n    __invalidate_mapping_pages+0xb9\/0x280\n    invalidate_mapping_pagevec+0x12\/0x20\n    generic_fadvise+0x303\/0x3c0\n    ksys_fadvise64_64+0x4c\/0xb0\n\n[1] https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215373\n[2] https:\/\/linux-mtd.infradead.narkive.com\/NQoBeT1u\/patch-rfc-ubifs-fix-assert-failed-in-ubifs-set-page-dirty"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66f4742e93523ab2f062d9d9828b3e590bc61536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7750be5d3e18500b454714677463b500a0b8b0d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd188ff1c8a1935c93a1e3cacf3be62667fdf762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53585","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:54.703","lastModified":"2025-10-04T16:15:54.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: reject unhashed sockets in bpf_sk_assign\n\nThe semantics for bpf_sk_assign are as follows:\n\n    sk = some_lookup_func()\n    bpf_sk_assign(skb, sk)\n    bpf_sk_release(sk)\n\nThat is, the sk is not consumed by bpf_sk_assign. The function\ntherefore needs to make sure that sk lives long enough to be\nconsumed from __inet_lookup_skb. The path through the stack for a\nTCPv4 packet is roughly:\n\n  netif_receive_skb_core: takes RCU read lock\n    __netif_receive_skb_core:\n      sch_handle_ingress:\n        tcf_classify:\n          bpf_sk_assign()\n      deliver_ptype_list_skb:\n        deliver_skb:\n          ip_packet_type->func == ip_rcv:\n            ip_rcv_core:\n            ip_rcv_finish_core:\n              dst_input:\n                ip_local_deliver:\n                  ip_local_deliver_finish:\n                    ip_protocol_deliver_rcu:\n                      tcp_v4_rcv:\n                        __inet_lookup_skb:\n                          skb_steal_sock\n\nThe existing helper takes advantage of the fact that everything\nhappens in the same RCU critical section: for sockets with\nSOCK_RCU_FREE set bpf_sk_assign never takes a reference.\nskb_steal_sock then checks SOCK_RCU_FREE again and does sock_put\nif necessary.\n\nThis approach assumes that SOCK_RCU_FREE is never set on a sk\nbetween bpf_sk_assign and skb_steal_sock, but this invariant is\nviolated by unhashed UDP sockets. A new UDP socket is created\nin TCP_CLOSE state but without SOCK_RCU_FREE set. That flag is only\nadded in udp_lib_get_port() which happens when a socket is bound.\n\nWhen bpf_sk_assign was added it wasn't possible to access unhashed\nUDP sockets from BPF, so this wasn't a problem. This changed\nin commit 0c48eefae712 (\"sock_map: Lift socket state restriction\nfor datagram sockets\"), but the helper wasn't adjusted accordingly.\nThe following sequence of events will therefore lead to a refcount\nleak:\n\n1. Add socket(AF_INET, SOCK_DGRAM) to a sockmap.\n2. Pull socket out of sockmap and bpf_sk_assign it. Since\n   SOCK_RCU_FREE is not set we increment the refcount.\n3. bind() or connect() the socket, setting SOCK_RCU_FREE.\n4. skb_steal_sock will now set refcounted = false due to\n   SOCK_RCU_FREE.\n5. tcp_v4_rcv() skips sock_put().\n\nFix the problem by rejecting unhashed sockets in bpf_sk_assign().\nThis matches the behaviour of __inet_lookup_skb which is ultimately\nthe goal of bpf_sk_assign()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d4522f59fb748a54446846522941a4f09da63e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67312adc96b5a585970d03b62412847afe2c6b01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/791a12102e5191dcb6ce0b3a99d71b5a2802d12a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dcbc0bb0e5cc1823923744befce59ac353135e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aa43cfbb68b25119d2ced14ec717173e2901fa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0ce0fb76610d5fad31f56f2ca8241a2a6717a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53586","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:54.837","lastModified":"2025-10-04T16:15:54.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: Fix multiple LUN_RESET handling\n\nThis fixes a bug where an initiator thinks a LUN_RESET has cleaned up\nrunning commands when it hasn't. The bug was added in commit 51ec502a3266\n(\"target: Delete tmr from list before processing\").\n\nThe problem occurs when:\n\n 1. We have N I\/O cmds running in the target layer spread over 2 sessions.\n\n 2. The initiator sends a LUN_RESET for each session.\n\n 3. session1's LUN_RESET loops over all the running commands from both\n    sessions and moves them to its local drain_task_list.\n\n 4. session2's LUN_RESET does not see the LUN_RESET from session1 because\n    the commit above has it remove itself. session2 also does not see any\n    commands since the other reset moved them off the state lists.\n\n 5. sessions2's LUN_RESET will then complete with a successful response.\n\n 6. sessions2's inititor believes the running commands on its session are\n    now cleaned up due to the successful response and cleans up the running\n    commands from its side. It then restarts them.\n\n 7. The commands do eventually complete on the backend and the target\n    starts to return aborted task statuses for them. The initiator will\n    either throw a invalid ITT error or might accidentally lookup a new\n    task if the ITT has been reallocated already.\n\nFix the bug by reverting the patch, and serialize the execution of\nLUN_RESETs and Preempt and Aborts.\n\nAlso prevent us from waiting on LUN_RESETs in core_tmr_drain_tmr_list,\nbecause it turns out the original patch fixed a bug that was not\nmentioned. For LUN_RESET1 core_tmr_drain_tmr_list can see a second\nLUN_RESET and wait on it. Then the second reset will run\ncore_tmr_drain_tmr_list and see the first reset and wait on it resulting in\na deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c43de56f9220dca3e28c774d1c5e2cab574223a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/673db054d7a2b5a470d7a25baf65956d005ad729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9158c86fd3237acaea8f0181c7836d90fd6eea10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1f59cd18a10969d08a082264b557876ca38766e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eacfe32c3650bfd0e54224d160c431013d7f6998","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed18526289b5603bf2253dee50f1d7ec245cf397","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53587","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.060","lastModified":"2025-10-04T16:15:55.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Sync IRQ works before buffer destruction\n\nIf something was written to the buffer just before destruction,\nit may be possible (maybe not in a real system, but it did\nhappen in ARCH=um with time-travel) to destroy the ringbuffer\nbefore the IRQ work ran, leading this KASAN report (or a crash\nwithout KASAN):\n\n    BUG: KASAN: slab-use-after-free in irq_work_run_list+0x11a\/0x13a\n    Read of size 8 at addr 000000006d640a48 by task swapper\/0\n\n    CPU: 0 PID: 0 Comm: swapper Tainted: G        W  O       6.3.0-rc1 #7\n    Stack:\n     60c4f20f 0c203d48 41b58ab3 60f224fc\n     600477fa 60f35687 60c4f20f 601273dd\n     00000008 6101eb00 6101eab0 615be548\n    Call Trace:\n     [<60047a58>] show_stack+0x25e\/0x282\n     [<60c609e0>] dump_stack_lvl+0x96\/0xfd\n     [<60c50d4c>] print_report+0x1a7\/0x5a8\n     [<603078d3>] kasan_report+0xc1\/0xe9\n     [<60308950>] __asan_report_load8_noabort+0x1b\/0x1d\n     [<60232844>] irq_work_run_list+0x11a\/0x13a\n     [<602328b4>] irq_work_tick+0x24\/0x34\n     [<6017f9dc>] update_process_times+0x162\/0x196\n     [<6019f335>] tick_sched_handle+0x1a4\/0x1c3\n     [<6019fd9e>] tick_sched_timer+0x79\/0x10c\n     [<601812b9>] __hrtimer_run_queues.constprop.0+0x425\/0x695\n     [<60182913>] hrtimer_interrupt+0x16c\/0x2c4\n     [<600486a3>] um_timer+0x164\/0x183\n     [...]\n\n    Allocated by task 411:\n     save_stack_trace+0x99\/0xb5\n     stack_trace_save+0x81\/0x9b\n     kasan_save_stack+0x2d\/0x54\n     kasan_set_track+0x34\/0x3e\n     kasan_save_alloc_info+0x25\/0x28\n     ____kasan_kmalloc+0x8b\/0x97\n     __kasan_kmalloc+0x10\/0x12\n     __kmalloc+0xb2\/0xe8\n     load_elf_phdrs+0xee\/0x182\n     [...]\n\n    The buggy address belongs to the object at 000000006d640800\n     which belongs to the cache kmalloc-1k of size 1024\n    The buggy address is located 584 bytes inside of\n     freed 1024-byte region [000000006d640800, 000000006d640c00)\n\nAdd the appropriate irq_work_sync() so the work finishes before\nthe buffers are destroyed.\n\nPrior to the commit in the Fixes tag below, there was only a\nsingle global IRQ work, so this issue didn't exist."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a65165bd24ee9231191597b7c232376fcd70cdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c99f65d6af2a454bfd5207b4f6a97c8474a1191","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2399b1fda025e939b6fb1ac94505bcf718534e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2702b67f59d455072a08dc40312f9b090d4dec04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/372c5ee537b8366b64b691ba29e9335525e1655e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/675751bb20634f981498c7d66161584080cc061e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c63741e872fcfb10e153517750f7908f0c00f60d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9834abd8b24d1fe8092859e436fe1e0fd467c61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc6858b7f8e1221f62ce8c6ff8a13a349c32cd76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53588","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.200","lastModified":"2025-10-04T16:15:55.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: check for station first in client probe\n\nWhen probing a client, first check if we have it, and then\ncheck for the channel context, otherwise you can trigger\nthe warning there easily by probing when the AP isn't even\nstarted yet. Since a client existing means the AP is also\noperating, we can then keep the warning.\n\nAlso simplify the moved code a bit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/67dfa589aa8806c7959cbca2f4613b8d41c75a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dce2deb0b03aaf46c87ceedea81ef4153e26c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e1cda5cf07f848e6b50b4e5e7761ffbce905a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53589","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.313","lastModified":"2025-10-04T16:15:55.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: don't trust firmware n_channels\n\nIf the firmware sends us a corrupted MCC response with\nn_channels much larger than the command response can be,\nwe might copy far too much (uninitialized) memory and\neven crash if the n_channels is large enough to make it\nrun out of the one page allocated for the FW response.\n\nFix that by checking the lengths. Doing a < comparison\nwould be sufficient, but the firmware should be doing\nit correctly, so check more strictly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05ad5a4d421ce65652fcb24d46b7e273130240d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/557ba100d8cf3661ff8d71c0b4a2cba8db555ec2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/682b6dc29d98e857e6ca4bbc077c7dc2899b7473","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c176f03350954b795322de0bfe1d7b514db41f45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0d39bed9e95f27a246be91c5929254ac043ed30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e519a404a5bbba37693cb10fa61794a5fce4fd9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53590","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.437","lastModified":"2025-10-04T16:15:55.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: add a refcnt in sctp_stream_priorities to avoid a nested loop\n\nWith this refcnt added in sctp_stream_priorities, we don't need to\ntraverse all streams to check if the prio is used by other streams\nwhen freeing one stream's prio in sctp_sched_prio_free_sid(). This\ncan avoid a nested loop (up to 65535 * 65535), which may cause a\nstuck as Ying reported:\n\n    watchdog: BUG: soft lockup - CPU#23 stuck for 26s! [ksoftirqd\/23:136]\n    Call Trace:\n     <TASK>\n     sctp_sched_prio_free_sid+0xab\/0x100 [sctp]\n     sctp_stream_free_ext+0x64\/0xa0 [sctp]\n     sctp_stream_free+0x31\/0x50 [sctp]\n     sctp_association_free+0xa5\/0x200 [sctp]\n\nNote that it doesn't need to use refcount_t type for this counter,\nas its accessing is always protected under the sock lock.\n\nv1->v2:\n - add a check in sctp_sched_prio_set to avoid the possible prio_head\n   refcnt overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03c3a5584a0a29821e59b7834635ce823050caaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68ba44639537de6f91fe32783766322d41848127","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d529928ea212127851a2df8c40d822237ca946b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ee401f89cdb10f39098c0656d695b2bc4052100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf5540cbd20e2dae2c81ab9b31deef41ef147d0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cec326443f01283ef68ea00c06ea073b1835a562","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53591","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.550","lastModified":"2025-10-04T16:15:55.550","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix deadlock in tc route query code\n\nCited commit causes ABBA deadlock[0] when peer flows are created while\nholding the devcom rw semaphore. Due to peer flows offload implementation\nthe lock is taken much higher up the call chain and there is no obvious way\nto easily fix the deadlock. Instead, since tc route query code needs the\npeer eswitch structure only to perform a lookup in xarray and doesn't\nperform any sleeping operations with it, refactor the code for lockless\nexecution in following ways:\n\n- RCUify the devcom 'data' pointer. When resetting the pointer\nsynchronously wait for RCU grace period before returning. This is fine\nsince devcom is currently only used for synchronization of\npairing\/unpairing of eswitches which is rare and already expensive as-is.\n\n- Wrap all usages of 'paired' boolean in {READ|WRITE}_ONCE(). The flag has\nalready been used in some unlocked contexts without proper\nannotations (e.g. users of mlx5_devcom_is_paired() function), but it wasn't\nan issue since all relevant code paths checked it again after obtaining the\ndevcom semaphore. Now it is also used by mlx5_devcom_get_peer_data_rcu() as\n\"best effort\" check to return NULL when devcom is being unpaired. Note that\nwhile RCU read lock doesn't prevent the unpaired flag from being changed\nconcurrently it still guarantees that reader can continue to use 'data'.\n\n- Refactor mlx5e_tc_query_route_vport() function to use new\nmlx5_devcom_get_peer_data_rcu() API which fixes the deadlock.\n\n[0]:\n\n[  164.599612] ======================================================\n[  164.600142] WARNING: possible circular locking dependency detected\n[  164.600667] 6.3.0-rc3+ #1 Not tainted\n[  164.601021] ------------------------------------------------------\n[  164.601557] handler1\/3456 is trying to acquire lock:\n[  164.601998] ffff88811f1714b0 (&esw->offloads.encap_tbl_lock){+.+.}-{3:3}, at: mlx5e_attach_encap+0xd8\/0x8b0 [mlx5_core]\n[  164.603078]\n               but task is already holding lock:\n[  164.603617] ffff88810137fc98 (&comp->sem){++++}-{3:3}, at: mlx5_devcom_get_peer_data+0x37\/0x80 [mlx5_core]\n[  164.604459]\n               which lock already depends on the new lock.\n\n[  164.605190]\n               the existing dependency chain (in reverse order) is:\n[  164.605848]\n               -> #1 (&comp->sem){++++}-{3:3}:\n[  164.606380]        down_read+0x39\/0x50\n[  164.606772]        mlx5_devcom_get_peer_data+0x37\/0x80 [mlx5_core]\n[  164.607336]        mlx5e_tc_query_route_vport+0x86\/0xc0 [mlx5_core]\n[  164.607914]        mlx5e_tc_tun_route_lookup+0x1a4\/0x1d0 [mlx5_core]\n[  164.608495]        mlx5e_attach_decap_route+0xc6\/0x1e0 [mlx5_core]\n[  164.609063]        mlx5e_tc_add_fdb_flow+0x1ea\/0x360 [mlx5_core]\n[  164.609627]        __mlx5e_add_fdb_flow+0x2d2\/0x430 [mlx5_core]\n[  164.610175]        mlx5e_configure_flower+0x952\/0x1a20 [mlx5_core]\n[  164.610741]        tc_setup_cb_add+0xd4\/0x200\n[  164.611146]        fl_hw_replace_filter+0x14c\/0x1f0 [cls_flower]\n[  164.611661]        fl_change+0xc95\/0x18a0 [cls_flower]\n[  164.612116]        tc_new_tfilter+0x3fc\/0xd20\n[  164.612516]        rtnetlink_rcv_msg+0x418\/0x5b0\n[  164.612936]        netlink_rcv_skb+0x54\/0x100\n[  164.613339]        netlink_unicast+0x190\/0x250\n[  164.613746]        netlink_sendmsg+0x245\/0x4a0\n[  164.614150]        sock_sendmsg+0x38\/0x60\n[  164.614522]        ____sys_sendmsg+0x1d0\/0x1e0\n[  164.614934]        ___sys_sendmsg+0x80\/0xc0\n[  164.615320]        __sys_sendmsg+0x51\/0x90\n[  164.615701]        do_syscall_64+0x3d\/0x90\n[  164.616083]        entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n[  164.616568]\n               -> #0 (&esw->offloads.encap_tbl_lock){+.+.}-{3:3}:\n[  164.617210]        __lock_acquire+0x159e\/0x26e0\n[  164.617638]        lock_acquire+0xc2\/0x2a0\n[  164.618018]        __mutex_lock+0x92\/0xcd0\n[  164.618401]        mlx5e_attach_encap+0xd8\/0x8b0 [mlx5_core]\n[  164.618943]        post_process_attr+0x153\/0x2d0 [\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/362063df6ceec80b0b6798b61ae03504dcc125a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/691c041bf20899fc13c793f92ba61ab660fa3a30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69966bce28da6aadccfd968b75d128a79da32d17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7236e420a7d8082b1df4b3e05c739dd2642a662","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53592","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.670","lastModified":"2025-10-04T16:15:55.670","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: sifive: Fix refcount leak in sifive_gpio_probe\n\nof_irq_find_parent() returns a node pointer with refcount incremented,\nWe should use of_node_put() on it when not needed anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/694175cd8a1643cde3acb45c9294bca44a8e08e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95da1882ce9372ba20278f87cdb7a34f9812c4b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a402a210798662b04cbe6ca466e916a15efa03a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4a2ad1002006548e235255c65a4f1d07312be9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9fb4776ebbc16dfc512adbdc0fe218acb47c7cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53593","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.790","lastModified":"2025-10-04T16:15:55.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Release folio lock on fscache read hit.\n\nUnder the current code, when cifs_readpage_worker is called, the call\ncontract is that the callee should unlock the page. This is documented\nin the read_folio section of Documentation\/filesystems\/vfs.rst as:\n\n> The filesystem should unlock the folio once the read has completed,\n> whether it was successful or not.\n\nWithout this change, when fscache is in use and cache hit occurs during\na read, the page lock is leaked, producing the following stack on\nsubsequent reads (via mmap) to the page:\n\n$ cat \/proc\/3890\/task\/12864\/stack\n[<0>] folio_wait_bit_common+0x124\/0x350\n[<0>] filemap_read_folio+0xad\/0xf0\n[<0>] filemap_fault+0x8b1\/0xab0\n[<0>] __do_fault+0x39\/0x150\n[<0>] do_fault+0x25c\/0x3e0\n[<0>] __handle_mm_fault+0x6ca\/0xc70\n[<0>] handle_mm_fault+0xe9\/0x350\n[<0>] do_user_addr_fault+0x225\/0x6c0\n[<0>] exc_page_fault+0x84\/0x1b0\n[<0>] asm_exc_page_fault+0x27\/0x30\n\nThis requires a reboot to resolve; it is a deadlock.\n\nNote however that the call to cifs_readpage_from_fscache does mark the\npage clean, but does not free the folio lock. This happens in\n__cifs_readpage_from_fscache on success. Releasing the lock at that\npoint however is not appropriate as cifs_readahead also calls\ncifs_readpage_from_fscache and *does* unconditionally release the lock\nafter its return. This change therefore effectively makes\ncifs_readpage_worker work like cifs_readahead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4259dd534245579c966c53c15187cc8e9461d6e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a87735675147f848445f05fd1f06168188f91af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69513dd669e243928f7450893190915a88f84a2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e74926ede96470be84e66a1c576982fe4f8ea79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a9fb689c1a1dc373887621a3bfa3810df0abde4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/961f7ce16223aee2db583a43877d84e6d1f2b857","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e725386d4262ef23ae51993f04602bc535b5be2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3ac8323f2f5b50e32681c254b8318f7fa2dc3f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53594","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:55.910","lastModified":"2025-10-04T16:15:55.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: fix resource leak in device_add()\n\nWhen calling kobject_add() failed in device_add(), it will call\ncleanup_glue_dir() to free resource. But in kobject_add(),\ndev->kobj.parent has been set to NULL. This will cause resource leak.\n\nThe process is as follows:\ndevice_add()\n\tget_device_parent()\n\t\tclass_dir_create_and_add()\n\t\t\tkobject_add()\t\t\/\/kobject_get()\n\t...\n\tdev->kobj.parent = kobj;\n\t...\n\tkobject_add()\t\t\/\/failed, but set dev->kobj.parent = NULL\n\t...\n\tglue_dir = get_glue_dir(dev)\t\/\/glue_dir = NULL, and goto\n\t\t\t\t\t\/\/\"Error\" label\n\t...\n\tcleanup_glue_dir()\t\/\/becaues glue_dir is NULL, not call\n\t\t\t\t\/\/kobject_put()\n\nThe preceding problem may cause insmod mac80211_hwsim.ko to failed.\nsysfs: cannot create duplicate filename '\/devices\/virtual\/mac80211_hwsim'\nCall Trace:\n<TASK>\ndump_stack_lvl+0x8e\/0xd1\nsysfs_warn_dup.cold+0x1c\/0x29\nsysfs_create_dir_ns+0x224\/0x280\nkobject_add_internal+0x2aa\/0x880\nkobject_add+0x135\/0x1a0\nget_device_parent+0x3d7\/0x590\ndevice_add+0x2aa\/0x1cb0\ndevice_create_groups_vargs+0x1eb\/0x260\ndevice_create+0xdc\/0x110\nmac80211_hwsim_new_radio+0x31e\/0x4790 [mac80211_hwsim]\ninit_mac80211_hwsim+0x48d\/0x1000 [mac80211_hwsim]\ndo_one_initcall+0x10f\/0x630\ndo_init_module+0x19f\/0x5e0\nload_module+0x64b7\/0x6eb0\n__do_sys_finit_module+0x140\/0x200\ndo_syscall_64+0x35\/0x80\nentry_SYSCALL_64_after_hwframe+0x46\/0xb0\n<\/TASK>\nkobject_add_internal failed for mac80211_hwsim with -EEXIST, don't try to\nregister things with the same name in the same directory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6977b1a5d67097eaa4d02b0c126c04cc6e8917c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d389e363075c2e1deb84a560686ea92123e4b8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1dbff10c6cd3b43457f3efd3c9c4950009635bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f39d21154db87545d8f0b25d13c326f37cc32239","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53595","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.030","lastModified":"2025-10-04T16:15:56.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: mcs: Fix NULL pointer dereferences\n\nWhen system is rebooted after creating macsec interface\nbelow NULL pointer dereference crashes occurred. This\npatch fixes those crashes by using correct order of teardown\n\n[ 3324.406942] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[ 3324.415726] Mem abort info:\n[ 3324.418510]   ESR = 0x96000006\n[ 3324.421557]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 3324.426865]   SET = 0, FnV = 0\n[ 3324.429913]   EA = 0, S1PTW = 0\n[ 3324.433047] Data abort info:\n[ 3324.435921]   ISV = 0, ISS = 0x00000006\n[ 3324.439748]   CM = 0, WnR = 0\n....\n[ 3324.575915] Call trace:\n[ 3324.578353]  cn10k_mdo_del_secy+0x24\/0x180\n[ 3324.582440]  macsec_common_dellink+0xec\/0x120\n[ 3324.586788]  macsec_notify+0x17c\/0x1c0\n[ 3324.590529]  raw_notifier_call_chain+0x50\/0x70\n[ 3324.594965]  call_netdevice_notifiers_info+0x34\/0x7c\n[ 3324.599921]  rollback_registered_many+0x354\/0x5bc\n[ 3324.604616]  unregister_netdevice_queue+0x88\/0x10c\n[ 3324.609399]  unregister_netdev+0x20\/0x30\n[ 3324.613313]  otx2_remove+0x8c\/0x310\n[ 3324.616794]  pci_device_shutdown+0x30\/0x70\n[ 3324.620882]  device_shutdown+0x11c\/0x204\n\n[  966.664930] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  966.673712] Mem abort info:\n[  966.676497]   ESR = 0x96000006\n[  966.679543]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  966.684848]   SET = 0, FnV = 0\n[  966.687895]   EA = 0, S1PTW = 0\n[  966.691028] Data abort info:\n[  966.693900]   ISV = 0, ISS = 0x00000006\n[  966.697729]   CM = 0, WnR = 0\n[  966.833467] Call trace:\n[  966.835904]  cn10k_mdo_stop+0x20\/0xa0\n[  966.839557]  macsec_dev_stop+0xe8\/0x11c\n[  966.843384]  __dev_close_many+0xbc\/0x140\n[  966.847298]  dev_close_many+0x84\/0x120\n[  966.851039]  rollback_registered_many+0x114\/0x5bc\n[  966.855735]  unregister_netdevice_many.part.0+0x14\/0xa0\n[  966.860952]  unregister_netdevice_many+0x18\/0x24\n[  966.865560]  macsec_notify+0x1ac\/0x1c0\n[  966.869303]  raw_notifier_call_chain+0x50\/0x70\n[  966.873738]  call_netdevice_notifiers_info+0x34\/0x7c\n[  966.878694]  rollback_registered_many+0x354\/0x5bc\n[  966.883390]  unregister_netdevice_queue+0x88\/0x10c\n[  966.888173]  unregister_netdev+0x20\/0x30\n[  966.892090]  otx2_remove+0x8c\/0x310\n[  966.895571]  pci_device_shutdown+0x30\/0x70\n[  966.899660]  device_shutdown+0x11c\/0x204\n[  966.903574]  __do_sys_reboot+0x208\/0x290\n[  966.907487]  __arm64_sys_reboot+0x20\/0x30\n[  966.911489]  el0_svc_handler+0x80\/0x1c0\n[  966.915316]  el0_svc+0x8\/0x180\n[  966.918362] Code: f9400000 f9400a64 91220014 f94b3403 (f9400060)\n[  966.924448] ---[ end trace 341778e799c3d8d7 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1152c0f947b76e7731e039185cbd00fdb4389f00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13ff119b17e5e2916435ce01a0156c8698ad9e16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/699af748c61574125d269db260dabbe20436d74e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3dcc45eca017fca82ac47dbde6f41af960657e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53596","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.153","lastModified":"2025-10-04T16:15:56.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: base: Free devm resources when unregistering a device\n\nIn the current code, devres_release_all() only gets called if the device\nhas a bus and has been probed.\n\nThis leads to issues when using bus-less or driver-less devices where\nthe device might never get freed if a managed resource holds a reference\nto the device. This is happening in the DRM framework for example.\n\nWe should thus call devres_release_all() in the device_del() function to\nmake sure that the device-managed actions are properly executed when the\ndevice is unregistered, even if it has neither a bus nor a driver.\n\nThis is effectively the same change than commit 2f8d16a996da (\"devres:\nrelease resources on device_del()\") that got reverted by commit\na525a3ddeaca (\"driver core: free devres in device_release\") over\nmemory leaks concerns.\n\nThis patch effectively combines the two commits mentioned above to\nrelease the resources both on device_del() and device_release() and get\nthe best of both worlds."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/297992e5c63528e603666e36081836204fc36ec9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bcc4c2a096e8342c8c719e595ce15de212694dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/699fb50d99039a50e7494de644f96c889279aca3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8c426fae26086a0ca8ab6cc6da2de79810ec038","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53597","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.270","lastModified":"2025-10-04T16:15:56.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix mid leak during reconnection after timeout threshold\n\nWhen the number of responses with status of STATUS_IO_TIMEOUT\nexceeds a specified threshold (NUM_STATUS_IO_TIMEOUT), we reconnect\nthe connection. But we do not return the mid, or the credits\nreturned for the mid, or reduce the number of in-flight requests.\n\nThis bug could result in the server->in_flight count to go bad,\nand also cause a leak in the mids.\n\nThis change moves the check to a few lines below where the\nresponse is decrypted, even of the response is read from the\ntransform header. This way, the code for returning the mids\ncan be reused.\n\nAlso, the cifs_reconnect was reconnecting just the transport\nconnection before. In case of multi-channel, this may not be\nwhat we want to do after several timeouts. Changed that to\nreconnect the session and the tree too.\n\nAlso renamed NUM_STATUS_IO_TIMEOUT to a more appropriate name\nMAX_STATUS_IO_TIMEOUT."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/57d25e9905c71133e201f6d06b56a3403d4ad433","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69cba9d3c1284e0838ae408830a02c4a063104bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c55901d381a22300c9922170e59704059f50977b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df31d05f0678cdd0796ea19983a2b93edca18bb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53598","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.383","lastModified":"2025-10-04T16:15:56.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: host: Range check CHDBOFF and ERDBOFF\n\nIf the value read from the CHDBOFF and ERDBOFF registers is outside the\nrange of the MHI register space then an invalid address might be computed\nwhich later causes a kernel panic.  Range check the read value to prevent\na crash due to bad data from the device."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2343385fe6eed11d0432ab42a97b3ca4aef06a99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/372f1752b74572b0a9d2288841eab7db17daccae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e584127ec2bd42a37c88badb49df409f21fa40a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a0c637bfee69a74c104468544d9f2a6579626d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83bf6b87e2dd053d95d89eb2f01ae885f9e568db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2cbb1a45a0c86ce77839c0875414efe1a89315e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53599","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.497","lastModified":"2025-10-04T16:15:56.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: af_alg - Fix missing initialisation affecting gcm-aes-s390\n\nFix af_alg_alloc_areq() to initialise areq->first_rsgl.sgl.sgt.sgl to point\nto the scatterlist array in areq->first_rsgl.sgl.sgl.\n\nWithout this, the gcm-aes-s390 driver will oops when it tries to do\ngcm_walk_start() on req->dst because req->dst is set to the value of\nareq->first_rsgl.sgl.sgl by _aead_recvmsg() calling\naead_request_set_crypt().\n\nThe problem comes if an empty ciphertext is passed: the loop in\naf_alg_get_rsgl() just passes straight out and doesn't set areq->first_rsgl\nup.\n\nThis isn't a problem on x86_64 using gcmaes_crypt_by_sg() because, as far\nas I can tell, that ignores req->dst and only uses req->src[*].\n\n[*] Is this a bug in aesni-intel_glue.c?\n\nThe s390x oops looks something like:\n\n Unable to handle kernel pointer dereference in virtual kernel address space\n Failing address: 0000000a00000000 TEID: 0000000a00000803\n Fault in home space mode while using kernel ASCE.\n AS:00000000a43a0007 R3:0000000000000024\n Oops: 003b ilc:2 [#1] SMP\n ...\n Call Trace:\n  [<000003ff7fc3d47e>] gcm_walk_start+0x16\/0x28 [aes_s390]\n  [<00000000a2a342f2>] crypto_aead_decrypt+0x9a\/0xb8\n  [<00000000a2a60888>] aead_recvmsg+0x478\/0x698\n  [<00000000a2e519a0>] sock_recvmsg+0x70\/0xb0\n  [<00000000a2e51a56>] sock_read_iter+0x76\/0xa0\n  [<00000000a273e066>] vfs_read+0x26e\/0x2a8\n  [<00000000a273e8c4>] ksys_read+0xbc\/0x100\n  [<00000000a311d808>] __do_syscall+0x1d0\/0x1f8\n  [<00000000a312ff30>] system_call+0x70\/0x98\n Last Breaking-Event-Address:\n  [<000003ff7fc3e6b4>] gcm_aes_crypt+0x104\/0xa68 [aes_s390]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c9d205040d7c0eaccc473917f9b0bb0a923e440","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a4b8aa0a916b39a39175584c07222434fa6c6ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53600","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.603","lastModified":"2025-10-04T16:15:56.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntunnels: fix kasan splat when generating ipv4 pmtu error\n\nIf we try to emit an icmp error in response to a nonliner skb, we get\n\nBUG: KASAN: slab-out-of-bounds in ip_compute_csum+0x134\/0x220\nRead of size 4 at addr ffff88811c50db00 by task iperf3\/1691\nCPU: 2 PID: 1691 Comm: iperf3 Not tainted 6.5.0-rc3+ #309\n[..]\n kasan_report+0x105\/0x140\n ip_compute_csum+0x134\/0x220\n iptunnel_pmtud_build_icmp+0x554\/0x1020\n skb_tunnel_check_pmtu+0x513\/0xb80\n vxlan_xmit_one+0x139e\/0x2ef0\n vxlan_xmit+0x1867\/0x2760\n dev_hard_start_xmit+0x1ee\/0x4f0\n br_dev_queue_push_xmit+0x4d1\/0x660\n [..]\n\nip_compute_csum() cannot deal with nonlinear skbs, so avoid it.\nAfter this change, splat is gone and iperf3 is no longer stuck."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5850c391fd7e25662334cb3cbf29a62bcbff1084","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a7ac3d20593865209dceb554d8b3f094c6bd940","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da5f42a6e7485fbb7a6dbd6a2b3045e19e4df5cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e95808121953410db8c59f0abfde70ac0d34222c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe6a9f7516735be9fdabab00e47ef7a3403a174d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53601","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.717","lastModified":"2025-10-04T16:15:56.717","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: do not assume skb mac_header is set\n\nDrivers must not assume in their ndo_start_xmit() that\nskbs have their mac_header set. skb->data is all what is needed.\n\nbonding seems to be one of the last offender as caught by syzbot:\n\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 skb_mac_offset include\/linux\/skbuff.h:2913 [inline]\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 bond_xmit_hash drivers\/net\/bonding\/bond_main.c:4170 [inline]\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 bond_xmit_3ad_xor_slave_get drivers\/net\/bonding\/bond_main.c:5149 [inline]\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 bond_3ad_xor_xmit drivers\/net\/bonding\/bond_main.c:5186 [inline]\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 __bond_start_xmit drivers\/net\/bonding\/bond_main.c:5442 [inline]\nWARNING: CPU: 1 PID: 12155 at include\/linux\/skbuff.h:2907 bond_start_xmit+0x14ab\/0x19d0 drivers\/net\/bonding\/bond_main.c:5470\nModules linked in:\nCPU: 1 PID: 12155 Comm: syz-executor.3 Not tainted 6.1.30-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 05\/25\/2023\nRIP: 0010:skb_mac_header include\/linux\/skbuff.h:2907 [inline]\nRIP: 0010:skb_mac_offset include\/linux\/skbuff.h:2913 [inline]\nRIP: 0010:bond_xmit_hash drivers\/net\/bonding\/bond_main.c:4170 [inline]\nRIP: 0010:bond_xmit_3ad_xor_slave_get drivers\/net\/bonding\/bond_main.c:5149 [inline]\nRIP: 0010:bond_3ad_xor_xmit drivers\/net\/bonding\/bond_main.c:5186 [inline]\nRIP: 0010:__bond_start_xmit drivers\/net\/bonding\/bond_main.c:5442 [inline]\nRIP: 0010:bond_start_xmit+0x14ab\/0x19d0 drivers\/net\/bonding\/bond_main.c:5470\nCode: 8b 7c 24 30 e8 76 dd 1a 01 48 85 c0 74 0d 48 89 c3 e8 29 67 2e fe e9 15 ef ff ff e8 1f 67 2e fe e9 10 ef ff ff e8 15 67 2e fe <0f> 0b e9 45 f8 ff ff e8 09 67 2e fe e9 dc fa ff ff e8 ff 66 2e fe\nRSP: 0018:ffffc90002fff6e0 EFLAGS: 00010283\nRAX: ffffffff835874db RBX: 000000000000ffff RCX: 0000000000040000\nRDX: ffffc90004dcf000 RSI: 00000000000000b5 RDI: 00000000000000b6\nRBP: ffffc90002fff8b8 R08: ffffffff83586d16 R09: ffffffff83586584\nR10: 0000000000000007 R11: ffff8881599fc780 R12: ffff88811b6a7b7e\nR13: 1ffff110236d4f6f R14: ffff88811b6a7ac0 R15: 1ffff110236d4f76\nFS: 00007f2e9eb47700(0000) GS:ffff8881f6b00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b2e421000 CR3: 000000010e6d4000 CR4: 00000000003526e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\n[<ffffffff8471a49f>] netdev_start_xmit include\/linux\/netdevice.h:4925 [inline]\n[<ffffffff8471a49f>] __dev_direct_xmit+0x4ef\/0x850 net\/core\/dev.c:4380\n[<ffffffff851d845b>] dev_direct_xmit include\/linux\/netdevice.h:3043 [inline]\n[<ffffffff851d845b>] packet_direct_xmit+0x18b\/0x300 net\/packet\/af_packet.c:284\n[<ffffffff851c7472>] packet_snd net\/packet\/af_packet.c:3112 [inline]\n[<ffffffff851c7472>] packet_sendmsg+0x4a22\/0x64d0 net\/packet\/af_packet.c:3143\n[<ffffffff8467a4b2>] sock_sendmsg_nosec net\/socket.c:716 [inline]\n[<ffffffff8467a4b2>] sock_sendmsg net\/socket.c:736 [inline]\n[<ffffffff8467a4b2>] __sys_sendto+0x472\/0x5f0 net\/socket.c:2139\n[<ffffffff8467a715>] __do_sys_sendto net\/socket.c:2151 [inline]\n[<ffffffff8467a715>] __se_sys_sendto net\/socket.c:2147 [inline]\n[<ffffffff8467a715>] __x64_sys_sendto+0xe5\/0x100 net\/socket.c:2147\n[<ffffffff8553071f>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n[<ffffffff8553071f>] do_syscall_64+0x2f\/0x50 arch\/x86\/entry\/common.c:80\n[<ffffffff85600087>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/029d892b05fc5e42a1b1c0665f62cb3e4b23e6dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37b6143376a578265add04f35161b257eeb84a5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a940abdef3162e5723f1495b8a49859d1708f79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc16fc63592c419357dd4c4d82d50762102a60ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c96cc3d9acaca53d9a81c884c23f1224b61c829b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53602","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.830","lastModified":"2025-10-04T16:15:56.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix memory leak in WMI firmware stats\n\nMemory allocated for firmware pdev, vdev and beacon statistics\nare not released during rmmod.\n\nFix it by calling ath11k_fw_stats_free() function before hardware\nunregister.\n\nWhile at it, avoid calling ath11k_fw_stats_free() while processing\nthe firmware stats received in the WMI event because the local list\nis getting spliced and reinitialised and hence there are no elements\nin the list after splicing.\n\nTested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55248d36beb79d3a61c9fb3122dc377fff523c89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aafa1c2d3e3fea2ebe84c018003f2a91722e607","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86f9330a49d1464849482298dd34d361859183eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53603","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:56.940","lastModified":"2025-10-04T16:15:56.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Avoid fcport pointer dereference\n\nKlocwork reported warning of NULL pointer may be dereferenced.  The routine\nexits when sa_ctl is NULL and fcport is allocated after the exit call thus\ncausing NULL fcport pointer to dereference at the time of exit.\n\nTo avoid fcport pointer dereference, exit the routine when sa_ctl is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4406fe8a96a946c7ea5724ee59625755a1d9c59d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/477bc74ad1add644b606bff6ba1284943c42818a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b504d06976fe4a61cc05dedc68b84fadb397f77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bbeff613ec0560fb2f6f8b405288f3f043adf64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53604","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.057","lastModified":"2025-10-04T16:15:57.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm integrity: call kmem_cache_destroy() in dm_integrity_init() error path\n\nOtherwise the journal_io_cache will leak if dm_register_target() fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3877b5c1509b16eeb1f275228fd91789cd88cf17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44f29e93a55b544dc961b6f8b4e93abaeaafb9ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b79a428c02769f2a11f8ae76bf866226d134887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d126899b0747305c9d39a0bcf87e0df9c3f555b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5d8c6bf58e5b2e70fbc15f3b08dfc1ba6f269ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8c9c50268729bf35f6c9bb1205f490db920454e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca8b634fdf07dee3f6dfde57079c4511480b525e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e09a592fdd6c716506774bdbebb5f6c537b47767","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff4d6b5b38429a7731e5593680d2138bf74dd546","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53605","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.183","lastModified":"2025-10-04T16:15:57.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: amd: display: Fix memory leakage\n\nThis commit fixes memory leakage in dc_construct_ctx() function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bdea8ee92a6abc650b2189fd5c53f36859baecb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b8701be1f66064ca72733c5f6e13748cdbf8397","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83ace0dd67ee386be1ddcf59dab49d6d9a54e62e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ae15ebaefc4878d614f10cc56ea672f88cea582","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d473c55ce1975c9e601c25293328a5039225d2b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53606","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.297","lastModified":"2025-10-04T16:15:57.297","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: clean up potential nfsd_file refcount leaks in COPY codepath\n\nThere are two different flavors of the nfsd4_copy struct. One is\nembedded in the compound and is used directly in synchronous copies. The\nother is dynamically allocated, refcounted and tracked in the client\nstruture. For the embedded one, the cleanup just involves releasing any\nnfsd_files held on its behalf. For the async one, the cleanup is a bit\nmore involved, and we need to dequeue it from lists, unhash it, etc.\n\nThere is at least one potential refcount leak in this code now. If the\nkthread_create call fails, then both the src and dst nfsd_files in the\noriginal nfsd4_copy object are leaked.\n\nThe cleanup in this codepath is also sort of weird. In the async copy\ncase, we'll have up to four nfsd_file references (src and dst for both\nflavors of copy structure). They are both put at the end of\nnfsd4_do_async_copy, even though the ones held on behalf of the embedded\none outlive that structure.\n\nChange it so that we always clean up the nfsd_file refs held by the\nembedded copy structure before nfsd4_copy returns. Rework\ncleanup_async_copy to handle both inter and intra copies. Eliminate\nnfsd4_cleanup_intra_ssc since it now becomes a no-op."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6ba434cb1a8d403ea9aad1b667c3ea3ad8b3191f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75b8c681c563ef7e85da6862354efc18d2a08b1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f565846fbe8182961498d4cbe618b15076a683b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3169b6ffe036b549c296a9e71591d29a1fb3209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd63299db8090307eae66f2aef17c8f00aafa0a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53607","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.410","lastModified":"2025-10-04T16:15:57.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: ymfpci: Fix BUG_ON in probe function\n\nThe snd_dma_buffer.bytes field now contains the aligned size, which this\nsnd_BUG_ON() did not account for, resulting in the following:\n\n[    9.625915] ------------[ cut here ]------------\n[    9.633440] WARNING: CPU: 0 PID: 126 at sound\/pci\/ymfpci\/ymfpci_main.c:2168 snd_ymfpci_create+0x681\/0x698 [snd_ymfpci]\n[    9.648926] Modules linked in: snd_ymfpci(+) snd_intel_dspcfg kvm(+) snd_intel_sdw_acpi snd_ac97_codec snd_mpu401_uart snd_opl3_lib irqbypass snd_hda_codec gameport snd_rawmidi crct10dif_pclmul crc32_pclmul cfg80211 snd_hda_core polyval_clmulni polyval_generic gf128mul snd_seq_device ghash_clmulni_intel snd_hwdep ac97_bus sha512_ssse3 rfkill snd_pcm aesni_intel tg3 snd_timer crypto_simd snd mxm_wmi libphy cryptd k10temp fam15h_power pcspkr soundcore sp5100_tco wmi acpi_cpufreq mac_hid dm_multipath sg loop fuse dm_mod bpf_preload ip_tables x_tables ext4 crc32c_generic crc16 mbcache jbd2 sr_mod cdrom ata_generic pata_acpi firewire_ohci crc32c_intel firewire_core xhci_pci crc_itu_t pata_via xhci_pci_renesas floppy\n[    9.711849] CPU: 0 PID: 126 Comm: kworker\/0:2 Not tainted 6.1.21-1-lts #1 08d2e5ece03136efa7c6aeea9a9c40916b1bd8da\n[    9.722200] Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M.\/990FX Extreme4, BIOS P2.70 06\/05\/2014\n[    9.732204] Workqueue: events work_for_cpu_fn\n[    9.736580] RIP: 0010:snd_ymfpci_create+0x681\/0x698 [snd_ymfpci]\n[    9.742594] Code: 8c c0 4c 89 e2 48 89 df 48 c7 c6 92 c6 8c c0 e8 15 d0 e9 ff 48 83 c4 08 44 89 e8 5b 5d 41 5c 41 5d 41 5e 41 5f e9 d3 7a 33 e3 <0f> 0b e9 cb fd ff ff 41 bd fb ff ff ff eb db 41 bd f4 ff ff ff eb\n[    9.761358] RSP: 0018:ffffab64804e7da0 EFLAGS: 00010287\n[    9.766594] RAX: ffff8fa2df06c400 RBX: ffff8fa3073a8000 RCX: ffff8fa303fbc4a8\n[    9.773734] RDX: ffff8fa2df06d000 RSI: 0000000000000010 RDI: 0000000000000020\n[    9.780876] RBP: ffff8fa300b5d0d0 R08: ffff8fa3073a8e50 R09: 00000000df06bf00\n[    9.788018] R10: ffff8fa2df06bf00 R11: 00000000df068200 R12: ffff8fa3073a8918\n[    9.795159] R13: 0000000000000000 R14: 0000000000000080 R15: ffff8fa2df068200\n[    9.802317] FS:  0000000000000000(0000) GS:ffff8fa9fec00000(0000) knlGS:0000000000000000\n[    9.810414] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    9.816158] CR2: 000055febaf66500 CR3: 0000000101a2e000 CR4: 00000000000406f0\n[    9.823301] Call Trace:\n[    9.825747]  <TASK>\n[    9.827889]  snd_card_ymfpci_probe+0x194\/0x950 [snd_ymfpci b78a5fe64b5663a6390a909c67808567e3e73615]\n[    9.837030]  ? finish_task_switch.isra.0+0x90\/0x2d0\n[    9.841918]  local_pci_probe+0x45\/0x80\n[    9.845680]  work_for_cpu_fn+0x1a\/0x30\n[    9.849431]  process_one_work+0x1c7\/0x380\n[    9.853464]  worker_thread+0x1af\/0x390\n[    9.857225]  ? rescuer_thread+0x3b0\/0x3b0\n[    9.861254]  kthread+0xde\/0x110\n[    9.864414]  ? kthread_complete_and_exit+0x20\/0x20\n[    9.869210]  ret_from_fork+0x22\/0x30\n[    9.872792]  <\/TASK>\n[    9.874985] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32b9bd7cfc2e2d92d595386add4e111b232b351f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6be2e7522eb529b41c16d459f33bbdbcddbf5c15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81d2a7e93c8322ca6b858f6736d7fc3d034e6c23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96e34c88000febc83e41aa7db0b0a41676314818","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0217b09910c081b6471181345ea5b24025edf51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53608","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.527","lastModified":"2025-10-04T16:15:57.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential UAF of struct nilfs_sc_info in nilfs_segctor_thread()\n\nThe finalization of nilfs_segctor_thread() can race with\nnilfs_segctor_kill_thread() which terminates that thread, potentially\ncausing a use-after-free BUG as KASAN detected.\n\nAt the end of nilfs_segctor_thread(), it assigns NULL to \"sc_task\" member\nof \"struct nilfs_sc_info\" to indicate the thread has finished, and then\nnotifies nilfs_segctor_kill_thread() of this using waitqueue\n\"sc_wait_task\" on the struct nilfs_sc_info.\n\nHowever, here, immediately after the NULL assignment to \"sc_task\", it is\npossible that nilfs_segctor_kill_thread() will detect it and return to\ncontinue the deallocation, freeing the nilfs_sc_info structure before the\nthread does the notification.\n\nThis fixes the issue by protecting the NULL assignment to \"sc_task\" and\nits notification, with spinlock \"sc_state_lock\" of the struct\nnilfs_sc_info.  Since nilfs_segctor_kill_thread() does a final check to\nsee if \"sc_task\" is NULL with \"sc_state_lock\" locked, this can eliminate\nthe race."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/034cce77d52ba013ce62b4f5258c29907eb1ada5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0dbf0e64b91ee8fcb278aea93eb06fc7d56ecbcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/613bf23c070d11c525268f2945aa594704a9b764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6be49d100c22ffea3287a4b19d7639d259888e33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92684e02654c91a61a0b0561433b710bcece19fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4d80bd6370b81a1725b6b8f7894802c23a14e9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bae009a2f1b7c2011d2e92d8c84868d315c0b97e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f32297dba338dc06d62286dedb3cdbd5175b1719","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53609","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.647","lastModified":"2025-10-04T16:15:57.647","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: Revert \"scsi: core: Do not increase scsi_device's iorequest_cnt if dispatch failed\"\n\nThe \"atomic_inc(&cmd->device->iorequest_cnt)\" in scsi_queue_rq() would\ncause kernel panic because cmd->device may be freed after returning from\nscsi_dispatch_cmd().\n\nThis reverts commit cfee29ffb45b1c9798011b19d454637d1b0fe87d."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35fe6fa57b994e7da222893adf0bb748d6055e73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ca9818d1624e136a76ae8faedb6b6c95ca66903","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53610","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.750","lastModified":"2025-10-04T16:15:57.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip: Fix refcount leak in platform_irqchip_probe\n\nof_irq_find_parent() returns a node pointer with refcount incremented,\nWe should use of_node_put() on it when not needed anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4401b485855700f296cae4d0db36a52948bff4fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6caa5a2b78f5f53c433d3a3781e53325da22f0ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b00baffcc2561374f8fe8af873d00531f19864eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c32fb16331f612e66a7fa8930164e0dc15725b72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea54b608d85b7536f92238f3259730fa06cb5d21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53611","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.863","lastModified":"2025-10-04T16:15:57.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipmi_si: fix a memleak in try_smi_init()\n\nKmemleak reported the following leak info in try_smi_init():\n\nunreferenced object 0xffff00018ecf9400 (size 1024):\n  comm \"modprobe\", pid 2707763, jiffies 4300851415 (age 773.308s)\n  backtrace:\n    [<000000004ca5b312>] __kmalloc+0x4b8\/0x7b0\n    [<00000000953b1072>] try_smi_init+0x148\/0x5dc [ipmi_si]\n    [<000000006460d325>] 0xffff800081b10148\n    [<0000000039206ea5>] do_one_initcall+0x64\/0x2a4\n    [<00000000601399ce>] do_init_module+0x50\/0x300\n    [<000000003c12ba3c>] load_module+0x7a8\/0x9e0\n    [<00000000c246fffe>] __se_sys_init_module+0x104\/0x180\n    [<00000000eea99093>] __arm64_sys_init_module+0x24\/0x30\n    [<0000000021b1ef87>] el0_svc_common.constprop.0+0x94\/0x250\n    [<0000000070f4f8b7>] do_el0_svc+0x48\/0xe0\n    [<000000005a05337f>] el0_svc+0x24\/0x3c\n    [<000000005eb248d6>] el0_sync_handler+0x160\/0x164\n    [<0000000030a59039>] el0_sync+0x160\/0x180\n\nThe problem was that when an error occurred before handlers registration\nand after allocating `new_smi->si_sm`, the variable wouldn't be freed in\nthe error handling afterwards since `shutdown_smi()` hadn't been\nregistered yet. Fix it by adding a `kfree()` in the error handling path\nin `try_smi_init()`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09cb2a71b2e982015fe0464f28da1ab42b8e6375","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bfcfea0fae0d0a6c6ff5543e6d704b3807b83ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c5f02e16b919c8cb6024dc3778c8d8f1fb1f26b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cf1a126de2992b4efe1c3c4d398f8de4aed6e3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7291af9a738d936c2d6869d030711dceb68404d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9bc8fbb2d416ce87f0342478dc9fcfd79f2c65f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbb7d8a4b4beb3061b3a1847a742983a01dca381","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f53ab5a2bf20fed59a2f7542d3453228b8056358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53612","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:57.987","lastModified":"2025-10-04T16:15:57.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (coretemp) Simplify platform device handling\n\nCoretemp's platform driver is unconventional. All the real work is done\nglobally by the initcall and CPU hotplug notifiers, while the \"driver\"\neffectively just wraps an allocation and the registration of the hwmon\ninterface in a long-winded round-trip through the driver core.  The whole\nlogic of dynamically creating and destroying platform devices to bring\nthe interfaces up and down is error prone, since it assumes\nplatform_device_add() will synchronously bind the driver and set drvdata\nbefore it returns, thus results in a NULL dereference if drivers_autoprobe\nis turned off for the platform bus. Furthermore, the unusual approach of\ndoing that from within a CPU hotplug notifier, already commented in the\ncode that it deadlocks suspend, also causes lockdep issues for other\ndrivers or subsystems which may want to legitimately register a CPU\nhotplug notifier from a platform bus notifier.\n\nAll of these issues can be solved by ripping this unusual behaviour out\ncompletely, simply tying the platform devices to the lifetime of the\nmodule itself, and directly managing the hwmon interfaces from the\nhotplug notifiers. There is a slight user-visible change in that\n\/sys\/bus\/platform\/drivers\/coretemp will no longer appear, and\n\/sys\/devices\/platform\/coretemp.n will remain present if package n is\nhotplugged off, but hwmon users should really only be looking for the\npresence of the hwmon interfaces, whose behaviour remains unchanged."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4000384684f612b3645a944f6acde0e65ac370b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52ea47a0ddfbc5fe05e873d3f5a59db4ba3e03fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5735878a7b7db7e9ce731cb36cec298a9de67549","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d03bbff456befeccdd4d663177c4d6c75d0c4ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fcdbc4bc01365f4b10fed7db544a3149e3054fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c57a8d14d7880521150ee801d53a0a64fdffd9c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53613","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:58.103","lastModified":"2025-10-04T16:15:58.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndax: Fix dax_mapping_release() use after free\n\nA CONFIG_DEBUG_KOBJECT_RELEASE test of removing a device-dax region\nprovider (like modprobe -r dax_hmem) yields:\n\n kobject: 'mapping0' (ffff93eb460e8800): kobject_release, parent 0000000000000000 (delayed 2000)\n [..]\n DEBUG_LOCKS_WARN_ON(1)\n WARNING: CPU: 23 PID: 282 at kernel\/locking\/lockdep.c:232 __lock_acquire+0x9fc\/0x2260\n [..]\n RIP: 0010:__lock_acquire+0x9fc\/0x2260\n [..]\n Call Trace:\n  <TASK>\n [..]\n  lock_acquire+0xd4\/0x2c0\n  ? ida_free+0x62\/0x130\n  _raw_spin_lock_irqsave+0x47\/0x70\n  ? ida_free+0x62\/0x130\n  ida_free+0x62\/0x130\n  dax_mapping_release+0x1f\/0x30\n  device_release+0x36\/0x90\n  kobject_delayed_cleanup+0x46\/0x150\n\nDue to attempting ida_free() on an ida object that has already been\nfreed. Devices typically only hold a reference on their parent while\nregistered. If a child needs a parent object to complete its release it\nneeds to hold a reference that it drops from its release callback.\nArrange for a dax_mapping to pin its parent dev_dax instance until\ndax_mapping_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03859868ab82d57bfdd0cea1bf31f9319a5dded0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d24b170a9db0456f577b1ab01226a2254c016a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7310b84821f043dcf77d5e6aa0ad55dc1e10a11d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94a85474f5e3e518bdbf8c9f51cb343d734a04f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c2f993b6ca903c030d58451b5bf9ea27d0d17fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f76db6781d76d8464ec2faa9752cc3fb2e4f6923","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53614","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:58.227","lastModified":"2025-10-04T16:15:58.227","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/ksm: fix race with VMA iteration and mm_struct teardown\n\nexit_mmap() will tear down the VMAs and maple tree with the mmap_lock held\nin write mode.  Ensure that the maple tree is still valid by checking\nksm_test_exit() after taking the mmap_lock in read mode, but before the\nfor_each_vma() iterator dereferences a destroyed maple tree.\n\nSince the maple tree is destroyed, the flags telling lockdep to check an\nexternal lock has been cleared.  Skip the for_each_vma() iterator to avoid\ndereferencing a maple tree without the external lock flag, which would\ncreate a lockdep warning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/286b0cab31bac29960e5684f6fb331d42f03b363","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6db504ce55bdbc575723938fc480713c9183f6a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f664ffd8f78c05a1fd542a28bc5a11e994c014","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53615","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:58.340","lastModified":"2025-10-04T16:15:58.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix deletion race condition\n\nSystem crash when using debug kernel due to link list corruption. The cause\nof the link list corruption is due to session deletion was allowed to queue\nup twice.  Here's the internal trace that show the same port was allowed to\ndouble queue for deletion on different cpu.\n\n20808683956 015 qla2xxx [0000:13:00.1]-e801:4: Scheduling sess ffff93ebf9306800 for deletion 50:06:0e:80:12:48:ff:50 fc4_type 1\n20808683957 027 qla2xxx [0000:13:00.1]-e801:4: Scheduling sess ffff93ebf9306800 for deletion 50:06:0e:80:12:48:ff:50 fc4_type 1\n\nMove the clearing\/setting of deleted flag lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d7da12483e98c451a51bd294a3d3494f0aee5eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dfe4344c168c6ca20fe7640649aacfcefcccb26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4628a5b98e4c6d905e1f7638242612d7db7d9c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b05017cb4ff75eea783583f3d400059507510ab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd06c45b326e44f0d21dc1b3fa23e71f46847e28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1ea164be545629bf442c22f508ad9e7b94ac100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53616","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-10-04T16:15:58.460","lastModified":"2025-10-04T16:15:58.460","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix invalid free of JFS_IP(ipimap)->i_imap in diUnmount\n\nsyzbot found an invalid-free in diUnmount:\n\nBUG: KASAN: double-free in slab_free mm\/slub.c:3661 [inline]\nBUG: KASAN: double-free in __kmem_cache_free+0x71\/0x110 mm\/slub.c:3674\nFree of addr ffff88806f410000 by task syz-executor131\/3632\n\n CPU: 0 PID: 3632 Comm: syz-executor131 Not tainted 6.1.0-rc7-syzkaller-00012-gca57f02295f1 #0\n Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\n Call Trace:\n  <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x1b1\/0x28e lib\/dump_stack.c:106\n  print_address_description+0x74\/0x340 mm\/kasan\/report.c:284\n  print_report+0x107\/0x1f0 mm\/kasan\/report.c:395\n  kasan_report_invalid_free+0xac\/0xd0 mm\/kasan\/report.c:460\n  ____kasan_slab_free+0xfb\/0x120\n  kasan_slab_free include\/linux\/kasan.h:177 [inline]\n  slab_free_hook mm\/slub.c:1724 [inline]\n  slab_free_freelist_hook+0x12e\/0x1a0 mm\/slub.c:1750\n  slab_free mm\/slub.c:3661 [inline]\n  __kmem_cache_free+0x71\/0x110 mm\/slub.c:3674\n  diUnmount+0xef\/0x100 fs\/jfs\/jfs_imap.c:195\n  jfs_umount+0x108\/0x370 fs\/jfs\/jfs_umount.c:63\n  jfs_put_super+0x86\/0x190 fs\/jfs\/super.c:194\n  generic_shutdown_super+0x130\/0x310 fs\/super.c:492\n  kill_block_super+0x79\/0xd0 fs\/super.c:1428\n  deactivate_locked_super+0xa7\/0xf0 fs\/super.c:332\n  cleanup_mnt+0x494\/0x520 fs\/namespace.c:1186\n  task_work_run+0x243\/0x300 kernel\/task_work.c:179\n  exit_task_work include\/linux\/task_work.h:38 [inline]\n  do_exit+0x664\/0x2070 kernel\/exit.c:820\n  do_group_exit+0x1fd\/0x2b0 kernel\/exit.c:950\n  __do_sys_exit_group kernel\/exit.c:961 [inline]\n  __se_sys_exit_group kernel\/exit.c:959 [inline]\n  __x64_sys_exit_group+0x3b\/0x40 kernel\/exit.c:959\n  do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n  do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n[...]\n\nJFS_IP(ipimap)->i_imap is not setting to NULL after free in diUnmount.\nIf jfs_remount() free JFS_IP(ipimap)->i_imap but then failed at diMount().\nJFS_IP(ipimap)->i_imap will be freed once again.\nFix this problem by setting JFS_IP(ipimap)->i_imap to NULL after free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/114ea3cb13ab25f7178cb60283adb93d2f96dad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4de3a603010e0ca334487de24c6aab0777b7f808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5873df0195124be2f357de11bfd473ead4f90ed8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2bda2c192d0244b5a78b787ef20aa10cb319b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/756747d4b439e3e1159282ae89f17eefebbe9b25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88484bde6f12126616b38e43b6c00edcd941f615","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3c0f0ddd851b3fa3e9d3450bbcd561f4f850469","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef7311101ca43dd73b45bca7a30ac72d9535ff87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-11272","sourceIdentifier":"cna@vuldb.com","published":"2025-10-04T20:15:40.897","lastModified":"2025-10-04T20:15:40.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in SeriaWei ZKEACMS up to 4.3. This affects the function Delete of the file src\/ZKEACMS.Redirection\/Controllers\/UrlRedirectionController.cs of the component POST Request Handler. The manipulation leads to improper authorization. Remote exploitation of the attack is possible. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:N\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:L","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":2.5}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:P","baseScore":5.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":4.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-266"},{"lang":"en","value":"CWE-285"}]}],"references":[{"url":"https:\/\/github.com\/August829\/YU1\/issues\/4","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/August829\/YU1\/issues\/4#issue-3420825660","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327006","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327006","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.655842","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11273","sourceIdentifier":"cna@vuldb.com","published":"2025-10-04T23:15:40.047","lastModified":"2025-10-04T23:15:40.047","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in LaChatterie Verger up to 1.2.10. This impacts the function redirectToAuthorization of the file \/src\/main\/services\/mcp\/oauth\/provider.ts. The manipulation of the argument URL results in deserialization. The attack can be executed remotely. The exploit has been made public and could be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-20"},{"lang":"en","value":"CWE-502"}]}],"references":[{"url":"https:\/\/lavender-bicycle-a5a.notion.site\/Verger-RCE-26153a41781f80b694beebc22ea54579?source=copy_link","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327007","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327007","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.655871","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11274","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T01:15:35.247","lastModified":"2025-10-05T01:15:35.247","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was determined in Open Asset Import Library Assimp 6.0.2. Affected is the function Q3DImporter::InternReadFile of the file assimp\/code\/AssetLib\/Q3D\/Q3DLoader.cpp. This manipulation causes allocation of resources. The attack is restricted to local execution. The exploit has been publicly disclosed and may be utilized."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:L\/UI:N\/VC:N\/VI:N\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":3.3,"baseSeverity":"LOW","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":1.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:L\/AC:L\/Au:S\/C:N\/I:N\/A:P","baseScore":1.7,"accessVector":"LOCAL","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"PARTIAL"},"baseSeverity":"LOW","exploitabilityScore":3.1,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-400"},{"lang":"en","value":"CWE-770"}]}],"references":[{"url":"https:\/\/github.com\/assimp\/assimp\/issues\/6356","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/user-attachments\/files\/22407575\/poc.zip","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327008","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327008","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.658075","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11275","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T01:15:35.467","lastModified":"2025-10-05T01:15:35.467","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was identified in Open Asset Import Library Assimp 6.0.2. Affected by this vulnerability is the function ODDLParser::getNextSeparator in the library assimp\/contrib\/openddlparser\/include\/openddlparser\/OpenDDLParserUtils.h. Such manipulation leads to heap-based buffer overflow. The attack must be carried out locally. The exploit is publicly available and might be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:L\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":4.3,"accessVector":"LOCAL","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":3.1,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/github.com\/assimp\/assimp\/issues\/6357","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/user-attachments\/files\/22417682\/poc.zip","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327009","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327009","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.658675","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11276","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T02:15:35.690","lastModified":"2025-10-05T02:15:35.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A security flaw has been discovered in Rebuild up to 4.1.3. Affected by this issue is some unknown functionality of the component Comment\/Guestbook. Performing manipulation results in cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 4.1.4 can resolve this issue. It is suggested to upgrade the affected component. According to the researcher the vendor has confirmed the flaw and fix in a private issue response."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.1,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:N","baseScore":4.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/gitee.com\/getrebuild\/rebuild\/releases\/tag\/4.1.4","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327010","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327010","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.658910","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11277","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T02:15:37.470","lastModified":"2025-10-05T02:15:37.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A weakness has been identified in Open Asset Import Library Assimp 6.0.2. This affects the function Q3DImporter::InternReadFile of the file assimp\/code\/AssetLib\/Q3D\/Q3DLoader.cpp. Executing manipulation can lead to heap-based buffer overflow. The attack needs to be launched locally. The exploit has been made available to the public and could be exploited."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:L\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":4.3,"accessVector":"LOCAL","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":3.1,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/github.com\/assimp\/assimp\/issues\/6358","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/user-attachments\/files\/22422643\/poc.zip","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327011","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327011","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.658912","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11278","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T03:15:39.143","lastModified":"2025-10-05T03:15:39.143","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"cna@vuldb.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"A security vulnerability has been detected in AllStarLink Supermon up to 6.2. This vulnerability affects unknown code of the component AllMon2. The manipulation leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed publicly and may be used. The vendor was contacted early about this disclosure but did not respond in any way. This vulnerability only affects products that are no longer supported by the maintainer."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/vuldb.com\/?ctiid.327012","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327012","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659016","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11279","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T03:15:40.263","lastModified":"2025-10-05T03:15:40.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was detected in Axosoft Scrum and Bug Tracking 22.1.1.11545. This issue affects some unknown processing of the component Add Work Item Page. The manipulation of the argument Title results in csv injection. The attack can be launched remotely. The exploit is now public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:P\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"PASSIVE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:L\/I:L\/A:L","baseScore":5.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.1,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-1236"}]}],"references":[{"url":"https:\/\/drive.google.com\/file\/d\/1Lw9_KYblnhg7FQU70G0SgH_VyYRUD-rX\/view?usp=sharing","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327013","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327013","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659422","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11280","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T04:15:35.457","lastModified":"2025-10-05T04:15:35.457","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A flaw has been found in Frappe LMS 2.35.0. Impacted is an unknown function of the file \/files\/ of the component Assignment Picture Handler. This manipulation causes direct request. The attack may be initiated remotely. The attack's complexity is rated as high. The exploitability is considered difficult. The exploit has been published and may be used. It is advisable to upgrade the affected component. The vendor was informed early about a total of four security issues and confirmed that those have been fixed. However, the release notes on GitHub do not mention them."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:H\/AT:N\/PR:N\/UI:N\/VC:L\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":3.7,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.2,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:H\/Au:N\/C:P\/I:N\/A:N","baseScore":2.6,"accessVector":"NETWORK","accessComplexity":"HIGH","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"NONE","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":4.9,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-425"}]}],"references":[{"url":"https:\/\/gist.github.com\/0xHamy\/beb840a754f50a7ee6500600147a6ac1","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/0xHamy\/beb840a754f50a7ee6500600147a6ac1#steps-to-reproduce","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327014","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327014","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659694","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11281","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T04:15:40.087","lastModified":"2025-10-05T04:15:40.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in Frappe LMS 2.35.0. The affected element is an unknown function of the file \/courses\/ of the component Unpublished Course Handler. Such manipulation leads to improper access controls. The attack may be launched remotely. This attack is characterized by high complexity. The exploitability is described as difficult. The exploit has been disclosed to the public and may be used. You should upgrade the affected component. The vendor was informed early about a total of four security issues and confirmed that those have been fixed. However, the release notes on GitHub do not mention them."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:H\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":2.3,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":5.0,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.6,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:H\/Au:S\/C:P\/I:P\/A:P","baseScore":4.6,"accessVector":"NETWORK","accessComplexity":"HIGH","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":3.9,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-266"},{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/gist.github.com\/0xHamy\/5ebd820ad30f33827011e9a614fb2f89","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/0xHamy\/5ebd820ad30f33827011e9a614fb2f89#steps-to-reproduce","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327015","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327015","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659695","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-61882","sourceIdentifier":"secalert_us@oracle.com","published":"2025-10-05T04:15:40.340","lastModified":"2025-10-05T04:15:40.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vulnerability in the Oracle Concurrent Processing product of Oracle E-Business Suite (component: BI Publisher Integration).  Supported versions that are affected are 12.2.3-12.2.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Concurrent Processing.  Successful attacks of this vulnerability can result in takeover of Oracle Concurrent Processing. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts).  CVSS Vector: (CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H)."}],"metrics":{"cvssMetricV31":[{"source":"secalert_us@oracle.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"references":[{"url":"https:\/\/www.oracle.com\/security-alerts\/alert-cve-2025-61882.html","source":"secalert_us@oracle.com"}]}},{"cve":{"id":"CVE-2025-11282","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T05:15:30.460","lastModified":"2025-10-05T05:15:30.460","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in Frappe LMS 2.34.x\/2.35.0. The impacted element is an unknown function of the component Incomplete Fix CVE-2025-55006. Performing manipulation results in cross site scripting. Remote exploitation of the attack is possible. The exploit has been made public and could be used. The affected component should be upgraded. The vendor was informed early about a total of four security issues and confirmed that those have been fixed. However, the release notes on GitHub do not mention them."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.4,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","baseScore":3.3,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/gist.github.com\/0xHamy\/c2a81f2d1c779c513fa3db6f3ad24544#steps-to-reproduce","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/frappe\/lms\/security\/advisories\/GHSA-mvxw-r9x4-3vrr","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327016","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327016","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659696","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11283","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T05:15:31.500","lastModified":"2025-10-05T05:15:31.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was determined in Frappe LMS 2.35.0. This affects an unknown function of the component Course Handler. Executing manipulation of the argument Description can lead to cross site scripting. The attack can be executed remotely. The exploit has been publicly disclosed and may be utilized. It is suggested to upgrade the affected component. The vendor was informed early about a total of four security issues and confirmed that those have been fixed. However, the release notes on GitHub do not mention them."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.4,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","baseScore":3.3,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/gist.github.com\/0xHamy\/1f99795df9301a95ee0c6d18028cd3da","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/0xHamy\/1f99795df9301a95ee0c6d18028cd3da#steps-to-reproduce","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327017","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327017","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659697","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11284","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T06:15:31.417","lastModified":"2025-10-05T06:15:31.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in Zytec Dalian Zhuoyun Technology Central Authentication Service 3. Affected by this vulnerability is an unknown functionality of the file \/index.php\/auth\/Ops\/git of the component HTTP Header Handler. The manipulation of the argument Authorization leads to use of hard-coded password. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-255"},{"lang":"en","value":"CWE-259"}]}],"references":[{"url":"http:\/\/101.200.76.102:38765\/qwertyuiop\/qwsdfvbnm\/1\/vuldb\/fbnoABGFBEGPcvgmowepgokwj293t0-23t202jk9t0.html","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327042","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327042","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659701","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11285","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T06:15:32.640","lastModified":"2025-10-05T06:15:32.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in samanhappy MCPHub up to 0.9.10. Affected by this issue is some unknown functionality of the file src\/controllers\/serverController.ts. The manipulation of the argument command\/args results in os command injection. The attack can be launched remotely. The exploit has been made public and could be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-77"},{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/github.com\/August829\/YU1\/issues\/6","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327043","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327043","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659734","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11286","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T07:15:31.903","lastModified":"2025-10-05T07:15:31.903","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was determined in samanhappy MCPHub up to 0.9.10. This affects an unknown part of the file src\/controllers\/serverController.ts of the component MCPRouter Service. This manipulation of the argument baseUrl causes server-side request forgery. The attack may be initiated remotely. The exploit has been publicly disclosed and may be utilized. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":4.7,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.2,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:P\/I:P\/A:P","baseScore":5.8,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":6.4,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/github.com\/August829\/YU1\/issues\/7","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327044","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327044","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659744","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11287","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T07:15:33.110","lastModified":"2025-10-05T07:15:33.110","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was identified in samanhappy MCPHub up to 0.9.10. This vulnerability affects the function handleSseConnectionfunction of the file src\/services\/sseService.ts. Such manipulation leads to improper authentication. The attack may be launched remotely. The exploit is publicly available and might be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-287"}]}],"references":[{"url":"https:\/\/github.com\/August829\/YU1\/issues\/8","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327045","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327045","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.661170","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11288","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T08:15:31.143","lastModified":"2025-10-05T08:15:31.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A security flaw has been discovered in CRMEB up to 5.6. This issue affects some unknown processing of the file \/adminapi\/product\/product of the component GET Parameter Handler. Performing manipulation of the argument cate_id results in sql injection. Remote exploitation of the attack is possible. The exploit has been released to the public and may be exploited. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/coolcj-stack\/CRMEB-V5.6-SQL-Injection\/blob\/main\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327046","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327046","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659736","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-8406","sourceIdentifier":"security@huntr.dev","published":"2025-10-05T09:15:31.767","lastModified":"2025-10-05T09:15:31.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"ZenML version 0.83.1 is affected by a path traversal vulnerability in the `PathMaterializer` class. The `load` function uses `is_path_within_directory` to validate files during `data.tar.gz` extraction, which fails to effectively detect symbolic and hard links. This vulnerability can lead to arbitrary file writes, potentially resulting in arbitrary command execution if critical files are overwritten."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:L\/AC:H\/PR:H\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.3,"impactScore":5.9}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/zenml-io\/zenml\/commit\/5d22a48d7bf6c7f10b748577c2be79cc7969d398","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/a0880d64-9928-45bf-9663-2cd81582d9e7","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2025-11289","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T11:16:02.210","lastModified":"2025-10-05T11:16:02.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was determined in westboy CicadasCMS up to 2431154dac8d0735e04f1fd2a3c3556668fc8dab. The impacted element is the function Save of the file src\/main\/java\/com\/zhiliao\/common\/template\/TemplateFileServiceImpl.java of the component Template Management Page. This manipulation causes cross site scripting. It is possible to initiate the attack remotely. The exploit has been publicly disclosed and may be utilized."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.4,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","baseScore":3.3,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/github.com\/devastatingglamour\/CVE\/blob\/main\/CicadasCMS-XSS4.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327170","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327170","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659789","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-8917","sourceIdentifier":"security@huntr.dev","published":"2025-10-05T11:16:03.400","lastModified":"2025-10-05T11:16:03.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in allegroai\/clearml version v2.0.1 allows for path traversal due to improper handling of symbolic and hard links in the `safe_extract` function. This flaw can lead to arbitrary file writes outside the intended directory, potentially resulting in remote code execution if critical files are overwritten."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:L\/AC:L\/PR:H\/UI:R\/S:U\/C:H\/I:H\/A:N","baseScore":5.8,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":0.6,"impactScore":5.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/allegroai\/clearml\/commit\/64fb2bcbdbb87a74af90dd723d5ef4a99fceeb73","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/588fcdd1-fea4-4cc2-a9f8-851701dcb576","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2025-11290","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T12:15:31.063","lastModified":"2025-10-05T12:15:31.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was identified in CRMEB up to 5.6.1. This affects an unknown function of the component JWT HMAC Secret Handler. Such manipulation of the argument secret with the input default leads to use of hard-coded cryptographic key\r . It is possible to launch the attack remotely. Attacks of this nature are highly complex. The exploitability is reported as difficult. The exploit is publicly available and might be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:H\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":5.6,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:H\/Au:N\/C:P\/I:P\/A:P","baseScore":5.1,"accessVector":"NETWORK","accessComplexity":"HIGH","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":4.9,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-320"},{"lang":"en","value":"CWE-321"}]}],"references":[{"url":"https:\/\/vuldb.com\/?ctiid.327171","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327171","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.659843","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11291","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T14:15:30.947","lastModified":"2025-10-05T14:15:30.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A security flaw has been discovered in ixmaps website2017 up to 0c71cffa0162186bc057a76766bc97e9f5a3a2d0. This impacts an unknown function of the file \/map.php of the component HTTP GET Request Handler. Performing manipulation of the argument trid results in cross site scripting. The attack can be initiated remotely. The exploit has been released to the public and may be exploited. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/github.com\/PlsRevert\/CVEs\/issues\/2","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/PlsRevert\/CVEs\/issues\/2#issue-3444474977","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327172","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327172","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.661179","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11292","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T14:15:31.963","lastModified":"2025-10-05T14:15:31.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A weakness has been identified in Belkin F9K1015 1.00.10. Affected is an unknown function of the file \/goform\/formBSSetSitesurvey. Executing manipulation of the argument wan_ipaddr can lead to command injection. The attack can be launched remotely. The exploit has been made available to the public and could be exploited. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formBSSetSitesurvey.md","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formBSSetSitesurvey.md#poc","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327173","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327173","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.661295","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11293","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T16:15:45.920","lastModified":"2025-10-05T16:15:45.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A security vulnerability has been detected in Belkin F9K1015 1.00.10. Affected by this vulnerability is an unknown functionality of the file \/goform\/formConnectionSetting. The manipulation of the argument max_Conn leads to buffer overflow. The attack may be initiated remotely. The exploit has been disclosed publicly and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":7.4,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formConnectionSetting.md","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formConnectionSetting.md#poc","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327174","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327174","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.661296","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-11294","sourceIdentifier":"cna@vuldb.com","published":"2025-10-05T16:15:46.760","lastModified":"2025-10-05T16:15:46.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was detected in Belkin F9K1015 1.00.10. Affected by this issue is some unknown functionality of the file \/goform\/formL2TPSetup. The manipulation of the argument L2TPUserName results in buffer overflow. The attack may be launched remotely. The exploit is now public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":7.4,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formL2TPSetup.md","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/panda666-888\/vuls\/blob\/main\/belkin\/f9k1015\/formL2TPSetup.md#poc","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.327175","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.327175","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.661298","source":"cna@vuldb.com"}]}}]}