{"resultsPerPage":84,"startIndex":0,"totalResults":84,"format":"NVD_CVE","version":"2.0","timestamp":"2024-03-03T10:11:27.160","vulnerabilities":[{"cve":{"id":"CVE-2024-25063","sourceIdentifier":"hsrc@hikvision.com","published":"2024-03-02T03:15:06.007","lastModified":"2024-03-02T03:15:06.007","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Due to insufficient server-side validation, a successful exploit of this vulnerability could allow an attacker to gain access to certain URLs that the attacker should not have access to."}],"metrics":{"cvssMetricV31":[{"source":"hsrc@hikvision.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"references":[{"url":"https:\/\/www.hikvision.com\/en\/support\/cybersecurity\/security-advisory\/security-vulnerabilities-in-hikcentral-professional\/","source":"hsrc@hikvision.com"}]}},{"cve":{"id":"CVE-2024-25064","sourceIdentifier":"hsrc@hikvision.com","published":"2024-03-02T03:15:06.177","lastModified":"2024-03-02T03:15:06.177","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Due to insufficient server-side validation, an attacker with login privileges could access certain resources that the attacker should not have access to by changing parameter values."}],"metrics":{"cvssMetricV31":[{"source":"hsrc@hikvision.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"references":[{"url":"https:\/\/www.hikvision.com\/en\/support\/cybersecurity\/security-advisory\/security-vulnerabilities-in-hikcentral-professional\/","source":"hsrc@hikvision.com"}]}},{"cve":{"id":"CVE-2024-1592","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T07:15:46.207","lastModified":"2024-03-02T07:15:46.207","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Complianz – GDPR\/CCPA Cookie Consent plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 6.5.6. This is due to missing or incorrect nonce validation on the process_delete function in class-DNSMPD.php. This makes it possible for unauthenticated attackers to delete GDPR data requests via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&new=3041903%40complianz-gdpr&old=3009228%40complianz-gdpr&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/6b524fc5-4beb-49f6-bafa-c788c6d1d78c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-1775","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T08:15:06.257","lastModified":"2024-03-02T08:15:06.257","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Nextend Social Login and Register plugin for WordPress is vulnerable to a self-based Reflected Cross-Site Scripting via the ‘error_description’ parameter in all versions up to, and including, 3.1.12 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers, with access to a subscriber-level account, to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. NOTE: This vulnerability can be successfully exploited on a vulnerable WordPress instance against an OAuth pre-authenticated higher-level user (e.g., administrator) by leveraging a cross-site request forgery in conjunction with a certain social engineering technique to achieve a critical impact scenario (cross-site scripting to administrator-level account creation). However, successful exploitation requires \"Debug mode\" to be enabled in the plugin's \"Global Settings\"."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":5.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.3,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3042326\/nextend-facebook-connect","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/3bad1d0d-3817-4c7f-a012-5a85b577781e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-0378","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T10:15:06.743","lastModified":"2024-03-02T10:15:06.743","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The AI Engine: Chatbots, Generators, Assistants, GPT 4 and more! plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the AI chat data when discussion tracking is enabled in all versions up to, and including, 2.2.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3043570%40ai-engine&new=3043570%40ai-engine&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/54344300-6288-40bc-b539-3dc9b555ed00?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2023-6326","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T12:15:59.460","lastModified":"2024-03-02T12:15:59.460","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Master Slider – Responsive Touch Slider plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 3.9.3. This is due to missing or incorrect nonce validation on the 'process_bulk_action' function. This makes it possible for unauthenticated attackers to duplicate or delete arbitrary sliders via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":5.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":2.5}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/master-slider\/trunk\/admin\/includes\/classes\/class-msp-list-table.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/5e0a7108-15ef-42d0-adce-fd5b0e6faf3c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-0611","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T12:16:00.210","lastModified":"2024-03-02T12:16:00.210","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Master Slider – Responsive Touch Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the slides callback functionality in all versions up to, and including, 3.9.5. This makes it possible for authenticated attackers, with editor-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:H\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.3,"impactScore":2.7}]},"references":[{"url":"https:\/\/advisory.abay.sh\/cve-2024-0611","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/ac6e587c-59b2-4f93-ab88-5e548b52db45?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-1449","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T12:16:00.547","lastModified":"2024-03-02T12:16:00.547","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Master Slider – Responsive Touch Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's ms_slide shortcode in all versions up to, and including, 3.9.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/wordpress.org\/plugins\/master-slider\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/af9adb6b-f726-4b74-be5c-82fdab0ae1f2?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-1398","sourceIdentifier":"security@wordfence.com","published":"2024-03-02T13:15:06.890","lastModified":"2024-03-02T13:15:06.890","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The Ultimate Bootstrap Elements for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘heading_title_tag’ and ’heading_sub_title_tag’ parameters in all versions up to, and including, 1.3.6 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/ultimate-bootstrap-elements-for-elementor\/tags\/1.3.6\/templates\/elements\/heading.php#L50","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/ultimate-bootstrap-elements-for-elementor\/tags\/1.3.6\/templates\/elements\/heading.php#L61","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/ed191380-6037-4d59-8db7-cb33136a304e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2022-48627","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:46.930","lastModified":"2024-03-02T22:15:46.930","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvt: fix memory overlapping when deleting chars in the buffer\n\nA memory overlapping copy occurs when deleting a long line. This memory\noverlapping copy can cause data corruption when scr_memcpyw is optimized\nto memcpy because memcpy does not ensure its behavior if the destination\nbuffer overlaps with the source buffer. The line buffer is not always\nbroken, because the memcpy utilizes the hardware acceleration, whose\nresult is not deterministic.\n\nFix this problem by using replacing the scr_memcpyw with scr_memmovew."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14d2cc21ca622310babf373e3a8f0b40acfe8265","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39cdb68c64d84e71a4a717000b6e5de208ee60cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57964a5710252bc82fe22d9fa98c180c58c20244","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfee93c9a6c395f9aa62268f1cedf64999844926","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48628","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.000","lastModified":"2024-03-02T22:15:47.000","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: drop messages from MDS when unmounting\n\nWhen unmounting all the dirty buffers will be flushed and after\nthe last osd request is finished the last reference of the i_count\nwill be released. Then it will flush the dirty cap\/snap to MDSs,\nand the unmounting won't wait the possible acks, which will ihold\nthe inodes when updating the metadata locally but makes no sense\nany more, of this. This will make the evict_inodes() to skip these\ninodes.\n\nIf encrypt is enabled the kernel generate a warning when removing\nthe encrypt keys when the skipped inodes still hold the keyring:\n\nWARNING: CPU: 4 PID: 168846 at fs\/crypto\/keyring.c:242 fscrypt_destroy_keyring+0x7e\/0xd0\nCPU: 4 PID: 168846 Comm: umount Tainted: G S  6.1.0-rc5-ceph-g72ead199864c #1\nHardware name: Supermicro SYS-5018R-WR\/X10SRW-F, BIOS 2.0 12\/17\/2015\nRIP: 0010:fscrypt_destroy_keyring+0x7e\/0xd0\nRSP: 0018:ffffc9000b277e28 EFLAGS: 00010202\nRAX: 0000000000000002 RBX: ffff88810d52ac00 RCX: ffff88810b56aa00\nRDX: 0000000080000000 RSI: ffffffff822f3a09 RDI: ffff888108f59000\nRBP: ffff8881d394fb88 R08: 0000000000000028 R09: 0000000000000000\nR10: 0000000000000001 R11: 11ff4fe6834fcd91 R12: ffff8881d394fc40\nR13: ffff888108f59000 R14: ffff8881d394f800 R15: 0000000000000000\nFS:  00007fd83f6f1080(0000) GS:ffff88885fd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f918d417000 CR3: 000000017f89a005 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\ngeneric_shutdown_super+0x47\/0x120\nkill_anon_super+0x14\/0x30\nceph_kill_sb+0x36\/0x90 [ceph]\ndeactivate_locked_super+0x29\/0x60\ncleanup_mnt+0xb8\/0x140\ntask_work_run+0x67\/0xb0\nexit_to_user_mode_prepare+0x23d\/0x240\nsyscall_exit_to_user_mode+0x25\/0x60\ndo_syscall_64+0x40\/0x80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7fd83dc39e9b\n\nLater the kernel will crash when iput() the inodes and dereferencing\nthe \"sb->s_master_keys\", which has been released by the\ngeneric_shutdown_super()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47f82395f04a976d4fa97de7f2acffa1c1096571","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89744b64914426cbabceb3d8a149176b5dafdfb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3dfcab2080dc1f9a4b09cc1327361bc2845bfcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52499","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.057","lastModified":"2024-03-02T22:15:47.057","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/47x: Fix 47x syscall return crash\n\nEddie reported that newer kernels were crashing during boot on his 476\nFSP2 system:\n\n  kernel tried to execute user page (b7ee2000) - exploit attempt? (uid: 0)\n  BUG: Unable to handle kernel instruction fetch\n  Faulting instruction address: 0xb7ee2000\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  BE PAGE_SIZE=4K FSP-2\n  Modules linked in:\n  CPU: 0 PID: 61 Comm: mount Not tainted 6.1.55-d23900f.ppcnf-fsp2 #1\n  Hardware name: ibm,fsp2 476fpe 0x7ff520c0 FSP-2\n  NIP:  b7ee2000 LR: 8c008000 CTR: 00000000\n  REGS: bffebd83 TRAP: 0400   Not tainted (6.1.55-d23900f.ppcnf-fs p2)\n  MSR:  00000030 <IR,DR>  CR: 00001000  XER: 20000000\n  GPR00: c00110ac bffebe63 bffebe7e bffebe88 8c008000 00001000 00000d12 b7ee2000\n  GPR08: 00000033 00000000 00000000 c139df10 48224824 1016c314 10160000 00000000\n  GPR16: 10160000 10160000 00000008 00000000 10160000 00000000 10160000 1017f5b0\n  GPR24: 1017fa50 1017f4f0 1017fa50 1017f740 1017f630 00000000 00000000 1017f4f0\n  NIP [b7ee2000] 0xb7ee2000\n  LR [8c008000] 0x8c008000\n  Call Trace:\n  Instruction dump:\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  ---[ end trace 0000000000000000 ]---\n\nThe problem is in ret_from_syscall where the check for\nicache_44x_need_flush is done. When the flush is needed the code jumps\nout-of-line to do the flush, and then intends to jump back to continue\nthe syscall return.\n\nHowever the branch back to label 1b doesn't return to the correct\nlocation, instead branching back just prior to the return to userspace,\ncausing bogus register values to be used by the rfi.\n\nThe breakage was introduced by commit 6f76a01173cc\n(\"powerpc\/syscall: implement system call entry\/exit logic in C for PPC32\") which\ninadvertently removed the \"1\" label and reused it elsewhere.\n\nFix it by adding named local labels in the correct locations. Note that\nthe return label needs to be outside the ifdef so that CONFIG_PPC_47x=n\ncompiles."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29017ab1a539101d9c7bec63cc13a019f97b2820","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70f6756ad96dd70177dddcfac2fe4bd4bb320746","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ac2689502f986a46f4221e239d4ff2897f1ccb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0eee815babed70a749d2496a7678be5b45b4c14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52500","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.103","lastModified":"2024-03-02T22:15:47.103","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm80xx: Avoid leaking tags when processing OPC_INB_SET_CONTROLLER_CONFIG command\n\nTags allocated for OPC_INB_SET_CONTROLLER_CONFIG command need to be freed\nwhen we receive the response."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2259e1901b2d8c0e8538fc99e77de443b939e749","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22e6d783a33015bcdf0979015e4eac603912bea7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2afd8fcee0c4d65a482e30c3ad2a92c25e5e92d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c13e7331745852d0dd7c35eabbe181cbd5b01172","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d540a4370aba378fbedf349ba0bb68e96e24243d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52501","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.153","lastModified":"2024-03-02T22:15:47.153","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Do not attempt to read past \"commit\"\n\nWhen iterating over the ring buffer while the ring buffer is active, the\nwriter can corrupt the reader. There's barriers to help detect this and\nhandle it, but that code missed the case where the last event was at the\nvery end of the page and has only 4 bytes left.\n\nThe checks to detect the corruption by the writer to reads needs to see the\nlength of the event. If the length in the first 4 bytes is zero then the\nlength is stored in the second 4 bytes. But if the writer is in the process\nof updating that code, there's a small window where the length in the first\n4 bytes could be zero even though the length is only 4 bytes. That will\ncause rb_event_length() to read the next 4 bytes which could happen to be off the\nallocated page.\n\nTo protect against this, fail immediately if the next event pointer is\nless than 8 bytes from the end of the commit (last byte of data), as all\nevents must be a minimum of 8 bytes anyway."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/344f2f3e61a90f0150c754796ec9a17fcaeec03d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75fc9e99b3a71006720ad1e029db11a4b5c32d4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95a404bd60af6c4d9d8db01ad14fe8957ece31ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b08a4938229dbb530a35c41b83002a1457c6ff49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cee5151c5410e868826b8afecfb356f3799ebea3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52502","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.203","lastModified":"2024-03-02T22:15:47.203","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: fix races in nfc_llcp_sock_get() and nfc_llcp_sock_get_sn()\n\nSili Luo reported a race in nfc_llcp_sock_get(), leading to UAF.\n\nGetting a reference on the socket found in a lookup while\nholding a lock should happen before releasing the lock.\n\nnfc_llcp_sock_get_sn() has a similar problem.\n\nFinally nfc_llcp_recv_snl() needs to make sure the socket\nfound by nfc_llcp_sock_from_sn() does not disappear."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31c07dffafce914c1d1543c135382a11ff058d93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ac22ecdaad2ecc662048f8c6b0ceb1ca0699ef9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7adcf014bda16cdbf804af5c164d94d5d025db2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1af8a39cf839d93c8967fdd858f6bbdc3e4a15c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d888d3f70b0de32b4f51534175f039ddab15eef8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4f2611f07c87b3ddb57c4b9e8efcd1e330fc3dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e863f5720a5680e50c4cecf12424d7cc31b3eb0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52503","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.250","lastModified":"2024-03-02T22:15:47.250","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntee: amdtee: fix use-after-free vulnerability in amdtee_close_session\n\nThere is a potential race condition in amdtee_close_session that may\ncause use-after-free in amdtee_open_session. For instance, if a session\nhas refcount == 1, and one thread tries to free this session via:\n\n    kref_put(&sess->refcount, destroy_session);\n\nthe reference count will get decremented, and the next step would be to\ncall destroy_session(). However, if in another thread,\namdtee_open_session() is called before destroy_session() has completed\nexecution, alloc_session() may return 'sess' that will be freed up\nlater in destroy_session() leading to use-after-free in\namdtee_open_session.\n\nTo fix this issue, treat decrement of sess->refcount and removal of\n'sess' from session list in destroy_session() as a critical section, so\nthat it is executed atomically."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1680c82929bc14d706065f123dab77f2f1293116","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c95574350cd63bc3c5c2fa06658010768f2a0ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60c3e7a00db954947c265b55099c21b216f2a05c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da7ce52a2f6c468946195b116615297d3d113a27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4384b3e54ea813868bb81a861bf5b2406e15d8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52504","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.300","lastModified":"2024-03-02T22:15:47.300","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/alternatives: Disable KASAN in apply_alternatives()\n\nFei has reported that KASAN triggers during apply_alternatives() on\na 5-level paging machine:\n\n\tBUG: KASAN: out-of-bounds in rcu_is_watching()\n\tRead of size 4 at addr ff110003ee6419a0 by task swapper\/0\/0\n\t...\n\t__asan_load4()\n\trcu_is_watching()\n\ttrace_hardirqs_on()\n\ttext_poke_early()\n\tapply_alternatives()\n\t...\n\nOn machines with 5-level paging, cpu_feature_enabled(X86_FEATURE_LA57)\ngets patched. It includes KASAN code, where KASAN_SHADOW_START depends on\n__VIRTUAL_MASK_SHIFT, which is defined with cpu_feature_enabled().\n\nKASAN gets confused when apply_alternatives() patches the\nKASAN_SHADOW_START users. A test patch that makes KASAN_SHADOW_START\nstatic, by replacing __VIRTUAL_MASK_SHIFT with 56, works around the issue.\n\nFix it for real by disabling KASAN while the kernel is patching alternatives.\n\n[ mingo: updated the changelog ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3719d3c36aa853d5a2401af9f8d6b116c91ad5ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3770c38cd6a60494da29ac2da73ff8156440a2d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b784489c8158518bf7a466bb3cc045b0fb66b4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6788b10620ca6e98575d1e06e72a8974aad7657e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd287cc208dfe6bd6da98e7f88e723209242c9b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d35652a5fc9944784f6f50a5c979518ff8dacf61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecba5afe86f30605eb9dfb7f265a8de0218d4cfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52505","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.350","lastModified":"2024-03-02T22:15:47.350","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: lynx-28g: serialize concurrent phy_set_mode_ext() calls to shared registers\n\nThe protocol converter configuration registers PCC8, PCCC, PCCD\n(implemented by the driver), as well as others, control protocol\nconverters from multiple lanes (each represented as a different\nstruct phy). So, if there are simultaneous calls to phy_set_mode_ext()\nto lanes sharing the same PCC register (either for the \"old\" or for the\n\"new\" protocol), corruption of the values programmed to hardware is\npossible, because lynx_28g_rmw() has no locking.\n\nAdd a spinlock in the struct lynx_28g_priv shared by all lanes, and take\nthe global spinlock from the phy_ops :: set_mode() implementation. There\nare no other callers which modify PCC registers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/139ad1143151a07be93bf741d4ea7c89e59f89ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f901f8448c6b25ed843796b114471d2a3fc5dfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2d7c79898b427d263c64a4841987eec131f2d4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52506","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.390","lastModified":"2024-03-02T22:15:47.390","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: Set all reserved memblocks on Node#0 at initialization\n\nAfter commit 61167ad5fecdea (\"mm: pass nid to reserve_bootmem_region()\")\nwe get a panic if DEFERRED_STRUCT_PAGE_INIT is enabled:\n\n[    0.000000] CPU 0 Unable to handle kernel paging request at virtual address 0000000000002b82, era == 90000000040e3f28, ra == 90000000040e3f18\n[    0.000000] Oops[#1]:\n[    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 6.5.0+ #733\n[    0.000000] pc 90000000040e3f28 ra 90000000040e3f18 tp 90000000046f4000 sp 90000000046f7c90\n[    0.000000] a0 0000000000000001 a1 0000000000200000 a2 0000000000000040 a3 90000000046f7ca0\n[    0.000000] a4 90000000046f7ca4 a5 0000000000000000 a6 90000000046f7c38 a7 0000000000000000\n[    0.000000] t0 0000000000000002 t1 9000000004b00ac8 t2 90000000040e3f18 t3 90000000040f0800\n[    0.000000] t4 00000000000f0000 t5 80000000ffffe07e t6 0000000000000003 t7 900000047fff5e20\n[    0.000000] t8 aaaaaaaaaaaaaaab u0 0000000000000018 s9 0000000000000000 s0 fffffefffe000000\n[    0.000000] s1 0000000000000000 s2 0000000000000080 s3 0000000000000040 s4 0000000000000000\n[    0.000000] s5 0000000000000000 s6 fffffefffe000000 s7 900000000470b740 s8 9000000004ad4000\n[    0.000000]    ra: 90000000040e3f18 reserve_bootmem_region+0xec\/0x21c\n[    0.000000]   ERA: 90000000040e3f28 reserve_bootmem_region+0xfc\/0x21c\n[    0.000000]  CRMD: 000000b0 (PLV0 -IE -DA +PG DACF=CC DACM=CC -WE)\n[    0.000000]  PRMD: 00000000 (PPLV0 -PIE -PWE)\n[    0.000000]  EUEN: 00000000 (-FPE -SXE -ASXE -BTE)\n[    0.000000]  ECFG: 00070800 (LIE=11 VS=7)\n[    0.000000] ESTAT: 00010800 [PIL] (IS=11 ECode=1 EsubCode=0)\n[    0.000000]  BADV: 0000000000002b82\n[    0.000000]  PRID: 0014d000 (Loongson-64bit, Loongson-3A6000)\n[    0.000000] Modules linked in:\n[    0.000000] Process swapper (pid: 0, threadinfo=(____ptrval____), task=(____ptrval____))\n[    0.000000] Stack : 0000000000000000 9000000002eb5430 0000003a00000020 90000000045ccd00\n[    0.000000]         900000000470e000 90000000002c1918 0000000000000000 9000000004110780\n[    0.000000]         00000000fe6c0000 0000000480000000 9000000004b4e368 9000000004110748\n[    0.000000]         0000000000000000 900000000421ca84 9000000004620000 9000000004564970\n[    0.000000]         90000000046f7d78 9000000002cc9f70 90000000002c1918 900000000470e000\n[    0.000000]         9000000004564970 90000000040bc0e0 90000000046f7d78 0000000000000000\n[    0.000000]         0000000000004000 90000000045ccd00 0000000000000000 90000000002c1918\n[    0.000000]         90000000002c1900 900000000470b700 9000000004b4df78 9000000004620000\n[    0.000000]         90000000046200a8 90000000046200a8 0000000000000000 9000000004218b2c\n[    0.000000]         9000000004270008 0000000000000001 0000000000000000 90000000045ccd00\n[    0.000000]         ...\n[    0.000000] Call Trace:\n[    0.000000] [<90000000040e3f28>] reserve_bootmem_region+0xfc\/0x21c\n[    0.000000] [<900000000421ca84>] memblock_free_all+0x114\/0x350\n[    0.000000] [<9000000004218b2c>] mm_core_init+0x138\/0x3cc\n[    0.000000] [<9000000004200e38>] start_kernel+0x488\/0x7a4\n[    0.000000] [<90000000040df0d8>] kernel_entry+0xd8\/0xdc\n[    0.000000]\n[    0.000000] Code: 02eb21ad  00410f4c  380c31ac <262b818d> 6800b70d  02c1c196  0015001c  57fe4bb1  260002cd\n\nThe reason is early memblock_reserve() in memblock_init() set node id to\nMAX_NUMNODES, making NODE_DATA(nid) a NULL dereference in the call chain\nreserve_bootmem_region() -> init_reserved_page(). After memblock_init(),\nthose late calls of memblock_reserve() operate on subregions of memblock\n.memory regions. As a result, these reserved regions will be set to the\ncorrect node at the first iteration of memmap_init_reserved_pages().\n\nSo set all reserved memblocks on Node#0 at initialization can avoid this\npanic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19878758accf6b2788091a771d9f9fee7bab11ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b795fb9f5861ee256070d59e33130980a01fadd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f105e893a8edd48bdf4bef9fef845a9ff402f737","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52507","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.443","lastModified":"2024-03-02T22:15:47.443","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: assert requested protocol is valid\n\nThe protocol is used in a bit mask to determine if the protocol is\nsupported. Assert the provided protocol is less than the maximum\ndefined so it doesn't potentially perform a shift-out-of-bounds and\nprovide a clearer error for undefined protocols vs unsupported ones."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25dd54b95abfdca423b65a4ee620a774777d8213","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c231a247a1d1628e41fa1eefd1a5307c41c5f53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/354a6e707e29cb0c007176ee5b8db8be7bd2dee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6584eba7688dcf999542778b07f63828c21521da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/853dda54ba59ea70d5580a298b7ede4707826848","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95733ea130e35ef9ec5949a5908dde3feaba92cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a424807d860ba816aaafc3064b46b456361c0802","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a686f84101680b8442181a8846fbd3c934653729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52508","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.493","lastModified":"2024-03-02T22:15:47.493","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fc: Prevent null pointer dereference in nvme_fc_io_getuuid()\n\nThe nvme_fc_fcp_op structure describing an AEN operation is initialized with a\nnull request structure pointer. An FC LLDD may make a call to\nnvme_fc_io_getuuid passing a pointer to an nvmefc_fcp_req for an AEN operation.\n\nAdd validation of the request structure pointer before dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ae5b3a685dc59a8cf7ccfe0e850999ba9727a3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be90c9e29dd59b7d19a73297a1590ff3ec1d22ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd46b3ac7322baf3772b33b29726e94f98289db7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52509","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.540","lastModified":"2024-03-02T22:15:47.540","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nravb: Fix use-after-free issue in ravb_tx_timeout_work()\n\nThe ravb_stop() should call cancel_work_sync(). Otherwise,\nravb_tx_timeout_work() is possible to use the freed priv after\nravb_remove() was called like below:\n\nCPU0\t\t\tCPU1\n\t\t\travb_tx_timeout()\nravb_remove()\nunregister_netdev()\nfree_netdev(ndev)\n\/\/ free priv\n\t\t\travb_tx_timeout_work()\n\t\t\t\/\/ use priv\n\nunregister_netdev() will call .ndo_stop() so that ravb_stop() is\ncalled. And, after phy_stop() is called, netif_carrier_off()\nis also called. So that .ndo_tx_timeout() will not be called\nafter phy_stop()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/105abd68ad8f781985113aee2e92e0702b133705","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3971442870713de527684398416970cf025b4f89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/616761cf9df9af838c0a1a1232a69322a9eb67e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65d34cfd4e347054eb4193bc95d9da7eaa72dee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f6fa8061f756aedb93af12a8a5d3cf659127965","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db9aafa19547833240f58c2998aed7baf414dc82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52510","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.587","lastModified":"2024-03-02T22:15:47.587","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nieee802154: ca8210: Fix a potential UAF in ca8210_probe\n\nIf of_clk_add_provider() fails in ca8210_register_ext_clock(),\nit calls clk_unregister() to release priv->clk and returns an\nerror. However, the caller ca8210_probe() then calls ca8210_remove(),\nwhere priv->clk is freed again in ca8210_unregister_ext_clock(). In\nthis case, a use-after-free may happen in the second time we call\nclk_unregister().\n\nFix this by removing the first clk_unregister(). Also, priv->clk could\nbe an error code on failure of clk_register_fixed_rate(). Use\nIS_ERR_OR_NULL to catch this case in ca8210_unregister_ext_clock()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/217efe32a45249eb07dcd7197e8403de98345e66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28b68cba378e3e50a4082b65f262bc4f2c7c2add","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55e06850c7894f00d41b767c5f5665459f83f58f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84c6aa0ae5c4dc121f9996bb8fed46c80909d80e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85c2857ef90041f567ce98722c1c342c4d31f4bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/becf5c147198f4345243c5df0c4f035415491640","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdb46be93c1f7bbf2c4649e9fc5fb147cfb5245d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f990874b1c98fe8e57ee9385669f501822979258","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52511","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.640","lastModified":"2024-03-02T22:15:47.640","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: sun6i: reduce DMA RX transfer width to single byte\n\nThrough empirical testing it has been determined that sometimes RX SPI\ntransfers with DMA enabled return corrupted data. This is down to single\nor even multiple bytes lost during DMA transfer from SPI peripheral to\nmemory. It seems the RX FIFO within the SPI peripheral can become\nconfused when performing bus read accesses wider than a single byte to it\nduring an active SPI transfer.\n\nThis patch reduces the width of individual DMA read accesses to the\nRX FIFO to a single byte to mitigate that issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/171f8a49f212e87a8b04087568e1b3d132e36a18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c21c9c7289692f4019f163c3b06d8bdf78b355","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e15bb292b24630ee832bfc7fd616bd72c7682bbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff05ed4ae214011464a0156f05cac1b0b46b5fbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52512","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.683","lastModified":"2024-03-02T22:15:47.683","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: nuvoton: wpcm450: fix out of bounds write\n\nWrite into 'pctrl->gpio_bank' happens before the check for GPIO index\nvalidity, so out of bounds write may happen.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6c18c386fd13dbb3ff31a1086dabb526780d9bda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87d315a34133edcb29c4cadbf196ec6c30dfd47b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9d7cac0fd27c74dd368e80dc4b5d0f9f2e13cf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52513","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.730","lastModified":"2024-03-02T22:15:47.730","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/siw: Fix connection failure handling\n\nIn case immediate MPA request processing fails, the newly\ncreated endpoint unlinks the listening endpoint and is\nready to be dropped. This special case was not handled\ncorrectly by the code handling the later TCP socket close,\ncausing a NULL dereference crash in siw_cm_work_handler()\nwhen dereferencing a NULL listener. We now also cancel\nthe useless MPA timeout, if immediate MPA request\nprocessing fails.\n\nThis patch furthermore simplifies MPA processing in general:\nScheduling a useless TCP socket read in sk_data_ready() upcall\nis now surpressed, if the socket is already moved out of\nTCP_ESTABLISHED state."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d520cdb0cd095eac5d00078dfd318408c9b5eed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53a3f777049771496f791504e7dc8ef017cba590","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cf38e638e5d01b68f9133968a85e8b3fd1ecf2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e26812e289b374c17677d238164a5a8f5770594","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81b7bf367eea795d259d0261710c6a89f548844d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeafc50a77f6a783c2c44e7ec3674a7b693e06f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52514","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.777","lastModified":"2024-03-02T22:15:47.777","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/reboot: VMCLEAR active VMCSes before emergency reboot\n\nVMCLEAR active VMCSes before any emergency reboot, not just if the kernel\nmay kexec into a new kernel after a crash.  Per Intel's SDM, the VMX\narchitecture doesn't require the CPU to flush the VMCS cache on INIT.  If\nan emergency reboot doesn't RESET CPUs, cached VMCSes could theoretically\nbe kept and only be written back to memory after the new kernel is booted,\ni.e. could effectively corrupt memory after reboot.\n\nOpportunistically remove the setting of the global pointer to NULL to make\ncheckpatch happy."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1375d9600c38c231163de584656b07aef9a27b0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65edea77d7006140c6290e7f46009d75e02d3273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b23c83ad2c638420ec0608a9de354507c41bec29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52515","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.823","lastModified":"2024-03-02T22:15:47.823","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/srp: Do not call scsi_done() from srp_abort()\n\nAfter scmd_eh_abort_handler() has called the SCSI LLD eh_abort_handler\ncallback, it performs one of the following actions:\n* Call scsi_queue_insert().\n* Call scsi_finish_command().\n* Call scsi_eh_scmd_add().\nHence, SCSI abort handlers must not call scsi_done(). Otherwise all\nthe above actions would trigger a use-after-free. Hence remove the\nscsi_done() call from srp_abort(). Keep the srp_free_req() call\nbefore returning SUCCESS because we may not see the command again if\nSUCCESS is returned."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05a10b316adaac1f322007ca9a0383b410d759cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26788a5b48d9d5cd3283d777d238631c8cd7495a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b298f9181582270d5e95774e5a6c7a7fb5b1206","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9bdffb3f9aaeff8379c83f5449c6b42cb71c2b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e193b7955dfad68035b983a0011f4ef3590c85eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52516","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.870","lastModified":"2024-03-02T22:15:47.870","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-debug: don't call __dma_entry_alloc_check_leak() under free_entries_lock\n\n__dma_entry_alloc_check_leak() calls into printk -> serial console\noutput (qcom geni) and grabs port->lock under free_entries_lock\nspin lock, which is a reverse locking dependency chain as qcom_geni\nIRQ handler can call into dma-debug code and grab free_entries_lock\nunder port->lock.\n\nMove __dma_entry_alloc_check_leak() call out of free_entries_lock\nscope so that we don't acquire serial console's port->lock under it.\n\nTrimmed-down lockdep splat:\n\n The existing dependency chain (in reverse order) is:\n\n               -> #2 (free_entries_lock){-.-.}-{2:2}:\n        _raw_spin_lock_irqsave+0x60\/0x80\n        dma_entry_alloc+0x38\/0x110\n        debug_dma_map_page+0x60\/0xf8\n        dma_map_page_attrs+0x1e0\/0x230\n        dma_map_single_attrs.constprop.0+0x6c\/0xc8\n        geni_se_rx_dma_prep+0x40\/0xcc\n        qcom_geni_serial_isr+0x310\/0x510\n        __handle_irq_event_percpu+0x110\/0x244\n        handle_irq_event_percpu+0x20\/0x54\n        handle_irq_event+0x50\/0x88\n        handle_fasteoi_irq+0xa4\/0xcc\n        handle_irq_desc+0x28\/0x40\n        generic_handle_domain_irq+0x24\/0x30\n        gic_handle_irq+0xc4\/0x148\n        do_interrupt_handler+0xa4\/0xb0\n        el1_interrupt+0x34\/0x64\n        el1h_64_irq_handler+0x18\/0x24\n        el1h_64_irq+0x64\/0x68\n        arch_local_irq_enable+0x4\/0x8\n        ____do_softirq+0x18\/0x24\n        ...\n\n               -> #1 (&port_lock_key){-.-.}-{2:2}:\n        _raw_spin_lock_irqsave+0x60\/0x80\n        qcom_geni_serial_console_write+0x184\/0x1dc\n        console_flush_all+0x344\/0x454\n        console_unlock+0x94\/0xf0\n        vprintk_emit+0x238\/0x24c\n        vprintk_default+0x3c\/0x48\n        vprintk+0xb4\/0xbc\n        _printk+0x68\/0x90\n        register_console+0x230\/0x38c\n        uart_add_one_port+0x338\/0x494\n        qcom_geni_serial_probe+0x390\/0x424\n        platform_probe+0x70\/0xc0\n        really_probe+0x148\/0x280\n        __driver_probe_device+0xfc\/0x114\n        driver_probe_device+0x44\/0x100\n        __device_attach_driver+0x64\/0xdc\n        bus_for_each_drv+0xb0\/0xd8\n        __device_attach+0xe4\/0x140\n        device_initial_probe+0x1c\/0x28\n        bus_probe_device+0x44\/0xb0\n        device_add+0x538\/0x668\n        of_device_add+0x44\/0x50\n        of_platform_device_create_pdata+0x94\/0xc8\n        of_platform_bus_create+0x270\/0x304\n        of_platform_populate+0xac\/0xc4\n        devm_of_platform_populate+0x60\/0xac\n        geni_se_probe+0x154\/0x160\n        platform_probe+0x70\/0xc0\n        ...\n\n               -> #0 (console_owner){-...}-{0:0}:\n        __lock_acquire+0xdf8\/0x109c\n        lock_acquire+0x234\/0x284\n        console_flush_all+0x330\/0x454\n        console_unlock+0x94\/0xf0\n        vprintk_emit+0x238\/0x24c\n        vprintk_default+0x3c\/0x48\n        vprintk+0xb4\/0xbc\n        _printk+0x68\/0x90\n        dma_entry_alloc+0xb4\/0x110\n        debug_dma_map_sg+0xdc\/0x2f8\n        __dma_map_sg_attrs+0xac\/0xe4\n        dma_map_sgtable+0x30\/0x4c\n        get_pages+0x1d4\/0x1e4 [msm]\n        msm_gem_pin_pages_locked+0x38\/0xac [msm]\n        msm_gem_pin_vma_locked+0x58\/0x88 [msm]\n        msm_ioctl_gem_submit+0xde4\/0x13ac [msm]\n        drm_ioctl_kernel+0xe0\/0x15c\n        drm_ioctl+0x2e8\/0x3f4\n        vfs_ioctl+0x30\/0x50\n        ...\n\n Chain exists of:\n   console_owner --> &port_lock_key --> free_entries_lock\n\n  Possible unsafe locking scenario:\n\n        CPU0                    CPU1\n        ----                    ----\n   lock(free_entries_lock);\n                                lock(&port_lock_key);\n                                lock(free_entries_lock);\n   lock(console_owner);\n\n                *** DEADLOCK ***\n\n Call trace:\n  dump_backtrace+0xb4\/0xf0\n  show_stack+0x20\/0x30\n  dump_stack_lvl+0x60\/0x84\n  dump_stack+0x18\/0x24\n  print_circular_bug+0x1cc\/0x234\n  check_noncircular+0x78\/0xac\n  __lock_acquire+0xdf8\/0x109c\n  lock_acquire+0x234\/0x284\n  console_flush_all+0x330\/0x454\n  consol\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ac0d068099349cbca3d93f2e3b15bb329364b08c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be8f49029eca3efbad0d74dbff3cb9129994ffab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c79300599923daaa30f417c75555d5566b3d31ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5a4315591dae307a65fc246ca80b5159d296e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe2b811a02c3244ebf6059039e4a9e715e26a9e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52517","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.923","lastModified":"2024-03-02T22:15:47.923","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: sun6i: fix race between DMA RX transfer completion and RX FIFO drain\n\nPreviously the transfer complete IRQ immediately drained to RX FIFO to\nread any data remaining in FIFO to the RX buffer. This behaviour is\ncorrect when dealing with SPI in interrupt mode. However in DMA mode the\ntransfer complete interrupt still fires as soon as all bytes to be\ntransferred have been stored in the FIFO. At that point data in the FIFO\nstill needs to be picked up by the DMA engine. Thus the drain procedure\nand DMA engine end up racing to read from RX FIFO, corrupting any data\nread. Additionally the RX buffer pointer is never adjusted according to\nDMA progress in DMA mode, thus calling the RX FIFO drain procedure in DMA\nmode is a bug.\nFix corruptions in DMA RX mode by draining RX FIFO only in interrupt mode.\nAlso wait for completion of RX DMA when in DMA mode before returning to\nensure all data has been copied to the supplied memory buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f11f4202caf5710204d334fe63392052783876d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36b29974a7ad2ff604c24ad348f940506c7b1209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e149d524678431638ff378ef6025e4e89b71097","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd1ec7f9983b5cd3c77e0f7cda3fa8aed041af2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52518","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:47.970","lastModified":"2024-03-02T22:15:47.970","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_codec: Fix leaking content of local_codecs\n\nThe following memory leak can be observed when the controller supports\ncodecs which are stored in local_codecs list but the elements are never\nfreed:\n\nunreferenced object 0xffff88800221d840 (size 32):\n  comm \"kworker\/u3:0\", pid 36, jiffies 4294898739 (age 127.060s)\n  hex dump (first 32 bytes):\n    f8 d3 02 03 80 88 ff ff 80 d8 21 02 80 88 ff ff  ..........!.....\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffffb324f557>] __kmalloc+0x47\/0x120\n    [<ffffffffb39ef37d>] hci_codec_list_add.isra.0+0x2d\/0x160\n    [<ffffffffb39ef643>] hci_read_codec_capabilities+0x183\/0x270\n    [<ffffffffb39ef9ab>] hci_read_supported_codecs+0x1bb\/0x2d0\n    [<ffffffffb39f162e>] hci_read_local_codecs_sync+0x3e\/0x60\n    [<ffffffffb39ff1b3>] hci_dev_open_sync+0x943\/0x11e0\n    [<ffffffffb396d55d>] hci_power_on+0x10d\/0x3f0\n    [<ffffffffb30c99b4>] process_one_work+0x404\/0x800\n    [<ffffffffb30ca134>] worker_thread+0x374\/0x670\n    [<ffffffffb30d9108>] kthread+0x188\/0x1c0\n    [<ffffffffb304db6b>] ret_from_fork+0x2b\/0x50\n    [<ffffffffb300206a>] ret_from_fork_asm+0x1a\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/626535077ba9dc110787540d1fe24881094c15a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b938790e70540bf4f2e653dcd74b232494d06c8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eea5a8f0c3b7c884d2351e75fbdd0a3d7def5ae1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52519","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.027","lastModified":"2024-03-02T22:15:48.027","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: intel-ish-hid: ipc: Disable and reenable ACPI GPE bit\n\nThe EHL (Elkhart Lake) based platforms provide a OOB (Out of band)\nservice, which allows to wakup device when the system is in S5 (Soft-Off\nstate). This OOB service can be enabled\/disabled from BIOS settings. When\nenabled, the ISH device gets PME wake capability. To enable PME wakeup,\ndriver also needs to enable ACPI GPE bit.\n\nOn resume, BIOS will clear the wakeup bit. So driver need to re-enable it\nin resume function to keep the next wakeup capability. But this BIOS\nclearing of wakeup bit doesn't decrement internal OS GPE reference count,\nso this reenabling on every resume will cause reference count to overflow.\n\nSo first disable and reenable ACPI GPE bit using acpi_disable_gpe()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60fb3f054c99608ddb1f2466c07108da6292951e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8781fe259dd5a178fdd1069401bbd1437f9491c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f02139ad9a7e6e5c05712f8c1501eebed8eacfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdcc04e844a2d22d9d25cef1e8e504a174ea9f8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52520","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.080","lastModified":"2024-03-02T22:15:48.080","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: think-lmi: Fix reference leak\n\nIf a duplicate attribute is found using kset_find_obj(), a reference\nto that attribute is returned which needs to be disposed accordingly\nusing kobject_put(). Move the setting name validation into a separate\nfunction to allow for this change without having to duplicate the\ncleanup code for this setting.\nAs a side note, a very similar bug was fixed in\ncommit 7295a996fdab (\"platform\/x86: dell-sysman: Fix reference leak\"),\nso it seems that the bug was copied from that driver.\n\nCompile-tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/124cf0ea4b82e1444ec8c7420af4e7db5558c293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/528ab3e605cabf2f9c9bd5944d3bfe15f6e94f81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af21c9119a37cecb7ff27ce0c2f3cf721e9d0ec4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e3023579de8d33256771ac0745239029e81106","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52521","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.127","lastModified":"2024-03-02T22:15:48.127","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Annotate bpf_long_memcpy with data_race\n\nsyzbot reported a data race splat between two processes trying to\nupdate the same BPF map value via syscall on different CPUs:\n\n  BUG: KCSAN: data-race in bpf_percpu_array_update \/ bpf_percpu_array_update\n\n  write to 0xffffe8fffe7425d8 of 8 bytes by task 8257 on cpu 1:\n   bpf_long_memcpy include\/linux\/bpf.h:428 [inline]\n   bpf_obj_memcpy include\/linux\/bpf.h:441 [inline]\n   copy_map_value_long include\/linux\/bpf.h:464 [inline]\n   bpf_percpu_array_update+0x3bb\/0x500 kernel\/bpf\/arraymap.c:380\n   bpf_map_update_value+0x190\/0x370 kernel\/bpf\/syscall.c:175\n   generic_map_update_batch+0x3ae\/0x4f0 kernel\/bpf\/syscall.c:1749\n   bpf_map_do_batch+0x2df\/0x3d0 kernel\/bpf\/syscall.c:4648\n   __sys_bpf+0x28a\/0x780\n   __do_sys_bpf kernel\/bpf\/syscall.c:5241 [inline]\n   __se_sys_bpf kernel\/bpf\/syscall.c:5239 [inline]\n   __x64_sys_bpf+0x43\/0x50 kernel\/bpf\/syscall.c:5239\n   do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n   do_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\n  write to 0xffffe8fffe7425d8 of 8 bytes by task 8268 on cpu 0:\n   bpf_long_memcpy include\/linux\/bpf.h:428 [inline]\n   bpf_obj_memcpy include\/linux\/bpf.h:441 [inline]\n   copy_map_value_long include\/linux\/bpf.h:464 [inline]\n   bpf_percpu_array_update+0x3bb\/0x500 kernel\/bpf\/arraymap.c:380\n   bpf_map_update_value+0x190\/0x370 kernel\/bpf\/syscall.c:175\n   generic_map_update_batch+0x3ae\/0x4f0 kernel\/bpf\/syscall.c:1749\n   bpf_map_do_batch+0x2df\/0x3d0 kernel\/bpf\/syscall.c:4648\n   __sys_bpf+0x28a\/0x780\n   __do_sys_bpf kernel\/bpf\/syscall.c:5241 [inline]\n   __se_sys_bpf kernel\/bpf\/syscall.c:5239 [inline]\n   __x64_sys_bpf+0x43\/0x50 kernel\/bpf\/syscall.c:5239\n   do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n   do_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\n  value changed: 0x0000000000000000 -> 0xfffffff000002788\n\nThe bpf_long_memcpy is used with 8-byte aligned pointers, power-of-8 size\nand forced to use long read\/writes to try to atomically copy long counters.\nIt is best-effort only and no barriers are here since it _will_ race with\nconcurrent updates from BPF programs. The bpf_long_memcpy() is called from\nbpf(2) syscall. Marco suggested that the best way to make this known to\nKCSAN would be to use data_race() annotation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5685f8a6fae1fbe480493b980a1fdbe67c86a094","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a86b5b5cd76d2734304a0173f5f01aa8aa2025e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e562de67dc9196f2415f117796a2108c00ac7fc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52522","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.170","lastModified":"2024-03-02T22:15:48.170","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix possible store tearing in neigh_periodic_work()\n\nWhile looking at a related syzbot report involving neigh_periodic_work(),\nI found that I forgot to add an annotation when deleting an\nRCU protected item from a list.\n\nReaders use rcu_deference(*np), we need to use either\nrcu_assign_pointer() or WRITE_ONCE() on writer side\nto prevent store tearing.\n\nI use rcu_assign_pointer() to have lockdep support,\nthis was the choice made in neigh_flush_dev()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/147d89ee41434b97043c2dcb17a97dc151859baa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25563b581ba3a1f263a00e8c9a97f5e7363be6fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ea52a2fb8e87067e26bbab4efb8872639240eb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95eabb075a5902f4c0834ab1fb12dc35730c05af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a75152d233370362eebedb2643592e7c883cc9fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f82aac8162871e87027692b36af335a2375d4580","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52523","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.213","lastModified":"2024-03-02T22:15:48.213","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Reject sk_msg egress redirects to non-TCP sockets\n\nWith a SOCKMAP\/SOCKHASH map and an sk_msg program user can steer messages\nsent from one TCP socket (s1) to actually egress from another TCP\nsocket (s2):\n\ntcp_bpf_sendmsg(s1)\t\t\/\/ = sk_prot->sendmsg\n  tcp_bpf_send_verdict(s1)\t\/\/ __SK_REDIRECT case\n    tcp_bpf_sendmsg_redir(s2)\n      tcp_bpf_push_locked(s2)\n\ttcp_bpf_push(s2)\n\t  tcp_rate_check_app_limited(s2) \/\/ expects tcp_sock\n\t  tcp_sendmsg_locked(s2)\t \/\/ ditto\n\nThere is a hard-coded assumption in the call-chain, that the egress\nsocket (s2) is a TCP socket.\n\nHowever in commit 122e6c79efe1 (\"sock_map: Update sock type checks for\nUDP\") we have enabled redirects to non-TCP sockets. This was done for the\nsake of BPF sk_skb programs. There was no indention to support sk_msg\nsend-to-egress use case.\n\nAs a result, attempts to send-to-egress through a non-TCP socket lead to a\ncrash due to invalid downcast from sock to tcp_sock:\n\n BUG: kernel NULL pointer dereference, address: 000000000000002f\n ...\n Call Trace:\n  <TASK>\n  ? show_regs+0x60\/0x70\n  ? __die+0x1f\/0x70\n  ? page_fault_oops+0x80\/0x160\n  ? do_user_addr_fault+0x2d7\/0x800\n  ? rcu_is_watching+0x11\/0x50\n  ? exc_page_fault+0x70\/0x1c0\n  ? asm_exc_page_fault+0x27\/0x30\n  ? tcp_tso_segs+0x14\/0xa0\n  tcp_write_xmit+0x67\/0xce0\n  __tcp_push_pending_frames+0x32\/0xf0\n  tcp_push+0x107\/0x140\n  tcp_sendmsg_locked+0x99f\/0xbb0\n  tcp_bpf_push+0x19d\/0x3a0\n  tcp_bpf_sendmsg_redir+0x55\/0xd0\n  tcp_bpf_send_verdict+0x407\/0x550\n  tcp_bpf_sendmsg+0x1a1\/0x390\n  inet_sendmsg+0x6a\/0x70\n  sock_sendmsg+0x9d\/0xc0\n  ? sockfd_lookup_light+0x12\/0x80\n  __sys_sendto+0x10e\/0x160\n  ? syscall_enter_from_user_mode+0x20\/0x60\n  ? __this_cpu_preempt_check+0x13\/0x20\n  ? lockdep_hardirqs_on+0x82\/0x110\n  __x64_sys_sendto+0x1f\/0x30\n  do_syscall_64+0x38\/0x90\n  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nReject selecting a non-TCP sockets as redirect target from a BPF sk_msg\nprogram to prevent the crash. When attempted, user will receive an EACCES\nerror from send\/sendto\/sendmsg() syscall."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b80e31baa43614e086a9d29dc1151932b1bd7fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8f97e47b6fb84fcf2f5a22e725eefb6cf5070c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc8b89b6963803a123f64aa9494155a037b3d728","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ded6e448028f0f91b6af35985afca01fa02a9089","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52524","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.263","lastModified":"2024-03-02T22:15:48.263","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: nfc: llcp: Add lock when modifying device list\n\nThe device list needs its associated lock held when modifying it, or the\nlist could become corrupted, as syzbot discovered."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/191d87a19cf1005ecf41e1ae08d74e17379e8391","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29c16c2bf5866326d5fbc4a537b3997fcac23391","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4837a192f6d06d5bb2f3f47d6ce5353ab69bf86b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7562780e32b84196731d57dd24563546fcf6d082","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dba849cc98113b145c6e720122942c00b8012bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfc7f7a988dad34c3bf4c053124fb26aa6c5f916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52525","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.313","lastModified":"2024-03-02T22:15:48.313","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mwifiex: Fix oob check condition in mwifiex_process_rx_packet\n\nOnly skip the code path trying to access the rfc1042 headers when the\nbuffer is too small, so the driver can still process packets without\nrfc1042 headers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10a18c8bac7f60d32b7af22da03b66f350beee38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16cc18b9080892d1a0200a38e36ae52e464bc555","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5afb996349cb6d1f14d6ba9aaa7aed3bd82534f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b706286473db4fd54b5f869faa67f4a8cb18e99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71b1d2b57f145c8469aa9346f0fd57bf59b2b89c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8e260654a29de872e7cb85387d8ab8974694e8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be2ff39b1504c5359f4a083c1cfcad21d666e216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52526","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.360","lastModified":"2024-03-02T22:15:48.360","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix memory leak of LZMA global compressed deduplication\n\nWhen stressing microLZMA EROFS images with the new global compressed\ndeduplication feature enabled (`-Ededupe`), I found some short-lived\ntemporary pages weren't properly released, which could slowly cause\nunexpected OOMs hours later.\n\nLet's fix it now (LZ4 and DEFLATE don't have this issue.)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6a5a8f0a9740f865693d5aa97a42cc4504538e18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75a5221630fe5aa3fedba7a06be618db0f79ba1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c955751cbf864cf2055117dd3fe7f780d2a57b56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52527","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.403","lastModified":"2024-03-02T22:15:48.403","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4, ipv6: Fix handling of transhdrlen in __ip{,6}_append_data()\n\nIncluding the transhdrlen in length is a problem when the packet is\npartially filled (e.g. something like send(MSG_MORE) happened previously)\nwhen appending to an IPv4 or IPv6 packet as we don't want to repeat the\ntransport header or account for it twice.  This can happen under some\ncircumstances, such as splicing into an L2TP socket.\n\nThe symptom observed is a warning in __ip6_append_data():\n\n    WARNING: CPU: 1 PID: 5042 at net\/ipv6\/ip6_output.c:1800 __ip6_append_data.isra.0+0x1be8\/0x47f0 net\/ipv6\/ip6_output.c:1800\n\nthat occurs when MSG_SPLICE_PAGES is used to append more data to an already\npartially occupied skbuff.  The warning occurs when 'copy' is larger than\nthe amount of data in the message iterator.  This is because the requested\nlength includes the transport header length when it shouldn't.  This can be\ntriggered by, for example:\n\n        sfd = socket(AF_INET6, SOCK_DGRAM, IPPROTO_L2TP);\n        bind(sfd, ...); \/\/ ::1\n        connect(sfd, ...); \/\/ ::1 port 7\n        send(sfd, buffer, 4100, MSG_MORE);\n        sendfile(sfd, dfd, NULL, 1024);\n\nFix this by only adding transhdrlen into the length if the write queue is\nempty in l2tp_ip6_sendmsg(), analogously to how UDP does things.\n\nl2tp_ip_sendmsg() looks like it won't suffer from this problem as it builds\nthe UDP packet itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fc793d68d50dee4782ef2e808913d5dd880bcc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/559d697c5d072593d22b3e0bd8b8081108aeaf59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7626b9fed53092aa2147978070e610ecb61af844","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96b2e1090397217839fcd6c9b6d8f5d439e705ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d4c75800f61e5d75c1659ba201b6c0c7ead3070","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd1189956393bf850b2e275e37411855d3bd86bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6a7182179c0ed788e3755ee2ed18c888ddcc33f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe80658c08e3001c80c5533cd41abfbb0e0e28fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52528","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.463","lastModified":"2024-03-02T22:15:48.463","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Fix uninit-value access in __smsc75xx_read_reg\n\nsyzbot reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in smsc75xx_wait_ready drivers\/net\/usb\/smsc75xx.c:975 [inline]\nBUG: KMSAN: uninit-value in smsc75xx_bind+0x5c9\/0x11e0 drivers\/net\/usb\/smsc75xx.c:1482\nCPU: 0 PID: 8696 Comm: kworker\/0:3 Not tainted 5.8.0-rc5-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nWorkqueue: usb_hub_wq hub_event\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0x21c\/0x280 lib\/dump_stack.c:118\n kmsan_report+0xf7\/0x1e0 mm\/kmsan\/kmsan_report.c:121\n __msan_warning+0x58\/0xa0 mm\/kmsan\/kmsan_instr.c:215\n smsc75xx_wait_ready drivers\/net\/usb\/smsc75xx.c:975 [inline]\n smsc75xx_bind+0x5c9\/0x11e0 drivers\/net\/usb\/smsc75xx.c:1482\n usbnet_probe+0x1152\/0x3f90 drivers\/net\/usb\/usbnet.c:1737\n usb_probe_interface+0xece\/0x1550 drivers\/usb\/core\/driver.c:374\n really_probe+0xf20\/0x20b0 drivers\/base\/dd.c:529\n driver_probe_device+0x293\/0x390 drivers\/base\/dd.c:701\n __device_attach_driver+0x63f\/0x830 drivers\/base\/dd.c:807\n bus_for_each_drv+0x2ca\/0x3f0 drivers\/base\/bus.c:431\n __device_attach+0x4e2\/0x7f0 drivers\/base\/dd.c:873\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:920\n bus_probe_device+0x177\/0x3d0 drivers\/base\/bus.c:491\n device_add+0x3b0e\/0x40d0 drivers\/base\/core.c:2680\n usb_set_configuration+0x380f\/0x3f10 drivers\/usb\/core\/message.c:2032\n usb_generic_driver_probe+0x138\/0x300 drivers\/usb\/core\/generic.c:241\n usb_probe_device+0x311\/0x490 drivers\/usb\/core\/driver.c:272\n really_probe+0xf20\/0x20b0 drivers\/base\/dd.c:529\n driver_probe_device+0x293\/0x390 drivers\/base\/dd.c:701\n __device_attach_driver+0x63f\/0x830 drivers\/base\/dd.c:807\n bus_for_each_drv+0x2ca\/0x3f0 drivers\/base\/bus.c:431\n __device_attach+0x4e2\/0x7f0 drivers\/base\/dd.c:873\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:920\n bus_probe_device+0x177\/0x3d0 drivers\/base\/bus.c:491\n device_add+0x3b0e\/0x40d0 drivers\/base\/core.c:2680\n usb_new_device+0x1bd4\/0x2a30 drivers\/usb\/core\/hub.c:2554\n hub_port_connect drivers\/usb\/core\/hub.c:5208 [inline]\n hub_port_connect_change drivers\/usb\/core\/hub.c:5348 [inline]\n port_event drivers\/usb\/core\/hub.c:5494 [inline]\n hub_event+0x5e7b\/0x8a70 drivers\/usb\/core\/hub.c:5576\n process_one_work+0x1688\/0x2140 kernel\/workqueue.c:2269\n worker_thread+0x10bc\/0x2730 kernel\/workqueue.c:2415\n kthread+0x551\/0x590 kernel\/kthread.c:292\n ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:293\n\nLocal variable ----buf.i87@smsc75xx_bind created at:\n __smsc75xx_read_reg drivers\/net\/usb\/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers\/net\/usb\/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485\/0x11e0 drivers\/net\/usb\/smsc75xx.c:1482\n __smsc75xx_read_reg drivers\/net\/usb\/smsc75xx.c:83 [inline]\n smsc75xx_wait_ready drivers\/net\/usb\/smsc75xx.c:968 [inline]\n smsc75xx_bind+0x485\/0x11e0 drivers\/net\/usb\/smsc75xx.c:1482\n\nThis issue is caused because usbnet_read_cmd() reads less bytes than requested\n(zero byte in the reproducer). In this case, 'buf' is not properly filled.\n\nThis patch fixes the issue by returning -ENODATA if usbnet_read_cmd() reads\nless bytes than requested."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a36d9e2995c8c3c3f179aab1215a69cff06cbed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30bc4d7aebe33904b0f2d3aad4b4a9c6029ad0c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/310f1c92f65ad905b7e81fe14de82d979ebbd825","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e0af6eec1789fd11934164a7f4dbcad979855a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4931e80da9463b03bfe42be54a9a19f213b0f76d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ffc5018020fe646795a8dc1203224b8f776dc09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cda10784a176d7192f08ecb518f777a4e9575812","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9c65989920f7c28775ec4e0c11b483910fb67b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52529","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.517","lastModified":"2024-03-02T22:15:48.517","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: sony: Fix a potential memory leak in sony_probe()\n\nIf an error occurs after a successful usb_alloc_urb() call, usb_free_urb()\nshould be called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bb0707fde7492121917fd9ddb43829e96ec0bb9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1cd4004cde7c9b694bbdd8def0e02288ee58c74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f237b17611fa3501f43f12d1cb64323e10fdcb4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f566efa7de1e35e6523f4acbaf85068a540be07d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52530","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.567","lastModified":"2024-03-02T22:15:48.567","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix potential key use-after-free\n\nWhen ieee80211_key_link() is called by ieee80211_gtk_rekey_add()\nbut returns 0 due to KRACK protection (identical key reinstall),\nieee80211_gtk_rekey_add() will still return a pointer into the\nkey, in a potential use-after-free. This normally doesn't happen\nsince it's only called by iwlwifi in case of WoWLAN rekey offload\nwhich has its own KRACK protection, but still better to fix, do\nthat by returning an error code and converting that to success on\nthe cfg80211 boundary only, leaving the error for bad callers of\nieee80211_gtk_rekey_add()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f4e16e39e4f5e78248dd9e51276a83203950b36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31db78a4923ef5e2008f2eed321811ca79e7f71b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65c72a7201704574dace708cbc96a8f367b1491d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52531","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.613","lastModified":"2024-03-02T22:15:48.613","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: Fix a memory corruption issue\n\nA few lines above, space is kzalloc()'ed for:\n\tsizeof(struct iwl_nvm_data) +\n\tsizeof(struct ieee80211_channel) +\n\tsizeof(struct ieee80211_rate)\n\n'mvm->nvm_data' is a 'struct iwl_nvm_data', so it is fine.\n\nAt the end of this structure, there is the 'channels' flex array.\nEach element is of type 'struct ieee80211_channel'.\nSo only 1 element is allocated in this array.\n\nWhen doing:\n  mvm->nvm_data->bands[0].channels = mvm->nvm_data->channels;\nWe point at the first element of the 'channels' flex array.\nSo this is fine.\n\nHowever, when doing:\n  mvm->nvm_data->bands[0].bitrates =\n\t\t\t(void *)((u8 *)mvm->nvm_data->channels + 1);\nbecause of the \"(u8 *)\" cast, we add only 1 to the address of the beginning\nof the flex array.\n\nIt is likely that we want point at the 'struct ieee80211_rate' allocated\njust after.\n\nRemove the spurious casting so that the pointer arithmetic works as\nexpected."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b3223449c959a8be94a1f042288059e40fcccb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c8faa31080342aec4903c9acb20caf82fcca1ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ba438ef3cacc4808a63ed0ce24d4f0942cfe55d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f06cdd8d4ba5252986f51f80cc30263636397128","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52532","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.660","lastModified":"2024-03-02T22:15:48.660","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix TX CQE error handling\n\nFor an unknown TX CQE error type (probably from a newer hardware),\nstill free the SKB, update the queue tail, etc., otherwise the\naccounting will be wrong.\n\nAlso, TX errors can be triggered by injecting corrupted packets, so\nreplace the WARN_ONCE to ratelimited error logging."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a910e0f6304726da30a212feecec65cb97ff7a80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2b000069a4c307b09548dc2243f31f3ca0eac9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b67d7b1bfc46d05c1a58b172516454698e8d5004","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52559","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.700","lastModified":"2024-03-02T22:15:48.700","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Avoid memory allocation in iommu_suspend()\n\nThe iommu_suspend() syscore suspend callback is invoked with IRQ disabled.\nAllocating memory with the GFP_KERNEL flag may re-enable IRQs during\nthe suspend callback, which can cause intermittent suspend\/hibernation\nproblems with the following kernel traces:\n\nCalling iommu_suspend+0x0\/0x1d0\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 15 at kernel\/time\/timekeeping.c:868 ktime_get+0x9b\/0xb0\n...\nCPU: 0 PID: 15 Comm: rcu_preempt Tainted: G     U      E      6.3-intel #r1\nRIP: 0010:ktime_get+0x9b\/0xb0\n...\nCall Trace:\n <IRQ>\n tick_sched_timer+0x22\/0x90\n ? __pfx_tick_sched_timer+0x10\/0x10\n __hrtimer_run_queues+0x111\/0x2b0\n hrtimer_interrupt+0xfa\/0x230\n __sysvec_apic_timer_interrupt+0x63\/0x140\n sysvec_apic_timer_interrupt+0x7b\/0xa0\n <\/IRQ>\n <TASK>\n asm_sysvec_apic_timer_interrupt+0x1f\/0x30\n...\n------------[ cut here ]------------\nInterrupts enabled after iommu_suspend+0x0\/0x1d0\nWARNING: CPU: 0 PID: 27420 at drivers\/base\/syscore.c:68 syscore_suspend+0x147\/0x270\nCPU: 0 PID: 27420 Comm: rtcwake Tainted: G     U  W   E      6.3-intel #r1\nRIP: 0010:syscore_suspend+0x147\/0x270\n...\nCall Trace:\n <TASK>\n hibernation_snapshot+0x25b\/0x670\n hibernate+0xcd\/0x390\n state_store+0xcf\/0xe0\n kobj_attr_store+0x13\/0x30\n sysfs_kf_write+0x3f\/0x50\n kernfs_fop_write_iter+0x128\/0x200\n vfs_write+0x1fd\/0x3c0\n ksys_write+0x6f\/0xf0\n __x64_sys_write+0x1d\/0x30\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\nGiven that only 4 words memory is needed, avoid the memory allocation in\niommu_suspend()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29298c85a81abdc512e87537515ed4b1a9601d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/496c591f0b389eb782f36d9d4c2564b9a865eed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59df44bfb0ca4c3ee1f1c3c5d0ee8e314844799e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c12ef025add77ca3a0902e8719d552b6d47b4282","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52560","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.750","lastModified":"2024-03-02T22:15:48.750","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/damon\/vaddr-test: fix memory leak in damon_do_test_apply_three_regions()\n\nWhen CONFIG_DAMON_VADDR_KUNIT_TEST=y and making CONFIG_DEBUG_KMEMLEAK=y\nand CONFIG_DEBUG_KMEMLEAK_AUTO_SCAN=y, the below memory leak is detected.\n\nSince commit 9f86d624292c (\"mm\/damon\/vaddr-test: remove unnecessary\nvariables\"), the damon_destroy_ctx() is removed, but still call\ndamon_new_target() and damon_new_region(), the damon_region which is\nallocated by kmem_cache_alloc() in damon_new_region() and the damon_target\nwhich is allocated by kmalloc in damon_new_target() are not freed.  And\nthe damon_region which is allocated in damon_new_region() in\ndamon_set_regions() is also not freed.\n\nSo use damon_destroy_target to free all the damon_regions and damon_target.\n\n    unreferenced object 0xffff888107c9a940 (size 64):\n      comm \"kunit_try_catch\", pid 1069, jiffies 4294670592 (age 732.761s)\n      hex dump (first 32 bytes):\n        00 00 00 00 00 00 00 00 06 00 00 00 6b 6b 6b 6b  ............kkkk\n        60 c7 9c 07 81 88 ff ff f8 cb 9c 07 81 88 ff ff  `...............\n      backtrace:\n        [<ffffffff817e0167>] kmalloc_trace+0x27\/0xa0\n        [<ffffffff819c11cf>] damon_new_target+0x3f\/0x1b0\n        [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95\/0x3e0\n        [<ffffffff819c82be>] damon_test_apply_three_regions1+0x21e\/0x260\n        [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a\/0x90\n        [<ffffffff81237cf6>] kthread+0x2b6\/0x380\n        [<ffffffff81097add>] ret_from_fork+0x2d\/0x70\n        [<ffffffff81003791>] ret_from_fork_asm+0x11\/0x20\n    unreferenced object 0xffff8881079cc740 (size 56):\n      comm \"kunit_try_catch\", pid 1069, jiffies 4294670592 (age 732.761s)\n      hex dump (first 32 bytes):\n        05 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................\n        6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk\n      backtrace:\n        [<ffffffff819bc492>] damon_new_region+0x22\/0x1c0\n        [<ffffffff819c7d91>] damon_do_test_apply_three_regions.constprop.0+0xd1\/0x3e0\n        [<ffffffff819c82be>] damon_test_apply_three_regions1+0x21e\/0x260\n        [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a\/0x90\n        [<ffffffff81237cf6>] kthread+0x2b6\/0x380\n        [<ffffffff81097add>] ret_from_fork+0x2d\/0x70\n        [<ffffffff81003791>] ret_from_fork_asm+0x11\/0x20\n    unreferenced object 0xffff888107c9ac40 (size 64):\n      comm \"kunit_try_catch\", pid 1071, jiffies 4294670595 (age 732.843s)\n      hex dump (first 32 bytes):\n        00 00 00 00 00 00 00 00 06 00 00 00 6b 6b 6b 6b  ............kkkk\n        a0 cc 9c 07 81 88 ff ff 78 a1 76 07 81 88 ff ff  ........x.v.....\n      backtrace:\n        [<ffffffff817e0167>] kmalloc_trace+0x27\/0xa0\n        [<ffffffff819c11cf>] damon_new_target+0x3f\/0x1b0\n        [<ffffffff819c7d55>] damon_do_test_apply_three_regions.constprop.0+0x95\/0x3e0\n        [<ffffffff819c851e>] damon_test_apply_three_regions2+0x21e\/0x260\n        [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a\/0x90\n        [<ffffffff81237cf6>] kthread+0x2b6\/0x380\n        [<ffffffff81097add>] ret_from_fork+0x2d\/0x70\n        [<ffffffff81003791>] ret_from_fork_asm+0x11\/0x20\n    unreferenced object 0xffff8881079ccc80 (size 56):\n      comm \"kunit_try_catch\", pid 1071, jiffies 4294670595 (age 732.843s)\n      hex dump (first 32 bytes):\n        05 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................\n        6b 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 6b 6b 6b 6b  kkkkkkkk....kkkk\n      backtrace:\n        [<ffffffff819bc492>] damon_new_region+0x22\/0x1c0\n        [<ffffffff819c7d91>] damon_do_test_apply_three_regions.constprop.0+0xd1\/0x3e0\n        [<ffffffff819c851e>] damon_test_apply_three_regions2+0x21e\/0x260\n        [<ffffffff829fce6a>] kunit_generic_run_threadfn_adapter+0x4a\/0x90\n        [<ffffffff81237cf6>] kthread+0x2b6\/0x380\n        [<ffffffff81097add>] ret_from_fork+0x2d\/0x70\n        [<ffff\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45120b15743fa7c0aa53d5db6dfb4c8f87be4abd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b522001693aa113d97a985abc5f6932972e8e86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a4fe81a8644b717d57d81ce5849e16583b13fe8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52561","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.803","lastModified":"2024-03-02T22:15:48.803","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: dts: qcom: sdm845-db845c: Mark cont splash memory region as reserved\n\nAdding a reserved memory region for the framebuffer memory\n(the splash memory region set up by the bootloader).\n\nIt fixes a kernel panic (arm-smmu: Unhandled context fault\nat this particular memory region) reported on DB845c running\nv5.10.y."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/110e70fccce4f22b53986ae797d665ffb1950aa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82dacd0ca0d9640723824026d6fdf773c02de1d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc1ab6577475b0460ba4261cd9caec37bd62ca0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52562","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.843","lastModified":"2024-03-02T22:15:48.843","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/slab_common: fix slab_caches list corruption after kmem_cache_destroy()\n\nAfter the commit in Fixes:, if a module that created a slab cache does not\nrelease all of its allocated objects before destroying the cache (at rmmod\ntime), we might end up releasing the kmem_cache object without removing it\nfrom the slab_caches list thus corrupting the list as kmem_cache_destroy()\nignores the return value from shutdown_cache(), which in turn never removes\nthe kmem_cache object from slabs_list in case __kmem_cache_shutdown() fails\nto release all of the cache's slabs.\n\nThis is easily observable on a kernel built with CONFIG_DEBUG_LIST=y\nas after that ill release the system will immediately trip on list_add,\nor list_del, assertions similar to the one shown below as soon as another\nkmem_cache gets created, or destroyed:\n\n  [ 1041.213632] list_del corruption. next->prev should be ffff89f596fb5768, but was 52f1e5016aeee75d. (next=ffff89f595a1b268)\n  [ 1041.219165] ------------[ cut here ]------------\n  [ 1041.221517] kernel BUG at lib\/list_debug.c:62!\n  [ 1041.223452] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n  [ 1041.225408] CPU: 2 PID: 1852 Comm: rmmod Kdump: loaded Tainted: G    B   W  OE      6.5.0 #15\n  [ 1041.228244] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc37 05\/24\/2023\n  [ 1041.231212] RIP: 0010:__list_del_entry_valid+0xae\/0xb0\n\nAnother quick way to trigger this issue, in a kernel with CONFIG_SLUB=y,\nis to set slub_debug to poison the released objects and then just run\ncat \/proc\/slabinfo after removing the module that leaks slab objects,\nin which case the kernel will panic:\n\n  [   50.954843] general protection fault, probably for non-canonical address 0xa56b6b6b6b6b6b8b: 0000 [#1] PREEMPT SMP PTI\n  [   50.961545] CPU: 2 PID: 1495 Comm: cat Kdump: loaded Tainted: G    B   W  OE      6.5.0 #15\n  [   50.966808] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc37 05\/24\/2023\n  [   50.972663] RIP: 0010:get_slabinfo+0x42\/0xf0\n\nThis patch fixes this issue by properly checking shutdown_cache()'s\nreturn value before taking the kmem_cache_release() branch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46a9ea6681907a3be6b6b0d43776dccc62cad6cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51988be187b041e5355245957b0b9751fa382e0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5569bb187521432f509b69dda7d29f78b2d38b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52563","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.890","lastModified":"2024-03-02T22:15:48.890","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/meson: fix memory leak on ->hpd_notify callback\n\nThe EDID returned by drm_bridge_get_edid() needs to be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/099f0af9d98231bb74956ce92508e87cbcb896be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43b63e088887a8b82750e16762f77100ffa76cba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66cb6d74f5a1b6eafe3370b56bf2cb575a91acbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee335e0094add7fc2c7034e0534e1920d61d2078","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52564","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.933","lastModified":"2024-03-02T22:15:48.933","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"tty: n_gsm: fix UAF in gsm_cleanup_mux\"\n\nThis reverts commit 9b9c8195f3f0d74a826077fc1c01b9ee74907239.\n\nThe commit above is reverted as it did not solve the original issue.\n\ngsm_cleanup_mux() tries to free up the virtual ttys by calling\ngsm_dlci_release() for each available DLCI. There, dlci_put() is called to\ndecrease the reference counter for the DLCI via tty_port_put() which\nfinally calls gsm_dlci_free(). This already clears the pointer which is\nbeing checked in gsm_cleanup_mux() before calling gsm_dlci_release().\nTherefore, it is not necessary to clear this pointer in gsm_cleanup_mux()\nas done in the reverted commit. The commit introduces a null pointer\ndereference:\n <TASK>\n ? __die+0x1f\/0x70\n ? page_fault_oops+0x156\/0x420\n ? search_exception_tables+0x37\/0x50\n ? fixup_exception+0x21\/0x310\n ? exc_page_fault+0x69\/0x150\n ? asm_exc_page_fault+0x26\/0x30\n ? tty_port_put+0x19\/0xa0\n gsmtty_cleanup+0x29\/0x80 [n_gsm]\n release_one_tty+0x37\/0xe0\n process_one_work+0x1e6\/0x3e0\n worker_thread+0x4c\/0x3d0\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0xe1\/0x110\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x2f\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nThe actual issue is that nothing guards dlci_put() from being called\nmultiple times while the tty driver was triggered but did not yet finished\ncalling gsm_dlci_free()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29346e217b8ab8a52889b88f00b268278d6b7668","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bff660e0ff349dee84dc4f6f6d10da4497f5b28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d5c8862932d31a810b6545f7d69ecc124402c6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a48d2bcd23f2c98d575bc2f9b7a3fbd16aeea9eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c61d0b87a7028c2c10faffc524d748334c7b9827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52565","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:48.980","lastModified":"2024-03-02T22:15:48.980","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: uvcvideo: Fix OOB read\n\nIf the index provided by the user is bigger than the mask size, we might do\nan out of bound read."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09635bf4cdd4adf2160198a6041bcc7ca46c0558","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41ebaa5e0eebea4c3bac96b72f9f8ae0d77c0bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bcf70d787f7d53a3b85ad394f926cfef3eed023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52566","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.023","lastModified":"2024-03-02T22:15:49.023","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential use after free in nilfs_gccache_submit_read_data()\n\nIn nilfs_gccache_submit_read_data(), brelse(bh) is called to drop the\nreference count of bh when the call to nilfs_dat_translate() fails.  If\nthe reference count hits 0 and its owner page gets unlocked, bh may be\nfreed.  However, bh->b_page is dereferenced to put the page after that,\nwhich may result in a use-after-free bug.  This patch moves the release\noperation after unlocking and putting the page.\n\nNOTE: The function in question is only called in GC, and in combination\nwith current userland tools, address translation using DAT does not occur\nin that function, so the code path that causes this issue will not be\nexecuted.  However, it is possible to run that code path by intentionally\nmodifying the userland GC library or by calling the GC ioctl directly.\n\n[konishi.ryusuke@gmail.com: NOTE added to the commit log]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/193b5a1c6c67c36b430989dc063fe7ea4e200a33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28df4646ad8b433340772edc90ca709cdefc53e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3936e8714907cd55e37c7cc50e50229e4a9042e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7130a87ca32396eb9bf48b71a2d42259ae44c6c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ee29facd8a9c5a26079148e36bcf07141b3a6bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/980663f1d189eedafd18d80053d9cf3e2ceb5c8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb61224f6abc8e71bfdf06d7c984e23460875f5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb1084e63ee56958b0a56e17a50a4fd86445b9c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52567","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.073","lastModified":"2024-03-02T22:15:49.073","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250_port: Check IRQ data before use\n\nIn case the leaf driver wants to use IRQ polling (irq = 0) and\nIIR register shows that an interrupt happened in the 8250 hardware\nthe IRQ data can be NULL. In such a case we need to skip the wake\nevent as we came to this path from the timer interrupt and quite\nlikely system is already awake.\n\nWithout this fix we have got an Oops:\n\n    serial8250: ttyS0 at I\/O 0x3f8 (irq = 0, base_baud = 115200) is a 16550A\n    ...\n    BUG: kernel NULL pointer dereference, address: 0000000000000010\n    RIP: 0010:serial8250_handle_irq+0x7c\/0x240\n    Call Trace:\n     ? serial8250_handle_irq+0x7c\/0x240\n     ? __pfx_serial8250_timeout+0x10\/0x10"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b837f13a818f96304736453ac53b66a70aaa4f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3345cc5f02f1fb4c4dcb114706f2210d879ab933","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf3c728e3692cc6d998874f0f27d433117348742","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c334650150c29234b0923476f51573ae1b2f252a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cce7fc8b29961b64fadb1ce398dc5ff32a79643b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e14afa4450cb7e4cf93e993a765801203d41d014","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e14f68a48fd445a083ac0750fafcb064df5f18f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee5732caaffba3a37e753fdb89b4958db9a61847","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52568","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.120","lastModified":"2024-03-02T22:15:49.120","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/sgx: Resolves SECS reclaim vs. page fault for EAUG race\n\nThe SGX EPC reclaimer (ksgxd) may reclaim the SECS EPC page for an\nenclave and set secs.epc_page to NULL. The SECS page is used for EAUG\nand ELDU in the SGX page fault handler. However, the NULL check for\nsecs.epc_page is only done for ELDU, not EAUG before being used.\n\nFix this by doing the same NULL check and reloading of the SECS page as\nneeded for both EAUG and ELDU.\n\nThe SECS page holds global enclave metadata. It can only be reclaimed\nwhen there are no other enclave pages remaining. At that point,\nvirtually nothing can be done with the enclave until the SECS page is\npaged back in.\n\nAn enclave can not run nor generate page faults without a resident SECS\npage. But it is still possible for a #PF for a non-SECS page to race\nwith paging out the SECS page: when the last resident non-SECS page A\ntriggers a #PF in a non-resident page B, and then page A and the SECS\nboth are paged out before the #PF on B is handled.\n\nHitting this bug requires that race triggered with a #PF for EAUG.\nFollowing is a trace when it happens.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nRIP: 0010:sgx_encl_eaug_page+0xc7\/0x210\nCall Trace:\n ? __kmem_cache_alloc_node+0x16a\/0x440\n ? xa_load+0x6e\/0xa0\n sgx_vma_fault+0x119\/0x230\n __do_fault+0x36\/0x140\n do_fault+0x12f\/0x400\n __handle_mm_fault+0x728\/0x1110\n handle_mm_fault+0x105\/0x310\n do_user_addr_fault+0x1ee\/0x750\n ? __this_cpu_preempt_check+0x13\/0x20\n exc_page_fault+0x76\/0x180\n asm_exc_page_fault+0x27\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1348f7f15d7c7798456856bee74a4235c2da994e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/811ba2ef0cb6402672e64ba1419d6ef95aa3405d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6c2adcba50c2622ed25ba5d5e7f05f584711358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52569","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.163","lastModified":"2024-03-02T22:15:49.163","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: remove BUG() after failure to insert delayed dir index item\n\nInstead of calling BUG() when we fail to insert a delayed dir index item\ninto the delayed node's tree, we can just release all the resources we\nhave allocated\/acquired before and return the error to the caller. This is\nfine because all existing call chains undo anything they have done before\ncalling btrfs_insert_delayed_dir_index() or BUG_ON (when creating pending\nsnapshots in the transaction commit path).\n\nSo remove the BUG() call and do proper error handling.\n\nThis relates to a syzbot report linked below, but does not fix it because\nit only prevents hitting a BUG(), it does not fix the issue where somehow\nwe attempt to use twice the same index number for different index items."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c58c3931ede7cd08cbecf1f1a4acaf0a04a41a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39c4a9522db0072570d602e9b365119e17fb9f4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d10fd53393cc5de4b9cf1a4b8f9984f0a037aa51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52570","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.210","lastModified":"2024-03-02T22:15:49.210","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvfio\/mdev: Fix a null-ptr-deref bug for mdev_unregister_parent()\n\nInject fault while probing mdpy.ko, if kstrdup() of create_dir() fails in\nkobject_add_internal() in kobject_init_and_add() in mdev_type_add()\nin parent_create_sysfs_files(), it will return 0 and probe successfully.\nAnd when rmmod mdpy.ko, the mdpy_dev_exit() will call\nmdev_unregister_parent(), the mdev_type_remove() may traverse uninitialized\nparent->types[i] in parent_remove_sysfs_files(), and it will cause\nbelow null-ptr-deref.\n\nIf mdev_type_add() fails, return the error code and kset_unregister()\nto fix the issue.\n\n general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n CPU: 2 PID: 10215 Comm: rmmod Tainted: G        W        N 6.6.0-rc2+ #20\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n RIP: 0010:__kobject_del+0x62\/0x1c0\n Code: 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 51 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8b 6b 28 48 8d 7d 10 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 24 01 00 00 48 8b 75 10 48 89 df 48 8d 6b 3c e8\n RSP: 0018:ffff88810695fd30 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: ffffffffa0270268 RCX: 0000000000000000\n RDX: 0000000000000002 RSI: 0000000000000004 RDI: 0000000000000010\n RBP: 0000000000000000 R08: 0000000000000001 R09: ffffed10233a4ef1\n R10: ffff888119d2778b R11: 0000000063666572 R12: 0000000000000000\n R13: fffffbfff404e2d4 R14: dffffc0000000000 R15: ffffffffa0271660\n FS:  00007fbc81981540(0000) GS:ffff888119d00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007fc14a142dc0 CR3: 0000000110a62003 CR4: 0000000000770ee0\n DR0: ffffffff8fb0bce8 DR1: ffffffff8fb0bce9 DR2: ffffffff8fb0bcea\n DR3: ffffffff8fb0bceb DR6: 00000000fffe0ff0 DR7: 0000000000000600\n PKRU: 55555554\n Call Trace:\n  <TASK>\n  ? die_addr+0x3d\/0xa0\n  ? exc_general_protection+0x144\/0x220\n  ? asm_exc_general_protection+0x22\/0x30\n  ? __kobject_del+0x62\/0x1c0\n  kobject_del+0x32\/0x50\n  parent_remove_sysfs_files+0xd6\/0x170 [mdev]\n  mdev_unregister_parent+0xfb\/0x190 [mdev]\n  ? mdev_register_parent+0x270\/0x270 [mdev]\n  ? find_module_all+0x9d\/0xe0\n  mdpy_dev_exit+0x17\/0x63 [mdpy]\n  __do_sys_delete_module.constprop.0+0x2fa\/0x4b0\n  ? module_flags+0x300\/0x300\n  ? __fput+0x4e7\/0xa00\n  do_syscall_64+0x35\/0x80\n  entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n RIP: 0033:0x7fbc813221b7\n Code: 73 01 c3 48 8b 0d d1 8c 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 b8 b0 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a1 8c 2c 00 f7 d8 64 89 01 48\n RSP: 002b:00007ffe780e0648 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0\n RAX: ffffffffffffffda RBX: 00007ffe780e06a8 RCX: 00007fbc813221b7\n RDX: 000000000000000a RSI: 0000000000000800 RDI: 000055e214df9b58\n RBP: 000055e214df9af0 R08: 00007ffe780df5c1 R09: 0000000000000000\n R10: 00007fbc8139ecc0 R11: 0000000000000206 R12: 00007ffe780e0870\n R13: 00007ffe780e0ed0 R14: 000055e214df9260 R15: 000055e214df9af0\n  <\/TASK>\n Modules linked in: mdpy(-) mdev vfio_iommu_type1 vfio [last unloaded: mdpy]\n Dumping ftrace buffer:\n    (ftrace buffer empty)\n ---[ end trace 0000000000000000 ]---\n RIP: 0010:__kobject_del+0x62\/0x1c0\n Code: 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 51 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8b 6b 28 48 8d 7d 10 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 24 01 00 00 48 8b 75 10 48 89 df 48 8d 6b 3c e8\n RSP: 0018:ffff88810695fd30 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: ffffffffa0270268 RCX: 0000000000000000\n RDX: 0000000000000002 RSI: 0000000000000004 RDI: 0000000000000010\n RBP: 0000000000000000 R08: 0000000000000001 R09: ffffed10233a4ef1\n R10: ffff888119d2778b R11: 0000000063666572 R12: 0000000000000000\n R13: fffffbfff404e2d4 R14: dffffc0000000000 R15: ffffffffa0271660\n FS:  00007fbc81981540(0000) GS:ffff888119d00000(000\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52093779b1830ac184a23848d971f06404cf513e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c01b2e0ee22ef8b4dd7509a93aecc0ac0826bae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c777b11d34e0f47dbbc4b018ef65ad030f2b283a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52571","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.257","lastModified":"2024-03-02T22:15:49.257","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: rk817: Fix node refcount leak\n\nDan Carpenter reports that the Smatch static checker warning has found\nthat there is another refcount leak in the probe function. While\nof_node_put() was added in one of the return paths, it should in\nfact be added for ALL return paths that return an error and at driver\nremoval time."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/488ef44c068e79752dba8eda0b75f524f111a695","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70326b46b6a043f7e7404b2ff678b033c06d6577","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe6406238d5a24e9fb0286c71edd67b99d8db58d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52572","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.300","lastModified":"2024-03-02T22:15:49.300","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix UAF in cifs_demultiplex_thread()\n\nThere is a UAF when xfstests on cifs:\n\n  BUG: KASAN: use-after-free in smb2_is_network_name_deleted+0x27\/0x160\n  Read of size 4 at addr ffff88810103fc08 by task cifsd\/923\n\n  CPU: 1 PID: 923 Comm: cifsd Not tainted 6.1.0-rc4+ #45\n  ...\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x34\/0x44\n   print_report+0x171\/0x472\n   kasan_report+0xad\/0x130\n   kasan_check_range+0x145\/0x1a0\n   smb2_is_network_name_deleted+0x27\/0x160\n   cifs_demultiplex_thread.cold+0x172\/0x5a4\n   kthread+0x165\/0x1a0\n   ret_from_fork+0x1f\/0x30\n   <\/TASK>\n\n  Allocated by task 923:\n   kasan_save_stack+0x1e\/0x40\n   kasan_set_track+0x21\/0x30\n   __kasan_slab_alloc+0x54\/0x60\n   kmem_cache_alloc+0x147\/0x320\n   mempool_alloc+0xe1\/0x260\n   cifs_small_buf_get+0x24\/0x60\n   allocate_buffers+0xa1\/0x1c0\n   cifs_demultiplex_thread+0x199\/0x10d0\n   kthread+0x165\/0x1a0\n   ret_from_fork+0x1f\/0x30\n\n  Freed by task 921:\n   kasan_save_stack+0x1e\/0x40\n   kasan_set_track+0x21\/0x30\n   kasan_save_free_info+0x2a\/0x40\n   ____kasan_slab_free+0x143\/0x1b0\n   kmem_cache_free+0xe3\/0x4d0\n   cifs_small_buf_release+0x29\/0x90\n   SMB2_negotiate+0x8b7\/0x1c60\n   smb2_negotiate+0x51\/0x70\n   cifs_negotiate_protocol+0xf0\/0x160\n   cifs_get_smb_ses+0x5fa\/0x13c0\n   mount_get_conns+0x7a\/0x750\n   cifs_mount+0x103\/0xd00\n   cifs_smb3_do_mount+0x1dd\/0xcb0\n   smb3_get_tree+0x1d5\/0x300\n   vfs_get_tree+0x41\/0xf0\n   path_mount+0x9b3\/0xdd0\n   __x64_sys_mount+0x190\/0x1d0\n   do_syscall_64+0x35\/0x80\n   entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n\nThe UAF is because:\n\n mount(pid: 921)               | cifsd(pid: 923)\n-------------------------------|-------------------------------\n                               | cifs_demultiplex_thread\nSMB2_negotiate                 |\n cifs_send_recv                |\n  compound_send_recv           |\n   smb_send_rqst               |\n    wait_for_response          |\n     wait_event_state      [1] |\n                               |  standard_receive3\n                               |   cifs_handle_standard\n                               |    handle_mid\n                               |     mid->resp_buf = buf;  [2]\n                               |     dequeue_mid           [3]\n     KILL the process      [4] |\n    resp_iov[i].iov_base = buf |\n free_rsp_buf              [5] |\n                               |   is_network_name_deleted [6]\n                               |   callback\n\n1. After send request to server, wait the response until\n    mid->mid_state != SUBMITTED;\n2. Receive response from server, and set it to mid;\n3. Set the mid state to RECEIVED;\n4. Kill the process, the mid state already RECEIVED, get 0;\n5. Handle and release the negotiate response;\n6. UAF.\n\nIt can be easily reproduce with add some delay in [3] - [6].\n\nOnly sync call has the problem since async call's callback is\nexecuted in cifsd process.\n\nAdd an extra state to mark the mid state to READY before wakeup the\nwaitter, then it can get the resp safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/76569e3819e0bb59fc19b1b8688b017e627c268a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/908b3b5e97d25e879de3d1f172a255665491c2c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d527f51331cace562393a8038d870b3e9916686f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52573","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.350","lastModified":"2024-03-02T22:15:49.350","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rds: Fix possible NULL-pointer dereference\n\nIn rds_rdma_cm_event_handler_cmn() check, if conn pointer exists\nbefore dereferencing it as rdma_set_service_type() argument\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/069ac51c37a6f07a51f7134d8c34289075786a35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51fa66024a5eabf270164f2dc82a48ffb35a12e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/812da2a08dc5cc75fb71e29083ea20904510ac7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea82139e6e3561100d38d14401d57c0ea93fc07e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1d95df0f31048f1c59092648997686e3f7d9478","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f515112e833791001aaa8ab886af3ca78503617f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52574","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.393","lastModified":"2024-03-02T22:15:49.393","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nteam: fix null-ptr-deref when team device type is changed\n\nGet a null-ptr-deref bug as follows with reproducer [1].\n\nBUG: kernel NULL pointer dereference, address: 0000000000000228\n...\nRIP: 0010:vlan_dev_hard_header+0x35\/0x140 [8021q]\n...\nCall Trace:\n <TASK>\n ? __die+0x24\/0x70\n ? page_fault_oops+0x82\/0x150\n ? exc_page_fault+0x69\/0x150\n ? asm_exc_page_fault+0x26\/0x30\n ? vlan_dev_hard_header+0x35\/0x140 [8021q]\n ? vlan_dev_hard_header+0x8e\/0x140 [8021q]\n neigh_connected_output+0xb2\/0x100\n ip6_finish_output2+0x1cb\/0x520\n ? nf_hook_slow+0x43\/0xc0\n ? ip6_mtu+0x46\/0x80\n ip6_finish_output+0x2a\/0xb0\n mld_sendpack+0x18f\/0x250\n mld_ifc_work+0x39\/0x160\n process_one_work+0x1e6\/0x3f0\n worker_thread+0x4d\/0x2f0\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0xe5\/0x120\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x34\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n\n[1]\n$ teamd -t team0 -d -c '{\"runner\": {\"name\": \"loadbalance\"}}'\n$ ip link add name t-dummy type dummy\n$ ip link add link t-dummy name t-dummy.100 type vlan id 100\n$ ip link add name t-nlmon type nlmon\n$ ip link set t-nlmon master team0\n$ ip link set t-nlmon nomaster\n$ ip link set t-dummy up\n$ ip link set team0 up\n$ ip link set t-dummy.100 down\n$ ip link set t-dummy.100 master team0\n\nWhen enslave a vlan device to team device and team device type is changed\nfrom non-ether to ether, header_ops of team device is changed to\nvlan_header_ops. That is incorrect and will trigger null-ptr-deref\nfor vlan->real_dev in vlan_dev_hard_header() because team device is not\na vlan device.\n\nCache eth_header_ops in team_setup(), then assign cached header_ops to\nheader_ops of team net device when its type is changed from non-ether\nto ether to fix the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1779eb51b9cc628cee551f252701a85a2a50a457","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f0acb0736ecc3eb85dc80ad2790d634dcb10b58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/492032760127251e5540a5716a70996bacf2a3fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7fb47b9711101d2405b0eb1276fb1f9b9b270c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b44dd92e2afd89eb6e9d27616858e72a67bdc1a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5f6478686bb45f453031594ae19b6c9723a780d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cac50d9f5d876be32cb9aa21c74018468900284d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd05eec2ee0cc396813a32ef675634e403748255","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52575","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.450","lastModified":"2024-03-02T22:15:49.450","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/srso: Fix SBPB enablement for spec_rstack_overflow=off\n\nIf the user has requested no SRSO mitigation, other mitigations can use\nthe lighter-weight SBPB instead of IBPB."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b057b2f4cc2d905a0bd92195657dbd9a7005ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13ea4b92e8759d2f6c330a73cde31ad9c313021b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adbcec23c8423e3d5df1839c5ae91599dcf703cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae806c74c0634b0c23855066d8ba28d850fd1260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3cb8b2c391b1f287eb76df4ba37880f4ea56d8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52576","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.490","lastModified":"2024-03-02T22:15:49.490","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/mm, kexec, ima: Use memblock_free_late() from ima_free_kexec_buffer()\n\nThe code calling ima_free_kexec_buffer() runs long after the memblock\nallocator has already been torn down, potentially resulting in a use\nafter free in memblock_isolate_range().\n\nWith KASAN or KFENCE, this use after free will result in a BUG\nfrom the idle task, and a subsequent kernel panic.\n\nSwitch ima_free_kexec_buffer() over to memblock_free_late() to avoid\nthat bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/34cf99c250d5cd2530b93a57b0de31d3aaf8685b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2dfbc0e3b7a04c2d941421a958dc31c897fb204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eef16bfdb212da60f5144689f2967fb25b051a2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52577","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.537","lastModified":"2024-03-02T22:15:49.537","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndccp: fix dccp_v4_err()\/dccp_v6_err() again\n\ndh->dccph_x is the 9th byte (offset 8) in \"struct dccp_hdr\",\nnot in the \"byte 7\" as Jann claimed.\n\nWe need to make sure the ICMP messages are big enough,\nusing more standard ways (no more assumptions).\n\nsyzbot reported:\nBUG: KMSAN: uninit-value in pskb_may_pull_reason include\/linux\/skbuff.h:2667 [inline]\nBUG: KMSAN: uninit-value in pskb_may_pull include\/linux\/skbuff.h:2681 [inline]\nBUG: KMSAN: uninit-value in dccp_v6_err+0x426\/0x1aa0 net\/dccp\/ipv6.c:94\npskb_may_pull_reason include\/linux\/skbuff.h:2667 [inline]\npskb_may_pull include\/linux\/skbuff.h:2681 [inline]\ndccp_v6_err+0x426\/0x1aa0 net\/dccp\/ipv6.c:94\nicmpv6_notify+0x4c7\/0x880 net\/ipv6\/icmp.c:867\nicmpv6_rcv+0x19d5\/0x30d0\nip6_protocol_deliver_rcu+0xda6\/0x2a60 net\/ipv6\/ip6_input.c:438\nip6_input_finish net\/ipv6\/ip6_input.c:483 [inline]\nNF_HOOK include\/linux\/netfilter.h:304 [inline]\nip6_input+0x15d\/0x430 net\/ipv6\/ip6_input.c:492\nip6_mc_input+0xa7e\/0xc80 net\/ipv6\/ip6_input.c:586\ndst_input include\/net\/dst.h:468 [inline]\nip6_rcv_finish+0x5db\/0x870 net\/ipv6\/ip6_input.c:79\nNF_HOOK include\/linux\/netfilter.h:304 [inline]\nipv6_rcv+0xda\/0x390 net\/ipv6\/ip6_input.c:310\n__netif_receive_skb_one_core net\/core\/dev.c:5523 [inline]\n__netif_receive_skb+0x1a6\/0x5a0 net\/core\/dev.c:5637\nnetif_receive_skb_internal net\/core\/dev.c:5723 [inline]\nnetif_receive_skb+0x58\/0x660 net\/core\/dev.c:5782\ntun_rx_batched+0x83b\/0x920\ntun_get_user+0x564c\/0x6940 drivers\/net\/tun.c:2002\ntun_chr_write_iter+0x3af\/0x5d0 drivers\/net\/tun.c:2048\ncall_write_iter include\/linux\/fs.h:1985 [inline]\nnew_sync_write fs\/read_write.c:491 [inline]\nvfs_write+0x8ef\/0x15c0 fs\/read_write.c:584\nksys_write+0x20f\/0x4c0 fs\/read_write.c:637\n__do_sys_write fs\/read_write.c:649 [inline]\n__se_sys_write fs\/read_write.c:646 [inline]\n__x64_sys_write+0x93\/0xd0 fs\/read_write.c:646\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nUninit was created at:\nslab_post_alloc_hook+0x12f\/0xb70 mm\/slab.h:767\nslab_alloc_node mm\/slub.c:3478 [inline]\nkmem_cache_alloc_node+0x577\/0xa80 mm\/slub.c:3523\nkmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:559\n__alloc_skb+0x318\/0x740 net\/core\/skbuff.c:650\nalloc_skb include\/linux\/skbuff.h:1286 [inline]\nalloc_skb_with_frags+0xc8\/0xbd0 net\/core\/skbuff.c:6313\nsock_alloc_send_pskb+0xa80\/0xbf0 net\/core\/sock.c:2795\ntun_alloc_skb drivers\/net\/tun.c:1531 [inline]\ntun_get_user+0x23cf\/0x6940 drivers\/net\/tun.c:1846\ntun_chr_write_iter+0x3af\/0x5d0 drivers\/net\/tun.c:2048\ncall_write_iter include\/linux\/fs.h:1985 [inline]\nnew_sync_write fs\/read_write.c:491 [inline]\nvfs_write+0x8ef\/0x15c0 fs\/read_write.c:584\nksys_write+0x20f\/0x4c0 fs\/read_write.c:637\n__do_sys_write fs\/read_write.c:649 [inline]\n__se_sys_write fs\/read_write.c:646 [inline]\n__x64_sys_write+0x93\/0xd0 fs\/read_write.c:646\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nCPU: 0 PID: 4995 Comm: syz-executor153 Not tainted 6.6.0-rc1-syzkaller-00014-ga747acc0b752 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/04\/2023"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1512d8f45d3c5d0b5baa00bd8e600492fa569f40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26df9ab5de308caa1503d937533c56c35793018d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4600beae416d754a3cedbb1ecea8181ec05073b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60d73c62e3e4464f375758b6f2459c13d46465b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62c218124fe58372e0e1f60d5b634d21c264b337","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73be49248a04746096339a48a33fa2f03bd85969","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6f4d582e25d512c9b492670b6608436694357b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52578","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.583","lastModified":"2024-03-02T22:15:49.583","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bridge: use DEV_STATS_INC()\n\nsyzbot\/KCSAN reported data-races in br_handle_frame_finish() [1]\nThis function can run from multiple cpus without mutual exclusion.\n\nAdopt SMP safe DEV_STATS_INC() to update dev->stats fields.\n\nHandles updates to dev->stats.tx_dropped while we are at it.\n\n[1]\nBUG: KCSAN: data-race in br_handle_frame_finish \/ br_handle_frame_finish\n\nread-write to 0xffff8881374b2178 of 8 bytes by interrupt on cpu 1:\nbr_handle_frame_finish+0xd4f\/0xef0 net\/bridge\/br_input.c:189\nbr_nf_hook_thresh+0x1ed\/0x220\nbr_nf_pre_routing_finish_ipv6+0x50f\/0x540\nNF_HOOK include\/linux\/netfilter.h:304 [inline]\nbr_nf_pre_routing_ipv6+0x1e3\/0x2a0 net\/bridge\/br_netfilter_ipv6.c:178\nbr_nf_pre_routing+0x526\/0xba0 net\/bridge\/br_netfilter_hooks.c:508\nnf_hook_entry_hookfn include\/linux\/netfilter.h:144 [inline]\nnf_hook_bridge_pre net\/bridge\/br_input.c:272 [inline]\nbr_handle_frame+0x4c9\/0x940 net\/bridge\/br_input.c:417\n__netif_receive_skb_core+0xa8a\/0x21e0 net\/core\/dev.c:5417\n__netif_receive_skb_one_core net\/core\/dev.c:5521 [inline]\n__netif_receive_skb+0x57\/0x1b0 net\/core\/dev.c:5637\nprocess_backlog+0x21f\/0x380 net\/core\/dev.c:5965\n__napi_poll+0x60\/0x3b0 net\/core\/dev.c:6527\nnapi_poll net\/core\/dev.c:6594 [inline]\nnet_rx_action+0x32b\/0x750 net\/core\/dev.c:6727\n__do_softirq+0xc1\/0x265 kernel\/softirq.c:553\nrun_ksoftirqd+0x17\/0x20 kernel\/softirq.c:921\nsmpboot_thread_fn+0x30a\/0x4a0 kernel\/smpboot.c:164\nkthread+0x1d7\/0x210 kernel\/kthread.c:388\nret_from_fork+0x48\/0x60 arch\/x86\/kernel\/process.c:147\nret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:304\n\nread-write to 0xffff8881374b2178 of 8 bytes by interrupt on cpu 0:\nbr_handle_frame_finish+0xd4f\/0xef0 net\/bridge\/br_input.c:189\nbr_nf_hook_thresh+0x1ed\/0x220\nbr_nf_pre_routing_finish_ipv6+0x50f\/0x540\nNF_HOOK include\/linux\/netfilter.h:304 [inline]\nbr_nf_pre_routing_ipv6+0x1e3\/0x2a0 net\/bridge\/br_netfilter_ipv6.c:178\nbr_nf_pre_routing+0x526\/0xba0 net\/bridge\/br_netfilter_hooks.c:508\nnf_hook_entry_hookfn include\/linux\/netfilter.h:144 [inline]\nnf_hook_bridge_pre net\/bridge\/br_input.c:272 [inline]\nbr_handle_frame+0x4c9\/0x940 net\/bridge\/br_input.c:417\n__netif_receive_skb_core+0xa8a\/0x21e0 net\/core\/dev.c:5417\n__netif_receive_skb_one_core net\/core\/dev.c:5521 [inline]\n__netif_receive_skb+0x57\/0x1b0 net\/core\/dev.c:5637\nprocess_backlog+0x21f\/0x380 net\/core\/dev.c:5965\n__napi_poll+0x60\/0x3b0 net\/core\/dev.c:6527\nnapi_poll net\/core\/dev.c:6594 [inline]\nnet_rx_action+0x32b\/0x750 net\/core\/dev.c:6727\n__do_softirq+0xc1\/0x265 kernel\/softirq.c:553\ndo_softirq+0x5e\/0x90 kernel\/softirq.c:454\n__local_bh_enable_ip+0x64\/0x70 kernel\/softirq.c:381\n__raw_spin_unlock_bh include\/linux\/spinlock_api_smp.h:167 [inline]\n_raw_spin_unlock_bh+0x36\/0x40 kernel\/locking\/spinlock.c:210\nspin_unlock_bh include\/linux\/spinlock.h:396 [inline]\nbatadv_tt_local_purge+0x1a8\/0x1f0 net\/batman-adv\/translation-table.c:1356\nbatadv_tt_purge+0x2b\/0x630 net\/batman-adv\/translation-table.c:3560\nprocess_one_work kernel\/workqueue.c:2630 [inline]\nprocess_scheduled_works+0x5b8\/0xa30 kernel\/workqueue.c:2703\nworker_thread+0x525\/0x730 kernel\/workqueue.c:2784\nkthread+0x1d7\/0x210 kernel\/kthread.c:388\nret_from_fork+0x48\/0x60 arch\/x86\/kernel\/process.c:147\nret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:304\n\nvalue changed: 0x00000000000d7190 -> 0x00000000000d7191\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 0 PID: 14848 Comm: kworker\/u4:11 Not tainted 6.6.0-rc1-syzkaller-00236-gad8a69f361b9 #0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04cc361f029c14dd067ad180525c7392334c9bfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44bdb313da57322c9b3c108eb66981c6ec6509f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89f9f20b1cbd36d99d5a248a4bf8d11d4fd049a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bc97117b51d68d5cea8f5351cca2d8c4153f394","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad8d39c7b437fcdab7208a6a56c093d222c008d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2346e6beb699909ca455d9d20c4e577ce900839","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2ef4cb4d418fa64fe73eb84d10cc5c0e52e00fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52579","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.630","lastModified":"2024-03-02T22:15:49.630","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: fix null-deref in ipv4_link_failure\n\nCurrently, we assume the skb is associated with a device before calling\n__ip_options_compile, which is not always the case if it is re-routed by\nipvs.\nWhen skb->dev is NULL, dev_net(skb->dev) will become null-dereference.\nThis patch adds a check for the edge case and switch to use the net_device\nfrom the rtable when skb->dev is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0113d9c9d1ccc07f5a3710dac4aa24b6d711278c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/084c7ac9e8d60bf21a423490021b7c3427312955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2712545e535d7a2e4c53b9c9658a9c88c6055862","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/810fd23d9715474aa27997584e8fc9396ef3cb67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8689c9ace976d6c078e6dc844b09598796e84099","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8860d354f653628b6330e1c5b06b2828948135a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2cf7bd75b3992e8df68dd5fdc6499b67d45f6e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cda20fcddf53f0f959641c8ef4d50ab87ffa5124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52580","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.677","lastModified":"2024-03-02T22:15:49.677","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/core: Fix ETH_P_1588 flow dissector\n\nWhen a PTP ethernet raw frame with a size of more than 256 bytes followed\nby a 0xff pattern is sent to __skb_flow_dissect, nhoff value calculation\nis wrong. For example: hdr->message_length takes the wrong value (0xffff)\nand it does not replicate real header length. In this case, 'nhoff' value\nwas overridden and the PTP header was badly dissected. This leads to a\nkernel crash.\n\nnet\/core: flow_dissector\nnet\/core flow dissector nhoff = 0x0000000e\nnet\/core flow dissector hdr->message_length = 0x0000ffff\nnet\/core flow dissector nhoff = 0x0001000d (u16 overflow)\n...\nskb linear:   00000000: 00 a0 c9 00 00 00 00 a0 c9 00 00 00 88\nskb frag:     00000000: f7 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n\nUsing the size of the ptp_header struct will allow the corrected\ncalculation of the nhoff value.\n\nnet\/core flow dissector nhoff = 0x0000000e\nnet\/core flow dissector nhoff = 0x00000030 (sizeof ptp_header)\n...\nskb linear:   00000000: 00 a0 c9 00 00 00 00 a0 c9 00 00 00 88 f7 ff ff\nskb linear:   00000010: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\nskb linear:   00000020: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\nskb frag:     00000000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n\nKernel trace:\n[   74.984279] ------------[ cut here ]------------\n[   74.989471] kernel BUG at include\/linux\/skbuff.h:2440!\n[   74.995237] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[   75.001098] CPU: 4 PID: 0 Comm: swapper\/4 Tainted: G     U            5.15.85-intel-ese-standard-lts #1\n[   75.011629] Hardware name: Intel Corporation A-Island (CPU:AlderLake)\/A-Island (ID:06), BIOS SB_ADLP.01.01.00.01.03.008.D-6A9D9E73-dirty Mar 30 2023\n[   75.026507] RIP: 0010:eth_type_trans+0xd0\/0x130\n[   75.031594] Code: 03 88 47 78 eb c7 8b 47 68 2b 47 6c 48 8b 97 c0 00 00 00 83 f8 01 7e 1b 48 85 d2 74 06 66 83 3a ff 74 09 b8 00 04 00 00 eb ab <0f> 0b b8 00 01 00 00 eb a2 48 85 ff 74 eb 48 8d 54 24 06 31 f6 b9\n[   75.052612] RSP: 0018:ffff9948c0228de0 EFLAGS: 00010297\n[   75.058473] RAX: 00000000000003f2 RBX: ffff8e47047dc300 RCX: 0000000000001003\n[   75.066462] RDX: ffff8e4e8c9ea040 RSI: ffff8e4704e0a000 RDI: ffff8e47047dc300\n[   75.074458] RBP: ffff8e4704e2acc0 R08: 00000000000003f3 R09: 0000000000000800\n[   75.082466] R10: 000000000000000d R11: ffff9948c0228dec R12: ffff8e4715e4e010\n[   75.090461] R13: ffff9948c0545018 R14: 0000000000000001 R15: 0000000000000800\n[   75.098464] FS:  0000000000000000(0000) GS:ffff8e4e8fb00000(0000) knlGS:0000000000000000\n[   75.107530] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   75.113982] CR2: 00007f5eb35934a0 CR3: 0000000150e0a002 CR4: 0000000000770ee0\n[   75.121980] PKRU: 55555554\n[   75.125035] Call Trace:\n[   75.127792]  <IRQ>\n[   75.130063]  ? eth_get_headlen+0xa4\/0xc0\n[   75.134472]  igc_process_skb_fields+0xcd\/0x150\n[   75.139461]  igc_poll+0xc80\/0x17b0\n[   75.143272]  __napi_poll+0x27\/0x170\n[   75.147192]  net_rx_action+0x234\/0x280\n[   75.151409]  __do_softirq+0xef\/0x2f4\n[   75.155424]  irq_exit_rcu+0xc7\/0x110\n[   75.159432]  common_interrupt+0xb8\/0xd0\n[   75.163748]  <\/IRQ>\n[   75.166112]  <TASK>\n[   75.168473]  asm_common_interrupt+0x22\/0x40\n[   75.173175] RIP: 0010:cpuidle_enter_state+0xe2\/0x350\n[   75.178749] Code: 85 c0 0f 8f 04 02 00 00 31 ff e8 39 6c 67 ff 45 84 ff 74 12 9c 58 f6 c4 02 0f 85 50 02 00 00 31 ff e8 52 b0 6d ff fb 45 85 f6 <0f> 88 b1 00 00 00 49 63 ce 4c 2b 2c 24 48 89 c8 48 6b d1 68 48 c1\n[   75.199757] RSP: 0018:ffff9948c013bea8 EFLAGS: 00000202\n[   75.205614] RAX: ffff8e4e8fb00000 RBX: ffffb948bfd23900 RCX: 000000000000001f\n[   75.213619] RDX: 0000000000000004 RSI: ffffffff94206161 RDI: ffffffff94212e20\n[   75.221620] RBP: 0000000000000004 R08: 000000117568973a R09: 0000000000000001\n[   75.229622] R10: 000000000000afc8 R11: ffff8e4e8fb29ce4 R12: ffffffff945ae980\n[   75.237628] R13: 000000117568973a R14: 0000000000000004 R15: 0000000000000000\n[   75.245635]  ? \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/488ea2a3e2666022f79abfdd7d12e8305fc27a40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48e105a2a1a10adc21c0ae717969f5e8e990ba48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75ad80ed88a182ab2ad5513e448cf07b403af5c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f90a7b9586d72f907092078a9f394733ca502cc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52581","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.727","lastModified":"2024-03-02T22:15:49.727","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: fix memleak when more than 255 elements expired\n\nWhen more than 255 elements expired we're supposed to switch to a new gc\ncontainer structure.\n\nThis never happens: u8 type will wrap before reaching the boundary\nand nft_trans_gc_space() always returns true.\n\nThis means we recycle the initial gc container structure and\nlose track of the elements that came before.\n\nWhile at it, don't deref 'gc' after we've passed it to call_rcu."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4aea243b6853d06c1d160a9955b759189aa02b14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf5000a7787cbc10341091d37245a42c119d26c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52582","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:49.770","lastModified":"2024-03-02T22:15:49.770","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Only call folio_start_fscache() one time for each folio\n\nIf a network filesystem using netfs implements a clamp_length()\nfunction, it can set subrequest lengths smaller than a page size.\n\nWhen we loop through the folios in netfs_rreq_unlock_folios() to\nset any folios to be written back, we need to make sure we only\ncall folio_start_fscache() once for each folio.\n\nOtherwise, this simple testcase:\n\n  mount -o fsc,rsize=1024,wsize=1024 127.0.0.1:\/export \/mnt\/nfs\n  dd if=\/dev\/zero of=\/mnt\/nfs\/file.bin bs=4096 count=1\n  1+0 records in\n  1+0 records out\n  4096 bytes (4.1 kB, 4.0 KiB) copied, 0.0126359 s, 324 kB\/s\n  echo 3 > \/proc\/sys\/vm\/drop_caches\n  cat \/mnt\/nfs\/file.bin > \/dev\/null\n\nwill trigger an oops similar to the following:\n\n  page dumped because: VM_BUG_ON_FOLIO(folio_test_private_2(folio))\n  ------------[ cut here ]------------\n  kernel BUG at include\/linux\/netfs.h:44!\n  ...\n  CPU: 5 PID: 134 Comm: kworker\/u16:5 Kdump: loaded Not tainted 6.4.0-rc5\n  ...\n  RIP: 0010:netfs_rreq_unlock_folios+0x68e\/0x730 [netfs]\n  ...\n  Call Trace:\n    netfs_rreq_assess+0x497\/0x660 [netfs]\n    netfs_subreq_terminated+0x32b\/0x610 [netfs]\n    nfs_netfs_read_completion+0x14e\/0x1a0 [nfs]\n    nfs_read_completion+0x2f9\/0x330 [nfs]\n    rpc_free_task+0x72\/0xa0 [sunrpc]\n    rpc_async_release+0x46\/0x70 [sunrpc]\n    process_one_work+0x3bd\/0x710\n    worker_thread+0x89\/0x610\n    kthread+0x181\/0x1c0\n    ret_from_fork+0x29\/0x50"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d9f5537479d4ec97ea92ff24e81a517d5772581a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df1c357f25d808e30b216188330e708e09e1a412","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df9950d37df113db59495fa09d060754366a2b7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-0795","sourceIdentifier":"security@huntr.dev","published":"2024-03-02T22:15:49.813","lastModified":"2024-03-02T22:15:49.813","vulnStatus":"Received","descriptions":[{"lang":"en","value":"If an attacked was given access to an instance with the admin or manager role there is no backend authentication that would prevent the attacked from creating a new user with an `admin` role and then be able to use this new account to have elevated privileges on the instance"}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/github.com\/mintplex-labs\/anything-llm\/commit\/9a237db3d1f66cdbcf5079599258f5fb251c5564","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/f69e3307-7b44-4776-ac60-2990990723ec","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-0968","sourceIdentifier":"security@huntr.dev","published":"2024-03-02T22:15:50.123","lastModified":"2024-03-02T22:15:50.123","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Cross-site Scripting (XSS) - DOM in GitHub repository langchain-ai\/chat-langchain prior to 0.0.0."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:H\/PR:L\/UI:R\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":4.6,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.2,"impactScore":3.4}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/langchain-ai\/chat-langchain\/commit\/e13db53cba2a48e4e26d103fd51598856f6bdd33","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/566033b9-df20-4928-b4aa-5cd4c3ca1561","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-25865","sourceIdentifier":"cve@mitre.org","published":"2024-03-02T22:15:50.293","lastModified":"2024-03-02T22:15:50.293","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Cross Site Scripting (XSS) vulnerability in hexo-theme-anzhiyu v1.6.12, allows remote attackers to execute arbitrary code via the algolia search function."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/anzhiyu-c\/hexo-theme-anzhiyu\/issues\/200","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-26621","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-03-02T22:15:50.340","lastModified":"2024-03-02T22:15:50.340","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: huge_memory: don't force huge page alignment on 32 bit\n\ncommit efa7df3e3bb5 (\"mm: align larger anonymous mappings on THP\nboundaries\") caused two issues [1] [2] reported on 32 bit system or compat\nuserspace.\n\nIt doesn't make too much sense to force huge page alignment on 32 bit\nsystem due to the constrained virtual address space.\n\n[1] https:\/\/lore.kernel.org\/linux-mm\/d0a136a0-4a31-46bc-adf4-2db109a61672@kernel.org\/\n[2] https:\/\/lore.kernel.org\/linux-mm\/CAJuCfpHXLdQy1a2B6xN2d7quTYwg2OoZseYPZTRpU0eHHKD-sQ@mail.gmail.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ef9ad19e17676b9ef071309bc62020e2373705d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7432376c913381c5f24d373a87ff629bbde94b47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-2133","sourceIdentifier":"cna@vuldb.com","published":"2024-03-03T00:15:44.137","lastModified":"2024-03-03T00:15:44.137","vulnStatus":"Received","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as problematic, was found in Bdtask Isshue Multi Store eCommerce Shopping Cart Solution 4.0. This affects an unknown part of the file \/dashboard\/Cinvoice\/manage_invoice of the component Manage Sale Page. The manipulation of the argument Title leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-255495."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/drive.google.com\/file\/d\/1cTdMIRngxo1ujqNXwj6nU4zyeeV_sfXD\/view?usp=drivesdk","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.255495","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.255495","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-2134","sourceIdentifier":"cna@vuldb.com","published":"2024-03-03T01:15:06.783","lastModified":"2024-03-03T01:15:06.783","vulnStatus":"Received","descriptions":[{"lang":"en","value":"A vulnerability has been found in Bdtask Hospita AutoManager up to 20240223 and classified as problematic. This vulnerability affects unknown code of the file \/investigation\/delete\/ of the component Investigation Report Handler. The manipulation leads to cross-site request forgery. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-255496. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":5.0},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/drive.google.com\/file\/d\/1JZ9HXuXetQCpbM8O3LJ498lAo9FpoSrD\/view?usp=drivesdk","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.255496","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.255496","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-2135","sourceIdentifier":"cna@vuldb.com","published":"2024-03-03T03:15:07.780","lastModified":"2024-03-03T03:15:07.780","vulnStatus":"Received","descriptions":[{"lang":"en","value":"A vulnerability was found in Bdtask Hospita AutoManager up to 20240223 and classified as problematic. This issue affects some unknown processing of the file \/hospital_activities\/birth\/form of the component Hospital Activities Page. The manipulation of the argument Description with the input <img src=a onerror=alert(1)> leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-255497 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/drive.google.com\/file\/d\/1zi8r84r0B2F45rWSYohZ6TO-PzyNJhnG\/view?usp=drivesdk","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.255497","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.255497","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-25016","sourceIdentifier":"psirt@us.ibm.com","published":"2024-03-03T04:15:06.057","lastModified":"2024-03-03T04:15:06.057","vulnStatus":"Received","descriptions":[{"lang":"en","value":"IBM MQ and IBM MQ Appliance 9.0, 9.1, 9.2, 9.3 LTS and 9.3 CD could allow a remote unauthenticated attacker to cause a denial of service due to incorrect buffering logic.  IBM X-Force ID:  281279."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/exchange.xforce.ibmcloud.com\/vulnerabilities\/281279","source":"psirt@us.ibm.com"},{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7123139","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2024-24307","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T08:15:08.140","lastModified":"2024-03-03T08:15:08.140","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Path Traversal vulnerability in Tunis Soft \"Product Designer\" (productdesigner) module for PrestaShop before version 1.178.36, allows a remote attacker to escalate privileges and obtain sensitive information via the ajaxProcessCropImage() method."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-productdesigner-22.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-25551","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T08:15:08.223","lastModified":"2024-03-03T08:15:08.223","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Cross Site Scripting (XSS) vulnerability in sourcecodester Simple Student Attendance System v1.0 allows attackers to execute arbitrary code via crafted GET request to web application URL."}],"metrics":{},"references":[{"url":"https:\/\/medium.com\/%40jose.inaciot\/my-first-cve-cve-2024-25551-f91787c05ae9","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-25844","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T08:15:08.280","lastModified":"2024-03-03T08:15:08.280","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue was discovered in Common-Services \"So Flexibilite\" (soflexibilite) module for PrestaShop before version 4.1.26, allows remote attackers to escalate privileges and obtain sensitive information via debug file."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-soflexibilite.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-24302","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T09:15:06.100","lastModified":"2024-03-03T09:15:06.100","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue was discovered in Tunis Soft \"Product Designer\" (productdesigner) module for PrestaShop before version 1.178.36, allows remote attackers to execute arbitrary code, escalate privileges, and obtain sensitive information via the postProcess() method."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-productdesigner-502.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-25839","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T09:15:06.163","lastModified":"2024-03-03T09:15:06.163","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue was discovered in Webbax \"Super Newsletter\" (supernewsletter) module for PrestaShop versions 1.4.21 and before, allows local attackers to escalate privileges and obtain sensitive information."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-supernewsletter.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-25842","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T09:15:06.210","lastModified":"2024-03-03T09:15:06.210","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue was discovered in Presta World \"Account Manager - Sales Representative & Dealers - CRM\" (prestasalesmanager) module for PrestaShop before version 9.0, allows remote attackers to escalate privilege and obtain sensitive information via the uploadLogo() and postProcess methods."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-prestasalesmanager.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-25847","sourceIdentifier":"cve@mitre.org","published":"2024-03-03T09:15:06.253","lastModified":"2024-03-03T09:15:06.253","vulnStatus":"Received","descriptions":[{"lang":"en","value":"SQL Injection vulnerability in MyPrestaModules \"Product Catalog (CSV, Excel) Import\" (simpleimportproduct) modules for PrestaShop versions 6.5.0 and before, allows attackers to escalate privileges and obtain sensitive information via Send::__construct() and importProducts::_addDataToDb methods."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/friends-of-presta\/security-advisories\/blob\/main\/_posts\/2024-02-29-simpleimportproduct.md","source":"cve@mitre.org"}]}}]}