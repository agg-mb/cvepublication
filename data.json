{"resultsPerPage":114,"startIndex":0,"totalResults":114,"format":"NVD_CVE","version":"2.0","timestamp":"2025-01-12T04:14:26.733","vulnerabilities":[{"cve":{"id":"CVE-2024-11327","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:19.990","lastModified":"2025-01-11T03:15:19.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The ClickWhale â€“ Link Manager, Link Shortener and Click Tracker for Affiliate Links & Link Pages plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg & remove_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.4.1. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/clickwhale\/tags\/2.3.0\/includes\/admin\/links\/Clickwhale_Links_List_Table.php#L384","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3219341%40clickwhale&new=3219341%40clickwhale&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/96c5836f-6d33-4a56-b30b-5e5d95b81b6b?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12204","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:20.997","lastModified":"2025-01-11T03:15:20.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Coupon X: Discount Pop Up, Promo Code Pop Ups, Announcement Pop Up, WooCommerce Popups plugin for WordPress is vulnerable to unauthorized access due to missing capability checks on several functions in the class-cx-rest.php file in all versions up to, and including, 1.3.5. This makes it possible for authenticated attackers, with Subscriber-level access and above, to create 100% off coupons, delete posts, delete leads, and update coupon statuses."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3219466\/coupon-x-discount-pop-up\/trunk\/inc\/class-cx-rest.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e52d8b5e-727f-474a-a255-c24033db17d8?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12404","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:21.140","lastModified":"2025-01-11T03:15:21.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The CF Internal Link Shortcode plugin for WordPress is vulnerable to SQL Injection via the 'post_title' parameter in all versions up to, and including, 1.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/internal-link-shortcode\/trunk\/internal-link-shortcode.php#L82","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/1661bb28-e5b4-4319-84bb-6cbeac266147?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12472","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:21.283","lastModified":"2025-01-11T03:15:21.283","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Post Duplicator plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 2.36 via the mtphr_duplicate_post() due to insufficient restrictions on which posts can be duplicated. This makes it possible for authenticated attackers, with Contributor-level access and above, to extract data from password protected, private, or draft posts that they should not have access to by duplicating the post."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3219375%40post-duplicator&new=3219375%40post-duplicator&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/3071b2dc-9673-4e30-bd04-7404eb6a1ed9?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12505","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:21.430","lastModified":"2025-01-11T03:15:21.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Trackserver plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'tsmap' shortcode in all versions up to, and including, 5.0.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trackserver\/trunk\/class-trackserver-shortcode.php#L281","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trackserver\/trunk\/class-trackserver-shortcode.php#L46","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/trackserver\/trunk\/class-trackserver-shortcode.php#L57","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3219730%40trackserver&new=3219730%40trackserver&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/63ade911-f9e7-4b1c-87c8-78e7664feff7?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12627","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T03:15:21.587","lastModified":"2025-01-11T03:15:21.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Coupon X: Discount Pop Up, Promo Code Pop Ups, Announcement Pop Up, WooCommerce Popups plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 1.3.5 via deserialization of untrusted input from post content passed to the capture_email AJAX action. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject a PHP Object. No known POP chain is present in the vulnerable software. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.6,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-502"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3219466\/coupon-x-discount-pop-up\/trunk\/inc\/class-cx-rest.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/468be776-8804-4d2f-8eaf-841bbf598ef9?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-42168","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T03:15:21.737","lastModified":"2025-01-11T03:15:21.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by out-of-band resource load (HTTP) vulnerability.  An attacker can deploy a web server that returns malicious content, and then induce the application to retrieve and process that content."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:L","baseScore":8.9,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":6.0}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-610"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-42169","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T03:15:21.873","lastModified":"2025-01-11T03:15:21.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by insecure direct object references.  It occurs due to missing access control checks, which fail to verify whether a user should be allowed to access specific data."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:H\/A:N","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":4.2}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2025-0103","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2025-01-11T03:15:22.020","lastModified":"2025-01-11T03:15:22.020","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"psirt@paloaltonetworks.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"An SQL injection vulnerability in Palo Alto Networks Expedition enables an authenticated attacker to reveal Expedition database contents, such as password hashes, usernames, device configurations, and device API keys. This vulnerability also enables attackers to create and read arbitrary files on the Expedition system."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:L\/VA:N\/SC:H\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:H\/U:Amber","baseScore":9.2,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"HIGH","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"HIGH","providerUrgency":"AMBER"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/PAN-SA-2025-0001","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2025-0104","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2025-01-11T03:15:22.183","lastModified":"2025-01-11T03:15:22.183","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"psirt@paloaltonetworks.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"A reflected cross-site scripting (XSS) vulnerability in Palo Alto Networks Expedition enables attackers to execute malicious JavaScript code in the context of an authenticated Expedition userâ€™s browser if that authenticated user clicks a malicious link that allows phishing attacks and could lead to Expedition browser-session theft."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:A\/VC:H\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:H\/U:Amber","baseScore":7.0,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"ACTIVE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"HIGH","providerUrgency":"AMBER"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/PAN-SA-2025-0001","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2025-0105","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2025-01-11T03:15:22.317","lastModified":"2025-01-11T03:15:22.317","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"psirt@paloaltonetworks.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"An arbitrary file deletion vulnerability in Palo Alto Networks Expedition enables an unauthenticated attacker to delete arbitrary files accessible to the www-data user on the host filesystem."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:H\/U:Green","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"HIGH","providerUrgency":"GREEN"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-73"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/PAN-SA-2025-0001","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2025-0106","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2025-01-11T03:15:22.490","lastModified":"2025-01-11T03:15:22.490","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"psirt@paloaltonetworks.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"A wildcard expansion vulnerability in Palo Alto Networks Expedition allows an unauthenticated attacker to enumerate files on the host filesystem."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:H\/U:Green","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"HIGH","providerUrgency":"GREEN"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-155"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/PAN-SA-2025-0001","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2025-0107","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2025-01-11T03:15:22.637","lastModified":"2025-01-11T03:15:22.637","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"psirt@paloaltonetworks.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"An OS command injection vulnerability in Palo Alto Networks Expedition enables an authenticated attacker to run arbitrary OS commands as the www-data user in Expedition, which results in the disclosure of usernames, cleartext passwords, device configurations, and device API keys for firewalls running PAN-OS software."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:H\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:H\/U:Green","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"HIGH","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"HIGH","providerUrgency":"GREEN"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/PAN-SA-2025-0001","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2024-12304","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T04:15:06.113","lastModified":"2025-01-11T04:15:06.113","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Gutenberg Blocks with AI by Kadence WP â€“ Page Builder Features plugin for WordPress is vulnerable to Stored Cross-Site Scripting via button block link in all versions up to, and including, 3.4.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3212269\/kadence-blocks\/tags\/3.4.3\/includes\/blocks\/class-kadence-blocks-singlebtn-block.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c300c485-e5ab-48b3-99e8-0def5668ef4a?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-23108","sourceIdentifier":"security@mozilla.org","published":"2025-01-11T04:15:06.280","lastModified":"2025-01-11T04:15:06.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Opening Javascript links in a new tab via long-press in the Firefox iOS client could result in a malicious script spoofing the URL of the new tab. This vulnerability affects Firefox for iOS < 134."}],"metrics":{},"references":[{"url":"https:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1933172","source":"security@mozilla.org"},{"url":"https:\/\/www.mozilla.org\/security\/advisories\/mfsa2025-06\/","source":"security@mozilla.org"}]}},{"cve":{"id":"CVE-2025-23109","sourceIdentifier":"security@mozilla.org","published":"2025-01-11T04:15:06.367","lastModified":"2025-01-11T04:15:06.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Long hostnames in URLs could be leveraged to obscure the actual host of the website or spoof the website address This vulnerability affects Firefox for iOS < 134."}],"metrics":{},"references":[{"url":"https:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1419275","source":"security@mozilla.org"},{"url":"https:\/\/www.mozilla.org\/security\/advisories\/mfsa2025-06\/","source":"security@mozilla.org"}]}},{"cve":{"id":"CVE-2024-12587","sourceIdentifier":"contact@wpscan.com","published":"2025-01-11T06:15:25.070","lastModified":"2025-01-11T06:15:25.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Contact Form Master  WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/7cb040f5-d154-48ea-a54e-80451054bad8\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-42170","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T07:15:06.767","lastModified":"2025-01-11T07:15:06.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by a session fixation vulnerability.  Cyber-criminals can exploit this by sending crafted URLs with a session token to access the victim's login session."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:N","baseScore":6.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.6,"impactScore":5.2}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-384"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-42171","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T07:15:08.553","lastModified":"2025-01-11T07:15:08.553","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by a session fixation vulnerability.  Cyber-criminals can exploit this by sending crafted URLs with a session token to access the victim's login session."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:R\/S:U\/C:H\/I:H\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":5.2}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-384"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-42172","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T07:15:08.743","lastModified":"2025-01-11T07:15:08.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by broken authentication.  It allows attackers to compromise keys, passwords, and session tokens, potentially leading to identity theft and system control.  This vulnerability arises from poor configuration, logic errors, or software bugs and can affect any application with access control, including databases, network infrastructure, and web applications."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-287"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-42173","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T07:15:08.927","lastModified":"2025-01-11T07:15:08.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by an improper password policy implementation vulnerability.  Weak passwords and lack of account lockout policies allow attackers to guess or brute-force passwords if the username is known."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:R\/S:U\/C:H\/I:N\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-521"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-42174","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T07:15:09.110","lastModified":"2025-01-11T07:15:09.110","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by username enumeration vulnerability.  This allows a malicious user to perform enumeration of application users, and thereforeÂ compile a list of valid usernames."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":3.7,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.2,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-204"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2024-11386","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:23.613","lastModified":"2025-01-11T08:15:23.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The GatorMail SmartForms plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'gatormailsmartform' shortcode in all versions up to, and including, 1.1.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wordpress.org\/plugins\/gatormail-smart-forms\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c96e5939-5b6d-4cf2-83eb-a7b94f032bcb?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-11758","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:24.020","lastModified":"2025-01-11T08:15:24.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP SPID Italia plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode in all versions up to, and including, 2.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wp-spid-italia\/trunk\/frontend-ui.php#L109","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/0cdadbf2-8b5d-4018-8cee-0d0fb07696f9?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-11874","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:24.237","lastModified":"2025-01-11T08:15:24.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Grid Accordion Lite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'grid_accordion' shortcode in all versions up to, and including, 1.5.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/grid-accordion-lite\/tags\/1.5.1\/public\/class-accordion-renderer.php#L172","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/grid-accordion-lite\/tags\/1.5.1\/public\/class-grid-accordion.php#L310","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/grid-accordion-lite\/tags\/1.5.1\/public\/class-grid-accordion.php#L445","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/grid-accordion-lite\/tags\/1.5.1\/public\/class-grid-accordion.php#L98","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/7fc20069-5c1d-481a-b0fd-6f29ed6b41ee?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-11892","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:24.463","lastModified":"2025-01-11T08:15:24.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Accordion Slider Lite plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'accordion_slider' shortcode in all versions up to, and including, 1.5.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/accordion-slider-lite\/tags\/1.5.1\/public\/class-accordion-renderer.php#L172","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/accordion-slider-lite\/tags\/1.5.1\/public\/class-accordion-renderer.php#L93","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/accordion-slider-lite\/tags\/1.5.1\/public\/class-accordion-slider.php#L310","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/accordion-slider-lite\/tags\/1.5.1\/public\/class-accordion-slider.php#L445","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/accordion-slider-lite\/tags\/1.5.1\/public\/class-accordion-slider.php#L98","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/bb386ab5-1fb9-4649-99a6-0e3f971a02f8?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-11915","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:24.680","lastModified":"2025-01-11T08:15:24.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The RRAddons for Elementor plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 1.1.0 via the Popup block due to insufficient restrictions on which posts can be included. This makes it possible for authenticated attackers, with Contributor-level access and above, to extract data from private or draft posts that they should not have access to."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/wordpress.org\/plugins\/rrdevs-for-elementor\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/3f7e300f-06b5-4f59-9deb-9771bf86a204?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12116","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:24.867","lastModified":"2025-01-11T08:15:24.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Unlimited Theme Addon For Elementor and WooCommerce plugin for WordPress is vulnerable to Information Exposure in all versions up to, and including, 1.2.1 via the 'uta-template' shortcode due to insufficient restrictions on which posts can be included. This makes it possible for authenticated attackers, with Contributor-level access and above, to extract data from private or draft posts created by Elementor that they should not have access to."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/wordpress.org\/plugins\/unlimited-theme-addons\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/9dbdb6cc-2a00-4d34-9c11-62f3d1b51c73?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12407","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:25.093","lastModified":"2025-01-11T08:15:25.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Push Notification for Post and BuddyPress plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'pushnotificationid' parameter in all versions up to, and including, 2.06 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/push-notification-for-post-and-buddypress\/trunk\/admin\/pnfpb_admin_ondemand_notification_settings.php#L711","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/de7be653-4d5b-4cbe-ad9c-6c2748f533bb?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12412","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:25.320","lastModified":"2025-01-11T08:15:25.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Rental and Booking Manager for Bike, Car, Dress, Resort with WooCommerce Integration â€“ WpRently | WordPress plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the â€˜active_tabâ€™ parameter in all versions up to, and including, 2.2.1 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/booking-and-rental-manager-for-woocommerce\/trunk\/templates\/template_segment\/resort_info.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/b0cde64f-2533-46e0-9268-b9d100fb0a82?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12519","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:25.530","lastModified":"2025-01-11T08:15:25.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The TCBD Auto Refresher plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'tcbd_auto_refresh' shortcode in all versions up to, and including, 2.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/tcbd-auto-refresher\/trunk\/plugin-hook.php#L115","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/tcbd-auto-refresher","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/851bade8-bd3a-4fb1-8a1d-12461287694e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12520","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:25.720","lastModified":"2025-01-11T08:15:25.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Dominion â€“ Domain Checker for WPBakery plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'dominion_shortcodes_domain_search_6' shortcode in all versions up to, and including, 2.2.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/dominion-domain-checker-wpbakery-addon\/trunk\/modules\/domain_search\/domain_search_6\/doamin_search_shortcodes.php#L91","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/dominion-domain-checker-wpbakery-addon","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a684f597-da72-4697-9e37-ca45a30ca64d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12527","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:25.913","lastModified":"2025-01-11T08:15:25.913","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Perfect Portal Widgets plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'perfect_portal_intake_form' shortcode in all versions up to, and including, 3.0.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/perfect-portal-widgets\/tags\/3.0.3\/perfect-portal-widgets.php#L330","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/bded6765-e994-46a4-8c88-c324a4fd6ee6?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12877","sourceIdentifier":"security@wordfence.com","published":"2025-01-11T08:15:26.127","lastModified":"2025-01-11T08:15:26.127","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The GiveWP â€“ Donation Plugin and Fundraising Platform plugin for WordPress is vulnerable to PHP Object Injection in all versions up to, and including, 3.19.2 via deserialization of untrusted input from the donation form like 'firstName'. This makes it possible for unauthenticated attackers to inject a PHP Object. The additional presence of a POP chain allows attackers to delete arbitrary files on the server that makes remote code execution possible. Please note this was only partially patched in 3.19.3, a fully sufficient patch was not released until 3.19.4. However, another CVE was assigned by another CNA for version 3.19.3 so we will leave this as affecting 3.19.2 and before. We have recommended the vendor use JSON encoding to prevent any further deserialization vulnerabilities from being present."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-502"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3212723\/give\/tags\/3.19.3\/src\/Helpers\/Utils.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/b2143edf-5423-4e79-8638-a5b98490d292?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-42175","sourceIdentifier":"psirt@hcl.com","published":"2025-01-11T08:15:26.343","lastModified":"2025-01-11T08:15:26.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HCL MyXalytics is affected by a weak input validation vulnerability.  The application accepts special characters and there is no length validation. This can lead to security vulnerabilities like SQL injection, XSS, and buffer overflow."}],"metrics":{"cvssMetricV31":[{"source":"psirt@hcl.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.6,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@hcl.com","type":"Secondary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/support.hcl-software.com\/csm?id=kb_article&sysparm_article=KB0118149","source":"psirt@hcl.com"}]}},{"cve":{"id":"CVE-2025-0390","sourceIdentifier":"cna@vuldb.com","published":"2025-01-11T08:15:26.527","lastModified":"2025-01-11T08:15:26.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Guangzhou Huayi Intelligent Technology Jeewms up to 20241229. This vulnerability affects unknown code of the file \/wmOmNoticeHController.do. The manipulation leads to path traversal: '..\/filedir'. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 20250101 is able to address this issue. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:N\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"NONE","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-23"},{"lang":"en","value":"CWE-24"}]}],"references":[{"url":"https:\/\/gitee.com\/erzhongxmu\/JEEWMS\/issues\/IBFKBM","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.291124","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.291124","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-0391","sourceIdentifier":"cna@vuldb.com","published":"2025-01-11T09:15:05.937","lastModified":"2025-01-11T09:15:05.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in Guangzhou Huayi Intelligent Technology Jeewms up to 20241229. This issue affects the function saveOrUpdate of the file org\/jeecgframework\/web\/cgform\/controller\/build\/CgFormBuildController. java. The manipulation leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 20250101 is able to address this issue. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/gitee.com\/erzhongxmu\/JEEWMS\/issues\/IBFKA8","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.291125","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.291125","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-0392","sourceIdentifier":"cna@vuldb.com","published":"2025-01-11T11:15:06.657","lastModified":"2025-01-11T11:15:06.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in Guangzhou Huayi Intelligent Technology Jeewms up to 20241229. Affected is the function datagridGraph of the file \/graphReportController.do. The manipulation of the argument store_code leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 20250101 is able to address this issue. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/gitee.com\/erzhongxmu\/JEEWMS\/issues\/IBFK93","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.291126","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.291126","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-41149","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:19.973","lastModified":"2025-01-11T13:15:19.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: avoid to reuse `hctx` not removed from cpuhp callback list\n\nIf the 'hctx' isn't removed from cpuhp callback list, we can't reuse it,\notherwise use-after-free may be triggered."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/85672ca9ceeaa1dcf2777a7048af5f4aee3fd02b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5792c162dcf6197bf3d2de2be6c8169435b73d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee18012c80155f6809522804099621070c69ec72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-41932","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:20.930","lastModified":"2025-01-11T13:15:20.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched: fix warning in sched_setaffinity\n\nCommit 8f9ea86fdf99b added some logic to sched_setaffinity that included\na WARN when a per-task affinity assignment races with a cpuset update.\n\nSpecifically, we can have a race where a cpuset update results in the\ntask affinity no longer being a subset of the cpuset. That's fine; we\nhave a fallback to instead use the cpuset mask. However, we have a WARN\nset up that will trigger if the cpuset mask has no overlap at all with\nthe requested task affinity. This shouldn't be a warning condition; its\ntrivial to create this condition.\n\nReproduced the warning by the following setup:\n\n- $PID inside a cpuset cgroup\n- another thread repeatedly switching the cpuset cpus from 1-2 to just 1\n- another thread repeatedly setting the $PID affinity (via taskset) to 2"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c3fb75f538cfcb886f6dfeb497d99fc2f263ee6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70ee7947a29029736a1a06c73a48ff37674a851b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-41935","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:21.083","lastModified":"2025-01-11T13:15:21.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to shrink read extent node in batches\n\nWe use rwlock to protect core structure data of extent tree during\nits shrink, however, if there is a huge number of extent nodes in\nextent tree, during shrink of extent tree, it may hold rwlock for\na very long time, which may trigger kernel hang issue.\n\nThis patch fixes to shrink read extent node in batches, so that,\ncritical region of the rwlock can be shrunk to avoid its extreme\nlong time hold."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/295b50e95e900da31ff237e46e04525fa799b2cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fc5d5a182f6a1f8bd4dc775feb54c369dd2c343","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/924f7dd1e832e4e4530d14711db223d2803f7b61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-43098","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:21.240","lastModified":"2025-01-11T13:15:21.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: Use i3cdev->desc->info instead of calling i3c_device_get_info() to avoid deadlock\n\nA deadlock may happen since the i3c_master_register() acquires\n&i3cbus->lock twice. See the log below.\nUse i3cdev->desc->info instead of calling i3c_device_info() to\navoid acquiring the lock twice.\n\nv2:\n  - Modified the title and commit message\n\n============================================\nWARNING: possible recursive locking detected\n6.11.0-mainline\n--------------------------------------------\ninit\/1 is trying to acquire lock:\nf1ffff80a6a40dc0 (&i3cbus->lock){++++}-{3:3}, at: i3c_bus_normaluse_lock\n\nbut task is already holding lock:\nf1ffff80a6a40dc0 (&i3cbus->lock){++++}-{3:3}, at: i3c_master_register\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n  lock(&i3cbus->lock);\n  lock(&i3cbus->lock);\n\n *** DEADLOCK ***\n\n May be due to missing lock nesting notation\n\n2 locks held by init\/1:\n #0: fcffff809b6798f8 (&dev->mutex){....}-{3:3}, at: __driver_attach\n #1: f1ffff80a6a40dc0 (&i3cbus->lock){++++}-{3:3}, at: i3c_master_register\n\nstack backtrace:\nCPU: 6 UID: 0 PID: 1 Comm: init\nCall trace:\n dump_backtrace+0xfc\/0x17c\n show_stack+0x18\/0x28\n dump_stack_lvl+0x40\/0xc0\n dump_stack+0x18\/0x24\n print_deadlock_bug+0x388\/0x390\n __lock_acquire+0x18bc\/0x32ec\n lock_acquire+0x134\/0x2b0\n down_read+0x50\/0x19c\n i3c_bus_normaluse_lock+0x14\/0x24\n i3c_device_get_info+0x24\/0x58\n i3c_device_uevent+0x34\/0xa4\n dev_uevent+0x310\/0x384\n kobject_uevent_env+0x244\/0x414\n kobject_uevent+0x14\/0x20\n device_add+0x278\/0x460\n device_register+0x20\/0x34\n i3c_master_register_new_i3c_devs+0x78\/0x154\n i3c_master_register+0x6a0\/0x6d4\n mtk_i3c_master_probe+0x3b8\/0x4d8\n platform_probe+0xa0\/0xe0\n really_probe+0x114\/0x454\n __driver_probe_device+0xa0\/0x15c\n driver_probe_device+0x3c\/0x1ac\n __driver_attach+0xc4\/0x1f0\n bus_for_each_dev+0x104\/0x160\n driver_attach+0x24\/0x34\n bus_add_driver+0x14c\/0x294\n driver_register+0x68\/0x104\n __platform_driver_register+0x20\/0x30\n init_module+0x20\/0xfe4\n do_one_initcall+0x184\/0x464\n do_init_module+0x58\/0x1ec\n load_module+0xefc\/0x10c8\n __arm64_sys_finit_module+0x238\/0x33c\n invoke_syscall+0x58\/0x10c\n el0_svc_common+0xa8\/0xdc\n do_el0_svc+0x1c\/0x28\n el0_svc+0x50\/0xac\n el0t_64_sync_handler+0x70\/0xbc\n el0t_64_sync+0x1a8\/0x1ac"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f51ae217d09c361ede900b94735a6d2df6c0344","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d98fa2a50b8058de52ada168fa5dbabb574711b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ac1dd51aaa0ce8b5421d1137e857955a4b6f55e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cf7b65f7029914dc0cd7db86fac9ee5159008c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/816187b1833908941286e71b0041059a4acd52ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a2173660ee53d5699744f02e6ab7bf89fcd0b1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffe19e363c6f8b992ba835a361542568dea17409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-45828","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:21.450","lastModified":"2025-01-11T13:15:21.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: mipi-i3c-hci: Mask ring interrupts before ring stop request\n\nBus cleanup path in DMA mode may trigger a RING_OP_STAT interrupt when\nthe ring is being stopped. Depending on timing between ring stop request\ncompletion, interrupt handler removal and code execution this may lead\nto a NULL pointer dereference in hci_dma_irq_handler() if it gets to run\nafter the io_data pointer is set to NULL in hci_dma_cleanup().\n\nPrevent this my masking the ring interrupts before ring stop request."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19cc5767334bfe980f52421627d0826c0da86721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ca2738174e4ee44edb2ab2d86ce74f015a0cc32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d745a56aea45e47f4755bc12e6429d6314dbb54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6cddf68b3405b272b5a3cad9657be0b02b34bf4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6dc4b4fda2e147e557050eaae51ff15edeb680b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-46896","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:21.643","lastModified":"2025-01-11T13:15:21.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: don't access invalid sched\n\nSince 2320c9e6a768 (\"drm\/sched: memset() 'job' in drm_sched_job_init()\")\naccessing job->base.sched can produce unexpected results as the initialisation\nof (*job)->base.sched done in amdgpu_job_alloc is overwritten by the\nmemset.\n\nThis commit fixes an issue when a CS would fail validation and would\nbe rejected after job->num_ibs is incremented. In this case,\namdgpu_ib_free(ring->adev, ...) will be called, which would crash the\nmachine because the ring value is bogus.\n\nTo fix this, pass a NULL pointer to amdgpu_ib_free(): we can do this\nbecause the device is actually not used in this function.\n\nThe next commit will remove the ring argument completely.\n\n(cherry picked from commit 2ae520cb12831d264ceb97c61f72c59d33c0dbd7)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/65501a4fd84ecdc0af863dbb37759242aab9f2dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67291d601f2b032062b1b2f60ffef1b63e10094c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a93b1020eb9386d7da11608477121b10079c076a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da6b2c626ae73c303378ce9eaf6e3eaf16c9925a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47141","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:21.830","lastModified":"2025-01-11T13:15:21.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinmux: Use sequential access to access desc->pinmux data\n\nWhen two client of the same gpio call pinctrl_select_state() for the\nsame functionality, we are seeing NULL pointer issue while accessing\ndesc->mux_owner.\n\nLet's say two processes A, B executing in pin_request() for the same pin\nand process A updates the desc->mux_usecount but not yet updated the\ndesc->mux_owner while process B see the desc->mux_usecount which got\nupdated by A path and further executes strcmp and while accessing\ndesc->mux_owner it crashes with NULL pointer.\n\nSerialize the access to mux related setting with a mutex lock.\n\n\tcpu0 (process A)\t\t\tcpu1(process B)\n\npinctrl_select_state() {\t\t  pinctrl_select_state() {\n  pin_request() {\t\t\t\tpin_request() {\n  ...\n\t\t\t\t\t\t ....\n    } else {\n         desc->mux_usecount++;\n    \t\t\t\t\t\tdesc->mux_usecount && strcmp(desc->mux_owner, owner)) {\n\n         if (desc->mux_usecount > 1)\n               return 0;\n         desc->mux_owner = owner;\n\n  }\t\t\t\t\t\t}"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2da32aed4a97ca1d70fb8b77926f72f30ce5fb4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a3e85c3c397c781393ea5fb2f45b1f60f8a4e6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c11e2ec9a780f54982a187ee10ffd1b810715c85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47143","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.007","lastModified":"2025-01-11T13:15:22.007","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-debug: fix a possible deadlock on radix_lock\n\nradix_lock() shouldn't be held while holding dma_hash_entry[idx].lock\notherwise, there's a possible deadlock scenario when\ndma debug API is called holding rq_lock():\n\nCPU0                   CPU1                       CPU2\ndma_free_attrs()\ncheck_unmap()          add_dma_entry()            __schedule() \/\/out\n                                                  (A) rq_lock()\nget_hash_bucket()\n(A) dma_entry_hash\n                                                  check_sync()\n                       (A) radix_lock()           (W) dma_entry_hash\ndma_entry_free()\n(W) radix_lock()\n                       \/\/ CPU2's one\n                       (W) rq_lock()\n\nCPU1 situation can happen when it extending radix tree and\nit tries to wake up kswapd via wake_all_kswapd().\n\nCPU2 situation can happen while perf_event_task_sched_out()\n(i.e. dma sync operation is called while deleting perf_event using\n etm and etr tmc which are Arm Coresight hwtracing driver backends).\n\nTo remove this possible situation, call dma_entry_free() after\nput_hash_bucket() in check_unmap()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ccce34a5c3f5c9541108a451657ade621524b32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7543c3e3b9b88212fcd0aaf5cab5588797bdc7de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c1b4fea8d62285f5e1a8194889b39661608bd8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c212d91070beca0d03fef7bf988baf4ff4b3eee4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efe1b9bbf356357fdff0399af361133d6e3ba18e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2b95248a16c5186d1c658fc0aeb2f3bd95e5259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47408","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.220","lastModified":"2025-01-11T13:15:22.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: check smcd_v2_ext_offset when receiving proposal msg\n\nWhen receiving proposal msg in server, the field smcd_v2_ext_offset in\nproposal msg is from the remote client and can not be fully trusted.\nOnce the value of smcd_v2_ext_offset exceed the max value, there has\nthe chance to access wrong address, and crash may happen.\n\nThis patch checks the value of smcd_v2_ext_offset before using it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/48d5a8a304a643613dab376a278f29d3e22f7c34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/935caf324b445fe73d7708fae6f7176fb243f357","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ab332deb671d8f7e66d82a2ff2b3f715bc3a4ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a36364d8d4fabb105001f992fb8ff2d3546203d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1cc8be2a785a8f1ce1f597f3e608602c5fccd46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47794","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.390","lastModified":"2025-01-11T13:15:22.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Prevent tailcall infinite loop caused by freplace\n\nThere is a potential infinite loop issue that can occur when using a\ncombination of tail calls and freplace.\n\nIn an upcoming selftest, the attach target for entry_freplace of\ntailcall_freplace.c is subprog_tc of tc_bpf2bpf.c, while the tail call in\nentry_freplace leads to entry_tc. This results in an infinite loop:\n\nentry_tc -> subprog_tc -> entry_freplace --tailcall-> entry_tc.\n\nThe problem arises because the tail_call_cnt in entry_freplace resets to\nzero each time entry_freplace is executed, causing the tail call mechanism\nto never terminate, eventually leading to a kernel panic.\n\nTo fix this issue, the solution is twofold:\n\n1. Prevent updating a program extended by an freplace program to a\n   prog_array map.\n2. Prevent extending a program that is already part of a prog_array map\n   with an freplace program.\n\nThis ensures that:\n\n* If a program or its subprogram has been extended by an freplace program,\n  it can no longer be updated to a prog_array map.\n* If a program has been added to a prog_array map, neither it nor its\n  subprograms can be extended by an freplace program.\n\nMoreover, an extension program should not be tailcalled. As such, return\n-EINVAL if the program has a type of BPF_PROG_TYPE_EXT when adding it to a\nprog_array map.\n\nAdditionally, fix a minor code style issue by replacing eight spaces with a\ntab for proper formatting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/987aa730bad3e1ef66d9f30182294daa78f6387d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6083f040d5d8f8d748462c77e90547097df936e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47809","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.583","lastModified":"2025-01-11T13:15:22.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndlm: fix possible lkb_resource null dereference\n\nThis patch fixes a possible null pointer dereference when this function is\ncalled from request_lock() as lkb->lkb_resource is not assigned yet,\nonly after validate_lock_args() by calling attach_lkb(). Another issue\nis that a resource name could be a non printable bytearray and we cannot\nassume to be ASCII coded.\n\nThe log functionality is probably never being hit when DLM is used in\nnormal way and no debug logging is enabled. The null pointer dereference\ncan only occur on a new created lkb that does not have the resource\nassigned yet, it probably never hits the null pointer dereference but we\nshould be sure that other changes might not change this behaviour and we\nactually can hit the mentioned null pointer dereference.\n\nIn this patch we just drop the printout of the resource name, the lkb id\nis enough to make a possible connection to a resource name if this\nexists."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2db11504ef82a60c1a2063ba7431a5cd013ecfcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fbdc3980b70e9c1c86eccea7d5ee68108008fa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b98333c67daf887c724cd692e88e2db9418c0861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-48873","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.750","lastModified":"2025-01-11T13:15:22.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: check return value of ieee80211_probereq_get() for RNR\n\nThe return value of ieee80211_probereq_get() might be NULL, so check it\nbefore using to avoid NULL pointer access.\n\nAddresses-Coverity-ID: 1529805 (\"Dereference null return value\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a0f54cb3fea5d087440b2bae03202c445156a8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/630d5d8f2bf6b340202b6bc2c05d794bbd8e4c1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7296e5611adb2c619bd7bd3817ddde7ba865ef17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-48875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:22.933","lastModified":"2025-01-11T13:15:22.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't take dev_replace rwsem on task already holding it\n\nRunning fstests btrfs\/011 with MKFS_OPTIONS=\"-O rst\" to force the usage of\nthe RAID stripe-tree, we get the following splat from lockdep:\n\n BTRFS info (device sdd): dev_replace from \/dev\/sdd (devid 1) to \/dev\/sdb started\n\n ============================================\n WARNING: possible recursive locking detected\n 6.11.0-rc3-btrfs-for-next #599 Not tainted\n --------------------------------------------\n btrfs\/2326 is trying to acquire lock:\n ffff88810f215c98 (&fs_info->dev_replace.rwsem){++++}-{3:3}, at: btrfs_map_block+0x39f\/0x2250\n\n but task is already holding lock:\n ffff88810f215c98 (&fs_info->dev_replace.rwsem){++++}-{3:3}, at: btrfs_map_block+0x39f\/0x2250\n\n other info that might help us debug this:\n  Possible unsafe locking scenario:\n\n        CPU0\n        ----\n   lock(&fs_info->dev_replace.rwsem);\n   lock(&fs_info->dev_replace.rwsem);\n\n  *** DEADLOCK ***\n\n  May be due to missing lock nesting notation\n\n 1 lock held by btrfs\/2326:\n  #0: ffff88810f215c98 (&fs_info->dev_replace.rwsem){++++}-{3:3}, at: btrfs_map_block+0x39f\/0x2250\n\n stack backtrace:\n CPU: 1 UID: 0 PID: 2326 Comm: btrfs Not tainted 6.11.0-rc3-btrfs-for-next #599\n Hardware name: Bochs Bochs, BIOS Bochs 01\/01\/2011\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x5b\/0x80\n  __lock_acquire+0x2798\/0x69d0\n  ? __pfx___lock_acquire+0x10\/0x10\n  ? __pfx___lock_acquire+0x10\/0x10\n  lock_acquire+0x19d\/0x4a0\n  ? btrfs_map_block+0x39f\/0x2250\n  ? __pfx_lock_acquire+0x10\/0x10\n  ? find_held_lock+0x2d\/0x110\n  ? lock_is_held_type+0x8f\/0x100\n  down_read+0x8e\/0x440\n  ? btrfs_map_block+0x39f\/0x2250\n  ? __pfx_down_read+0x10\/0x10\n  ? do_raw_read_unlock+0x44\/0x70\n  ? _raw_read_unlock+0x23\/0x40\n  btrfs_map_block+0x39f\/0x2250\n  ? btrfs_dev_replace_by_ioctl+0xd69\/0x1d00\n  ? btrfs_bio_counter_inc_blocked+0xd9\/0x2e0\n  ? __kasan_slab_alloc+0x6e\/0x70\n  ? __pfx_btrfs_map_block+0x10\/0x10\n  ? __pfx_btrfs_bio_counter_inc_blocked+0x10\/0x10\n  ? kmem_cache_alloc_noprof+0x1f2\/0x300\n  ? mempool_alloc_noprof+0xed\/0x2b0\n  btrfs_submit_chunk+0x28d\/0x17e0\n  ? __pfx_btrfs_submit_chunk+0x10\/0x10\n  ? bvec_alloc+0xd7\/0x1b0\n  ? bio_add_folio+0x171\/0x270\n  ? __pfx_bio_add_folio+0x10\/0x10\n  ? __kasan_check_read+0x20\/0x20\n  btrfs_submit_bio+0x37\/0x80\n  read_extent_buffer_pages+0x3df\/0x6c0\n  btrfs_read_extent_buffer+0x13e\/0x5f0\n  read_tree_block+0x81\/0xe0\n  read_block_for_search+0x4bd\/0x7a0\n  ? __pfx_read_block_for_search+0x10\/0x10\n  btrfs_search_slot+0x78d\/0x2720\n  ? __pfx_btrfs_search_slot+0x10\/0x10\n  ? lock_is_held_type+0x8f\/0x100\n  ? kasan_save_track+0x14\/0x30\n  ? __kasan_slab_alloc+0x6e\/0x70\n  ? kmem_cache_alloc_noprof+0x1f2\/0x300\n  btrfs_get_raid_extent_offset+0x181\/0x820\n  ? __pfx_lock_acquire+0x10\/0x10\n  ? __pfx_btrfs_get_raid_extent_offset+0x10\/0x10\n  ? down_read+0x194\/0x440\n  ? __pfx_down_read+0x10\/0x10\n  ? do_raw_read_unlock+0x44\/0x70\n  ? _raw_read_unlock+0x23\/0x40\n  btrfs_map_block+0x5b5\/0x2250\n  ? __pfx_btrfs_map_block+0x10\/0x10\n  scrub_submit_initial_read+0x8fe\/0x11b0\n  ? __pfx_scrub_submit_initial_read+0x10\/0x10\n  submit_initial_group_read+0x161\/0x3a0\n  ? lock_release+0x20e\/0x710\n  ? __pfx_submit_initial_group_read+0x10\/0x10\n  ? __pfx_lock_release+0x10\/0x10\n  scrub_simple_mirror.isra.0+0x3eb\/0x580\n  scrub_stripe+0xe4d\/0x1440\n  ? lock_release+0x20e\/0x710\n  ? __pfx_scrub_stripe+0x10\/0x10\n  ? __pfx_lock_release+0x10\/0x10\n  ? do_raw_read_unlock+0x44\/0x70\n  ? _raw_read_unlock+0x23\/0x40\n  scrub_chunk+0x257\/0x4a0\n  scrub_enumerate_chunks+0x64c\/0xf70\n  ? __mutex_unlock_slowpath+0x147\/0x5f0\n  ? __pfx_scrub_enumerate_chunks+0x10\/0x10\n  ? bit_wait_timeout+0xb0\/0x170\n  ? __up_read+0x189\/0x700\n  ? scrub_workers_get+0x231\/0x300\n  ? up_write+0x490\/0x4f0\n  btrfs_scrub_dev+0x52e\/0xcd0\n  ? create_pending_snapshots+0x230\/0x250\n  ? __pfx_btrfs_scrub_dev+0x10\/0x10\n  btrfs_dev_replace_by_ioctl+0xd69\/0x1d00\n  ? lock_acquire+0x19d\/0x4a0\n  ? __pfx_btrfs_dev_replace_by_ioctl+0x10\/0x10\n  ?\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8cca35cb29f81eba3e96ec44dad8696c8a2f9138","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2e99dcd7aafa9d474f7d9b0740b8f93c4e156c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5bc4e030f50fdbb1fbc69acc1e0c5f57c79d044","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-48876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:23.263","lastModified":"2025-01-11T13:15:23.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstackdepot: fix stack_depot_save_flags() in NMI context\n\nPer documentation, stack_depot_save_flags() was meant to be usable from\nNMI context if STACK_DEPOT_FLAG_CAN_ALLOC is unset.  However, it still\nwould try to take the pool_lock in an attempt to save a stack trace in the\ncurrent pool (if space is available).\n\nThis could result in deadlock if an NMI is handled while pool_lock is\nalready held.  To avoid deadlock, only try to take the lock in NMI context\nand give up if unsuccessful.\n\nThe documentation is fixed to clearly convey this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/031e04bdc834cda3b054ef6b698503b2b97e8186","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bfeeeff2c92b9dd261198b601b45bde4c529841","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-48881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:23.437","lastModified":"2025-01-11T13:15:23.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: revert replacing IS_ERR_OR_NULL with IS_ERR again\n\nCommit 028ddcac477b (\"bcache: Remove unnecessary NULL point check in\nnode allocations\") leads a NULL pointer deference in cache_set_flush().\n\n1721         if (!IS_ERR_OR_NULL(c->root))\n1722                 list_add(&c->root->list, &c->btree_cache);\n\n>From the above code in cache_set_flush(), if previous registration code\nfails before allocating c->root, it is possible c->root is NULL as what\nit is initialized. __bch_btree_node_alloc() never returns NULL but\nc->root is possible to be NULL at above line 1721.\n\nThis patch replaces IS_ERR() by IS_ERR_OR_NULL() to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/336e30f32ae7c043fde0f6fa21586ff30bea9fe2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4379c5828492a4c2a651c8f826a01453bd2b80b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5202391970ffbf81975251b3526b890ba027b715","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e0e913624bcd24f3de414475018d3023f060ee1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2e382ae12a63560fca35050498e19e760adf8c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc05aa2c0117e20fa25a3c0d915f98b8f2e78667","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5fee35bdd18316a84b5f30881a24e1415e1464","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49568","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:23.637","lastModified":"2025-01-11T13:15:23.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: check v2_ext_offset\/eid_cnt\/ism_gid_cnt when receiving proposal msg\n\nWhen receiving proposal msg in server, the fields v2_ext_offset\/\neid_cnt\/ism_gid_cnt in proposal msg are from the remote client\nand can not be fully trusted. Especially the field v2_ext_offset,\nonce exceed the max value, there has the chance to access wrong\naddress, and crash may happen.\n\nThis patch checks the fields v2_ext_offset\/eid_cnt\/ism_gid_cnt\nbefore using them."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/295a92e3df32e72aff0f4bc25c310e349d07ffbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42f6beb2d5779429417b5f8115a4e3fa695d2a6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7863c9f3d24ba49dbead7e03dfbe40deb5888fdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49569","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:23.840","lastModified":"2025-01-11T13:15:23.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-rdma: unquiesce admin_q before destroy it\n\nKernel will hang on destroy admin_q while we create ctrl failed, such\nas following calltrace:\n\nPID: 23644    TASK: ff2d52b40f439fc0  CPU: 2    COMMAND: \"nvme\"\n #0 [ff61d23de260fb78] __schedule at ffffffff8323bc15\n #1 [ff61d23de260fc08] schedule at ffffffff8323c014\n #2 [ff61d23de260fc28] blk_mq_freeze_queue_wait at ffffffff82a3dba1\n #3 [ff61d23de260fc78] blk_freeze_queue at ffffffff82a4113a\n #4 [ff61d23de260fc90] blk_cleanup_queue at ffffffff82a33006\n #5 [ff61d23de260fcb0] nvme_rdma_destroy_admin_queue at ffffffffc12686ce\n #6 [ff61d23de260fcc8] nvme_rdma_setup_ctrl at ffffffffc1268ced\n #7 [ff61d23de260fd28] nvme_rdma_create_ctrl at ffffffffc126919b\n #8 [ff61d23de260fd68] nvmf_dev_write at ffffffffc024f362\n #9 [ff61d23de260fe38] vfs_write at ffffffff827d5f25\n    RIP: 00007fda7891d574  RSP: 00007ffe2ef06958  RFLAGS: 00000202\n    RAX: ffffffffffffffda  RBX: 000055e8122a4d90  RCX: 00007fda7891d574\n    RDX: 000000000000012b  RSI: 000055e8122a4d90  RDI: 0000000000000004\n    RBP: 00007ffe2ef079c0   R8: 000000000000012b   R9: 000055e8122a4d90\n    R10: 0000000000000000  R11: 0000000000000202  R12: 0000000000000004\n    R13: 000055e8122923c0  R14: 000000000000012b  R15: 00007fda78a54500\n    ORIG_RAX: 0000000000000001  CS: 0033  SS: 002b\n\nThis due to we have quiesced admi_q before cancel requests, but forgot\nto unquiesce before destroy it, as a result we fail to drain the\npending requests, and hang on blk_mq_freeze_queue_wait() forever. Here\ntry to reuse nvme_rdma_teardown_admin_queue() to fix this issue and\nsimplify the code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05b436f3cf65c957eff86c5ea5ddfa2604b32c63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5858b687559809f05393af745cbadf06dee61295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49571","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:24.027","lastModified":"2025-01-11T13:15:24.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: check iparea_offset and ipv6_prefixes_cnt when receiving proposal msg\n\nWhen receiving proposal msg in server, the field iparea_offset\nand the field ipv6_prefixes_cnt in proposal msg are from the\nremote client and can not be fully trusted. Especially the\nfield iparea_offset, once exceed the max value, there has the\nchance to access wrong address, and crash may happen.\n\nThis patch checks iparea_offset and ipv6_prefixes_cnt before using them."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47ce46349672a7e0c361bfe39ed0b22e824ef4fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62056d1592e63d85e82357ee2ae6a6a294f440b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/846bada23bfcdeb83621b045ed85dc06c7833ff0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91a7c27c1444ed4677b83fd5308d2cf03f5f0851","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a29e220d3c8edbf0e1beb0f028878a4a85966556","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f10635268a0a49ee902a3b63b5dbb76f4fed498e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49573","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:24.223","lastModified":"2025-01-11T13:15:24.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/fair: Fix NEXT_BUDDY\n\nAdam reports that enabling NEXT_BUDDY insta triggers a WARN in\npick_next_entity().\n\nMoving clear_buddies() up before the delayed dequeue bits ensures\nno ->next buddy becomes delayed. Further ensure no new ->next buddy\never starts as delayed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/493afbd187c4c9cc1642792c0d9ba400c3d6d90d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dbe6816c49197677a5ecce749bd99929da147da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50051","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:24.427","lastModified":"2025-01-11T13:15:24.427","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: mpc52xx: Add cancel_work_sync before module remove\n\nIf we remove the module which will call mpc52xx_spi_remove\nit will free 'ms' through spi_unregister_controller.\nwhile the work ms->work will be used. The sequence of operations\nthat may lead to a UAF bug.\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in mpc52xx_spi_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/373d55a47dc662e5e30d12ad5d334312f757c1f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b72189de2cddacb26250579da0510b29a8b82b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/984836621aad98802d92c4a3047114cf518074c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd5106c77d6d6828aa82449f01f4eb436d602a21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0cde3911cf24e1bcdd4caa1d1b9ef57589db5a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0c6ce8424095c2da32a063d3fc027494c689817","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f65d85bc1ffd8a2c194bb2cd65e35ed3648ddd59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-51729","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:24.650","lastModified":"2025-01-11T13:15:24.650","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: use aligned address in copy_user_gigantic_page()\n\nIn current kernel, hugetlb_wp() calls copy_user_large_folio() with the\nfault address.  Where the fault address may be not aligned with the huge\npage size.  Then, copy_user_large_folio() may call\ncopy_user_gigantic_page() with the address, while\ncopy_user_gigantic_page() requires the address to be huge page size\naligned.  So, this may cause memory corruption or information leak,\naddtional, use more obvious naming 'addr_hint' instead of 'addr' for\ncopy_user_gigantic_page()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/cb12d61361ce769672c7c7bd32107252598cdd8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5d09de9f1bf9674c6418ff10d0a40cfe29268e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52319","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:24.843","lastModified":"2025-01-11T13:15:24.843","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: use aligned address in clear_gigantic_page()\n\nIn current kernel, hugetlb_no_page() calls folio_zero_user() with the\nfault address.  Where the fault address may be not aligned with the huge\npage size.  Then, folio_zero_user() may call clear_gigantic_page() with\nthe address, while clear_gigantic_page() requires the address to be huge\npage size aligned.  So, this may cause memory corruption or information\nleak, addtional, use more obvious naming 'addr_hint' instead of 'addr' for\nclear_gigantic_page()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8aca2bc96c833ba695ede7a45ad7784c836a262e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b79b6fe0737f233f0be1465052b7f0e75f324735","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52332","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:25.070","lastModified":"2025-01-11T13:15:25.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Fix potential invalid memory access in igb_init_module()\n\nThe pci_register_driver() can fail and when this happened, the dca_notifier\nneeds to be unregistered, otherwise the dca_notifier can be called when\nigb fails to install, resulting to invalid memory access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0566f83d206c7a864abcd741fe39d6e0ae5eef29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4458046617dfadc351162dbaea1945c57eebdf36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fe517643f529e805bb6b890a4331c100e8f2484","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8009cdcc493fa30d4572016daf2d6999da4d6c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/992fd34122de377b45cb75b64fc7f17fc1e6ed2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0155b1b1509d0ef4799bd1cd73309ca466df3f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f309733a8c9da7d4266a8a3755020b738a570cae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53680","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:25.710","lastModified":"2025-01-11T13:15:25.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: fix UB due to uninitialized stack access in ip_vs_protocol_init()\n\nUnder certain kernel configurations when building with Clang\/LLVM, the\ncompiler does not generate a return or jump as the terminator\ninstruction for ip_vs_protocol_init(), triggering the following objtool\nwarning during build time:\n\n  vmlinux.o: warning: objtool: ip_vs_protocol_init() falls through to next function __initstub__kmod_ip_vs_rr__935_123_ip_vs_rr_init6()\n\nAt runtime, this either causes an oops when trying to load the ipvs\nmodule or a boot-time panic if ipvs is built-in. This same issue has\nbeen reported by the Intel kernel test robot previously.\n\nDigging deeper into both LLVM and the kernel code reveals this to be a\nundefined behavior problem. ip_vs_protocol_init() uses a on-stack buffer\nof 64 chars to store the registered protocol names and leaves it\nuninitialized after definition. The function calls strnlen() when\nconcatenating protocol names into the buffer. With CONFIG_FORTIFY_SOURCE\nstrnlen() performs an extra step to check whether the last byte of the\ninput char buffer is a null character (commit 3009f891bb9f (\"fortify:\nAllow strlen() and strnlen() to pass compile-time known lengths\")).\nThis, together with possibly other configurations, cause the following\nIR to be generated:\n\n  define hidden i32 @ip_vs_protocol_init() local_unnamed_addr #5 section \".init.text\" align 16 !kcfi_type !29 {\n    %1 = alloca [64 x i8], align 16\n    ...\n\n  14:                                               ; preds = %11\n    %15 = getelementptr inbounds i8, ptr %1, i64 63\n    %16 = load i8, ptr %15, align 1\n    %17 = tail call i1 @llvm.is.constant.i8(i8 %16)\n    %18 = icmp eq i8 %16, 0\n    %19 = select i1 %17, i1 %18, i1 false\n    br i1 %19, label %20, label %23\n\n  20:                                               ; preds = %14\n    %21 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #23\n    ...\n\n  23:                                               ; preds = %14, %11, %20\n    %24 = call i64 @strnlen(ptr noundef nonnull dereferenceable(1) %1, i64 noundef 64) #24\n    ...\n  }\n\nThe above code calculates the address of the last char in the buffer\n(value %15) and then loads from it (value %16). Because the buffer is\nnever initialized, the LLVM GVN pass marks value %16 as undefined:\n\n  %13 = getelementptr inbounds i8, ptr %1, i64 63\n  br i1 undef, label %14, label %17\n\nThis gives later passes (SCCP, in particular) more DCE opportunities by\npropagating the undef value further, and eventually removes everything\nafter the load on the uninitialized stack location:\n\n  define hidden i32 @ip_vs_protocol_init() local_unnamed_addr #0 section \".init.text\" align 16 !kcfi_type !11 {\n    %1 = alloca [64 x i8], align 16\n    ...\n\n  12:                                               ; preds = %11\n    %13 = getelementptr inbounds i8, ptr %1, i64 63\n    unreachable\n  }\n\nIn this way, the generated native code will just fall through to the\nnext function, as LLVM does not generate any code for the unreachable IR\ninstruction and leaves the function without a terminator.\n\nZero the on-stack buffer to avoid this possible UB."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b2cbed82b7c6504a8a0fbd181f92dd56b432c12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/124834133b32f9386bb2d8581d9ab92f65e951e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/146b6f1112eb30a19776d6c323c994e9d67790db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31d1ddc1ce8e8d3f101a679243abb42a313ee88a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48130002e64fd191b7d18efeb4d253fcc23e4688","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/664d0feab92495b6a27edc3d1119e232c0fe8b2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6e1776f51c95827142f1d7064118e255e2deec1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53682","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:25.860","lastModified":"2025-01-11T13:15:25.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: axp20x: AXP717: set ramp_delay\n\nAXP717 datasheet says that regulator ramp delay is 15.625 us\/step,\nwhich is 10mV in our case.\n\nAdd a AXP_DESC_RANGES_DELAY macro and update AXP_DESC_RANGES macro to\nexpand to AXP_DESC_RANGES_DELAY with ramp_delay = 0\n\nFor DCDC4, steps is 100mv\n\nAdd a AXP_DESC_DELAY macro and update AXP_DESC macro to\nexpand to AXP_DESC_DELAY with ramp_delay = 0\n\nThis patch fix crashes when using CPU DVFS."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10eb845a87193ef922cd002e0ff4f4759c1e918d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f07ae52f5cf6a5584fdf7c8c652f027d90bc8b74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53685","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:25.997","lastModified":"2025-01-11T13:15:25.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: give up on paths longer than PATH_MAX\n\nIf the full path to be built by ceph_mdsc_build_path() happens to be\nlonger than PATH_MAX, then this function will enter an endless (retry)\nloop, effectively blocking the whole task.  Most of the machine\nbecomes unusable, making this a very simple and effective DoS\nvulnerability.\n\nI cannot imagine why this retry was ever implemented, but it seems\nrather useless and harmful to me.  Let's remove it and fail with\nENAMETOOLONG instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/550f7ca98ee028a606aa75705a7e77b1bd11720f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99a37ab76a315c8307eb5b0dc095d8ad9d8efeaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c47ed91156daf328601d02b58d52d9804da54108","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53687","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.120","lastModified":"2025-01-11T13:15:26.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix IPIs usage in kfence_protect_page()\n\nflush_tlb_kernel_range() may use IPIs to flush the TLBs of all the\ncores, which triggers the following warning when the irqs are disabled:\n\n[    3.455330] WARNING: CPU: 1 PID: 0 at kernel\/smp.c:815 smp_call_function_many_cond+0x452\/0x520\n[    3.456647] Modules linked in:\n[    3.457218] CPU: 1 UID: 0 PID: 0 Comm: swapper\/1 Not tainted 6.12.0-rc7-00010-g91d3de7240b8 #1\n[    3.457416] Hardware name: QEMU QEMU Virtual Machine, BIOS\n[    3.457633] epc : smp_call_function_many_cond+0x452\/0x520\n[    3.457736]  ra : on_each_cpu_cond_mask+0x1e\/0x30\n[    3.457786] epc : ffffffff800b669a ra : ffffffff800b67c2 sp : ff2000000000bb50\n[    3.457824]  gp : ffffffff815212b8 tp : ff6000008014f080 t0 : 000000000000003f\n[    3.457859]  t1 : ffffffff815221e0 t2 : 000000000000000f s0 : ff2000000000bc10\n[    3.457920]  s1 : 0000000000000040 a0 : ffffffff815221e0 a1 : 0000000000000001\n[    3.457953]  a2 : 0000000000010000 a3 : 0000000000000003 a4 : 0000000000000000\n[    3.458006]  a5 : 0000000000000000 a6 : ffffffffffffffff a7 : 0000000000000000\n[    3.458042]  s2 : ffffffff815223be s3 : 00fffffffffff000 s4 : ff600001ffe38fc0\n[    3.458076]  s5 : ff600001ff950d00 s6 : 0000000200000120 s7 : 0000000000000001\n[    3.458109]  s8 : 0000000000000001 s9 : ff60000080841ef0 s10: 0000000000000001\n[    3.458141]  s11: ffffffff81524812 t3 : 0000000000000001 t4 : ff60000080092bc0\n[    3.458172]  t5 : 0000000000000000 t6 : ff200000000236d0\n[    3.458203] status: 0000000200000100 badaddr: ffffffff800b669a cause: 0000000000000003\n[    3.458373] [<ffffffff800b669a>] smp_call_function_many_cond+0x452\/0x520\n[    3.458593] [<ffffffff800b67c2>] on_each_cpu_cond_mask+0x1e\/0x30\n[    3.458625] [<ffffffff8000e4ca>] __flush_tlb_range+0x118\/0x1ca\n[    3.458656] [<ffffffff8000e6b2>] flush_tlb_kernel_range+0x1e\/0x26\n[    3.458683] [<ffffffff801ea56a>] kfence_protect+0xc0\/0xce\n[    3.458717] [<ffffffff801e9456>] kfence_guarded_free+0xc6\/0x1c0\n[    3.458742] [<ffffffff801e9d6c>] __kfence_free+0x62\/0xc6\n[    3.458764] [<ffffffff801c57d8>] kfree+0x106\/0x32c\n[    3.458786] [<ffffffff80588cf2>] detach_buf_split+0x188\/0x1a8\n[    3.458816] [<ffffffff8058708c>] virtqueue_get_buf_ctx+0xb6\/0x1f6\n[    3.458839] [<ffffffff805871da>] virtqueue_get_buf+0xe\/0x16\n[    3.458880] [<ffffffff80613d6a>] virtblk_done+0x5c\/0xe2\n[    3.458908] [<ffffffff8058766e>] vring_interrupt+0x6a\/0x74\n[    3.458930] [<ffffffff800747d8>] __handle_irq_event_percpu+0x7c\/0xe2\n[    3.458956] [<ffffffff800748f0>] handle_irq_event+0x3c\/0x86\n[    3.458978] [<ffffffff800786cc>] handle_simple_irq+0x9e\/0xbe\n[    3.459004] [<ffffffff80073934>] generic_handle_domain_irq+0x1c\/0x2a\n[    3.459027] [<ffffffff804bf87c>] imsic_handle_irq+0xba\/0x120\n[    3.459056] [<ffffffff80073934>] generic_handle_domain_irq+0x1c\/0x2a\n[    3.459080] [<ffffffff804bdb76>] riscv_intc_aia_irq+0x24\/0x34\n[    3.459103] [<ffffffff809d0452>] handle_riscv_irq+0x2e\/0x4c\n[    3.459133] [<ffffffff809d923e>] call_on_irq_stack+0x32\/0x40\n\nSo only flush the local TLB and let the lazy kfence page fault handling\ndeal with the faults which could happen when a core has an old protected\npte version cached in its TLB. That leads to potential inaccuracies which\ncan be tolerated when using kfence."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3abfc4130c4222099c69d023fed97f1180a8ad7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f796a6a396d6f963f2cc8f5edd7dfba2cca097f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3431a8bb336cece8adc452437befa7d4534b2fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53689","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.313","lastModified":"2025-01-11T13:15:26.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix potential deadlock while freezing queue and acquiring sysfs_lock\n\nFor storing a value to a queue attribute, the queue_attr_store function\nfirst freezes the queue (->q_usage_counter(io)) and then acquire\n->sysfs_lock. This seems not correct as the usual ordering should be to\nacquire ->sysfs_lock before freezing the queue. This incorrect ordering\ncauses the following lockdep splat which we are able to reproduce always\nsimply by accessing \/sys\/kernel\/debug file using ls command:\n\n[   57.597146] WARNING: possible circular locking dependency detected\n[   57.597154] 6.12.0-10553-gb86545e02e8c #20 Tainted: G        W\n[   57.597162] ------------------------------------------------------\n[   57.597168] ls\/4605 is trying to acquire lock:\n[   57.597176] c00000003eb56710 (&mm->mmap_lock){++++}-{4:4}, at: __might_fault+0x58\/0xc0\n[   57.597200]\n               but task is already holding lock:\n[   57.597207] c0000018e27c6810 (&sb->s_type->i_mutex_key#3){++++}-{4:4}, at: iterate_dir+0x94\/0x1d4\n[   57.597226]\n               which lock already depends on the new lock.\n\n[   57.597233]\n               the existing dependency chain (in reverse order) is:\n[   57.597241]\n               -> #5 (&sb->s_type->i_mutex_key#3){++++}-{4:4}:\n[   57.597255]        down_write+0x6c\/0x18c\n[   57.597264]        start_creating+0xb4\/0x24c\n[   57.597274]        debugfs_create_dir+0x2c\/0x1e8\n[   57.597283]        blk_register_queue+0xec\/0x294\n[   57.597292]        add_disk_fwnode+0x2e4\/0x548\n[   57.597302]        brd_alloc+0x2c8\/0x338\n[   57.597309]        brd_init+0x100\/0x178\n[   57.597317]        do_one_initcall+0x88\/0x3e4\n[   57.597326]        kernel_init_freeable+0x3cc\/0x6e0\n[   57.597334]        kernel_init+0x34\/0x1cc\n[   57.597342]        ret_from_kernel_user_thread+0x14\/0x1c\n[   57.597350]\n               -> #4 (&q->debugfs_mutex){+.+.}-{4:4}:\n[   57.597362]        __mutex_lock+0xfc\/0x12a0\n[   57.597370]        blk_register_queue+0xd4\/0x294\n[   57.597379]        add_disk_fwnode+0x2e4\/0x548\n[   57.597388]        brd_alloc+0x2c8\/0x338\n[   57.597395]        brd_init+0x100\/0x178\n[   57.597402]        do_one_initcall+0x88\/0x3e4\n[   57.597410]        kernel_init_freeable+0x3cc\/0x6e0\n[   57.597418]        kernel_init+0x34\/0x1cc\n[   57.597426]        ret_from_kernel_user_thread+0x14\/0x1c\n[   57.597434]\n               -> #3 (&q->sysfs_lock){+.+.}-{4:4}:\n[   57.597446]        __mutex_lock+0xfc\/0x12a0\n[   57.597454]        queue_attr_store+0x9c\/0x110\n[   57.597462]        sysfs_kf_write+0x70\/0xb0\n[   57.597471]        kernfs_fop_write_iter+0x1b0\/0x2ac\n[   57.597480]        vfs_write+0x3dc\/0x6e8\n[   57.597488]        ksys_write+0x84\/0x140\n[   57.597495]        system_call_exception+0x130\/0x360\n[   57.597504]        system_call_common+0x160\/0x2c4\n[   57.597516]\n               -> #2 (&q->q_usage_counter(io)#21){++++}-{0:0}:\n[   57.597530]        __submit_bio+0x5ec\/0x828\n[   57.597538]        submit_bio_noacct_nocheck+0x1e4\/0x4f0\n[   57.597547]        iomap_readahead+0x2a0\/0x448\n[   57.597556]        xfs_vm_readahead+0x28\/0x3c\n[   57.597564]        read_pages+0x88\/0x41c\n[   57.597571]        page_cache_ra_unbounded+0x1ac\/0x2d8\n[   57.597580]        filemap_get_pages+0x188\/0x984\n[   57.597588]        filemap_read+0x13c\/0x4bc\n[   57.597596]        xfs_file_buffered_read+0x88\/0x17c\n[   57.597605]        xfs_file_read_iter+0xac\/0x158\n[   57.597614]        vfs_read+0x2d4\/0x3b4\n[   57.597622]        ksys_read+0x84\/0x144\n[   57.597629]        system_call_exception+0x130\/0x360\n[   57.597637]        system_call_common+0x160\/0x2c4\n[   57.597647]\n               -> #1 (mapping.invalidate_lock#2){++++}-{4:4}:\n[   57.597661]        down_read+0x6c\/0x220\n[   57.597669]        filemap_fault+0x870\/0x100c\n[   57.597677]        xfs_filemap_fault+0xc4\/0x18c\n[   57.597684]        __do_fault+0x64\/0x164\n[   57.597693]        __handle_mm_fault+0x1274\/0x1dac\n[   57.597702]        handle_mm_fault+0x248\/0x48\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/be26ba96421ab0a8fa2055ccf7db7832a13c44d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1a494df8350da2e673618627cb392a8669825dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53690","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.470","lastModified":"2025-01-11T13:15:26.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: prevent use of deleted inode\n\nsyzbot reported a WARNING in nilfs_rmdir. [1]\n\nBecause the inode bitmap is corrupted, an inode with an inode number that\nshould exist as a \".nilfs\" file was reassigned by nilfs_mkdir for \"file0\",\ncausing an inode duplication during execution.  And this causes an\nunderflow of i_nlink in rmdir operations.\n\nThe inode is used twice by the same task to unmount and remove directories\n\".nilfs\" and \"file0\", it trigger warning in nilfs_rmdir.\n\nAvoid to this issue, check i_nlink in nilfs_iget(), if it is 0, it means\nthat this inode has been deleted, and iput is executed to reclaim it.\n\n[1]\nWARNING: CPU: 1 PID: 5824 at fs\/inode.c:407 drop_nlink+0xc4\/0x110 fs\/inode.c:407\n...\nCall Trace:\n <TASK>\n nilfs_rmdir+0x1b0\/0x250 fs\/nilfs2\/namei.c:342\n vfs_rmdir+0x3a3\/0x510 fs\/namei.c:4394\n do_rmdir+0x3b5\/0x580 fs\/namei.c:4453\n __do_sys_rmdir fs\/namei.c:4472 [inline]\n __se_sys_rmdir fs\/namei.c:4470 [inline]\n __x64_sys_rmdir+0x47\/0x50 fs\/namei.c:4470\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/284760b320a0bac411b18108316939707dccb12b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55e4baa0d32f0530ddc64c26620e1f2f8fa2724c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d4ed71327b0b5f3b179a19dc3c06be9509ab3db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/901ce9705fbb9f330ff1f19600e5daf9770b0175","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/912188316a8c9e41b8c1603c2276a05043b14f96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef942d233643777f7b2a5deef620e82942983143","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff561987ff12b6a3233431ff659b5d332e22f153","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54191","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.667","lastModified":"2025-01-11T13:15:26.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: iso: Fix circular lock in iso_conn_big_sync\n\nThis fixes the circular locking dependency warning below, by reworking\niso_sock_recvmsg, to ensure that the socket lock is always released\nbefore calling a function that locks hdev.\n\n[  561.670344] ======================================================\n[  561.670346] WARNING: possible circular locking dependency detected\n[  561.670349] 6.12.0-rc6+ #26 Not tainted\n[  561.670351] ------------------------------------------------------\n[  561.670353] iso-tester\/3289 is trying to acquire lock:\n[  561.670355] ffff88811f600078 (&hdev->lock){+.+.}-{3:3},\n               at: iso_conn_big_sync+0x73\/0x260 [bluetooth]\n[  561.670405]\n               but task is already holding lock:\n[  561.670407] ffff88815af58258 (sk_lock-AF_BLUETOOTH){+.+.}-{0:0},\n               at: iso_sock_recvmsg+0xbf\/0x500 [bluetooth]\n[  561.670450]\n               which lock already depends on the new lock.\n\n[  561.670452]\n               the existing dependency chain (in reverse order) is:\n[  561.670453]\n               -> #2 (sk_lock-AF_BLUETOOTH){+.+.}-{0:0}:\n[  561.670458]        lock_acquire+0x7c\/0xc0\n[  561.670463]        lock_sock_nested+0x3b\/0xf0\n[  561.670467]        bt_accept_dequeue+0x1a5\/0x4d0 [bluetooth]\n[  561.670510]        iso_sock_accept+0x271\/0x830 [bluetooth]\n[  561.670547]        do_accept+0x3dd\/0x610\n[  561.670550]        __sys_accept4+0xd8\/0x170\n[  561.670553]        __x64_sys_accept+0x74\/0xc0\n[  561.670556]        x64_sys_call+0x17d6\/0x25f0\n[  561.670559]        do_syscall_64+0x87\/0x150\n[  561.670563]        entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[  561.670567]\n               -> #1 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO){+.+.}-{0:0}:\n[  561.670571]        lock_acquire+0x7c\/0xc0\n[  561.670574]        lock_sock_nested+0x3b\/0xf0\n[  561.670577]        iso_sock_listen+0x2de\/0xf30 [bluetooth]\n[  561.670617]        __sys_listen_socket+0xef\/0x130\n[  561.670620]        __x64_sys_listen+0xe1\/0x190\n[  561.670623]        x64_sys_call+0x2517\/0x25f0\n[  561.670626]        do_syscall_64+0x87\/0x150\n[  561.670629]        entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[  561.670632]\n               -> #0 (&hdev->lock){+.+.}-{3:3}:\n[  561.670636]        __lock_acquire+0x32ad\/0x6ab0\n[  561.670639]        lock_acquire.part.0+0x118\/0x360\n[  561.670642]        lock_acquire+0x7c\/0xc0\n[  561.670644]        __mutex_lock+0x18d\/0x12f0\n[  561.670647]        mutex_lock_nested+0x1b\/0x30\n[  561.670651]        iso_conn_big_sync+0x73\/0x260 [bluetooth]\n[  561.670687]        iso_sock_recvmsg+0x3e9\/0x500 [bluetooth]\n[  561.670722]        sock_recvmsg+0x1d5\/0x240\n[  561.670725]        sock_read_iter+0x27d\/0x470\n[  561.670727]        vfs_read+0x9a0\/0xd30\n[  561.670731]        ksys_read+0x1a8\/0x250\n[  561.670733]        __x64_sys_read+0x72\/0xc0\n[  561.670736]        x64_sys_call+0x1b12\/0x25f0\n[  561.670738]        do_syscall_64+0x87\/0x150\n[  561.670741]        entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[  561.670744]\n               other info that might help us debug this:\n\n[  561.670745] Chain exists of:\n&hdev->lock --> sk_lock-AF_BLUETOOTH-BTPROTO_ISO --> sk_lock-AF_BLUETOOTH\n\n[  561.670751]  Possible unsafe locking scenario:\n\n[  561.670753]        CPU0                    CPU1\n[  561.670754]        ----                    ----\n[  561.670756]   lock(sk_lock-AF_BLUETOOTH);\n[  561.670758]                                lock(sk_lock\n                                              AF_BLUETOOTH-BTPROTO_ISO);\n[  561.670761]                                lock(sk_lock-AF_BLUETOOTH);\n[  561.670764]   lock(&hdev->lock);\n[  561.670767]\n                *** DEADLOCK ***"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7a17308c17880d259105f6e591eb1bc77b9612f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbe640d6cae590b9a7d81ce86fe9a90e83eec1d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54193","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.840","lastModified":"2025-01-11T13:15:26.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naccel\/ivpu: Fix WARN in ivpu_ipc_send_receive_internal()\n\nMove pm_runtime_set_active() to ivpu_pm_init() so when\nivpu_ipc_send_receive_internal() is executed before ivpu_pm_enable()\nit already has correct runtime state, even if last resume was\nnot successful."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f6482caa6acdfdfc744db7430771fe7e6c4e787","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/578874b2bb947e047708f4df286e4ff1ba6be3ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54455","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:26.970","lastModified":"2025-01-11T13:15:26.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naccel\/ivpu: Fix general protection fault in ivpu_bo_list()\n\nCheck if ctx is not NULL before accessing its fields."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b2efb9db0c22a130bbd1275e489b42c02d08050","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1e597ee5920a6aabdf4dfc3bf76e55e1b115e23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54460","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.157","lastModified":"2025-01-11T13:15:27.157","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: iso: Fix circular lock in iso_listen_bis\n\nThis fixes the circular locking dependency warning below, by\nreleasing the socket lock before enterning iso_listen_bis, to\navoid any potential deadlock with hdev lock.\n\n[   75.307983] ======================================================\n[   75.307984] WARNING: possible circular locking dependency detected\n[   75.307985] 6.12.0-rc6+ #22 Not tainted\n[   75.307987] ------------------------------------------------------\n[   75.307987] kworker\/u81:2\/2623 is trying to acquire lock:\n[   75.307988] ffff8fde1769da58 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO)\n               at: iso_connect_cfm+0x253\/0x840 [bluetooth]\n[   75.308021]\n               but task is already holding lock:\n[   75.308022] ffff8fdd61a10078 (&hdev->lock)\n               at: hci_le_per_adv_report_evt+0x47\/0x2f0 [bluetooth]\n[   75.308053]\n               which lock already depends on the new lock.\n\n[   75.308054]\n               the existing dependency chain (in reverse order) is:\n[   75.308055]\n               -> #1 (&hdev->lock){+.+.}-{3:3}:\n[   75.308057]        __mutex_lock+0xad\/0xc50\n[   75.308061]        mutex_lock_nested+0x1b\/0x30\n[   75.308063]        iso_sock_listen+0x143\/0x5c0 [bluetooth]\n[   75.308085]        __sys_listen_socket+0x49\/0x60\n[   75.308088]        __x64_sys_listen+0x4c\/0x90\n[   75.308090]        x64_sys_call+0x2517\/0x25f0\n[   75.308092]        do_syscall_64+0x87\/0x150\n[   75.308095]        entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[   75.308098]\n               -> #0 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO){+.+.}-{0:0}:\n[   75.308100]        __lock_acquire+0x155e\/0x25f0\n[   75.308103]        lock_acquire+0xc9\/0x300\n[   75.308105]        lock_sock_nested+0x32\/0x90\n[   75.308107]        iso_connect_cfm+0x253\/0x840 [bluetooth]\n[   75.308128]        hci_connect_cfm+0x6c\/0x190 [bluetooth]\n[   75.308155]        hci_le_per_adv_report_evt+0x27b\/0x2f0 [bluetooth]\n[   75.308180]        hci_le_meta_evt+0xe7\/0x200 [bluetooth]\n[   75.308206]        hci_event_packet+0x21f\/0x5c0 [bluetooth]\n[   75.308230]        hci_rx_work+0x3ae\/0xb10 [bluetooth]\n[   75.308254]        process_one_work+0x212\/0x740\n[   75.308256]        worker_thread+0x1bd\/0x3a0\n[   75.308258]        kthread+0xe4\/0x120\n[   75.308259]        ret_from_fork+0x44\/0x70\n[   75.308261]        ret_from_fork_asm+0x1a\/0x30\n[   75.308263]\n               other info that might help us debug this:\n\n[   75.308264]  Possible unsafe locking scenario:\n\n[   75.308264]        CPU0                CPU1\n[   75.308265]        ----                ----\n[   75.308265]   lock(&hdev->lock);\n[   75.308267]                            lock(sk_lock-\n                                                AF_BLUETOOTH-BTPROTO_ISO);\n[   75.308268]                            lock(&hdev->lock);\n[   75.308269]   lock(sk_lock-AF_BLUETOOTH-BTPROTO_ISO);\n[   75.308270]\n                *** DEADLOCK ***\n\n[   75.308271] 4 locks held by kworker\/u81:2\/2623:\n[   75.308272]  #0: ffff8fdd66e52148 ((wq_completion)hci0#2){+.+.}-{0:0},\n                at: process_one_work+0x443\/0x740\n[   75.308276]  #1: ffffafb488b7fe48 ((work_completion)(&hdev->rx_work)),\n                at: process_one_work+0x1ce\/0x740\n[   75.308280]  #2: ffff8fdd61a10078 (&hdev->lock){+.+.}-{3:3}\n                at: hci_le_per_adv_report_evt+0x47\/0x2f0 [bluetooth]\n[   75.308304]  #3: ffffffffb6ba4900 (rcu_read_lock){....}-{1:2},\n                at: hci_connect_cfm+0x29\/0x190 [bluetooth]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/168e28305b871d8ec604a8f51f35467b8d7ba05b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c541d7b5e17987ed330798b07d4ad508859c1c93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54680","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.340","lastModified":"2025-01-11T13:15:27.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix TCP timers deadlock after rmmod\n\nCommit ef7134c7fc48 (\"smb: client: Fix use-after-free of network namespace.\")\nfixed a netns UAF by manually enabled socket refcounting\n(sk->sk_net_refcnt=1 and sock_inuse_add(net, 1)).\n\nThe reason the patch worked for that bug was because we now hold\nreferences to the netns (get_net_track() gets a ref internally)\nand they're properly released (internally, on __sk_destruct()),\nbut only because sk->sk_net_refcnt was set.\n\nProblem:\n(this happens regardless of CONFIG_NET_NS_REFCNT_TRACKER and regardless\nif init_net or other)\n\nSetting sk->sk_net_refcnt=1 *manually* and *after* socket creation is not\nonly out of cifs scope, but also technically wrong -- it's set conditionally\nbased on user (=1) vs kernel (=0) sockets.  And net\/ implementations\nseem to base their user vs kernel space operations on it.\n\ne.g. upon TCP socket close, the TCP timers are not cleared because\nsk->sk_net_refcnt=1:\n(cf. commit 151c9c724d05 (\"tcp: properly terminate timers for kernel sockets\"))\n\nnet\/ipv4\/tcp.c:\n    void tcp_close(struct sock *sk, long timeout)\n    {\n    \tlock_sock(sk);\n    \t__tcp_close(sk, timeout);\n    \trelease_sock(sk);\n    \tif (!sk->sk_net_refcnt)\n    \t\tinet_csk_clear_xmit_timers_sync(sk);\n    \tsock_put(sk);\n    }\n\nWhich will throw a lockdep warning and then, as expected, deadlock on\ntcp_write_timer().\n\nA way to reproduce this is by running the reproducer from ef7134c7fc48\nand then 'rmmod cifs'.  A few seconds later, the deadlock\/lockdep\nwarning shows up.\n\nFix:\nWe shouldn't mess with socket internals ourselves, so do not set\nsk_net_refcnt manually.\n\nAlso change __sock_create() to sock_create_kern() for explicitness.\n\nAs for non-init_net network namespaces, we deal with it the best way\nwe can -- hold an extra netns reference for server->ssocket and drop it\nwhen it's released.  This ensures that the netns still exists whenever\nwe need to create\/destroy server->ssocket, but is not directly tied to\nit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/127e907e11ccd54b59bb78fc22c43ccb76c71079","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/906807c734ed219dcb2e7bbfde5c4168ed72a3d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9f2517a3e18a54a3943c098d2226b245d488801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54683","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.490","lastModified":"2025-01-11T13:15:27.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: IDLETIMER: Fix for possible ABBA deadlock\n\nDeletion of the last rule referencing a given idletimer may happen at\nthe same time as a read of its file in sysfs:\n\n| ======================================================\n| WARNING: possible circular locking dependency detected\n| 6.12.0-rc7-01692-g5e9a28f41134-dirty #594 Not tainted\n| ------------------------------------------------------\n| iptables\/3303 is trying to acquire lock:\n| ffff8881057e04b8 (kn->active#48){++++}-{0:0}, at: __kernfs_remove+0x20\n|\n| but task is already holding lock:\n| ffffffffa0249068 (list_mutex){+.+.}-{3:3}, at: idletimer_tg_destroy_v]\n|\n| which lock already depends on the new lock.\n\nA simple reproducer is:\n\n| #!\/bin\/bash\n|\n| while true; do\n|         iptables -A INPUT -i foo -j IDLETIMER --timeout 10 --label \"testme\"\n|         iptables -D INPUT -i foo -j IDLETIMER --timeout 10 --label \"testme\"\n| done &\n| while true; do\n|         cat \/sys\/class\/xt_idletimer\/timers\/testme >\/dev\/null\n| done\n\nAvoid this by freeing list_mutex right after deleting the element from\nthe list, then continuing with the teardown."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45fe76573a2557f632e248cc141342233f422b9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c2c8445cda8f59c38dec7dc10509bcb23ae26a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f36b01994d68ffc253c8296e2228dfe6e6431c03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-55639","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.663","lastModified":"2025-01-11T13:15:27.663","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: renesas: rswitch: avoid use-after-put for a device tree node\n\nThe device tree node saved in the rswitch_device structure is used at\nseveral driver locations. So passing this node to of_node_put() after\nthe first use is wrong.\n\nMove of_node_put() for this node to exit paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66b7e9f85b8459c823b11e9af69dbf4be5eb6be8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92007a28f95413058a7268dc84e5f44b700165d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf8c6755f02029d1eddc3ff19b870240f054afc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-55641","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.847","lastModified":"2025-01-11T13:15:27.847","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: unlock inodes when erroring out of xfs_trans_alloc_dir\n\nDebugging a filesystem patch with generic\/475 caused the system to hang\nafter observing the following sequences in dmesg:\n\n XFS (dm-0): metadata I\/O error in \"xfs_imap_to_bp+0x61\/0xe0 [xfs]\" at daddr 0x491520 len 32 error 5\n XFS (dm-0): metadata I\/O error in \"xfs_btree_read_buf_block+0xba\/0x160 [xfs]\" at daddr 0x3445608 len 8 error 5\n XFS (dm-0): metadata I\/O error in \"xfs_imap_to_bp+0x61\/0xe0 [xfs]\" at daddr 0x138e1c0 len 32 error 5\n XFS (dm-0): log I\/O error -5\n XFS (dm-0): Metadata I\/O Error (0x1) detected at xfs_trans_read_buf_map+0x1ea\/0x4b0 [xfs] (fs\/xfs\/xfs_trans_buf.c:311).  Shutting down filesystem.\n XFS (dm-0): Please unmount the filesystem and rectify the problem(s)\n XFS (dm-0): Internal error dqp->q_ino.reserved < dqp->q_ino.count at line 869 of file fs\/xfs\/xfs_trans_dquot.c.  Caller xfs_trans_dqresv+0x236\/0x440 [xfs]\n XFS (dm-0): Corruption detected. Unmount and run xfs_repair\n XFS (dm-0): Unmounting Filesystem be6bcbcc-9921-4deb-8d16-7cc94e335fa7\n\nThe system is stuck in unmount trying to lock a couple of inodes so that\nthey can be purged.  The dquot corruption notice above is a clue to what\nhappened -- a link() call tried to set up a transaction to link a child\ninto a directory.  Quota reservation for the transaction failed after IO\nerrors shut down the filesystem, but then we forgot to unlock the inodes\non our way out.  Fix that."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/53b001a21c9dff73b64e8c909c41991f01d5d00f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aefe5d97ae57b1343dc60d8bb6a4ed070e5bcea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-55642","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:27.990","lastModified":"2025-01-11T13:15:27.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Prevent potential deadlocks in zone write plug error recovery\n\nZone write plugging for handling writes to zones of a zoned block\ndevice always execute a zone report whenever a write BIO to a zone\nfails. The intent of this is to ensure that the tracking of a zone write\npointer is always correct to ensure that the alignment to a zone write\npointer of write BIOs can be checked on submission and that we can\nalways correctly emulate zone append operations using regular write\nBIOs.\n\nHowever, this error recovery scheme introduces a potential deadlock if a\ndevice queue freeze is initiated while BIOs are still plugged in a zone\nwrite plug and one of these write operation fails. In such case, the\ndisk zone write plug error recovery work is scheduled and executes a\nreport zone. This in turn can result in a request allocation in the\nunderlying driver to issue the report zones command to the device. But\nwith the device queue freeze already started, this allocation will\nblock, preventing the report zone execution and the continuation of the\nprocessing of the plugged BIOs. As plugged BIOs hold a queue usage\nreference, the queue freeze itself will never complete, resulting in a\ndeadlock.\n\nAvoid this problem by completely removing from the zone write plugging\ncode the use of report zones operations after a failed write operation,\ninstead relying on the device user to either execute a report zones,\nreset the zone, finish the zone, or give up writing to the device (which\nis a fairly common pattern for file systems which degrade to read-only\nafter write failures). This is not an unreasonnable requirement as all\nwell-behaved applications, FSes and device mapper already use report\nzones to recover from write errors whenever possible by comparing the\ncurrent position of a zone write pointer with what their assumption\nabout the position is.\n\nThe changes to remove the automatic error recovery are as follows:\n - Completely remove the error recovery work and its associated\n   resources (zone write plug list head, disk error list, and disk\n   zone_wplugs_work work struct). This also removes the functions\n   disk_zone_wplug_set_error() and disk_zone_wplug_clear_error().\n\n - Change the BLK_ZONE_WPLUG_ERROR zone write plug flag into\n   BLK_ZONE_WPLUG_NEED_WP_UPDATE. This new flag is set for a zone write\n   plug whenever a write opration targetting the zone of the zone write\n   plug fails. This flag indicates that the zone write pointer offset is\n   not reliable and that it must be updated when the next report zone,\n   reset zone, finish zone or disk revalidation is executed.\n\n - Modify blk_zone_write_plug_bio_endio() to set the\n   BLK_ZONE_WPLUG_NEED_WP_UPDATE flag for the target zone of a failed\n   write BIO.\n\n - Modify the function disk_zone_wplug_set_wp_offset() to clear this\n   new flag, thus implementing recovery of a correct write pointer\n   offset with the reset (all) zone and finish zone operations.\n\n - Modify blkdev_report_zones() to always use the disk_report_zones_cb()\n   callback so that disk_zone_wplug_sync_wp_offset() can be called for\n   any zone marked with the BLK_ZONE_WPLUG_NEED_WP_UPDATE flag.\n   This implements recovery of a correct write pointer offset for zone\n   write plugs marked with BLK_ZONE_WPLUG_NEED_WP_UPDATE and within\n   the range of the report zones operation executed by the user.\n\n - Modify blk_revalidate_seq_zone() to call\n   disk_zone_wplug_sync_wp_offset() for all sequential write required\n   zones when a zoned block device is revalidated, thus always resolving\n   any inconsistency between the write pointer offset of zone write\n   plugs and the actual write pointer position of sequential zones."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa80134cf266325fa61139320091001c9b3c477","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe0418eb9bd69a19a948b297c8de815e05f3cde1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-55881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:28.197","lastModified":"2025-01-11T13:15:28.197","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Play nice with protected guests in complete_hypercall_exit()\n\nUse is_64_bit_hypercall() instead of is_64_bit_mode() to detect a 64-bit\nhypercall when completing said hypercall.  For guests with protected state,\ne.g. SEV-ES and SEV-SNP, KVM must assume the hypercall was made in 64-bit\nmode as the vCPU state needed to detect 64-bit mode is unavailable.\n\nHacking the sev_smoke_test selftest to generate a KVM_HC_MAP_GPA_RANGE\nhypercall via VMGEXIT trips the WARN:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 273 PID: 326626 at arch\/x86\/kvm\/x86.h:180 complete_hypercall_exit+0x44\/0xe0 [kvm]\n  Modules linked in: kvm_amd kvm ... [last unloaded: kvm]\n  CPU: 273 UID: 0 PID: 326626 Comm: sev_smoke_test Not tainted 6.12.0-smp--392e932fa0f3-feat #470\n  Hardware name: Google Astoria\/astoria, BIOS 0.20240617.0-0 06\/17\/2024\n  RIP: 0010:complete_hypercall_exit+0x44\/0xe0 [kvm]\n  Call Trace:\n   <TASK>\n   kvm_arch_vcpu_ioctl_run+0x2400\/0x2720 [kvm]\n   kvm_vcpu_ioctl+0x54f\/0x630 [kvm]\n   __se_sys_ioctl+0x6b\/0xc0\n   do_syscall_64+0x83\/0x160\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n   <\/TASK>\n  ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0840d360a8909c722fb62459f42836afe32ededb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22b5c2acd65dbe949032f619d4758a35a82fffc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d2634ec0d1dbe8f4b511cf5261f327c6a76f4b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ed4db315094963de0678a8adfd43c46471b9349","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b42d1e8e4fe9dc631162c04caa69b0d1860b0f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-55916","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:28.353","lastModified":"2025-01-11T13:15:28.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: util: Avoid accessing a ringbuffer not initialized yet\n\nIf the KVP (or VSS) daemon starts before the VMBus channel's ringbuffer is\nfully initialized, we can hit the panic below:\n\nhv_utils: Registering HyperV Utility Driver\nhv_vmbus: registering driver hv_utils\n...\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nCPU: 44 UID: 0 PID: 2552 Comm: hv_kvp_daemon Tainted: G E 6.11.0-rc3+ #1\nRIP: 0010:hv_pkt_iter_first+0x12\/0xd0\nCall Trace:\n...\n vmbus_recvpacket\n hv_kvp_onchannelcallback\n vmbus_on_event\n tasklet_action_common\n tasklet_action\n handle_softirqs\n irq_exit_rcu\n sysvec_hyperv_stimer0\n <\/IRQ>\n <TASK>\n asm_sysvec_hyperv_stimer0\n...\n kvp_register_done\n hvt_op_read\n vfs_read\n ksys_read\n __x64_sys_read\n\nThis can happen because the KVP\/VSS channel callback can be invoked\neven before the channel is fully opened:\n1) as soon as hv_kvp_init() -> hvutil_transport_init() creates\n\/dev\/vmbus\/hv_kvp, the kvp daemon can open the device file immediately and\nregister itself to the driver by writing a message KVP_OP_REGISTER1 to the\nfile (which is handled by kvp_on_msg() ->kvp_handle_handshake()) and\nreading the file for the driver's response, which is handled by\nhvt_op_read(), which calls hvt->on_read(), i.e. kvp_register_done().\n\n2) the problem with kvp_register_done() is that it can cause the\nchannel callback to be called even before the channel is fully opened,\nand when the channel callback is starting to run, util_probe()->\nvmbus_open() may have not initialized the ringbuffer yet, so the\ncallback can hit the panic of NULL pointer dereference.\n\nTo reproduce the panic consistently, we can add a \"ssleep(10)\" for KVP in\n__vmbus_open(), just before the first hv_ringbuffer_init(), and then we\nunload and reload the driver hv_utils, and run the daemon manually within\nthe 10 seconds.\n\nFix the panic by reordering the steps in util_probe() so the char dev\nentry used by the KVP or VSS daemon is not created until after\nvmbus_open() has completed. This reordering prevents the race condition\nfrom happening."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/042253c57be901bfd19f15b68267442b70f510d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/07a756a49f4b4290b49ea46e089cbe6f79ff8d26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dd7a30c6d7f90afcf19e9b072f572ba524d7ec6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/718fe694a334be9d1a89eed22602369ac18d6583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89fcec5e466b3ac9b376e0d621c71effa1a7983f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d81f4e73aff9b861671df60e5100ad25cc16fbf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f091a224a2c82f1e302b1768d73bb6332f687321","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56368","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:28.530","lastModified":"2025-01-11T13:15:28.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Fix overflow in __rb_map_vma\n\nAn overflow occurred when performing the following calculation:\n\n   nr_pages = ((nr_subbufs + 1) << subbuf_order) - pgoff;\n\nAdd a check before the calculation to avoid this problem.\n\nsyzbot reported this as a slab-out-of-bounds in __rb_map_vma:\n\nBUG: KASAN: slab-out-of-bounds in __rb_map_vma+0x9ab\/0xae0 kernel\/trace\/ring_buffer.c:7058\nRead of size 8 at addr ffff8880767dd2b8 by task syz-executor187\/5836\n\nCPU: 0 UID: 0 PID: 5836 Comm: syz-executor187 Not tainted 6.13.0-rc2-syzkaller-00159-gf932fb9b4074 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 11\/25\/2024\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116\/0x1f0 lib\/dump_stack.c:120\n print_address_description mm\/kasan\/report.c:378 [inline]\n print_report+0xc3\/0x620 mm\/kasan\/report.c:489\n kasan_report+0xd9\/0x110 mm\/kasan\/report.c:602\n __rb_map_vma+0x9ab\/0xae0 kernel\/trace\/ring_buffer.c:7058\n ring_buffer_map+0x56e\/0x9b0 kernel\/trace\/ring_buffer.c:7138\n tracing_buffers_mmap+0xa6\/0x120 kernel\/trace\/trace.c:8482\n call_mmap include\/linux\/fs.h:2183 [inline]\n mmap_file mm\/internal.h:124 [inline]\n __mmap_new_file_vma mm\/vma.c:2291 [inline]\n __mmap_new_vma mm\/vma.c:2355 [inline]\n __mmap_region+0x1786\/0x2670 mm\/vma.c:2456\n mmap_region+0x127\/0x320 mm\/mmap.c:1348\n do_mmap+0xc00\/0xfc0 mm\/mmap.c:496\n vm_mmap_pgoff+0x1ba\/0x360 mm\/util.c:580\n ksys_mmap_pgoff+0x32c\/0x5c0 mm\/mmap.c:542\n __do_sys_mmap arch\/x86\/kernel\/sys_x86_64.c:89 [inline]\n __se_sys_mmap arch\/x86\/kernel\/sys_x86_64.c:82 [inline]\n __x64_sys_mmap+0x125\/0x190 arch\/x86\/kernel\/sys_x86_64.c:82\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nThe reproducer for this bug is:\n\n------------------------8<-------------------------\n #include <fcntl.h>\n #include <stdlib.h>\n #include <unistd.h>\n #include <asm\/types.h>\n #include <sys\/mman.h>\n\n int main(int argc, char **argv)\n {\n\tint page_size = getpagesize();\n\tint fd;\n\tvoid *meta;\n\n\tsystem(\"echo 1 > \/sys\/kernel\/tracing\/buffer_size_kb\");\n\tfd = open(\"\/sys\/kernel\/tracing\/per_cpu\/cpu0\/trace_pipe_raw\", O_RDONLY);\n\n\tmeta = mmap(NULL, page_size, PROT_READ, MAP_SHARED, fd, page_size * 5);\n }\n------------------------>8-------------------------"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c58a812c8e49ad688f94f4b050ad5c5b388fc5d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec12f30fe54234dd40ffee50dda8d2df10bd0871","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56369","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:28.700","lastModified":"2025-01-11T13:15:28.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/modes: Avoid divide by zero harder in drm_mode_vrefresh()\n\ndrm_mode_vrefresh() is trying to avoid divide by zero\nby checking whether htotal or vtotal are zero. But we may\nstill end up with a div-by-zero of vtotal*htotal*..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47c8b6cf1d08f0ad40d7ea7b025442e51b35ee1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69fbb01e891701e6d04db1ddb5ad49e42c4dd963","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9398332f23fab10c5ec57c168b44e72997d6318e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b39de5a71bac5641d0fda33d1cf5682d82cf1ae5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7c7b48a0fc5ed83baae400a1b15e33978c25d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56372","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:28.873","lastModified":"2025-01-11T13:15:28.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: fix tun_napi_alloc_frags()\n\nsyzbot reported the following crash [1]\n\nIssue came with the blamed commit. Instead of going through\nall the iov components, we keep using the first one\nand end up with a malformed skb.\n\n[1]\n\nkernel BUG at net\/core\/skbuff.c:2849 !\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 0 UID: 0 PID: 6230 Comm: syz-executor132 Not tainted 6.13.0-rc1-syzkaller-00407-g96b6fcc0ee41 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 11\/25\/2024\n RIP: 0010:__pskb_pull_tail+0x1568\/0x1570 net\/core\/skbuff.c:2848\nCode: 38 c1 0f 8c 32 f1 ff ff 4c 89 f7 e8 92 96 74 f8 e9 25 f1 ff ff e8 e8 ae 09 f8 48 8b 5c 24 08 e9 eb fb ff ff e8 d9 ae 09 f8 90 <0f> 0b 66 0f 1f 44 00 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90\nRSP: 0018:ffffc90004cbef30 EFLAGS: 00010293\nRAX: ffffffff8995c347 RBX: 00000000fffffff2 RCX: ffff88802cf45a00\nRDX: 0000000000000000 RSI: 00000000fffffff2 RDI: 0000000000000000\nRBP: ffff88807df0c06a R08: ffffffff8995b084 R09: 1ffff1100fbe185c\nR10: dffffc0000000000 R11: ffffed100fbe185d R12: ffff888076e85d50\nR13: ffff888076e85c80 R14: ffff888076e85cf4 R15: ffff888076e85c80\nFS:  00007f0dca6ea6c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f0dca6ead58 CR3: 00000000119da000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  skb_cow_data+0x2da\/0xcb0 net\/core\/skbuff.c:5284\n  tipc_aead_decrypt net\/tipc\/crypto.c:894 [inline]\n  tipc_crypto_rcv+0x402\/0x24e0 net\/tipc\/crypto.c:1844\n  tipc_rcv+0x57e\/0x12a0 net\/tipc\/node.c:2109\n  tipc_l2_rcv_msg+0x2bd\/0x450 net\/tipc\/bearer.c:668\n  __netif_receive_skb_list_ptype net\/core\/dev.c:5720 [inline]\n  __netif_receive_skb_list_core+0x8b7\/0x980 net\/core\/dev.c:5762\n  __netif_receive_skb_list net\/core\/dev.c:5814 [inline]\n  netif_receive_skb_list_internal+0xa51\/0xe30 net\/core\/dev.c:5905\n  gro_normal_list include\/net\/gro.h:515 [inline]\n  napi_complete_done+0x2b5\/0x870 net\/core\/dev.c:6256\n  napi_complete include\/linux\/netdevice.h:567 [inline]\n  tun_get_user+0x2ea0\/0x4890 drivers\/net\/tun.c:1982\n  tun_chr_write_iter+0x10d\/0x1f0 drivers\/net\/tun.c:2057\n do_iter_readv_writev+0x600\/0x880\n  vfs_writev+0x376\/0xba0 fs\/read_write.c:1050\n  do_writev+0x1b6\/0x360 fs\/read_write.c:1096\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/429fde2d81bcef0ebab002215358955704586457","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f393ea1e2f9c3b646d00572dd92c48b1869c65f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efe74dd58a72bd987b158142c904b7ef2ad132e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.090","lastModified":"2025-01-11T13:15:29.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: oa_tc6: fix tx skb race condition between reference pointers\n\nThere are two skb pointers to manage tx skb's enqueued from n\/w stack.\nwaiting_tx_skb pointer points to the tx skb which needs to be processed\nand ongoing_tx_skb pointer points to the tx skb which is being processed.\n\nSPI thread prepares the tx data chunks from the tx skb pointed by the\nongoing_tx_skb pointer. When the tx skb pointed by the ongoing_tx_skb is\nprocessed, the tx skb pointed by the waiting_tx_skb is assigned to\nongoing_tx_skb and the waiting_tx_skb pointer is assigned with NULL.\nWhenever there is a new tx skb from n\/w stack, it will be assigned to\nwaiting_tx_skb pointer if it is NULL. Enqueuing and processing of a tx skb\nhandled in two different threads.\n\nConsider a scenario where the SPI thread processed an ongoing_tx_skb and\nit moves next tx skb from waiting_tx_skb pointer to ongoing_tx_skb pointer\nwithout doing any NULL check. At this time, if the waiting_tx_skb pointer\nis NULL then ongoing_tx_skb pointer is also assigned with NULL. After\nthat, if a new tx skb is assigned to waiting_tx_skb pointer by the n\/w\nstack and there is a chance to overwrite the tx skb pointer with NULL in\nthe SPI thread. Finally one of the tx skb will be left as unhandled,\nresulting packet missing and memory leak.\n\n- Consider the below scenario where the TXC reported from the previous\ntransfer is 10 and ongoing_tx_skb holds an tx ethernet frame which can be\ntransported in 20 TXCs and waiting_tx_skb is still NULL.\n\ttx_credits = 10; \/* 21 are filled in the previous transfer *\/\n\tongoing_tx_skb = 20;\n\twaiting_tx_skb = NULL; \/* Still NULL *\/\n- So, (tc6->ongoing_tx_skb || tc6->waiting_tx_skb) becomes true.\n- After oa_tc6_prepare_spi_tx_buf_for_tx_skbs()\n\tongoing_tx_skb = 10;\n\twaiting_tx_skb = NULL; \/* Still NULL *\/\n- Perform SPI transfer.\n- Process SPI rx buffer to get the TXC from footers.\n- Now let's assume previously filled 21 TXCs are freed so we are good to\ntransport the next remaining 10 tx chunks from ongoing_tx_skb.\n\ttx_credits = 21;\n\tongoing_tx_skb = 10;\n\twaiting_tx_skb = NULL;\n- So, (tc6->ongoing_tx_skb || tc6->waiting_tx_skb) becomes true again.\n- In the oa_tc6_prepare_spi_tx_buf_for_tx_skbs()\n\tongoing_tx_skb = NULL;\n\twaiting_tx_skb = NULL;\n\n- Now the below bad case might happen,\n\nThread1 (oa_tc6_start_xmit)\tThread2 (oa_tc6_spi_thread_handler)\n---------------------------\t-----------------------------------\n- if waiting_tx_skb is NULL\n\t\t\t\t- if ongoing_tx_skb is NULL\n\t\t\t\t- ongoing_tx_skb = waiting_tx_skb\n- waiting_tx_skb = skb\n\t\t\t\t- waiting_tx_skb = NULL\n\t\t\t\t...\n\t\t\t\t- ongoing_tx_skb = NULL\n- if waiting_tx_skb is NULL\n- waiting_tx_skb = skb\n\nTo overcome the above issue, protect the moving of tx skb reference from\nwaiting_tx_skb pointer to ongoing_tx_skb pointer and assigning new tx skb\nto waiting_tx_skb pointer, so that the other thread can't access the\nwaiting_tx_skb pointer until the current thread completes moving the tx\nskb reference safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f2eb6c32bae04b375bb7a0aedbeefb6dbbcb775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e592b5110b3e9393881b0a019d86832bbf71a47f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57791","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.253","lastModified":"2025-01-11T13:15:29.253","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: check return value of sock_recvmsg when draining clc data\n\nWhen receiving clc msg, the field length in smc_clc_msg_hdr indicates the\nlength of msg should be received from network and the value should not be\nfully trusted as it is from the network. Once the value of length exceeds\nthe value of buflen in function smc_clc_wait_msg it may run into deadloop\nwhen trying to drain the remaining data exceeding buflen.\n\nThis patch checks the return value of sock_recvmsg when draining data in\ncase of deadloop in draining."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b80924af6216277892d5f091f5bfc7d1265fa28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a6927814b4256d603e202ae7c5e38db3b338896","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82c7ad9ca09975aae737abffd66d1ad98874c13d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5b8ee5022a19464783058dc6042e8eefa34e8cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7d1f986ebb284b1db8dafca7d1bdb6dd2445cf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df3dfe1a93c6298d8c09a18e4fba19ef5b17763b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57792","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.420","lastModified":"2025-01-11T13:15:29.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: gpio-charger: Fix set charge current limits\n\nFix set charge current limits for devices which allow to set the lowest\ncharge current limit to be greater zero. If requested charge current limit\nis below lowest limit, the index equals current_limit_map_size which leads\nto accessing memory beyond allocated memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13eb3cae1d8e23cce96c095abe34da8028c09ac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6abbbd8286b6f944eecf3c74444c138590135211","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afc6e39e824ad0e44b2af50a97885caec8d213d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b29c7783ac1fe36d639c089cf471ac7a46df05f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3703d9340ca2820e1ac63256f4b423ea8559831","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6279a98db132da0cfff18712a1b06478c32007f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57793","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.593","lastModified":"2025-01-11T13:15:29.593","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirt: tdx-guest: Just leak decrypted memory on unrecoverable errors\n\nIn CoCo VMs it is possible for the untrusted host to cause\nset_memory_decrypted() to fail such that an error is returned\nand the resulting memory is shared. Callers need to take care\nto handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional\nor security issues.\n\nLeak the decrypted memory when set_memory_decrypted() fails,\nand don't need to print an error since set_memory_decrypted()\nwill call WARN_ONCE()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1429ae7b7d4759a1e362456b8911c701bae655b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27834971f616c5e154423c578fa95e0444444ce1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57798","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.743","lastModified":"2025-01-11T13:15:29.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/dp_mst: Ensure mst_primary pointer is valid in drm_dp_mst_handle_up_req()\n\nWhile receiving an MST up request message from one thread in\ndrm_dp_mst_handle_up_req(), the MST topology could be removed from\nanother thread via drm_dp_mst_topology_mgr_set_mst(false), freeing\nmst_primary and setting drm_dp_mst_topology_mgr::mst_primary to NULL.\nThis could lead to a NULL deref\/use-after-free of mst_primary in\ndrm_dp_mst_handle_up_req().\n\nAvoid the above by holding a reference for mst_primary in\ndrm_dp_mst_handle_up_req() while it's used.\n\nv2: Fix kfreeing the request if getting an mst_primary reference fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9735d40f5fde9970aa46e828ecc85c32571d58a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce55818b2d3a999f886af91679589e4644ff1dc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e54b00086f7473dbda1a7d6fc47720ced157c6a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f61b2e5e7821f868d6afc22382a66a30ee780ba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57799","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:29.910","lastModified":"2025-01-11T13:15:29.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: rockchip: samsung-hdptx: Set drvdata before enabling runtime PM\n\nIn some cases, rk_hdptx_phy_runtime_resume() may be invoked before\nplatform_set_drvdata() is executed in ->probe(), leading to a NULL\npointer dereference when using the return of dev_get_drvdata().\n\nEnsure platform_set_drvdata() is called before devm_pm_runtime_enable()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7061849a4a1752a06944a819dd1f7bfd58df7383","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d23e48654620fdccfcc74cc2cef04eaf7353d07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57800","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:30.073","lastModified":"2025-01-11T13:15:30.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: memalloc: prefer dma_mapping_error() over explicit address checking\n\nWith CONFIG_DMA_API_DEBUG enabled, the following warning is observed:\n\nDMA-API: snd_hda_intel 0000:03:00.1: device driver failed to check map error[device address=0x00000000ffff0000] [size=20480 bytes] [mapped as single]\nWARNING: CPU: 28 PID: 2255 at kernel\/dma\/debug.c:1036 check_unmap+0x1408\/0x2430\nCPU: 28 UID: 42 PID: 2255 Comm: wireplumber Tainted: G  W L  6.12.0-10-133577cad6bf48e5a7848c4338124081393bfe8a+ #759\ndebug_dma_unmap_page+0xe9\/0xf0\nsnd_dma_wc_free+0x85\/0x130 [snd_pcm]\nsnd_pcm_lib_free_pages+0x1e3\/0x440 [snd_pcm]\nsnd_pcm_common_ioctl+0x1c9a\/0x2960 [snd_pcm]\nsnd_pcm_ioctl+0x6a\/0xc0 [snd_pcm]\n...\n\nCheck for returned DMA addresses using specialized dma_mapping_error()\nhelper which is generally recommended for this purpose by\nDocumentation\/core-api\/dma-api.rst."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c180c3f42d340e8dcb9094bb8ea7d477d37081a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa0308134d26dbbeb209a1581eea46df663866b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57804","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:30.233","lastModified":"2025-01-11T13:15:30.233","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix corrupt config pages PHY state is switched in sysfs\n\nThe driver, through the SAS transport, exposes a sysfs interface to\nenable\/disable PHYs in a controller\/expander setup.  When multiple PHYs\nare disabled and enabled in rapid succession, the persistent and current\nconfig pages related to SAS IO unit\/SAS Expander pages could get\ncorrupted.\n\nUse separate memory for each config request."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/711201a8b8334a397440ac0b859df0054e174bc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/869fdc6f0606060301aef648231e186c7c542f5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57805","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:30.420","lastModified":"2025-01-11T13:15:30.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: Intel: hda-dai: Do not release the link DMA on STOP\n\nThe linkDMA should not be released on stop trigger since a stream re-start\nmight happen without closing of the stream. This leaves a short time for\nother streams to 'steal' the linkDMA since it has been released.\n\nThis issue is not easy to reproduce under normal conditions as usually\nafter stop the stream is closed, or the same stream is restarted, but if\nanother stream got in between the stop and start, like this:\naplay -Dhw:0,3 -c2 -r48000 -fS32_LE \/dev\/zero -d 120\nCTRL+z\naplay -Dhw:0,0 -c2 -r48000 -fS32_LE \/dev\/zero -d 120\n\nthen the link DMA channels will be mixed up, resulting firmware error or\ncrash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/909ecf15cb70f78cdb5c930f58df01db039a0ff8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8d0ba147d901022bcb69da8d8fd817f84e9f3ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57806","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:30.597","lastModified":"2025-01-11T13:15:30.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix transaction atomicity bug when enabling simple quotas\n\nSet squota incompat bit before committing the transaction that enables\nthe feature.\n\nWith the config CONFIG_BTRFS_ASSERT enabled, an assertion\nfailure occurs regarding the simple quota feature.\n\n  [5.596534] assertion failed: btrfs_fs_incompat(fs_info, SIMPLE_QUOTA), in fs\/btrfs\/qgroup.c:365\n  [5.597098] ------------[ cut here ]------------\n  [5.597371] kernel BUG at fs\/btrfs\/qgroup.c:365!\n  [5.597946] CPU: 1 UID: 0 PID: 268 Comm: mount Not tainted 6.13.0-rc2-00031-gf92f4749861b #146\n  [5.598450] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04\/01\/2014\n  [5.599008] RIP: 0010:btrfs_read_qgroup_config+0x74d\/0x7a0\n  [5.604303]  <TASK>\n  [5.605230]  ? btrfs_read_qgroup_config+0x74d\/0x7a0\n  [5.605538]  ? exc_invalid_op+0x56\/0x70\n  [5.605775]  ? btrfs_read_qgroup_config+0x74d\/0x7a0\n  [5.606066]  ? asm_exc_invalid_op+0x1f\/0x30\n  [5.606441]  ? btrfs_read_qgroup_config+0x74d\/0x7a0\n  [5.606741]  ? btrfs_read_qgroup_config+0x74d\/0x7a0\n  [5.607038]  ? try_to_wake_up+0x317\/0x760\n  [5.607286]  open_ctree+0xd9c\/0x1710\n  [5.607509]  btrfs_get_tree+0x58a\/0x7e0\n  [5.608002]  vfs_get_tree+0x2e\/0x100\n  [5.608224]  fc_mount+0x16\/0x60\n  [5.608420]  btrfs_get_tree+0x2f8\/0x7e0\n  [5.608897]  vfs_get_tree+0x2e\/0x100\n  [5.609121]  path_mount+0x4c8\/0xbc0\n  [5.609538]  __x64_sys_mount+0x10d\/0x150\n\nThe issue can be easily reproduced using the following reproducer:\n\n  root@q:linux# cat repro.sh\n  set -e\n\n  mkfs.btrfs -q -f \/dev\/sdb\n  mount \/dev\/sdb \/mnt\/btrfs\n  btrfs quota enable -s \/mnt\/btrfs\n  umount \/mnt\/btrfs\n  mount \/dev\/sdb \/mnt\/btrfs\n\nThe issue is that when enabling quotas, at btrfs_quota_enable(), we set\nBTRFS_QGROUP_STATUS_FLAG_SIMPLE_MODE at fs_info->qgroup_flags and persist\nit in the quota root in the item with the key BTRFS_QGROUP_STATUS_KEY, but\nwe only set the incompat bit BTRFS_FEATURE_INCOMPAT_SIMPLE_QUOTA after we\ncommit the transaction used to enable simple quotas.\n\nThis means that if after that transaction commit we unmount the filesystem\nwithout starting and committing any other transaction, or we have a power\nfailure, the next time we mount the filesystem we will find the flag\nBTRFS_QGROUP_STATUS_FLAG_SIMPLE_MODE set in the item with the key\nBTRFS_QGROUP_STATUS_KEY but we will not find the incompat bit\nBTRFS_FEATURE_INCOMPAT_SIMPLE_QUOTA set in the superblock, triggering an\nassertion failure at:\n\n  btrfs_read_qgroup_config() -> qgroup_read_enable_gen()\n\nTo fix this issue, set the BTRFS_FEATURE_INCOMPAT_SIMPLE_QUOTA flag\nimmediately after setting the BTRFS_QGROUP_STATUS_FLAG_SIMPLE_MODE.\nThis ensures that both flags are flushed to disk within the same\ntransaction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b87c9b9ba05ba6e8e2ee9ecd29a8c930b35648ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2363e6fcc7938c5f0f6ac066fad0dd247598b51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57807","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T13:15:30.790","lastModified":"2025-01-11T13:15:30.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: megaraid_sas: Fix for a potential deadlock\n\nThis fixes a 'possible circular locking dependency detected' warning\n      CPU0                    CPU1\n      ----                    ----\n lock(&instance->reset_mutex);\n                              lock(&shost->scan_mutex);\n                              lock(&instance->reset_mutex);\n lock(&shost->scan_mutex);\n\nFix this by temporarily releasing the reset_mutex."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c654998a3e8167a58b6c6fede545fe400a4b554","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/466ca39dbf5d0ba71c16b15c27478a9c7d4022a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50740f4dc78b41dec7c8e39772619d5ba841ddd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78afb9bfad00c4aa58a424111d7edbcab9452f2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edadc693bfcc0f1ea08b8fa041c9361fd042410d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f36d024bd15ed356a80dda3ddc46d0a62aa55815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f50783148ec98a1d38b87422e2ceaf2380b7b606","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57809","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T14:15:25.080","lastModified":"2025-01-11T14:15:25.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: imx6: Fix suspend\/resume support on i.MX6QDL\n\nThe suspend\/resume functionality is currently broken on the i.MX6QDL\nplatform, as documented in the NXP errata (ERR005723):\n\n  https:\/\/www.nxp.com\/docs\/en\/errata\/IMX6DQCE.pdf\n\nThis patch addresses the issue by sharing most of the suspend\/resume\nsequences used by other i.MX devices, while avoiding modifications to\ncritical registers that disrupt the PCIe functionality. It targets the\nsame problem as the following downstream commit:\n\n  https:\/\/github.com\/nxp-imx\/linux-imx\/commit\/4e92355e1f79d225ea842511fcfd42b343b32995\n\nUnlike the downstream commit, this patch also resets the connected PCIe\ndevice if possible. Without this reset, certain drivers, such as ath10k\nor iwlwifi, will crash on resume. The device reset is also done by the\ndriver on other i.MX platforms, making this patch consistent with\nexisting practices.\n\nUpon resuming, the kernel will hang and display an error. Here's an\nexample of the error encountered with the ath10k driver:\n\n  ath10k_pci 0000:01:00.0: Unable to change power state from D3hot to D0, device inaccessible\n  Unhandled fault: imprecise external abort (0x1406) at 0x0106f944\n\nWithout this patch, suspend\/resume will fail on i.MX6QDL devices if a\nPCIe device is connected.\n\n[kwilczynski: commit log, added tag for stable releases]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a726f542d7c8cc0f9c5ed7df5a4bd4b59ac21b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac43ea3d27a8f9beadf3af66c9ea4a566ebfff1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57838","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T14:15:25.940","lastModified":"2025-01-11T14:15:25.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/entry: Mark IRQ entries to fix stack depot warnings\n\nThe stack depot filters out everything outside of the top interrupt\ncontext as an uninteresting or irrelevant part of the stack traces. This\nhelps with stack trace de-duplication, avoiding an explosion of saved\nstack traces that share the same IRQ context code path but originate\nfrom different randomly interrupted points, eventually exhausting the\nstack depot.\n\nFiltering uses in_irqentry_text() to identify functions within the\n.irqentry.text and .softirqentry.text sections, which then become the\nlast stack trace entries being saved.\n\nWhile __do_softirq() is placed into the .softirqentry.text section by\ncommon code, populating .irqentry.text is architecture-specific.\n\nCurrently, the .irqentry.text section on s390 is empty, which prevents\nstack depot filtering and de-duplication and could result in warnings\nlike:\n\nStack depot reached limit capacity\nWARNING: CPU: 0 PID: 286113 at lib\/stackdepot.c:252 depot_alloc_stack+0x39a\/0x3c8\n\nwith PREEMPT and KASAN enabled.\n\nFix this by moving the IO\/EXT interrupt handlers from .kprobes.text into\nthe .irqentry.text section and updating the kprobes blacklist to include\nthe .irqentry.text section.\n\nThis is done only for asynchronous interrupts and explicitly not for\nprogram checks, which are synchronous and where the context beyond the\nprogram check is important to preserve. Despite machine checks being\nsomewhat in between, they are extremely rare, and preserving context\nwhen possible is also of value.\n\nSVCs and Restart Interrupts are not relevant, one being always at the\nboundary to user space and the other being a one-time thing.\n\nIRQ entries filtering is also optionally used in ftrace function graph,\nwhere the same logic applies."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1af22528fee8072b7adc007b8ca49cc4ea62689e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45c9f2b856a075a34873d00788d2e8a250c1effd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/473ffae3030188f1c6b80e1b3631a26b4adf7b32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bb7a2c3afcf8732dc65ea49c09147b07da1d993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca687fdce5b95f84d91d6e36ac77047771eb3dfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57839","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.050","lastModified":"2025-01-11T15:15:07.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"readahead: properly shorten readahead when falling back to do_page_cache_ra()\"\n\nThis reverts commit 7c877586da3178974a8a94577b6045a48377ff25.\n\nAnders and Philippe have reported that recent kernels occasionally hang\nwhen used with NFS in readahead code.  The problem has been bisected to\n7c877586da3 (\"readahead: properly shorten readahead when falling back to\ndo_page_cache_ra()\").  The cause of the problem is that ra->size can be\nshrunk by read_pages() call and subsequently we end up calling\ndo_page_cache_ra() with negative (read huge positive) number of pages. \nLet's revert 7c877586da3 for now until we can find a proper way how the\nlogic in read_pages() and page_cache_ra_order() can coexist.  This can\nlead to reduced readahead throughput due to readahead window confusion but\nthat's better than outright hangs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/85351e4941a253e4c50fb7048bfc19b60b4ec44b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a220d6b95b1ae12c7626283d7609f0a1438e6437","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57843","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.170","lastModified":"2025-01-11T15:15:07.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-net: fix overflow inside virtnet_rq_alloc\n\nWhen the frag just got a page, then may lead to regression on VM.\nSpecially if the sysctl net.core.high_order_alloc_disable value is 1,\nthen the frag always get a page when do refill.\n\nWhich could see reliable crashes or scp failure (scp a file 100M in size\nto VM).\n\nThe issue is that the virtnet_rq_dma takes up 16 bytes at the beginning\nof a new frag. When the frag size is larger than PAGE_SIZE,\neverything is fine. However, if the frag is only one page and the\ntotal size of the buffer and virtnet_rq_dma is larger than one page, an\noverflow may occur.\n\nThe commit f9dac92ba908 (\"virtio_ring: enable premapped mode whatever\nuse_dma_api\") introduced this problem. And we reverted some commits to\nfix this in last linux version. Now we try to enable it and fix this\nbug directly.\n\nHere, when the frag size is not enough, we reduce the buffer len to fix\nthis problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/67a11de8965c2ab19e215fb6651d44847e068614","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aacd1484468361d1d04badfe75f264fa5314864","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8f7d6963768b114ec9644ff0148dde4c104e84b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57849","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.290","lastModified":"2025-01-11T15:15:07.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/cpum_sf: Handle CPU hotplug remove during sampling\n\nCPU hotplug remove handling triggers the following function\ncall sequence:\n\n   CPUHP_AP_PERF_S390_SF_ONLINE  --> s390_pmu_sf_offline_cpu()\n   ...\n   CPUHP_AP_PERF_ONLINE          --> perf_event_exit_cpu()\n\nThe s390 CPUMF sampling CPU hotplug handler invokes:\n\n s390_pmu_sf_offline_cpu()\n +-->  cpusf_pmu_setup()\n       +--> setup_pmc_cpu()\n            +--> deallocate_buffers()\n\nThis function de-allocates all sampling data buffers (SDBs) allocated\nfor that CPU at event initialization. It also clears the\nPMU_F_RESERVED bit. The CPU is gone and can not be sampled.\n\nWith the event still being active on the removed CPU, the CPU event\nhotplug support in kernel performance subsystem triggers the\nfollowing function calls on the removed CPU:\n\n  perf_event_exit_cpu()\n  +--> perf_event_exit_cpu_context()\n       +--> __perf_event_exit_context()\n\t    +--> __perf_remove_from_context()\n\t         +--> event_sched_out()\n\t              +--> cpumsf_pmu_del()\n\t                   +--> cpumsf_pmu_stop()\n                                +--> hw_perf_event_update()\n\nto stop and remove the event. During removal of the event, the\nsampling device driver tries to read out the remaining samples from\nthe sample data buffers (SDBs). But they have already been freed\n(and may have been re-assigned). This may lead to a use after free\nsituation in which case the samples are most likely invalid. In the\nbest case the memory has not been reassigned and still contains\nvalid data.\n\nRemedy this situation and check if the CPU is still in reserved\nstate (bit PMU_F_RESERVED set). In this case the SDBs have not been\nreleased an contain valid data. This is always the case when\nthe event is removed (and no CPU hotplug off occured).\nIf the PMU_F_RESERVED bit is not set, the SDB buffers are gone."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06a92f810df8037ca36157282ddcbefdcaf049b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/238e3af849dfdcb1faed544349f7025e533f9aab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99192c735ed4bfdff0d215ec85c8a87a677cb898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0bd7dacbd51c632b8e2c0500b479af564afadf3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a69752f1e5de817941a2ea0609254f6f25acd274","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5be6a0bb639d165c8418d8dddd8f322587be8be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be54e6e0f93a39a9c00478d70d12956a5f3d5b9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57850","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.423","lastModified":"2025-01-11T15:15:07.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: Prevent rtime decompress memory corruption\n\nThe rtime decompression routine does not fully check bounds during the\nentirety of the decompression pass and can corrupt memory outside the\ndecompression buffer if the compressed data is corrupted. This adds the\nrequired check to prevent this failure mode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/421f9e9f0fae9f8e721ffa07f22d9765fa1214d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47c9a7f81027a78afea9d2e9a54bfd8fabb6b3d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6808a1812a3419542223e7fe9e2de577e99e45d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd384b04ad1995441b18fe6c1366d02de8c5d5eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc39b08fcc3831b0bc46add91ba93cd2aab50716","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6fc251baefc3cdc4f41f2f5a47940d7d4a67332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe051552f5078fa02d593847529a3884305a6ffe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57872","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.560","lastModified":"2025-01-11T15:15:07.560","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: pltfrm: Dellocate HBA during ufshcd_pltfrm_remove()\n\nThis will ensure that the scsi host is cleaned up properly using\nscsi_host_dev_release(). Otherwise, it may lead to memory leaks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/897df60c16d54ad515a3d0887edab5c63da06d1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd188519d2467ab4c2141587b0551ba030abff0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57874","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.680","lastModified":"2025-01-11T15:15:07.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: ptrace: fix partial SETREGSET for NT_ARM_TAGGED_ADDR_CTRL\n\nCurrently tagged_addr_ctrl_set() doesn't initialize the temporary 'ctrl'\nvariable, and a SETREGSET call with a length of zero will leave this\nuninitialized. Consequently tagged_addr_ctrl_set() will consume an\narbitrary value, potentially leaking up to 64 bits of memory from the\nkernel stack. The read is limited to a specific slot on the stack, and\nthe issue does not provide a write mechanism.\n\nAs set_tagged_addr_ctrl() only accepts values where bits [63:4] zero and\nrejects other values, a partial SETREGSET attempt will randomly succeed\nor fail depending on the value of the uninitialized value, and the\nexposure is significantly limited.\n\nFix this by initializing the temporary value before copying the regset\nfrom userspace, as for other regsets (e.g. NT_PRSTATUS, NT_PRFPREG,\nNT_ARM_SYSTEM_CALL). In the case of a zero-length write, the existing\nvalue of the tagged address ctrl will be retained.\n\nThe NT_ARM_TAGGED_ADDR_CTRL regset is only visible in the\nuser_aarch64_view used by a native AArch64 task to manipulate another\nnative AArch64 task. As get_tagged_addr_ctrl() only returns an error\nvalue when called for a compat task, tagged_addr_ctrl_get() and\ntagged_addr_ctrl_set() should never observe an error value from\nget_tagged_addr_ctrl(). Add a WARN_ON_ONCE() to both to indicate that\nsuch an error would be unexpected, and error handlnig is not missing in\neither case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1152dd13845efde5554f80c7e1233bae1d26bd3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1370cf3eb5495d70e00547598583a4cd45b40b99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c176f5155ee6161fee6f416b64aa50394d3f220","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96035c0093db258975b8887676afe59a64c34a72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abd614bbfcee73247495bd9472da8f85ac83546e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca62d90085f4af36de745883faab9f8a7cbb45d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.803","lastModified":"2025-01-11T15:15:07.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: RCU protect disk->conv_zones_bitmap\n\nEnsure that a disk revalidation changing the conventional zones bitmap\nof a disk does not cause invalid memory references when using the\ndisk_zone_is_conv() helper by RCU protecting the disk->conv_zones_bitmap\npointer.\n\ndisk_zone_is_conv() is modified to operate under the RCU read lock and\nthe function disk_set_conv_zones_bitmap() is added to update a disk\nconv_zones_bitmap pointer using rcu_replace_pointer() with the disk\nzone_wplugs_lock spinlock held.\n\ndisk_free_zone_resources() is modified to call\ndisk_update_zone_resources() with a NULL bitmap pointer to free the disk\nconv_zones_bitmap. disk_set_conv_zones_bitmap() is also used in\ndisk_update_zone_resources() to set the new (revalidated) bitmap and\nfree the old one."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/493326c4f10cc71a42c27fdc97ce112182ee4cbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7cb6d7414ea1b33536fa6d11805cb8dceec1f97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:07.930","lastModified":"2025-01-11T15:15:07.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/dp_mst: Fix resetting msg rx state after topology removal\n\nIf the MST topology is removed during the reception of an MST down reply\nor MST up request sideband message, the\ndrm_dp_mst_topology_mgr::up_req_recv\/down_rep_recv states could be reset\nfrom one thread via drm_dp_mst_topology_mgr_set_mst(false), racing with\nthe reading\/parsing of the message from another thread via\ndrm_dp_mst_handle_down_rep() or drm_dp_mst_handle_up_req(). The race is\npossible since the reader\/parser doesn't hold any lock while accessing\nthe reception state. This in turn can lead to a memory corruption in the\nreader\/parser as described by commit bd2fccac61b4 (\"drm\/dp_mst: Fix MST\nsideband message body length check\").\n\nFix the above by resetting the message reception state if needed before\nreading\/parsing a message. Another solution would be to hold the\ndrm_dp_mst_topology_mgr::lock for the whole duration of the message\nreception\/parsing in drm_dp_mst_handle_down_rep() and\ndrm_dp_mst_handle_up_req(), however this would require a bigger change.\nSince the fix is also needed for stable, opting for the simpler solution\nin this patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/94b33b2d7640e807869451384eb88321dd0ffbd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6fa67d26de385c3c7a23c1e109a0e23bfda4ec7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be826b4451fd187a7c0b04be4f8243d5df6e0450","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d834d20d2e86c52ed5cab41763fa61e6071680ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57877","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:08.063","lastModified":"2025-01-11T15:15:08.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: ptrace: fix partial SETREGSET for NT_ARM_POE\n\nCurrently poe_set() doesn't initialize the temporary 'ctrl' variable,\nand a SETREGSET call with a length of zero will leave this\nuninitialized. Consequently an arbitrary value will be written back to\ntarget->thread.por_el0, potentially leaking up to 64 bits of memory from\nthe kernel stack. The read is limited to a specific slot on the stack,\nand the issue does not provide a write mechanism.\n\nFix this by initializing the temporary value before copying the regset\nfrom userspace, as for other regsets (e.g. NT_PRSTATUS, NT_PRFPREG,\nNT_ARM_SYSTEM_CALL). In the case of a zero-length write, the existing\ncontents of POR_EL1 will be retained.\n\nBefore this patch:\n\n| # .\/poe-test\n| Attempting to write NT_ARM_POE::por_el0 = 0x900d900d900d900d\n| SETREGSET(nt=0x40f, len=8) wrote 8 bytes\n|\n| Attempting to read NT_ARM_POE::por_el0\n| GETREGSET(nt=0x40f, len=8) read 8 bytes\n| Read NT_ARM_POE::por_el0 = 0x900d900d900d900d\n|\n| Attempting to write NT_ARM_POE (zero length)\n| SETREGSET(nt=0x40f, len=0) wrote 0 bytes\n|\n| Attempting to read NT_ARM_POE::por_el0\n| GETREGSET(nt=0x40f, len=8) read 8 bytes\n| Read NT_ARM_POE::por_el0 = 0xffff8000839c3d50\n\nAfter this patch:\n\n| # .\/poe-test\n| Attempting to write NT_ARM_POE::por_el0 = 0x900d900d900d900d\n| SETREGSET(nt=0x40f, len=8) wrote 8 bytes\n|\n| Attempting to read NT_ARM_POE::por_el0\n| GETREGSET(nt=0x40f, len=8) read 8 bytes\n| Read NT_ARM_POE::por_el0 = 0x900d900d900d900d\n|\n| Attempting to write NT_ARM_POE (zero length)\n| SETREGSET(nt=0x40f, len=0) wrote 0 bytes\n|\n| Attempting to read NT_ARM_POE::por_el0\n| GETREGSET(nt=0x40f, len=8) read 8 bytes\n| Read NT_ARM_POE::por_el0 = 0x900d900d900d900d"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4105dd76bc8ad6529d47157ef0565cb84ca6676c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/594bfc4947c4fcabba1318d8384c61a29a6b89fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57878","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:08.190","lastModified":"2025-01-11T15:15:08.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: ptrace: fix partial SETREGSET for NT_ARM_FPMR\n\nCurrently fpmr_set() doesn't initialize the temporary 'fpmr' variable,\nand a SETREGSET call with a length of zero will leave this\nuninitialized. Consequently an arbitrary value will be written back to\ntarget->thread.uw.fpmr, potentially leaking up to 64 bits of memory from\nthe kernel stack. The read is limited to a specific slot on the stack,\nand the issue does not provide a write mechanism.\n\nFix this by initializing the temporary value before copying the regset\nfrom userspace, as for other regsets (e.g. NT_PRSTATUS, NT_PRFPREG,\nNT_ARM_SYSTEM_CALL). In the case of a zero-length write, the existing\ncontents of FPMR will be retained.\n\nBefore this patch:\n\n| # .\/fpmr-test\n| Attempting to write NT_ARM_FPMR::fpmr = 0x900d900d900d900d\n| SETREGSET(nt=0x40e, len=8) wrote 8 bytes\n|\n| Attempting to read NT_ARM_FPMR::fpmr\n| GETREGSET(nt=0x40e, len=8) read 8 bytes\n| Read NT_ARM_FPMR::fpmr = 0x900d900d900d900d\n|\n| Attempting to write NT_ARM_FPMR (zero length)\n| SETREGSET(nt=0x40e, len=0) wrote 0 bytes\n|\n| Attempting to read NT_ARM_FPMR::fpmr\n| GETREGSET(nt=0x40e, len=8) read 8 bytes\n| Read NT_ARM_FPMR::fpmr = 0xffff800083963d50\n\nAfter this patch:\n\n| # .\/fpmr-test\n| Attempting to write NT_ARM_FPMR::fpmr = 0x900d900d900d900d\n| SETREGSET(nt=0x40e, len=8) wrote 8 bytes\n|\n| Attempting to read NT_ARM_FPMR::fpmr\n| GETREGSET(nt=0x40e, len=8) read 8 bytes\n| Read NT_ARM_FPMR::fpmr = 0x900d900d900d900d\n|\n| Attempting to write NT_ARM_FPMR (zero length)\n| SETREGSET(nt=0x40e, len=0) wrote 0 bytes\n|\n| Attempting to read NT_ARM_FPMR::fpmr\n| GETREGSET(nt=0x40e, len=8) read 8 bytes\n| Read NT_ARM_FPMR::fpmr = 0x900d900d900d900d"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ab73c34e3c5b580721696665eabd799346bc50b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5d71291841aecfe5d8435da2dfa7f58ccd18bc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57879","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:08.317","lastModified":"2025-01-11T15:15:08.317","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: iso: Always release hdev at the end of iso_listen_bis\n\nSince hci_get_route holds the device before returning, the hdev\nshould be released with hci_dev_put at the end of iso_listen_bis\neven if the function returns with an error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ca50db1c567d658d173c5ef3ee6c52b0b03603c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c76fff747a73ba01d1d87ed53dd9c00cb40ba05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57880","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:08.440","lastModified":"2025-01-11T15:15:08.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: sof_sdw: Add space for a terminator into DAIs array\n\nThe code uses the initialised member of the asoc_sdw_dailink struct to\ndetermine if a member of the array is in use. However in the case the\narray is completely full this will lead to an access 1 past the end of\nthe array, expand the array by one entry to include a space for a\nterminator."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/255cc582e6e16191a20d54bcdbca6c91d3e90c5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b21a849764a4111b0bc14a5ffe987a0582419de2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23124","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:08.930","lastModified":"2025-01-11T15:15:08.930","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-23125","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:09.023","lastModified":"2025-01-11T15:15:09.023","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-23126","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:09.100","lastModified":"2025-01-11T15:15:09.100","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-23127","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:09.173","lastModified":"2025-01-11T15:15:09.173","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-23128","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T15:15:09.250","lastModified":"2025-01-11T15:15:09.250","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2024-57881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-01-11T16:15:24.307","lastModified":"2025-01-11T16:15:24.307","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/page_alloc: don't call pfn_to_page() on possibly non-existent PFN in split_large_buddy()\n\nIn split_large_buddy(), we might call pfn_to_page() on a PFN that might\nnot exist.  In corner cases, such as when freeing the highest pageblock in\nthe last memory section, this could result with CONFIG_SPARSEMEM &&\n!CONFIG_SPARSEMEM_EXTREME in __pfn_to_section() returning NULL and and\n__section_mem_map_addr() dereferencing that NULL pointer.\n\nLet's fix it, and avoid doing a pfn_to_page() call for the first\niteration, where we already have the page.\n\nSo far this was found by code inspection, but let's just CC stable as the\nfix is easy."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4234ca9884bcae9e48ed38652d91696ad5cd591d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faeec8e23c10bd30e8aa759a2eb3018dae00f924","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-29669","sourceIdentifier":"psirt@us.ibm.com","published":"2025-01-12T02:15:18.750","lastModified":"2025-01-12T02:15:18.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Jazz Foundation 6.0.6, 6.0.6.1, 7.0, 7.0.1, and 7.0.2 is vulnerable to cross-site scripting. This vulnerability allows users to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7180689","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2024-49785","sourceIdentifier":"psirt@us.ibm.com","published":"2025-01-12T02:15:18.973","lastModified":"2025-01-12T02:15:18.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"IBM watsonx.ai 1.1 through 2.0.3 and IBM watsonx.ai on Cloud Pak for Data 4.8 through 5.0.3 is vulnerable to cross-site scripting. This vulnerability allows an authenticated user to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7180723","source":"psirt@us.ibm.com"}]}}]}