{"resultsPerPage":558,"startIndex":0,"totalResults":558,"format":"NVD_CVE","version":"2.0","timestamp":"2025-05-02T20:14:54.178","vulnerabilities":[{"cve":{"id":"CVE-2025-4143","sourceIdentifier":"cna@cloudflare.com","published":"2025-05-01T01:15:54.127","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The OAuth implementation in workers-oauth-provider that is part of  MCP framework https:\/\/github.com\/cloudflare\/workers-mcp , did not correctly validate that redirect_uri was on the allowed list of redirect URIs for the given client registration.\n\nFixed in:  https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/26 https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/26 \n\nImpact:\n\n \n\nUnder certain circumstances (see below), if a victim had previously authorized with a server built on workers-oath-provider, and an attacker could later trick the victim into visiting a malicious web site, then attacker could potentially steal the victim's credentials to the same OAuth server and subsequently impersonate them.\n\nIn order for the attack to be possible, the OAuth server's authorized callback must be designed to auto-approve authorizations that appear to come from an OAuth client that the victim has authorized previously. The authorization flow is not implemented by workers-oauth-provider; it is up to the application built on top to decide whether to implement such automatic re-authorization. However, many applications do implement such logic.\n\nNote: It is a basic, well-known requirement that OAuth servers should verify that the redirect URI is among the allowed list for the client, both during the authorization flow and subsequently when exchanging the authorization code for an access token. workers-oauth-provider implemented only the latter check, not the former. Unfortunately, the former is the much more important check. Readers who are familiar with OAuth may recognize that failing to check redirect URIs against the allowed list is a well-known, basic mistake, covered extensively in the RFC and elsewhere. The author of this library would like everyone to know that he was, in fact, well-aware of this requirement, thought about it a lot while designing the library, and then, somehow, forgot to actually make sure the check was in the code. That is, it's not that he didn't know what he was doing, it's that he knew what he was doing but flubbed it."}],"metrics":{"cvssMetricV40":[{"source":"cna@cloudflare.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:H\/AT:P\/PR:N\/UI:P\/VC:H\/VI:N\/VA:N\/SC:L\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:Amber","baseScore":6.0,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","attackRequirements":"PRESENT","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"LOW","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"AMBER"}}]},"weaknesses":[{"source":"cna@cloudflare.com","type":"Secondary","description":[{"lang":"en","value":"CWE-601"}]}],"references":[{"url":"https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/26","source":"cna@cloudflare.com"}]}},{"cve":{"id":"CVE-2025-4144","sourceIdentifier":"cna@cloudflare.com","published":"2025-05-01T01:15:54.267","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"PKCE was implemented in the OAuth implementation in workers-oauth-provider that is part of  MCP framework https:\/\/github.com\/cloudflare\/workers-mcp . However, it was found that an attacker could cause the check to be skipped.\n\n\nFixed in:\n\n \n\n https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/27 https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/27 \n\n\nImpact: \n\nPKCE is a defense-in-depth mechanism against certain kinds of attacks and was an optional extension in OAuth 2.0 which became required in the OAuth 2.1 draft. (Note that the MCP specification requires OAuth 2.1.). This bug completely bypasses PKCE protection."}],"metrics":{"cvssMetricV40":[{"source":"cna@cloudflare.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:Amber","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"AMBER"}}]},"weaknesses":[{"source":"cna@cloudflare.com","type":"Secondary","description":[{"lang":"en","value":"CWE-287"}]}],"references":[{"url":"https:\/\/github.com\/cloudflare\/workers-oauth-provider\/pull\/27","source":"cna@cloudflare.com"}]}},{"cve":{"id":"CVE-2025-4145","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T01:15:54.393","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in Netgear EX6200 1.0.3.94. This issue affects the function sub_3D0BC. The manipulation of the argument host leads to buffer overflow. The attack may be initiated remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_3D0BC-gui_region\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306677","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306677","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560799","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4146","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T02:15:17.687","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in Netgear EX6200 1.0.3.94. Affected is the function sub_41940. The manipulation of the argument host leads to buffer overflow. It is possible to launch the attack remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_41940-smb_host_name\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306678","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306678","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560800","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4147","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T02:15:17.947","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in Netgear EX6200 1.0.3.94 and classified as critical. Affected by this vulnerability is the function sub_47F7C. The manipulation of the argument host leads to buffer overflow. The attack can be launched remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_47F7C-media_name\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306679","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306679","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560801","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-2816","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T03:15:14.627","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Page View Count plugin for WordPress is vulnerable to unauthorized modification of data that can lead to a denial of service due to a missing capability check on the yellow_message_dontshow() function in versions 2.8.0 to 2.8.4. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update option values to one on the WordPress site. This can be leveraged to update an option that would create an error on the site and deny service to legitimate users or be used to set some values to true such as registration."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:H\/A:H","baseScore":8.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=3282975%40page-views-count&new=3282975%40page-views-count&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e6fb9558-06e5-4297-93df-ee9a6971f0ec?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1304","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T04:16:43.183","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The NewsBlogger theme for WordPress is vulnerable to arbitrary file uploads due to a missing capability check on the newsblogger_install_and_activate_plugin() function in all versions up to, and including, 0.2.5.1. This makes it possible for authenticated attackers, with subscriber-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/themes.trac.wordpress.org\/browser\/newsblogger\/0.2.5.5\/functions.php?annotate=blame&rev=269615#file2","source":"security@wordfence.com"},{"url":"https:\/\/themes.trac.wordpress.org\/browser\/newsblogger\/0.2\/functions.php#L440","source":"security@wordfence.com"},{"url":"https:\/\/themes.trac.wordpress.org\/browser\/newsblogger\/0.2\/functions.php#L461","source":"security@wordfence.com"},{"url":"https:\/\/themes.trac.wordpress.org\/browser\/newsblogger\/0.2\/functions.php#L470","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/85cea6b5-d57b-495e-a504-a0c1ba691637?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1305","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T04:16:47.947","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The NewsBlogger theme for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 0.2.5.4. This is due to missing or incorrect nonce validation on the newsblogger_install_and_activate_plugin() function. This makes it possible for unauthenticated attackers to upload arbitrary files and achieve remote code execution via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/themes.trac.wordpress.org\/browser\/newsblogger\/0.2\/functions.php#L440","source":"security@wordfence.com"},{"url":"https:\/\/themes.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&old=269615%40newsblogger&new=269615%40newsblogger&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/7b2cac27-4a36-490f-b2d8-3c6f32843a38?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-2168","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T04:16:53.127","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Ultimate Store Kit Elementor Addons, Woocommerce Builder, EDD Builder, Elementor Store Builder, Product Grid, Product Table, Woocommerce Slider plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.4.1. This is due to missing or incorrect nonce validation on the dismiss() function. This makes it possible for unauthenticated attackers to set arbitrary user meta values to `1` which can be leveraged to lock and administrator out of their site via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/ultimate-store-kit\/tags\/2.3.6\/admin\/admin-notice.php#L43","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3255125\/ultimate-store-kit\/trunk\/admin\/admin-notice.php","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3283438\/ultimate-store-kit\/trunk\/admin\/admin-notice.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a48634d7-30c9-4124-87dd-93a303a969eb?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4148","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T04:16:58.113","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in Netgear EX6200 1.0.3.94 and classified as critical. Affected by this issue is the function sub_503FC. The manipulation of the argument host leads to buffer overflow. The attack may be launched remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_503FC-gui_region\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306680","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306680","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560802","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4149","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T04:16:58.323","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in Netgear EX6200 1.0.3.94. It has been classified as critical. This affects the function sub_54014. The manipulation of the argument host leads to buffer overflow. It is possible to initiate the attack remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_54014-gui_region\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306681","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306681","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560803","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-13845","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T05:15:51.583","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Gravity Forms WebHooks plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.6.0 via the 'process_feed' method of the GF_Webhooks class This makes it possible for authenticated attackers, with Administrator-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":5.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/www.gravityforms.com\/blog\/brand-new-release-webhooks-add-on-1-7\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/9311b20b-daad-408f-a1a0-d1e42573ab97?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3952","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T05:15:52.020","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Projectopia – WordPress Project Management plugin for WordPress is vulnerable to unauthorized modification of data that can lead to a denial of service due to a missing capability check on the 'pto_remove_logo' function in all versions up to, and including, 5.1.16. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete arbitrary option values on the WordPress site. This can be leveraged to delete an option that would create an error on the site and deny service to legitimate users."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:H\/A:H","baseScore":8.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/projectopia-core\/trunk\/includes\/functions\/admin\/admin_functions.php#L838","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284330\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/de7489e8-fe18-4a80-832c-aa62424c538b?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4099","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T05:15:52.167","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The List Children plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'list_children' shortcode in all versions up to, and including, 2.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/list-children\/trunk\/list_children.php#L26","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284430\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/538b4d4b-f8c6-44db-89d2-d345bfbfecb2?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4150","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T05:15:52.313","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in Netgear EX6200 1.0.3.94. It has been declared as critical. This vulnerability affects the function sub_54340. The manipulation of the argument host leads to buffer overflow. The attack can be initiated remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:C\/I:C\/A:C","baseScore":9.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"COMPLETE","integrityImpact":"COMPLETE","availabilityImpact":"COMPLETE"},"baseSeverity":"HIGH","exploitabilityScore":8.0,"impactScore":10.0,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/jylsec\/vuldb\/blob\/main\/Netgear\/netgear_ex6200\/Buffer_overflow-sub_54340-gui_region\/README.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306682","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306682","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560804","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-13381","sourceIdentifier":"contact@wpscan.com","published":"2025-05-01T06:15:33.553","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Calculated Fields Form WordPress plugin before 5.2.62 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."},{"lang":"es","value":"El complemento Calculated Fields Form de WordPress anterior a la versión 5.2.62 no depura ni escapa de algunas de sus configuraciones, lo que podría permitir a usuarios con privilegios elevados como el administrador realizar ataques de Cross-Site Scripting almacenado incluso cuando la capacidad unfiltered_html no está permitida (por ejemplo, en una configuración de varios sitios)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/da099e52-7f7b-4d76-a0bc-a46315510e0a\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-3502","sourceIdentifier":"contact@wpscan.com","published":"2025-05-01T06:15:34.820","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Maps  WordPress plugin before 4.7.2 does not sanitise and escape some of its Map settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."},{"lang":"es","value":"El complemento WP Maps para WordPress anterior a la versión 4.7.2 no depura ni escapa de algunas de sus configuraciones de mapas, lo que podría permitir a usuarios con privilegios elevados como el administrador realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no está permitida (por ejemplo, en una configuración de varios sitios)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/dd436064-e611-4a4b-a873-67ed6029c46f\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-3503","sourceIdentifier":"contact@wpscan.com","published":"2025-05-01T06:15:34.910","lastModified":"2025-05-02T16:15:33.967","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Maps  WordPress plugin before 4.7.2 does not sanitise and escape some of its Map settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:H\/I:N\/A:N","baseScore":4.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":3.6}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/83ddd432-309f-4ff5-974c-fdc9c67d1051\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-3504","sourceIdentifier":"contact@wpscan.com","published":"2025-05-01T06:15:35.013","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Maps  WordPress plugin before 4.7.2 does not sanitise and escape some of its Map settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."},{"lang":"es","value":"El complemento WP Maps para WordPress anterior a la versión 4.7.2 no depura ni escapa de algunas de sus configuraciones de mapas, lo que podría permitir a usuarios con privilegios elevados como el administrador realizar ataques de Cross-Site Scripting Almacenado incluso cuando la capacidad unfiltered_html no está permitida (por ejemplo, en una configuración de varios sitios)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/252484a6-96f0-43f3-a7dc-d20cc89ba119\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-4151","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T06:15:35.130","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PHPGurukul Curfew e-Pass Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/admin\/pass-bwdates-reports-details.php. The manipulation of the argument fromdate leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/faithhard\/cve\/issues\/1","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306683","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306683","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560806","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4152","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T06:15:35.657","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in PHPGurukul Online Birth Certificate System 1.0. Affected is an unknown function of the file \/admin\/bwdates-reports-details.php. The manipulation of the argument fromdate leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/faithhard\/cve\/issues\/2","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306684","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306684","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560808","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-3521","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T07:15:58.223","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Team Members – Best WordPress Team Plugin with Team Slider, Team Showcase & Team Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via Social Link icons in all versions up to, and including, 3.4.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-80"}]}],"references":[{"url":"https:\/\/wordpress.org\/plugins\/wps-team\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/93b83e65-09d6-4ad5-85f3-d18a9a35f39d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-47153","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T07:15:58.520","lastModified":"2025-05-02T19:15:55.930","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Certain build processes for libuv and Node.js for 32-bit systems, such as for the nodejs binary package through nodejs_20.19.0+dfsg-2_i386.deb for Debian GNU\/Linux, have an inconsistent off_t size (e.g., building on i386 Debian always uses _FILE_OFFSET_BITS=64 for the libuv dynamic library, but uses the _FILE_OFFSET_BITS global system default of 32 for nodejs), leading to out-of-bounds access. NOTE: this is not a problem in the Node.js software itself. In particular, the Node.js website's download page does not offer prebuilt Node.js for Linux on i386."},{"lang":"es","value":"Ciertos procesos de compilación para libuv y Node.js en sistemas de 32 bits, como el paquete binario nodejs hasta nodejs_20.19.0+dfsg-2_i386.deb para Debian GNU\/Linux, tienen un tamaño de archivo off_t inconsistente (p. ej., al compilar en Debian i386 siempre se usa _FILE_OFFSET_BITS=64 para la biblioteca dinámica libuv, pero se usa el valor predeterminado del sistema global _FILE_OFFSET_BITS de 32 para nodejs), lo que provoca accesos fuera de los límites. NOTA: Esto no es un problema del software Node.js en sí. En particular, la página de descargas del sitio web de Node.js no ofrece Node.js precompilado para Linux en i386."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:L\/I:L\/A:L","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":3.7}]},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-1102"}]}],"references":[{"url":"https:\/\/bugs.debian.org\/cgi-bin\/bugreport.cgi?bug=1076350","source":"cve@mitre.org"},{"url":"https:\/\/bugs.debian.org\/cgi-bin\/bugreport.cgi?bug=922075","source":"cve@mitre.org"},{"url":"https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=892601","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/nodejs\/node-v0.x-archive\/issues\/4549","source":"cve@mitre.org"},{"url":"http:\/\/www.openwall.com\/lists\/oss-security\/2025\/05\/02\/2","source":"af854a3a-2127-422b-91ae-364da2661108"},{"url":"https:\/\/lists.debian.org\/debian-lts-announce\/2025\/05\/msg00003.html","source":"af854a3a-2127-422b-91ae-364da2661108"}]}},{"cve":{"id":"CVE-2025-4100","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T07:15:58.693","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Nautic Pages plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'np_marinetraffic_map' shortcode in all versions up to, and including, 2.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/nautic-pages\/trunk\/nautic_pages.php#L22","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/2f6bfe18-bb9b-4cc2-bdb7-fd9163b61323?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4153","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T07:15:58.847","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in PHPGurukul Park Ticketing Management System 2.0. Affected by this vulnerability is an unknown functionality of the file \/profile.php. The manipulation of the argument adminname leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/y77-88\/myCVE\/issues\/2","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306685","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306685","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560809","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4154","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T07:15:59.153","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in PHPGurukul Pre-School Enrollment System 1.0. Affected by this issue is some unknown functionality of the file \/admin\/enrollment-details.php. The manipulation of the argument Status leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/Iandweb\/CVE\/issues\/6","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306686","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306686","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560833","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-47154","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T08:15:17.950","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[{"sourceIdentifier":"cve@mitre.org","tags":["disputed"]}],"descriptions":[{"lang":"en","value":"LibJS in Ladybird before f5a6704 mishandles the freeing of the vector that arguments_list references, leading to a use-after-free, and allowing remote attackers to execute arbitrary code via a crafted .js file. NOTE: the GitHub README says \"Ladybird is in a pre-alpha state, and only suitable for use by developers.\""},{"lang":"es","value":"LibJS en Ladybird anterior a f5a6704 gestiona incorrectamente la liberación del vector al que hace referencia arguments_list, lo que provoca un use-after-free y permite a atacantes remotos ejecutar código arbitrario mediante un archivo .js manipulado. NOTA: El README de GitHub indica que «Ladybird se encuentra en estado pre-alfa y solo es apto para desarrolladores»."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","baseScore":9.0,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.2,"impactScore":6.0}]},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-820"}]}],"references":[{"url":"https:\/\/github.com\/LadybirdBrowser\/ladybird\/commit\/f5a670421954fc7130c3685b713c621b29516669","source":"cve@mitre.org"},{"url":"https:\/\/jessie.cafe\/posts\/pwning-ladybirds-libjs\/","source":"cve@mitre.org"},{"url":"https:\/\/news.ycombinator.com\/item?id=43852096","source":"cve@mitre.org"},{"url":"https:\/\/jessie.cafe\/posts\/pwning-ladybirds-libjs\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4155","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T08:15:18.130","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in PHPGurukul Boat Booking System 1.0. This affects an unknown part of the file \/admin\/edit-boat.php. The manipulation of the argument bid leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/Iandweb\/CVE\/issues\/7","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306687","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306687","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560853","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4156","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T08:15:18.303","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in PHPGurukul Boat Booking System 1.0 and classified as critical. This vulnerability affects unknown code of the file \/admin\/change-image.php. The manipulation of the argument ID leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/Iandweb\/CVE\/issues\/8","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306688","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306688","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560856","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4157","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T09:15:15.513","lastModified":"2025-05-02T13:53:40.163","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PHPGurukul Boat Booking System 1.0 and classified as critical. This issue affects some unknown processing of the file \/admin\/booking-details.php. The manipulation of the argument Status leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/Iandweb\/CVE\/issues\/9","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306689","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306689","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560863","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4158","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T09:15:15.720","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server up to 2.0.7. It has been classified as critical. Affected is an unknown function of the component PROMPT Command Handler. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-e4d909c290d0fb1ca068ffaddf22cbd0.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306690","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306690","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561028","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4159","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T10:15:15.637","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server up to 2.0.7. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component GLOB Command Handler. The manipulation leads to buffer overflow. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se encontró una vulnerabilidad en PCMan FTP Server (hasta la versión 2.0.7). Se ha declarado crítica. Esta vulnerabilidad afecta a una funcionalidad desconocida del componente GLOB Command Handler. La manipulación provoca un desbordamiento del búfer. El ataque puede ejecutarse remotamente. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-5d41402abc4b2a76b9719d911017c592.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306691","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306691","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561029","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4160","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T10:15:17.567","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server up to 2.0.7. It has been rated as critical. Affected by this issue is some unknown functionality of the component LS Command Handler. The manipulation leads to buffer overflow. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se encontró una vulnerabilidad en PCMan FTP Server (hasta la versión 2.0.7). Se ha clasificado como crítica. Este problema afecta a una funcionalidad desconocida del componente LS Command Handler. La manipulación provoca un desbordamiento del búfer. El ataque puede ejecutarse remotamente. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-098f6bcd4621d373cade4e832627b4f6.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306692","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306692","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561030","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-27007","sourceIdentifier":"audit@patchstack.com","published":"2025-05-01T11:15:54.517","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Incorrect Privilege Assignment vulnerability in Brainstorm Force SureTriggers allows Privilege Escalation.This issue affects SureTriggers: from n\/a through 1.0.82."},{"lang":"es","value":"La vulnerabilidad de asignación incorrecta de privilegios en Brainstorm Force SureTriggers permite la escalada de privilegios. Este problema afecta a SureTriggers: desde n\/a hasta 1.0.82."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-266"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/wordpress\/plugin\/suretriggers\/vulnerability\/wordpress-suretriggers-1-0-82-privilege-escalation-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2025-4161","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T11:15:54.740","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in PCMan FTP Server up to 2.0.7. This affects an unknown part of the component VERBOSE Command Handler. The manipulation leads to buffer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha detectado una vulnerabilidad crítica en PCMan FTP Server (hasta la versión 2.0.7). Esta afecta a una parte desconocida del componente VERBOSE Command Handler. La manipulación provoca un desbordamiento del búfer. Es posible iniciar el ataque de forma remota. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-45c48cce2e2d7fbdea1afc51c7c6ad26.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306693","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306693","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561033","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4162","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T11:15:54.943","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in PCMan FTP Server up to 2.0.7. This vulnerability affects unknown code of the component ASCII Command Handler. The manipulation leads to buffer overflow. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se detectó una vulnerabilidad crítica en PCMan FTP Server (hasta la versión 2.0.7). Esta vulnerabilidad afecta al código desconocido del componente ASCII Command Handler. La manipulación provoca un desbordamiento del búfer. El ataque puede iniciarse remotamente. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-03c7c0ace395d80182db07ae2c30f034.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306694","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306694","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561034","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-1529","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T12:15:16.093","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The AM LottiePlayer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via uploaded lottie files in all versions up to, and including, 3.5.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."},{"lang":"es","value":"El complemento AM LottiePlayer para WordPress es vulnerable a Cross-Site Scripting Almacenado a través de archivos Lottie subidos en todas las versiones hasta la 3.5.3 incluida, debido a una depuración de entrada y un escape de salida insuficientes. Esto permite a atacantes autenticados, con acceso de autor o superior, inyectar secuencias de comandos web arbitrarias en páginas que se ejecutarán al acceder un usuario a una página inyectada."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3278523\/am-lottieplayer","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/0f44fcc8-c5e0-44f5-92c3-6603b19a06fe?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3874","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T12:15:17.400","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WordPress Simple Shopping Cart plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 5.1.3 due to lack of randomization of a user controlled key. This makes it possible for unauthenticated attackers to access customer shopping carts and edit product links, add or delete products, and discover coupon codes."},{"lang":"es","value":"El complemento Simple Shopping Cart para WordPress es vulnerable a una Referencia Directa a Objetos Insegura en todas las versiones hasta la 5.1.3 incluida, debido a la falta de aleatorización de una clave controlada por el usuario. Esto permite a atacantes no autenticados acceder a los carritos de compra de los clientes, editar enlaces de productos, añadir o eliminar productos y descubrir códigos de cupón."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/developer.wordpress.org\/reference\/functions\/wp_generate_password\/","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/includes\/class-wpsc-cart.php#L32","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/includes\/class-wpsc-cart.php#L68","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/wp_shopping_cart.php#L158","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/wp_shopping_cart.php#L265","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/wp_shopping_cart.php#L525","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284572\/","source":"security@wordfence.com"},{"url":"https:\/\/www.tipsandtricks-hq.com\/ecommerce\/wp-shopping-cart","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/4fed59bf-885b-4a06-aff2-8e5ab5f83ba7?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3889","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T12:15:17.630","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WordPress Simple Shopping Cart plugin for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 5.1.3 via the 'process_payment_data' due to missing validation on a user controlled key. This makes it possible for unauthenticated attackers to change the quantity of a product to a negative number, which subtracts the product cost from the total order cost. The attack will only work with Manual Checkout mode, as PayPal and Stripe will not process payments for a negative quantity."},{"lang":"es","value":"El complemento Simple Shopping Cart para WordPress es vulnerable a una Referencia Directa a Objetos Insegura en todas las versiones hasta la 5.1.3 incluida, a través de 'process_payment_data', debido a la falta de validación en una clave controlada por el usuario. Esto permite a atacantes no autenticados cambiar la cantidad de un producto a un número negativo, lo que resta el coste del producto del coste total del pedido. El ataque solo funciona con el modo de pago manual, ya que PayPal y Stripe no procesan pagos por cantidades negativas."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/wp_shopping_cart.php#L324","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284572\/","source":"security@wordfence.com"},{"url":"https:\/\/www.tipsandtricks-hq.com\/ecommerce\/simple-shopping-cart-enabling-manual-offline-checkout","source":"security@wordfence.com"},{"url":"https:\/\/www.tipsandtricks-hq.com\/ecommerce\/wp-shopping-cart","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/41212533-535e-4a9e-a9b8-1240021a3752?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3890","sourceIdentifier":"security@wordfence.com","published":"2025-05-01T12:15:17.830","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WordPress Simple Shopping Cart plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'wp_cart_button' shortcode in all versions up to, and including, 5.1.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."},{"lang":"es","value":"El complemento Simple Shopping Cart para WordPress es vulnerable a Cross-Site Scripting Almacenado a través del shortcode 'wp_cart_button' en todas las versiones hasta la 5.1.3 incluida, debido a una depuración de entrada insuficiente y al escape de salida en los atributos proporcionados por el usuario. Esto permite a atacantes autenticados, con acceso de colaborador o superior, inyectar secuencias de comandos web arbitrarias en páginas que se ejecutarán al acceder un usuario a una página inyectada."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wordpress-simple-paypal-shopping-cart\/tags\/5.1.2\/includes\/wpsc-shortcodes-related.php#L20","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284572\/","source":"security@wordfence.com"},{"url":"https:\/\/www.tipsandtricks-hq.com\/ecommerce\/simple-wp-shopping-cart-installation-usage-290#step-1-inserting-an-add-to-cart-button","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/93898bf8-cfed-44bf-9d68-a0167beba86a?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4163","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T12:15:18.027","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in PHPGurukul Land Record System 1.0. This issue affects some unknown processing of the file \/admin\/aboutus.php. The manipulation of the argument pagetitle leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."},{"lang":"es","value":"Se ha detectado una vulnerabilidad, clasificada como crítica, en PHPGurukul Land Record System 1.0. Este problema afecta a un procesamiento desconocido del archivo \/admin\/aboutus.php. La manipulación del argumento pagetitle provoca una inyección SQL. El ataque puede iniciarse remotamente. Se ha hecho público el exploit y puede que sea utilizado. Otros parámetros también podrían verse afectados."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/Iandweb\/CVE\/issues\/10","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306695","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306695","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.560883","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4164","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T12:15:18.410","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in PHPGurukul Employee Record Management System 1.3. Affected is an unknown function of the file changepassword.php. The manipulation of the argument currentpassword leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se encontró una vulnerabilidad clasificada como crítica en PHPGurukul Employee Record Management System 1.3. La vulnerabilidad afecta a una función desconocida del archivo changepassword.php. La manipulación del argumento currentpassword provoca una inyección SQL. Es posible ejecutar el ataque de forma remota. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ideal-valli\/myCVE\/issues\/2","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306696","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306696","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561140","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2023-46669","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T13:15:49.000","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Exposure of sensitive information to local unauthorized actors in Elastic Agent and Elastic Security Endpoint can lead to loss of confidentiality and impersonation of Endpoint to the Elastic Stack. This issue was identified by Elastic engineers and Elastic has no indication that it is known or has been exploited by malicious actors."},{"lang":"es","value":"La exposición de información confidencial a agentes locales no autorizados en Elastic Agent y Elastic Security Endpoint puede provocar la pérdida de confidencialidad y la suplantación de identidad de Endpoint ante Elastic Stack. Este problema fue identificado por los ingenieros de Elastic, y Elastic no tiene indicios de que sea conocido o haya sido explotado por agentes maliciosos."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":6.2,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.5,"impactScore":3.6}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/elastic-agent-elastic-endpoint-security-security-update-esa-2025-03\/377706","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2025-23139","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:49.693","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_uart: Fix another race during initialization\n\nDo not set 'HCI_UART_PROTO_READY' before call 'hci_uart_register_dev()'.\nPossible race is when someone calls 'hci_tty_uart_close()' after this bit\nis set, but 'hci_uart_register_dev()' wasn't done. This leads to access\nto uninitialized fields. To fix it let's set this bit after device was\nregistered (as before patch c411c62cc133) and to fix previous problem let's\nadd one more bit in addition to 'HCI_UART_PROTO_READY' which allows to\nperform power up without original bit set (pls see commit c411c62cc133).\n\nCrash backtrace from syzbot report:\n\nRIP: 0010:skb_queue_empty_lockless include\/linux\/skbuff.h:1887 [inline]\nRIP: 0010:skb_queue_purge_reason+0x6d\/0x140 net\/core\/skbuff.c:3936\n\nCall Trace:\n <TASK>\n skb_queue_purge include\/linux\/skbuff.h:3364 [inline]\n mrvl_close+0x2f\/0x90 drivers\/bluetooth\/hci_mrvl.c:100\n hci_uart_tty_close+0xb6\/0x120 drivers\/bluetooth\/hci_ldisc.c:557\n tty_ldisc_close drivers\/tty\/tty_ldisc.c:455 [inline]\n tty_ldisc_kill+0x66\/0xc0 drivers\/tty\/tty_ldisc.c:613\n tty_ldisc_release+0xc9\/0x120 drivers\/tty\/tty_ldisc.c:781\n tty_release_struct+0x10\/0x80 drivers\/tty\/tty_io.c:1690\n tty_release+0x4ef\/0x640 drivers\/tty\/tty_io.c:1861\n __fput+0x86\/0x2a0 fs\/file_table.c:450\n task_work_run+0x82\/0xb0 kernel\/task_work.c:239\n resume_user_mode_work include\/linux\/resume_user_mode.h:50 [inline]\n exit_to_user_mode_loop kernel\/entry\/common.c:114 [inline]\n exit_to_user_mode_prepare include\/linux\/entry-common.h:329 [inline]\n __syscall_exit_to_user_mode_work kernel\/entry\/common.c:207 [inline]\n syscall_exit_to_user_mode+0xa3\/0x1b0 kernel\/entry\/common.c:218\n do_syscall_64+0x9a\/0x190 arch\/x86\/entry\/common.c:89\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: hci_uart: Corrige otra ejecución durante la inicialización No establezca 'HCI_UART_PROTO_READY' antes de llamar a 'hci_uart_register_dev()'. La posible ejecución es cuando alguien llama a 'hci_tty_uart_close()' después de que este bit esté establecido, pero no se realizó 'hci_uart_register_dev()'. Esto lleva al acceso a campos no inicializados. Para solucionarlo, establezcamos este bit después de que el dispositivo se haya registrado (como antes del parche c411c62cc133) y para solucionar el problema anterior, agreguemos un bit más además de 'HCI_UART_PROTO_READY' que permite realizar el encendido sin el bit original establecido (consulte el commit c411c62cc133). Seguimiento de fallos del informe de syzbot: RIP: 0010:skb_queue_empty_lockless include\/linux\/skbuff.h:1887 [en línea] RIP: 0010:skb_queue_purge_reason+0x6d\/0x140 net\/core\/skbuff.c:3936 Seguimiento de llamadas:  skb_queue_purge include\/linux\/skbuff.h:3364 [inline] mrvl_close+0x2f\/0x90 drivers\/bluetooth\/hci_mrvl.c:100 hci_uart_tty_close+0xb6\/0x120 drivers\/bluetooth\/hci_ldisc.c:557 tty_ldisc_close drivers\/tty\/tty_ldisc.c:455 [inline] tty_ldisc_kill+0x66\/0xc0 drivers\/tty\/tty_ldisc.c:613 tty_ldisc_release+0xc9\/0x120 drivers\/tty\/tty_ldisc.c:781 tty_release_struct+0x10\/0x80 drivers\/tty\/tty_io.c:1690 tty_release+0x4ef\/0x640 drivers\/tty\/tty_io.c:1861 __fput+0x86\/0x2a0 fs\/file_table.c:450 task_work_run+0x82\/0xb0 kernel\/task_work.c:239 resume_user_mode_work include\/linux\/resume_user_mode.h:50 [inline] exit_to_user_mode_loop kernel\/entry\/common.c:114 [inline] exit_to_user_mode_prepare include\/linux\/entry-common.h:329 [inline] __syscall_exit_to_user_mode_work kernel\/entry\/common.c:207 [inline] syscall_exit_to_user_mode+0xa3\/0x1b0 kernel\/entry\/common.c:218 do_syscall_64+0x9a\/0x190 arch\/x86\/entry\/common.c:89 entry_SYSCALL_64_after_hwframe+0x77\/0x7f "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02e1bcdfdf769974e7e9fa285e295cd9852e2a38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dcf08fcff5ca529de6dc0395091f28854f4e54a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/281782d2c6730241e300d630bb9f200d831ede71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5df5dafc171b90d0b8d51547a82657cd5a1986c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80f14e9de6a43a0bd8194cad1003a3e6dcbc3984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e5aff600539e5faea294d9612cca50220e602b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e5a0f5777162e503400c70c6ed25fbbe2d38799","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a40f94f7caa8d3421b64f63ac31bc0f24c890f39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db7509fa110dd9b11134b75894677f30353b2c51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23140","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:49.807","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: pci_endpoint_test: Avoid issue of interrupts remaining after request_irq error\n\nAfter devm_request_irq() fails with error in pci_endpoint_test_request_irq(),\nthe pci_endpoint_test_free_irq_vectors() is called assuming that all IRQs\nhave been released.\n\nHowever, some requested IRQs remain unreleased, so there are still\n\/proc\/irq\/* entries remaining, and this results in WARN() with the\nfollowing message:\n\n  remove_proc_entry: removing non-empty directory 'irq\/30', leaking at least 'pci-endpoint-test.0'\n  WARNING: CPU: 0 PID: 202 at fs\/proc\/generic.c:719 remove_proc_entry +0x190\/0x19c\n\nTo solve this issue, set the number of remaining IRQs to test->num_irqs,\nand release IRQs in advance by calling pci_endpoint_test_release_irq().\n\n[kwilczynski: commit log]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: misc: pci_endpoint_test: evitar el problema de las interrupciones restantes después del error request_irq Después de que devm_request_irq() falla con un error en pci_endpoint_test_request_irq(), se llama a pci_endpoint_test_free_irq_vectors() asumiendo que se han liberado todas las IRQ. Sin embargo, algunas IRQ solicitadas permanecen sin liberar, por lo que aún quedan entradas \/proc\/irq\/* restantes y esto genera un WARN() con el siguiente mensaje: remove_proc_entry: eliminando el directorio no vacío 'irq\/30', filtrando al menos 'pci-endpoint-test.0' ADVERTENCIA: CPU: 0 PID: 202 en fs\/proc\/generic.c:719 remove_proc_entry +0x190\/0x19c Para resolver este problema, establezca el número de IRQ restantes en test-&gt;num_irqs y libere las IRQ con anticipación llamando a pci_endpoint_test_release_irq(). [kwilczynski: registro de confirmaciones]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0557e70e2aeba8647bf5a950820b67cfb86533db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54c9f299ad7d7c4be5d271ed12d01a59e95b8907","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a4b7181213268c9b07bef8800905528435db44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/705be96504779e4a333ea042b4779ea941f0ace9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/770407f6173f4f39f4e2c1b54422b79ce6c98bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d5118b107b1a2353ed0dff24404aee2e6b7ca0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e516e187bf32d8decc7c7d0025ae4857cad13c0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6cb7828c8e17520d4f5afb416515d3fae1af9a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23141","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:49.910","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest memory accesses\n\nAcquire a lock on kvm->srcu when userspace is getting MP state to handle a\nrather extreme edge case where \"accepting\" APIC events, i.e. processing\npending INIT or SIPI, can trigger accesses to guest memory.  If the vCPU\nis in L2 with INIT *and* a TRIPLE_FAULT request pending, then getting MP\nstate will trigger a nested VM-Exit by way of ->check_nested_events(), and\nemuating the nested VM-Exit can access guest memory.\n\nThe splat was originally hit by syzkaller on a Google-internal kernel, and\nreproduced on an upstream kernel by hacking the triple_fault_event_test\nselftest to stuff a pending INIT, store an MSR on VM-Exit (to generate a\nmemory access on VMX), and do vcpu_mp_state_get() to trigger the scenario.\n\n  =============================\n  WARNING: suspicious RCU usage\n  6.14.0-rc3-b112d356288b-vmx\/pi_lockdep_false_pos-lock #3 Not tainted\n  -----------------------------\n  include\/linux\/kvm_host.h:1058 suspicious rcu_dereference_check() usage!\n\n  other info that might help us debug this:\n\n  rcu_scheduler_active = 2, debug_locks = 1\n  1 lock held by triple_fault_ev\/1256:\n   #0: ffff88810df5a330 (&vcpu->mutex){+.+.}-{4:4}, at: kvm_vcpu_ioctl+0x8b\/0x9a0 [kvm]\n\n  stack backtrace:\n  CPU: 11 UID: 1000 PID: 1256 Comm: triple_fault_ev Not tainted 6.14.0-rc3-b112d356288b-vmx #3\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x7f\/0x90\n   lockdep_rcu_suspicious+0x144\/0x190\n   kvm_vcpu_gfn_to_memslot+0x156\/0x180 [kvm]\n   kvm_vcpu_read_guest+0x3e\/0x90 [kvm]\n   read_and_check_msr_entry+0x2e\/0x180 [kvm_intel]\n   __nested_vmx_vmexit+0x550\/0xde0 [kvm_intel]\n   kvm_check_nested_events+0x1b\/0x30 [kvm]\n   kvm_apic_accept_events+0x33\/0x100 [kvm]\n   kvm_arch_vcpu_ioctl_get_mpstate+0x30\/0x1d0 [kvm]\n   kvm_vcpu_ioctl+0x33e\/0x9a0 [kvm]\n   __x64_sys_ioctl+0x8b\/0xb0\n   do_syscall_64+0x6c\/0x170\n   entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n   <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: x86: Adquisición de SRCU en KVM_GET_MP_STATE para proteger los accesos a la memoria del invitado. Adquisición de un bloqueo en kvm-&gt;srcu cuando el espacio de usuario obtiene el estado MP para gestionar un caso extremo en el que la \"aceptación\" de eventos APIC, es decir, el procesamiento de INIT o SIPI pendientes, puede desencadenar accesos a la memoria del invitado. Si la vCPU está en L2 con INIT *y* una solicitud TRIPLE_FAULT pendiente, obtener el estado MP activará una salida de máquina virtual anidada mediante -&gt;check_nested_events(), y la emulación de la salida de máquina virtual anidada puede acceder a la memoria del invitado. El splat fue alcanzado originalmente por syzkaller en un kernel interno de Google, y reproducido en un kernel ascendente hackeando la autoprueba triple_fault_event_test para rellenar un INIT pendiente, almacenar un MSR en VM-Exit (para generar un acceso a memoria en VMX), y hacer vcpu_mp_state_get() para activar el escenario. ============================== ADVERTENCIA: uso sospechoso de RCU 6.14.0-rc3-b112d356288b-vmx\/pi_lockdep_false_pos-lock #3 No contaminado ----------------------------- include\/linux\/kvm_host.h:1058 ¡uso sospechoso de rcu_dereference_check()! Otra información que podría ayudarnos a depurar esto: rcu_scheduler_active = 2, debug_locks = 1 1 bloqueo mantenido por triple_fault_ev\/1256: #0: ffff88810df5a330 (&amp;vcpu-&gt;mutex){+.+.}-{4:4}, en: kvm_vcpu_ioctl+0x8b\/0x9a0 [kvm] seguimiento de pila: CPU: 11 UID: 1000 PID: 1256 Comm: triple_fault_ev No contaminado 6.14.0-rc3-b112d356288b-vmx #3 Nombre del hardware: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015 Seguimiento de llamadas:   dump_stack_lvl+0x7f\/0x90 lockdep_rcu_suspicious+0x144\/0x190 kvm_vcpu_gfn_to_memslot+0x156\/0x180 [kvm] kvm_vcpu_read_guest+0x3e\/0x90 [kvm] read_and_check_msr_entry+0x2e\/0x180 [kvm_intel] __nested_vmx_vmexit+0x550\/0xde0 [kvm_intel] kvm_check_nested_events+0x1b\/0x30 [kvm] kvm_apic_accept_events+0x33\/0x100 [kvm] kvm_arch_vcpu_ioctl_get_mpstate+0x30\/0x1d0 [kvm] kvm_vcpu_ioctl+0x33e\/0x9a0 [kvm] __x64_sys_ioctl+0x8b\/0xb0 do_syscall_64+0x6c\/0x170 entry_SYSCALL_64_after_hwframe+0x4b\/0x53  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0357c8406dfa09430dd9858ebe813feb65524b6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/592e040572f216d916f465047c8ce4a308fcca44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bc5c360375d28ba5ef6298b0d53e735c81d66a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a3df0aa1087a89f5ce55f4aba816bfcb1ecf1be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef01cac401f18647d62720cf773d7bb0541827da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5cbe725b7477b4cd677be1b86b4e08f90572997","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23142","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.017","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: detect and prevent references to a freed transport in sendmsg\n\nsctp_sendmsg() re-uses associations and transports when possible by\ndoing a lookup based on the socket endpoint and the message destination\naddress, and then sctp_sendmsg_to_asoc() sets the selected transport in\nall the message chunks to be sent.\n\nThere's a possible race condition if another thread triggers the removal\nof that selected transport, for instance, by explicitly unbinding an\naddress with setsockopt(SCTP_SOCKOPT_BINDX_REM), after the chunks have\nbeen set up and before the message is sent. This can happen if the send\nbuffer is full, during the period when the sender thread temporarily\nreleases the socket lock in sctp_wait_for_sndbuf().\n\nThis causes the access to the transport data in\nsctp_outq_select_transport(), when the association outqueue is flushed,\nto result in a use-after-free read.\n\nThis change avoids this scenario by having sctp_transport_free() signal\nthe freeing of the transport, tagging it as \"dead\". In order to do this,\nthe patch restores the \"dead\" bit in struct sctp_transport, which was\nremoved in\ncommit 47faa1e4c50e (\"sctp: remove the dead field of sctp_transport\").\n\nThen, in the scenario where the sender thread has released the socket\nlock in sctp_wait_for_sndbuf(), the bit is checked again after\nre-acquiring the socket lock to detect the deletion. This is done while\nholding a reference to the transport to prevent it from being freed in\nthe process.\n\nIf the transport was deleted while the socket lock was relinquished,\nsctp_sendmsg_to_asoc() will return -EAGAIN to let userspace retry the\nsend.\n\nThe bug was found by a private syzbot instance (see the error report [1]\nand the C reproducer that triggers it [2])."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: sctp: detectar y prevenir referencias a un transporte liberado en sendmsg. sctp_sendmsg() reutiliza asociaciones y transportes cuando es posible mediante una búsqueda basada en el endpoint del socket y la dirección de destino del mensaje. A continuación, sctp_sendmsg_to_asoc() establece el transporte seleccionado en todos los fragmentos de mensaje que se enviarán. Existe una posible condición de ejecución si otro subproceso activa la eliminación de ese transporte seleccionado, por ejemplo, desvinculando explícitamente una dirección con setsockopt(SCTP_SOCKOPT_BINDX_REM), después de configurar los fragmentos y antes de enviar el mensaje. Esto puede ocurrir si el búfer de envío está lleno, durante el periodo en que el subproceso emisor libera temporalmente el bloqueo del socket en sctp_wait_for_sndbuf(). Esto provoca que el acceso a los datos de transporte en sctp_outq_select_transport(), al vaciar la cola de salida de la asociación, resulte en una lectura de use-after-free. Este cambio evita este escenario al indicar sctp_transport_free() la liberación del transporte, etiquetándolo como \"muerto\". Para ello, el parche restaura el bit \"muerto\" en la estructura sctp_transport, que se eliminó en el commit 47faa1e4c50e (\"sctp: eliminar el campo muerto de sctp_transport\"). Si el hilo emisor ha liberado el bloqueo del socket en sctp_wait_for_sndbuf(), el bit se vuelve a comprobar tras volver a adquirir el bloqueo para detectar la eliminación. Esto se realiza manteniendo una referencia al transporte para evitar que se libere durante el proceso. Si el transporte se eliminó mientras se liberaba el bloqueo del socket, sctp_sendmsg_to_asoc() devolverá -EAGAIN para que el espacio de usuario pueda reintentar el envío. El error fue detectado por una instancia privada de syzbot (consulte el informe de errores [1] y el reproductor de C que lo activa [2])."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f7df4899299ce4662e5f95badb9dbc57cc37fa5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e5068b7e0ae0a54f6cfd03a2f80977da657f1ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3257386be6a7eb8a8bfc9cbfb746df4eb4fc70e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/547762250220325d350d0917a7231480e0f4142b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bc83bdf5f5b8010d1ca5a4555537e62413ab4e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a63f4fb0efb4e69efd990cbb740a848679ec4b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e7c37fadb3be1fc33073fcf10aa96d166caa697","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6fefcb71d246baaf3bacdad1af7ff50ebcfe652","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1a69a940de58b16e8249dff26f74c8cc59b32be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23143","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.127","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Fix null-ptr-deref by sock_lock_init_class_and_name() and rmmod.\n\nWhen I ran the repro [0] and waited a few seconds, I observed two\nLOCKDEP splats: a warning immediately followed by a null-ptr-deref. [1]\n\nReproduction Steps:\n\n  1) Mount CIFS\n  2) Add an iptables rule to drop incoming FIN packets for CIFS\n  3) Unmount CIFS\n  4) Unload the CIFS module\n  5) Remove the iptables rule\n\nAt step 3), the CIFS module calls sock_release() for the underlying\nTCP socket, and it returns quickly.  However, the socket remains in\nFIN_WAIT_1 because incoming FIN packets are dropped.\n\nAt this point, the module's refcnt is 0 while the socket is still\nalive, so the following rmmod command succeeds.\n\n  # ss -tan\n  State      Recv-Q Send-Q Local Address:Port  Peer Address:Port\n  FIN-WAIT-1 0      477        10.0.2.15:51062   10.0.0.137:445\n\n  # lsmod | grep cifs\n  cifs                 1159168  0\n\nThis highlights a discrepancy between the lifetime of the CIFS module\nand the underlying TCP socket.  Even after CIFS calls sock_release()\nand it returns, the TCP socket does not die immediately in order to\nclose the connection gracefully.\n\nWhile this is generally fine, it causes an issue with LOCKDEP because\nCIFS assigns a different lock class to the TCP socket's sk->sk_lock\nusing sock_lock_init_class_and_name().\n\nOnce an incoming packet is processed for the socket or a timer fires,\nsk->sk_lock is acquired.\n\nThen, LOCKDEP checks the lock context in check_wait_context(), where\nhlock_class() is called to retrieve the lock class.  However, since\nthe module has already been unloaded, hlock_class() logs a warning\nand returns NULL, triggering the null-ptr-deref.\n\nIf LOCKDEP is enabled, we must ensure that a module calling\nsock_lock_init_class_and_name() (CIFS, NFS, etc) cannot be unloaded\nwhile such a socket is still alive to prevent this issue.\n\nLet's hold the module reference in sock_lock_init_class_and_name()\nand release it when the socket is freed in sk_prot_free().\n\nNote that sock_lock_init() clears sk->sk_owner for svc_create_socket()\nthat calls sock_lock_init_class_and_name() for a listening socket,\nwhich clones a socket by sk_clone_lock() without GFP_ZERO.\n\n[0]:\nCIFS_SERVER=\"10.0.0.137\"\nCIFS_PATH=\"\/\/${CIFS_SERVER}\/Users\/Administrator\/Desktop\/CIFS_TEST\"\nDEV=\"enp0s3\"\nCRED=\"\/root\/WindowsCredential.txt\"\n\nMNT=$(mktemp -d \/tmp\/XXXXXX)\nmount -t cifs ${CIFS_PATH} ${MNT} -o vers=3.0,credentials=${CRED},cache=none,echo_interval=1\n\niptables -A INPUT -s ${CIFS_SERVER} -j DROP\n\nfor i in $(seq 10);\ndo\n    umount ${MNT}\n    rmmod cifs\n    sleep 1\ndone\n\nrm -r ${MNT}\n\niptables -D INPUT -s ${CIFS_SERVER} -j DROP\n\n[1]:\nDEBUG_LOCKS_WARN_ON(1)\nWARNING: CPU: 10 PID: 0 at kernel\/locking\/lockdep.c:234 hlock_class (kernel\/locking\/lockdep.c:234 kernel\/locking\/lockdep.c:223)\nModules linked in: cifs_arc4 nls_ucs2_utils cifs_md4 [last unloaded: cifs]\nCPU: 10 UID: 0 PID: 0 Comm: swapper\/10 Not tainted 6.14.0 #36\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:hlock_class (kernel\/locking\/lockdep.c:234 kernel\/locking\/lockdep.c:223)\n...\nCall Trace:\n <IRQ>\n __lock_acquire (kernel\/locking\/lockdep.c:4853 kernel\/locking\/lockdep.c:5178)\n lock_acquire (kernel\/locking\/lockdep.c:469 kernel\/locking\/lockdep.c:5853 kernel\/locking\/lockdep.c:5816)\n _raw_spin_lock_nested (kernel\/locking\/spinlock.c:379)\n tcp_v4_rcv (.\/include\/linux\/skbuff.h:1678 .\/include\/net\/tcp.h:2547 net\/ipv4\/tcp_ipv4.c:2350)\n...\n\nBUG: kernel NULL pointer dereference, address: 00000000000000c4\n PF: supervisor read access in kernel mode\n PF: error_code(0x0000) - not-present page\nPGD 0\nOops: Oops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 10 UID: 0 PID: 0 Comm: swapper\/10 Tainted: G        W          6.14.0 #36\nTainted: [W]=WARN\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:__lock_acquire (kernel\/\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: Fix null-ptr-deref por sock_lock_init_class_and_name() y rmmod. Cuando ejecuté la reproducción [0] y esperé unos segundos, observé dos símbolos LOCKDEP: una advertencia seguida inmediatamente por un null-ptr-deref. [1] Pasos de reproducción: 1) Montar CIFS 2) Agregar una regla de iptables para descartar los paquetes FIN entrantes para CIFS 3) Desmontar CIFS 4) Descargar el módulo CIFS 5) Eliminar la regla de iptables En el paso 3), el módulo CIFS llama a sock_release() para el socket TCP subyacente y regresa rápidamente. Sin embargo, el socket permanece en FIN_WAIT_1 porque los paquetes FIN entrantes se descartan. En este punto, el refcnt del módulo es 0 mientras el socket sigue activo, por lo que el siguiente comando rmmod tiene éxito. # ss -tan State Recv-Q Send-Q Local Address:Port Peer Address:Port FIN-WAIT-1 0 477 10.0.2.15:51062 10.0.0.137:445 # lsmod | grep cifs cifs 1159168 0 Esto indica una discrepancia entre la duración del módulo CIFS y el socket TCP subyacente. Incluso después de que CIFS invoque sock_release() y este regrese, el socket TCP no se cierra inmediatamente para cerrar la conexión correctamente. Si bien esto generalmente funciona bien, causa un problema con LOCKDEP, ya que CIFS asigna una clase de bloqueo diferente al sk-&gt;sk_lock del socket TCP mediante sock_lock_init_class_and_name(). Una vez que se procesa un paquete entrante para el socket o se activa un temporizador, se adquiere sk-&gt;sk_lock. Luego, LOCKDEP verifica el contexto de bloqueo en check_wait_context(), donde se llama a hlock_class() para recuperar la clase de bloqueo. Sin embargo, dado que el módulo ya se ha descargado, hlock_class() registra una advertencia y devuelve NULL, lo que activa la desreferencia null-ptr. Si LOCKDEP está habilitado, debemos asegurarnos de que un módulo que llama a sock_lock_init_class_and_name() (CIFS, NFS, etc.) no pueda descargarse mientras dicho socket siga activo para evitar este problema. Mantendremos la referencia del módulo en sock_lock_init_class_and_name() y la liberaremos cuando el socket se libere en sk_prot_free(). Tenga en cuenta que sock_lock_init() borra sk-&gt;sk_owner para svc_create_socket(), que llama a sock_lock_init_class_and_name() para un socket que escucha, lo que clona un socket mediante sk_clone_lock() sin GFP_ZERO. [0]: CIFS_SERVER=\"10.0.0.137\" CIFS_PATH=\"\/\/${CIFS_SERVER}\/Usuarios\/Administrador\/Escritorio\/CIFS_TEST\" DEV=\"enp0s3\" CRED=\"\/root\/WindowsCredential.txt\" MNT=$(mktemp -d \/tmp\/XXXXXX) mount -t cifs ${CIFS_PATH} ${MNT} -o vers=3.0,credenciales=${CRED},caché=ninguno,intervalo_de_eco=1 iptables -A INPUT -s ${CIFS_SERVER} -j DROP para i en $(seq 10); Desmontar ${MNT} rmmod cifs sleep 1 hecho rm -r ${MNT} iptables -D INPUT -s ${CIFS_SERVER} -j DROP [1]: DEBUG_LOCKS_WARN_ON(1) ADVERTENCIA: CPU: 10 PID: 0 en kernel\/locking\/lockdep.c:234 hlock_class (kernel\/locking\/lockdep.c:234 kernel\/locking\/lockdep.c:223) Módulos enlazados en: cifs_arc4 nls_ucs2_utils cifs_md4 [última descarga: cifs] CPU: 10 UID: 0 PID: 0 Comm: swapper\/10 No contaminado 6.14.0 #36 Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 01\/04\/2014 RIP: 0010:hlock_class (kernel\/locking\/lockdep.c:234 kernel\/locking\/lockdep.c:223) ... Rastreo de llamadas:  __lock_acquire (kernel\/locking\/lockdep.c:4853 kernel\/locking\/lockdep.c:5178) lock_acquire (kernel\/locking\/lockdep.c:469 kernel\/locking\/lockdep.c:5853 kernel\/locking\/lockdep.c:5816) _raw_spin_lock_nested (kernel\/locking\/spinlock.c:379) tcp_v4_rcv (.\/include\/linux\/skbuff.h:1678 .\/include\/net\/tcp.h:2547 net\/ipv4\/tcp_ipv4.c:2350) ... ERROR: desreferencia de puntero NULL del núcleo, dirección: 00000000000000c4 PF: acceso de lectura del supervisor en modo núcleo PF: error_code(0x0000) - página no presente PGD 0 Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI CPU: 10 UID: 0 PID: 0 Comm: swapper\/10 Contaminado: GW 6.14.0 #36 Contaminado: [W]=WARN Nombre del hardware: QEMU Standard PC (i440FX + PIIX, ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bb2f7a1ad1f11d861f58e5ee5051c8974ff9569","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2155802d3313d7b8365935c6b8d6edc0ddd7eb94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f7f6abd92b6c8dc8f19625ef93c3a18549ede04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c11247a21aab4b50a23c8b696727d7483de2f1e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23144","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.237","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbacklight: led_bl: Hold led_access lock when calling led_sysfs_disable()\n\nLockdep detects the following issue on led-backlight removal:\n  [  142.315935] ------------[ cut here ]------------\n  [  142.315954] WARNING: CPU: 2 PID: 292 at drivers\/leds\/led-core.c:455 led_sysfs_enable+0x54\/0x80\n  ...\n  [  142.500725] Call trace:\n  [  142.503176]  led_sysfs_enable+0x54\/0x80 (P)\n  [  142.507370]  led_bl_remove+0x80\/0xa8 [led_bl]\n  [  142.511742]  platform_remove+0x30\/0x58\n  [  142.515501]  device_remove+0x54\/0x90\n  ...\n\nIndeed, led_sysfs_enable() has to be called with the led_access\nlock held.\n\nHold the lock when calling led_sysfs_disable()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: backlight: led_bl: Mantener el bloqueo de led_access al llamar a led_sysfs_disable() Lockdep detecta el siguiente problema al eliminar la retroiluminación LED: [ 142.315935] ------------[ cortar aquí ]------------ [ 142.315954] ADVERTENCIA: CPU: 2 PID: 292 en drivers\/leds\/led-core.c:455 led_sysfs_enable+0x54\/0x80 ... [ 142.500725] Rastreo de llamada: [ 142.503176] led_sysfs_enable+0x54\/0x80 (P) [ 142.507370] led_bl_remove+0x80\/0xa8 [led_bl] [ 142.511742] platform_remove+0x30\/0x58 [ 142.515501] device_remove+0x54\/0x90 ... De hecho, led_sysfs_enable() debe llamarse con el bloqueo de led_access activado. Mantenga el bloqueo al llamar a led_sysfs_disable()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11d128f7eacec276c75cf4712880a6307ca9c885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c82f5a393d8b9a5c1ea032413719862098afd4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/276822a00db3c1061382b41e72cafc09d6a0ec30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61a5c565fd2442d3128f3bab5f022658adc3a4e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74c7d67a3c305fc1fa03c32a838e8446fb7aee14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87d947a0607be384bfe7bb0935884a711e35ca07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b447885ec9130cf86f355e011dc6b94d6ccfb5b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8ddf5107f53789448900f04fa220f34cd2f777e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23145","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.343","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix NULL pointer in can_accept_new_subflow\n\nWhen testing valkey benchmark tool with MPTCP, the kernel panics in\n'mptcp_can_accept_new_subflow' because subflow_req->msk is NULL.\n\nCall trace:\n\n  mptcp_can_accept_new_subflow (.\/net\/mptcp\/subflow.c:63 (discriminator 4)) (P)\n  subflow_syn_recv_sock (.\/net\/mptcp\/subflow.c:854)\n  tcp_check_req (.\/net\/ipv4\/tcp_minisocks.c:863)\n  tcp_v4_rcv (.\/net\/ipv4\/tcp_ipv4.c:2268)\n  ip_protocol_deliver_rcu (.\/net\/ipv4\/ip_input.c:207)\n  ip_local_deliver_finish (.\/net\/ipv4\/ip_input.c:234)\n  ip_local_deliver (.\/net\/ipv4\/ip_input.c:254)\n  ip_rcv_finish (.\/net\/ipv4\/ip_input.c:449)\n  ...\n\nAccording to the debug log, the same req received two SYN-ACK in a very\nshort time, very likely because the client retransmits the syn ack due\nto multiple reasons.\n\nEven if the packets are transmitted with a relevant time interval, they\ncan be processed by the server on different CPUs concurrently). The\n'subflow_req->msk' ownership is transferred to the subflow the first,\nand there will be a risk of a null pointer dereference here.\n\nThis patch fixes this issue by moving the 'subflow_req->msk' under the\n`own_req == true` conditional.\n\nNote that the !msk check in subflow_hmac_valid() can be dropped, because\nthe same check already exists under the own_req mpj branch where the\ncode has been moved to."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mptcp: se corrige el puntero NULL en can_accept_new_subflow Al probar la herramienta de evaluación comparativa valkey con MPTCP, el kernel entra en pánico en 'mptcp_can_accept_new_subflow' porque subflow_req-&gt;msk es NULL. Rastreo de llamadas: mptcp_can_accept_new_subflow (.\/net\/mptcp\/subflow.c:63 (discriminador 4)) (P) subflow_syn_recv_sock (.\/net\/mptcp\/subflow.c:854) tcp_check_req (.\/net\/ipv4\/tcp_minisocks.c:863) tcp_v4_rcv (.\/net\/ipv4\/tcp_ipv4.c:2268) ip_protocol_deliver_rcu (.\/net\/ipv4\/ip_input.c:207) ip_local_deliver_finish (.\/net\/ipv4\/ip_input.c:234) ip_local_deliver (.\/net\/ipv4\/ip_input.c:254) ip_rcv_finish (.\/net\/ipv4\/ip_input.c:449) ... Según el registro de depuración, la misma solicitud recibió dos SYN-ACK en muy poco tiempo, probablemente porque el cliente retransmite el SYN-ACK por varias razones. Incluso si los paquetes se transmiten con un intervalo de tiempo relevante, el servidor puede procesarlos en diferentes CPU simultáneamente. La propiedad de 'subflow_req-&gt;msk' se transfiere primero al subflujo, lo que conlleva el riesgo de una desreferencia de puntero nulo. Este parche corrige este problema moviendo 'subflow_req-&gt;msk' bajo la condición `own_req == true`. Tenga en cuenta que la comprobación !msk en subflow_hmac_valid() puede omitirse, ya que ya existe en la rama own_req de mpj, donde se ha movido el código."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/443041deb5ef6a1289a99ed95015ec7442f141dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b2649b9717678aeb097893cc49f59311a1ecab0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f9ae060ed64aef8f174c5f1ea513825b1be9af1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/855bf0aacd51fced11ea9aa0d5101ee0febaeadb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cf7fef1bb2ffea7792bcbf71ca00216cecc725d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3088bd2a6790c8efff139d86d7a9d0b1305977b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc81e41a307df523072186b241fa8244fecd7803","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efd58a8dd9e7a709a90ee486a4247c923d27296f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23146","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.453","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: ene-kb3930: Fix a potential NULL pointer dereference\n\nThe off_gpios could be NULL. Add missing check in the kb3930_probe().\nThis is similar to the issue fixed in commit b1ba8bcb2d1f\n(\"backlight: hx8357: Fix potential NULL pointer dereference\").\n\nThis was detected by our static analysis tool."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mfd: ene-kb3930: Se corrige una posible desreferencia de puntero nulo. El valor off_gpios podría ser nulo. Se añade la comprobación faltante en kb3930_probe(). Esto es similar al problema corregido en el commit b1ba8bcb2d1f (\"backlight: hx8357: Se corrige una posible desreferencia de puntero nulo\"). Esto fue detectado por nuestra herramienta de análisis estático."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2edb5b29b197d90b4d08cd45e911c0bcf24cb895","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cdf1d2a816a93fa02f7b6b5492dc7f55af2a199","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dc88993ee3fa8365ff6a5d6514702f70ba6863a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76d0f4199bc5b51acb7b96c6663a8953543733ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b47df6498f223c8956bfe0d994a0e42a520dfcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90ee23c2514a22a9c2bb39a540cbe1c9acb27d0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1758417310d2cc77e52cd15103497e52e2614f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea07760676bba49319d553af80c239da053b5fb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23147","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.563","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: Add NULL pointer check in i3c_master_queue_ibi()\n\nThe I3C master driver may receive an IBI from a target device that has not\nbeen probed yet. In such cases, the master calls `i3c_master_queue_ibi()`\nto queue an IBI work task, leading to \"Unable to handle kernel read from\nunreadable memory\" and resulting in a kernel panic.\n\nTypical IBI handling flow:\n1. The I3C master scans target devices and probes their respective drivers.\n2. The target device driver calls `i3c_device_request_ibi()` to enable IBI\n   and assigns `dev->ibi = ibi`.\n3. The I3C master receives an IBI from the target device and calls\n   `i3c_master_queue_ibi()` to queue the target device driver’s IBI\n   handler task.\n\nHowever, since target device events are asynchronous to the I3C probe\nsequence, step 3 may occur before step 2, causing `dev->ibi` to be `NULL`,\nleading to a kernel panic.\n\nAdd a NULL pointer check in `i3c_master_queue_ibi()` to prevent accessing\nan uninitialized `dev->ibi`, ensuring stability."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: i3c: Añadir comprobación de puntero nulo en i3c_master_queue_ibi(). El controlador maestro I3C puede recibir una IBI de un dispositivo de destino que aún no se ha sondeado. En tales casos, el maestro llama a `i3c_master_queue_ibi()` para poner en cola una tarea de trabajo IBI, lo que genera el error \"No se puede manejar la lectura del kernel desde memoria ilegible\" y provoca un pánico del kernel. Flujo típico de manejo de IBI: 1. El maestro I3C escanea los dispositivos de destino y sondea sus respectivos controladores. 2. El controlador del dispositivo de destino llama a `i3c_device_request_ibi()` para habilitar IBI y asigna `dev-&gt;ibi = ibi`. 3. El maestro I3C recibe una IBI del dispositivo de destino y llama a `i3c_master_queue_ibi()` para poner en cola la tarea de manejo de IBI del controlador del dispositivo de destino. Sin embargo, dado que los eventos del dispositivo de destino son asíncronos a la secuencia de sondeo I3C, el paso 3 puede ocurrir antes del paso 2, lo que provoca que `dev-&gt;ibi` sea `NULL` y provoque un pánico del kernel. Agregue una comprobación de puntero NULL en `i3c_master_queue_ibi()` para evitar el acceso a un `dev-&gt;ibi` sin inicializar, garantizando así la estabilidad."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09359e7c8751961937cb5fc50220969b0a4e1058","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b54faa5f47fa7c642179744aeff03f0810dc62e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ba402610843d7d15c7f3966a461deeeaff7fba4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6871a676aa534e8f218279672e0445c725f81026","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd496a44f041da9ef3afe14d1d6193d460424e91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d83b0c03ef8fbea2f03029a1cc1f5041f0e1d47f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6bba328578feb58c614c11868c259b40484c5fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe4a4fc179b7898055555a11685915473588392e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff9d61db59bb27d16d3f872bff2620d50856b80c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23148","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.670","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: samsung: exynos-chipid: Add NULL pointer check in exynos_chipid_probe()\n\nsoc_dev_attr->revision could be NULL, thus,\na pointer check is added to prevent potential NULL pointer dereference.\nThis is similar to the fix in commit 3027e7b15b02\n(\"ice: Fix some null pointer dereference issues in ice_ptp.c\").\n\nThis issue is found by our static analysis tool."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: soc: samsung: exynos-chipid: Se ha añadido una comprobación de puntero nulo en exynos_chipid_probe(). soc_dev_attr-&gt;revision podría ser nulo, por lo que se ha añadido una comprobación de puntero para evitar posibles desreferencias de punteros nulos. Esto es similar a la corrección en el commit 3027e7b15b02 (\"ice: Se corrigen algunos problemas de desreferencia de puntero nulo en ice_ptp.c\"). Nuestra herramienta de análisis estático ha detectado este problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4129760e462f45f14e61b10408ace61aa7c2ed30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44a2572a0fdcf3e7565763690d579b998a8f0562","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/475b9b45dc32eba58ab794b5d47ac689fc018398","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f51d169fd0d4821bce775618db024062b09a3f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f80fd2ff8bfd13e41554741740e0ca8e6445ded","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ce469d23205249bb17c1135ccadea879576adfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ee067cf0cf82429e9b204283c7d0d8d6891d10e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8222ef6cf29dd7cad21643228f96535cc02b327","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23149","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.780","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: do not start chip while suspended\n\nChecking TPM_CHIP_FLAG_SUSPENDED after the call to tpm_find_get_ops() can\nlead to a spurious tpm_chip_start() call:\n\n[35985.503771] i2c i2c-1: Transfer while suspended\n[35985.503796] WARNING: CPU: 0 PID: 74 at drivers\/i2c\/i2c-core.h:56 __i2c_transfer+0xbe\/0x810\n[35985.503802] Modules linked in:\n[35985.503808] CPU: 0 UID: 0 PID: 74 Comm: hwrng Tainted: G        W          6.13.0-next-20250203-00005-gfa0cb5642941 #19 9c3d7f78192f2d38e32010ac9c90fdc71109ef6f\n[35985.503814] Tainted: [W]=WARN\n[35985.503817] Hardware name: Google Morphius\/Morphius, BIOS Google_Morphius.13434.858.0 10\/26\/2023\n[35985.503819] RIP: 0010:__i2c_transfer+0xbe\/0x810\n[35985.503825] Code: 30 01 00 00 4c 89 f7 e8 40 fe d8 ff 48 8b 93 80 01 00 00 48 85 d2 75 03 49 8b 16 48 c7 c7 0a fb 7c a7 48 89 c6 e8 32 ad b0 fe <0f> 0b b8 94 ff ff ff e9 33 04 00 00 be 02 00 00 00 83 fd 02 0f 5\n[35985.503828] RSP: 0018:ffffa106c0333d30 EFLAGS: 00010246\n[35985.503833] RAX: 074ba64aa20f7000 RBX: ffff8aa4c1167120 RCX: 0000000000000000\n[35985.503836] RDX: 0000000000000000 RSI: ffffffffa77ab0e4 RDI: 0000000000000001\n[35985.503838] RBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000\n[35985.503841] R10: 0000000000000004 R11: 00000001000313d5 R12: ffff8aa4c10f1820\n[35985.503843] R13: ffff8aa4c0e243c0 R14: ffff8aa4c1167250 R15: ffff8aa4c1167120\n[35985.503846] FS:  0000000000000000(0000) GS:ffff8aa4eae00000(0000) knlGS:0000000000000000\n[35985.503849] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[35985.503852] CR2: 00007fab0aaf1000 CR3: 0000000105328000 CR4: 00000000003506f0\n[35985.503855] Call Trace:\n[35985.503859]  <TASK>\n[35985.503863]  ? __warn+0xd4\/0x260\n[35985.503868]  ? __i2c_transfer+0xbe\/0x810\n[35985.503874]  ? report_bug+0xf3\/0x210\n[35985.503882]  ? handle_bug+0x63\/0xb0\n[35985.503887]  ? exc_invalid_op+0x16\/0x50\n[35985.503892]  ? asm_exc_invalid_op+0x16\/0x20\n[35985.503904]  ? __i2c_transfer+0xbe\/0x810\n[35985.503913]  tpm_cr50_i2c_transfer_message+0x24\/0xf0\n[35985.503920]  tpm_cr50_i2c_read+0x8e\/0x120\n[35985.503928]  tpm_cr50_request_locality+0x75\/0x170\n[35985.503935]  tpm_chip_start+0x116\/0x160\n[35985.503942]  tpm_try_get_ops+0x57\/0x90\n[35985.503948]  tpm_find_get_ops+0x26\/0xd0\n[35985.503955]  tpm_get_random+0x2d\/0x80\n\nDon't move forward with tpm_chip_start() inside tpm_try_get_ops(), unless\nTPM_CHIP_FLAG_SUSPENDED is not set. tpm_find_get_ops() will return NULL in\nsuch a failure case."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tpm: no iniciar el chip mientras está suspendido. Comprobar TPM_CHIP_FLAG_SUSPENDED después de la llamada a tpm_find_get_ops() puede provocar una llamada falsa a tpm_chip_start(): [35985.503771] i2c i2c-1: Transferencia mientras está suspendido [35985.503796] ADVERTENCIA: CPU: 0 PID: 74 en drivers\/i2c\/i2c-core.h:56 __i2c_transfer+0xbe\/0x810 [35985.503802] Módulos vinculados en: [35985.503808] CPU: 0 UID: 0 PID: 74 Comm: hwrng Tainted: GW 6.13.0-next-20250203-00005-gfa0cb5642941 #19 9c3d7f78192f2d38e32010ac9c90fdc71109ef6f [35985.503814] Contaminado: [W]=WARN [35985.503817] Nombre del hardware: Google Morphius\/Morphius, BIOS Google_Morphius.13434.858.0 26\/10\/2023 [35985.503819] RIP: 0010:__i2c_transfer+0xbe\/0x810 [35985.503825] Código: 30 01 00 00 4c 89 f7 e8 40 fe d8 ff 48 8b 93 80 01 00 00 48 85 d2 75 03 49 8b 16 48 c7 c7 0a fb 7c a7 48 89 c6 e8 32 ad b0 fe &lt;0f&gt; 0b b8 94 ff ff ff e9 33 04 00 00 be 02 00 00 00 83 fd 02 0f 5 [35985.503828] RSP: 0018:ffffa106c0333d30 EFLAGS: 00010246 [35985.503833] RAX: 074ba64aa20f7000 RBX: ffff8aa4c1167120 RCX: 0000000000000000 [35985.503836] RDX: 0000000000000000 RSI: ffffffffa77ab0e4 RDI: 0000000000000001 [35985.503838] RBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000 [35985.503841] R10: 0000000000000004 R11: 00000001000313d5 R12: ffff8aa4c10f1820 [35985.503843] R13: ffff8aa4c0e243c0 R14: ffff8aa4c1167250 R15: ffff8aa4c1167120 [35985.503846] FS: 0000000000000000(0000) GS:ffff8aa4eae00000(0000) knlGS:0000000000000000 [35985.503849] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [35985.503852] CR2: 00007fab0aaf1000 CR3: 0000000105328000 CR4: 00000000003506f0 [35985.503855] Rastreo de llamadas: [35985.503859]  [35985.503863] ? __warn+0xd4\/0x260 [35985.503868] ? __i2c_transfer+0xbe\/0x810 [35985.503874] ? report_bug+0xf3\/0x210 [35985.503882] ? handle_bug+0x63\/0xb0 [35985.503887] ? exc_invalid_op+0x16\/0x50 [35985.503892] ? asm_exc_invalid_op+0x16\/0x20 [35985.503904] ? __i2c_transfer+0xbe\/0x810 [35985.503913] tpm_cr50_i2c_transfer_message+0x24\/0xf0 [35985.503920] tpm_cr50_i2c_read+0x8e\/0x120 [35985.503928] tpm_cr50_request_locality+0x75\/0x170 [35985.503935] tpm_chip_start+0x116\/0x160 [35985.503942] tpm_try_get_ops+0x57\/0x90 [35985.503948] tpm_find_get_ops+0x26\/0xd0 [35985.503955] tpm_get_random+0x2d\/0x80 No avance con tpm_chip_start() dentro de tpm_try_get_ops(), a menos que TPM_CHIP_FLAG_SUSPENDED no esté configurado. tpm_find_get_ops() devolverá NULL en tal caso de falla."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1404dff1e11bf927b70ac25e1de97bed9742ede4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17d253af4c2c8a2acf84bb55a0c2045f150b7dfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e74e2394eed90aff5c3a08c1f51f476d4de71d02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1044e995b64d70ef90ef6f2b89955b127497702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3cb81cb96d587f9f235a11789d1ec0992643078","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23150","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:50.893","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix off-by-one error in do_split\n\nSyzkaller detected a use-after-free issue in ext4_insert_dentry that was\ncaused by out-of-bounds access due to incorrect splitting in do_split.\n\nBUG: KASAN: use-after-free in ext4_insert_dentry+0x36a\/0x6d0 fs\/ext4\/namei.c:2109\nWrite of size 251 at addr ffff888074572f14 by task syz-executor335\/5847\n\nCPU: 0 UID: 0 PID: 5847 Comm: syz-executor335 Not tainted 6.12.0-rc6-syzkaller-00318-ga9cda7c0ffed #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/30\/2024\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189\n __asan_memcpy+0x40\/0x70 mm\/kasan\/shadow.c:106\n ext4_insert_dentry+0x36a\/0x6d0 fs\/ext4\/namei.c:2109\n add_dirent_to_buf+0x3d9\/0x750 fs\/ext4\/namei.c:2154\n make_indexed_dir+0xf98\/0x1600 fs\/ext4\/namei.c:2351\n ext4_add_entry+0x222a\/0x25d0 fs\/ext4\/namei.c:2455\n ext4_add_nondir+0x8d\/0x290 fs\/ext4\/namei.c:2796\n ext4_symlink+0x920\/0xb50 fs\/ext4\/namei.c:3431\n vfs_symlink+0x137\/0x2e0 fs\/namei.c:4615\n do_symlinkat+0x222\/0x3a0 fs\/namei.c:4641\n __do_sys_symlink fs\/namei.c:4662 [inline]\n __se_sys_symlink fs\/namei.c:4660 [inline]\n __x64_sys_symlink+0x7a\/0x90 fs\/namei.c:4660\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n <\/TASK>\n\nThe following loop is located right above 'if' statement.\n\nfor (i = count-1; i >= 0; i--) {\n\t\/* is more than half of this entry in 2nd half of the block? *\/\n\tif (size + map[i].size\/2 > blocksize\/2)\n\t\tbreak;\n\tsize += map[i].size;\n\tmove++;\n}\n\n'i' in this case could go down to -1, in which case sum of active entries\nwouldn't exceed half the block size, but previous behaviour would also do\nsplit in half if sum would exceed at the very last block, which in case of\nhaving too many long name files in a single block could lead to\nout-of-bounds access and following use-after-free.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: se corrige el error de uno en uno en do_split Syzkaller detectó un problema de use-after-free en ext4_insert_dentry que fue causado por un acceso fuera de los límites debido a una división incorrecta en do_split. ERROR: KASAN: use-after-free en ext4_insert_dentry+0x36a\/0x6d0 fs\/ext4\/namei.c:2109 Escritura de tamaño 251 en la dirección ffff888074572f14 por la tarea syz-executor335\/5847 CPU: 0 UID: 0 PID: 5847 Comm: syz-executor335 No contaminado 6.12.0-rc6-syzkaller-00318-ga9cda7c0ffed #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 30\/10\/2024 Rastreo de llamadas:   __dump_stack lib\/dump_stack.c:94 [inline] dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120 print_address_description mm\/kasan\/report.c:377 [inline] print_report+0x169\/0x550 mm\/kasan\/report.c:488 kasan_report+0x143\/0x180 mm\/kasan\/report.c:601 kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189 __asan_memcpy+0x40\/0x70 mm\/kasan\/shadow.c:106 ext4_insert_dentry+0x36a\/0x6d0 fs\/ext4\/namei.c:2109 add_dirent_to_buf+0x3d9\/0x750 fs\/ext4\/namei.c:2154 make_indexed_dir+0xf98\/0x1600 fs\/ext4\/namei.c:2351 ext4_add_entry+0x222a\/0x25d0 fs\/ext4\/namei.c:2455 ext4_add_nondir+0x8d\/0x290 fs\/ext4\/namei.c:2796 ext4_symlink+0x920\/0xb50 fs\/ext4\/namei.c:3431 vfs_symlink+0x137\/0x2e0 fs\/namei.c:4615 do_symlinkat+0x222\/0x3a0 fs\/namei.c:4641 __do_sys_symlink fs\/namei.c:4662 [inline] __se_sys_symlink fs\/namei.c:4660 [inline] __x64_sys_symlink+0x7a\/0x90 fs\/namei.c:4660 do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline] do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83 entry_SYSCALL_64_after_hwframe+0x77\/0x7f  El siguiente bucle se encuentra justo encima de la declaración 'if'. for (i = count-1; i &gt;= 0; i--) { \/* ¿hay más de la mitad de esta entrada en la 2da mitad del bloque? *\/ if (size + map[i].size\/2 &gt; blocksize\/2) break; size += map[i].size; move++; } En este caso, la 'i' podría bajar a -1, en cuyo caso la suma de las entradas activas no superaría la mitad del tamaño del bloque. Sin embargo, el comportamiento anterior también se dividiría por la mitad si la suma superara el tamaño del último bloque. Esto, al tener demasiados archivos con nombres largos en un solo bloque, podría provocar un acceso fuera de los límites y el consiguiente uso después de la liberación. Encontrado por el Centro de Verificación de Linux (linuxtesting.org) con Syzkaller."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16d9067f00e3a7d1df7c3aa9c20d214923d27e10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17df39f455f1289319d4d09e4826aa46852ffd17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2883e9e74f73f9265e5f8d1aaaa89034b308e433","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eeb1085bf7bd5c7ba796ca4119925fa5d336a3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35d0aa6db9d93307085871ceab8a729594a98162","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/515c34cff899eb5dae6aa7eee01c1295b07d81af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94824ac9a8aaf2fb3c54b4bdde842db80ffa555d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab0cc5c25552ae0d20eae94b40a93be11b080fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b96bd2c3db26ad0daec5b78c85c098b53900e2e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23151","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.003","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: host: Fix race between unprepare and queue_buf\n\nA client driver may use mhi_unprepare_from_transfer() to quiesce\nincoming data during the client driver's tear down. The client driver\nmight also be processing data at the same time, resulting in a call to\nmhi_queue_buf() which will invoke mhi_gen_tre(). If mhi_gen_tre() runs\nafter mhi_unprepare_from_transfer() has torn down the channel, a panic\nwill occur due to an invalid dereference leading to a page fault.\n\nThis occurs because mhi_gen_tre() does not verify the channel state\nafter locking it. Fix this by having mhi_gen_tre() confirm the channel\nstate is valid, or return error to avoid accessing deinitialized data.\n\n[mani: added stable tag]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bus: mhi: host: Corrección de la competencia entre unprepare y queue_buf. Un controlador de cliente podría usar mhi_unprepare_from_transfer() para silenciar los datos entrantes durante su desconexión. El controlador de cliente también podría estar procesando datos simultáneamente, lo que resulta en una llamada a mhi_queue_buf(), que invocará mhi_gen_tre(). Si mhi_gen_tre() se ejecuta después de que mhi_unprepare_from_transfer() haya desconectado el canal, se producirá un pánico debido a una desreferencia no válida que provoca un fallo de página. Esto ocurre porque mhi_gen_tre() no verifica el estado del canal después de bloquearlo. Para solucionar esto, haga que mhi_gen_tre() confirme que el estado del canal es válido o devuelva un error para evitar acceder a los datos desinicializados. [mani: etiqueta estable añadida]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0686a818d77a431fc3ba2fab4b46bbb04e8c9380","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/178e5657c8fd285125cc6743a81b513bce099760","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e7ecf181cbdde9753204ada3883ca1704d8702b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f084993c90d9d0b4a52a349ede5120f992a7ca1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/899d0353ea69681f474b6bc9de32c663b89672da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a77955f7704b2a00385e232cbcc1cb06b5c7a425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee1fce83ed56450087309b9b74ad9bcb2b010fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23152","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.110","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64\/crc-t10dif: fix use of out-of-scope array in crc_t10dif_arch()\n\nFix a silly bug where an array was used outside of its scope."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm64\/crc-t10dif: se corrige el uso de una matriz fuera de alcance en crc_t10dif_arch() Se corrige un error tonto en el que se usaba una matriz fuera de su alcance."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bd9e1a03e579a01dfa66dbaa53d0219c33cbc463","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d48b663f410f8b35b8ba9bd597bafaa00f53293b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23153","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.210","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm\/crc-t10dif: fix use of out-of-scope array in crc_t10dif_arch()\n\nFix a silly bug where an array was used outside of its scope."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm\/crc-t10dif: corrige el uso de una matriz fuera de alcance en crc_t10dif_arch() Corrige un error tonto en el que se usaba una matriz fuera de su alcance."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3371f569223c4e8d36edbb0ba789ee5f5cb7316f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8eba735be74e74776f9f6d9c691bdb75b08b29c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23154","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.310","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring\/net: fix io_req_post_cqe abuse by send bundle\n\n[  114.987980][ T5313] WARNING: CPU: 6 PID: 5313 at io_uring\/io_uring.c:872 io_req_post_cqe+0x12e\/0x4f0\n[  114.991597][ T5313] RIP: 0010:io_req_post_cqe+0x12e\/0x4f0\n[  115.001880][ T5313] Call Trace:\n[  115.002222][ T5313]  <TASK>\n[  115.007813][ T5313]  io_send+0x4fe\/0x10f0\n[  115.009317][ T5313]  io_issue_sqe+0x1a6\/0x1740\n[  115.012094][ T5313]  io_wq_submit_work+0x38b\/0xed0\n[  115.013223][ T5313]  io_worker_handle_work+0x62a\/0x1600\n[  115.013876][ T5313]  io_wq_worker+0x34f\/0xdf0\n\nAs the comment states, io_req_post_cqe() should only be used by\nmultishot requests, i.e. REQ_F_APOLL_MULTISHOT, which bundled sends are\nnot. Add a flag signifying whether a request wants to post multiple\nCQEs. Eventually REQ_F_APOLL_MULTISHOT should imply the new flag, but\nthat's left out for simplicity."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: io_uring\/net: corrección del abuso de io_req_post_cqe por parte del paquete de envío [ 114.987980][ T5313] ADVERTENCIA: CPU: 6 PID: 5313 en io_uring\/io_uring.c:872 io_req_post_cqe+0x12e\/0x4f0 [ 114.991597][ T5313] RIP: 0010:io_req_post_cqe+0x12e\/0x4f0 [ 115.001880][ T5313] Rastreo de llamadas: [ 115.002222][ T5313]  [ 115.007813][ T5313] io_send+0x4fe\/0x10f0 [ 115.009317][ T5313] io_issue_sqe+0x1a6\/0x1740 [ 115.012094][ T5313] io_wq_submit_work+0x38b\/0xed0 [ 115.013223][ T5313] io_worker_handle_work+0x62a\/0x1600 [ 115.013876][ T5313] io_wq_worker+0x34f\/0xdf0 Como se indica en el comentario, io_req_post_cqe() solo debe usarse en solicitudes multienvío, como REQ_F_APOLL_MULTISHOT, que no se usan en envíos agrupados. Agregue un indicador que indique si una solicitud desea publicar múltiples CQE. Finalmente, REQ_F_APOLL_MULTISHOT debería implicar la nueva bandera, pero esto se omite para simplificar."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6889ae1b4df1579bcdffef023e2ea9a982565dff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7888c9fc0b2d3636f2e821ed1ad3c6920fa8e378","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9aa804e6b9696998308095fb9d335046a71550f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7c6d081c19a5e11bbd77bb97a62cff2b6b21cb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23155","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.413","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: Fix accessing freed irq affinity_hint\n\nThe cpumask should not be a local variable, since its pointer is saved\nto irq_desc and may be accessed from procfs.\nTo fix it, use the persistent mask cpumask_of(cpu#)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: stmmac: Se corrige el acceso a la IRQ liberada affinity_hint. La máscara cpu no debe ser una variable local, ya que su puntero se guarda en irq_desc y se puede acceder desde procfs. Para corregirla, utilice la máscara persistente cpumask_of(cpu#)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9e51a6a44e2c4de780a26e8fe110d708e806a8cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c60d101a226f18e9a8f01bb4c6ca2b47dfcb15ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e148266e104fce396ad624079a6812ac3a9982ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23156","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.517","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi_parser: refactor hfi packet parsing logic\n\nwords_count denotes the number of words in total payload, while data\npoints to payload of various property within it. When words_count\nreaches last word, data can access memory beyond the total payload. This\ncan lead to OOB access. With this patch, the utility api for handling\nindividual properties now returns the size of data consumed. Accordingly\nremaining bytes are calculated before parsing the payload, thereby\neliminates the OOB access possibilities."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: venus: hfi_parser: refactorización de la lógica de análisis de paquetes HFI. words_count indica el número de palabras en el payload total, mientras que data apunta al payload de varias propiedades dentro de ella. Cuando words_count alcanza la última palabra, data puede acceder a memoria más allá de payload total. Esto puede provocar accesos fuera de banda (OOB). Con este parche, la API de utilidad para gestionar propiedades individuales ahora devuelve el tamaño de los datos consumidos. Por consiguiente, los bytes restantes se calculan antes de analizar el payload, eliminando así las posibilidades de accesos fuera de banda (OOB)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05b07e52a0d08239147ba3460045855f4fb398de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0beabe9b49190a02321b02792b29fc0f0e28b51f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f9a4bab7d83738963365372e4745854938eab2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d278c5548d840c4d85d445347b2a5c31b2ab3a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9edaaa8e3e15aab1ca413ab50556de1975bcb329","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a736c72d476d1c7ca7be5018f2614ee61168ad01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb3fd8b7906a12dc2b61389abb742bf6542d97fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f195e94c7af921d99abd79f57026a218d191d2c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23157","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.623","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi_parser: add check to avoid out of bound access\n\nThere is a possibility that init_codecs is invoked multiple times during\nmanipulated payload from video firmware. In such case, if codecs_count\ncan get incremented to value more than MAX_CODEC_NUM, there can be OOB\naccess. Reset the count so that it always starts from beginning."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: venus: hfi_parser: añadir comprobación para evitar accesos fuera de los límites. Existe la posibilidad de que init_codecs se invoque varias veces durante la manipulación de la carga útil del firmware de vídeo. En tal caso, si codecs_count se incrementa a un valor superior a MAX_CODEC_NUM, puede haber accesos fuera de los límites. Restablezca el contador para que siempre comience desde el principio."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/172bf5a9ef70a399bb227809db78442dc01d9e48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ad6aa1464b8a5ce5c194458315021e8d216108e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26bbedd06d85770581fda5d78e78539bb088fad1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b8b9ea4e26a501eb220ea189e42b4527e65bdfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53e376178ceacca3ef1795038b22fc9ef45ff1d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2541e29d82da8a0df728aadec3e0a8db55d517b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb5be9039f91979f8a2fac29f529f746d7848f3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4d88ece4ba91df5b02f1d3f599650f9e9fc0f45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5133a0b25463674903fdc0528e0a29b7267130e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23158","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.733","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: add check to handle incorrect queue size\n\nqsize represents size of shared queued between driver and video\nfirmware. Firmware can modify this value to an invalid large value. In\nsuch situation, empty_space will be bigger than the space actually\navailable. Since new_wr_idx is not checked, so the following code will\nresult in an OOB write.\n...\nqsize = qhdr->q_size\n\nif (wr_idx >= rd_idx)\n empty_space = qsize - (wr_idx - rd_idx)\n....\nif (new_wr_idx < qsize) {\n memcpy(wr_ptr, packet, dwords << 2) --> OOB write\n\nAdd check to ensure qsize is within the allocated size while\nreading and writing packets into the queue."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: venus: hfi: se ha añadido una comprobación para gestionar el tamaño incorrecto de queue size qsize representa el tamaño de la cola compartida entre el controlador y el firmware de vídeo. El firmware puede modificar este valor a un valor grande no válido. En tal situación, el espacio vacío será mayor que el espacio realmente disponible. Dado que new_wr_idx no se comprueba, el siguiente código resultará en una escritura fuera de banda (OOB). ... qsize = qhdr-&gt;q_size if (wr_idx &gt;= rd_idx) empty_space = qsize - (wr_idx - rd_idx) .... if (new_wr_idx &lt; qsize) { memcpy(wr_ptr, packet, dwords &lt;&lt; 2) --&gt; Escritura fuera de banda (OOB). Se ha añadido una comprobación para garantizar que qsize se encuentre dentro del tamaño asignado al leer y escribir paquetes en la cola."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/101a86619aab42bb61f2253bbf720121022eab86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b86c1917e16bafbbb08ab90baaff533aa36c62d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32af5c1fdb9bc274f52ee0472d3b060b18e4aab4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40084302f639b3fe954398c5ba5ee556b7242b54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/679424f8b31446f90080befd0300ea915485b096","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69baf245b23e20efda0079238b27fc63ecf13de1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a45957bcde529169188929816775a575de77d84f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf5f7bb4e0d786f4d9d50ae6b5963935eab71d75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edb89d69b1438681daaf5ca90aed3242df94cc96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23159","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.843","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: add a check to handle OOB in sfr region\n\nsfr->buf_size is in shared memory and can be modified by malicious user.\nOOB write is possible when the size is made higher than actual sfr data\nbuffer. Cap the size to allocated size for such cases."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: venus: hfi: se ha añadido una comprobación para gestionar la escritura OOB en la región sfr. sfr-&gt;buf_size se encuentra en memoria compartida y puede ser modificado por un usuario malintencionado. Es posible escribir OOB cuando el tamaño es mayor que el del búfer de datos sfr. En estos casos, limite el tamaño al tamaño asignado."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b8fb257234e7d2d4b3f48af07c5aa5e11c71634","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4dd109038d513b92d4d33524ffc89ba32e02ba48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e95233af57715d81830fe82b408c633edff59f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/530f623f56a6680792499a8404083e17f8ec51f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af611c70fb889d46d2f654b8996746e59556750","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8879397c0da5e5ec1515262995e82cdfd61b282a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a062d8de0be5525ec8c52f070acf7607ec8cbfe4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d78a8388a27b265fcb2b8d064f088168ac9356b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4b211714bcc70effa60c34d9fa613d182e3ef1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23160","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:51.957","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix a resource leak related to the scp device in FW initialization\n\nOn Mediatek devices with a system companion processor (SCP) the mtk_scp\nstructure has to be removed explicitly to avoid a resource leak.\nFree the structure in case the allocation of the firmware structure fails\nduring the firmware initialization."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: mediatek: vcodec: Se corrige una fuga de recursos relacionada con el dispositivo scp durante la inicialización del firmware. En dispositivos Mediatek con un procesador complementario del sistema (SCP), la estructura mtk_scp debe eliminarse explícitamente para evitar una fuga de recursos. Libere la estructura en caso de que la asignación de la estructura del firmware falle durante la inicialización."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4936cd5817af35d23e4d283f48fa59a18ef481e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f009fa823c54ca0857c81f7525ea5a5d32de29c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac94e1db4b2053059779472eb58a64d504964240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6cb086aa52bd51378a4c9e2b25d2def97770205","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd7bb97ede487b9f075707b7408a9073e0d474b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23161","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.060","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: vmd: Make vmd_dev::cfg_lock a raw_spinlock_t type\n\nThe access to the PCI config space via pci_ops::read and pci_ops::write is\na low-level hardware access. The functions can be accessed with disabled\ninterrupts even on PREEMPT_RT. The pci_lock is a raw_spinlock_t for this\npurpose.\n\nA spinlock_t becomes a sleeping lock on PREEMPT_RT, so it cannot be\nacquired with disabled interrupts. The vmd_dev::cfg_lock is accessed in\nthe same context as the pci_lock.\n\nMake vmd_dev::cfg_lock a raw_spinlock_t type so it can be used with\ninterrupts disabled.\n\nThis was reported as:\n\n  BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:48\n  Call Trace:\n   rt_spin_lock+0x4e\/0x130\n   vmd_pci_read+0x8d\/0x100 [vmd]\n   pci_user_read_config_byte+0x6f\/0xe0\n   pci_read_config+0xfe\/0x290\n   sysfs_kf_bin_read+0x68\/0x90\n\n[bigeasy: reword commit message]\nTested-off-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>\n[kwilczynski: commit log]\n[bhelgaas: add back report info from\nhttps:\/\/lore.kernel.org\/lkml\/20241218115951.83062-1-ryotkkr98@gmail.com\/]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: PCI: vmd: Convertir vmd_dev::cfg_lock en tipo raw_spinlock_t El acceso al espacio de configuración PCI mediante pci_ops::read y pci_ops::write es un acceso de hardware de bajo nivel. Se puede acceder a las funciones con interrupciones deshabilitadas incluso en PREEMPT_RT. El pci_lock es un raw_spinlock_t para este propósito. Un spinlock_t se convierte en un bloqueo inactivo en PREEMPT_RT, por lo que no se puede adquirir con interrupciones deshabilitadas. Se accede a vmd_dev::cfg_lock en el mismo contexto que el pci_lock. Convertir vmd_dev::cfg_lock en un tipo raw_spinlock_t para que pueda usarse con interrupciones deshabilitadas. Esto se informó como: ERROR: función inactiva llamada desde un contexto no válido en kernel\/locking\/spinlock_rt.c:48 Rastreo de llamadas: rt_spin_lock+0x4e\/0x130 vmd_pci_read+0x8d\/0x100 [vmd] pci_user_read_config_byte+0x6f\/0xe0 pci_read_config+0xfe\/0x290 sysfs_kf_bin_read+0x68\/0x90 [bigeasy: reformular el mensaje de confirmación] Probado por: Luis Claudio R. Goncalves  [kwilczynski: registro de confirmaciones] [bhelgaas: agregar información del informe de https:\/\/lore.kernel.org\/lkml\/20241218115951.83062-1-ryotkkr98@gmail.com\/]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13e5148f70e81991acbe0bab5b1b50ba699116e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18056a48669a040bef491e63b25896561ee14d90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20d0a9062c031068fa39f725a32f182b709b5525","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2358046ead696ca5c7c628d6c0e2c6792619a3e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c3cfcf0b4bf43530788b08a8eaf7896ec567484","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c250262d6485ca333e9821f85b07eb383ec546b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2968c812339593ac6e2bdd5cc3adabe3f05fa53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23162","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.167","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/vf: Don't try to trigger a full GT reset if VF\n\nVFs don't have access to the GDRST(0x941c) register that driver\nuses to reset a GT. Attempt to trigger a reset using debugfs:\n\n $ cat \/sys\/kernel\/debug\/dri\/0000:00:02.1\/gt0\/force_reset\n\nor due to a hang condition detected by the driver leads to:\n\n [ ] xe 0000:00:02.1: [drm] GT0: trying reset from force_reset [xe]\n [ ] xe 0000:00:02.1: [drm] GT0: reset queued\n [ ] xe 0000:00:02.1: [drm] GT0: reset started\n [ ] ------------[ cut here ]------------\n [ ] xe 0000:00:02.1: [drm] GT0: VF is trying to write 0x1 to an inaccessible register 0x941c+0x0\n [ ] WARNING: CPU: 3 PID: 3069 at drivers\/gpu\/drm\/xe\/xe_gt_sriov_vf.c:996 xe_gt_sriov_vf_write32+0xc6\/0x580 [xe]\n [ ] RIP: 0010:xe_gt_sriov_vf_write32+0xc6\/0x580 [xe]\n [ ] Call Trace:\n [ ]  <TASK>\n [ ]  ? show_regs+0x6c\/0x80\n [ ]  ? __warn+0x93\/0x1c0\n [ ]  ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe]\n [ ]  ? report_bug+0x182\/0x1b0\n [ ]  ? handle_bug+0x6e\/0xb0\n [ ]  ? exc_invalid_op+0x18\/0x80\n [ ]  ? asm_exc_invalid_op+0x1b\/0x20\n [ ]  ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe]\n [ ]  ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe]\n [ ]  ? xe_gt_tlb_invalidation_reset+0xef\/0x110 [xe]\n [ ]  ? __mutex_unlock_slowpath+0x41\/0x2e0\n [ ]  xe_mmio_write32+0x64\/0x150 [xe]\n [ ]  do_gt_reset+0x2f\/0xa0 [xe]\n [ ]  gt_reset_worker+0x14e\/0x1e0 [xe]\n [ ]  process_one_work+0x21c\/0x740\n [ ]  worker_thread+0x1db\/0x3c0\n\nFix that by sending H2G VF_RESET(0x5507) action instead."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/xe\/vf: No intente activar un reinicio completo de GT si VF Los VF no tienen acceso al registro GDRST(0x941c) que el controlador usa para reiniciar un GT. Intento de activar un reinicio usando debugfs: $ cat \/sys\/kernel\/debug\/dri\/0000:00:02.1\/gt0\/force_reset o debido a una condición de bloqueo detectada por el controlador conduce a: [ ] xe 0000:00:02.1: [drm] GT0: intentando reiniciar desde force_reset [xe] [ ] xe 0000:00:02.1: [drm] GT0: reinicio en cola [ ] xe 0000:00:02.1: [drm] GT0: reinicio iniciado [ ] ------------[ cortar aquí ]------------ [ ] xe 0000:00:02.1: [drm] GT0: VF está intentando escribir 0x1 en un registro inaccesible 0x941c+0x0 [ ] ADVERTENCIA: CPU: 3 PID: 3069 en controladores\/gpu\/drm\/xe\/xe_gt_sriov_vf.c:996 xe_gt_sriov_vf_write32+0xc6\/0x580 [xe] [ ] RIP: 0010:xe_gt_sriov_vf_write32+0xc6\/0x580 [xe] [ ] Rastreo de llamadas: [ ]  [ ] ? show_regs+0x6c\/0x80 [ ] ? __warn+0x93\/0x1c0 [ ] ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe] [ ] ? report_bug+0x182\/0x1b0 [ ] ? handle_bug+0x6e\/0xb0 [ ] ? asm_exc_invalid_op+0x1b\/0x20 [ ] ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe] [ ] ? xe_gt_sriov_vf_write32+0xc6\/0x580 [xe] [ ] ? xe_gt_tlb_invalidation_reset+0xef\/0x110 [xe] [ ] ? Solucione esto enviando la acción H2G VF_RESET(0x5507) en su lugar."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2eec2fa8666dcecebae33a565a818c9de9af8b50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/459777724d306315070d24608fcd89aea85516d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b16edb3213e4ae4a3138bb20703ae367e88a01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9bc61a61372897886f58fdaa5582e3f7bf9a50b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23163","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.273","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: vlan: don't propagate flags on open\n\nWith the device instance lock, there is now a possibility of a deadlock:\n\n[    1.211455] ============================================\n[    1.211571] WARNING: possible recursive locking detected\n[    1.211687] 6.14.0-rc5-01215-g032756b4ca7a-dirty #5 Not tainted\n[    1.211823] --------------------------------------------\n[    1.211936] ip\/184 is trying to acquire lock:\n[    1.212032] ffff8881024a4c30 (&dev->lock){+.+.}-{4:4}, at: dev_set_allmulti+0x4e\/0xb0\n[    1.212207]\n[    1.212207] but task is already holding lock:\n[    1.212332] ffff8881024a4c30 (&dev->lock){+.+.}-{4:4}, at: dev_open+0x50\/0xb0\n[    1.212487]\n[    1.212487] other info that might help us debug this:\n[    1.212626]  Possible unsafe locking scenario:\n[    1.212626]\n[    1.212751]        CPU0\n[    1.212815]        ----\n[    1.212871]   lock(&dev->lock);\n[    1.212944]   lock(&dev->lock);\n[    1.213016]\n[    1.213016]  *** DEADLOCK ***\n[    1.213016]\n[    1.213143]  May be due to missing lock nesting notation\n[    1.213143]\n[    1.213294] 3 locks held by ip\/184:\n[    1.213371]  #0: ffffffff838b53e0 (rtnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x1b\/0xa0\n[    1.213543]  #1: ffffffff84e5fc70 (&net->rtnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x37\/0xa0\n[    1.213727]  #2: ffff8881024a4c30 (&dev->lock){+.+.}-{4:4}, at: dev_open+0x50\/0xb0\n[    1.213895]\n[    1.213895] stack backtrace:\n[    1.213991] CPU: 0 UID: 0 PID: 184 Comm: ip Not tainted 6.14.0-rc5-01215-g032756b4ca7a-dirty #5\n[    1.213993] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04\/01\/2014\n[    1.213994] Call Trace:\n[    1.213995]  <TASK>\n[    1.213996]  dump_stack_lvl+0x8e\/0xd0\n[    1.214000]  print_deadlock_bug+0x28b\/0x2a0\n[    1.214020]  lock_acquire+0xea\/0x2a0\n[    1.214027]  __mutex_lock+0xbf\/0xd40\n[    1.214038]  dev_set_allmulti+0x4e\/0xb0 # real_dev->flags & IFF_ALLMULTI\n[    1.214040]  vlan_dev_open+0xa5\/0x170 # ndo_open on vlandev\n[    1.214042]  __dev_open+0x145\/0x270\n[    1.214046]  __dev_change_flags+0xb0\/0x1e0\n[    1.214051]  netif_change_flags+0x22\/0x60 # IFF_UP vlandev\n[    1.214053]  dev_change_flags+0x61\/0xb0 # for each device in group from dev->vlan_info\n[    1.214055]  vlan_device_event+0x766\/0x7c0 # on netdevsim0\n[    1.214058]  notifier_call_chain+0x78\/0x120\n[    1.214062]  netif_open+0x6d\/0x90\n[    1.214064]  dev_open+0x5b\/0xb0 # locks netdevsim0\n[    1.214066]  bond_enslave+0x64c\/0x1230\n[    1.214075]  do_set_master+0x175\/0x1e0 # on netdevsim0\n[    1.214077]  do_setlink+0x516\/0x13b0\n[    1.214094]  rtnl_newlink+0xaba\/0xb80\n[    1.214132]  rtnetlink_rcv_msg+0x440\/0x490\n[    1.214144]  netlink_rcv_skb+0xeb\/0x120\n[    1.214150]  netlink_unicast+0x1f9\/0x320\n[    1.214153]  netlink_sendmsg+0x346\/0x3f0\n[    1.214157]  __sock_sendmsg+0x86\/0xb0\n[    1.214160]  ____sys_sendmsg+0x1c8\/0x220\n[    1.214164]  ___sys_sendmsg+0x28f\/0x2d0\n[    1.214179]  __x64_sys_sendmsg+0xef\/0x140\n[    1.214184]  do_syscall_64+0xec\/0x1d0\n[    1.214190]  entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n[    1.214191] RIP: 0033:0x7f2d1b4a7e56\n\nDevice setup:\n\n     netdevsim0 (down)\n     ^        ^\n  bond        netdevsim1.100@netdevsim1 allmulticast=on (down)\n\nWhen we enslave the lower device (netdevsim0) which has a vlan, we\npropagate vlan's allmuti\/promisc flags during ndo_open. This causes\n(re)locking on of the real_dev.\n\nPropagate allmulti\/promisc on flags change, not on the open. There\nis a slight semantics change that vlans that are down now propagate\nthe flags, but this seems unlikely to result in the real issues.\n\nReproducer:\n\n  echo 0 1 > \/sys\/bus\/netdevsim\/new_device\n\n  dev_path=$(ls -d \/sys\/bus\/netdevsim\/devices\/netdevsim0\/net\/*)\n  dev=$(echo $dev_path | rev | cut -d\/ -f1 | rev)\n\n  ip link set dev $dev name netdevsim0\n  ip link set dev netdevsim0 up\n\n  ip link add link netdevsim0 name netdevsim0.100 type vlan id 100\n  ip link set dev netdevsim0.100 allm\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: vlan: no propagar indicadores al abrir Con el bloqueo de la instancia del dispositivo, ahora existe la posibilidad de un interbloqueo: [ 1.211455] =============================================== [ 1.211571] ADVERTENCIA: posible bloqueo recursivo detectado [ 1.211687] 6.14.0-rc5-01215-g032756b4ca7a-dirty #5 No contaminado [ 1.211823] -------------------------------------------- [ 1.211936] ip\/184 is trying to acquire lock: [ 1.212032] ffff8881024a4c30 (&amp;dev-&gt;lock){+.+.}-{4:4}, at: dev_set_allmulti+0x4e\/0xb0 [ 1.212207] [ 1.212207] but task is already holding lock: [ 1.212332] ffff8881024a4c30 (&amp;dev-&gt;lock){+.+.}-{4:4}, at: dev_open+0x50\/0xb0 [ 1.212487] [ 1.212487] other info that might help us debug this: [ 1.212626] Possible unsafe locking scenario: [ 1.212626] [ 1.212751] CPU0 [ 1.212815] ---- [ 1.212871] lock(&amp;dev-&gt;lock); [ 1.212944] lock(&amp;dev-&gt;lock); [ 1.213016] [ 1.213016] *** DEADLOCK *** [ 1.213016] [ 1.213143] May be due to missing lock nesting notation [ 1.213143] [ 1.213294] 3 locks held by ip\/184: [ 1.213371] #0: ffffffff838b53e0 (rtnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x1b\/0xa0 [ 1.213543] #1: ffffffff84e5fc70 (&amp;net-&gt;rtnl_mutex){+.+.}-{4:4}, at: rtnl_nets_lock+0x37\/0xa0 [ 1.213727] #2: ffff8881024a4c30 (&amp;dev-&gt;lock){+.+.}-{4:4}, at: dev_open+0x50\/0xb0 [ 1.213895] [ 1.213895] stack backtrace: [ 1.213991] CPU: 0 UID: 0 PID: 184 Comm: ip Not tainted 6.14.0-rc5-01215-g032756b4ca7a-dirty #5 [ 1.213993] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04\/01\/2014 [ 1.213994] Call Trace: [ 1.213995]  [ 1.213996] dump_stack_lvl+0x8e\/0xd0 [ 1.214000] print_deadlock_bug+0x28b\/0x2a0 [ 1.214020] lock_acquire+0xea\/0x2a0 [ 1.214027] __mutex_lock+0xbf\/0xd40 [ 1.214038] dev_set_allmulti+0x4e\/0xb0 # real_dev-&gt;flags &amp; IFF_ALLMULTI [ 1.214040] vlan_dev_open+0xa5\/0x170 # ndo_open on vlandev [ 1.214042] __dev_open+0x145\/0x270 [ 1.214046] __dev_change_flags+0xb0\/0x1e0 [ 1.214051] netif_change_flags+0x22\/0x60 # IFF_UP vlandev [ 1.214053] dev_change_flags+0x61\/0xb0 # for each device in group from dev-&gt;vlan_info [ 1.214055] vlan_device_event+0x766\/0x7c0 # on netdevsim0 [ 1.214058] notifier_call_chain+0x78\/0x120 [ 1.214062] netif_open+0x6d\/0x90 [ 1.214064] dev_open+0x5b\/0xb0 # locks netdevsim0 [ 1.214066] bond_enslave+0x64c\/0x1230 [ 1.214075] do_set_master+0x175\/0x1e0 # on netdevsim0 [ 1.214077] do_setlink+0x516\/0x13b0 [ 1.214094] rtnl_newlink+0xaba\/0xb80 [ 1.214132] rtnetlink_rcv_msg+0x440\/0x490 [ 1.214144] netlink_rcv_skb+0xeb\/0x120 [ 1.214150] netlink_unicast+0x1f9\/0x320 [ 1.214153] netlink_sendmsg+0x346\/0x3f0 [ 1.214157] __sock_sendmsg+0x86\/0xb0 [ 1.214160] ____sys_sendmsg+0x1c8\/0x220 [ 1.214164] ___sys_sendmsg+0x28f\/0x2d0 [ 1.214179] __x64_sys_sendmsg+0xef\/0x140 [ 1.214184] do_syscall_64+0xec\/0x1d0 [ 1.214190] entry_SYSCALL_64_after_hwframe+0x77\/0x7f [ 1.214191] RIP: 0033:0x7f2d1b4a7e56 Device setup: netdevsim0 (down) ^ ^ bond netdevsim1.100@netdevsim1 allmulticast=on (down)  Al esclavizar el dispositivo inferior (netdevsim0) que tiene una VLAN, propagamos los indicadores allmuti\/promisc de la VLAN durante ndo_open. Esto provoca el (re)bloqueo de real_dev. Allmulti\/promisc se propaga cuando cambian los indicadores, no cuando están abiertos. Hay un ligero cambio semántico: las VLAN inactivas ahora propagan los indicadores, pero es poco probable que esto cause los problemas reales. Reproductor: echo 0 1 &gt; \/sys\/bus\/netdevsim\/new_device dev_path=$(ls -d \/sys\/bus\/netdevsim\/devices\/netdevsim0\/net\/*) dev=$(echo $dev_path | rev | cut -d\/ -f1 | rev) ip link set dev $dev name netdevsim0 ip link set dev netdevsim0 up ip link add link netdevsim0 name netdevsim0.100 type vlan id 100 ip link set dev netdevsim0.100 allm ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27b918007d96402aba10ed52a6af8015230f1793","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/299d7d27af6b5844cda06a0fdfa635705e1bc50f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/523fa0979d842443aa14b80002e45b471cbac137","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/538b43aa21e3b17c110104efd218b966d2eda5f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53fb25e90c0a503a17c639341ba5e755cb2feb5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8980018a9806743d9b80837330d46f06ecf78516","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a32f1d4f1f4c9d978698f3c718621f6198f2e7ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1e3eeb037256a2f1206a8d69810ec47eb152026","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d537859e56bcc3091805c524484a4c85386b3cc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37738","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.383","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: ignore xattrs past end\n\nOnce inside 'ext4_xattr_inode_dec_ref_all' we should\nignore xattrs entries past the 'end' entry.\n\nThis fixes the following KASAN reported issue:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90\nRead of size 4 at addr ffff888012c120c4 by task repro\/2065\n\nCPU: 1 UID: 0 PID: 2065 Comm: repro Not tainted 6.13.0-rc2+ #11\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x1fd\/0x300\n ? tcp_gro_dev_warn+0x260\/0x260\n ? _printk+0xc0\/0x100\n ? read_lock_is_recursive+0x10\/0x10\n ? irq_work_queue+0x72\/0xf0\n ? __virt_addr_valid+0x17b\/0x4b0\n print_address_description+0x78\/0x390\n print_report+0x107\/0x1f0\n ? __virt_addr_valid+0x17b\/0x4b0\n ? __virt_addr_valid+0x3ff\/0x4b0\n ? __phys_addr+0xb5\/0x160\n ? ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90\n kasan_report+0xcc\/0x100\n ? ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90\n ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90\n ? ext4_xattr_delete_inode+0xd30\/0xd30\n ? __ext4_journal_ensure_credits+0x5f0\/0x5f0\n ? __ext4_journal_ensure_credits+0x2b\/0x5f0\n ? inode_update_timestamps+0x410\/0x410\n ext4_xattr_delete_inode+0xb64\/0xd30\n ? ext4_truncate+0xb70\/0xdc0\n ? ext4_expand_extra_isize_ea+0x1d20\/0x1d20\n ? __ext4_mark_inode_dirty+0x670\/0x670\n ? ext4_journal_check_start+0x16f\/0x240\n ? ext4_inode_is_fast_symlink+0x2f2\/0x3a0\n ext4_evict_inode+0xc8c\/0xff0\n ? ext4_inode_is_fast_symlink+0x3a0\/0x3a0\n ? do_raw_spin_unlock+0x53\/0x8a0\n ? ext4_inode_is_fast_symlink+0x3a0\/0x3a0\n evict+0x4ac\/0x950\n ? proc_nr_inodes+0x310\/0x310\n ? trace_ext4_drop_inode+0xa2\/0x220\n ? _raw_spin_unlock+0x1a\/0x30\n ? iput+0x4cb\/0x7e0\n do_unlinkat+0x495\/0x7c0\n ? try_break_deleg+0x120\/0x120\n ? 0xffffffff81000000\n ? __check_object_size+0x15a\/0x210\n ? strncpy_from_user+0x13e\/0x250\n ? getname_flags+0x1dc\/0x530\n __x64_sys_unlinkat+0xc8\/0xf0\n do_syscall_64+0x65\/0x110\n entry_SYSCALL_64_after_hwframe+0x67\/0x6f\nRIP: 0033:0x434ffd\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 8\nRSP: 002b:00007ffc50fa7b28 EFLAGS: 00000246 ORIG_RAX: 0000000000000107\nRAX: ffffffffffffffda RBX: 00007ffc50fa7e18 RCX: 0000000000434ffd\nRDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000005\nRBP: 00007ffc50fa7be0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001\nR13: 00007ffc50fa7e08 R14: 00000000004bbf30 R15: 0000000000000001\n <\/TASK>\n\nThe buggy address belongs to the object at ffff888012c12000\n which belongs to the cache filp of size 360\nThe buggy address is located 196 bytes inside of\n freed 360-byte region [ffff888012c12000, ffff888012c12168)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x12c12\nhead: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\nflags: 0x40(head|node=0|zone=0)\npage_type: f5(slab)\nraw: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nraw: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nhead: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000001 ffffea00004b0481 ffffffffffffffff 0000000000000000\nhead: 0000000000000002 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff888012c11f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff888012c12000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n> ffff888012c12080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                           ^\n ffff888012c12100: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc\n ffff888012c12180: fc fc fc fc fc fc fc fc fc\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: ignorar xattrs después del final Una vez dentro de 'ext4_xattr_inode_dec_ref_all' debemos ignorar las entradas xattrs más allá de la entrada 'end'. Esto corrige el siguiente problema informado por KASAN: ====================================================================== ERROR: KASAN: slab-use-after-free en ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90 Lectura de tamaño 4 en la dirección ffff888012c120c4 por la tarea repro\/2065 CPU: 1 UID: 0 PID: 2065 Comm: repro No contaminado 6.13.0-rc2+ #11 Nombre del hardware: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 01\/04\/2014 Rastreo de llamadas:   dump_stack_lvl+0x1fd\/0x300 ? tcp_gro_dev_warn+0x260\/0x260 ? _printk+0xc0\/0x100 ? read_lock_is_recursive+0x10\/0x10 ? irq_work_queue+0x72\/0xf0 ? __virt_addr_valid+0x17b\/0x4b0 print_address_description+0x78\/0x390 print_report+0x107\/0x1f0 ? __virt_addr_valid+0x17b\/0x4b0 ? __virt_addr_valid+0x3ff\/0x4b0 ? __phys_addr+0xb5\/0x160 ? ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90 kasan_report+0xcc\/0x100 ? ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90 ext4_xattr_inode_dec_ref_all+0xb8c\/0xe90 ? ext4_xattr_delete_inode+0xd30\/0xd30 ? __ext4_journal_ensure_credits+0x5f0\/0x5f0 ? __ext4_journal_ensure_credits+0x2b\/0x5f0 ? inode_update_timestamps+0x410\/0x410 ext4_xattr_delete_inode+0xb64\/0xd30 ? ext4_truncate+0xb70\/0xdc0 ? ext4_expand_extra_isize_ea+0x1d20\/0x1d20 ? __ext4_mark_inode_dirty+0x670\/0x670 ? ext4_journal_check_start+0x16f\/0x240 ? ext4_inode_is_fast_symlink+0x2f2\/0x3a0 ext4_evict_inode+0xc8c\/0xff0 ? ext4_inode_is_fast_symlink+0x3a0\/0x3a0 ? do_raw_spin_unlock+0x53\/0x8a0 ? ext4_inode_is_fast_symlink+0x3a0\/0x3a0 evict+0x4ac\/0x950 ? proc_nr_inodes+0x310\/0x310 ? trace_ext4_drop_inode+0xa2\/0x220 ? _raw_spin_unlock+0x1a\/0x30 ? iput+0x4cb\/0x7e0 do_unlinkat+0x495\/0x7c0 ? try_break_deleg+0x120\/0x120 ? 0xffffffff81000000 ? __check_object_size+0x15a\/0x210 ? strncpy_from_user+0x13e\/0x250 ? getname_flags+0x1dc\/0x530 __x64_sys_unlinkat+0xc8\/0xf0 do_syscall_64+0x65\/0x110 entry_SYSCALL_64_after_hwframe+0x67\/0x6f RIP: 0033:0x434ffd Code: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 8 RSP: 002b:00007ffc50fa7b28 EFLAGS: 00000246 ORIG_RAX: 0000000000000107 RAX: ffffffffffffffda RBX: 00007ffc50fa7e18 RCX: 0000000000434ffd RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000005 RBP: 00007ffc50fa7be0 R08: 0000000000000000 R09: 0000000000000000 R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001 R13: 00007ffc50fa7e08 R14: 00000000004bbf30 R15: 0000000000000001  La dirección con errores pertenece al objeto en ffff888012c12000 que pertenece al filp de caché de tamaño 360 La dirección con errores se encuentra 196 bytes dentro de la región liberada de 360 bytes [ffff888012c12000, ffff888012c12168) La dirección con errores pertenece a la página física: page: refcount:1 mapcount:0 mapping:000000000000000 index:0x0 pfn:0x12c12 head: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 conteo de pines:0 indicadores: 0x40(cabeza|nodo=0|zona=0) tipo_de_página: f5(losa) sin procesar: 0000000000000040 ffff888000ad7640 ffffea0000497a00 muerto000000000004 sin procesar: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000 cabeza: 0000000000000040 ffff888000ad7640 ffffea0000497a00 muerto000000000004 cabeza: 0000000000000000 0000000000100010 00000001f5000000 00000000000000000 cabeza: 0000000000000001 ffffea00004b0481 ffffffffffffffff 000000000000000 cabeza: 0000000000000002 000000000000000 00000000ffffffff 000000000000000 página volcada porque: kasan: se detectó un acceso incorrecto Estado de la memoria alrededor de la dirección con errores: ffff888012c11f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ffff888012c12000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb &gt; ffff888012c12080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff888012c12100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb  ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/362a90cecd36e8a5c415966d0b75b04a0270e4dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bc6317033f365ce578eb6039445fb66162722fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aff941cb0f7d0c897c3698ad2e30672709135e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76c365fa7e2a8bb85f0190cdb4b8cdc99b2fdce3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/836e625b03a666cf93ff5be328c8cb30336db872","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8e008b60492cf6fd31ef127aea6d02fd3d314cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf9291a3449b04688b81e32621e88de8f4314b54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb59cc31b6ea076021d14b04e7faab1636b87d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f737418b6de31c962c7192777ee4018906975383","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37739","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.500","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid out-of-bounds access in f2fs_truncate_inode_blocks()\n\nsyzbot reports an UBSAN issue as below:\n\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in fs\/f2fs\/node.h:381:10\nindex 18446744073709550692 is out of range for type '__le32[5]' (aka 'unsigned int[5]')\nCPU: 0 UID: 0 PID: 5318 Comm: syz.0.0 Not tainted 6.14.0-rc3-syzkaller-00060-g6537cfb395f3 #0\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n ubsan_epilogue lib\/ubsan.c:231 [inline]\n __ubsan_handle_out_of_bounds+0x121\/0x150 lib\/ubsan.c:429\n get_nid fs\/f2fs\/node.h:381 [inline]\n f2fs_truncate_inode_blocks+0xa5e\/0xf60 fs\/f2fs\/node.c:1181\n f2fs_do_truncate_blocks+0x782\/0x1030 fs\/f2fs\/file.c:808\n f2fs_truncate_blocks+0x10d\/0x300 fs\/f2fs\/file.c:836\n f2fs_truncate+0x417\/0x720 fs\/f2fs\/file.c:886\n f2fs_file_write_iter+0x1bdb\/0x2550 fs\/f2fs\/file.c:5093\n aio_write+0x56b\/0x7c0 fs\/aio.c:1633\n io_submit_one+0x8a7\/0x18a0 fs\/aio.c:2052\n __do_sys_io_submit fs\/aio.c:2111 [inline]\n __se_sys_io_submit+0x171\/0x2e0 fs\/aio.c:2081\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f238798cde9\n\nindex 18446744073709550692 (decimal, unsigned long long)\n= 0xfffffffffffffc64 (hexadecimal, unsigned long long)\n= -924 (decimal, long long)\n\nIn f2fs_truncate_inode_blocks(), UBSAN detects that get_nid() tries to\naccess .i_nid[-924], it means both offset[0] and level should zero.\n\nThe possible case should be in f2fs_do_truncate_blocks(), we try to\ntruncate inode size to zero, however, dn.ofs_in_node is zero and\ndn.node_page is not an inode page, so it fails to truncate inode page,\nand then pass zeroed free_from to f2fs_truncate_inode_blocks(), result\nin this issue.\n\n\tif (dn.ofs_in_node || IS_INODE(dn.node_page)) {\n\t\tf2fs_truncate_data_blocks_range(&dn, count);\n\t\tfree_from += count;\n\t}\n\nI guess the reason why dn.node_page is not an inode page could be: there\nare multiple nat entries share the same node block address, once the node\nblock address was reused, f2fs_get_node_page() may load a non-inode block.\n\nLet's add a sanity check for such condition to avoid out-of-bounds access\nissue."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: f2fs: corrección para evitar el acceso fuera de los límites en f2fs_truncate_inode_blocks() syzbot informa un problema de UBSAN como se muestra a continuación: ------------[ cortar aquí ]------------ UBSAN: array-index-out-of-bounds en fs\/f2fs\/node.h:381:10 el índice 18446744073709550692 está fuera de rango para el tipo '__le32[5]' (también conocido como 'unsigned int[5]') CPU: 0 UID: 0 PID: 5318 Comm: syz.0.0 No contaminado 6.14.0-rc3-syzkaller-00060-g6537cfb395f3 #0 Rastreo de llamadas:  __dump_stack lib\/dump_stack.c:94 [en línea] dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120 ubsan_epilogue lib\/ubsan.c:231 [en línea] __ubsan_handle_out_of_bounds+0x121\/0x150 lib\/ubsan.c:429 get_nid fs\/f2fs\/node.h:381 [en línea] f2fs_truncate_inode_blocks+0xa5e\/0xf60 fs\/f2fs\/node.c:1181 f2fs_do_truncate_blocks+0x782\/0x1030 fs\/f2fs\/file.c:808 f2fs_truncate_blocks+0x10d\/0x300 fs\/f2fs\/archivo.c:836 f2fs_truncate+0x417\/0x720 fs\/f2fs\/archivo.c:886 f2fs_file_write_iter+0x1bdb\/0x2550 fs\/f2fs\/archivo.c:5093 aio_write+0x56b\/0x7c0 fs\/aio.c:1633 io_submit_one+0x8a7\/0x18a0 fs\/aio.c:2052 __do_sys_io_submit fs\/aio.c:2111 [en línea] __se_sys_io_submit+0x171\/0x2e0 fs\/aio.c:2081 do_syscall_x64 arch\/x86\/entry\/common.c:52 [en línea] do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83 entry_SYSCALL_64_after_hwframe+0x77\/0x7f RIP: 0033:0x7f238798cde9 índice 18446744073709550692 (decimal, unsigned long long) = 0xfffffffffffffc64 (hexadecimal, unsigned long long) = -924 (decimal, long long) En f2fs_truncate_inode_blocks(), UBSAN detecta que get_nid() intenta acceder a .i_nid[-924], lo que significa que tanto offset[0] como level deben ser cero. El caso posible debería estar en f2fs_do_truncate_blocks(), tratamos de truncar el tamaño del inodo a cero, sin embargo, dn.ofs_in_node es cero y dn.node_page no es una página de inodo, por lo que no puede truncar la página de inodo y luego pasa free_from en cero a f2fs_truncate_inode_blocks(), lo que da como resultado este problema. if (dn.ofs_in_node || IS_INODE(dn.node_page)) { f2fs_truncate_data_blocks_range(&amp;dn, count); free_from += count; } Supongo que la razón por la que dn.node_page no es una página de inodo podría ser: hay varias entradas nat que comparten la misma dirección de bloque de nodo, una vez que se reutilizó la dirección de bloque de nodo, f2fs_get_node_page() puede cargar un bloque que no sea de inodo. Agreguemos una verificación de cordura para tal condición para evitar problemas de acceso fuera de los límites."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/67e16ccba74dd8de0a7b10062f1e02d77432f573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ba8b41d0aa4b82f90f0c416cb53fcef9696525d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b5e5aac44fee122947a269f9034c048e4c295de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98dbf2af63de0b551082c9bc48333910e009b09f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a67e1bf03c609a751d1740a1789af25e599966fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7242fd7946d4cba0411effb6b5048ca55125747","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6494977bd4a83862118a05f57a8df40256951c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecc461331604b07cdbdb7360dbdf78471653264c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37740","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.617","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add sanity check for agwidth in dbMount\n\nThe width in dmapctl of the AG is zero, it trigger a divide error when\ncalculating the control page level in dbAllocAG.\n\nTo avoid this issue, add a check for agwidth in dbAllocAG."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: jfs: añadir una comprobación de validez para agwidth en dbMount. El ancho en dmapctl del AG es cero, lo que genera un error de división al calcular el nivel de página de control en dbAllocAG. Para evitar este problema, añada una comprobación para agwidth en dbAllocAG."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/722e72f7f9c69fcb3ab7988c2471feff7a4c8de1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a065cec230aa807c18828a3eee82f1c8592c2adf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a260bf14cd347878f01f70739ba829442a474a16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a741f29ac8b6374c9904be8b7ac7cdfcd7e7e4fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8c96a9e7660e5e5eea445978fe8f2e432d91c1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc0bc4cb62ce5fa0c383e3bf0765d01f46bd49ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd97c8a4f90810f228ee40d1055148fa146dd57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf2846f22e8575d6b4b6a66f2100f168b8cd73d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3f85edb03183fb06539e5b50dd2c4bb42b869f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37741","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.723","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Prevent copying of nlink with value 0 from disk inode\n\nsyzbot report a deadlock in diFree. [1]\n\nWhen calling \"ioctl$LOOP_SET_STATUS64\", the offset value passed in is 4,\nwhich does not match the mounted loop device, causing the mapping of the\nmounted loop device to be invalidated.\n\nWhen creating the directory and creating the inode of iag in diReadSpecial(),\nread the page of fixed disk inode (AIT) in raw mode in read_metapage(), the\nmetapage data it returns is corrupted, which causes the nlink value of 0 to be\nassigned to the iag inode when executing copy_from_dinode(), which ultimately\ncauses a deadlock when entering diFree().\n\nTo avoid this, first check the nlink value of dinode before setting iag inode.\n\n[1]\nWARNING: possible recursive locking detected\n6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0 Not tainted\n--------------------------------------------\nsyz-executor301\/5309 is trying to acquire lock:\nffff888044548920 (&(imap->im_aglock[index])){+.+.}-{3:3}, at: diFree+0x37c\/0x2fb0 fs\/jfs\/jfs_imap.c:889\n\nbut task is already holding lock:\nffff888044548920 (&(imap->im_aglock[index])){+.+.}-{3:3}, at: diAlloc+0x1b6\/0x1630\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n  lock(&(imap->im_aglock[index]));\n  lock(&(imap->im_aglock[index]));\n\n *** DEADLOCK ***\n\n May be due to missing lock nesting notation\n\n5 locks held by syz-executor301\/5309:\n #0: ffff8880422a4420 (sb_writers#9){.+.+}-{0:0}, at: mnt_want_write+0x3f\/0x90 fs\/namespace.c:515\n #1: ffff88804755b390 (&type->i_mutex_dir_key#6\/1){+.+.}-{3:3}, at: inode_lock_nested include\/linux\/fs.h:850 [inline]\n #1: ffff88804755b390 (&type->i_mutex_dir_key#6\/1){+.+.}-{3:3}, at: filename_create+0x260\/0x540 fs\/namei.c:4026\n #2: ffff888044548920 (&(imap->im_aglock[index])){+.+.}-{3:3}, at: diAlloc+0x1b6\/0x1630\n #3: ffff888044548890 (&imap->im_freelock){+.+.}-{3:3}, at: diNewIAG fs\/jfs\/jfs_imap.c:2460 [inline]\n #3: ffff888044548890 (&imap->im_freelock){+.+.}-{3:3}, at: diAllocExt fs\/jfs\/jfs_imap.c:1905 [inline]\n #3: ffff888044548890 (&imap->im_freelock){+.+.}-{3:3}, at: diAllocAG+0x4b7\/0x1e50 fs\/jfs\/jfs_imap.c:1669\n #4: ffff88804755a618 (&jfs_ip->rdwrlock\/1){++++}-{3:3}, at: diNewIAG fs\/jfs\/jfs_imap.c:2477 [inline]\n #4: ffff88804755a618 (&jfs_ip->rdwrlock\/1){++++}-{3:3}, at: diAllocExt fs\/jfs\/jfs_imap.c:1905 [inline]\n #4: ffff88804755a618 (&jfs_ip->rdwrlock\/1){++++}-{3:3}, at: diAllocAG+0x869\/0x1e50 fs\/jfs\/jfs_imap.c:1669\n\nstack backtrace:\nCPU: 0 UID: 0 PID: 5309 Comm: syz-executor301 Not tainted 6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n print_deadlock_bug+0x483\/0x620 kernel\/locking\/lockdep.c:3037\n check_deadlock kernel\/locking\/lockdep.c:3089 [inline]\n validate_chain+0x15e2\/0x5920 kernel\/locking\/lockdep.c:3891\n __lock_acquire+0x1384\/0x2050 kernel\/locking\/lockdep.c:5202\n lock_acquire+0x1ed\/0x550 kernel\/locking\/lockdep.c:5825\n __mutex_lock_common kernel\/locking\/mutex.c:608 [inline]\n __mutex_lock+0x136\/0xd70 kernel\/locking\/mutex.c:752\n diFree+0x37c\/0x2fb0 fs\/jfs\/jfs_imap.c:889\n jfs_evict_inode+0x32d\/0x440 fs\/jfs\/inode.c:156\n evict+0x4e8\/0x9b0 fs\/inode.c:725\n diFreeSpecial fs\/jfs\/jfs_imap.c:552 [inline]\n duplicateIXtree+0x3c6\/0x550 fs\/jfs\/jfs_imap.c:3022\n diNewIAG fs\/jfs\/jfs_imap.c:2597 [inline]\n diAllocExt fs\/jfs\/jfs_imap.c:1905 [inline]\n diAllocAG+0x17dc\/0x1e50 fs\/jfs\/jfs_imap.c:1669\n diAlloc+0x1d2\/0x1630 fs\/jfs\/jfs_imap.c:1590\n ialloc+0x8f\/0x900 fs\/jfs\/jfs_inode.c:56\n jfs_mkdir+0x1c5\/0xba0 fs\/jfs\/namei.c:225\n vfs_mkdir+0x2f9\/0x4f0 fs\/namei.c:4257\n do_mkdirat+0x264\/0x3a0 fs\/namei.c:4280\n __do_sys_mkdirat fs\/namei.c:4295 [inline]\n __se_sys_mkdirat fs\/namei.c:4293 [inline]\n __x64_sys_mkdirat+0x87\/0xa0 fs\/namei.c:4293\n do_syscall_x64 arch\/x86\/en\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: jfs: Impide la copia de nlink con valor 0 desde el inodo de disco. syzbot informa de un bloqueo en diFree. [1] Al llamar a \"ioctl$LOOP_SET_STATUS64\", el valor de desplazamiento pasado es 4, que no coincide con el dispositivo de bucle montado, lo que invalida la asignación de dicho dispositivo. Al crear el directorio y el inodo de iag en diReadSpecial(), al leer la página del inodo de disco fijo (AIT) en modo sin procesar en read_metapage(), los datos de metapágina que devuelve están dañados, lo que provoca que el valor nlink de 0 se asigne al inodo iag al ejecutar copy_from_dinode(), lo que finalmente provoca un bloqueo al acceder a diFree(). Para evitar esto, compruebe primero el valor nlink de dinode antes de configurar el inodo iag. [1] ADVERTENCIA: se detectó un posible bloqueo recursivo 6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0 No contaminado -------------------------------------------- syz-executor301\/5309 está intentando adquirir el bloqueo: ffff888044548920 (&amp;(imap-&gt;im_aglock[index])){+.+.}-{3:3}, en: diFree+0x37c\/0x2fb0 fs\/jfs\/jfs_imap.c:889 pero la tarea ya tiene el bloqueo: ffff888044548920 (&amp;(imap-&gt;im_aglock[index])){+.+.}-{3:3}, en: diAlloc+0x1b6\/0x1630 Otra información que podría ayudarnos a depurar esto: Posible escenario de bloqueo inseguro: CPU0 ---- bloqueo(&amp;(imap-&gt;im_aglock[índice])); bloqueo(&amp;(imap-&gt;im_aglock[índice])); *** BLOQUEO INTERMEDIO *** Puede deberse a la falta de notación de anidamiento de bloqueos. 5 bloqueos mantenidos por syz-executor301\/5309: #0: ffff8880422a4420 (sb_writers#9){.+.+}-{0:0}, en: mnt_want_write+0x3f\/0x90 fs\/namespace.c:515 #1: ffff88804755b390 (&amp;type-&gt;i_mutex_dir_key#6\/1){+.+.}-{3:3}, en: inode_lock_nested include\/linux\/fs.h:850 [en línea] #1: ffff88804755b390 (&amp;type-&gt;i_mutex_dir_key#6\/1){+.+.}-{3:3}, en: nombre_archivo_crear+0x260\/0x540 fs\/nombrei.c:4026 #2: ffff888044548920 (&amp;(imap-&gt;im_aglock[índice])){+.+.}-{3:3}, en: diAlloc+0x1b6\/0x1630 #3: ffff888044548890 (&amp;imap-&gt;im_freelock){+.+.}-{3:3}, en: diNewIAG fs\/jfs\/jfs_imap.c:2460 [en línea] #3: ffff888044548890 (&amp;imap-&gt;im_freelock){+.+.}-{3:3}, en: diAllocExt fs\/jfs\/jfs_imap.c:1905 [en línea] #3: ffff888044548890 (&amp;imap-&gt;im_freelock){+.+.}-{3:3}, en: diAllocAG+0x4b7\/0x1e50 fs\/jfs\/jfs_imap.c:1669 #4: ffff88804755a618 (&amp;jfs_ip-&gt;rdwrlock\/1){++++}-{3:3}, en: diNewIAG fs\/jfs\/jfs_imap.c:2477 [en línea] #4: ffff88804755a618 (&amp;jfs_ip-&gt;rdwrlock\/1){++++}-{3:3}, en: diAllocExt fs\/jfs\/jfs_imap.c:1905 [en línea] #4: ffff88804755a618 (&amp;jfs_ip-&gt;rdwrlock\/1){++++}-{3:3}, en: diAllocAG+0x869\/0x1e50 fs\/jfs\/jfs_imap.c:1669 seguimiento de pila: CPU: 0 UID: 0 PID: 5309 Comm: syz-executor301 No contaminado 6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0 Nombre del hardware: PC estándar QEMU (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 01\/04\/2014 Seguimiento de llamadas:  __dump_stack lib\/dump_stack.c:94 [en línea] dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120 print_deadlock_bug+0x483\/0x620 kernel\/locking\/lockdep.c:3037 check_deadlock kernel\/locking\/lockdep.c:3089 [en línea] validate_chain+0x15e2\/0x5920 kernel\/locking\/lockdep.c:3891 __lock_acquire+0x1384\/0x2050 kernel\/locking\/lockdep.c:5202 lock_acquire+0x1ed\/0x550 kernel\/locking\/lockdep.c:5825 __mutex_lock_common kernel\/locking\/mutex.c:608 [en línea] __mutex_lock+0x136\/0xd70 kernel\/locking\/mutex.c:752 diFree+0x37c\/0x2fb0 fs\/jfs\/jfs_imap.c:889 jfs_evict_inode+0x32d\/0x440 fs\/jfs\/inode.c:156 evict+0x4e8\/0x9b0 fs\/inode.c:725 diFreeSpecial fs\/jfs\/jfs_imap.c:552 [en línea] duplicateIXtree+0x3c6\/0x550 fs\/jfs\/jfs_imap.c:3022 diNewIAG fs\/jfs\/jfs_imap.c:2597 [en línea] diAllocExt fs\/jfs\/jfs_imap.c:1905 [en línea] diAllocAG+0x17dc\/0x1e50 fs\/jfs\/jfs_imap.c:1669 diAlloc+0x1d2\/0x1630 fs\/jfs\/jfs_imap.c:1590 ialloc+0x8f\/0x900 fs\/jfs\/jfs_inode.c:56 jfs_mkdir+0x1c5\/0xba0 fs\/jfs\/namei.c:225 vfs_mkdir+0x2f9\/0x4f0 fs\/namei.c:4257 do_mkdirat+0x264\/0x3a0 fs\/namei.c:4280 __do_sys_mkdirat fs\/namei.c:4295 [en línea] __se_sys_mkdirat fs\/namei.c:4293 [en "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b2f26d3fba4e9aac314f8bc0963b3fc28c0e456","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86bfeaa18f9e4615b97f2d613e0fcc4ced196527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b5ce75f8bd3ddf480cc0a240d7ff5cdea0444f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/994787341358816d91b2fded288ecb7f129f2b27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b560815528ae8e266fca6038bb5585d13aaef4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeb926e605f97857504bdf748f575e40617e2ef9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c4884b987e5d8d0ec061a4d52653c4f4b9c37e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b61e69bb1c049cf507e3c654fa3dc1568231bd07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9541c2bd0edbdbc5c1148a84d3b48dc8d1b8af2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37742","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:52.870","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix uninit-value access of imap allocated in the diMount() function\n\nsyzbot reports that hex_dump_to_buffer is using uninit-value:\n\n=====================================================\nBUG: KMSAN: uninit-value in hex_dump_to_buffer+0x888\/0x1100 lib\/hexdump.c:171\nhex_dump_to_buffer+0x888\/0x1100 lib\/hexdump.c:171\nprint_hex_dump+0x13d\/0x3e0 lib\/hexdump.c:276\ndiFree+0x5ba\/0x4350 fs\/jfs\/jfs_imap.c:876\njfs_evict_inode+0x510\/0x550 fs\/jfs\/inode.c:156\nevict+0x723\/0xd10 fs\/inode.c:796\niput_final fs\/inode.c:1946 [inline]\niput+0x97b\/0xdb0 fs\/inode.c:1972\ntxUpdateMap+0xf3e\/0x1150 fs\/jfs\/jfs_txnmgr.c:2367\ntxLazyCommit fs\/jfs\/jfs_txnmgr.c:2664 [inline]\njfs_lazycommit+0x627\/0x11d0 fs\/jfs\/jfs_txnmgr.c:2733\nkthread+0x6b9\/0xef0 kernel\/kthread.c:464\nret_from_fork+0x6d\/0x90 arch\/x86\/kernel\/process.c:148\nret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n\nUninit was created at:\nslab_post_alloc_hook mm\/slub.c:4121 [inline]\nslab_alloc_node mm\/slub.c:4164 [inline]\n__kmalloc_cache_noprof+0x8e3\/0xdf0 mm\/slub.c:4320\nkmalloc_noprof include\/linux\/slab.h:901 [inline]\ndiMount+0x61\/0x7f0 fs\/jfs\/jfs_imap.c:105\njfs_mount+0xa8e\/0x11d0 fs\/jfs\/jfs_mount.c:176\njfs_fill_super+0xa47\/0x17c0 fs\/jfs\/super.c:523\nget_tree_bdev_flags+0x6ec\/0x910 fs\/super.c:1636\nget_tree_bdev+0x37\/0x50 fs\/super.c:1659\njfs_get_tree+0x34\/0x40 fs\/jfs\/super.c:635\nvfs_get_tree+0xb1\/0x5a0 fs\/super.c:1814\ndo_new_mount+0x71f\/0x15e0 fs\/namespace.c:3560\npath_mount+0x742\/0x1f10 fs\/namespace.c:3887\ndo_mount fs\/namespace.c:3900 [inline]\n__do_sys_mount fs\/namespace.c:4111 [inline]\n__se_sys_mount+0x71f\/0x800 fs\/namespace.c:4088\n__x64_sys_mount+0xe4\/0x150 fs\/namespace.c:4088\nx64_sys_call+0x39bf\/0x3c30 arch\/x86\/include\/generated\/asm\/syscalls_64.h:166\ndo_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\ndo_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77\/0x7f\n=====================================================\n\nThe reason is that imap is not properly initialized after memory\nallocation. It will cause the snprintf() function to write uninitialized\ndata into linebuf within hex_dump_to_buffer().\n\nFix this by using kzalloc instead of kmalloc to clear its content at the\nbeginning in diMount()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: jfs: Se corrige el acceso a un valor no inicializado de imap asignado en la función diMount() syzbot informa que hex_dump_to_buffer está usando un valor no inicializado: ======================================================== ERROR: KMSAN: un valor no inicializado en hex_dump_to_buffer+0x888\/0x1100 lib\/hexdump.c:171 hex_dump_to_buffer+0x888\/0x1100 lib\/hexdump.c:171 print_hex_dump+0x13d\/0x3e0 lib\/hexdump.c:276 diFree+0x5ba\/0x4350 fs\/jfs\/jfs_imap.c:876 jfs_evict_inode+0x510\/0x550 fs\/jfs\/inode.c:156 evict+0x723\/0xd10 fs\/inode.c:796 iput_final fs\/inode.c:1946 [en línea] iput+0x97b\/0xdb0 fs\/inode.c:1972 txUpdateMap+0xf3e\/0x1150 fs\/jfs\/jfs_txnmgr.c:2367 txLazyCommit fs\/jfs\/jfs_txnmgr.c:2664 [en línea] jfs_lazycommit+0x627\/0x11d0 fs\/jfs\/jfs_txnmgr.c:2733 kthread+0x6b9\/0xef0 kernel\/kthread.c:464 ret_from_fork+0x6d\/0x90 arch\/x86\/kernel\/process.c:148 ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244 Uninit se creó en: slab_post_alloc_hook mm\/slub.c:4121 [en línea] slab_alloc_node mm\/slub.c:4164 [en línea] __kmalloc_cache_noprof+0x8e3\/0xdf0 mm\/slub.c:4320 kmalloc_noprof include\/linux\/slab.h:901 [en línea] diMount+0x61\/0x7f0 fs\/jfs\/jfs_imap.c:105 jfs_mount+0xa8e\/0x11d0 fs\/jfs\/jfs_mount.c:176 jfs_fill_super+0xa47\/0x17c0 fs\/jfs\/super.c:523 obtener_árbol_bdev_flags+0x6ec\/0x910 fs\/super.c:1636 obtener_árbol_bdev+0x37\/0x50 fs\/super.c:1659 jfs_obtener_árbol+0x34\/0x40 fs\/jfs\/super.c:635 vfs_obtener_árbol+0xb1\/0x5a0 fs\/super.c:1814 hacer_nuevo_montaje+0x71f\/0x15e0 fs\/espacio_de_nombres.c:3560 path_mount+0x742\/0x1f10 fs\/namespace.c:3887 do_mount fs\/namespace.c:3900 [en línea] __do_sys_mount fs\/namespace.c:4111 [en línea] __se_sys_mount+0x71f\/0x800 fs\/namespace.c:4088 __x64_sys_mount+0xe4\/0x150 fs\/namespace.c:4088 x64_sys_call+0x39bf\/0x3c30 arch\/x86\/include\/generated\/asm\/syscalls_64.h:166 do_syscall_x64 arch\/x86\/entry\/common.c:52 [en línea] do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83 entry_SYSCALL_64_after_hwframe+0x77\/0x7f == ..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/067347e00a3a7d04afed93f080c6c131e5dd15ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f10732712fce33e53703ffe5ed9155f23814097","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63148ce4904faa668daffdd1d3c1199ae315ef2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7057f3aab47629d38e54eae83505813cf0da1e4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9629d7d66c621671d9a47afe27ca9336bfc8a9ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cab1852368dd74d629ee02abdbc559218ca64dde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0d7eca253ccd0619b3d2b683ffe32218ebca9ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37743","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.000","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Avoid memory leak while enabling statistics\n\nDriver uses monitor destination rings for extended statistics mode and\nstandalone monitor mode. In extended statistics mode, TLVs are parsed from\nthe buffer received from the monitor destination ring and assigned to the\nppdu_info structure to update per-packet statistics. In standalone monitor\nmode, along with per-packet statistics, the packet data (payload) is\ncaptured, and the driver updates per MSDU to mac80211.\n\nWhen the AP interface is enabled, only extended statistics mode is\nactivated. As part of enabling monitor rings for collecting statistics,\nthe driver subscribes to HAL_RX_MPDU_START TLV in the filter\nconfiguration. This TLV is received from the monitor destination ring, and\nkzalloc for the mon_mpdu object occurs, which is not freed, leading to a\nmemory leak. The kzalloc for the mon_mpdu object is only required while\nenabling the standalone monitor interface. This causes a memory leak while\nenabling extended statistics mode in the driver.\n\nFix this memory leak by removing the kzalloc for the mon_mpdu object in\nthe HAL_RX_MPDU_START TLV handling. Additionally, remove the standalone\nmonitor mode handlings in the HAL_MON_BUF_ADDR and HAL_RX_MSDU_END TLVs.\nThese TLV tags will be handled properly when enabling standalone monitor\nmode in the future.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: ath12k: Evitar fugas de memoria al habilitar las estadísticas. El controlador utiliza anillos de destino del monitor para el modo de estadísticas extendidas y el modo de monitor independiente. En el modo de estadísticas extendidas, los TLV se analizan desde el búfer recibido del anillo de destino del monitor y se asignan a la estructura ppdu_info para actualizar las estadísticas por paquete. En el modo de monitor independiente, junto con las estadísticas por paquete, se capturan los datos del paquete (carga útil) y el controlador actualiza por MSDU a mac80211. Cuando la interfaz AP está habilitada, solo se activa el modo de estadísticas extendidas. Como parte de la habilitación de los anillos de monitor para recopilar estadísticas, el controlador se suscribe al TLV HAL_RX_MPDU_START en la configuración del filtro. Este TLV se recibe del anillo de destino del monitor y se produce kzalloc para el objeto mon_mpdu, que no se libera, lo que provoca una fuga de memoria. El kzalloc para el objeto mon_mpdu solo es necesario mientras se habilita la interfaz de monitor independiente. Esto causa una fuga de memoria al habilitar el modo de estadísticas extendidas en el controlador. Solucione esta fuga de memoria eliminando el kzalloc del objeto mon_mpdu en la gestión de la TLV HAL_RX_MPDU_START. Además, elimine la gestión del modo de monitor independiente en las TLV HAL_MON_BUF_ADDR y HAL_RX_MSDU_END. Estas etiquetas TLV se gestionarán correctamente al habilitar el modo de monitor independiente en el futuro. Probado en: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1. Probado en: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/286bab0fc7b9db728dab8c63cadf6be9b3facf8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecfc131389923405be8e7a6f4408fd9321e4d19b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37744","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.100","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix memory leak in ath12k_pci_remove()\n\nKmemleak reported this error:\n\n  unreferenced object 0xffff1c165cec3060 (size 32):\n    comm \"insmod\", pid 560, jiffies 4296964570 (age 235.596s)\n    backtrace:\n      [<000000005434db68>] __kmem_cache_alloc_node+0x1f4\/0x2c0\n      [<000000001203b155>] kmalloc_trace+0x40\/0x88\n      [<0000000028adc9c8>] _request_firmware+0xb8\/0x608\n      [<00000000cad1aef7>] firmware_request_nowarn+0x50\/0x80\n      [<000000005011a682>] local_pci_probe+0x48\/0xd0\n      [<00000000077cd295>] pci_device_probe+0xb4\/0x200\n      [<0000000087184c94>] really_probe+0x150\/0x2c0\n\nThe firmware memory was allocated in ath12k_pci_probe(), but not\nfreed in ath12k_pci_remove() in case ATH12K_FLAG_QMI_FAIL bit is\nset. So call ath12k_fw_unmap() to free the memory.\n\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.2.0-02280-QCAHMTSWPL_V1.0_V2.0_SILICONZ-1"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: ath12k: se corrige la pérdida de memoria en ath12k_pci_remove() Kmemleak informó este error: objeto sin referencia 0xffff1c165cec3060 (tamaño 32): comm \"insmod\", pid 560, jiffies 4296964570 (edad 235.596s) backtrace: [&lt;000000005434db68&gt;] __kmem_cache_alloc_node+0x1f4\/0x2c0 [&lt;000000001203b155&gt;] kmalloc_trace+0x40\/0x88 [&lt;0000000028adc9c8&gt;] _request_firmware+0xb8\/0x608 [&lt;00000000cad1aef7&gt;] firmware_request_nowarn+0x50\/0x80 [&lt;000000005011a682&gt;] local_pci_probe+0x48\/0xd0 [&lt;00000000077cd295&gt;] pci_device_probe+0xb4\/0x200 [&lt;0000000087184c94&gt;] really_probe+0x150\/0x2c0 La memoria del firmware se asignó en ath12k_pci_probe(), pero no se liberó en ath12k_pci_remove() si el bit ATH12K_FLAG_QMI_FAIL está activado. Por lo tanto, se llama ath12k_fw_unmap() para liberar la memoria. Probado en: WCN7850 hw2.0 PCI WLAN.HMT.2.0-02280-QCAHMTSWPL_V1.0_V2.0_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b24394ed5c8a8d8f7b9e3aa9044c31495d46f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cb47b50926a5b9eef8c06506a14cdc0f3d95c53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52e3132e62c31b5ade43dc4495fa81175e6e8398","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb8f4c5f9c487d82a566672b5ed0c9f05e40659b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37745","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.207","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPM: hibernate: Avoid deadlock in hibernate_compressor_param_set()\n\nsyzbot reported a deadlock in lock_system_sleep() (see below).\n\nThe write operation to \"\/sys\/module\/hibernate\/parameters\/compressor\"\nconflicts with the registration of ieee80211 device, resulting in a deadlock\nwhen attempting to acquire system_transition_mutex under param_lock.\n\nTo avoid this deadlock, change hibernate_compressor_param_set() to use\nmutex_trylock() for attempting to acquire system_transition_mutex and\nreturn -EBUSY when it fails.\n\nTask flags need not be saved or adjusted before calling\nmutex_trylock(&system_transition_mutex) because the caller is not going\nto end up waiting for this mutex and if it runs concurrently with system\nsuspend in progress, it will be frozen properly when it returns to user\nspace.\n\nsyzbot report:\n\nsyz-executor895\/5833 is trying to acquire lock:\nffffffff8e0828c8 (system_transition_mutex){+.+.}-{4:4}, at: lock_system_sleep+0x87\/0xa0 kernel\/power\/main.c:56\n\nbut task is already holding lock:\nffffffff8e07dc68 (param_lock){+.+.}-{4:4}, at: kernel_param_lock kernel\/params.c:607 [inline]\nffffffff8e07dc68 (param_lock){+.+.}-{4:4}, at: param_attr_store+0xe6\/0x300 kernel\/params.c:586\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #3 (param_lock){+.+.}-{4:4}:\n       __mutex_lock_common kernel\/locking\/mutex.c:585 [inline]\n       __mutex_lock+0x19b\/0xb10 kernel\/locking\/mutex.c:730\n       ieee80211_rate_control_ops_get net\/mac80211\/rate.c:220 [inline]\n       rate_control_alloc net\/mac80211\/rate.c:266 [inline]\n       ieee80211_init_rate_ctrl_alg+0x18d\/0x6b0 net\/mac80211\/rate.c:1015\n       ieee80211_register_hw+0x20cd\/0x4060 net\/mac80211\/main.c:1531\n       mac80211_hwsim_new_radio+0x304e\/0x54e0 drivers\/net\/wireless\/virtual\/mac80211_hwsim.c:5558\n       init_mac80211_hwsim+0x432\/0x8c0 drivers\/net\/wireless\/virtual\/mac80211_hwsim.c:6910\n       do_one_initcall+0x128\/0x700 init\/main.c:1257\n       do_initcall_level init\/main.c:1319 [inline]\n       do_initcalls init\/main.c:1335 [inline]\n       do_basic_setup init\/main.c:1354 [inline]\n       kernel_init_freeable+0x5c7\/0x900 init\/main.c:1568\n       kernel_init+0x1c\/0x2b0 init\/main.c:1457\n       ret_from_fork+0x45\/0x80 arch\/x86\/kernel\/process.c:148\n       ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n\n-> #2 (rtnl_mutex){+.+.}-{4:4}:\n       __mutex_lock_common kernel\/locking\/mutex.c:585 [inline]\n       __mutex_lock+0x19b\/0xb10 kernel\/locking\/mutex.c:730\n       wg_pm_notification drivers\/net\/wireguard\/device.c:80 [inline]\n       wg_pm_notification+0x49\/0x180 drivers\/net\/wireguard\/device.c:64\n       notifier_call_chain+0xb7\/0x410 kernel\/notifier.c:85\n       notifier_call_chain_robust kernel\/notifier.c:120 [inline]\n       blocking_notifier_call_chain_robust kernel\/notifier.c:345 [inline]\n       blocking_notifier_call_chain_robust+0xc9\/0x170 kernel\/notifier.c:333\n       pm_notifier_call_chain_robust+0x27\/0x60 kernel\/power\/main.c:102\n       snapshot_open+0x189\/0x2b0 kernel\/power\/user.c:77\n       misc_open+0x35a\/0x420 drivers\/char\/misc.c:179\n       chrdev_open+0x237\/0x6a0 fs\/char_dev.c:414\n       do_dentry_open+0x735\/0x1c40 fs\/open.c:956\n       vfs_open+0x82\/0x3f0 fs\/open.c:1086\n       do_open fs\/namei.c:3830 [inline]\n       path_openat+0x1e88\/0x2d80 fs\/namei.c:3989\n       do_filp_open+0x20c\/0x470 fs\/namei.c:4016\n       do_sys_openat2+0x17a\/0x1e0 fs\/open.c:1428\n       do_sys_open fs\/open.c:1443 [inline]\n       __do_sys_openat fs\/open.c:1459 [inline]\n       __se_sys_openat fs\/open.c:1454 [inline]\n       __x64_sys_openat+0x175\/0x210 fs\/open.c:1454\n       do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n       do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\n-> #1 ((pm_chain_head).rwsem){++++}-{4:4}:\n       down_read+0x9a\/0x330 kernel\/locking\/rwsem.c:1524\n       blocking_notifier_call_chain_robust kerne\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: PM: hibernate: Evitar interbloqueo en hibernate_compressor_param_set(). syzbot reportó un interbloqueo en lock_system_sleep() (ver más abajo). La operación de escritura en \"\/sys\/module\/hibernate\/parameters\/compressor\" entra en conflicto con el registro del dispositivo ieee80211, lo que resulta en un interbloqueo al intentar adquirir system_transition_mutex bajo param_lock. Para evitar este interbloqueo, modifique hibernate_compressor_param_set() para usar mutex_trylock() al intentar adquirir system_transition_mutex y devolver -EBUSY si falla. No es necesario guardar ni ajustar los indicadores de tarea antes de llamar a mutex_trylock(&amp;system_transition_mutex), ya que el llamador no esperará este mutex y, si se ejecuta simultáneamente con la suspensión del sistema en curso, se congelará correctamente al regresar al espacio de usuario. Informe de syzbot: syz-executor895\/5833 está intentando adquirir el bloqueo: ffffffff8e0828c8 (system_transition_mutex){+.+.}-{4:4}, en: lock_system_sleep+0x87\/0xa0 kernel\/power\/main.c:56 pero la tarea ya tiene el bloqueo: ffffffff8e07dc68 (param_lock){+.+.}-{4:4}, en: kernel_param_lock kernel\/params.c:607 [en línea] ffffffff8e07dc68 (param_lock){+.+.}-{4:4}, en: param_attr_store+0xe6\/0x300 kernel\/params.c:586 cuyo bloqueo ya depende del nuevo bloqueo. la cadena de dependencia existente (en orden inverso) es: -&gt; #3 (param_lock){+.+.}-{4:4}: __mutex_lock_common kernel\/locking\/mutex.c:585 [en línea] __mutex_lock+0x19b\/0xb10 kernel\/locking\/mutex.c:730 ieee80211_rate_control_ops_get net\/mac80211\/rate.c:220 [en línea] rate_control_alloc net\/mac80211\/rate.c:266 [en línea] ieee80211_init_rate_ctrl_alg+0x18d\/0x6b0 net\/mac80211\/rate.c:1015 ieee80211_register_hw+0x20cd\/0x4060 net\/mac80211\/main.c:1531 mac80211_hwsim_new_radio+0x304e\/0x54e0 drivers\/net\/wireless\/virtual\/mac80211_hwsim.c:5558 init_mac80211_hwsim+0x432\/0x8c0 drivers\/net\/wireless\/virtual\/mac80211_hwsim.c:6910 hacer_una_initcall+0x128\/0x700 init\/main.c:1257 hacer_nivel_initcall init\/main.c:1319 [en línea] hacer_initcalls init\/main.c:1335 [en línea] hacer_configuración_básica init\/main.c:1354 [en línea] kernel_init_freeable+0x5c7\/0x900 init\/main.c:1568 kernel_init+0x1c\/0x2b0 init\/main.c:1457 ret_from_fork+0x45\/0x80 arch\/x86\/kernel\/process.c:148 ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244 -&gt; #2 (rtnl_mutex){+.+.}-{4:4}: __mutex_lock_common kernel\/locking\/mutex.c:585 [en línea] __mutex_lock+0x19b\/0xb10 kernel\/locking\/mutex.c:730 wg_pm_notification drivers\/net\/wireguard\/device.c:80 [en línea] wg_pm_notification+0x49\/0x180 controladores\/net\/wireguard\/device.c:64 cadena_de_llamadas_del_notificador+0xb7\/0x410 kernel\/notifier.c:85 cadena_de_llamadas_del_notificador_robust kernel\/notifier.c:120 [en línea] cadena_de_llamadas_del_notificador_robust kernel\/notifier.c:345 [en línea] cadena_de_llamadas_del_notificador_robust+0xc9\/0x170 kernel\/notifier.c:333 cadena_de_llamadas_del_notificador_robust+0x27\/0x60 kernel\/power\/main.c:102 snapshot_open+0x189\/0x2b0 kernel\/power\/user.c:77 misc_open+0x35a\/0x420 controladores\/char\/misc.c:179 chrdev_open+0x237\/0x6a0 fs\/char_dev.c:414 do_dentry_open+0x735\/0x1c40 fs\/open.c:956 vfs_open+0x82\/0x3f0 fs\/open.c:1086 do_open fs\/namei.c:3830 [en línea] path_openat+0x1e88\/0x2d80 fs\/namei.c:3989 do_filp_open+0x20c\/0x470 fs\/namei.c:4016 do_sys_openat2+0x17a\/0x1e0 fs\/open.c:1428 do_sys_open fs\/open.c:1443 [en línea] __do_sys_openat fs\/open.c:1459 [en línea] __se_sys_openat fs\/open.c:1454 [en línea] __x64_sys_openat+0x175\/0x210 fs\/open.c:1454 do_syscall_x64 arch\/x86\/entry\/common.c:52 [en línea] do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83 entry_SYSCALL_64_after_hwframe+0x77\/0x7f -&gt; #1 ((pm_chain_head).rwsem){++++}-{4:4}: down_read+0x9a\/0x330 kernel\/locking\/rwsem.c:1524 blocking_notifier_call_chain_robust kernel ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11ae4fec1f4b4ee06770a572c37d89cbaecbf66e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b2c3806ef4253595dfcb8b58352cfab55c9bfb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52323ed1444ea5c2a5f1754ea0a2d9c8c216ccdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dbaa8583af74814a5aae03a337cb1722c414808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37746","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.313","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/dwc_pcie: fix duplicate pci_dev devices\n\nDuring platform_device_register, wrongly using struct device\npci_dev as platform_data caused a kmemdup copy of pci_dev. Worse\nstill, accessing the duplicated device leads to list corruption as its\nmutex content (e.g., list, magic) remains the same as the original."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: perf\/dwc_pcie: se corrigen dispositivos pci_dev duplicados. Durante platform_device_register, el uso incorrecto de struct device pci_dev como platform_data provocaba una copia kmemdup de pci_dev. Peor aún, acceder al dispositivo duplicado provoca la corrupción de la lista, ya que su contenido mutex (p. ej., list, magic) permanece igual que el original."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7f35b429802a8065aa61e2a3f567089649f4d98e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a71c6fc87b2b9905dc2e38887fe4122287216be9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37747","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.417","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix hang while freeing sigtrap event\n\nPerf can hang while freeing a sigtrap event if a related deferred\nsignal hadn't managed to be sent before the file got closed:\n\nperf_event_overflow()\n   task_work_add(perf_pending_task)\n\nfput()\n   task_work_add(____fput())\n\ntask_work_run()\n    ____fput()\n        perf_release()\n            perf_event_release_kernel()\n                _free_event()\n                    perf_pending_task_sync()\n                        task_work_cancel() -> FAILED\n                        rcuwait_wait_event()\n\nOnce task_work_run() is running, the list of pending callbacks is\nremoved from the task_struct and from this point on task_work_cancel()\ncan't remove any pending and not yet started work items, hence the\ntask_work_cancel() failure and the hang on rcuwait_wait_event().\n\nTask work could be changed to remove one work at a time, so a work\nrunning on the current task can always cancel a pending one, however\nthe wait \/ wake design is still subject to inverted dependencies when\nremote targets are involved, as pictured by Oleg:\n\nT1                                                      T2\n\nfd = perf_event_open(pid => T2->pid);                  fd = perf_event_open(pid => T1->pid);\nclose(fd)                                              close(fd)\n    <IRQ>                                                  <IRQ>\n    perf_event_overflow()                                  perf_event_overflow()\n       task_work_add(perf_pending_task)                        task_work_add(perf_pending_task)\n    <\/IRQ>                                                 <\/IRQ>\n    fput()                                                 fput()\n        task_work_add(____fput())                              task_work_add(____fput())\n\n    task_work_run()                                        task_work_run()\n        ____fput()                                             ____fput()\n            perf_release()                                         perf_release()\n                perf_event_release_kernel()                            perf_event_release_kernel()\n                    _free_event()                                          _free_event()\n                        perf_pending_task_sync()                               perf_pending_task_sync()\n                            rcuwait_wait_event()                                   rcuwait_wait_event()\n\nTherefore the only option left is to acquire the event reference count\nupon queueing the perf task work and release it from the task work, just\nlike it was done before 3a5465418f5f (\"perf: Fix event leak upon exec and file release\")\nbut without the leaks it fixed.\n\nSome adjustments are necessary to make it work:\n\n* A child event might dereference its parent upon freeing. Care must be\n  taken to release the parent last.\n\n* Some places assuming the event doesn't have any reference held and\n  therefore can be freed right away must instead put the reference and\n  let the reference counting to its job."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: perf: Se soluciona el bloqueo al liberar el evento sigtrap Perf puede bloquearse al liberar un evento sigtrap si no se ha logrado enviar una señal diferida relacionada antes de que se cerrara el archivo: perf_event_overflow() task_work_add(perf_pending_task) fput() task_work_add(____fput()) task_work_run() ____fput() perf_release() perf_event_release_kernel() _free_event() perf_pending_task_sync() task_work_cancel() -&gt; FAILED rcuwait_wait_event() Una vez que task_work_run() se está ejecutando, la lista de devoluciones de llamadas pendientes se elimina de task_struct y desde este punto, task_work_cancel() no puede eliminar ningún elemento de trabajo pendiente y aún no iniciado, de ahí el error de task_work_cancel() y el bloqueo de rcuwait_wait_event(). El trabajo de la tarea se puede cambiar para eliminar un trabajo a la vez, de modo que un trabajo que se ejecuta en la tarea actual siempre puede cancelar uno pendiente, sin embargo, el diseño de espera\/activación aún está sujeto a dependencias invertidas cuando se involucran objetivos remotos, como lo ilustra Oleg: T1 T2 fd = perf_event_open(pid =&gt; T2-&gt;pid); fd = perf_event_open(pid =&gt; T1-&gt;pid); close(fd) close(fd)   perf_event_overflow() perf_event_overflow() task_work_add(perf_pending_task) task_work_add(perf_pending_task)   fput() fput() task_work_add(____fput()) task_work_add(____fput()) task_work_run() task_work_run() ____fput() ____fput() perf_release() perf_release() perf_event_release_kernel() perf_event_release_kernel() _free_event() _free_event() perf_pending_task_sync() perf_pending_task_sync() rcuwait_wait_event() rcuwait_wait_event() Por lo tanto, la única opción que queda es adquirir el recuento de referencias de evento al poner en cola el trabajo de la tarea de rendimiento y liberarlo del trabajo de la tarea. Tal como se hizo antes de 3a5465418f5f (\"perf: Corregir fuga de eventos al ejecutar y liberar archivos\"), pero sin las fugas corregidas. Se requieren algunos ajustes para que funcione: * Un evento secundario podría desreferenciar a su padre al liberarse. Se debe tener cuidado de liberar al padre al final. * Algunos sitios, al asumir que el evento no tiene ninguna referencia retenida y, por lo tanto, puede liberarse de inmediato, deben colocar la referencia y dejar que el recuento de referencias continúe."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1267bd38f161c1a27d9b722de017027167a225a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56799bc035658738f362acec3e7647bb84e68933","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/665b87b8f8b3aeb49083ef3b65c4953e7753fc12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa1827fa968c0674e9b6fca223fa9fb4da4493eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37748","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.523","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/mediatek: Fix NULL pointer deference in mtk_iommu_device_group\n\nCurrently, mtk_iommu calls during probe iommu_device_register before\nthe hw_list from driver data is initialized. Since iommu probing issue\nfix, it leads to NULL pointer dereference in mtk_iommu_device_group when\nhw_list is accessed with list_first_entry (not null safe).\n\nSo, change the call order to ensure iommu_device_register is called\nafter the driver data are initialized."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: iommu\/mediatek: Se ha corregido la deferencia de puntero nulo en mtk_iommu_device_group. Actualmente, mtk_iommu invoca durante el sondeo de iommu_device_register antes de que se inicialice hw_list de los datos del controlador. Desde la corrección del problema de sondeo de iommu, este provoca la desreferencia de puntero nulo en mtk_iommu_device_group cuando se accede a hw_list con list_first_entry (no es seguro para nulos). Por lo tanto, se debe modificar el orden de las llamadas para garantizar que iommu_device_register se invoque después de inicializar los datos del controlador."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f75cb27bef43c8692b0f5e471e5632f6a9beb99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38e8844005e6068f336a3ad45451a562a0040ca1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69f9d2d37d1207c5a73dac52a4ce1361ead707f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6abd09bed43b8d83d461e0fb5b9a200a06aa8a27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0842539e8ef9386c070156103aff888e558a60c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce7d3b2f6f393fa35f0ea12861b83a1ca28b295c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37749","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.633","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ppp: Add bound checking for skb data on ppp_sync_txmung\n\nEnsure we have enough data in linear buffer from skb before accessing\ninitial bytes. This prevents potential out-of-bounds accesses\nwhen processing short packets.\n\nWhen ppp_sync_txmung receives an incoming package with an empty\npayload:\n(remote) gef➤  p *(struct pppoe_hdr *) (skb->head + skb->network_header)\n$18 = {\n\ttype = 0x1,\n\tver = 0x1,\n\tcode = 0x0,\n\tsid = 0x2,\n        length = 0x0,\n\ttag = 0xffff8880371cdb96\n}\n\nfrom the skb struct (trimmed)\n      tail = 0x16,\n      end = 0x140,\n      head = 0xffff88803346f400 \"4\",\n      data = 0xffff88803346f416 \":\\377\",\n      truesize = 0x380,\n      len = 0x0,\n      data_len = 0x0,\n      mac_len = 0xe,\n      hdr_len = 0x0,\n\nit is not safe to access data[2].\n\n[pabeni@redhat.com: fixed subj typo]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ppp: Se ha añadido la comprobación de los límites para datos de skb en ppp_sync_txmung. Se garantiza que haya suficientes datos en el búfer lineal de skb antes de acceder a los bytes iniciales. Esto evita posibles accesos fuera de los límites al procesar paquetes cortos. Cuando ppp_sync_txmung recibe un paquete entrante con un payload vacía: (remoto) gef? p *(struct pppoe_hdr *) (skb-&gt;head + skb-&gt;network_header) $18 = { type = 0x1, ver = 0x1, code = 0x0, sid = 0x2, length = 0x0, tag = 0xffff8880371cdb96 } de la estructura skb (recortada) tail = 0x16, end = 0x140, head = 0xffff88803346f400 \"4\", data = 0xffff88803346f416 \":\\377\", truesize = 0x380, len = 0x0, data_len = 0x0, mac_len = 0xe, hdr_len = 0x0, no es seguro acceder a los datos[2]. [pabeni@redhat.com: error tipográfico corregido]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f6eb9fa87a781d5370c0de7794ae242f1a95ee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/529401c8f12ecc35f9ea5d946d5a5596cf172b48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e8a6bf43cea4347121ab21bb1ed8d7bef7e732e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99aa698dec342a07125d733e39aab4394b3b7e05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aabc6596ffb377c4c9c8f335124b92ea282c9821","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4c836d33ca888695b2f2665f948bc1b34fbd533","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b78f2b458f56a5a4d976c8e01c43dbf58d3ea2ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de5a4f0cba58625e88b7bebd88f780c8c0150997","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbaffe8bccf148ece8ad67eb5d7aa852cabf59c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37750","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.740","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in decryption with multichannel\n\nAfter commit f7025d861694 (\"smb: client: allocate crypto only for\nprimary server\") and commit b0abcd65ec54 (\"smb: client: fix UAF in\nasync decryption\"), the channels started reusing AEAD TFM from primary\nchannel to perform synchronous decryption, but that can't done as\nthere could be multiple cifsd threads (one per channel) simultaneously\naccessing it to perform decryption.\n\nThis fixes the following KASAN splat when running fstest generic\/249\nwith 'vers=3.1.1,multichannel,max_channels=4,seal' against Windows\nServer 2022:\n\nBUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xba\/0x110\nRead of size 8 at addr ffff8881046c18a0 by task cifsd\/986\nCPU: 3 UID: 0 PID: 986 Comm: cifsd Not tainted 6.15.0-rc1 #1\nPREEMPT(voluntary)\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-3.fc41\n04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x5d\/0x80\n print_report+0x156\/0x528\n ? gf128mul_4k_lle+0xba\/0x110\n ? __virt_addr_valid+0x145\/0x300\n ? __phys_addr+0x46\/0x90\n ? gf128mul_4k_lle+0xba\/0x110\n kasan_report+0xdf\/0x1a0\n ? gf128mul_4k_lle+0xba\/0x110\n gf128mul_4k_lle+0xba\/0x110\n ghash_update+0x189\/0x210\n shash_ahash_update+0x295\/0x370\n ? __pfx_shash_ahash_update+0x10\/0x10\n ? __pfx_shash_ahash_update+0x10\/0x10\n ? __pfx_extract_iter_to_sg+0x10\/0x10\n ? ___kmalloc_large_node+0x10e\/0x180\n ? __asan_memset+0x23\/0x50\n crypto_ahash_update+0x3c\/0xc0\n gcm_hash_assoc_remain_continue+0x93\/0xc0\n crypt_message+0xe09\/0xec0 [cifs]\n ? __pfx_crypt_message+0x10\/0x10 [cifs]\n ? _raw_spin_unlock+0x23\/0x40\n ? __pfx_cifs_readv_from_socket+0x10\/0x10 [cifs]\n decrypt_raw_data+0x229\/0x380 [cifs]\n ? __pfx_decrypt_raw_data+0x10\/0x10 [cifs]\n ? __pfx_cifs_read_iter_from_socket+0x10\/0x10 [cifs]\n smb3_receive_transform+0x837\/0xc80 [cifs]\n ? __pfx_smb3_receive_transform+0x10\/0x10 [cifs]\n ? __pfx___might_resched+0x10\/0x10\n ? __pfx_smb3_is_transform_hdr+0x10\/0x10 [cifs]\n cifs_demultiplex_thread+0x692\/0x1570 [cifs]\n ? __pfx_cifs_demultiplex_thread+0x10\/0x10 [cifs]\n ? rcu_is_watching+0x20\/0x50\n ? rcu_lockdep_current_cpu_online+0x62\/0xb0\n ? find_held_lock+0x32\/0x90\n ? kvm_sched_clock_read+0x11\/0x20\n ? local_clock_noinstr+0xd\/0xd0\n ? trace_irq_enable.constprop.0+0xa8\/0xe0\n ? __pfx_cifs_demultiplex_thread+0x10\/0x10 [cifs]\n kthread+0x1fe\/0x380\n ? kthread+0x10f\/0x380\n ? __pfx_kthread+0x10\/0x10\n ? local_clock_noinstr+0xd\/0xd0\n ? ret_from_fork+0x1b\/0x60\n ? local_clock+0x15\/0x30\n ? lock_release+0x29b\/0x390\n ? rcu_is_watching+0x20\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x31\/0x60\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: smb: cliente: corregir UAF en descifrado con multicanal Después de la confirmación f7025d861694 (\"smb: cliente: asignar criptografía solo para el servidor principal\") y la confirmación b0abcd65ec54 (\"smb: cliente: corregir UAF en descifrado asíncrono\"), los canales comenzaron a reutilizar AEAD TFM del canal principal para realizar un descifrado sincrónico, pero eso no se puede hacer ya que podría haber varios subprocesos cifsd (uno por canal) accediendo simultáneamente a él para realizar el descifrado. Esto corrige el siguiente splat de KASAN al ejecutar fstest generic\/249 con 'vers=3.1.1,multichannel,max_channels=4,seal' en Windows Server 2022: ERROR: KASAN: slab-use-after-free en gf128mul_4k_lle+0xba\/0x110 Lectura de tamaño 8 en la dirección ffff8881046c18a0 por la tarea cifsd\/986 CPU: 3 UID: 0 PID: 986 Comm: cifsd No contaminado 6.15.0-rc1 #1 PREEMPT(voluntario) Nombre del hardware: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-3.fc41 01\/04\/2014 Seguimiento de llamadas:   dump_stack_lvl+0x5d\/0x80 print_report+0x156\/0x528 ? gf128mul_4k_lle+0xba\/0x110 ? __virt_addr_valid+0x145\/0x300 ? __phys_addr+0x46\/0x90 ? gf128mul_4k_lle+0xba\/0x110 kasan_report+0xdf\/0x1a0 ? gf128mul_4k_lle+0xba\/0x110 gf128mul_4k_lle+0xba\/0x110 ghash_update+0x189\/0x210 shash_ahash_update+0x295\/0x370 ? __pfx_shash_ahash_update+0x10\/0x10 ? __pfx_shash_ahash_update+0x10\/0x10 ? __pfx_extract_iter_to_sg+0x10\/0x10 ? ___kmalloc_large_node+0x10e\/0x180 ? __asan_memset+0x23\/0x50 crypto_ahash_update+0x3c\/0xc0 gcm_hash_assoc_remain_continue+0x93\/0xc0 crypt_message+0xe09\/0xec0 [cifs] ? __pfx_crypt_message+0x10\/0x10 [cifs] ? _raw_spin_unlock+0x23\/0x40 ? __pfx_cifs_readv_from_socket+0x10\/0x10 [cifs] decrypt_raw_data+0x229\/0x380 [cifs] ? __pfx_decrypt_raw_data+0x10\/0x10 [cifs] ? __pfx_cifs_read_iter_from_socket+0x10\/0x10 [cifs] smb3_receive_transform+0x837\/0xc80 [cifs] ? __pfx_smb3_receive_transform+0x10\/0x10 [cifs] ? __pfx___might_resched+0x10\/0x10 ? __pfx_smb3_is_transform_hdr+0x10\/0x10 [cifs] cifs_demultiplex_thread+0x692\/0x1570 [cifs] ? __pfx_cifs_demultiplex_thread+0x10\/0x10 [cifs] ? rcu_is_watching+0x20\/0x50 ? rcu_lockdep_current_cpu_online+0x62\/0xb0 ? find_held_lock+0x32\/0x90 ? kvm_sched_clock_read+0x11\/0x20 ? local_clock_noinstr+0xd\/0xd0 ? trace_irq_enable.constprop.0+0xa8\/0xe0 ? __pfx_cifs_demultiplex_thread+0x10\/0x10 [cifs] kthread+0x1fe\/0x380 ? kthread+0x10f\/0x380 ? __pfx_kthread+0x10\/0x10 ? local_clock_noinstr+0xd\/0xd0 ? ret_from_fork+0x1b\/0x60 ? local_clock+0x15\/0x30 ? lock_release+0x29b\/0x390 ? rcu_is_watching+0x20\/0x50 ? __pfx_kthread+0x10\/0x10 ret_from_fork+0x31\/0x60 ? __pfx_kthread+0x10\/0x10 ret_from_fork_asm+0x1a\/0x30  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9502dd5c7029902f4a425bf959917a5a9e7c0e50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/950557922c1298464749c216d8763e97faf5d0a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa5a1e4b882964eb79d5b5d1d1e8a1a5efbb1d15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e859b216d94668bc66330e61be201234f4413d1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37751","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.843","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/cpu: Avoid running off the end of an AMD erratum table\n\nThe NULL array terminator at the end of erratum_1386_microcode was\nremoved during the switch from x86_cpu_desc to x86_cpu_id. This\ncauses readers to run off the end of the array.\n\nReplace the NULL."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86\/cpu: Evitar la ejecución al final de una tabla de erratas de AMD. El terminador de matriz NULL al final de erratum_1386_microcode se eliminó durante la migración de x86_cpu_desc a x86_cpu_id. Esto provoca que los lectores se ejecuten al final de la matriz. Reemplace el NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b518f73f1b6f59e083ec33dea22d9a1a275a970","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0df00ebc57f803603f2a2e0df197e51f06fbe90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37752","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:53.933","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: move the limit validation\n\nIt is not sufficient to directly validate the limit on the data that\nthe user passes as it can be updated based on how the other parameters\nare changed.\n\nMove the check at the end of the configuration update process to also\ncatch scenarios where the limit is indirectly updated, for example\nwith the following configurations:\n\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 depth 1\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 divisor 1\n\nThis fixes the following syzkaller reported crash:\n\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in net\/sched\/sch_sfq.c:203:6\nindex 65535 is out of range for type 'struct sfq_head[128]'\nCPU: 1 UID: 0 PID: 3037 Comm: syz.2.16 Not tainted 6.14.0-rc2-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 12\/27\/2024\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x201\/0x300 lib\/dump_stack.c:120\n ubsan_epilogue lib\/ubsan.c:231 [inline]\n __ubsan_handle_out_of_bounds+0xf5\/0x120 lib\/ubsan.c:429\n sfq_link net\/sched\/sch_sfq.c:203 [inline]\n sfq_dec+0x53c\/0x610 net\/sched\/sch_sfq.c:231\n sfq_dequeue+0x34e\/0x8c0 net\/sched\/sch_sfq.c:493\n sfq_reset+0x17\/0x60 net\/sched\/sch_sfq.c:518\n qdisc_reset+0x12e\/0x600 net\/sched\/sch_generic.c:1035\n tbf_reset+0x41\/0x110 net\/sched\/sch_tbf.c:339\n qdisc_reset+0x12e\/0x600 net\/sched\/sch_generic.c:1035\n dev_reset_queue+0x100\/0x1b0 net\/sched\/sch_generic.c:1311\n netdev_for_each_tx_queue include\/linux\/netdevice.h:2590 [inline]\n dev_deactivate_many+0x7e5\/0xe70 net\/sched\/sch_generic.c:1375"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net_sched: sch_sfq: mover la validación del límite No es suficiente validar directamente el límite en los datos que pasa el usuario, ya que se puede actualizar en función de cómo se modifiquen los demás parámetros. Mueva la comprobación al final del proceso de actualización de configuración para que también detecte los escenarios en los que el límite se actualiza indirectamente, por ejemplo, con las siguientes configuraciones: tc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 Depth 1 tc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 divisor 1 Esto corrige el siguiente fallo informado por syzkaller: ------------[ cortar aquí ]------------ UBSAN: array-index-out-of-bounds en net\/sched\/sch_sfq.c:203:6 el índice 65535 está fuera de rango para el tipo 'struct sfq_head[128]' CPU: 1 UID: 0 PID: 3037 Comm: syz.2.16 No contaminado 6.14.0-rc2-syzkaller #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 27\/12\/2024 Seguimiento de llamadas:  __dump_stack lib\/dump_stack.c:94 [en línea] dump_stack_lvl+0x201\/0x300 lib\/dump_stack.c:120 ubsan_epilogue lib\/ubsan.c:231 [en línea] __ubsan_handle_out_of_bounds+0xf5\/0x120 lib\/ubsan.c:429 sfq_link net\/sched\/sch_sfq.c:203 [en línea] sfq_dec+0x53c\/0x610 net\/sched\/sch_sfq.c:231 sfq_dequeue+0x34e\/0x8c0 net\/sched\/sch_sfq.c:493 sfq_reset+0x17\/0x60 net\/sched\/sch_sfq.c:518 qdisc_reset+0x12e\/0x600 net\/sched\/sch_generic.c:1035 tbf_reset+0x41\/0x110 net\/sched\/sch_tbf.c:339 qdisc_reset+0x12e\/0x600 net\/sched\/sch_generic.c:1035 dev_reset_queue+0x100\/0x1b0 net\/sched\/sch_generic.c:1311 netdev_for_each_tx_queue include\/linux\/netdevice.h:2590 [en línea] dev_deactivate_many+0x7e5\/0xe70 net\/sched\/sch_generic.c:1375"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1348214fa042a71406964097e743c87a42c85a49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e5e1fcc1b8ed57f902c424c5d9b328a3a19073d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b36a68192037d1614317a09b0d78c7814e2eecf9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3bf8f63e6179076b57c9de660c9f80b5abefe70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2718324f9e329b10ddc091fba5a0ba2b9d4d96a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f86293adce0c201cfabb283ef9d6f21292089bb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37753","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.050","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/cpumf: Fix double free on error in cpumf_pmu_event_init()\n\nIn PMU event initialization functions\n - cpumsf_pmu_event_init()\n - cpumf_pmu_event_init()\n - cfdiag_event_init()\nthe partially created event had to be removed when an error was detected.\nThe event::event_init() member function had to release all resources\nit allocated in case of error. event::destroy() had to be called\non freeing an event after it was successfully created and\nevent::event_init() returned success.\n\nWith\n\ncommit c70ca298036c (\"perf\/core: Simplify the perf_event_alloc() error path\")\n\nthis is not necessary anymore. The performance subsystem common\ncode now always calls event::destroy() to clean up the allocated\nresources created during event initialization.\n\nRemove the event::destroy() invocation in PMU event initialization\nor that function is called twice for each event that runs into an\nerror condition in event creation.\n\nThis is the kernel log entry which shows up without the fix:\n\n------------[ cut here ]------------\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 0 PID: 43388 at lib\/refcount.c:87\trefcount_dec_not_one+0x74\/0x90\nCPU: 0 UID: 0 PID: 43388 Comm: perf Not tainted 6.15.0-20250407.rc1.git0.300.fc41.s390x+git #1 NONE\nHardware name: IBM 3931 A01 704 (LPAR)\nKrnl PSW : 0704c00180000000 00000209cb2c1b88 (refcount_dec_not_one+0x78\/0x90)\n           R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3\nKrnl GPRS: 0000020900000027 0000020900000023 0000000000000026 0000018900000000\n           00000004a2200a00 0000000000000000 0000000000000057 ffffffffffffffea\n           00000002b386c600 00000002b3f5b3e0 00000209cc51f140 00000209cc7fc550\n           0000000001449d38 ffffffffffffffff 00000209cb2c1b84 00000189d67dfb80\nKrnl Code: 00000209cb2c1b78: c02000506727\tlarl\t%r2,00000209cbcce9c6\n           00000209cb2c1b7e: c0e5ffbd4431\tbrasl\t%r14,00000209caa6a3e0\n          #00000209cb2c1b84: af000000\t\tmc\t0,0\n          >00000209cb2c1b88: a7480001\t\tlhi\t%r4,1\n           00000209cb2c1b8c: ebeff0a00004\tlmg\t%r14,%r15,160(%r15)\n           00000209cb2c1b92: ec243fbf0055\trisbg\t%r2,%r4,63,191,0\n           00000209cb2c1b98: 07fe\t\tbcr\t15,%r14\n           00000209cb2c1b9a: 47000700\t\tbc\t0,1792\nCall Trace:\n [<00000209cb2c1b88>] refcount_dec_not_one+0x78\/0x90\n [<00000209cb2c1dc4>] refcount_dec_and_mutex_lock+0x24\/0x90\n [<00000209caa3c29e>] hw_perf_event_destroy+0x2e\/0x80\n [<00000209cacaf8b4>] __free_event+0x74\/0x270\n [<00000209cacb47c4>] perf_event_alloc.part.0+0x4a4\/0x730\n [<00000209cacbf3e8>] __do_sys_perf_event_open+0x248\/0xc20\n [<00000209cacc14a4>] __s390x_sys_perf_event_open+0x44\/0x50\n [<00000209cb8114de>] __do_syscall+0x12e\/0x260\n [<00000209cb81ce34>] system_call+0x74\/0x98\nLast Breaking-Event-Address:\n [<00000209caa6a4d2>] __warn_printk+0xf2\/0x100\n---[ end trace 0000000000000000 ]---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: s390\/cpumf: Se corrige la doble liberación en caso de error en cpumf_pmu_event_init(). En las funciones de inicialización de eventos de PMU (cpumsf_pmu_event_init(), cpumf_pmu_event_init() y cfdiag_event_init()), el evento parcialmente creado debía eliminarse al detectarse un error. La función miembro event::event_init() debía liberar todos los recursos asignados en caso de error. Event::destroy() debía llamarse al liberar un evento después de su creación exitosa y event::event_init() devolvía la operación correcta. Con la confirmación c70ca298036c (\"perf\/core: Simplificar la ruta de error de perf_event_alloc()\"), esto ya no es necesario. El código común del subsistema de rendimiento ahora siempre llama a event::destroy() para limpiar los recursos asignados creados durante la inicialización del evento. Elimine la invocación de event::destroy() en la inicialización de eventos de PMU, ya que dicha función se llama dos veces por cada evento que presenta una condición de error durante su creación. Esta es la entrada del registro del kernel que aparece sin la corrección: ------------[ cortar aquí ]------------ refcount_t: underflow; use-after-free. ADVERTENCIA: CPU: 0 PID: 43388 en lib\/refcount.c:87 refcount_dec_not_one+0x74\/0x90 CPU: 0 UID: 0 PID: 43388 Comm: perf No contaminado 6.15.0-20250407.rc1.git0.300.fc41.s390x+git #1 NINGUNO Nombre del hardware: IBM 3931 A01 704 (LPAR) Krnl PSW : 0704c00180000000 00000209cb2c1b88 (refcount_dec_not_one+0x78\/0x90) R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3 Krnl GPRS: 0000020900000027 0000020900000023 0000000000000026 0000018900000000 00000004a2200a00 0000000000000000 0000000000000057 ffffffffffffffea 00000002b386c600 00000002b3f5b3e0 00000209cc51f140 00000209cc7fc550 0000000001449d38 ffffffffffffffff 00000209cb2c1b84 00000189d67dfb80 Krnl Code: 00000209cb2c1b78: c02000506727 larl %r2,00000209cbcce9c6 00000209cb2c1b7e: c0e5ffbd4431 brasl %r14,00000209caa6a3e0 #00000209cb2c1b84: af000000 mc 0,0 &gt;00000209cb2c1b88: a7480001 lhi %r4,1 00000209cb2c1b8c: ebeff0a00004 lmg %r14,%r15,160(%r15) 00000209cb2c1b92: ec243fbf0055 risbg %r2,%r4,63,191,0 00000209cb2c1b98: 07fe bcr 15,%r14 00000209cb2c1b9a: 47000700 bc 0,1792 Call Trace: [&lt;00000209cb2c1b88&gt;] refcount_dec_not_one+0x78\/0x90 [&lt;00000209cb2c1dc4&gt;] refcount_dec_and_mutex_lock+0x24\/0x90 [&lt;00000209caa3c29e&gt;] hw_perf_event_destroy+0x2e\/0x80 [&lt;00000209cacaf8b4&gt;] __free_event+0x74\/0x270 [&lt;00000209cacb47c4&gt;] perf_event_alloc.part.0+0x4a4\/0x730 [&lt;00000209cacbf3e8&gt;] __do_sys_perf_event_open+0x248\/0xc20 [&lt;00000209cacc14a4&gt;] __s390x_sys_perf_event_open+0x44\/0x50 [&lt;00000209cb8114de&gt;] __do_syscall+0x12e\/0x260 [&lt;00000209cb81ce34&gt;] system_call+0x74\/0x98 Last Breaking-Event-Address: [&lt;00000209caa6a4d2&gt;] __warn_printk+0xf2\/0x100 ---[ fin de seguimiento 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a3faf873db5dcd5d2622d8e2accb90af0a86c2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa1ac98268cd1f380c713f07e39b1fa1d5c7650c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdbecb2bf531fadbbc9347a79009f7a58ea7eb03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf60c1491102dab04491481bc3376d3e9cd139d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37754","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.157","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/huc: Fix fence not released on early probe errors\n\nHuC delayed loading fence, introduced with commit 27536e03271da\n(\"drm\/i915\/huc: track delayed HuC load with a fence\"), is registered with\nobject tracker early on driver probe but unregistered only from driver\nremove, which is not called on early probe errors.  Since its memory is\nallocated under devres, then released anyway, it may happen to be\nallocated again to the fence and reused on future driver probes, resulting\nin kernel warnings that taint the kernel:\n\n<4> [309.731371] ------------[ cut here ]------------\n<3> [309.731373] ODEBUG: init destroyed (active state 0) object: ffff88813d7dd2e0 object type: i915_sw_fence hint: sw_fence_dummy_notify+0x0\/0x20 [i915]\n<4> [309.731575] WARNING: CPU: 2 PID: 3161 at lib\/debugobjects.c:612 debug_print_object+0x93\/0xf0\n...\n<4> [309.731693] CPU: 2 UID: 0 PID: 3161 Comm: i915_module_loa Tainted: G     U             6.14.0-CI_DRM_16362-gf0fd77956987+ #1\n...\n<4> [309.731700] RIP: 0010:debug_print_object+0x93\/0xf0\n...\n<4> [309.731728] Call Trace:\n<4> [309.731730]  <TASK>\n...\n<4> [309.731949]  __debug_object_init+0x17b\/0x1c0\n<4> [309.731957]  debug_object_init+0x34\/0x50\n<4> [309.732126]  __i915_sw_fence_init+0x34\/0x60 [i915]\n<4> [309.732256]  intel_huc_init_early+0x4b\/0x1d0 [i915]\n<4> [309.732468]  intel_uc_init_early+0x61\/0x680 [i915]\n<4> [309.732667]  intel_gt_common_init_early+0x105\/0x130 [i915]\n<4> [309.732804]  intel_root_gt_init_early+0x63\/0x80 [i915]\n<4> [309.732938]  i915_driver_probe+0x1fa\/0xeb0 [i915]\n<4> [309.733075]  i915_pci_probe+0xe6\/0x220 [i915]\n<4> [309.733198]  local_pci_probe+0x44\/0xb0\n<4> [309.733203]  pci_device_probe+0xf4\/0x270\n<4> [309.733209]  really_probe+0xee\/0x3c0\n<4> [309.733215]  __driver_probe_device+0x8c\/0x180\n<4> [309.733219]  driver_probe_device+0x24\/0xd0\n<4> [309.733223]  __driver_attach+0x10f\/0x220\n<4> [309.733230]  bus_for_each_dev+0x7d\/0xe0\n<4> [309.733236]  driver_attach+0x1e\/0x30\n<4> [309.733239]  bus_add_driver+0x151\/0x290\n<4> [309.733244]  driver_register+0x5e\/0x130\n<4> [309.733247]  __pci_register_driver+0x7d\/0x90\n<4> [309.733251]  i915_pci_register_driver+0x23\/0x30 [i915]\n<4> [309.733413]  i915_init+0x34\/0x120 [i915]\n<4> [309.733655]  do_one_initcall+0x62\/0x3f0\n<4> [309.733667]  do_init_module+0x97\/0x2a0\n<4> [309.733671]  load_module+0x25ff\/0x2890\n<4> [309.733688]  init_module_from_file+0x97\/0xe0\n<4> [309.733701]  idempotent_init_module+0x118\/0x330\n<4> [309.733711]  __x64_sys_finit_module+0x77\/0x100\n<4> [309.733715]  x64_sys_call+0x1f37\/0x2650\n<4> [309.733719]  do_syscall_64+0x91\/0x180\n<4> [309.733763]  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n<4> [309.733792]  <\/TASK>\n...\n<4> [309.733806] ---[ end trace 0000000000000000 ]---\n\nThat scenario is most easily reproducible with\nigt@i915_module_load@reload-with-fault-injection.\n\nFix the issue by moving the cleanup step to driver release path.\n\n(cherry picked from commit 795dbde92fe5c6996a02a5b579481de73035e7bf)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/i915\/huc: corrección de la valla no liberada en errores de sondeo tempranos La valla de carga retrasada de HuC, introducida con la confirmación 27536e03271da (\"drm\/i915\/huc: rastrear la carga retrasada de HuC con una valla\"), se registra con el rastreador de objetos en las primeras etapas del sondeo del controlador, pero se desregistra solo desde la eliminación del controlador, que no se llama en errores de sondeo tempranos. Dado que su memoria se asigna en devres y luego se libera de todos modos, puede suceder que se asigne nuevamente a la valla y se reutilice en futuras sondas del controlador, lo que genera advertencias del kernel que contaminan el kernel: &lt;4&gt; [309.731371] ------------[ cortar aquí ]------------ &lt;3&gt; [309.731373] ODEBUG: init destroyed (active state 0) object: ffff88813d7dd2e0 object type: i915_sw_fence hint: sw_fence_dummy_notify+0x0\/0x20 [i915] &lt;4&gt; [309.731575] WARNING: CPU: 2 PID: 3161 at lib\/debugobjects.c:612 debug_print_object+0x93\/0xf0 ... &lt;4&gt; [309.731693] CPU: 2 UID: 0 PID: 3161 Comm: i915_module_loa Tainted: G U 6.14.0-CI_DRM_16362-gf0fd77956987+ #1 ... &lt;4&gt; [309.731700] RIP: 0010:debug_print_object+0x93\/0xf0 ... &lt;4&gt; [309.731728] Call Trace: &lt;4&gt; [309.731730]  ... &lt;4&gt; [309.731949] __debug_object_init+0x17b\/0x1c0 &lt;4&gt; [309.731957] debug_object_init+0x34\/0x50 &lt;4&gt; [309.732126] __i915_sw_fence_init+0x34\/0x60 [i915] &lt;4&gt; [309.732256] intel_huc_init_early+0x4b\/0x1d0 [i915] &lt;4&gt; [309.732468] intel_uc_init_early+0x61\/0x680 [i915] &lt;4&gt; [309.732667] intel_gt_common_init_early+0x105\/0x130 [i915] &lt;4&gt; [309.732804] intel_root_gt_init_early+0x63\/0x80 [i915] &lt;4&gt; [309.732938] i915_driver_probe+0x1fa\/0xeb0 [i915] &lt;4&gt; [309.733075] i915_pci_probe+0xe6\/0x220 [i915] &lt;4&gt; [309.733198] local_pci_probe+0x44\/0xb0 &lt;4&gt; [309.733203] pci_device_probe+0xf4\/0x270 &lt;4&gt; [309.733209] really_probe+0xee\/0x3c0 &lt;4&gt; [309.733215] __driver_probe_device+0x8c\/0x180 &lt;4&gt; [309.733219] driver_probe_device+0x24\/0xd0 &lt;4&gt; [309.733223] __driver_attach+0x10f\/0x220 &lt;4&gt; [309.733230] bus_for_each_dev+0x7d\/0xe0 &lt;4&gt; [309.733236] driver_attach+0x1e\/0x30 &lt;4&gt; [309.733239] bus_add_driver+0x151\/0x290 &lt;4&gt; [309.733244] driver_register+0x5e\/0x130 &lt;4&gt; [309.733247] __pci_register_driver+0x7d\/0x90 &lt;4&gt; [309.733251] i915_pci_register_driver+0x23\/0x30 [i915] &lt;4&gt; [309.733413] i915_init+0x34\/0x120 [i915] &lt;4&gt; [309.733655] do_one_initcall+0x62\/0x3f0 &lt;4&gt; [309.733667] do_init_module+0x97\/0x2a0 &lt;4&gt; [309.733671] load_module+0x25ff\/0x2890 &lt;4&gt; [309.733688] init_module_from_file+0x97\/0xe0 &lt;4&gt; [309.733701] idempotent_init_module+0x118\/0x330 &lt;4&gt; [309.733711] __x64_sys_finit_module+0x77\/0x100 &lt;4&gt; [309.733715] x64_sys_call+0x1f37\/0x2650 &lt;4&gt; [309.733719] do_syscall_64+0x91\/0x180 &lt;4&gt; [309.733763] entry_SYSCALL_64_after_hwframe+0x76\/0x7e &lt;4&gt; [309.733792]  ... &lt;4&gt; [309.733806] ---[ fin de seguimiento 000000000000000 ]--- Este escenario se reproduce con mayor facilidad con igt@i915_module_load@reload-with-fault-injection. Solucione el problema trasladando el paso de limpieza a la ruta de la versión del controlador. (Seleccionado de la confirmación 795dbde92fe5c6996a02a5b579481de73035e7bf)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4bd4bf79bcfe101f0385ab81dbabb6e3f7d96c00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f5ef4a5eaa61a7a4ed31231da45deb85065397a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5a906806162aea62dbe5d327760ce3b7117ca17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ea2eae70692a455e256787e4f54153fb739b90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f104ef4db9f8f3923cc06ed1fafb3da38df6006d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37755","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.267","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: libwx: handle page_pool_dev_alloc_pages error\n\npage_pool_dev_alloc_pages could return NULL. There was a WARN_ON(!page)\nbut it would still proceed to use the NULL pointer and then crash.\n\nThis is similar to commit 001ba0902046\n(\"net: fec: handle page_pool_dev_alloc_pages error\").\n\nThis is found by our static analysis tool KNighter."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: libwx: error en el controlador page_pool_dev_alloc_pages. page_pool_dev_alloc_pages podría devolver NULL. Se ejecutó un WARN_ON(!page), pero seguía usando el puntero NULL y se bloqueaba. Esto es similar a la confirmación 001ba0902046 (\"net: fec: error en el controlador page_pool_dev_alloc_pages\"). Esta vulnerabilidad fue detectada por nuestra herramienta de análisis estático Knighter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1dd13c60348f515acd8c6f25a561b9c4e3b04fea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f1ff1b38a7c8b872382b796023419d87d78c47e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90bec7cef8805f9a23145e070dff28a02bb584eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad81d666e114ebf989fc9994d4c93d451dc60056","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c17ef974bfcf1a50818168b47c4606b425a957c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37756","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.370","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tls: explicitly disallow disconnect\n\nsyzbot discovered that it can disconnect a TLS socket and then\nrun into all sort of unexpected corner cases. I have a vague\nrecollection of Eric pointing this out to us a long time ago.\nSupporting disconnect is really hard, for one thing if offload\nis enabled we'd need to wait for all packets to be _acked_.\nDisconnect is not commonly used, disallow it.\n\nThe immediate problem syzbot run into is the warning in the strp,\nbut that's just the easiest bug to trigger:\n\n  WARNING: CPU: 0 PID: 5834 at net\/tls\/tls_strp.c:486 tls_strp_msg_load+0x72e\/0xa80 net\/tls\/tls_strp.c:486\n  RIP: 0010:tls_strp_msg_load+0x72e\/0xa80 net\/tls\/tls_strp.c:486\n  Call Trace:\n   <TASK>\n   tls_rx_rec_wait+0x280\/0xa60 net\/tls\/tls_sw.c:1363\n   tls_sw_recvmsg+0x85c\/0x1c30 net\/tls\/tls_sw.c:2043\n   inet6_recvmsg+0x2c9\/0x730 net\/ipv6\/af_inet6.c:678\n   sock_recvmsg_nosec net\/socket.c:1023 [inline]\n   sock_recvmsg+0x109\/0x280 net\/socket.c:1045\n   __sys_recvfrom+0x202\/0x380 net\/socket.c:2237"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: tls: explícitamente deshabilitar la desconexión. syzbot descubrió que puede desconectar un socket TLS y luego encontrarse con todo tipo de casos inesperados. Recuerdo vagamente que Eric nos lo señaló hace mucho tiempo. Admitir la desconexión es muy difícil; por ejemplo, si la descarga está habilitada, tendríamos que esperar a que se ackearan todos los paquetes. La desconexión no se usa comúnmente; deshabilitarla. El problema inmediato con el que se encuentra syzbot es la advertencia en el strp, pero ese es simplemente el error más fácil de activar: ADVERTENCIA: CPU: 0 PID: 5834 en net\/tls\/tls_strp.c:486 tls_strp_msg_load+0x72e\/0xa80 net\/tls\/tls_strp.c:486 RIP: 0010:tls_strp_msg_load+0x72e\/0xa80 net\/tls\/tls_strp.c:486 Rastreo de llamada:  tls_rx_rec_wait+0x280\/0xa60 net\/tls\/tls_sw.c:1363 tls_sw_recvmsg+0x85c\/0x1c30 net\/tls\/tls_sw.c:2043 inet6_recvmsg+0x2c9\/0x730 net\/ipv6\/af_inet6.c:678 sock_recvmsg_nosec net\/socket.c:1023 [en línea] sock_recvmsg+0x109\/0x280 net\/socket.c:1045 __sys_recvfrom+0x202\/0x380 net\/socket.c:2237"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2bcad8fefcecdd5f005d8c550b25d703c063c34a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5071a1e606b30c0c11278d3c6620cd6a24724cf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bdcf5bc35ae59fc4a0fa23276e84b4d1534a3cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8513411ec321942bd3cfed53d5bb700665c67d86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fcbca0f801580cbb583e9cb274e2c7fbe766ca6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac91c6125468be720eafde9c973994cb45b61d44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c665bef891e8972e1d3ce5bbc0d42a373346a2c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3ce4d3f874ab7919edca364c147ac735f9f1d04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37757","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.480","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix memory leak in tipc_link_xmit\n\nIn case the backlog transmit queue for system-importance messages is overloaded,\ntipc_link_xmit() returns -ENOBUFS but the skb list is not purged. This leads to\nmemory leak and failure when a skb is allocated.\n\nThis commit fixes this issue by purging the skb list before tipc_link_xmit()\nreturns."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tipc: se corrige una fuga de memoria en tipc_link_xmit. Si la cola de transmisión de mensajes importantes del sistema está sobrecargada, tipc_link_xmit() devuelve -ENOBUFS, pero la lista de skb no se purga. Esto provoca una fuga de memoria y un fallo al asignar un skb. Esta confirmación corrige este problema purgando la lista de skb antes del retorno de tipc_link_xmit()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09c2dcda2c551bba30710c33f6ac678ae7395389","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24e6280cdd7f8d01fc6b9b365fb800c2fb7ea9bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69ae94725f4fc9e75219d2d69022029c5b24bc9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c5957f7905b4aede9d7a559d271438f3ca9e852","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84895f5ce3829d9fc030e5ec2d8729da4c0c9d08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a40cbfbb8f95c325430f017883da669b2aa927d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0e02d3d27a0b4dcb13f954f537ca1dd8f282dcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4d40e437adb376be16b3a12dd5c63f0fa768247","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed06675d3b8cd37120b447646d53f7cd3e6fcd63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37758","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.583","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: pata_pxa: Fix potential NULL pointer dereference in pxa_ata_probe()\n\ndevm_ioremap() returns NULL on error. Currently, pxa_ata_probe() does\nnot check for this case, which can result in a NULL pointer dereference.\n\nAdd NULL check after devm_ioremap() to prevent this issue."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ata: pata_pxa: Se corrige la posible desreferencia de punteros nulos en pxa_ata_probe(). Devm_ioremap() devuelve NULL en caso de error. Actualmente, pxa_ata_probe() no verifica este caso, lo que puede provocar una desreferencia de punteros nulos. Agregue la comprobación de NULL después de devm_ioremap() para evitar este problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17d5e6e915fad5a261db3698c9c5bbe702102d7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ba9e4c69207777bb0775c7c091800ecd69de144","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2dc53c7a0c1f57b082931facafa804a7ca32a9a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b09bf6243b0bc0ae58bd9efdf6f0de5546f8d06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a551f75401793ba8075d7f46ffc931ce5151f03f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad320e408a8c95a282ab9c05cdf0c9b95e317985","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c022287f6e599422511aa227dc6da37b58d9ceac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0d720f9282839b9db625a376c02a1426a16b0ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee2b0301d6bfe16b35d57947687c664ecb815775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37759","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T13:15:54.690","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nublk: fix handling recovery & reissue in ublk_abort_queue()\n\nCommit 8284066946e6 (\"ublk: grab request reference when the request is handled\nby userspace\") doesn't grab request reference in case of recovery reissue.\nThen the request can be requeued & re-dispatch & failed when canceling\nuring command.\n\nIf it is one zc request, the request can be freed before io_uring\nreturns the zc buffer back, then cause kernel panic:\n\n[  126.773061] BUG: kernel NULL pointer dereference, address: 00000000000000c8\n[  126.773657] #PF: supervisor read access in kernel mode\n[  126.774052] #PF: error_code(0x0000) - not-present page\n[  126.774455] PGD 0 P4D 0\n[  126.774698] Oops: Oops: 0000 [#1] SMP NOPTI\n[  126.775034] CPU: 13 UID: 0 PID: 1612 Comm: kworker\/u64:55 Not tainted 6.14.0_blk+ #182 PREEMPT(full)\n[  126.775676] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39 04\/01\/2014\n[  126.776275] Workqueue: iou_exit io_ring_exit_work\n[  126.776651] RIP: 0010:ublk_io_release+0x14\/0x130 [ublk_drv]\n\nFixes it by always grabbing request reference for aborting the request."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ublk: corrección del manejo de la recuperación y la reemisión en ublk_abort_queue(). La confirmación 8284066946e6 (\"ublk: toma la referencia de la solicitud cuando la solicitud es manejada por el espacio de usuario\") no toma la referencia de la solicitud en caso de reemisión de recuperación. En ese caso, la solicitud se puede volver a poner en cola y reenviar, y falla al cancelar el comando \"uring\". Si es una solicitud zc, la solicitud se puede liberar antes de que io_uring devuelva el buffer zc, y luego cause pánico en el kernel: [ 126.773061] ERROR: desreferencia de puntero NULL del kernel, dirección: 00000000000000c8 [ 126.773657] #PF: acceso de lectura del supervisor en modo kernel [ 126.774052] #PF: error_code(0x0000) - página no presente [ 126.774455] PGD 0 P4D 0 [ 126.774698] Oops: Oops: 0000 [#1] SMP NOPTI [ 126.775034] CPU: 13 UID: 0 PID: 1612 Comm: kworker\/u64:55 No contaminado 6.14.0_blk+ #182 PREEMPT(full) [ 126.775676] Nombre del hardware: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39 01\/04\/2014 [ 126.776275] Cola de trabajo: iou_exit io_ring_exit_work [ 126.776651] RIP: 0010:ublk_io_release+0x14\/0x130 [ublk_drv] Lo corrige tomando siempre la referencia de la solicitud para abortar la solicitud."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a21d259ca4d6310fdfcc0284ebbc000e66cbf70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d34a30efac9c9c93e150130caa940c0df6053c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ee6bd5d4fce502a5b5a2ea805e9ff16e6aa890f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/caa5c8a2358604f38bf0a4afaa5eacda13763067","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-11390","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T14:15:34.913","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Unrestricted upload of a file with dangerous type in Kibana can lead to arbitrary JavaScript execution in a victim’s browser (XSS) via crafted HTML and JavaScript files.\n\nThe attacker must have access to the Synthetics app AND\/OR have access to write to the synthetics indices."},{"lang":"es","value":"La carga sin restricciones de un archivo con un tipo peligroso en Kibana puede provocar la ejecución arbitraria de JavaScript en el navegador de la víctima (XSS) mediante archivos HTML y JavaScript manipulados. El atacante debe tener acceso a la aplicación Synthetics y\/o acceso para escribir en los índices de Synthetics."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/kibana-7-17-24-and-8-12-0-security-update-esa-2024-20\/377712","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2024-11994","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T14:15:35.093","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"APM server logs could contain parts of the document body from a partially failed bulk index request. Depending on the nature of the document, this could disclose sensitive information in APM Server error logs."},{"lang":"es","value":"Los registros del servidor APM podrían contener partes del cuerpo del documento de una solicitud de indexación masiva parcialmente fallida. Dependiendo de la naturaleza del documento, esto podría revelar información confidencial en los registros de errores del servidor APM."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":5.7,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.1,"impactScore":3.6}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/apm-server-8-16-1-security-update-esa-2024-41\/377710","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2024-52976","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T14:15:35.527","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Inclusion of functionality from an untrusted control sphere in Elastic Agent subprocess, osqueryd, allows local attackers to execute arbitrary code via parameter injection.\n\nAn attacker requires local access and the ability to modify osqueryd configurations."},{"lang":"es","value":"La inclusión de funcionalidad de una esfera de control no confiable en el subproceso de Elastic Agent, osqueryd, permite a atacantes locales ejecutar código arbitrario mediante la inyección de parámetros. Un atacante requiere acceso local y la capacidad de modificar las configuraciones de osqueryd."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:N\/I:H\/A:N","baseScore":4.4,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":0.8,"impactScore":3.6}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-829"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/elastic-agent-7-17-25-and-8-15-4-security-update-esa-2024-39\/377708","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2024-52979","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T14:15:35.690","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Uncontrolled Resource Consumption in Elasticsearch while evaluating specifically crafted search templates with Mustache functions can lead to Denial of Service by causing the Elasticsearch node to crash."},{"lang":"es","value":"El consumo descontrolado de recursos en Elasticsearch al evaluar plantillas de búsqueda específicamente manipuladas con funciones Mustache puede provocar una denegación de servicio al provocar que el nodo Elasticsearch se bloquee."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-400"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/elasticsearch-7-17-25-and-8-16-0-security-update-esa-2024-40\/377709","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2025-23244","sourceIdentifier":"psirt@nvidia.com","published":"2025-05-01T14:15:36.060","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"NVIDIA GPU Display Driver for Linux contains a vulnerability which could allow an unprivileged attacker to escalate permissions. A successful exploit of this vulnerability might lead to code execution, denial of service, escalation of privileges, information disclosure, and data tampering."},{"lang":"es","value":"NVIDIA GPU Display Driver para Linux contiene una vulnerabilidad que podría permitir a un atacante sin privilegios escalar permisos. Una explotación exitosa de esta vulnerabilidad podría provocar ejecución de código, denegación de servicio, escalada de privilegios, divulgación de información y manipulación de datos."}],"metrics":{"cvssMetricV31":[{"source":"psirt@nvidia.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@nvidia.com","type":"Primary","description":[{"lang":"en","value":"CWE-863"}]}],"references":[{"url":"https:\/\/nvidia.custhelp.com\/app\/answers\/detail\/a_id\/5630","source":"psirt@nvidia.com"}]}},{"cve":{"id":"CVE-2025-23245","sourceIdentifier":"psirt@nvidia.com","published":"2025-05-01T14:15:36.250","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"NVIDIA vGPU software for Windows and Linux contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it allows a guest to access global resources. A successful exploit of this vulnerability might lead to denial of service."},{"lang":"es","value":"El software NVIDIA vGPU para Windows y Linux contiene una vulnerabilidad en el Administrador de GPU Virtual (complemento vGPU), que permite a un invitado acceder a recursos globales. Una explotación exitosa de esta vulnerabilidad podría provocar una denegación de servicio."}],"metrics":{"cvssMetricV31":[{"source":"psirt@nvidia.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":5.5,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@nvidia.com","type":"Primary","description":[{"lang":"en","value":"CWE-732"}]}],"references":[{"url":"https:\/\/nvidia.custhelp.com\/app\/answers\/detail\/a_id\/5630","source":"psirt@nvidia.com"}]}},{"cve":{"id":"CVE-2025-23254","sourceIdentifier":"psirt@nvidia.com","published":"2025-05-01T14:15:36.507","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"NVIDIA TensorRT-LLM for any platform contains a vulnerability in python executor where an attacker may cause a data validation issue by local access to the TRTLLM server. A successful exploit of this vulnerability may lead to code execution, information disclosure and data tampering."},{"lang":"es","value":"NVIDIA TensorRT-LLM para cualquier plataforma contiene una vulnerabilidad en el ejecutor de Python que permite a un atacante causar un problema de validación de datos mediante el acceso local al servidor TRTLLM. Una explotación exitosa de esta vulnerabilidad puede provocar la ejecución de código, la divulgación de información y la manipulación de datos."}],"metrics":{"cvssMetricV31":[{"source":"psirt@nvidia.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.0,"impactScore":6.0}]},"weaknesses":[{"source":"psirt@nvidia.com","type":"Primary","description":[{"lang":"en","value":"CWE-502"}]}],"references":[{"url":"https:\/\/nvidia.custhelp.com\/app\/answers\/detail\/a_id\/5648","source":"psirt@nvidia.com"}]}},{"cve":{"id":"CVE-2025-25016","sourceIdentifier":"bressers@elastic.co","published":"2025-05-01T14:15:36.930","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Unrestricted file upload in Kibana allows an authenticated attacker to compromise software integrity by uploading a crafted malicious file due to insufficient server-side validation."},{"lang":"es","value":"La carga de archivos sin restricciones en Kibana permite que un atacante autenticado comprometa la integridad del software al cargar un archivo malicioso manipulado debido a una validación insuficiente del lado del servidor."}],"metrics":{"cvssMetricV31":[{"source":"bressers@elastic.co","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"bressers@elastic.co","type":"Secondary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/discuss.elastic.co\/t\/kibana-7-17-19-and-8-13-0-security-update-esa-2024-47\/377711","source":"bressers@elastic.co"}]}},{"cve":{"id":"CVE-2025-37760","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:38.110","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/vma: add give_up_on_oom option on modify\/merge, use in uffd release\n\nCurrently, if a VMA merge fails due to an OOM condition arising on commit\nmerge or a failure to duplicate anon_vma's, we report this so the caller\ncan handle it.\n\nHowever there are cases where the caller is only ostensibly trying a\nmerge, and doesn't mind if it fails due to this condition.\n\nSince we do not want to introduce an implicit assumption that we only\nactually modify VMAs after OOM conditions might arise, add a 'give up on\noom' option and make an explicit contract that, should this flag be set, we\nabsolutely will not modify any VMAs should OOM arise and just bail out.\n\nSince it'd be very unusual for a user to try to vma_modify() with this flag\nset but be specifying a range within a VMA which ends up being split (which\ncan fail due to rlimit issues, not only OOM), we add a debug warning for\nthis condition.\n\nThe motivating reason for this is uffd release - syzkaller (and Pedro\nFalcato's VERY astute analysis) found a way in which an injected fault on\nallocation, triggering an OOM condition on commit merge, would result in\nuffd code becoming confused and treating an error value as if it were a VMA\npointer.\n\nTo avoid this, we make use of this new VMG flag to ensure that this never\noccurs, utilising the fact that, should we be clearing entire VMAs, we do\nnot wish an OOM event to be reported to us.\n\nMany thanks to Pedro Falcato for his excellent analysis and Jann Horn for\nhis insightful and intelligent analysis of the situation, both of whom were\ninstrumental in this fix."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm\/vma: añadir la opción give_up_on_oom en modificar\/fusionar, usar en la versión uffd Actualmente, si una fusión de VMA falla debido a una condición OOM que surge en la fusión de confirmación o un fallo al duplicar anon_vma, informamos de ello para que el llamador pueda gestionarlo. Sin embargo, hay casos en los que el llamador solo está intentando una fusión ostensiblemente y no le importa si falla debido a esta condición. Dado que no queremos introducir una suposición implícita de que solo modificamos realmente los VMA después de que puedan surgir condiciones OOM, agregue una opción 'renunciar a oom' y haga un contrato explícito de que, si se establece este indicador, no modificaremos en absoluto ningún VMA si surge OOM y simplemente nos retiraremos. Dado que sería muy inusual que un usuario intentara usar vma_modify() con este indicador activado, pero especificando un rango dentro de un VMA que termina dividiéndose (lo cual puede fallar debido a problemas con rlimit, no solo por OOM), añadimos una advertencia de depuración para esta condición. El motivo es la versión de uffd: syzkaller (y el astuto análisis de Pedro Falcato) encontró una forma en la que un fallo inyectado en la asignación, que desencadena una condición OOM al fusionar las confirmaciones, provocaba que el código de uffd se confundiera y tratara un valor de error como si fuera un puntero a un VMA. Para evitar esto, utilizamos este nuevo indicador VMG para asegurarnos de que esto nunca ocurra, aprovechando que, si borramos VMAs completas, no queremos que se nos informe de un evento OOM. Muchas gracias a Pedro Falcato por su excelente análisis y a Jann Horn por su perspicaz e inteligente análisis de la situación, ambos fundamentales en esta solución."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41e6ddcaa0f18dda4c3fadf22533775a30d6f72f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b906c1ad25adce6ff35be19b65a1aa7d960fe1d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c103a75c61648203d731e3b97a6fbeea4003cb15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37761","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:38.377","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe: Fix an out-of-bounds shift when invalidating TLB\n\nWhen the size of the range invalidated is larger than\nrounddown_pow_of_two(ULONG_MAX),\nThe function macro roundup_pow_of_two(length) will hit an out-of-bounds\nshift [1].\n\nUse a full TLB invalidation for such cases.\nv2:\n- Use a define for the range size limit over which we use a full\n  TLB invalidation. (Lucas)\n- Use a better calculation of the limit.\n\n[1]:\n[   39.202421] ------------[ cut here ]------------\n[   39.202657] UBSAN: shift-out-of-bounds in .\/include\/linux\/log2.h:57:13\n[   39.202673] shift exponent 64 is too large for 64-bit type 'long unsigned int'\n[   39.202688] CPU: 8 UID: 0 PID: 3129 Comm: xe_exec_system_ Tainted: G     U             6.14.0+ #10\n[   39.202690] Tainted: [U]=USER\n[   39.202690] Hardware name: ASUS System Product Name\/PRIME B560M-A AC, BIOS 2001 02\/01\/2023\n[   39.202691] Call Trace:\n[   39.202692]  <TASK>\n[   39.202695]  dump_stack_lvl+0x6e\/0xa0\n[   39.202699]  ubsan_epilogue+0x5\/0x30\n[   39.202701]  __ubsan_handle_shift_out_of_bounds.cold+0x61\/0xe6\n[   39.202705]  xe_gt_tlb_invalidation_range.cold+0x1d\/0x3a [xe]\n[   39.202800]  ? find_held_lock+0x2b\/0x80\n[   39.202803]  ? mark_held_locks+0x40\/0x70\n[   39.202806]  xe_svm_invalidate+0x459\/0x700 [xe]\n[   39.202897]  drm_gpusvm_notifier_invalidate+0x4d\/0x70 [drm_gpusvm]\n[   39.202900]  __mmu_notifier_release+0x1f5\/0x270\n[   39.202905]  exit_mmap+0x40e\/0x450\n[   39.202912]  __mmput+0x45\/0x110\n[   39.202914]  exit_mm+0xc5\/0x130\n[   39.202916]  do_exit+0x21c\/0x500\n[   39.202918]  ? lockdep_hardirqs_on_prepare+0xdb\/0x190\n[   39.202920]  do_group_exit+0x36\/0xa0\n[   39.202922]  get_signal+0x8f8\/0x900\n[   39.202926]  arch_do_signal_or_restart+0x35\/0x100\n[   39.202930]  syscall_exit_to_user_mode+0x1fc\/0x290\n[   39.202932]  do_syscall_64+0xa1\/0x180\n[   39.202934]  ? do_user_addr_fault+0x59f\/0x8a0\n[   39.202937]  ? lock_release+0xd2\/0x2a0\n[   39.202939]  ? do_user_addr_fault+0x5a9\/0x8a0\n[   39.202942]  ? trace_hardirqs_off+0x4b\/0xc0\n[   39.202944]  ? clear_bhb_loop+0x25\/0x80\n[   39.202946]  ? clear_bhb_loop+0x25\/0x80\n[   39.202947]  ? clear_bhb_loop+0x25\/0x80\n[   39.202950]  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[   39.202952] RIP: 0033:0x7fa945e543e1\n[   39.202961] Code: Unable to access opcode bytes at 0x7fa945e543b7.\n[   39.202962] RSP: 002b:00007ffca8fb4170 EFLAGS: 00000293\n[   39.202963] RAX: 000000000000003d RBX: 0000000000000000 RCX: 00007fa945e543e3\n[   39.202964] RDX: 0000000000000000 RSI: 00007ffca8fb41ac RDI: 00000000ffffffff\n[   39.202964] RBP: 00007ffca8fb4190 R08: 0000000000000000 R09: 00007fa945f600a0\n[   39.202965] R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000\n[   39.202966] R13: 00007fa9460dd310 R14: 00007ffca8fb41ac R15: 0000000000000000\n[   39.202970]  <\/TASK>\n[   39.202970] ---[ end trace ]---\n\n(cherry picked from commit b88f48f86500bc0b44b4f73ac66d500a40d320ad)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/xe: corrige un cambio fuera de los límites al invalidar TLB Cuando el tamaño del rango invalidado es mayor que rounddown_pow_of_two(ULONG_MAX), la macro de función roundup_pow_of_two(length) alcanzará un cambio fuera de los límites [1]. Use una invalidación de TLB completa para tales casos. v2: - Use una definición para el límite de tamaño de rango sobre el cual usamos una invalidación de TLB completa. (Lucas) - Use un mejor cálculo del límite. [1]: [ 39.202421] ------------[ cortar aquí ]------------ [ 39.202657] UBSAN: desplazamiento fuera de los límites en .\/include\/linux\/log2.h:57:13 [ 39.202673] el exponente de desplazamiento 64 es demasiado grande para el tipo de 64 bits 'long unsigned int' [ 39.202688] CPU: 8 UID: 0 PID: 3129 Comm: xe_exec_system_ Tainted: GU 6.14.0+ #10 [ 39.202690] Tainted: [U]=USER [ 39.202690] Nombre del hardware: Nombre del producto del sistema ASUS\/PRIME B560M-A AC, BIOS 2001 02\/01\/2023 [ 39.202691] Llamada Rastreo: [ 39.202692]  [ 39.202695] dump_stack_lvl+0x6e\/0xa0 [ 39.202699] ubsan_epilogue+0x5\/0x30 [ 39.202701] __ubsan_handle_shift_out_of_bounds.cold+0x61\/0xe6 [ 39.202705] xe_gt_tlb_invalidation_range.cold+0x1d\/0x3a [xe] [ 39.202800] ? find_held_lock+0x2b\/0x80 [ 39.202803] ? mark_held_locks+0x40\/0x70 [ 39.202806] xe_svm_invalidate+0x459\/0x700 [xe] [ 39.202897] drm_gpusvm_notifier_invalidate+0x4d\/0x70 [drm_gpusvm] [ 39.202900] __mmu_notifier_release+0x1f5\/0x270 [ 39.202905] exit_mmap+0x40e\/0x450 [ 39.202912] __mmput+0x45\/0x110 [ 39.202914] exit_mm+0xc5\/0x130 [ 39.202916] do_exit+0x21c\/0x500 [ 39.202918] ? lockdep_hardirqs_on_prepare+0xdb\/0x190 [ 39.202920] do_group_exit+0x36\/0xa0 [ 39.202922] get_signal+0x8f8\/0x900 [ 39.202926] arch_do_signal_or_restart+0x35\/0x100 [ 39.202930] syscall_exit_to_user_mode+0x1fc\/0x290 [ 39.202932] do_syscall_64+0xa1\/0x180 [ 39.202934] ? do_user_addr_fault+0x59f\/0x8a0 [ 39.202937] ? lock_release+0xd2\/0x2a0 [ 39.202939] ? do_user_addr_fault+0x5a9\/0x8a0 [ 39.202942] ? trace_hardirqs_off+0x4b\/0xc0 [ 39.202944] ? clear_bhb_loop+0x25\/0x80 [ 39.202946] ? clear_bhb_loop+0x25\/0x80 [ 39.202947] ? clear_bhb_loop+0x25\/0x80 [ 39.202950] entry_SYSCALL_64_after_hwframe+0x76\/0x7e [ 39.202952] RIP: 0033:0x7fa945e543e1 [ 39.202961] Code: Unable to access opcode bytes at 0x7fa945e543b7. [ 39.202962] RSP: 002b:00007ffca8fb4170 EFLAGS: 00000293 [ 39.202963] RAX: 000000000000003d RBX: 0000000000000000 RCX: 00007fa945e543e3 [ 39.202964] RDX: 0000000000000000 RSI: 00007ffca8fb41ac RDI: 00000000ffffffff [ 39.202964] RBP: 00007ffca8fb4190 R08: 0000000000000000 R09: 00007fa945f600a0 [ 39.202965] R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000 [ 39.202966] R13: 00007fa9460dd310 R14: 00007ffca8fb41ac R15: 0000000000000000 [ 39.202970]  [ 39.202970] ---[ fin del seguimiento ]--- (seleccionado de la confirmación b88f48f86500bc0b44b4f73ac66d500a40d320ad)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28477f701b63922ff88e9fb13f5519c11cd48b86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bcfeddb36b77f9fe3b010bb0b282b7618420bba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4715858f87b78ce58cfa03bbe140321edbbaf20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37762","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:38.500","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/virtio: Fix missed dmabuf unpinning in error path of prepare_fb()\n\nCorrect error handling in prepare_fb() to fix leaking resources when\nerror happens."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/virtio: Se corrige la falta de fijación de dmabuf en la ruta de error de prepare_fb(). Se corrige el manejo de errores en prepare_fb() para corregir la pérdida de recursos cuando ocurre un error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/395cc80051f8da267b27496a4029dd931a198855","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe983e925bf7062d7b975357afcbc77bb7f354d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37763","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:38.817","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/imagination: take paired job reference\n\nFor paired jobs, have the fragment job take a reference on the\ngeometry job, so that the geometry job cannot be freed until\nthe fragment job has finished with it.\n\nThe geometry job structure is accessed when the fragment job is being\nprepared by the GPU scheduler. Taking the reference prevents the\ngeometry job being freed until the fragment job no longer requires it.\n\nFixes a use after free bug detected by KASAN:\n\n[  124.256386] BUG: KASAN: slab-use-after-free in pvr_queue_prepare_job+0x108\/0x868 [powervr]\n[  124.264893] Read of size 1 at addr ffff0000084cb960 by task kworker\/u16:4\/63"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/imagination: toma de referencia de trabajo emparejado. Para trabajos emparejados, el trabajo de fragmento toma una referencia en el trabajo de geometría, de modo que este no pueda liberarse hasta que el trabajo de fragmento haya terminado con él. Se accede a la estructura del trabajo de geometría cuando el programador de GPU prepara el trabajo de fragmento. Tomar la referencia impide que el trabajo de geometría se libere hasta que el trabajo de fragmento ya no la necesite. Corrige un error de use-after-free detectado por KASAN: [124.256386] ERROR: KASAN: slab-use-after-free en pvr_queue_prepare_job+0x108\/0x868 [powervr] [124.264893] Lectura de tamaño 1 en la dirección ffff0000084cb960 por la tarea kworker\/u16:4\/63"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ba2abe154ef68f9612eee9d6fbfe53a1736b064","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5a6f97a78e2fc008fd6503b7040cb7e1120b873","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c90b95e12eb88d23740e5ea2c43d71675d17ac8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37764","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:39.150","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/imagination: fix firmware memory leaks\n\nFree the memory used to hold the results of firmware image processing\nwhen the module is unloaded.\n\nFix the related issue of the same memory being leaked if processing\nof the firmware image fails during module load.\n\nEnsure all firmware GEM objects are destroyed if firmware image\nprocessing fails.\n\nFixes memory leaks on powervr module unload detected by Kmemleak:\n\nunreferenced object 0xffff000042e20000 (size 94208):\n  comm \"modprobe\", pid 470, jiffies 4295277154\n  hex dump (first 32 bytes):\n    02 ae 7f ed bf 45 84 00 3c 5b 1f ed 9f 45 45 05  .....E..<[...EE.\n    d5 4f 5d 14 6c 00 3d 23 30 d0 3a 4a 66 0e 48 c8  .O].l.=#0.:Jf.H.\n  backtrace (crc dd329dec):\n    kmemleak_alloc+0x30\/0x40\n    ___kmalloc_large_node+0x140\/0x188\n    __kmalloc_large_node_noprof+0x2c\/0x13c\n    __kmalloc_noprof+0x48\/0x4c0\n    pvr_fw_init+0xaa4\/0x1f50 [powervr]\n\nunreferenced object 0xffff000042d20000 (size 20480):\n  comm \"modprobe\", pid 470, jiffies 4295277154\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 09 00 00 00 0b 00 00 00  ................\n    00 00 00 00 00 00 00 00 07 00 00 00 08 00 00 00  ................\n  backtrace (crc 395b02e3):\n    kmemleak_alloc+0x30\/0x40\n    ___kmalloc_large_node+0x140\/0x188\n    __kmalloc_large_node_noprof+0x2c\/0x13c\n    __kmalloc_noprof+0x48\/0x4c0\n    pvr_fw_init+0xb0c\/0x1f50 [powervr]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/imagination: se corrigen fugas de memoria del firmware. Libera la memoria utilizada para almacenar los resultados del procesamiento de la imagen del firmware al descargar el módulo. Se soluciona el problema relacionado de la fuga de la misma memoria si el procesamiento de la imagen del firmware falla durante la carga del módulo. Se garantiza la destrucción de todos los objetos GEM del firmware si falla el procesamiento de la imagen. Se corrigen las fugas de memoria detectadas por Kmemleak al descargar el módulo powervr: objeto sin referencia 0xffff000042e20000 (tamaño 94208): comm \"modprobe\", pid 470, jiffies 4295277154 hex dump (first 32 bytes): 02 ae 7f ed bf 45 84 00 3c 5b 1f ed 9f 45 45 05 .....E..&lt;[...EE. d5 4f 5d 14 6c 00 3d 23 30 d0 3a 4a 66 0e 48 c8 .O].l.=#0.:Jf.H. backtrace (crc dd329dec): kmemleak_alloc+0x30\/0x40 ___kmalloc_large_node+0x140\/0x188 __kmalloc_large_node_noprof+0x2c\/0x13c __kmalloc_noprof+0x48\/0x4c0 pvr_fw_init+0xaa4\/0x1f50 [powervr] unreferenced object 0xffff000042d20000 (size 20480): comm \"modprobe\", pid 470, jiffies 4295277154 hex dump (first 32 bytes): 00 00 00 00 00 00 00 00 09 00 00 00 0b 00 00 00 ................ 00 00 00 00 00 00 00 00 07 00 00 00 08 00 00 00 ................ backtrace (crc 395b02e3): kmemleak_alloc+0x30\/0x40 ___kmalloc_large_node+0x140\/0x188 __kmalloc_large_node_noprof+0x2c\/0x13c __kmalloc_noprof+0x48\/0x4c0 pvr_fw_init+0xb0c\/0x1f50 [powervr] "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/490c30fd554597e78f66650044877e7defb5f83c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/891c12ba855ccb34c06a2e5da75c644683087036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5b230e7f3a55bd8bd8d012eec75a4b7baa671d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37765","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:39.417","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/nouveau: prime: fix ttm_bo_delayed_delete oops\n\nFix an oops in ttm_bo_delayed_delete which results from dererencing a\ndangling pointer:\n\nOops: general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b7b: 0000 [#1] PREEMPT SMP\nCPU: 4 UID: 0 PID: 1082 Comm: kworker\/u65:2 Not tainted 6.14.0-rc4-00267-g505460b44513-dirty #216\nHardware name: LENOVO 82N6\/LNVNB161216, BIOS GKCN65WW 01\/16\/2024\nWorkqueue: ttm ttm_bo_delayed_delete [ttm]\nRIP: 0010:dma_resv_iter_first_unlocked+0x55\/0x290\nCode: 31 f6 48 c7 c7 00 2b fa aa e8 97 bd 52 ff e8 a2 c1 53 00 5a 85 c0 74 48 e9 88 01 00 00 4c 89 63 20 4d 85 e4 0f 84 30 01 00 00 <41> 8b 44 24 10 c6 43 2c 01 48 89 df 89 43 28 e8 97 fd ff ff 4c 8b\nRSP: 0018:ffffbf9383473d60 EFLAGS: 00010202\nRAX: 0000000000000001 RBX: ffffbf9383473d88 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: ffffbf9383473d78 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: 6b6b6b6b6b6b6b6b\nR13: ffffa003bbf78580 R14: ffffa003a6728040 R15: 00000000000383cc\nFS:  0000000000000000(0000) GS:ffffa00991c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000758348024dd0 CR3: 000000012c259000 CR4: 0000000000f50ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19\/0x26\n ? die_addr+0x3d\/0x70\n ? exc_general_protection+0x159\/0x460\n ? asm_exc_general_protection+0x27\/0x30\n ? dma_resv_iter_first_unlocked+0x55\/0x290\n dma_resv_wait_timeout+0x56\/0x100\n ttm_bo_delayed_delete+0x69\/0xb0 [ttm]\n process_one_work+0x217\/0x5c0\n worker_thread+0x1c8\/0x3d0\n ? apply_wqattrs_cleanup.part.0+0xc0\/0xc0\n kthread+0x10b\/0x240\n ? kthreads_online_cpu+0x140\/0x140\n ret_from_fork+0x40\/0x70\n ? kthreads_online_cpu+0x140\/0x140\n ret_from_fork_asm+0x11\/0x20\n <\/TASK>\n\nThe cause of this is:\n\n- drm_prime_gem_destroy calls dma_buf_put(dma_buf) which releases the\n  reference to the shared dma_buf. The reference count is 0, so the\n  dma_buf is destroyed, which in turn decrements the corresponding\n  amdgpu_bo reference count to 0, and the amdgpu_bo is destroyed -\n  calling drm_gem_object_release then dma_resv_fini (which destroys the\n  reservation object), then finally freeing the amdgpu_bo.\n\n- nouveau_bo obj->bo.base.resv is now a dangling pointer to the memory\n  formerly allocated to the amdgpu_bo.\n\n- nouveau_gem_object_del calls ttm_bo_put(&nvbo->bo) which calls\n  ttm_bo_release, which schedules ttm_bo_delayed_delete.\n\n- ttm_bo_delayed_delete runs and dereferences the dangling resv pointer,\n  resulting in a general protection fault.\n\nFix this by moving the drm_prime_gem_destroy call from\nnouveau_gem_object_del to nouveau_bo_del_ttm. This ensures that it will\nbe run after ttm_bo_delayed_delete."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/nouveau: prime: fix ttm_bo_delayed_delete oops Corrige un oops en ttm_bo_delayed_delete que resulta de la desreferenciación de un puntero colgante: Oops: fallo de protección general, probablemente para dirección no canónica 0x6b6b6b6b6b6b6b7b: 0000 [#1] PREEMPT SMP CPU: 4 UID: 0 PID: 1082 Comm: kworker\/u65:2 No contaminado 6.14.0-rc4-00267-g505460b44513-dirty #216 Nombre del hardware: LENOVO 82N6\/LNVNB161216, BIOS GKCN65WW 16\/01\/2024 Cola de trabajo: ttm ttm_bo_delayed_delete [ttm] RIP: 0010:dma_resv_iter_first_unlocked+0x55\/0x290 Código: 31 f6 48 c7 c7 00 2b fa aa e8 97 bd 52 ff e8 a2 c1 53 00 5a 85 c0 74 48 e9 88 01 00 00 4c 89 63 20 4d 85 e4 0f 84 30 01 00 00 &lt;41&gt; 8b 44 24 10 c6 43 2c 01 48 89 df 89 43 28 e8 97 fd ff ff 4c 8b RSP: 0018:ffffbf9383473d60 EFLAGS: 00010202 RAX: 0000000000000001 RBX: ffffbf9383473d88 RCX: 0000000000000000 RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000 RBP: ffffbf9383473d78 R08: 000000000000000 R09: 0000000000000000 R10: 000000000000000 R11: 000000000000000 R12: 6b6b6b6b6b6b6b6b R13: ffffa003bbf78580 R14: ffffa003a6728040 R15: 00000000000383cc FS: 0000000000000000(0000) GS:ffffa00991c00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000758348024dd0 CR3: 000000012c259000 CR4: 0000000000f50ef0 PKRU: 55555554 Rastreo de llamadas:  ? __die_body.cold+0x19\/0x26 ? die_addr+0x3d\/0x70 ? exc_general_protection+0x159\/0x460 ? asm_exc_general_protection+0x27\/0x30 ? dma_resv_iter_first_unlocked+0x55\/0x290 dma_resv_wait_timeout+0x56\/0x100 ttm_bo_delayed_delete+0x69\/0xb0 [ttm] process_one_work+0x217\/0x5c0 worker_thread+0x1c8\/0x3d0 ? apply_wqattrs_cleanup.part.0+0xc0\/0xc0 kthread+0x10b\/0x240 ? kthreads_online_cpu+0x140\/0x140 ret_from_fork+0x40\/0x70 ? kthreads_online_cpu+0x140\/0x140 ret_from_fork_asm+0x11\/0x20  La causa es: - drm_prime_gem_destroy llama a dma_buf_put(dma_buf), que libera la referencia al dma_buf compartido. El recuento de referencias es 0, por lo que el dma_buf se destruye, lo que a su vez reduce el recuento de referencias amdgpu_bo correspondiente a 0, y el amdgpu_bo se destruye. - Se llama a drm_gem_object_release y luego a dma_resv_fini (que destruye el objeto de reserva), liberando finalmente el amdgpu_bo. - nouveau_bo obj-&gt;bo.base.resv ahora es un puntero colgante a la memoria anteriormente asignada a amdgpu_bo. - nouveau_gem_object_del llama a ttm_bo_put(&amp;nvbo-&gt;bo), que a su vez llama a ttm_bo_release, que programa ttm_bo_delayed_delete. - ttm_bo_delayed_delete se ejecuta y desreferencia el puntero colgante resv, lo que genera un fallo de protección general. Para solucionar esto, mueva la llamada drm_prime_gem_destroy de nouveau_gem_object_del a nouveau_bo_del_ttm. Esto garantiza que se ejecute después de ttm_bo_delayed_delete."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12b038d521c75e3521522503becf3bc162628469","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31e94c7989572f96926673614a3b958915a13ca9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47761deabb69a5df0c2c4ec400d80bb3e072bd2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b95947ee780f4e1fb26413a1437d05bcb99712b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2c805996a49998d31ac522beb1534ca417e761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/706868a1a1072cffd8bd63f7e161d79141099849","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ec0fbb28d049273bfd4f1e7a5ae4c74884beed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada78110b2d3ec88b398a49703bd336d4cee7a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37766","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:39.550","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/068091b796480819bf70b159f17e222ad8bea900","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42f7b5d12c28b2a601a98d10a80c6db1fe1a2900","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e3d9508c056d7e0a56b58d5c81253e2a0d22b6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b9f9b998b107c7539f148a013d789ddb860c3b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80814924260cea431a8fc6137d11cc8cb331a10c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/affd2241927a1e74c0aecd50c2d920dc4213c56d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce773dd844ee19a605af27f11470887e0f2044a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffd688804425579a472fbd2525bedb58b1d28bd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37767","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:39.723","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/327107bd7f052f4ee2d0c966c7ae879822f1814f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f7b5987e21e003cafac28f0e4d323e6496f83ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3ff73e3bddf1a6c30d7effe4018d12ba0cadd2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f23e9116ebb71b63fe9cec0dcac792aa9af30b0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2904fa2b9da943db6bef7c0f8b3fb4fc14acbc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb803d4bb9ea0a61c21c4987505e4d4ae18f9fdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37768","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:39.977","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cdd02cb70682d7d205ca6dc02a4d1eb76758d24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fc4fb54f6f064c25bfbbfd443aa861d3422dd4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c246a05df51c52fe0852ce56ba10c41e6ed1f39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e9c4f8d197d5709c75effa5d58e80b4fa01981a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e4f1e21fe7b93a8ef57db433071266c2590e260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0742a709be7979c7a480772046a1f36d09dab00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be0fffc4152aac4f0291ed2d793f3cfee788449d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37769","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.190","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm\/smu11: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n(cherry picked from commit da7dc714a8f8e1c9fc33c57cd63583779a3bef71)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm\/smu11: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE. (Seleccionada de la confirmación da7dc714a8f8e1c9fc33c57cd63583779a3bef71)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/63a150400194592206817124268ff6f43947e8c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ba88b5cccc1a99c1afb96e31e7eedac9907704c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de2cba068c9c648503973b57696d035cfe58a9f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de6f8e0534cfabc528c969d453150ca90b24fb01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc9d55377353321e78f9e108d15f72a17e8c6ee2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37770","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.330","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05de66de280ea1bd0459c994bfd2dd332cfbc2a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c02fcbe4a1393a3c02da6ae35e72493cfdb2155","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b8c3c0d17c07f301011e2908fecd2ebdcfe3d1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/587de3ca7875c06fe3c3aa4073a85c4eff46591f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/836a189fb422e7efb81c51d5160e47ec7bc11500","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd4d90adbca1862d03e581e10e74ab73ec75e61b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e109528bbf460e50074c156253d9080d223ee37f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37771","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.453","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX\/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/pm: Impide la división por cero. El usuario puede establecer cualquier valor de velocidad. Si la velocidad es superior a UINT_MAX\/8, es posible la división por cero. Encontrada por el Centro de Verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/402964994e8ece29702383b234fabcf04791ff95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5096174074114f83c700a27869c54362cbb10f3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6413fed016208171592c88b5df002af8a1387e24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d641c2b83275d3b0424127b2e0d2d0f7dd82aef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7c41df4913789ebfe73cc1e17c6401d4c5eab69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baa54adb5e0599299b8f088efb5544d876a3eb62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37772","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.580","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cma: Fix workqueue crash in cma_netevent_work_handler\n\nstruct rdma_cm_id has member \"struct work_struct net_work\"\nthat is reused for enqueuing cma_netevent_work_handler()s\nonto cma_wq.\n\nBelow crash[1] can occur if more than one call to\ncma_netevent_callback() occurs in quick succession,\nwhich further enqueues cma_netevent_work_handler()s for the\nsame rdma_cm_id, overwriting any previously queued work-item(s)\nthat was just scheduled to run i.e. there is no guarantee\nthe queued work item may run between two successive calls\nto cma_netevent_callback() and the 2nd INIT_WORK would overwrite\nthe 1st work item (for the same rdma_cm_id), despite grabbing\nid_table_lock during enqueue.\n\nAlso drgn analysis [2] indicates the work item was likely overwritten.\n\nFix this by moving the INIT_WORK() to __rdma_create_id(),\nso that it doesn't race with any existing queue_work() or\nits worker thread.\n\n[1] Trimmed crash stack:\n=============================================\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nkworker\/u256:6 ... 6.12.0-0...\nWorkqueue:  cma_netevent_work_handler [rdma_cm] (rdma_cm)\nRIP: 0010:process_one_work+0xba\/0x31a\nCall Trace:\n worker_thread+0x266\/0x3a0\n kthread+0xcf\/0x100\n ret_from_fork+0x31\/0x50\n ret_from_fork_asm+0x1a\/0x30\n=============================================\n\n[2] drgn crash analysis:\n\n>>> trace = prog.crashed_thread().stack_trace()\n>>> trace\n(0)  crash_setup_regs (.\/arch\/x86\/include\/asm\/kexec.h:111:15)\n(1)  __crash_kexec (kernel\/crash_core.c:122:4)\n(2)  panic (kernel\/panic.c:399:3)\n(3)  oops_end (arch\/x86\/kernel\/dumpstack.c:382:3)\n...\n(8)  process_one_work (kernel\/workqueue.c:3168:2)\n(9)  process_scheduled_works (kernel\/workqueue.c:3310:3)\n(10) worker_thread (kernel\/workqueue.c:3391:4)\n(11) kthread (kernel\/kthread.c:389:9)\n\nLine workqueue.c:3168 for this kernel version is in process_one_work():\n3168\tstrscpy(worker->desc, pwq->wq->name, WORKER_DESC_LEN);\n\n>>> trace[8][\"work\"]\n*(struct work_struct *)0xffff92577d0a21d8 = {\n\t.data = (atomic_long_t){\n\t\t.counter = (s64)536870912,    <=== Note\n\t},\n\t.entry = (struct list_head){\n\t\t.next = (struct list_head *)0xffff924d075924c0,\n\t\t.prev = (struct list_head *)0xffff924d075924c0,\n\t},\n\t.func = (work_func_t)cma_netevent_work_handler+0x0 = 0xffffffffc2cec280,\n}\n\nSuspicion is that pwq is NULL:\n>>> trace[8][\"pwq\"]\n(struct pool_workqueue *)<absent>\n\nIn process_one_work(), pwq is assigned from:\nstruct pool_workqueue *pwq = get_work_pwq(work);\n\nand get_work_pwq() is:\nstatic struct pool_workqueue *get_work_pwq(struct work_struct *work)\n{\n \tunsigned long data = atomic_long_read(&work->data);\n\n \tif (data & WORK_STRUCT_PWQ)\n \t\treturn work_struct_pwq(data);\n \telse\n \t\treturn NULL;\n}\n\nWORK_STRUCT_PWQ is 0x4:\n>>> print(repr(prog['WORK_STRUCT_PWQ']))\nObject(prog, 'enum work_flags', value=4)\n\nBut work->data is 536870912 which is 0x20000000.\nSo, get_work_pwq() returns NULL and we crash in process_one_work():\n3168\tstrscpy(worker->desc, pwq->wq->name, WORKER_DESC_LEN);\n============================================="},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA\/cma: Se corrige el fallo de la cola de trabajo en cma_netevent_work_handler. La estructura rdma_cm_id tiene el miembro \"struct work_struct net_work\", que se reutiliza para encolar cma_netevent_work_handler()s en cma_wq. El fallo [1] puede ocurrir si se realizan varias llamadas a cma_netevent_callback() en rápida sucesión, lo que encola aún más cma_netevent_work_handler()s para el mismo rdma_cm_id, sobrescribiendo cualquier elemento de trabajo previamente en cola que se haya programado para ejecutarse. Es decir, no hay garantía de que el elemento de trabajo en cola se ejecute entre dos llamadas sucesivas a cma_netevent_callback() y el segundo INIT_WORK sobrescribiría el primer elemento de trabajo (para el mismo rdma_cm_id), a pesar de obtener id_table_lock durante la encola. Además, el análisis drgn [2] indica que es probable que el elemento de trabajo se haya sobrescrito. Para solucionarlo, mueva INIT_WORK() a __rdma_create_id(), de modo que no compita con ninguna queue_work() existente ni con su subproceso de trabajo. [1] Pila de fallos recortada: =============================================== ERROR: desreferencia de puntero NULL del núcleo, dirección: 000000000000008 kworker\/u256:6 ... 6.12.0-0... Cola de trabajo: cma_netevent_work_handler [rdma_cm] (rdma_cm) RIP: 0010:process_one_work+0xba\/0x31a Seguimiento de llamadas: worker_thread+0x266\/0x3a0 kthread+0xcf\/0x100 ret_from_fork+0x31\/0x50 ret_from_fork_asm+0x1a\/0x30 ============================================= [2] drgn crash analysis: &gt;&gt;&gt; trace = prog.crashed_thread().stack_trace() &gt;&gt;&gt; trace (0) crash_setup_regs (.\/arch\/x86\/include\/asm\/kexec.h:111:15) (1) __crash_kexec (kernel\/crash_core.c:122:4) (2) panic (kernel\/panic.c:399:3) (3) oops_end (arch\/x86\/kernel\/dumpstack.c:382:3) ... (8) process_one_work (kernel\/workqueue.c:3168:2) (9) process_scheduled_works (kernel\/workqueue.c:3310:3) (10) worker_thread (kernel\/workqueue.c:3391:4) (11) kthread (kernel\/kthread.c:389:9) Line workqueue.c:3168 for this kernel version is in process_one_work(): 3168 strscpy(worker-&gt;desc, pwq-&gt;wq-&gt;name, WORKER_DESC_LEN); &gt;&gt;&gt; trace[8][\"work\"] *(struct work_struct *)0xffff92577d0a21d8 = { .data = (atomic_long_t){ .counter = (s64)536870912, &lt;=== Note }, .entry = (struct list_head){ .next = (struct list_head *)0xffff924d075924c0, .prev = (struct list_head *)0xffff924d075924c0, }, .func = (work_func_t)cma_netevent_work_handler+0x0 = 0xffffffffc2cec280, } Suspicion is that pwq is NULL: &gt;&gt;&gt; trace[8][\"pwq\"] (struct pool_workqueue *) In process_one_work(), pwq is assigned from: struct pool_workqueue *pwq = get_work_pwq(work); and get_work_pwq() is: static struct pool_workqueue *get_work_pwq(struct work_struct *work) { unsigned long data = atomic_long_read(&amp;work-&gt;data); if (data &amp; WORK_STRUCT_PWQ) return work_struct_pwq(data); else return NULL; } WORK_STRUCT_PWQ is 0x4: &gt;&gt;&gt; print(repr(prog['WORK_STRUCT_PWQ'])) Object(prog, 'enum work_flags', value=4) But work-&gt;data is 536870912 which is 0x20000000. So, get_work_pwq() returns NULL and we crash in process_one_work(): 3168 strscpy(worker-&gt;desc, pwq-&gt;wq-&gt;name, WORKER_DESC_LEN); ============================================= "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45f5dcdd049719fb999393b30679605f16ebce14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51003b2c872c63d28bcf5fbcc52cf7b05615f7b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b172a4a0de254f1fcce7591833a9a63547c2f447","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2b169fc7a12665d8a675c1ff14bca1b9c63fb9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d23fd7a539ac078df119707110686a5b226ee3bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37773","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.703","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtiofs: add filesystem context source name check\n\nIn certain scenarios, for example, during fuzz testing, the source\nname may be NULL, which could lead to a kernel panic. Therefore, an\nextra check for the source name should be added."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: virtiofs: añadir comprobación del nombre de la fuente en el contexto del sistema de archivos. En ciertos escenarios, por ejemplo, durante las pruebas fuzz, el nombre de la fuente puede ser nulo, lo que podría provocar un pánico del kernel. Por lo tanto, se debe añadir una comprobación adicional del nombre de la fuente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/599d1e2a6aecc44acf22fe7ea6f5e84a7e526abe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee09cdaf3414f6c92960714af46d3d90eede2f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d6dcf18a1b49990295ac8a05fd9bdfd27ccbf88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a648d80f8d9b208beee03a2d9aa690cfacf1d41e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a94fd938df2b1628da66b498aa0eeb89593bc7a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b84f13fdad10a543e2e65bab7e81b3f0bceabd67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3e31d613951c299487844c4d1686a933e8ee291","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6ec52710dc5e156b774cbef5d0f5c99b1c53a80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37774","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:40.877","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nslab: ensure slab->obj_exts is clear in a newly allocated slab page\n\nktest recently reported crashes while running several buffered io tests\nwith __alloc_tagging_slab_alloc_hook() at the top of the crash call stack.\nThe signature indicates an invalid address dereference with low bits of\nslab->obj_exts being set. The bits were outside of the range used by\npage_memcg_data_flags and objext_flags and hence were not masked out\nby slab_obj_exts() when obtaining the pointer stored in slab->obj_exts.\nThe typical crash log looks like this:\n\n00510 Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010\n00510 Mem abort info:\n00510   ESR = 0x0000000096000045\n00510   EC = 0x25: DABT (current EL), IL = 32 bits\n00510   SET = 0, FnV = 0\n00510   EA = 0, S1PTW = 0\n00510   FSC = 0x05: level 1 translation fault\n00510 Data abort info:\n00510   ISV = 0, ISS = 0x00000045, ISS2 = 0x00000000\n00510   CM = 0, WnR = 1, TnD = 0, TagAccess = 0\n00510   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n00510 user pgtable: 4k pages, 39-bit VAs, pgdp=0000000104175000\n00510 [0000000000000010] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000\n00510 Internal error: Oops: 0000000096000045 [#1]  SMP\n00510 Modules linked in:\n00510 CPU: 10 UID: 0 PID: 7692 Comm: cat Not tainted 6.15.0-rc1-ktest-g189e17946605 #19327 NONE\n00510 Hardware name: linux,dummy-virt (DT)\n00510 pstate: 20001005 (nzCv daif -PAN -UAO -TCO -DIT +SSBS BTYPE=--)\n00510 pc : __alloc_tagging_slab_alloc_hook+0xe0\/0x190\n00510 lr : __kmalloc_noprof+0x150\/0x310\n00510 sp : ffffff80c87df6c0\n00510 x29: ffffff80c87df6c0 x28: 000000000013d1ff x27: 000000000013d200\n00510 x26: ffffff80c87df9e0 x25: 0000000000000000 x24: 0000000000000001\n00510 x23: ffffffc08041953c x22: 000000000000004c x21: ffffff80c0002180\n00510 x20: fffffffec3120840 x19: ffffff80c4821000 x18: 0000000000000000\n00510 x17: fffffffec3d02f00 x16: fffffffec3d02e00 x15: fffffffec3d00700\n00510 x14: fffffffec3d00600 x13: 0000000000000200 x12: 0000000000000006\n00510 x11: ffffffc080bb86c0 x10: 0000000000000000 x9 : ffffffc080201e58\n00510 x8 : ffffff80c4821060 x7 : 0000000000000000 x6 : 0000000055555556\n00510 x5 : 0000000000000001 x4 : 0000000000000010 x3 : 0000000000000060\n00510 x2 : 0000000000000000 x1 : ffffffc080f50cf8 x0 : ffffff80d801d000\n00510 Call trace:\n00510  __alloc_tagging_slab_alloc_hook+0xe0\/0x190 (P)\n00510  __kmalloc_noprof+0x150\/0x310\n00510  __bch2_folio_create+0x5c\/0xf8\n00510  bch2_folio_create+0x2c\/0x40\n00510  bch2_readahead+0xc0\/0x460\n00510  read_pages+0x7c\/0x230\n00510  page_cache_ra_order+0x244\/0x3a8\n00510  page_cache_async_ra+0x124\/0x170\n00510  filemap_readahead.isra.0+0x58\/0xa0\n00510  filemap_get_pages+0x454\/0x7b0\n00510  filemap_read+0xdc\/0x418\n00510  bch2_read_iter+0x100\/0x1b0\n00510  vfs_read+0x214\/0x300\n00510  ksys_read+0x6c\/0x108\n00510  __arm64_sys_read+0x20\/0x30\n00510  invoke_syscall.constprop.0+0x54\/0xe8\n00510  do_el0_svc+0x44\/0xc8\n00510  el0_svc+0x18\/0x58\n00510  el0t_64_sync_handler+0x104\/0x130\n00510  el0t_64_sync+0x154\/0x158\n00510 Code: d5384100 f9401c01 b9401aa3 b40002e1 (f8227881)\n00510 ---[ end trace 0000000000000000 ]---\n00510 Kernel panic - not syncing: Oops: Fatal exception\n00510 SMP: stopping secondary CPUs\n00510 Kernel Offset: disabled\n00510 CPU features: 0x0000,000000e0,00000410,8240500b\n00510 Memory Limit: none\n\nInvestigation indicates that these bits are already set when we allocate\nslab page and are not zeroed out after allocation. We are not yet sure\nwhy these crashes start happening only recently but regardless of the\nreason, not initializing a field that gets used later is wrong. Fix it\nby initializing slab->obj_exts during slab page allocation."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: slab: garantizar que slab-&gt;obj_exts esté libre en una página slab recién asignada. ktest reportó recientemente fallos al ejecutar varias pruebas de E\/S con buffer con __alloc_tagging_slab_alloc_hook() en la parte superior de la pila de llamadas de fallo. La firma indica una desreferencia de dirección no válida con bits bajos de slab-&gt;obj_exts activados. Los bits estaban fuera del rango utilizado por page_memcg_data_flags y objext_flags, por lo que slab_obj_exts() no los enmascaró al obtener el puntero almacenado en slab-&gt;obj_exts. El registro de fallos típico se ve así: 00510 No se puede controlar la desreferencia del puntero NULL del núcleo en la dirección virtual 0000000000000010 00510 Información de aborto de memoria: 00510 ESR = 0x0000000096000045 00510 EC = 0x25: DABT (current EL), IL = 32 bits 00510 SET = 0, FnV = 0 00510 EA = 0, S1PTW = 0 00510 FSC = 0x05: level 1 translation fault 00510 Data abort info: 00510 ISV = 0, ISS = 0x00000045, ISS2 = 0x00000000 00510 CM = 0, WnR = 1, TnD = 0, TagAccess = 0 00510 GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0 00510 user pgtable: 4k pages, 39-bit VAs, pgdp=0000000104175000 00510 [0000000000000010] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000 00510 Internal error: Oops: 0000000096000045 [#1] SMP 00510 Modules linked in: 00510 CPU: 10 UID: 0 PID: 7692 Comm: cat Not tainted 6.15.0-rc1-ktest-g189e17946605 #19327 NONE 00510 Hardware name: linux,dummy-virt (DT) 00510 pstate: 20001005 (nzCv daif -PAN -UAO -TCO -DIT +SSBS BTYPE=--) 00510 pc : __alloc_tagging_slab_alloc_hook+0xe0\/0x190 00510 lr : __kmalloc_noprof+0x150\/0x310 00510 sp : ffffff80c87df6c0 00510 x29: ffffff80c87df6c0 x28: 000000000013d1ff x27: 000000000013d200 00510 x26: ffffff80c87df9e0 x25: 0000000000000000 x24: 0000000000000001 00510 x23: ffffffc08041953c x22: 000000000000004c x21: ffffff80c0002180 00510 x20: fffffffec3120840 x19: ffffff80c4821000 x18: 0000000000000000 00510 x17: fffffffec3d02f00 x16: fffffffec3d02e00 x15: fffffffec3d00700 00510 x14: fffffffec3d00600 x13: 0000000000000200 x12: 0000000000000006 00510 x11: ffffffc080bb86c0 x10: 0000000000000000 x9 : ffffffc080201e58 00510 x8 : ffffff80c4821060 x7 : 0000000000000000 x6 : 0000000055555556 00510 x5 : 0000000000000001 x4 : 0000000000000010 x3 : 0000000000000060 00510 x2 : 0000000000000000 x1 : ffffffc080f50cf8 x0 : ffffff80d801d000 00510 Call trace: 00510 __alloc_tagging_slab_alloc_hook+0xe0\/0x190 (P) 00510 __kmalloc_noprof+0x150\/0x310 00510 __bch2_folio_create+0x5c\/0xf8 00510 bch2_folio_create+0x2c\/0x40 00510 bch2_readahead+0xc0\/0x460 00510 read_pages+0x7c\/0x230 00510 page_cache_ra_order+0x244\/0x3a8 00510 page_cache_async_ra+0x124\/0x170 00510 filemap_readahead.isra.0+0x58\/0xa0 00510 filemap_get_pages+0x454\/0x7b0 00510 filemap_read+0xdc\/0x418 00510 bch2_read_iter+0x100\/0x1b0 00510 vfs_read+0x214\/0x300 00510 ksys_read+0x6c\/0x108 00510 __arm64_sys_read+0x20\/0x30 00510 invoke_syscall.constprop.0+0x54\/0xe8 00510 do_el0_svc+0x44\/0xc8 00510 el0_svc+0x18\/0x58 00510 el0t_64_sync_handler+0x104\/0x130 00510 el0t_64_sync+0x154\/0x158 00510 Code: d5384100 f9401c01 b9401aa3 b40002e1 (f8227881) 00510 ---[ end trace 0000000000000000 ]--- 00510 Kernel panic - not syncing: Oops: Fatal exception 00510 SMP: stopping secondary CPUs 00510 Kernel Offset: disabled 00510 CPU features: 0x0000,000000e0,00000410,8240500b 00510 Límite de memoria: ninguno. La investigación indica que estos bits ya están configurados al asignar la página slab y no se ponen a cero tras la asignación. Aún no sabemos con certeza por qué estos fallos han comenzado a ocurrir recientemente, pero independientemente del motivo, es incorrecto no inicializar un campo que se utiliza posteriormente. Para solucionarlo, inicialice slab-&gt;obj_exts durante la asignación de la página slab."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28bef6622a1a874fe63aceeb0c684fab75afb3ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8baa747193591410a853bac9c3710142dfa4937b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2f5819b6ed357c0c350c0616b6b9f38be59adf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37775","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.197","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix the warning from __kernel_write_iter\n\n[ 2110.972290] ------------[ cut here ]------------\n[ 2110.972301] WARNING: CPU: 3 PID: 735 at fs\/read_write.c:599 __kernel_write_iter+0x21b\/0x280\n\nThis patch doesn't allow writing to directory."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ksmbd: corrige la advertencia de __kernel_write_iter [ 2110.972290] ------------[ cortar aquí ]------------ [ 2110.972301] ADVERTENCIA: CPU: 3 PID: 735 en fs\/read_write.c:599 __kernel_write_iter+0x21b\/0x280 Este parche no permite escribir en el directorio."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ed343481ba6911178bc5ca7a51be319eafcc747","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a879da5c34a1e5d971e815d5b30f27eb6d69efc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44079e544c9f6e3e9fb43a16ddf8b08cf686d657","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b37f2f332b40ad1c27f18682a495850f2f04db0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7ce8db490286c2e009758fa1416d66aeb333614","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37776","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.373","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix use-after-free in smb_break_all_levII_oplock()\n\nThere is a room in smb_break_all_levII_oplock that can cause racy issues\nwhen unlocking in the middle of the loop. This patch use read lock\nto protect whole loop."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ksmbd: se corrige el error \"use-after-free\" en smb_break_all_levII_oplock(). Existe una zona en smb_break_all_levII_oplock que puede causar problemas de velocidad al desbloquear en medio del bucle. Este parche utiliza un bloqueo de lectura para proteger todo el bucle."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18b4fac5ef17f77fed9417d22210ceafd6525fc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/296cb5457cc6f4a754c4ae29855f8a253d52bcc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d54ab1520d43e95f9b2e22d7a05fc9614192e5a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d73686367ad68534257cd88a36ca3c52cb8b81d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37777","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.493","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix use-after-free in __smb2_lease_break_noti()\n\nMove tcp_transport free to ksmbd_conn_free. If ksmbd connection is\nreferenced when ksmbd server thread terminates, It will not be freed,\nbut conn->tcp_transport is freed. __smb2_lease_break_noti can be performed\nasynchronously when the connection is disconnected. __smb2_lease_break_noti\ncalls ksmbd_conn_write, which can cause use-after-free\nwhen conn->ksmbd_transport is already freed."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ksmbd: se corrige el error \"use-after-free\" en __smb2_lease_break_noti(). Se mueve tcp_transport libre a ksmbd_conn_free. Si se hace referencia a la conexión ksmbd al finalizar el subproceso del servidor ksmbd, no se liberará, pero sí se liberará conn-&gt;tcp_transport. __smb2_lease_break_noti puede ejecutarse asincrónicamente cuando se desconecta la conexión. __smb2_lease_break_noti llama a ksmbd_conn_write, lo que puede causar un error \"use-after-free\" cuando conn-&gt;ksmbd_transport ya está liberado."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1aec4d14cf81b7b3e7b69eb1cfa94144eed7138e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21a4e47578d44c6b37c4fc4aba8ed7cc8dbb13de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e59796fc80603bcd8569d4d2e10b213c1918edb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37778","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.617","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: Fix dangling pointer in krb_authenticate\n\nkrb_authenticate frees sess->user and does not set the pointer\nto NULL. It calls ksmbd_krb5_authenticate to reinitialise\nsess->user but that function may return without doing so. If\nthat happens then smb2_sess_setup, which calls krb_authenticate,\nwill be accessing free'd memory when it later uses sess->user."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ksmbd: Se corrige el puntero colgante en krb_authenticate. krb_authenticate libera sess-&gt;user y no establece el puntero en NULL. Llama a ksmbd_krb5_authenticate para reinicializar sess-&gt;user, pero es posible que esta función no lo retorne. Si esto ocurre, smb2_sess_setup, que llama a krb_authenticate, accederá a la memoria liberada cuando utilice posteriormente sess-&gt;user."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1db2451de23e98bc864c6a6e52aa0d82c91cb325","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e440d5b25b7efccb3defe542a73c51005799a5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e30c0e10210c714f3d4453dc258d4abcc70364e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5b554bc8d554ed6ddf443d3db2fad9f665cec10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e83e39a5f6a01a81411a4558a59a10f87aa88dd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37779","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.733","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlib\/iov_iter: fix to increase non slab folio refcount\n\nWhen testing EROFS file-backed mount over v9fs on qemu, I encountered a\nfolio UAF issue.  The page sanity check reports the following call trace. \nThe root cause is that pages in bvec are coalesced across a folio bounary.\nThe refcount of all non-slab folios should be increased to ensure\np9_releas_pages can put them correctly.\n\nBUG: Bad page state in process md5sum  pfn:18300\npage: refcount:0 mapcount:0 mapping:00000000d5ad8e4e index:0x60 pfn:0x18300\nhead: order:0 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\naops:z_erofs_aops ino:30b0f dentry name(?):\"GoogleExtServicesCn.apk\"\nflags: 0x100000000000041(locked|head|node=0|zone=1)\nraw: 0100000000000041 dead000000000100 dead000000000122 ffff888014b13bd0\nraw: 0000000000000060 0000000000000020 00000000ffffffff 0000000000000000\nhead: 0100000000000041 dead000000000100 dead000000000122 ffff888014b13bd0\nhead: 0000000000000060 0000000000000020 00000000ffffffff 0000000000000000\nhead: 0100000000000000 0000000000000000 ffffffffffffffff 0000000000000000\nhead: 0000000000000010 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: PAGE_FLAGS_CHECK_AT_FREE flag(s) set\nCall Trace:\n dump_stack_lvl+0x53\/0x70\n bad_page+0xd4\/0x220\n __free_pages_ok+0x76d\/0xf30\n __folio_put+0x230\/0x320\n p9_release_pages+0x179\/0x1f0\n p9_virtio_zc_request+0xa2a\/0x1230\n p9_client_zc_rpc.constprop.0+0x247\/0x700\n p9_client_read_once+0x34d\/0x810\n p9_client_read+0xf3\/0x150\n v9fs_issue_read+0x111\/0x360\n netfs_unbuffered_read_iter_locked+0x927\/0x1390\n netfs_unbuffered_read_iter+0xa2\/0xe0\n vfs_iocb_iter_read+0x2c7\/0x460\n erofs_fileio_rq_submit+0x46b\/0x5b0\n z_erofs_runqueue+0x1203\/0x21e0\n z_erofs_readahead+0x579\/0x8b0\n read_pages+0x19f\/0xa70\n page_cache_ra_order+0x4ad\/0xb80\n filemap_readahead.isra.0+0xe7\/0x150\n filemap_get_pages+0x7aa\/0x1890\n filemap_read+0x320\/0xc80\n vfs_read+0x6c6\/0xa30\n ksys_read+0xf9\/0x1c0\n do_syscall_64+0x9e\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x71\/0x79"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: lib\/iov_iter: corrección para aumentar el recuento de referencias de folios no slab. Al probar el montaje basado en archivos EROFS sobre v9fs en qemu, se detectó un problema con el UAF de folio. La comprobación de integridad de la página informa el siguiente seguimiento de llamadas. La causa principal es que las páginas en bvec se fusionan en un límite de folio. Se debe aumentar el recuento de referencias de todos los folios no slab para garantizar que p9_relas_pages pueda colocarlos correctamente. ERROR: Estado de página incorrecto en proceso md5sum pfn:18300 página: refcount:0 mapcount:0 mapping:00000000d5ad8e4e índice:0x60 pfn:0x18300 encabezado: orden:0 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0 aops:z_erofs_aops ino:30b0f dentry name(?):\"GoogleExtServicesCn.apk\" indicadores: 0x100000000000041(locked|head|node=0|zone=1) sin procesar: 0100000000000041 muerto000000000100 muerto000000000122 ffff888014b13bd0 sin procesar: 0000000000000060 0000000000000020 00000000ffffffff 0000000000000000 cabeza: 0100000000000041 muerto000000000100 muerto000000000122 ffff888014b13bd0 cabeza: 0000000000000060 0000000000000020 00000000ffffffff 000000000000000 cabeza: 010000000000000 000000000000000 ffffffffffffffff 00000000000000000 encabezado: 0000000000000010 0000000000000000 00000000ffffffff 0000000000000000 página volcada porque: PAGE_FLAGS_CHECK_AT_FREE indicador(es) establecido(s) Seguimiento de llamada: dump_stack_lvl+0x53\/0x70 bad_page+0xd4\/0x220 __free_pages_ok+0x76d\/0xf30 __folio_put+0x230\/0x320 p9_release_pages+0x179\/0x1f0 p9_virtio_zc_request+0xa2a\/0x1230 p9_client_zc_rpc.constprop.0+0x247\/0x700 p9_client_read_once+0x34d\/0x810 p9_client_read+0xf3\/0x150 v9fs_issue_read+0x111\/0x360 netfs_unbuffered_read_iter_locked+0x927\/0x1390 netfs_unbuffered_read_iter+0xa2\/0xe0 vfs_iocb_iter_read+0x2c7\/0x460 erofs_fileio_rq_submit+0x46b\/0x5b0 z_erofs_runqueue+0x1203\/0x21e0 z_erofs_readahead+0x579\/0x8b0 read_pages+0x19f\/0xa70 page_cache_ra_order+0x4ad\/0xb80 filemap_readahead.isra.0+0xe7\/0x150 filemap_get_pages+0x7aa\/0x1890 filemap_read+0x320\/0xc80 vfs_read+0x6c6\/0xa30 ksys_read+0xf9\/0x1c0 do_syscall_64+0x9e\/0x1a0 entry_SYSCALL_64_after_hwframe+0x71\/0x79 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/770c8d55c42868239c748a3ebc57c9e37755f842","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d833f21162c4d536d729628f8cf1ee8d4110f2b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37780","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:41.863","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nisofs: Prevent the use of too small fid\n\nsyzbot reported a slab-out-of-bounds Read in isofs_fh_to_parent. [1]\n\nThe handle_bytes value passed in by the reproducing program is equal to 12.\nIn handle_to_path(), only 12 bytes of memory are allocated for the structure\nfile_handle->f_handle member, which causes an out-of-bounds access when\naccessing the member parent_block of the structure isofs_fid in isofs,\nbecause accessing parent_block requires at least 16 bytes of f_handle.\nHere, fh_len is used to indirectly confirm that the value of handle_bytes\nis greater than 3 before accessing parent_block.\n\n[1]\nBUG: KASAN: slab-out-of-bounds in isofs_fh_to_parent+0x1b8\/0x210 fs\/isofs\/export.c:183\nRead of size 4 at addr ffff0000cc030d94 by task syz-executor215\/6466\nCPU: 1 UID: 0 PID: 6466 Comm: syz-executor215 Not tainted 6.14.0-rc7-syzkaller-ga2392f333575 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 02\/12\/2025\nCall trace:\n show_stack+0x2c\/0x3c arch\/arm64\/kernel\/stacktrace.c:466 (C)\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0xe4\/0x150 lib\/dump_stack.c:120\n print_address_description mm\/kasan\/report.c:408 [inline]\n print_report+0x198\/0x550 mm\/kasan\/report.c:521\n kasan_report+0xd8\/0x138 mm\/kasan\/report.c:634\n __asan_report_load4_noabort+0x20\/0x2c mm\/kasan\/report_generic.c:380\n isofs_fh_to_parent+0x1b8\/0x210 fs\/isofs\/export.c:183\n exportfs_decode_fh_raw+0x2dc\/0x608 fs\/exportfs\/expfs.c:523\n do_handle_to_path+0xa0\/0x198 fs\/fhandle.c:257\n handle_to_path fs\/fhandle.c:385 [inline]\n do_handle_open+0x8cc\/0xb8c fs\/fhandle.c:403\n __do_sys_open_by_handle_at fs\/fhandle.c:443 [inline]\n __se_sys_open_by_handle_at fs\/fhandle.c:434 [inline]\n __arm64_sys_open_by_handle_at+0x80\/0x94 fs\/fhandle.c:434\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\n invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49\n el0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132\n do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151\n el0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:744\n el0t_64_sync_handler+0x84\/0x108 arch\/arm64\/kernel\/entry-common.c:762\n el0t_64_sync+0x198\/0x19c arch\/arm64\/kernel\/entry.S:600\n\nAllocated by task 6466:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x40\/0x78 mm\/kasan\/common.c:68\n kasan_save_alloc_info+0x40\/0x50 mm\/kasan\/generic.c:562\n poison_kmalloc_redzone mm\/kasan\/common.c:377 [inline]\n __kasan_kmalloc+0xac\/0xc4 mm\/kasan\/common.c:394\n kasan_kmalloc include\/linux\/kasan.h:260 [inline]\n __do_kmalloc_node mm\/slub.c:4294 [inline]\n __kmalloc_noprof+0x32c\/0x54c mm\/slub.c:4306\n kmalloc_noprof include\/linux\/slab.h:905 [inline]\n handle_to_path fs\/fhandle.c:357 [inline]\n do_handle_open+0x5a4\/0xb8c fs\/fhandle.c:403\n __do_sys_open_by_handle_at fs\/fhandle.c:443 [inline]\n __se_sys_open_by_handle_at fs\/fhandle.c:434 [inline]\n __arm64_sys_open_by_handle_at+0x80\/0x94 fs\/fhandle.c:434\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\n invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49\n el0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132\n do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151\n el0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:744\n el0t_64_sync_handler+0x84\/0x108 arch\/arm64\/kernel\/entry-common.c:762\n el0t_64_sync+0x198\/0x19c arch\/arm64\/kernel\/entry.S:600"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: isofs: Impedir el uso de fid demasiado pequeño. syzbot informó de una lectura fuera de los límites de slab en isofs_fh_to_parent. [1] El valor de handle_bytes pasado por el programa de reproducción es igual a 12. En handle_to_path(), solo se asignan 12 bytes de memoria para el miembro de la estructura file_handle-&gt;f_handle, lo que provoca un acceso fuera de los límites al acceder al miembro parent_block de la estructura isofs_fid en isofs, ya que acceder a parent_block requiere al menos 16 bytes de f_handle. Aquí, fh_len se utiliza para confirmar indirectamente que el valor de handle_bytes es mayor que 3 antes de acceder a parent_block. [1] ERROR: KASAN: slab fuera de los límites en isofs_fh_to_parent+0x1b8\/0x210 fs\/isofs\/export.c:183 Lectura de tamaño 4 en la dirección ffff0000cc030d94 por la tarea syz-executor215\/6466 CPU: 1 UID: 0 PID: 6466 Comm: syz-executor215 No contaminado 6.14.0-rc7-syzkaller-ga2392f333575 #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 02\/12\/2025 Call trace: show_stack+0x2c\/0x3c arch\/arm64\/kernel\/stacktrace.c:466 (C) __dump_stack lib\/dump_stack.c:94 [inline] dump_stack_lvl+0xe4\/0x150 lib\/dump_stack.c:120 print_address_description mm\/kasan\/report.c:408 [inline] print_report+0x198\/0x550 mm\/kasan\/report.c:521 kasan_report+0xd8\/0x138 mm\/kasan\/report.c:634 __asan_report_load4_noabort+0x20\/0x2c mm\/kasan\/report_generic.c:380 isofs_fh_to_parent+0x1b8\/0x210 fs\/isofs\/export.c:183 exportfs_decode_fh_raw+0x2dc\/0x608 fs\/exportfs\/expfs.c:523 do_handle_to_path+0xa0\/0x198 fs\/fhandle.c:257 handle_to_path fs\/fhandle.c:385 [inline] do_handle_open+0x8cc\/0xb8c fs\/fhandle.c:403 __do_sys_open_by_handle_at fs\/fhandle.c:443 [inline] __se_sys_open_by_handle_at fs\/fhandle.c:434 [inline] __arm64_sys_open_by_handle_at+0x80\/0x94 fs\/fhandle.c:434 __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline] invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49 el0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132 do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151 el0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:744 el0t_64_sync_handler+0x84\/0x108 arch\/arm64\/kernel\/entry-common.c:762 el0t_64_sync+0x198\/0x19c arch\/arm64\/kernel\/entry.S:600 Allocated by task 6466: kasan_save_stack mm\/kasan\/common.c:47 [inline] kasan_save_track+0x40\/0x78 mm\/kasan\/common.c:68 kasan_save_alloc_info+0x40\/0x50 mm\/kasan\/generic.c:562 poison_kmalloc_redzone mm\/kasan\/common.c:377 [inline] __kasan_kmalloc+0xac\/0xc4 mm\/kasan\/common.c:394 kasan_kmalloc include\/linux\/kasan.h:260 [inline] __do_kmalloc_node mm\/slub.c:4294 [inline] __kmalloc_noprof+0x32c\/0x54c mm\/slub.c:4306 kmalloc_noprof include\/linux\/slab.h:905 [inline] handle_to_path fs\/fhandle.c:357 [inline] do_handle_open+0x5a4\/0xb8c fs\/fhandle.c:403 __do_sys_open_by_handle_at fs\/fhandle.c:443 [inline] __se_sys_open_by_handle_at fs\/fhandle.c:434 [inline] __arm64_sys_open_by_handle_at+0x80\/0x94 fs\/fhandle.c:434 __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline] invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49 el0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132 do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151 el0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:744 el0t_64_sync_handler+0x84\/0x108 arch\/arm64\/kernel\/entry-common.c:762 el0t_64_sync+0x198\/0x19c arch\/arm64\/kernel\/entry.S:600 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/007124c896e7d4614ac1f6bd4dedb975c35a2a8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0405d4b63d082861f4eaff9d39c78ee9dc34f845","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fdafdaef796816a9ed0fd7ac812932d569d9beb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56dfffea9fd3be0b3795a9ca6401e133a8427e0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e7de55602c61c8ff28db075cc49c8dd6989d7e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63d5a3e207bf315a32c7d16de6c89753a759f95a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/952e7a7e317f126d0a2b879fc531b716932d5ffa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee01a309ebf598be1ff8174901ed6e91619f1749","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37781","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:42.020","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: cros-ec-tunnel: defer probe if parent EC is not present\n\nWhen i2c-cros-ec-tunnel and the EC driver are built-in, the EC parent\ndevice will not be found, leading to NULL pointer dereference.\n\nThat can also be reproduced by unbinding the controller driver and then\nloading i2c-cros-ec-tunnel module (or binding the device).\n\n[  271.991245] BUG: kernel NULL pointer dereference, address: 0000000000000058\n[  271.998215] #PF: supervisor read access in kernel mode\n[  272.003351] #PF: error_code(0x0000) - not-present page\n[  272.008485] PGD 0 P4D 0\n[  272.011022] Oops: Oops: 0000 [#1] SMP NOPTI\n[  272.015207] CPU: 0 UID: 0 PID: 3859 Comm: insmod Tainted: G S                  6.15.0-rc1-00004-g44722359ed83 #30 PREEMPT(full)  3c7fb39a552e7d949de2ad921a7d6588d3a4fdc5\n[  272.030312] Tainted: [S]=CPU_OUT_OF_SPEC\n[  272.034233] Hardware name: HP Berknip\/Berknip, BIOS Google_Berknip.13434.356.0 05\/17\/2021\n[  272.042400] RIP: 0010:ec_i2c_probe+0x2b\/0x1c0 [i2c_cros_ec_tunnel]\n[  272.048577] Code: 1f 44 00 00 41 57 41 56 41 55 41 54 53 48 83 ec 10 65 48 8b 05 06 a0 6c e7 48 89 44 24 08 4c 8d 7f 10 48 8b 47 50 4c 8b 60 78 <49> 83 7c 24 58 00 0f 84 2f 01 00 00 48 89 fb be 30 06 00 00 4c 9\n[  272.067317] RSP: 0018:ffffa32082a03940 EFLAGS: 00010282\n[  272.072541] RAX: ffff969580b6a810 RBX: ffff969580b68c10 RCX: 0000000000000000\n[  272.079672] RDX: 0000000000000000 RSI: 0000000000000282 RDI: ffff969580b68c00\n[  272.086804] RBP: 00000000fffffdfb R08: 0000000000000000 R09: 0000000000000000\n[  272.093936] R10: 0000000000000000 R11: ffffffffc0600000 R12: 0000000000000000\n[  272.101067] R13: ffffffffa666fbb8 R14: ffffffffc05b5528 R15: ffff969580b68c10\n[  272.108198] FS:  00007b930906fc40(0000) GS:ffff969603149000(0000) knlGS:0000000000000000\n[  272.116282] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  272.122024] CR2: 0000000000000058 CR3: 000000012631c000 CR4: 00000000003506f0\n[  272.129155] Call Trace:\n[  272.131606]  <TASK>\n[  272.133709]  ? acpi_dev_pm_attach+0xdd\/0x110\n[  272.137985]  platform_probe+0x69\/0xa0\n[  272.141652]  really_probe+0x152\/0x310\n[  272.145318]  __driver_probe_device+0x77\/0x110\n[  272.149678]  driver_probe_device+0x1e\/0x190\n[  272.153864]  __driver_attach+0x10b\/0x1e0\n[  272.157790]  ? driver_attach+0x20\/0x20\n[  272.161542]  bus_for_each_dev+0x107\/0x150\n[  272.165553]  bus_add_driver+0x15d\/0x270\n[  272.169392]  driver_register+0x65\/0x110\n[  272.173232]  ? cleanup_module+0xa80\/0xa80 [i2c_cros_ec_tunnel 3a00532f3f4af4a9eade753f86b0f8dd4e4e5698]\n[  272.182617]  do_one_initcall+0x110\/0x350\n[  272.186543]  ? security_kernfs_init_security+0x49\/0xd0\n[  272.191682]  ? __kernfs_new_node+0x1b9\/0x240\n[  272.195954]  ? security_kernfs_init_security+0x49\/0xd0\n[  272.201093]  ? __kernfs_new_node+0x1b9\/0x240\n[  272.205365]  ? kernfs_link_sibling+0x105\/0x130\n[  272.209810]  ? kernfs_next_descendant_post+0x1c\/0xa0\n[  272.214773]  ? kernfs_activate+0x57\/0x70\n[  272.218699]  ? kernfs_add_one+0x118\/0x160\n[  272.222710]  ? __kernfs_create_file+0x71\/0xa0\n[  272.227069]  ? sysfs_add_bin_file_mode_ns+0xd6\/0x110\n[  272.232033]  ? internal_create_group+0x453\/0x4a0\n[  272.236651]  ? __vunmap_range_noflush+0x214\/0x2d0\n[  272.241355]  ? __free_frozen_pages+0x1dc\/0x420\n[  272.245799]  ? free_vmap_area_noflush+0x10a\/0x1c0\n[  272.250505]  ? load_module+0x1509\/0x16f0\n[  272.254431]  do_init_module+0x60\/0x230\n[  272.258181]  __se_sys_finit_module+0x27a\/0x370\n[  272.262627]  do_syscall_64+0x6a\/0xf0\n[  272.266206]  ? do_syscall_64+0x76\/0xf0\n[  272.269956]  ? irqentry_exit_to_user_mode+0x79\/0x90\n[  272.274836]  entry_SYSCALL_64_after_hwframe+0x55\/0x5d\n[  272.279887] RIP: 0033:0x7b9309168d39\n[  272.283466] Code: 5b 41 5c 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d af 40 0c 00 f7 d8 64 89 01 8\n[  272.302210] RSP: 002b:00007fff50f1a288 EFLAGS: 00000246 ORIG_RAX: 000\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: i2c: cros-ec-tunnel: aplazar la sonda si el EC principal no está presente. Cuando i2c-cros-ec-tunnel y el controlador EC están integrados, no se encuentra el dispositivo principal EC, lo que provoca una desreferencia de puntero nulo. Esto también se puede reproducir desvinculando el controlador y cargando el módulo i2c-cros-ec-tunnel (o vinculando el dispositivo). [ 271.991245] ERROR: desreferencia de puntero NULL del núcleo, dirección: 0000000000000058 [ 271.998215] #PF: acceso de lectura del supervisor en modo núcleo [ 272.003351] #PF: error_code(0x0000) - página no presente [ 272.008485] PGD 0 P4D 0 [ 272.011022] Oops: Oops: 0000 [#1] SMP NOPTI [ 272.015207] CPU: 0 UID: 0 PID: 3859 Comm: insmod Tainted: G S 6.15.0-rc1-00004-g44722359ed83 #30 PREEMPT(full) 3c7fb39a552e7d949de2ad921a7d6588d3a4fdc5 [ 272.030312] Tainted: [S]=CPU_OUT_OF_SPEC [ 272.034233] Hardware name: HP Berknip\/Berknip, BIOS Google_Berknip.13434.356.0 05\/17\/2021 [ 272.042400] RIP: 0010:ec_i2c_probe+0x2b\/0x1c0 [i2c_cros_ec_tunnel] [ 272.048577] Code: 1f 44 00 00 41 57 41 56 41 55 41 54 53 48 83 ec 10 65 48 8b 05 06 a0 6c e7 48 89 44 24 08 4c 8d 7f 10 48 8b 47 50 4c 8b 60 78 &lt;49&gt; 83 7c 24 58 00 0f 84 2f 01 00 00 48 89 fb be 30 06 00 00 4c 9 [ 272.067317] RSP: 0018:ffffa32082a03940 EFLAGS: 00010282 [ 272.072541] RAX: ffff969580b6a810 RBX: ffff969580b68c10 RCX: 0000000000000000 [ 272.079672] RDX: 0000000000000000 RSI: 0000000000000282 RDI: ffff969580b68c00 [ 272.086804] RBP: 00000000fffffdfb R08: 0000000000000000 R09: 0000000000000000 [ 272.093936] R10: 0000000000000000 R11: ffffffffc0600000 R12: 0000000000000000 [ 272.101067] R13: ffffffffa666fbb8 R14: ffffffffc05b5528 R15: ffff969580b68c10 [ 272.108198] FS: 00007b930906fc40(0000) GS:ffff969603149000(0000) knlGS:0000000000000000 [ 272.116282] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 272.122024] CR2: 0000000000000058 CR3: 000000012631c000 CR4: 00000000003506f0 [ 272.129155] Call Trace: [ 272.131606]  [ 272.133709] ? acpi_dev_pm_attach+0xdd\/0x110 [ 272.137985] platform_probe+0x69\/0xa0 [ 272.141652] really_probe+0x152\/0x310 [ 272.145318] __driver_probe_device+0x77\/0x110 [ 272.149678] driver_probe_device+0x1e\/0x190 [ 272.153864] __driver_attach+0x10b\/0x1e0 [ 272.157790] ? driver_attach+0x20\/0x20 [ 272.161542] bus_for_each_dev+0x107\/0x150 [ 272.165553] bus_add_driver+0x15d\/0x270 [ 272.169392] driver_register+0x65\/0x110 [ 272.173232] ? cleanup_module+0xa80\/0xa80 [i2c_cros_ec_tunnel 3a00532f3f4af4a9eade753f86b0f8dd4e4e5698] [ 272.182617] do_one_initcall+0x110\/0x350 [ 272.186543] ? security_kernfs_init_security+0x49\/0xd0 [ 272.191682] ? __kernfs_new_node+0x1b9\/0x240 [ 272.195954] ? security_kernfs_init_security+0x49\/0xd0 [ 272.201093] ? __kernfs_new_node+0x1b9\/0x240 [ 272.205365] ? kernfs_link_sibling+0x105\/0x130 [ 272.209810] ? kernfs_next_descendant_post+0x1c\/0xa0 [ 272.214773] ? kernfs_activate+0x57\/0x70 [ 272.218699] ? kernfs_add_one+0x118\/0x160 [ 272.222710] ? __kernfs_create_file+0x71\/0xa0 [ 272.227069] ? sysfs_add_bin_file_mode_ns+0xd6\/0x110 [ 272.232033] ? internal_create_group+0x453\/0x4a0 [ 272.236651] ? __vunmap_range_noflush+0x214\/0x2d0 [ 272.241355] ? __free_frozen_pages+0x1dc\/0x420 [ 272.245799] ? free_vmap_area_noflush+0x10a\/0x1c0 [ 272.250505] ? load_module+0x1509\/0x16f0 [ 272.254431] do_init_module+0x60\/0x230 [ 272.258181] __se_sys_finit_module+0x27a\/0x370 [ 272.262627] do_syscall_64+0x6a\/0xf0 [ 272.266206] ? do_syscall_64+0x76\/0xf0 [ 272.269956] ? irqentry_exit_to_user_mode+0x79\/0x90 [ 272.274836] entry_SYSCALL_64_after_hwframe+0x55\/0x5d [ 272.279887] RIP: 0033:0x7b9309168d39 [ 272.283466] Code: 5b 41 5c 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 8b 0d af 40 0c 00 f7 d8 64 89 01 8 [ 272.302210] RSP: 002b:00007fff50f1a288 EFLAGS: 00000246 ORIG_RAX: 000 ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/092de5ac8cb2eaa9593a765fa92ba39d8173f984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1355b5ca4782be85a2ef7275e4c508f770d0fb27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3090cad5ccff8963b95160f4060068048a1e4c4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/424eafe65647a8d6c690284536e711977153195a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b66d4910a608427367c4e21499e149f085782df7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd83035b6f2a102c2d5acd3bfb2a11ff967aaba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da8edc9eb2516aface7f86be5fa6d09c0d07b9f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e89bf1311d4497c6743f3021e9c481b16c3a41c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37782","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:42.163","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhfs\/hfsplus: fix slab-out-of-bounds in hfs_bnode_read_key\n\nSyzbot reported an issue in hfs subsystem:\n\nBUG: KASAN: slab-out-of-bounds in memcpy_from_page include\/linux\/highmem.h:423 [inline]\nBUG: KASAN: slab-out-of-bounds in hfs_bnode_read fs\/hfs\/bnode.c:35 [inline]\nBUG: KASAN: slab-out-of-bounds in hfs_bnode_read_key+0x314\/0x450 fs\/hfs\/bnode.c:70\nWrite of size 94 at addr ffff8880123cd100 by task syz-executor237\/5102\n\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189\n __asan_memcpy+0x40\/0x70 mm\/kasan\/shadow.c:106\n memcpy_from_page include\/linux\/highmem.h:423 [inline]\n hfs_bnode_read fs\/hfs\/bnode.c:35 [inline]\n hfs_bnode_read_key+0x314\/0x450 fs\/hfs\/bnode.c:70\n hfs_brec_insert+0x7f3\/0xbd0 fs\/hfs\/brec.c:159\n hfs_cat_create+0x41d\/0xa50 fs\/hfs\/catalog.c:118\n hfs_mkdir+0x6c\/0xe0 fs\/hfs\/dir.c:232\n vfs_mkdir+0x2f9\/0x4f0 fs\/namei.c:4257\n do_mkdirat+0x264\/0x3a0 fs\/namei.c:4280\n __do_sys_mkdir fs\/namei.c:4300 [inline]\n __se_sys_mkdir fs\/namei.c:4298 [inline]\n __x64_sys_mkdir+0x6c\/0x80 fs\/namei.c:4298\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7fbdd6057a99\n\nAdd a check for key length in hfs_bnode_read_key to prevent\nout-of-bounds memory access. If the key length is invalid, the\nkey buffer is cleared, improving stability and reliability."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: hfs\/hfsplus: se corrige slab-out-of-bounds en hfs_bnode_read_key Syzbot informó de un problema en el subsistema hfs: ERROR: KASAN: slab-out-of-bounds en memcpy_from_page include\/linux\/highmem.h:423 [en línea] ERROR: KASAN: slab-out-of-bounds en hfs_bnode_read fs\/hfs\/bnode.c:35 [en línea] ERROR: KASAN: slab-out-of-bounds en hfs_bnode_read_key+0x314\/0x450 fs\/hfs\/bnode.c:70 Escritura de tamaño 94 en la dirección ffff8880123cd100 por la tarea syz-executor237\/5102 Rastreo de llamadas:  __dump_stack lib\/dump_stack.c:94 [en línea] dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120 print_address_description mm\/kasan\/report.c:377 [en línea] print_report+0x169\/0x550 mm\/kasan\/report.c:488 kasan_report+0x143\/0x180 mm\/kasan\/report.c:601 kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189 __asan_memcpy+0x40\/0x70 mm\/kasan\/shadow.c:106 memcpy_from_page include\/linux\/highmem.h:423 [en línea] hfs_bnode_read fs\/hfs\/bnode.c:35 [en línea] hfs_bnode_read_key+0x314\/0x450 fs\/hfs\/bnode.c:70 hfs_brec_insert+0x7f3\/0xbd0 fs\/hfs\/brec.c:159 hfs_cat_create+0x41d\/0xa50 fs\/hfs\/catalog.c:118 hfs_mkdir+0x6c\/0xe0 fs\/hfs\/dir.c:232 vfs_mkdir+0x2f9\/0x4f0 fs\/namei.c:4257 do_mkdirat+0x264\/0x3a0 fs\/namei.c:4280 __do_sys_mkdir fs\/namei.c:4300 [en línea] __se_sys_mkdir fs\/namei.c:4298 [en línea] __x64_sys_mkdir+0x6c\/0x80 fs\/namei.c:4298 do_syscall_x64 arch\/x86\/entry\/common.c:52 [en línea] do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83 entry_SYSCALL_64_after_hwframe+0x77\/0x7f RIP: 0033:0x7fbdd6057a99 Se ha añadido una comprobación de la longitud de la clave en hfs_bnode_read_key para evitar el acceso a memoria fuera de los límites. Si la longitud de la clave no es válida, se borra el búfer de claves, lo que mejora la estabilidad y la fiabilidad."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0296f9733543c7c8e666e69da743cfffd32dd805","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8060afd77761eac2048db12fb0510d76ce0cf1f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84e8719c087e68c967975b78e67be54f697c957f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c93fb4ad8d3b730afe1a09949ebbea64d4f60eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f77aa584a659b21211a794e53522e6fb16d4a16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a33c035df01d1e008874607da74bf7cf45152f47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb5e07cb927724e0b47be371fa081141cfb14414","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6651c04191d49907d40f0891bbe51ef9703c792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37783","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:42.593","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/dpu: Fix error pointers in dpu_plane_virtual_atomic_check\n\nThe function dpu_plane_virtual_atomic_check was dereferencing pointers\nreturned by drm_atomic_get_plane_state without checking for errors. This\ncould lead to undefined behavior if the function returns an error pointer.\n\nThis commit adds checks using IS_ERR to ensure that plane_state is\nvalid before dereferencing them.\n\nSimilar to commit da29abe71e16\n(\"drm\/amd\/display: Fix error pointers in amdgpu_dm_crtc_mem_type_changed\").\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/643132\/"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/msm\/dpu: Corrección de punteros de error en dpu_plane_virtual_atomic_check. La función dpu_plane_virtual_atomic_check desreferenciaba los punteros devueltos por drm_atomic_get_plane_state sin comprobar si había errores. Esto podría provocar un comportamiento indefinido si la función devuelve un puntero de error. Esta confirmación añade comprobaciones mediante IS_ERR para garantizar que plane_state sea válido antes de desreferenciarlo. Similar al commit da29abe71e16 (\"drm\/amd\/display: Corrección de punteros de error en amdgpu_dm_crtc_mem_type_changed\"). Patchwork: https:\/\/patchwork.freedesktop.org\/patch\/643132\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5cb1b130e1cd04239cc9c26a98279f4660dce583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9670ed1cce3216778c89936d3ae91cf0d436035","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37784","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:42.770","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ti: icss-iep: Fix possible NULL pointer dereference for perout request\n\nThe ICSS IEP driver tracks perout and pps enable state with flags.\nCurrently when disabling pps and perout signals during icss_iep_exit(),\nresults in NULL pointer dereference for perout.\n\nTo fix the null pointer dereference issue, the icss_iep_perout_enable_hw\nfunction can be modified to directly clear the IEP CMP registers when\ndisabling PPS or PEROUT, without referencing the ptp_perout_request\nstructure, as its contents are irrelevant in this case."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ti: icss-iep: Se corrige una posible desreferencia de puntero nulo para la solicitud perout. El controlador IEP de ICSS rastrea el estado de habilitación de perout y pps mediante indicadores. Actualmente, al deshabilitar las señales pps y perout durante icss_iep_exit(), se produce una desreferencia de puntero nulo para perout. Para solucionar el problema de desreferencia de puntero nulo, se puede modificar la función icss_iep_perout_enable_hw para borrar directamente los registros CMP de IEP al deshabilitar PPS o PEROUT, sin referenciar la estructura ptp_perout_request, ya que su contenido es irrelevante en este caso."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7349c9e9979333abfce42da5f9025598083b59c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7891619d21f07a88e0275d6d43db74035aa74f69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da5035d7aeadcfa44096dd34689bfed6c657f559","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeec66327001421531b3fb1a2ac32efc8a2493b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37786","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:42.890","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: free routing table on probe failure\n\nIf complete = true in dsa_tree_setup(), it means that we are the last\nswitch of the tree which is successfully probing, and we should be\nsetting up all switches from our probe path.\n\nAfter \"complete\" becomes true, dsa_tree_setup_cpu_ports() or any\nsubsequent function may fail. If that happens, the entire tree setup is\nin limbo: the first N-1 switches have successfully finished probing\n(doing nothing but having allocated persistent memory in the tree's\ndst->ports, and maybe dst->rtable), and switch N failed to probe, ending\nthe tree setup process before anything is tangible from the user's PoV.\n\nIf switch N fails to probe, its memory (ports) will be freed and removed\nfrom dst->ports. However, the dst->rtable elements pointing to its ports,\nas created by dsa_link_touch(), will remain there, and will lead to\nuse-after-free if dereferenced.\n\nIf dsa_tree_setup_switches() returns -EPROBE_DEFER, which is entirely\npossible because that is where ds->ops->setup() is, we get a kasan\nreport like this:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in mv88e6xxx_setup_upstream_port+0x240\/0x568\nRead of size 8 at addr ffff000004f56020 by task kworker\/u8:3\/42\n\nCall trace:\n __asan_report_load8_noabort+0x20\/0x30\n mv88e6xxx_setup_upstream_port+0x240\/0x568\n mv88e6xxx_setup+0xebc\/0x1eb0\n dsa_register_switch+0x1af4\/0x2ae0\n mv88e6xxx_register_switch+0x1b8\/0x2a8\n mv88e6xxx_probe+0xc4c\/0xf60\n mdio_probe+0x78\/0xb8\n really_probe+0x2b8\/0x5a8\n __driver_probe_device+0x164\/0x298\n driver_probe_device+0x78\/0x258\n __device_attach_driver+0x274\/0x350\n\nAllocated by task 42:\n __kasan_kmalloc+0x84\/0xa0\n __kmalloc_cache_noprof+0x298\/0x490\n dsa_switch_touch_ports+0x174\/0x3d8\n dsa_register_switch+0x800\/0x2ae0\n mv88e6xxx_register_switch+0x1b8\/0x2a8\n mv88e6xxx_probe+0xc4c\/0xf60\n mdio_probe+0x78\/0xb8\n really_probe+0x2b8\/0x5a8\n __driver_probe_device+0x164\/0x298\n driver_probe_device+0x78\/0x258\n __device_attach_driver+0x274\/0x350\n\nFreed by task 42:\n __kasan_slab_free+0x48\/0x68\n kfree+0x138\/0x418\n dsa_register_switch+0x2694\/0x2ae0\n mv88e6xxx_register_switch+0x1b8\/0x2a8\n mv88e6xxx_probe+0xc4c\/0xf60\n mdio_probe+0x78\/0xb8\n really_probe+0x2b8\/0x5a8\n __driver_probe_device+0x164\/0x298\n driver_probe_device+0x78\/0x258\n __device_attach_driver+0x274\/0x350\n\nThe simplest way to fix the bug is to delete the routing table in its\nentirety. dsa_tree_setup_routing_table() has no problem in regenerating\nit even if we deleted links between ports other than those of switch N,\nbecause dsa_link_touch() first checks whether the port pair already\nexists in dst->rtable, allocating if not.\n\nThe deletion of the routing table in its entirety already exists in\ndsa_tree_teardown(), so refactor that into a function that can also be\ncalled from the tree setup error path.\n\nIn my analysis of the commit to blame, it is the one which added\ndsa_link elements to dst->rtable. Prior to that, each switch had its own\nds->rtable which is freed when the switch fails to probe. But the tree\nis potentially persistent memory."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: dsa: tabla de enrutamiento libre en caso de fallo de sondeo. Si \"complete\" es verdadero en dsa_tree_setup(), significa que somos el último conmutador del árbol que está sondeando correctamente, y deberíamos estar configurando todos los conmutadores desde nuestra ruta de sondeo. Una vez que \"complete\" es verdadero, dsa_tree_setup_cpu_ports() o cualquier función posterior puede fallar. Si esto ocurre, toda la configuración del árbol queda en el limbo: los primeros N-1 conmutadores han finalizado el sondeo correctamente (sin hacer nada más que asignar memoria persistente en dst-&gt;ports del árbol, y quizás en dst-&gt;rtable), y el conmutador N no ha podido sondear, finalizando el proceso de configuración del árbol antes de que el usuario pueda ver nada tangible. Si el conmutador N no puede sondear, su memoria (puertos) se liberará y se eliminará de dst-&gt;ports. Sin embargo, los elementos dst-&gt;rtable que apuntan a sus puertos, tal como los creó dsa_link_touch(), permanecerán allí y darán lugar a un use-after-free si se desreferencian. Si dsa_tree_setup_switches() devuelve -EPROBE_DEFER, lo cual es completamente posible porque es donde está ds-&gt;ops-&gt;setup(), obtenemos un informe de kasan como este: ===================================================================== ERROR: KASAN: slab-use-after-free en mv88e6xxx_setup_upstream_port+0x240\/0x568 Lectura de tamaño 8 en la dirección ffff000004f56020 por la tarea kworker\/u8:3\/42 Rastreo de llamadas: __asan_report_load8_noabort+0x20\/0x30 mv88e6xxx_setup_upstream_port+0x240\/0x568 mv88e6xxx_setup+0xebc\/0x1eb0 dsa_register_switch+0x1af4\/0x2ae0 mv88e6xxx_register_switch+0x1b8\/0x2a8 mv88e6xxx_probe+0xc4c\/0xf60 mdio_probe+0x78\/0xb8 really_probe+0x2b8\/0x5a8 __driver_probe_device+0x164\/0x298 driver_probe_device+0x78\/0x258 __device_attach_driver+0x274\/0x350 Allocated by task 42: __kasan_kmalloc+0x84\/0xa0 __kmalloc_cache_noprof+0x298\/0x490 dsa_switch_touch_ports+0x174\/0x3d8 dsa_register_switch+0x800\/0x2ae0 mv88e6xxx_register_switch+0x1b8\/0x2a8 mv88e6xxx_probe+0xc4c\/0xf60 mdio_probe+0x78\/0xb8 really_probe+0x2b8\/0x5a8 __driver_probe_device+0x164\/0x298 driver_probe_device+0x78\/0x258 __device_attach_driver+0x274\/0x350 Freed by task 42: __kasan_slab_free+0x48\/0x68 kfree+0x138\/0x418 dsa_register_switch+0x2694\/0x2ae0 mv88e6xxx_register_switch+0x1b8\/0x2a8 mv88e6xxx_probe+0xc4c\/0xf60 mdio_probe+0x78\/0xb8 really_probe+0x2b8\/0x5a8 __driver_probe_device+0x164\/0x298 driver_probe_device+0x78\/0x258 __device_attach_driver+0x274\/0x350 La forma más sencilla de corregir el error es eliminar la tabla de enrutamiento en su totalidad. dsa_tree_setup_routing_table() no tiene problemas para regenerarla incluso si eliminamos enlaces entre puertos distintos a los del switch N, ya que dsa_link_touch() primero comprueba si el par de puertos ya existe en dst-&gt;rtable, y la asigna en caso contrario. La eliminación completa de la tabla de enrutamiento ya existe en dsa_tree_teardown(), por lo que se debe refactorizar en una función que también pueda llamarse desde la ruta de error de configuración del árbol. En mi análisis de la confirmación responsable, es la que añadió elementos dsa_link a dst-&gt;rtable. Antes de eso, cada switch tenía su propia ds-&gt;rtable, que se libera cuando el switch falla al sondear. Sin embargo, el árbol es potencialmente memoria persistente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c8066fbdb9653c6e9a224bdcd8f9c91a484f0de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bf108d7161ffc6880ad13a0cc109de3cf631727","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a038f5f15af455dfe35bc68549e02b950978700a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb12b460ec46c9efad98de6d9ba349691db51dc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37787","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.040","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: avoid unregistering devlink regions which were never registered\n\nRussell King reports that a system with mv88e6xxx dereferences a NULL\npointer when unbinding this driver:\nhttps:\/\/lore.kernel.org\/netdev\/Z_lRkMlTJ1KQ0kVX@shell.armlinux.org.uk\/\n\nThe crash seems to be in devlink_region_destroy(), which is not NULL\ntolerant but is given a NULL devlink global region pointer.\n\nAt least on some chips, some devlink regions are conditionally registered\nsince the blamed commit, see mv88e6xxx_setup_devlink_regions_global():\n\n\t\tif (cond && !cond(chip))\n\t\t\tcontinue;\n\nThese are MV88E6XXX_REGION_STU and MV88E6XXX_REGION_PVT. If the chip\ndoes not have an STU or PVT, it should crash like this.\n\nTo fix the issue, avoid unregistering those regions which are NULL, i.e.\nwere skipped at mv88e6xxx_setup_devlink_regions_global() time."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: dsa: mv88e6xxx: evitar anular el registro de regiones devlink que nunca se registraron Russell King informa que un sistema con mv88e6xxx desreferencia un puntero NULL al desvincular este controlador: https:\/\/lore.kernel.org\/netdev\/Z_lRkMlTJ1KQ0kVX@shell.armlinux.org.uk\/ El fallo parece estar en devlink_region_destroy(), que no tolera NULL pero se le asigna un puntero de región global devlink NULL. Al menos en algunos chips, algunas regiones devlink se registran condicionalmente desde la confirmación culpable, consulte mv88e6xxx_setup_devlink_regions_global(): if (cond &amp;&amp; !cond(chip)) continue; Estos son MV88E6XXX_REGION_STU y MV88E6XXX_REGION_PVT. Si el chip no tiene una STU o PVT, debería fallar de esta manera. Para solucionar el problema, evite anular el registro de las regiones nulas, es decir, las que se omitieron al ejecutar mv88e6xxx_setup_devlink_regions_global()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3665695e3572239dc233216f06b41f40cc771889","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f5e95945bb1e08be7655da6acba648274db457d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ccdf5e24b276848eefb2755e05ff0f005a0c4a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c70dfe51f10df60db2646c08cebd24bcdc5247","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbb80f004f7a90c3dcaacc982c59967457254a05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c84f6ce918a9e6f4996597cbc62536bbf2247c96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.163","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxgb4: fix memory leak in cxgb4_init_ethtool_filters() error path\n\nIn the for loop used to allocate the loc_array and bmap for each port, a\nmemory leak is possible when the allocation for loc_array succeeds,\nbut the allocation for bmap fails. This is because when the control flow\ngoes to the label free_eth_finfo, only the allocations starting from\n(i-1)th iteration are freed.\n\nFix that by freeing the loc_array in the bmap allocation error path."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cxgb4: Se corrige la fuga de memoria en la ruta de error de cxgb4_init_ethtool_filters(). En el bucle for utilizado para asignar loc_array y bmap para cada puerto, es posible que se produzca una fuga de memoria cuando la asignación de loc_array se realiza correctamente, pero la de bmap falla. Esto se debe a que, cuando el flujo de control accede a la etiqueta free_eth_finfo, solo se liberan las asignaciones a partir de la iteración (i-1). Para solucionar esto, libere loc_array en la ruta de error de asignación de bmap."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00ffb3724ce743578163f5ade2884374554ca021","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/08aa59c0be768596467552c129e9f82166779a67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/118d05b530343cd9322607b9719405ba254a4183","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76deedea08899885f076aba0bb80bd1276446822","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dafb6e433ab2333b67be05433dc9c6ccbc7b1284","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9de08e15aee35b96064960f95997bb6c1209c4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa2d7708955e4f8212fd69bab1da604e60cb0b15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37789","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.290","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix nested key length validation in the set() action\n\nIt's not safe to access nla_len(ovs_key) if the data is smaller than\nthe netlink header.  Check that the attribute is OK first."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: openvswitch: corrección de la validación de la longitud de la clave anidada en la acción set(). No es seguro acceder a nla_len(ovs_key) si los datos son menores que el encabezado netlink. Compruebe primero que el atributo esté correcto."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03d7262dd53e8c404da35cc81aaa887fd901f76b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1489c195c8eecd262aa6712761ba5288203e28ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54c6957d1123a2032099b9eab51c314800f677ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65d91192aa66f05710cfddf6a14b5a25ee554dba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fcaec0b2ab8fa5fbf0b45e5512364a168f445bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/824a7c2df5127b2402b68a21a265d413e78dcad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a27526e6b48eee9e2d82efff502c4f272f1a91d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be80768d4f3b6fd13f421451cc3fee8778aba8bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37790","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.407","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mctp: Set SOCK_RCU_FREE\n\nBind lookup runs under RCU, so ensure that a socket doesn't go away in\nthe middle of a lookup."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: mctp: La búsqueda de enlace Set SOCK_RCU_FREE se ejecuta bajo RCU, por lo que debe asegurarse de que un socket no desaparezca en medio de una búsqueda."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f899bd6dd56ddc46509b526e23a8f0a97712a6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52024cd6ec71a6ca934d0cc12452bd8d49850679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c1313b93c8c2e3904a48aa88e2fa1db28c607ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8a3b61ce140e2b0a72a779e8d70f60c0cf1e47a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9764ebebb007249fb733a131b6110ff333b6616","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3b5edbdb45924a7d4206d13868a2aac71f1e53d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37791","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.540","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: cmis_cdb: use correct rpl size in ethtool_cmis_module_poll()\n\nrpl is passed as a pointer to ethtool_cmis_module_poll(), so the correct\nsize of rpl is sizeof(*rpl) which should be just 1 byte.  Using the\npointer size instead can cause stack corruption:\n\nKernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ethtool_cmis_wait_for_cond+0xf4\/0x100\nCPU: 72 UID: 0 PID: 4440 Comm: kworker\/72:2 Kdump: loaded Tainted: G           OE      6.11.0 #24\nTainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\nHardware name: Dell Inc. PowerEdge R760\/04GWWM, BIOS 1.6.6 09\/20\/2023\nWorkqueue: events module_flash_fw_work\nCall Trace:\n <TASK>\n panic+0x339\/0x360\n ? ethtool_cmis_wait_for_cond+0xf4\/0x100\n ? __pfx_status_success+0x10\/0x10\n ? __pfx_status_fail+0x10\/0x10\n __stack_chk_fail+0x10\/0x10\n ethtool_cmis_wait_for_cond+0xf4\/0x100\n ethtool_cmis_cdb_execute_cmd+0x1fc\/0x330\n ? __pfx_status_fail+0x10\/0x10\n cmis_cdb_module_features_get+0x6d\/0xd0\n ethtool_cmis_cdb_init+0x8a\/0xd0\n ethtool_cmis_fw_update+0x46\/0x1d0\n module_flash_fw_work+0x17\/0xa0\n process_one_work+0x179\/0x390\n worker_thread+0x239\/0x340\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0xcc\/0x100\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x2d\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ethtool: cmis_cdb: use el tamaño rpl correcto en ethtool_cmis_module_poll() rpl se pasa como un puntero a ethtool_cmis_module_poll(), por lo que el tamaño correcto de rpl es sizeof(*rpl), que debería ser solo 1 byte. El uso del tamaño del puntero en su lugar puede causar corrupción en la pila: Pánico del kernel - no sincroniza: protector de pila: La pila del kernel está dañada en: ethtool_cmis_wait_for_cond+0xf4\/0x100 CPU: 72 UID: 0 PID: 4440 Comm: kworker\/72:2 Kdump: cargado Contaminado: G OE 6.11.0 #24 Contaminado: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE Nombre del hardware: Dell Inc. PowerEdge R760\/04GWWM, BIOS 1.6.6 20\/09\/2023 Cola de trabajo: eventos module_flash_fw_work Rastreo de llamadas:  panic+0x339\/0x360 ? ethtool_cmis_wait_for_cond+0xf4\/0x100 ? __pfx_status_success+0x10\/0x10 ? __pfx_status_fail+0x10\/0x10 __stack_chk_fail+0x10\/0x10 ethtool_cmis_wait_for_cond+0xf4\/0x100 ethtool_cmis_cdb_execute_cmd+0x1fc\/0x330 ? __pfx_status_fail+0x10\/0x10 cmis_cdb_module_features_get+0x6d\/0xd0 ethtool_cmis_cdb_init+0x8a\/0xd0 ethtool_cmis_fw_update+0x46\/0x1d0 module_flash_fw_work+0x17\/0xa0 process_one_work+0x179\/0x390 worker_thread+0x239\/0x340 ? __pfx_worker_thread+0x10\/0x10 kthread+0xcc\/0x100 ? __pfx_kthread+0x10\/0x10 ret_from_fork+0x2d\/0x50 ? __pfx_kthread+0x10\/0x10 ret_from_fork_asm+0x1a\/0x30 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61765e1b417a23371c3735e3cddf4ad9354ed2e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7eb0a0072f966bb0b01d8b7d529d9743a7187bd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3fdd4fba16c74697d8bc730b82fb7c1eff7fab3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37792","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.660","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btrtl: Prevent potential NULL dereference\n\nThe btrtl_initialize() function checks that rtl_load_file() either\nhad an error or it loaded a zero length file.  However, if it loaded\na zero length file then the error code is not set correctly.  It\nresults in an error pointer vs NULL bug, followed by a NULL pointer\ndereference.  This was detected by Smatch:\n\ndrivers\/bluetooth\/btrtl.c:592 btrtl_initialize() warn: passing zero to 'ERR_PTR'"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: btrtl: Prevenir posible desreferencia de NULL. La función btrtl_initialize() comprueba si rtl_load_file() tuvo un error o cargó un archivo de longitud cero. Sin embargo, si cargó un archivo de longitud cero, el código de error no se configura correctamente. Esto genera un error de puntero de error vs. NULL, seguido de una desreferencia de puntero NULL. Esto fue detectado por Smatch: drivers\/bluetooth\/btrtl.c:592 btrtl_initialize() warn: passing zero to 'ERR_PTR'"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d7c60c2a38b4b461fa960ad0995136a6bfe0756","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/324dddea321078a6eeb535c2bff5257be74c9799","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3db6605043b50c8bb768547b23e0222f67ceef3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53ceef799dcfc22c734d600811bfc9dd32eaea0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73dc99c0ea94abd22379b2d82cacbc73f3e18ec1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaf356f872a60db1e96fb762a62c4607fd22741f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3e9717276affe59fd8213706db021b493e81e34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8441818690d795232331bd8358545c5c95b6b72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37793","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.787","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: avs: Fix null-ptr-deref in avs_component_probe()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\navs_component_probe() does not check for this case, which results in a\nNULL pointer dereference."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ASoC: Intel: avs: Se corrige la desreferencia de puntero null en avs_component_probe(). Devm_kasprintf() devuelve NULL cuando falla la asignación de memoria. Actualmente, avs_component_probe() no verifica este caso, lo que resulta en una desreferencia de puntero NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23fde311ea1d0a6c36bf92ce48b90b77d0ece1a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f723cf141b95e3b3a5b92cf2ea98a863fe7275","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaa93b8846101461de815759d39979661b82d5a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2825073271b6f15e669a424b363612082494863","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37794","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:43.913","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Purge vif txq in ieee80211_do_stop()\n\nAfter ieee80211_do_stop() SKB from vif's txq could still be processed.\nIndeed another concurrent vif schedule_and_wake_txq call could cause\nthose packets to be dequeued (see ieee80211_handle_wake_tx_queue())\nwithout checking the sdata current state.\n\nBecause vif.drv_priv is now cleared in this function, this could lead to\ndriver crash.\n\nFor example in ath12k, ahvif is store in vif.drv_priv. Thus if\nath12k_mac_op_tx() is called after ieee80211_do_stop(), ahvif->ah can be\nNULL, leading the ath12k_warn(ahvif->ah,...) call in this function to\ntrigger the NULL deref below.\n\n  Unable to handle kernel paging request at virtual address dfffffc000000001\n  KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n  batman_adv: bat0: Interface deactivated: brbh1337\n  Mem abort info:\n    ESR = 0x0000000096000004\n    EC = 0x25: DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x04: level 0 translation fault\n  Data abort info:\n    ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n    CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n    GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n  [dfffffc000000001] address between user and kernel address ranges\n  Internal error: Oops: 0000000096000004 [#1] SMP\n  CPU: 1 UID: 0 PID: 978 Comm: lbd Not tainted 6.13.0-g633f875b8f1e #114\n  Hardware name: HW (DT)\n  pstate: 10000005 (nzcV daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : ath12k_mac_op_tx+0x6cc\/0x29b8 [ath12k]\n  lr : ath12k_mac_op_tx+0x174\/0x29b8 [ath12k]\n  sp : ffffffc086ace450\n  x29: ffffffc086ace450 x28: 0000000000000000 x27: 1ffffff810d59ca4\n  x26: ffffff801d05f7c0 x25: 0000000000000000 x24: 000000004000001e\n  x23: ffffff8009ce4926 x22: ffffff801f9c0800 x21: ffffff801d05f7f0\n  x20: ffffff8034a19f40 x19: 0000000000000000 x18: ffffff801f9c0958\n  x17: ffffff800bc0a504 x16: dfffffc000000000 x15: ffffffc086ace4f8\n  x14: ffffff801d05f83c x13: 0000000000000000 x12: ffffffb003a0bf03\n  x11: 0000000000000000 x10: ffffffb003a0bf02 x9 : ffffff8034a19f40\n  x8 : ffffff801d05f818 x7 : 1ffffff0069433dc x6 : ffffff8034a19ee0\n  x5 : ffffff801d05f7f0 x4 : 0000000000000000 x3 : 0000000000000001\n  x2 : 0000000000000000 x1 : dfffffc000000000 x0 : 0000000000000008\n  Call trace:\n   ath12k_mac_op_tx+0x6cc\/0x29b8 [ath12k] (P)\n   ieee80211_handle_wake_tx_queue+0x16c\/0x260\n   ieee80211_queue_skb+0xeec\/0x1d20\n   ieee80211_tx+0x200\/0x2c8\n   ieee80211_xmit+0x22c\/0x338\n   __ieee80211_subif_start_xmit+0x7e8\/0xc60\n   ieee80211_subif_start_xmit+0xc4\/0xee0\n   __ieee80211_subif_start_xmit_8023.isra.0+0x854\/0x17a0\n   ieee80211_subif_start_xmit_8023+0x124\/0x488\n   dev_hard_start_xmit+0x160\/0x5a8\n   __dev_queue_xmit+0x6f8\/0x3120\n   br_dev_queue_push_xmit+0x120\/0x4a8\n   __br_forward+0xe4\/0x2b0\n   deliver_clone+0x5c\/0xd0\n   br_flood+0x398\/0x580\n   br_dev_xmit+0x454\/0x9f8\n   dev_hard_start_xmit+0x160\/0x5a8\n   __dev_queue_xmit+0x6f8\/0x3120\n   ip6_finish_output2+0xc28\/0x1b60\n   __ip6_finish_output+0x38c\/0x638\n   ip6_output+0x1b4\/0x338\n   ip6_local_out+0x7c\/0xa8\n   ip6_send_skb+0x7c\/0x1b0\n   ip6_push_pending_frames+0x94\/0xd0\n   rawv6_sendmsg+0x1a98\/0x2898\n   inet_sendmsg+0x94\/0xe0\n   __sys_sendto+0x1e4\/0x308\n   __arm64_sys_sendto+0xc4\/0x140\n   do_el0_svc+0x110\/0x280\n   el0_svc+0x20\/0x60\n   el0t_64_sync_handler+0x104\/0x138\n   el0t_64_sync+0x154\/0x158\n\nTo avoid that, empty vif's txq at ieee80211_do_stop() so no packet could\nbe dequeued after ieee80211_do_stop() (new packets cannot be queued\nbecause SDATA_STATE_RUNNING is cleared at this point)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: mac80211: Purgar la txq de vif en ieee80211_do_stop(). Después de ieee80211_do_stop(), el SKB de la txq de vif aún podía procesarse. De hecho, otra llamada simultánea a vif schedule_and_wake_txq podría provocar que esos paquetes se descolgaran (véase ieee80211_handle_wake_tx_queue()) sin comprobar el estado actual de sdata. Dado que vif.drv_priv se borra en esta función, esto podría provocar un fallo del controlador. Por ejemplo, en ath12k, ahvif se almacena en vif.drv_priv. Por lo tanto, si se llama ath12k_mac_op_tx() después de ieee80211_do_stop(), ahvif-&gt;ah puede ser NULL, lo que lleva a la llamada ath12k_warn(ahvif-&gt;ah,...) en esta función a activar la deref NULL a continuación. No se puede gestionar la solicitud de paginación del núcleo en la dirección virtual dfffffc000000001 KASAN: null-ptr-deref en el rango [0x000000000000008-0x000000000000000f] batman_adv: bat0: Interfaz desactivada: brbh1337 Información de aborto de memoria: ESR = 0x0000000096000004 EC = 0x25: DABT (EL actual), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 FSC = 0x04: fallo de traducción de nivel 0 Información de aborto de datos: ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000 CM = 0, WnR = 0, TnD = 0, TagAccess = 0 GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0 [dfffffc000000001] dirección entre rangos de direcciones de usuario y kernel Error interno: Oops: 0000000096000004 [#1] SMP CPU: 1 UID: 0 PID: 978 Comm: lbd No contaminado 6.13.0-g633f875b8f1e #114 Nombre del hardware: HW (DT) pstate: 10000005 (nzcV daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : ath12k_mac_op_tx+0x6cc\/0x29b8 [ath12k] lr : ath12k_mac_op_tx+0x174\/0x29b8 [ath12k] sp : ffffffc086ace450 x29: ffffffc086ace450 x28: 0000000000000000 x27: 1ffffff810d59ca4 x26: ffffff801d05f7c0 x25: 000000000000000 x24: 000000004000001e x23: ffffff8009ce4926 x22: ffffff801f9c0800 x21: ffffff801d05f7f0 x20: ffffff8034a19f40 x19: 0000000000000000 x18: ffffff801f9c0958 x17: ffffff800bc0a504 x16: dfffffc000000000 x15: ffffffc086ace4f8 x14: ffffff801d05f83c x13: 000000000000000 x12: ffffffb003a0bf03 x11: 000000000000000 x10: ffffffb003a0bf02 x9: ffffff8034a19f40 x8: ffffff801d05f818 x7: 1ffffff0069433dc x6: ffffff8034a19ee0 x5: ffffff801d05f7f0 x4: 0000000000000000 x3: 0000000000000001 x2: 0000000000000000 x1: dfffffc000000000 x0: 0000000000000008 Rastreo de llamadas: ath12k_mac_op_tx+0x6cc\/0x29b8 [ath12k] (P) ieee80211_handle_wake_tx_queue+0x16c\/0x260 ieee80211_queue_skb+0xeec\/0x1d20 ieee80211_tx+0x200\/0x2c8 ieee80211_xmit+0x22c\/0x338 __ieee80211_subif_start_xmit+0x7e8\/0xc60 ieee80211_subif_start_xmit+0xc4\/0xee0 __ieee80211_subif_start_xmit_8023.isra.0+0x854\/0x17a0 ieee80211_subif_start_xmit_8023+0x124\/0x488 dev_hard_start_xmit+0x160\/0x5a8 __dev_queue_xmit+0x6f8\/0x3120 br_dev_queue_push_xmit+0x120\/0x4a8 __br_forward+0xe4\/0x2b0 deliver_clone+0x5c\/0xd0 br_flood+0x398\/0x580 br_dev_xmit+0x454\/0x9f8 dev_hard_start_xmit+0x160\/0x5a8 __dev_queue_xmit+0x6f8\/0x3120 ip6_finish_output2+0xc28\/0x1b60 __ip6_finish_output+0x38c\/0x638 ip6_output+0x1b4\/0x338 ip6_local_out+0x7c\/0xa8 ip6_send_skb+0x7c\/0x1b0 ip6_push_pending_frames+0x94\/0xd0 rawv6_sendmsg+0x1a98\/0x2898 inet_sendmsg+0x94\/0xe0 __sys_sendto+0x1e4\/0x308 __arm64_sys_sendto+0xc4\/0x140 do_el0_svc+0x110\/0x280 el0_svc+0x20\/0x60 el0t_64_sync_handler+0x104\/0x138 el0t_64_sync+0x154\/0x158 Para evitar eso, vacíe el txq de vif en ieee80211_do_stop() para que ningún paquete pueda sacarse de la cola después de ieee80211_do_stop() (los paquetes nuevos no pueden ponerse en cola porque SDATA_STATE_RUNNING se borra en este punto)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/305741e7e63234cbcf9b5c4e6aeca25ba0834be8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/378677eb8f44621ecc9ce659f7af61e5baa94d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f6863dc407f25fcf23fc857f9ac51756a09ea2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bc34db7f771a464ff8f686b6f8d4e04963fec27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/929ec2c9ad34248ef625e137b6118b6e965797d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8df245b5b29f6de98d016dc18e2bb35ec70b0cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a932a5ce4eee0cbad20220f950fe7bd3534bcbc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c74b84544dee27298a71715b3ce2c40d372b5a23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37795","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:44.043","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Update skb's control block key in ieee80211_tx_dequeue()\n\nThe ieee80211 skb control block key (set when skb was queued) could have\nbeen removed before ieee80211_tx_dequeue() call. ieee80211_tx_dequeue()\nalready called ieee80211_tx_h_select_key() to get the current key, but\nthe latter do not update the key in skb control block in case it is\nNULL. Because some drivers actually use this key in their TX callbacks\n(e.g. ath1{1,2}k_mac_op_tx()) this could lead to the use after free\nbelow:\n\n  BUG: KASAN: slab-use-after-free in ath11k_mac_op_tx+0x590\/0x61c\n  Read of size 4 at addr ffffff803083c248 by task kworker\/u16:4\/1440\n\n  CPU: 3 UID: 0 PID: 1440 Comm: kworker\/u16:4 Not tainted 6.13.0-ge128f627f404 #2\n  Hardware name: HW (DT)\n  Workqueue: bat_events batadv_send_outstanding_bcast_packet\n  Call trace:\n   show_stack+0x14\/0x1c (C)\n   dump_stack_lvl+0x58\/0x74\n   print_report+0x164\/0x4c0\n   kasan_report+0xac\/0xe8\n   __asan_report_load4_noabort+0x1c\/0x24\n   ath11k_mac_op_tx+0x590\/0x61c\n   ieee80211_handle_wake_tx_queue+0x12c\/0x1c8\n   ieee80211_queue_skb+0xdcc\/0x1b4c\n   ieee80211_tx+0x1ec\/0x2bc\n   ieee80211_xmit+0x224\/0x324\n   __ieee80211_subif_start_xmit+0x85c\/0xcf8\n   ieee80211_subif_start_xmit+0xc0\/0xec4\n   dev_hard_start_xmit+0xf4\/0x28c\n   __dev_queue_xmit+0x6ac\/0x318c\n   batadv_send_skb_packet+0x38c\/0x4b0\n   batadv_send_outstanding_bcast_packet+0x110\/0x328\n   process_one_work+0x578\/0xc10\n   worker_thread+0x4bc\/0xc7c\n   kthread+0x2f8\/0x380\n   ret_from_fork+0x10\/0x20\n\n  Allocated by task 1906:\n   kasan_save_stack+0x28\/0x4c\n   kasan_save_track+0x1c\/0x40\n   kasan_save_alloc_info+0x3c\/0x4c\n   __kasan_kmalloc+0xac\/0xb0\n   __kmalloc_noprof+0x1b4\/0x380\n   ieee80211_key_alloc+0x3c\/0xb64\n   ieee80211_add_key+0x1b4\/0x71c\n   nl80211_new_key+0x2b4\/0x5d8\n   genl_family_rcv_msg_doit+0x198\/0x240\n  <...>\n\n  Freed by task 1494:\n   kasan_save_stack+0x28\/0x4c\n   kasan_save_track+0x1c\/0x40\n   kasan_save_free_info+0x48\/0x94\n   __kasan_slab_free+0x48\/0x60\n   kfree+0xc8\/0x31c\n   kfree_sensitive+0x70\/0x80\n   ieee80211_key_free_common+0x10c\/0x174\n   ieee80211_free_keys+0x188\/0x46c\n   ieee80211_stop_mesh+0x70\/0x2cc\n   ieee80211_leave_mesh+0x1c\/0x60\n   cfg80211_leave_mesh+0xe0\/0x280\n   cfg80211_leave+0x1e0\/0x244\n  <...>\n\nReset SKB control block key before calling ieee80211_tx_h_select_key()\nto avoid that."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: mac80211: Actualizar la clave del bloque de control de skb en ieee80211_tx_dequeue() La clave del bloque de control de skb ieee80211 (establecida cuando skb se puso en cola) podría haberse eliminado antes de la llamada a ieee80211_tx_dequeue(). ieee80211_tx_dequeue() ya llamó a ieee80211_tx_h_select_key() para obtener la clave actual, pero este último no actualiza la clave en el bloque de control de skb en caso de que sea NULL. Debido a que algunos controladores realmente usan esta clave en sus devoluciones de llamada TX (por ejemplo, ath1{1,2}k_mac_op_tx()), esto podría llevar a use after free a continuación: ERROR: KASAN: slab-use-after-free en ath11k_mac_op_tx+0x590\/0x61c Lectura de tamaño 4 en la dirección ffffff803083c248 por la tarea kworker\/u16:4\/1440 CPU: 3 UID: 0 PID: 1440 Comm: kworker\/u16:4 No contaminado 6.13.0-ge128f627f404 #2 Nombre del hardware: HW (DT) Cola de trabajo: bat_events batadv_send_outstanding_bcast_packet Rastreo de llamadas: show_stack+0x14\/0x1c (C) dump_stack_lvl+0x58\/0x74 print_report+0x164\/0x4c0 kasan_report+0xac\/0xe8 __asan_report_load4_noabort+0x1c\/0x24 ath11k_mac_op_tx+0x590\/0x61c ieee80211_handle_wake_tx_queue+0x12c\/0x1c8 ieee80211_queue_skb+0xdcc\/0x1b4c ieee80211_tx+0x1ec\/0x2bc ieee80211_xmit+0x224\/0x324 __ieee80211_subif_start_xmit+0x85c\/0xcf8 ieee80211_subif_start_xmit+0xc0\/0xec4 dev_hard_start_xmit+0xf4\/0x28c __dev_queue_xmit+0x6ac\/0x318c batadv_send_skb_packet+0x38c\/0x4b0 batadv_send_outstanding_bcast_packet+0x110\/0x328 process_one_work+0x578\/0xc10 worker_thread+0x4bc\/0xc7c kthread+0x2f8\/0x380 ret_from_fork+0x10\/0x20 Allocated by task 1906: kasan_save_stack+0x28\/0x4c kasan_save_track+0x1c\/0x40 kasan_save_alloc_info+0x3c\/0x4c __kasan_kmalloc+0xac\/0xb0 __kmalloc_noprof+0x1b4\/0x380 ieee80211_key_alloc+0x3c\/0xb64 ieee80211_add_key+0x1b4\/0x71c nl80211_new_key+0x2b4\/0x5d8 genl_family_rcv_msg_doit+0x198\/0x240 &lt;...&gt; Freed by task 1494: kasan_save_stack+0x28\/0x4c kasan_save_track+0x1c\/0x40 kasan_save_free_info+0x48\/0x94 __kasan_slab_free+0x48\/0x60 kfree+0xc8\/0x31c kfree_sensitive+0x70\/0x80 ieee80211_key_free_common+0x10c\/0x174 ieee80211_free_keys+0x188\/0x46c ieee80211_stop_mesh+0x70\/0x2cc ieee80211_leave_mesh+0x1c\/0x60 cfg80211_leave_mesh+0xe0\/0x280 cfg80211_leave+0x1e0\/0x244 &lt;...&gt; Restablezca la clave del bloque de control SKB antes de llamar a ieee80211_tx_h_select_key() para evitar eso."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cbd747f343c28d911443dd4174820600cc0d952","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/159499c1341f66a71d985e9b79f2131e88d1c646","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47fe322fb4e000f3bb89c2b370a15f3dfdfb9109","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa75affe2a97abface2b0d9b95e15728967dda7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d00c0a807a3bb7d8fadcd6c26f95f207ab0ce15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a104042e2bf6528199adb6ca901efe7b60c2c27f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a167a2833d3f862e800cc23067b21ff1df3a1085","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb5c4347d50410e3b262c1dd4081e36aa06826f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37796","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T14:15:44.173","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: at76c50x: fix use after free access in at76_disconnect\n\nThe memory pointed to by priv is freed at the end of at76_delete_device\nfunction (using ieee80211_free_hw). But the code then accesses the udev\nfield of the freed object to put the USB device. This may also lead to a\nmemory leak of the usb device. Fix this by using udev from interface."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: at76c50x: se corrige el use after free en at76_disconnect. La memoria a la que apunta priv se libera al final de la función at76_delete_device (mediante ieee80211_free_hw). Sin embargo, el código accede al campo udev del objeto liberado para colocar el dispositivo USB. Esto también puede provocar una fuga de memoria del dispositivo USB. Se soluciona usando udev desde la interfaz."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/152721cbae42713ecfbca6847e0f102ee6b19546","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27c7e63b3cb1a20bb78ed4a36c561ea4579fd7da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c619aec1f538333b56746d2f796aab1bca5c9a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e7df74745700f059dc117a620e566964a2e8f2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e4ab3e574c2a335b40fa1f70d1c54fcb58ab33f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ca513631fa6ad3011b8b9197cdde0f351103704","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9682bfef2cf3802515a902e964d774e137be1b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c731cdfddcf1be1590d5ba8c9b508f98e3a2b3d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-44835","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T14:15:45.473","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"D-Link DIR-816 A2V1.1.0B05 was found to contain a command injection in iptablesWebsFilterRun, which allows remote attackers to execute arbitrary commands via shell."},{"lang":"es","value":"Se descubrió que D-Link DIR-816 A2V1.1.0B05 contenía una inyección de comando en iptablesWebsFilterRun, que permite a atacantes remotos ejecutar comandos arbitrarios a través del shell."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/n0wstr\/IOTVuln\/tree\/main\/DIR-816\/IptablesWebsFilterRun","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44854","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T14:15:45.593","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CP900 V6.3c.1144_B20190715 was found to contain a command injection vulnerability in the setUpgradeUboot function via the FileName parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CP900 V6.3c.1144_B20190715 contenía una vulnerabilidad de inyección de comandos en la función setUpgradeUboot mediante el parámetro FileName. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CP900\/setUpgradeUboot\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2020-36790","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:54.020","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: fix a memory leak\n\nWe forgot to free new_model_number"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nvmet: corrige una pérdida de memoria Olvidamos liberar new_model_number"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/227064b2ca9e62270ed445665ae849c73f0dfb2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/382fee1a8b623e2546a3e15e80517389e0e0673e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49762","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:58.933","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntfs: check overflow when iterating ATTR_RECORDs\n\nKernel iterates over ATTR_RECORDs in mft record in ntfs_attr_find(). \nBecause the ATTR_RECORDs are next to each other, kernel can get the next\nATTR_RECORD from end address of current ATTR_RECORD, through current\nATTR_RECORD length field.\n\nThe problem is that during iteration, when kernel calculates the end\naddress of current ATTR_RECORD, kernel may trigger an integer overflow bug\nin executing `a = (ATTR_RECORD*)((u8*)a + le32_to_cpu(a->length))`.  This\nmay wrap, leading to a forever iteration on 32bit systems.\n\nThis patch solves it by adding some checks on calculating end address\nof current ATTR_RECORD during iteration."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ntfs: desbordamiento de comprobación al iterar ATTR_RECORDs El kernel itera sobre los ATTR_RECORD en el registro mft en ntfs_attr_find(). Debido a que los ATTR_RECORD están uno al lado del otro, el kernel puede obtener el siguiente ATTR_RECORD desde la dirección final del ATTR_RECORD actual, a través del campo de longitud del ATTR_RECORD actual. El problema es que durante la iteración, cuando el kernel calcula la dirección final del ATTR_RECORD actual, el kernel puede desencadenar un error de desbordamiento de enteros al ejecutar `a = (ATTR_RECORD*)((u8*)a + le32_to_cpu(a-&gt;length))`. Esto puede envolverse, lo que lleva a una iteración eterna en sistemas de 32 bits. Este parche lo resuelve añadiendo algunas comprobaciones en el cálculo de la dirección final del ATTR_RECORD actual durante la iteración."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45683723f6b53e39e8a4cec0894e61fd6ec71989","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5559eb5809353a83a40a1e4e7f066431c7b83020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63095f4f3af59322bea984a6ae44337439348fe0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/785b2af9654b8beac55644e36da0085c5d776361","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86f36de14dce5802856bb7a5921d74439db00b64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/957732a09c3828267c2819d31c425aa793dd475b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b612f924f296408d7d02fb4cd01218afd4ed7184","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b63ddb3ba61e2d3539f87e095c881e552bc45dab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49763","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.047","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntfs: fix use-after-free in ntfs_attr_find()\n\nPatch series \"ntfs: fix bugs about Attribute\", v2.\n\nThis patchset fixes three bugs relative to Attribute in record:\n\nPatch 1 adds a sanity check to ensure that, attrs_offset field in first\nmft record loading from disk is within bounds.\n\nPatch 2 moves the ATTR_RECORD's bounds checking earlier, to avoid\ndereferencing ATTR_RECORD before checking this ATTR_RECORD is within\nbounds.\n\nPatch 3 adds an overflow checking to avoid possible forever loop in\nntfs_attr_find().\n\nWithout patch 1 and patch 2, the kernel triggersa KASAN use-after-free\ndetection as reported by Syzkaller.\n\nAlthough one of patch 1 or patch 2 can fix this, we still need both of\nthem.  Because patch 1 fixes the root cause, and patch 2 not only fixes\nthe direct cause, but also fixes the potential out-of-bounds bug.\n\n\nThis patch (of 3):\n\nSyzkaller reported use-after-free read as follows:\n==================================================================\nBUG: KASAN: use-after-free in ntfs_attr_find+0xc02\/0xce0 fs\/ntfs\/attrib.c:597\nRead of size 2 at addr ffff88807e352009 by task syz-executor153\/3607\n\n[...]\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n print_address_description mm\/kasan\/report.c:317 [inline]\n print_report.cold+0x2ba\/0x719 mm\/kasan\/report.c:433\n kasan_report+0xb1\/0x1e0 mm\/kasan\/report.c:495\n ntfs_attr_find+0xc02\/0xce0 fs\/ntfs\/attrib.c:597\n ntfs_attr_lookup+0x1056\/0x2070 fs\/ntfs\/attrib.c:1193\n ntfs_read_inode_mount+0x89a\/0x2580 fs\/ntfs\/inode.c:1845\n ntfs_fill_super+0x1799\/0x9320 fs\/ntfs\/super.c:2854\n mount_bdev+0x34d\/0x410 fs\/super.c:1400\n legacy_get_tree+0x105\/0x220 fs\/fs_context.c:610\n vfs_get_tree+0x89\/0x2f0 fs\/super.c:1530\n do_new_mount fs\/namespace.c:3040 [inline]\n path_mount+0x1326\/0x1e20 fs\/namespace.c:3370\n do_mount fs\/namespace.c:3383 [inline]\n __do_sys_mount fs\/namespace.c:3591 [inline]\n __se_sys_mount fs\/namespace.c:3568 [inline]\n __x64_sys_mount+0x27f\/0x300 fs\/namespace.c:3568\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n [...]\n <\/TASK>\n\nThe buggy address belongs to the physical page:\npage:ffffea0001f8d400 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x7e350\nhead:ffffea0001f8d400 order:3 compound_mapcount:0 compound_pincount:0\nflags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)\nraw: 00fff00000010200 0000000000000000 dead000000000122 ffff888011842140\nraw: 0000000000000000 0000000000040004 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\nMemory state around the buggy address:\n ffff88807e351f00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff88807e351f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n>ffff88807e352000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                      ^\n ffff88807e352080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff88807e352100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n==================================================================\n\nKernel will loads $MFT\/$DATA's first mft record in\nntfs_read_inode_mount().\n\nYet the problem is that after loading, kernel doesn't check whether\nattrs_offset field is a valid value.\n\nTo be more specific, if attrs_offset field is larger than bytes_allocated\nfield, then it may trigger the out-of-bounds read bug(reported as\nuse-after-free bug) in ntfs_attr_find(), when kernel tries to access the\ncorresponding mft record's attribute.\n\nThis patch solves it by adding the sanity check between attrs_offset field\nand bytes_allocated field, after loading the first mft record."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ntfs: corrección del use-after-free en ntfs_attr_find(). Serie de parches \"ntfs: corrección de errores sobre el atributo\", v2. Este conjunto de parches corrige tres errores relacionados con el atributo en el registro: el parche 1 añade una comprobación de seguridad para garantizar que el campo attrs_offset en la primera carga de registro MFT desde el disco esté dentro de los límites. El parche 2 adelanta la comprobación de los límites de ATTR_RECORD para evitar desreferenciarlo antes de comprobar que esté dentro de los límites. El parche 3 añade una comprobación de desbordamiento para evitar un posible bucle infinito en ntfs_attr_find(). Sin los parches 1 y 2, el kernel activa la detección de use-after-free de KASAN, según lo informado por Syzkaller. Aunque uno de los parches 1 o 2 puede solucionar esto, aún necesitamos ambos. Porque el parche 1 corrige la causa raíz, y el parche 2 no solo corrige la causa directa, sino que también corrige el posible error fuera de los límites. Este parche (de 3): Syzkaller informó una lectura de use-after-free de la siguiente manera: ====================================================================== ERROR: KASAN: use-after-free en ntfs_attr_find+0xc02\/0xce0 fs\/ntfs\/attrib.c:597 Lectura de tamaño 2 en la dirección ffff88807e352009 por la tarea syz-executor153\/3607 [...] Rastreo de llamadas:  __dump_stack lib\/dump_stack.c:88 [inline] dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106 print_address_description mm\/kasan\/report.c:317 [inline] print_report.cold+0x2ba\/0x719 mm\/kasan\/report.c:433 kasan_report+0xb1\/0x1e0 mm\/kasan\/report.c:495 ntfs_attr_find+0xc02\/0xce0 fs\/ntfs\/attrib.c:597 ntfs_attr_lookup+0x1056\/0x2070 fs\/ntfs\/attrib.c:1193 ntfs_read_inode_mount+0x89a\/0x2580 fs\/ntfs\/inode.c:1845 ntfs_fill_super+0x1799\/0x9320 fs\/ntfs\/super.c:2854 mount_bdev+0x34d\/0x410 fs\/super.c:1400 legacy_get_tree+0x105\/0x220 fs\/fs_context.c:610 vfs_get_tree+0x89\/0x2f0 fs\/super.c:1530 do_new_mount fs\/namespace.c:3040 [inline] path_mount+0x1326\/0x1e20 fs\/namespace.c:3370 do_mount fs\/namespace.c:3383 [inline] __do_sys_mount fs\/namespace.c:3591 [inline] __se_sys_mount fs\/namespace.c:3568 [inline] __x64_sys_mount+0x27f\/0x300 fs\/namespace.c:3568 do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd [...]  La dirección con errores pertenece a la página física: page:ffffea0001f8d400 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x7e350 head:ffffea0001f8d400 order:3 Compound_mapcount:0 Compound_pincount:0 flags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff) raw: 00fff00000010200 0000000000000000 muerto000000000122 ffff888011842140 raw: 00000000000000000 0000000000040004 00000001ffffffff 0000000000000000 página volcada porque: kasan: mal acceso detectado Estado de la memoria alrededor de la dirección con errores: ffff88807e351f00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc ffff88807e351f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc &gt;ffff88807e352000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ^ ffff88807e352080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ffff88807e352100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb ====================================================================== El núcleo cargará el primer registro mft de $MFT\/$DATA en ntfs_read_inode_mount(). Sin embargo, el problema radica en que, tras la carga, el kernel no comprueba si el campo attrs_offset es un valor válido. Más específicamente, si el campo attrs_offset es mayor que el campo bytes_allocated, podría activarse el error de lectura fuera de los límites (reportado como error de use-after-free) en ntfs_attr_find() cuando el kernel intenta acceder al atributo del registro MFT correspondiente. Este parche lo soluciona añadiendo la comprobación de validez entre los campos attrs_offset y bytes_allocated tras cargar el primer registro MFT."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/266bd5306286316758e6246ea0345133427b0f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4863f815463034f588a035cfd99cdca97a4f1069","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5330c423b86263ac7883fef0260b9e2229cb531e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79f3ac7dcd12c05b7539239a4c6fa229a50d786c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b825bfbbaafbe8da2037e3a778ad660c59f9e054","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0006d739738a658a9c29b438444259d9f71dfa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d85a1bec8e8d552ab13163ca1874dcd82f3d1550","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb2004bafd1932e08d21ca604ee5844f2b7f212d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49764","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.170","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Prevent bpf program recursion for raw tracepoint probes\n\nWe got report from sysbot [1] about warnings that were caused by\nbpf program attached to contention_begin raw tracepoint triggering\nthe same tracepoint by using bpf_trace_printk helper that takes\ntrace_printk_lock lock.\n\n Call Trace:\n  <TASK>\n  ? trace_event_raw_event_bpf_trace_printk+0x5f\/0x90\n  bpf_trace_printk+0x2b\/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24\n  bpf_trace_run2+0x26\/0x90\n  native_queued_spin_lock_slowpath+0x1c6\/0x2b0\n  _raw_spin_lock_irqsave+0x44\/0x50\n  bpf_trace_printk+0x3f\/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24\n  bpf_trace_run2+0x26\/0x90\n  native_queued_spin_lock_slowpath+0x1c6\/0x2b0\n  _raw_spin_lock_irqsave+0x44\/0x50\n  bpf_trace_printk+0x3f\/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24\n  bpf_trace_run2+0x26\/0x90\n  native_queued_spin_lock_slowpath+0x1c6\/0x2b0\n  _raw_spin_lock_irqsave+0x44\/0x50\n  bpf_trace_printk+0x3f\/0xe0\n  bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24\n  bpf_trace_run2+0x26\/0x90\n  native_queued_spin_lock_slowpath+0x1c6\/0x2b0\n  _raw_spin_lock_irqsave+0x44\/0x50\n  __unfreeze_partials+0x5b\/0x160\n  ...\n\nThe can be reproduced by attaching bpf program as raw tracepoint on\ncontention_begin tracepoint. The bpf prog calls bpf_trace_printk\nhelper. Then by running perf bench the spin lock code is forced to\ntake slow path and call contention_begin tracepoint.\n\nFixing this by skipping execution of the bpf program if it's\nalready running, Using bpf prog 'active' field, which is being\ncurrently used by trampoline programs for the same reason.\n\nMoving bpf_prog_inc_misses_counter to syscall.c because\ntrampoline.c is compiled in just for CONFIG_BPF_JIT option.\n\n[1] https:\/\/lore.kernel.org\/bpf\/YxhFe3EwqchC%2FfYf@krava\/T\/#t"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf: Impide la recursión del programa bpf para sondas de puntos de seguimiento sin procesar. Recibimos un informe de sysbot [1] sobre advertencias causadas por el programa bpf asociado al punto de seguimiento sin procesar contention_begin, que activaba el mismo punto de seguimiento mediante el auxiliar bpf_trace_printk, que toma el bloqueo trace_printk_lock. Llamada a Trace:  ? trace_event_raw_event_bpf_trace_printk+0x5f\/0x90 bpf_trace_printk+0x2b\/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24 bpf_trace_run2+0x26\/0x90 native_queued_spin_lock_slowpath+0x1c6\/0x2b0 _raw_spin_lock_irqsave+0x44\/0x50 bpf_trace_printk+0x3f\/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24 bpf_trace_run2+0x26\/0x90 native_queued_spin_lock_slowpath+0x1c6\/0x2b0 _raw_spin_lock_irqsave+0x44\/0x50 bpf_trace_printk+0x3f\/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24 bpf_trace_run2+0x26\/0x90 native_queued_spin_lock_slowpath+0x1c6\/0x2b0 _raw_spin_lock_irqsave+0x44\/0x50 bpf_trace_printk+0x3f\/0xe0 bpf_prog_a9aec6167c091eef_prog+0x1f\/0x24 bpf_trace_run2+0x26\/0x90 native_queued_spin_lock_slowpath+0x1c6\/0x2b0 _raw_spin_lock_irqsave+0x44\/0x50 __unfreeze_partials+0x5b\/0x160 Esto se puede reproducir adjuntando el programa bpf como punto de seguimiento sin procesar en el punto de seguimiento contention_begin. El programa bpf llama al asistente bpf_trace_printk. Luego, al ejecutar perf bench, el código de bloqueo de giro se fuerza a tomar la ruta lenta e invocar el punto de seguimiento contention_begin. Esto se soluciona omitiendo la ejecución del programa bpf si ya se está ejecutando. Se usa el campo \"activo\" del programa bpf, que actualmente usan los programas trampoline por la misma razón. Se traslada bpf_prog_inc_misses_counter a syscall.c, ya que trampoline.c se compila solo para la opción CONFIG_BPF_JIT. [1] https:\/\/lore.kernel.org\/bpf\/YxhFe3EwqchC%2FfYf@krava\/T\/#t"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05b24ff9b2cfabfcfd951daaa915a036ab53c9e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e5399879024fedd6cdc41f73fbf9bbe7208f899","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49765","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.277","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/9p: use a dedicated spinlock for trans_fd\n\nShamelessly copying the explanation from Tetsuo Handa's suggested\npatch[1] (slightly reworded):\nsyzbot is reporting inconsistent lock state in p9_req_put()[2],\nfor p9_tag_remove() from p9_req_put() from IRQ context is using\nspin_lock_irqsave() on \"struct p9_client\"->lock but trans_fd\n(not from IRQ context) is using spin_lock().\n\nSince the locks actually protect different things in client.c and in\ntrans_fd.c, just replace trans_fd.c's lock by a new one specific to the\ntransport (client.c's protect the idr for fid\/tag allocations,\nwhile trans_fd.c's protects its own req list and request status field\nthat acts as the transport's state machine)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net\/9p: uso de un spinlock dedicado para trans_fd. Copiando descaradamente la explicación del parche sugerido por Tetsuo Handa[1] (ligeramente reformulada): syzbot reporta un estado de bloqueo inconsistente en p9_req_put()[2], para p9_tag_remove() desde p9_req_put() desde el contexto IRQ, se usa spin_lock_irqsave() en \"struct p9_client\"-&gt;lock, pero trans_fd (no desde el contexto IRQ) usa spin_lock(). Dado que los bloqueos protegen elementos diferentes en client.c y en trans_fd.c, simplemente reemplace el bloqueo de trans_fd.c por uno nuevo específico para el transporte (el de client.c protege el IDR para las asignaciones de FID\/etiqueta, mientras que el de trans_fd.c protege su propia lista de solicitudes y el campo de estado de la solicitud, que actúa como la máquina de estados del transporte)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/296ab4a813841ba1d5f40b03190fd1bd8f25aab0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43bbadb7e4636dc02f6a283c2a39e6438e6173cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/717b9b4f38703d7f5293059e3a242d16f76fa045","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49766","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.380","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetlink: Bounds-check struct nlmsgerr creation\n\nIn preparation for FORTIFY_SOURCE doing bounds-check on memcpy(),\nswitch from __nlmsg_put to nlmsg_put(), and explain the bounds check\nfor dealing with the memcpy() across a composite flexible array struct.\nAvoids this future run-time warning:\n\n  memcpy: detected field-spanning write (size 32) of single field \"&errmsg->msg\" at net\/netlink\/af_netlink.c:2447 (size 16)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netlink: Creación de la estructura nlmsgerr con comprobación de los límites. En preparación para que FORTIFY_SOURCE realice la comprobación de los límites en memcpy(), cambie de __nlmsg_put a nlmsg_put() y explique la comprobación de los límites para procesar memcpy() en una estructura de matriz flexible compuesta. Esto evita esta futura advertencia en tiempo de ejecución: memcpy: se detectó una escritura que abarca campos (tamaño 32) en un solo campo \"&amp;errmsg-&gt;msg\" en net\/netlink\/af_netlink.c:2447 (tamaño 16)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/710d21fdff9a98d621cd4e64167f3ef8af4e2fd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aff4eb16f589c3af322a2582044bca365381fcd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49767","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.483","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\n9p\/trans_fd: always use O_NONBLOCK read\/write\n\nsyzbot is reporting hung task at p9_fd_close() [1], for p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is failing to interrupt already\nstarted kernel_read() from p9_fd_read() from p9_read_work() and\/or\nkernel_write() from p9_fd_write() from p9_write_work() requests.\n\nSince p9_socket_open() sets O_NONBLOCK flag, p9_mux_poll_stop() does not\nneed to interrupt kernel_read()\/kernel_write(). However, since p9_fd_open()\ndoes not set O_NONBLOCK flag, but pipe blocks unless signal is pending,\np9_mux_poll_stop() needs to interrupt kernel_read()\/kernel_write() when\nthe file descriptor refers to a pipe. In other words, pipe file descriptor\nneeds to be handled as if socket file descriptor.\n\nWe somehow need to interrupt kernel_read()\/kernel_write() on pipes.\n\nA minimal change, which this patch is doing, is to set O_NONBLOCK flag\n from p9_fd_open(), for O_NONBLOCK flag does not affect reading\/writing\nof regular files. But this approach changes O_NONBLOCK flag on userspace-\nsupplied file descriptors (which might break userspace programs), and\nO_NONBLOCK flag could be changed by userspace. It would be possible to set\nO_NONBLOCK flag every time p9_fd_read()\/p9_fd_write() is invoked, but still\nremains small race window for clearing O_NONBLOCK flag.\n\nIf we don't want to manipulate O_NONBLOCK flag, we might be able to\nsurround kernel_read()\/kernel_write() with set_thread_flag(TIF_SIGPENDING)\nand recalc_sigpending(). Since p9_read_work()\/p9_write_work() works are\nprocessed by kernel threads which process global system_wq workqueue,\nsignals could not be delivered from remote threads when p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is called. Therefore, calling\nset_thread_flag(TIF_SIGPENDING)\/recalc_sigpending() every time would be\nneeded if we count on signals for making kernel_read()\/kernel_write()\nnon-blocking.\n\n[Dominique: add comment at Christian's suggestion]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: 9p\/trans_fd: syzbot reporta que la tarea se bloquea en p9_fd_close() [1], ya que p9_mux_poll_stop() de p9_conn_destroy() de p9_fd_close() no interrumpe las solicitudes kernel_read() de p9_fd_read() de p9_read_work() o kernel_write() de p9_fd_write() de p9_write_work() ya iniciadas. Dado que p9_socket_open() establece el indicador O_NONBLOCK, p9_mux_poll_stop() no necesita interrumpir kernel_read()\/kernel_write(). Sin embargo, dado que p9_fd_open() no establece el indicador O_NONBLOCK, sino que bloquea la tubería a menos que la señal esté pendiente, p9_mux_poll_stop() necesita interrumpir kernel_read()\/kernel_write() cuando el descriptor de archivo hace referencia a una tubería. En otras palabras, el descriptor de archivo de la tubería debe manejarse como si fuera un descriptor de archivo de socket. De alguna manera, necesitamos interrumpir kernel_read()\/kernel_write() en las tuberías. Un cambio mínimo, que este parche está realizando, es establecer el indicador O_NONBLOCK de p9_fd_open(), ya que el indicador O_NONBLOCK no afecta la lectura\/escritura de archivos normales. Pero este enfoque cambia el indicador O_NONBLOCK en los descriptores de archivo proporcionados por el espacio de usuario (lo que podría romper los programas del espacio de usuario), y el indicador O_NONBLOCK podría ser cambiado por el espacio de usuario. Sería posible establecer el indicador O_NONBLOCK cada vez que se invoca p9_fd_read()\/p9_fd_write(), pero aún queda una pequeña ventana de tiempo para borrar el indicador O_NONBLOCK. Si no queremos manipular el indicador O_NONBLOCK, podríamos rodear kernel_read()\/kernel_write() con set_thread_flag(TIF_SIGPENDING) y recalc_sigpending(). Dado que los trabajos de p9_read_work()\/p9_write_work() son procesados por hilos del núcleo que procesan la cola de trabajo global system_wq, no se pudieron enviar señales desde hilos remotos al llamar a p9_mux_poll_stop() de p9_conn_destroy() de p9_fd_close(). Por lo tanto, sería necesario llamar a set_thread_flag(TIF_SIGPENDING)\/recalc_sigpending() cada vez si dependemos de señales para que kernel_read()\/kernel_write() sea no bloqueante. [Dominique: añadir comentario a la sugerencia de Christian]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b5e6bd72b8171364616841603a70e4ba9837063","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e07032b4b4724b8ad1003698cb81083c1818999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af16182c5639349415118e9e9aecd8355f7a08b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7abf40f06a76c0dff42eada10597917e9776fbd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f8554615df668e4bf83294633ee9d232b28ce45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8e2fc8f7b41fa9d9ca5f624f4e4d34fce5b40a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1ad04da7fe4515e2ce2d5f2dcab3b5b6d45614b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef575281b21e9a34dfae544a187c6aac2ae424a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49768","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.597","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\n9p: trans_fd\/p9_conn_cancel: drop client lock earlier\n\nsyzbot reported a double-lock here and we no longer need this\nlock after requests have been moved off to local list:\njust drop the lock earlier."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: 9p: trans_fd\/p9_conn_cancel: eliminar el bloqueo del cliente anteriormente. syzbot informó un bloqueo doble aquí y ya no necesitamos este bloqueo después de que las solicitudes se hayan movido a la lista local: simplemente elimine el bloqueo anteriormente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52f1c45dde9136f964d63a77d19826c8a74e2c7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/612c977f5d481f551d03d83d0aef588845c1300c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82825dbf393f7c7979d462f9609a15bde8092b3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96760723aae1b45f733f702abb4333137143909f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4f1a01b2e81378fce9ca528d4d8a049e4b58fcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3031280fe4eaf61a09e60823331f81f321be8e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f14858bc77c567e089965962877ee726ffad0556","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fec1406f5e7ab20b71f6d231792b0040e3300aaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49769","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.710","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Check sb_bsize_shift after reading superblock\n\nFuzzers like to scribble over sb_bsize_shift but in reality it's very\nunlikely that this field would be corrupted on its own. Nevertheless it\nshould be checked to avoid the possibility of messy mount errors due to\nbad calculations. It's always a fixed value based on the block size so\nwe can just check that it's the expected value.\n\nTested with:\n\n    mkfs.gfs2 -O -p lock_nolock \/dev\/vdb\n    for i in 0 -1 64 65 32 33; do\n        gfs2_edit -p sb field sb_bsize_shift $i \/dev\/vdb\n        mount \/dev\/vdb \/mnt\/test && umount \/mnt\/test\n    done\n\nBefore this patch we get a withdraw after\n\n[   76.413681] gfs2: fsid=loop0.0: fatal: invalid metadata block\n[   76.413681]   bh = 19 (type: exp=5, found=4)\n[   76.413681]   function = gfs2_meta_buffer, file = fs\/gfs2\/meta_io.c, line = 492\n\nand with UBSAN configured we also get complaints like\n\n[   76.373395] UBSAN: shift-out-of-bounds in fs\/gfs2\/ops_fstype.c:295:19\n[   76.373815] shift exponent 4294967287 is too large for 64-bit type 'long unsigned int'\n\nAfter the patch, these complaints don't appear, mount fails immediately\nand we get an explanation in dmesg."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: gfs2: Comprobación de sb_bsize_shift tras leer el superbloque. A los fuzzers les gusta manipular sb_bsize_shift, pero en realidad es muy improbable que este campo se corrompa por sí solo. Sin embargo, conviene comprobarlo para evitar errores de montaje problemáticos debido a cálculos erróneos. Siempre es un valor fijo basado en el tamaño del bloque, por lo que podemos comprobar que sea el valor esperado. Probado con: mkfs.gfs2 -O -p lock_nolock \/dev\/vdb for i in 0 -1 64 65 32 33; Antes de este parche obtenemos una retirada después de [ 76.413681] gfs2: fsid=loop0.0: fatal: bloque de metadatos no válido [ 76.413681] bh = 19 (tipo: exp=5, encontrado=4) [ 76.413681] función = gfs2_meta_buffer, archivo = fs\/gfs2\/meta_io.c, línea = 492 y con UBSAN configurado también obtenemos quejas como [ 76.373395] UBSAN: cambio fuera de los límites en fs\/gfs2\/ops_fstype.c:295:19 [ 76.373815] cambio El exponente 4294967287 es demasiado grande para el tipo de 64 bits 'long unsigned int'. Después del parche, estas quejas no aparecen, el montaje falla inmediatamente y obtenemos una explicación en dmesg."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15c83fa0fd659dd9fbdc940a560b61236e876a80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16670534c7cff1acd918a6a5ec751b14e7436b76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ad197097343568066a8ffaa27ee7d0ae6d9f476","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28275a7c84d21c55ab3282d897f284d8d527173c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fa30be7ba81191b0a0c7239a89befc0c94286d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/670f8ce56dd0632dc29a0322e188cc73ce3c6b92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b6534c9ae9dba5489703a19d8ba6c8f2cfa33c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6b1e8ea6f3418c3b461ad5a35cdc93c996b2c87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49770","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:15:59.920","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: avoid putting the realm twice when decoding snaps fails\n\nWhen decoding the snaps fails it maybe leaving the 'first_realm'\nand 'realm' pointing to the same snaprealm memory. And then it'll\nput it twice and could cause random use-after-free, BUG_ON, etc\nissues."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ceph: evita repetir el dominio cuando falla la decodificación de snaps. Al fallar la decodificación de snaps, puede que \"first_realm\" y \"realm\" apunten a la misma memoria de snaprealm. En ese caso, lo repetirá, lo que podría causar problemas aleatorios de use-after-free, BUG_ON, etc."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/044bc6d3c2c0e9090b0841e7b723875756534b45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/274e4c79a3a2a24fba7cfe0e41113f1138785c37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f6e2de3a5289004650118b61f138fe7c28e1905","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51884d153f7ec85e18d607b2467820a90e0f4359","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb7495fe957526555782ce0723f79ce92a6db22e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd879c83e87735ab8f00ef7755752cf0cbae24b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49771","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.237","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm ioctl: fix misbehavior if list_versions races with module loading\n\n__list_versions will first estimate the required space using the\n\"dm_target_iterate(list_version_get_needed, &needed)\" call and then will\nfill the space using the \"dm_target_iterate(list_version_get_info,\n&iter_info)\" call. Each of these calls locks the targets using the\n\"down_read(&_lock)\" and \"up_read(&_lock)\" calls, however between the first\nand second \"dm_target_iterate\" there is no lock held and the target\nmodules can be loaded at this point, so the second \"dm_target_iterate\"\ncall may need more space than what was the first \"dm_target_iterate\"\nreturned.\n\nThe code tries to handle this overflow (see the beginning of\nlist_version_get_info), however this handling is incorrect.\n\nThe code sets \"param->data_size = param->data_start + needed\" and\n\"iter_info.end = (char *)vers+len\" - \"needed\" is the size returned by the\nfirst dm_target_iterate call; \"len\" is the size of the buffer allocated by\nuserspace.\n\n\"len\" may be greater than \"needed\"; in this case, the code will write up\nto \"len\" bytes into the buffer, however param->data_size is set to\n\"needed\", so it may write data past the param->data_size value. The ioctl\ninterface copies only up to param->data_size into userspace, thus part of\nthe result will be truncated.\n\nFix this bug by setting \"iter_info.end = (char *)vers + needed;\" - this\nguarantees that the second \"dm_target_iterate\" call will write only up to\nthe \"needed\" buffer and it will exit with \"DM_BUFFER_FULL_FLAG\" if it\noverflows the \"needed\" space - in this case, userspace will allocate a\nlarger buffer and retry.\n\nNote that there is also a bug in list_version_get_needed - we need to add\n\"strlen(tt->name) + 1\" to the needed size, not \"strlen(tt->name)\"."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: dm ioctl: se corrige el comportamiento incorrecto si list_versions se acelera al cargar módulos. __list_versions primero estimará el espacio requerido mediante la llamada \"dm_target_iterate(list_version_get_needed, &amp;needed)\" y luego llenará el espacio mediante la llamada \"dm_target_iterate(list_version_get_info, &amp;iter_info)\". Cada una de estas llamadas bloquea los destinos mediante las llamadas \"down_read(&amp;_lock)\" y \"up_read(&amp;_lock)\". Sin embargo, entre la primera y la segunda llamada \"dm_target_iterate\" no se mantiene el bloqueo y los módulos de destino se pueden cargar en este punto, por lo que la segunda llamada \"dm_target_iterate\" podría necesitar más espacio que el devuelto por la primera llamada \"dm_target_iterate\". El código intenta gestionar este desbordamiento (véase el comienzo de list_version_get_info), pero esta gestión es incorrecta. El código establece \"param-&gt;data_size = param-&gt;data_start + needed\" y \"iter_info.end = (char *)vers+len\": \"needed\" es el tamaño devuelto por la primera llamada a dm_target_iterate; \"len\" es el tamaño del búfer asignado por el espacio de usuario. \"len\" puede ser mayor que \"needed\"; en este caso, el código escribirá hasta \"len\" bytes en el búfer; sin embargo, param-&gt;data_size se establece en \"needed\", por lo que podría escribir datos que superen el valor de param-&gt;data_size. La interfaz ioctl solo copia hasta param-&gt;data_size en el espacio de usuario, por lo que parte del resultado se truncará. Corrija este error estableciendo \"iter_info.end = (char *)vers + needed;\" Esto garantiza que la segunda llamada \"dm_target_iterate\" solo escriba hasta el búfer necesario y finalice con \"DM_BUFFER_FULL_FLAG\" si se desborda dicho espacio. En este caso, el espacio de usuario asignará un búfer mayor y reintentará. Tenga en cuenta que también hay un error en list_version_get_needed: debemos agregar \"strlen(tt-&gt;name) + 1\" al tamaño necesario, no \"strlen(tt-&gt;name)\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c8d4112df329bf3dfbf27693f918c3b08676538","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a1c35d72dc0b34d1e746ed705790c0f630aa427","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fe1ec995483737f3d2a14c3fe1d8fe634972979","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5398b8e275bf81a2517b327d216c0f37ac9ac5ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a818db0d5aecf80d4ba9e10ac153f60adc629ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ffce7a92ef5c68f7e5d6f4d722c2f96280c064b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b545c0e1e4094d4de2bdfe9a3823f9154b0c0005","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f59f5a269ca5e43c567aca7f1f52500a0186e9b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49772","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.347","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Drop snd_BUG_ON() from snd_usbmidi_output_open()\n\nsnd_usbmidi_output_open() has a check of the NULL port with\nsnd_BUG_ON().  snd_BUG_ON() was used as this shouldn't have happened,\nbut in reality, the NULL port may be seen when the device gives an\ninvalid endpoint setup at the descriptor, hence the driver skips the\nallocation.  That is, the check itself is valid and snd_BUG_ON()\nshould be dropped from there.  Otherwise it's confusing as if it were\na real bug, as recently syzbot stumbled on it."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ALSA: usb-audio: Se omite snd_BUG_ON() de snd_usbmidi_output_open(). snd_usbmidi_output_open() tiene una comprobación del puerto nulo con snd_BUG_ON(). Se usó snd_BUG_ON() porque esto no debería haber ocurrido, pero en realidad, el puerto nulo puede detectarse cuando el dispositivo proporciona una configuración de endpoint no válida en el descriptor, por lo que el controlador omite la asignación. Es decir, la comprobación en sí es válida y snd_BUG_ON() debería omitirse. De lo contrario, es confuso, como si se tratara de un error real, como lo detectó syzbot recientemente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00f5f1bbf815a39e9eecb468d12ca55d3360eb10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/02b94885b2fdf1808b1874e009bfb90753f8f4db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/368a01e5064c13946d032ab1d65ba95020a39cc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/872c9314769e89d8bda74ff3ac584756a45ee752","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a80369c8ca50bc885d14386087a834659ec54a54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad72c3c3f6eb81d2cb189ec71e888316adada5df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c43991065f36f7628cd124e037b8750c4617a7a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7dc436aea80308a9268e6d2d85f910ff107de9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49773","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.453","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix optc2_configure warning on dcn314\n\n[Why]\ndcn314 uses optc2_configure_crc() that wraps\noptc1_configure_crc() + set additional registers\nnot applicable to dcn314.\nIt's not critical but when used leads to warning like:\nWARNING: drivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dc_helper.c\nCall Trace:\n<TASK>\ngeneric_reg_set_ex+0x6d\/0xe0 [amdgpu]\noptc2_configure_crc+0x60\/0x80 [amdgpu]\ndc_stream_configure_crc+0x129\/0x150 [amdgpu]\namdgpu_dm_crtc_configure_crc_source+0x5d\/0xe0 [amdgpu]\n\n[How]\nUse optc1_configure_crc() directly"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amd\/display: Se corrige la advertencia de optc2_configure en dcn314 [Por qué] dcn314 usa optc2_configure_crc() que envuelve optc1_configure_crc() + establece registros adicionales que no son aplicables a dcn314. No es crítico, pero cuando se usa genera advertencias como: ADVERTENCIA: drivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dc_helper.c Seguimiento de llamadas:  generic_reg_set_ex+0x6d\/0xe0 [amdgpu] optc2_configure_crc+0x60\/0x80 [amdgpu] dc_stream_configure_crc+0x129\/0x150 [amdgpu] amdgpu_dm_crtc_configure_crc_source+0x5d\/0xe0 [amdgpu] [How] Use optc1_configure_crc() directly "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e4f77c991c9abf90924929a9d55f90b0bb78de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f67ef5aa88e3db0a13ae3befab2ddf14ac00a91c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49774","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.557","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86\/xen: Fix eventfd error handling in kvm_xen_eventfd_assign()\n\nShould not call eventfd_ctx_put() in case of error.\n\n[Introduce new goto target instead. - Paolo]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: x86\/xen: Se corrige el manejo de errores de eventfd en kvm_xen_eventfd_assign(). No se debe llamar a eventfd_ctx_put() en caso de error. [Introducir un nuevo objetivo goto en su lugar. - Paolo]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7353633814f6e5b4899fb9ee1483709d6bb0e1cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d76f46f47dfde220712d1420ee5dbc546c8fc674","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49775","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.650","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: cdg: allow tcp_cdg_release() to be called multiple times\n\nApparently, mptcp is able to call tcp_disconnect() on an already\ndisconnected flow. This is generally fine, unless current congestion\ncontrol is CDG, because it might trigger a double-free [1]\n\nInstead of fixing MPTCP, and future bugs, we can make tcp_disconnect()\nmore resilient.\n\n[1]\nBUG: KASAN: double-free in slab_free mm\/slub.c:3539 [inline]\nBUG: KASAN: double-free in kfree+0xe2\/0x580 mm\/slub.c:4567\n\nCPU: 0 PID: 3645 Comm: kworker\/0:7 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/22\/2022\nWorkqueue: events mptcp_worker\nCall Trace:\n<TASK>\n__dump_stack lib\/dump_stack.c:88 [inline]\ndump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\nprint_address_description mm\/kasan\/report.c:317 [inline]\nprint_report.cold+0x2ba\/0x719 mm\/kasan\/report.c:433\nkasan_report_invalid_free+0x81\/0x190 mm\/kasan\/report.c:462\n____kasan_slab_free+0x18b\/0x1c0 mm\/kasan\/common.c:356\nkasan_slab_free include\/linux\/kasan.h:200 [inline]\nslab_free_hook mm\/slub.c:1759 [inline]\nslab_free_freelist_hook+0x8b\/0x1c0 mm\/slub.c:1785\nslab_free mm\/slub.c:3539 [inline]\nkfree+0xe2\/0x580 mm\/slub.c:4567\ntcp_disconnect+0x980\/0x1e20 net\/ipv4\/tcp.c:3145\n__mptcp_close_ssk+0x5ca\/0x7e0 net\/mptcp\/protocol.c:2327\nmptcp_do_fastclose net\/mptcp\/protocol.c:2592 [inline]\nmptcp_worker+0x78c\/0xff0 net\/mptcp\/protocol.c:2627\nprocess_one_work+0x991\/0x1610 kernel\/workqueue.c:2289\nworker_thread+0x665\/0x1080 kernel\/workqueue.c:2436\nkthread+0x2e4\/0x3a0 kernel\/kthread.c:376\nret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:306\n<\/TASK>\n\nAllocated by task 3671:\nkasan_save_stack+0x1e\/0x40 mm\/kasan\/common.c:38\nkasan_set_track mm\/kasan\/common.c:45 [inline]\nset_alloc_info mm\/kasan\/common.c:437 [inline]\n____kasan_kmalloc mm\/kasan\/common.c:516 [inline]\n____kasan_kmalloc mm\/kasan\/common.c:475 [inline]\n__kasan_kmalloc+0xa9\/0xd0 mm\/kasan\/common.c:525\nkmalloc_array include\/linux\/slab.h:640 [inline]\nkcalloc include\/linux\/slab.h:671 [inline]\ntcp_cdg_init+0x10d\/0x170 net\/ipv4\/tcp_cdg.c:380\ntcp_init_congestion_control+0xab\/0x550 net\/ipv4\/tcp_cong.c:193\ntcp_reinit_congestion_control net\/ipv4\/tcp_cong.c:217 [inline]\ntcp_set_congestion_control+0x96c\/0xaa0 net\/ipv4\/tcp_cong.c:391\ndo_tcp_setsockopt+0x505\/0x2320 net\/ipv4\/tcp.c:3513\ntcp_setsockopt+0xd4\/0x100 net\/ipv4\/tcp.c:3801\nmptcp_setsockopt+0x35f\/0x2570 net\/mptcp\/sockopt.c:844\n__sys_setsockopt+0x2d6\/0x690 net\/socket.c:2252\n__do_sys_setsockopt net\/socket.c:2263 [inline]\n__se_sys_setsockopt net\/socket.c:2260 [inline]\n__x64_sys_setsockopt+0xba\/0x150 net\/socket.c:2260\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nFreed by task 16:\nkasan_save_stack+0x1e\/0x40 mm\/kasan\/common.c:38\nkasan_set_track+0x21\/0x30 mm\/kasan\/common.c:45\nkasan_set_free_info+0x20\/0x30 mm\/kasan\/generic.c:370\n____kasan_slab_free mm\/kasan\/common.c:367 [inline]\n____kasan_slab_free+0x166\/0x1c0 mm\/kasan\/common.c:329\nkasan_slab_free include\/linux\/kasan.h:200 [inline]\nslab_free_hook mm\/slub.c:1759 [inline]\nslab_free_freelist_hook+0x8b\/0x1c0 mm\/slub.c:1785\nslab_free mm\/slub.c:3539 [inline]\nkfree+0xe2\/0x580 mm\/slub.c:4567\ntcp_cleanup_congestion_control+0x70\/0x120 net\/ipv4\/tcp_cong.c:226\ntcp_v4_destroy_sock+0xdd\/0x750 net\/ipv4\/tcp_ipv4.c:2254\ntcp_v6_destroy_sock+0x11\/0x20 net\/ipv6\/tcp_ipv6.c:1969\ninet_csk_destroy_sock+0x196\/0x440 net\/ipv4\/inet_connection_sock.c:1157\ntcp_done+0x23b\/0x340 net\/ipv4\/tcp.c:4649\ntcp_rcv_state_process+0x40e7\/0x4990 net\/ipv4\/tcp_input.c:6624\ntcp_v6_do_rcv+0x3fc\/0x13c0 net\/ipv6\/tcp_ipv6.c:1525\ntcp_v6_rcv+0x2e8e\/0x3830 net\/ipv6\/tcp_ipv6.c:1759\nip6_protocol_deliver_rcu+0x2db\/0x1950 net\/ipv6\/ip6_input.c:439\nip6_input_finish+0x14c\/0x2c0 net\/ipv6\/ip6_input.c:484\nNF_HOOK include\/linux\/netfilter.h:302 [inline]\nNF_HOOK include\/linux\/netfilter.h:296 [inline]\nip6_input+0x9c\/0xd\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tcp:cdg: permite llamar a tcp_cdg_release() varias veces. Aparentemente, mptcp puede llamar a tcp_disconnect() en un flujo ya desconectado. Esto generalmente funciona bien, a menos que el control de congestión actual sea CDG, ya que podría desencadenar una doble liberación [1]. En lugar de corregir MPTCP y futuros errores, podemos hacer que tcp_disconnect() sea más resistente. [1] ERROR: KASAN: doble liberación en slab_free mm\/slub.c:3539 [en línea] ERROR: KASAN: doble liberación en kfree+0xe2\/0x580 mm\/slub.c:4567 CPU: 0 PID: 3645 Comm: kworker\/0:7 No contaminado 6.0.0-syzkaller-02734-g0326074ff465 #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 22\/09\/2022 Cola de trabajo: eventos mptcp_worker Rastreo de llamadas:  __dump_stack lib\/dump_stack.c:88 [inline] dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106 print_address_description mm\/kasan\/report.c:317 [inline] print_report.cold+0x2ba\/0x719 mm\/kasan\/report.c:433 kasan_report_invalid_free+0x81\/0x190 mm\/kasan\/report.c:462 ____kasan_slab_free+0x18b\/0x1c0 mm\/kasan\/common.c:356 kasan_slab_free include\/linux\/kasan.h:200 [inline] slab_free_hook mm\/slub.c:1759 [inline] slab_free_freelist_hook+0x8b\/0x1c0 mm\/slub.c:1785 slab_free mm\/slub.c:3539 [inline] kfree+0xe2\/0x580 mm\/slub.c:4567 tcp_disconnect+0x980\/0x1e20 net\/ipv4\/tcp.c:3145 __mptcp_close_ssk+0x5ca\/0x7e0 net\/mptcp\/protocol.c:2327 mptcp_do_fastclose net\/mptcp\/protocol.c:2592 [inline] mptcp_worker+0x78c\/0xff0 net\/mptcp\/protocol.c:2627 process_one_work+0x991\/0x1610 kernel\/workqueue.c:2289 worker_thread+0x665\/0x1080 kernel\/workqueue.c:2436 kthread+0x2e4\/0x3a0 kernel\/kthread.c:376 ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:306  Allocated by task 3671: kasan_save_stack+0x1e\/0x40 mm\/kasan\/common.c:38 kasan_set_track mm\/kasan\/common.c:45 [inline] set_alloc_info mm\/kasan\/common.c:437 [inline] ____kasan_kmalloc mm\/kasan\/common.c:516 [inline] ____kasan_kmalloc mm\/kasan\/common.c:475 [inline] __kasan_kmalloc+0xa9\/0xd0 mm\/kasan\/common.c:525 kmalloc_array include\/linux\/slab.h:640 [inline] kcalloc include\/linux\/slab.h:671 [inline] tcp_cdg_init+0x10d\/0x170 net\/ipv4\/tcp_cdg.c:380 tcp_init_congestion_control+0xab\/0x550 net\/ipv4\/tcp_cong.c:193 tcp_reinit_congestion_control net\/ipv4\/tcp_cong.c:217 [inline] tcp_set_congestion_control+0x96c\/0xaa0 net\/ipv4\/tcp_cong.c:391 do_tcp_setsockopt+0x505\/0x2320 net\/ipv4\/tcp.c:3513 tcp_setsockopt+0xd4\/0x100 net\/ipv4\/tcp.c:3801 mptcp_setsockopt+0x35f\/0x2570 net\/mptcp\/sockopt.c:844 __sys_setsockopt+0x2d6\/0x690 net\/socket.c:2252 __do_sys_setsockopt net\/socket.c:2263 [inline] __se_sys_setsockopt net\/socket.c:2260 [inline] __x64_sys_setsockopt+0xba\/0x150 net\/socket.c:2260 do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd Freed by task 16: kasan_save_stack+0x1e\/0x40 mm\/kasan\/common.c:38 kasan_set_track+0x21\/0x30 mm\/kasan\/common.c:45 kasan_set_free_info+0x20\/0x30 mm\/kasan\/generic.c:370 ____kasan_slab_free mm\/kasan\/common.c:367 [inline] ____kasan_slab_free+0x166\/0x1c0 mm\/kasan\/common.c:329 kasan_slab_free include\/linux\/kasan.h:200 [inline] slab_free_hook mm\/slub.c:1759 [inline] slab_free_freelist_hook+0x8b\/0x1c0 mm\/slub.c:1785 slab_free mm\/slub.c:3539 [inline] kfree+0xe2\/0x580 mm\/slub.c:4567 tcp_cleanup_congestion_control+0x70\/0x120 net\/ipv4\/tcp_cong.c:226 tcp_v4_destroy_sock+0xdd\/0x750 net\/ipv4\/tcp_ipv4.c:2254 tcp_v6_destroy_sock+0x11\/0x20 net\/ipv6\/tcp_ipv6.c:1969 inet_csk_destroy_sock+0x196\/0x440 net\/ipv4\/inet_connection_sock.c:1157 tcp_done+0x23b\/0x340 net\/ipv4\/tcp.c:4649 tcp_rcv_state_process+0x40e7\/0x4990 net\/ipv4\/tcp_input.c:6624 tcp_v6_do_rcv+0x3fc\/0x13c0 net\/ipv6\/tcp_ipv6.c:1525 tcp_v6_rcv+0x2e8e\/0x3830 net\/ipv6\/tcp_ipv6.c:1759 ip6_protocol_deliver_rcu+0x2db\/0x1950 net\/ipv6\/ip6_input.c:439 ip6_input_finish+0x14c\/0x2c0 net\/ipv6\/ip6_input.c:484 NF_HOOK include\/linux\/netfilter.h:302 [inline] NF_HOOK include\/linux\/netfilter.h:296 [inline] ip6_input+0x9c\/0xd ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b19171439016a8e4c97eafe543670ac86e2b8fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b639be27cbf428a5ca01dcf8b5d654194c956f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35309be06b6feded2ab2cafbc2bca8534c2fa41e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4026033907cc6186d86b48daa4a252c860db2536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72e560cb8c6f80fc2b4afc5d3634a32465e13a51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78be2ee0112409ae4e9ee9e326151e0559b3d239","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e481d87349d2282f400ee1d010a169c99f766b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b49026d9c86f35a4c5bfb8d7345c9c4379828c6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49776","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.763","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmacvlan: enforce a consistent minimal mtu\n\nmacvlan should enforce a minimal mtu of 68, even at link creation.\n\nThis patch avoids the current behavior (which could lead to crashes\nin ipv6 stack if the link is brought up)\n\n$ ip link add macvlan1 link eno1 mtu 8 type macvlan  # This should fail !\n$ ip link sh dev macvlan1\n5: macvlan1@eno1: <BROADCAST,MULTICAST> mtu 8 qdisc noop\n    state DOWN mode DEFAULT group default qlen 1000\n    link\/ether 02:47:6c:24:74:82 brd ff:ff:ff:ff:ff:ff\n$ ip link set macvlan1 mtu 67\nError: mtu less than device minimum.\n$ ip link set macvlan1 mtu 68\n$ ip link set macvlan1 mtu 8\nError: mtu less than device minimum."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: macvlan: exige una MTU mínima consistente. macvlan debería exigir una MTU mínima de 68, incluso al crear el enlace. Este parche evita el comportamiento actual (que podría provocar fallos en la pila IPv6 si se activa el enlace). $ ip link add macvlan1 link eno1 mtu 8 type macvlan # ¡Esto debería fallar! $ ip link sh dev macvlan1 5: macvlan1@eno1:  mtu 8 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link\/ether 02:47:6c:24:74:82 brd ff:ff:ff:ff:ff:ff $ ip link set macvlan1 mtu 67 Error: MTU menor que el mínimo del dispositivo. $ ip link set macvlan1 mtu 68 $ ip link set macvlan1 mtu 8 Error: mtu menor que el mínimo del dispositivo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b055c719d8f94c15ec9b7659978133030c6a353","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/650137a7c0b2892df2e5b0bc112d7b09a78c93c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a62aa84fe19eb24d083d600a074c009a0a66d4f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b64085b00044bdf3cd1c9825e9ef5b2e0feae91a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2fee7d121d189c6dc905b727d60e7043a6655bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e41cbf98df22d08402e65174d147cbb187fe1a33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e929ec98c0c3b10d9c07f3776df0c1a02d7a763e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49777","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.870","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: i8042 - fix leaking of platform device on module removal\n\nAvoid resetting the module-wide i8042_platform_device pointer in\ni8042_probe() or i8042_remove(), so that the device can be properly\ndestroyed by i8042_exit() on module unload."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Entrada: i8042 - reparar fuga del dispositivo de plataforma al quitar un módulo Evite restablecer el puntero i8042_platform_device de todo el módulo en i8042_probe() o i8042_remove(), de modo que el dispositivo pueda ser destruido correctamente por i8042_exit() al descargar el módulo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f25add5ecf88de0f8ff2b27b6c0731a1f1b38ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f348b60c79671eee33c1389efe89109c93047da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81cd7e8489278d28794e7b272950c3e00c344e44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81df118e79b2136b5c016394f67a051dc508b7b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a32cd7feb0127bf629a82686b6e2c128139a86e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5f7f6e63fed9c2ed09725d90059a28907e197e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49778","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:00.980","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64\/mm: fix incorrect file_map_count for non-leaf pmd\/pud\n\nThe page table check trigger BUG_ON() unexpectedly when collapse hugepage:\n\n ------------[ cut here ]------------\n kernel BUG at mm\/page_table_check.c:82!\n Internal error: Oops - BUG: 00000000f2000800 [#1] SMP\n Dumping ftrace buffer:\n    (ftrace buffer empty)\n Modules linked in:\n CPU: 6 PID: 68 Comm: khugepaged Not tainted 6.1.0-rc3+ #750\n Hardware name: linux,dummy-virt (DT)\n pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : page_table_check_clear.isra.0+0x258\/0x3f0\n lr : page_table_check_clear.isra.0+0x240\/0x3f0\n[...]\n Call trace:\n  page_table_check_clear.isra.0+0x258\/0x3f0\n  __page_table_check_pmd_clear+0xbc\/0x108\n  pmdp_collapse_flush+0xb0\/0x160\n  collapse_huge_page+0xa08\/0x1080\n  hpage_collapse_scan_pmd+0xf30\/0x1590\n  khugepaged_scan_mm_slot.constprop.0+0x52c\/0xac8\n  khugepaged+0x338\/0x518\n  kthread+0x278\/0x2f8\n  ret_from_fork+0x10\/0x20\n[...]\n\nSince pmd_user_accessible_page() doesn't check if a pmd is leaf, it\ndecrease file_map_count for a non-leaf pmd comes from collapse_huge_page().\nand so trigger BUG_ON() unexpectedly.\n\nFix this problem by using pmd_leaf() insteal of pmd_present() in\npmd_user_accessible_page(). Moreover, use pud_leaf() for\npud_user_accessible_page() too."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm64\/mm: corrige el file_map_count incorrecto para pmd\/pud que no es de hoja. La comprobación de la tabla de páginas se activa inesperadamente BUG_ON() cuando se colapsa hugepage: ------------[ cortar aquí ]------------ ¡ERROR del kernel en mm\/page_table_check.c:82! Error interno: Ups - BUG: 00000000f2000800 [#1] SMP Volcando búfer ftrace: (búfer ftrace vacío) Módulos enlazados: CPU: 6 PID: 68 Comm: khugepaged No contaminado 6.1.0-rc3+ #750 Nombre del hardware: linux,dummy-virt (DT) pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : page_table_check_clear.isra.0+0x258\/0x3f0 lr : page_table_check_clear.isra.0+0x240\/0x3f0 [...] Rastreo de llamadas: page_table_check_clear.isra.0+0x258\/0x3f0 __page_table_check_pmd_clear+0xbc\/0x108 pmdp_collapse_flush+0xb0\/0x160 collapse_huge_page+0xa08\/0x1080 hpage_collapse_scan_pmd+0xf30\/0x1590 khugepaged_scan_mm_slot.constprop.0+0x52c\/0xac8 khugepaged+0x338\/0x518 kthread+0x278\/0x2f8 ret_from_fork+0x10\/0x20 [...] Dado que pmd_user_accessible_page() no comprueba si un pmd es hoja, disminuye file_map_count para un pmd que no es hoja que proviene de colapso_huge_page() y, por lo tanto, activa BUG_ON() inesperadamente. Solucione este problema usando pmd_leaf() en lugar de pmd_present() en pmd_user_accessible_page(). Además, use pud_leaf() para pud_user_accessible_page()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d458046df634088611d44fd77f45465e833ef78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b47348fc0b18a78c96f8474cc90b7525ad1bbfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49779","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.080","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Skip clearing aggrprobe's post_handler in kprobe-on-ftrace case\n\nIn __unregister_kprobe_top(), if the currently unregistered probe has\npost_handler but other child probes of the aggrprobe do not have\npost_handler, the post_handler of the aggrprobe is cleared. If this is\na ftrace-based probe, there is a problem. In later calls to\ndisarm_kprobe(), we will use kprobe_ftrace_ops because post_handler is\nNULL. But we're armed with kprobe_ipmodify_ops. This triggers a WARN in\n__disarm_kprobe_ftrace() and may even cause use-after-free:\n\n  Failed to disarm kprobe-ftrace at kernel_clone+0x0\/0x3c0 (error -2)\n  WARNING: CPU: 5 PID: 137 at kernel\/kprobes.c:1135 __disarm_kprobe_ftrace.isra.21+0xcf\/0xe0\n  Modules linked in: testKprobe_007(-)\n  CPU: 5 PID: 137 Comm: rmmod Not tainted 6.1.0-rc4-dirty #18\n  [...]\n  Call Trace:\n   <TASK>\n   __disable_kprobe+0xcd\/0xe0\n   __unregister_kprobe_top+0x12\/0x150\n   ? mutex_lock+0xe\/0x30\n   unregister_kprobes.part.23+0x31\/0xa0\n   unregister_kprobe+0x32\/0x40\n   __x64_sys_delete_module+0x15e\/0x260\n   ? do_user_addr_fault+0x2cd\/0x6b0\n   do_syscall_64+0x3a\/0x90\n   entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n   [...]\n\nFor the kprobe-on-ftrace case, we keep the post_handler setting to\nidentify this aggrprobe armed with kprobe_ipmodify_ops. This way we\ncan disarm it correctly."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: kprobes: Omitir la limpieza del post_handler de aggrprobe en el caso de kprobe-on-ftrace. En __unregister_kprobe_top(), si la sonda actualmente no registrada tiene post_handler, pero otras sondas secundarias de aggrprobe no lo tienen, se limpia el post_handler de aggrprobe. Si se trata de una sonda basada en ftrace, existe un problema. En llamadas posteriores a disarm_kprobe(), usaremos kprobe_ftrace_ops porque post_handler es NULL. Pero estamos preparados con kprobe_ipmodify_ops. Esto activa una ADVERTENCIA en __disarm_kprobe_ftrace() e incluso puede provocar un use-after-free: No se pudo desarmar kprobe-ftrace en kernel_clone+0x0\/0x3c0 (error -2) ADVERTENCIA: CPU: 5 PID: 137 en kernel\/kprobes.c:1135 __disarm_kprobe_ftrace.isra.21+0xcf\/0xe0 Módulos vinculados en: testKprobe_007(-) CPU: 5 PID: 137 Comm: rmmod No contaminado 6.1.0-rc4-dirty #18 [...] Seguimiento de llamadas:  __disable_kprobe+0xcd\/0xe0 __unregister_kprobe_top+0x12\/0x150 ? mutex_lock+0xe\/0x30 unregister_kprobes.part.23+0x31\/0xa0 unregister_kprobe+0x32\/0x40 __x64_sys_delete_module+0x15e\/0x260 ? do_user_addr_fault+0x2cd\/0x6b0 do_syscall_64+0x3a\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd [...] For the kprobe-on-ftrace case, we keep the post_handler setting to identify this aggrprobe armed with kprobe_ipmodify_ops. De esta forma, podemos desactivarla correctamente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55788ebbe8b365b4375bd56b4ba7db79d393a370","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dd7caf0bdc5d0bae7cf9776b4d739fb09bd5ebb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b0007b28dd970176f2e297c06ae63eea2447127","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d606ae1abcc3eab5408e42444d789dc7def51b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c49cc2c059b503e962c2f13a806c105f9b757df4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49780","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.200","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: tcm_loop: Fix possible name leak in tcm_loop_setup_hba_bus()\n\nIf device_register() fails in tcm_loop_setup_hba_bus(), the name allocated\nby dev_set_name() need be freed. As comment of device_register() says, it\nshould use put_device() to give up the reference in the error path. So fix\nthis by calling put_device(), then the name can be freed in kobject_cleanup().\nThe 'tl_hba' will be freed in tcm_loop_release_adapter(), so it don't need\ngoto error label in this case."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: scsi: target: tcm_loop: Se corrige una posible fuga de nombre en tcm_loop_setup_hba_bus(). Si device_register() falla en tcm_loop_setup_hba_bus(), se debe liberar el nombre asignado por dev_set_name(). Como se indica en el comentario de device_register(), se debe usar put_device() para liberar la referencia en la ruta de error. Para solucionar esto, se debe llamar a put_device(); luego, el nombre se puede liberar en kobject_cleanup(). El 'tl_hba' se liberará en tcm_loop_release_adapter(), por lo que no es necesario ir a la etiqueta de error en este caso."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28f7ff5e7559d226e63c7c5de74eb075a83d8c53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41a6b8b527a5957fab41c3c05e25ad125268e2e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75205f1b47a88c3fac4f30bd7567e89b2887c7fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a636772988bafab89278e7bb3420d8e8eacfe912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc68e428d4963af0201e92159629ab96948f0893","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dce0589a3faec9e2e543e97bca7e62592ec85585","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49781","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.307","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/x86\/amd: Fix crash due to race between amd_pmu_enable_all, perf NMI and throttling\n\namd_pmu_enable_all() does:\n\n      if (!test_bit(idx, cpuc->active_mask))\n              continue;\n\n      amd_pmu_enable_event(cpuc->events[idx]);\n\nA perf NMI of another event can come between these two steps. Perf NMI\nhandler internally disables and enables _all_ events, including the one\nwhich nmi-intercepted amd_pmu_enable_all() was in process of enabling.\nIf that unintentionally enabled event has very low sampling period and\ncauses immediate successive NMI, causing the event to be throttled,\ncpuc->events[idx] and cpuc->active_mask gets cleared by x86_pmu_stop().\nThis will result in amd_pmu_enable_event() getting called with event=NULL\nwhen amd_pmu_enable_all() resumes after handling the NMIs. This causes a\nkernel crash:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000198\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  [...]\n  Call Trace:\n   <TASK>\n   amd_pmu_enable_all+0x68\/0xb0\n   ctx_resched+0xd9\/0x150\n   event_function+0xb8\/0x130\n   ? hrtimer_start_range_ns+0x141\/0x4a0\n   ? perf_duration_warn+0x30\/0x30\n   remote_function+0x4d\/0x60\n   __flush_smp_call_function_queue+0xc4\/0x500\n   flush_smp_call_function_queue+0x11d\/0x1b0\n   do_idle+0x18f\/0x2d0\n   cpu_startup_entry+0x19\/0x20\n   start_secondary+0x121\/0x160\n   secondary_startup_64_no_verify+0xe5\/0xeb\n   <\/TASK>\n\namd_pmu_disable_all()\/amd_pmu_enable_all() calls inside perf NMI handler\nwere recently added as part of BRS enablement but I'm not sure whether\nwe really need them. We can just disable BRS in the beginning and enable\nit back while returning from NMI. This will solve the issue by not\nenabling those events whose active_masks are set but are not yet enabled\nin hw pmu."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: perf\/x86\/amd: Se corrige el fallo debido a la competencia entre amd_pmu_enable_all, perf NMI y la limitación. amd_pmu_enable_all() realiza lo siguiente: if (!test_bit(idx, cpuc-&gt;active_mask)) continue; amd_pmu_enable_event(cpuc-&gt;events[idx]); Un perf NMI de otro evento puede interponerse entre estos dos pasos. El controlador de perf NMI deshabilita y habilita internamente _todos_ los eventos, incluido el que amd_pmu_enable_all() interceptado por nmi estaba habilitando. Si ese evento habilitado involuntariamente tiene un período de muestreo muy bajo y causa NMI sucesivas inmediatas, lo que provoca su limitación, x86_pmu_stop() borra cpuc-&gt;events[idx] y cpuc-&gt;active_mask. Esto provocará que amd_pmu_enable_event() se llame con event=NULL cuando amd_pmu_enable_all() se reanude tras gestionar las NMI. Esto provoca un fallo del kernel: BUG: kernel NULL pointer dereference, address: 0000000000000198 #PF: acceso de lectura del supervisor en modo kernel #PF: error_code(0x0000) - not-present page [...] Rastreo de llamadas:   amd_pmu_enable_all+0x68\/0xb0 ctx_resched+0xd9\/0x150 event_function+0xb8\/0x130 ? hrtimer_start_range_ns+0x141\/0x4a0 ? perf_duration_warn+0x30\/0x30 remote_function+0x4d\/0x60 __flush_smp_call_function_queue+0xc4\/0x500 flush_smp_call_function_queue+0x11d\/0x1b0 do_idle+0x18f\/0x2d0 cpu_startup_entry+0x19\/0x20 start_secondary+0x121\/0x160 secondary_startup_64_no_verify+0xe5\/0xeb  amd_pmu_disable_all()\/amd_pmu_enable_all() Las llamadas dentro del controlador NMI de rendimiento se añadieron recientemente como parte de la habilitación de BRS, pero no estoy seguro de si realmente las necesitamos. Podemos deshabilitar BRS al principio y volver a habilitarlo al regresar de NMI. Esto solucionará el problema al no habilitar los eventos cuyas máscaras activas estén configuradas, pero que aún no estén habilitadas en la PMU de hardware."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/baa014b9543c8e5e94f5d15b66abfe60750b8284","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd5e454b856ed86b090336e269695d9908609b71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49782","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.410","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Improve missing SIGTRAP checking\n\nTo catch missing SIGTRAP we employ a WARN in __perf_event_overflow(),\nwhich fires if pending_sigtrap was already set: returning to user space\nwithout consuming pending_sigtrap, and then having the event fire again\nwould re-enter the kernel and trigger the WARN.\n\nThis, however, seemed to miss the case where some events not associated\nwith progress in the user space task can fire and the interrupt handler\nruns before the IRQ work meant to consume pending_sigtrap (and generate\nthe SIGTRAP).\n\nsyzbot gifted us this stack trace:\n\n | WARNING: CPU: 0 PID: 3607 at kernel\/events\/core.c:9313 __perf_event_overflow\n | Modules linked in:\n | CPU: 0 PID: 3607 Comm: syz-executor100 Not tainted 6.1.0-rc2-syzkaller-00073-g88619e77b33d #0\n | Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/11\/2022\n | RIP: 0010:__perf_event_overflow+0x498\/0x540 kernel\/events\/core.c:9313\n | <...>\n | Call Trace:\n |  <TASK>\n |  perf_swevent_hrtimer+0x34f\/0x3c0 kernel\/events\/core.c:10729\n |  __run_hrtimer kernel\/time\/hrtimer.c:1685 [inline]\n |  __hrtimer_run_queues+0x1c6\/0xfb0 kernel\/time\/hrtimer.c:1749\n |  hrtimer_interrupt+0x31c\/0x790 kernel\/time\/hrtimer.c:1811\n |  local_apic_timer_interrupt arch\/x86\/kernel\/apic\/apic.c:1096 [inline]\n |  __sysvec_apic_timer_interrupt+0x17c\/0x640 arch\/x86\/kernel\/apic\/apic.c:1113\n |  sysvec_apic_timer_interrupt+0x40\/0xc0 arch\/x86\/kernel\/apic\/apic.c:1107\n |  asm_sysvec_apic_timer_interrupt+0x16\/0x20 arch\/x86\/include\/asm\/idtentry.h:649\n | <...>\n |  <\/TASK>\n\nIn this case, syzbot produced a program with event type\nPERF_TYPE_SOFTWARE and config PERF_COUNT_SW_CPU_CLOCK. The hrtimer\nmanages to fire again before the IRQ work got a chance to run, all while\nnever having returned to user space.\n\nImprove the WARN to check for real progress in user space: approximate\nthis by storing a 32-bit hash of the current IP into pending_sigtrap,\nand if an event fires while pending_sigtrap still matches the previous\nIP, we assume no progress (false negatives are possible given we could\nreturn to user space and trigger again on the same IP)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: perf: Mejora de la comprobación de SIGTRAP faltantes. Para detectar la falta de SIGTRAP, empleamos una advertencia en __perf_event_overflow(), que se activa si pending_sigtrap ya estaba configurado: al regresar al espacio de usuario sin consumir pending_sigtrap y luego volver a activar el evento, se reingresaría al kernel y se activaría la advertencia. Sin embargo, esto parecía pasar por alto el caso en el que algunos eventos no asociados con el progreso en la tarea del espacio de usuario pueden activarse y el controlador de interrupciones se ejecuta antes del trabajo de IRQ destinado a consumir pending_sigtrap (y generar la SIGTRAP). syzbot nos proporcionó este seguimiento de pila: | ADVERTENCIA: CPU: 0 PID: 3607 en kernel\/events\/core.c:9313 __perf_event_overflow | Módulos enlazados en: | CPU: 0 PID: 3607 Comm: syz-executor100 No contaminado 6.1.0-rc2-syzkaller-00073-g88619e77b33d #0 | Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/11\/2022 | RIP: 0010:__perf_event_overflow+0x498\/0x540 kernel\/events\/core.c:9313 | &lt;...&gt; | Seguimiento de llamadas: |  | perf_swevent_hrtimer+0x34f\/0x3c0 kernel\/events\/core.c:10729 | __run_hrtimer kernel\/time\/hrtimer.c:1685 [inline] | __hrtimer_run_queues+0x1c6\/0xfb0 kernel\/time\/hrtimer.c:1749 | hrtimer_interrupt+0x31c\/0x790 kernel\/time\/hrtimer.c:1811 | local_apic_timer_interrupt arch\/x86\/kernel\/apic\/apic.c:1096 [inline] | __sysvec_apic_timer_interrupt+0x17c\/0x640 arch\/x86\/kernel\/apic\/apic.c:1113 | sysvec_apic_timer_interrupt+0x40\/0xc0 arch\/x86\/kernel\/apic\/apic.c:1107 | asm_sysvec_apic_timer_interrupt+0x16\/0x20 arch\/x86\/include\/asm\/idtentry.h:649 | &lt;...&gt; |  En este caso, syzbot generó un programa con el tipo de evento PERF_TYPE_SOFTWARE y la configuración PERF_COUNT_SW_CPU_CLOCK. El temporizador hrtimer se vuelve a ejecutar antes de que el trabajo de IRQ tenga la oportunidad de ejecutarse, sin haber regresado al espacio de usuario. Mejore el WARN para comprobar el progreso real en el espacio de usuario: aproxime esto almacenando un hash de 32 bits de la IP actual en pending_sigtrap. Si un evento se dispara mientras pending_sigtrap aún coincide con la IP anterior, asumimos que no hay progreso (los falsos negativos son posibles dado que podríamos regresar al espacio de usuario y disparar de nuevo en la misma IP)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35c60b4e8ca76712dd03bafe2598e31578248916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b09221f1b4944d2866d06ac35e59d7a6f8916c9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb88f9695460bec25aa30ba9072595025cf6c8af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49783","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.510","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/fpu: Drop fpregs lock before inheriting FPU permissions\n\nMike Galbraith reported the following against an old fork of preempt-rt\nbut the same issue also applies to the current preempt-rt tree.\n\n   BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:46\n   in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: systemd\n   preempt_count: 1, expected: 0\n   RCU nest depth: 0, expected: 0\n   Preemption disabled at:\n   fpu_clone\n   CPU: 6 PID: 1 Comm: systemd Tainted: G            E       (unreleased)\n   Call Trace:\n    <TASK>\n    dump_stack_lvl\n    ? fpu_clone\n    __might_resched\n    rt_spin_lock\n    fpu_clone\n    ? copy_thread\n    ? copy_process\n    ? shmem_alloc_inode\n    ? kmem_cache_alloc\n    ? kernel_clone\n    ? __do_sys_clone\n    ? do_syscall_64\n    ? __x64_sys_rt_sigprocmask\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? syscall_exit_to_user_mode\n    ? do_syscall_64\n    ? exc_page_fault\n    ? entry_SYSCALL_64_after_hwframe\n    <\/TASK>\n\nMike says:\n\n  The splat comes from fpu_inherit_perms() being called under fpregs_lock(),\n  and us reaching the spin_lock_irq() therein due to fpu_state_size_dynamic()\n  returning true despite static key __fpu_state_size_dynamic having never\n  been enabled.\n\nMike's assessment looks correct. fpregs_lock on a PREEMPT_RT kernel disables\npreemption so calling spin_lock_irq() in fpu_inherit_perms() is unsafe. This\nproblem exists since commit\n\n  9e798e9aa14c (\"x86\/fpu: Prepare fpu_clone() for dynamically enabled features\").\n\nEven though the original bug report should not have enabled the paths at\nall, the bug still exists.\n\nfpregs_lock is necessary when editing the FPU registers or a task's FP\nstate but it is not necessary for fpu_inherit_perms(). The only write\nof any FP state in fpu_inherit_perms() is for the new child which is\nnot running yet and cannot context switch or be borrowed by a kernel\nthread yet. Hence, fpregs_lock is not protecting anything in the new\nchild until clone() completes and can be dropped earlier. The siglock\nstill needs to be acquired by fpu_inherit_perms() as the read of the\nparent's permissions has to be serialised.\n\n  [ bp: Cleanup splat. ]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86\/fpu: Eliminar el bloqueo de fpregs antes de heredar los permisos de FPU Mike Galbraith informó lo siguiente contra una antigua bifurcación de preempt-rt, pero el mismo problema también se aplica al árbol preempt-rt actual. ERROR: función inactiva llamada desde un contexto no válido en kernel\/locking\/spinlock_rt.c:46 in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: systemd preempt_count: 1, expected: 0 Profundidad de anidamiento de RCU: 0, expected: 0 Preempción deshabilitada en: fpu_clone CPU: 6 PID: 1 Comm: systemd Tainted: GE (no publicado) Rastreo de llamadas:   dump_stack_lvl ? fpu_clone __might_resched rt_spin_lock fpu_clone ? copy_thread ? copy_process ? shmem_alloc_inode ? kmem_cache_alloc ? kernel_clone ? __do_sys_clone ? do_syscall_64 ? __x64_sys_rt_sigprocmask ? syscall_exit_to_user_mode ? do_syscall_64 ? syscall_exit_to_user_mode ? do_syscall_64 ? syscall_exit_to_user_mode ? do_syscall_64 ? exc_page_fault ? entry_SYSCALL_64_after_hwframe   Mike dice: El problema se debe a que fpu_inherit_perms() se llama bajo fpregs_lock() y a que alcanzamos spin_lock_irq() debido a que fpu_state_size_dynamic() devuelve verdadero a pesar de que la clave estática __fpu_state_size_dynamic nunca se ha habilitado. La evaluación de Mike parece correcta. fpregs_lock en un kernel PREEMPT_RT deshabilita la preempción, por lo que llamar a spin_lock_irq() en fpu_inherit_perms() no es seguro. Este problema existe desde la confirmación 9e798e9aa14c (\"x86\/fpu: Preparar fpu_clone() para funciones habilitadas dinámicamente\"). Aunque el informe de error original no debería haber habilitado las rutas, el error persiste. fpregs_lock es necesario al editar los registros de FPU o el estado de FP de una tarea, pero no es necesario para fpu_inherit_perms(). La única escritura de cualquier estado de FP en fpu_inherit_perms() es para el nuevo hijo, que aún no se está ejecutando y aún no puede cambiar de contexto ni ser tomado prestado por un hilo del kernel. Por lo tanto, fpregs_lock no protege nada en el nuevo hijo hasta que clone() se complete y pueda eliminarse antes. El siglock aún debe ser adquirido por fpu_inherit_perms(), ya que la lectura de los permisos del padre debe serializarse. [bp: Limpieza splat.]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36b038791e1e2baea892e9276588815fd14894b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e8a7a1780af3da65e78a615f7d0874da6aabb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49784","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.610","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/x86\/amd\/uncore: Fix memory leak for events array\n\nWhen a CPU comes online, the per-CPU NB and LLC uncore contexts are\nfreed but not the events array within the context structure. This\ncauses a memory leak as identified by the kmemleak detector.\n\n  [...]\n  unreferenced object 0xffff8c5944b8e320 (size 32):\n    comm \"swapper\/0\", pid 1, jiffies 4294670387 (age 151.072s)\n    hex dump (first 32 bytes):\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace:\n      [<000000000759fb79>] amd_uncore_cpu_up_prepare+0xaf\/0x230\n      [<00000000ddc9e126>] cpuhp_invoke_callback+0x2cf\/0x470\n      [<0000000093e727d4>] cpuhp_issue_call+0x14d\/0x170\n      [<0000000045464d54>] __cpuhp_setup_state_cpuslocked+0x11e\/0x330\n      [<0000000069f67cbd>] __cpuhp_setup_state+0x6b\/0x110\n      [<0000000015365e0f>] amd_uncore_init+0x260\/0x321\n      [<00000000089152d2>] do_one_initcall+0x3f\/0x1f0\n      [<000000002d0bd18d>] kernel_init_freeable+0x1ca\/0x212\n      [<0000000030be8dde>] kernel_init+0x11\/0x120\n      [<0000000059709e59>] ret_from_fork+0x22\/0x30\n  unreferenced object 0xffff8c5944b8dd40 (size 64):\n    comm \"swapper\/0\", pid 1, jiffies 4294670387 (age 151.072s)\n    hex dump (first 32 bytes):\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace:\n      [<00000000306efe8b>] amd_uncore_cpu_up_prepare+0x183\/0x230\n      [<00000000ddc9e126>] cpuhp_invoke_callback+0x2cf\/0x470\n      [<0000000093e727d4>] cpuhp_issue_call+0x14d\/0x170\n      [<0000000045464d54>] __cpuhp_setup_state_cpuslocked+0x11e\/0x330\n      [<0000000069f67cbd>] __cpuhp_setup_state+0x6b\/0x110\n      [<0000000015365e0f>] amd_uncore_init+0x260\/0x321\n      [<00000000089152d2>] do_one_initcall+0x3f\/0x1f0\n      [<000000002d0bd18d>] kernel_init_freeable+0x1ca\/0x212\n      [<0000000030be8dde>] kernel_init+0x11\/0x120\n      [<0000000059709e59>] ret_from_fork+0x22\/0x30\n  [...]\n\nFix the problem by freeing the events array before freeing the uncore\ncontext."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: perf\/x86\/amd\/uncore: Se corrige una fuga de memoria en la matriz de eventos. Cuando una CPU se conecta, se liberan los contextos de núcleo único (NB) y LLC por CPU, pero no la matriz de eventos dentro de la estructura del contexto. Esto provoca una fuga de memoria, identificada por el detector kmemleak. [...] objeto sin referencia 0xffff8c5944b8e320 (tamaño 32): comm \"swapper\/0\", pid 1, jiffies 4294670387 (edad 151.072s) volcado hexadecimal (primeros 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;000000000759fb79&gt;] amd_uncore_cpu_up_prepare+0xaf\/0x230 [&lt;00000000ddc9e126&gt;] cpuhp_invoke_callback+0x2cf\/0x470 [&lt;0000000093e727d4&gt;] cpuhp_issue_call+0x14d\/0x170 [&lt;0000000045464d54&gt;] __cpuhp_setup_state_cpuslocked+0x11e\/0x330 [&lt;0000000069f67cbd&gt;] __cpuhp_setup_state+0x6b\/0x110 [&lt;0000000015365e0f&gt;] amd_uncore_init+0x260\/0x321 [&lt;00000000089152d2&gt;] do_one_initcall+0x3f\/0x1f0 [&lt;000000002d0bd18d&gt;] kernel_init_freeable+0x1ca\/0x212 [&lt;0000000030be8dde&gt;] kernel_init+0x11\/0x120 [&lt;0000000059709e59&gt;] ret_from_fork+0x22\/0x30 objeto sin referencia 0xffff8c5944b8dd40 (tamaño 64): comm \"swapper\/0\", pid 1, jiffies 4294670387 (edad 151.072s) volcado hexadecimal (primeros 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ seguimiento inverso: [&lt;00000000306efe8b&gt;] preparación de CPU activada de AMD sin núcleo + 0x183\/0x230 [&lt;00000000ddc9e126&gt;] devolución de llamada de invocación de CPUHp + 0x2cf\/0x470 [&lt;0000000093e727d4&gt;] llamada de emisión de CPUHp + 0x14d\/0x170 [&lt;0000000045464d54&gt;] estado de configuración de CPUHp bloqueado + 0x11e\/0x330 [&lt;0000000069f67cbd&gt;] __cpuhp_setup_state+0x6b\/0x110 [&lt;0000000015365e0f&gt;] amd_uncore_init+0x260\/0x321 [&lt;00000000089152d2&gt;] do_one_initcall+0x3f\/0x1f0 [&lt;000000002d0bd18d&gt;] kernel_init_freeable+0x1ca\/0x212 [&lt;0000000030be8dde&gt;] kernel_init+0x11\/0x120 [&lt;0000000059709e59&gt;] ret_from_fork+0x22\/0x30 [...] Solucione el problema liberando la matriz de eventos antes de liberar el contexto uncore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bdfe34597139cfcecd47a2eb97fea44d77157491","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f75be9885d49e3717de962345c4572ddab52b178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49785","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.713","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/sgx: Add overflow check in sgx_validate_offset_length()\n\nsgx_validate_offset_length() function verifies \"offset\" and \"length\"\narguments provided by userspace, but was missing an overflow check on\ntheir addition. Add it."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86\/sgx: Se ha añadido una comprobación de desbordamiento en sgx_validate_offset_length(). La función sgx_validate_offset_length() verifica los argumentos \"offset\" y \"length\" proporcionados por el espacio de usuario, pero no incluía una comprobación de desbordamiento al añadirlos. Añádala."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b1c10fb754b0b67165e3f055a4208e5ba26dc89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5277e3d633a5d4157987f4aff068caa55e36db19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0861f49bd946ff94fce4f82509c45e167f63690","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49786","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.813","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: properly pin the parent in blkcg_css_online\n\nblkcg_css_online is supposed to pin the blkcg of the parent, but\n397c9f46ee4d refactored things and along the way, changed it to pin the\ncss instead.  This results in extra pins, and we end up leaking blkcgs\nand cgroups."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: blk-cgroup: fija correctamente el padre en blkcg_css_online. Se supone que blkcg_css_online fija el blkcg del padre, pero 397c9f46ee4d refactorizó las cosas y, de paso, lo modificó para fijar el CSS. Esto genera fijaciones adicionales y terminamos filtrando blkcgs y cgroups."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d118247e404d6338f7b90636a3c6b95a387ed163","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7dbd43f4a828fa1d9a8614d5b0ac40aee6375fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49787","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:01.920","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdhci-pci: Fix possible memory leak caused by missing pci_dev_put()\n\npci_get_device() will increase the reference count for the returned\npci_dev. We need to use pci_dev_put() to decrease the reference count\nbefore amd_probe() returns. There is no problem for the 'smbus_dev ==\nNULL' branch because pci_dev_put() can also handle the NULL input\nparameter case."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mmc: sdhci-pci: Se corrige una posible fuga de memoria causada por la omisión de pci_dev_put(). pci_get_device() aumentará el recuento de referencias para el pci_dev devuelto. Necesitamos usar pci_dev_put() para disminuir el recuento de referencias antes de que amd_probe() regrese. No hay problema para la rama 'smbus_dev == NULL', ya que pci_dev_put() también puede gestionar el caso del parámetro de entrada NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/222cfa0118aa68687ace74aab8fdf77ce8fbd7e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27f712cd47d65e14cd52cc32a23d42aeef583d5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35bca18092685b488003509fef7055aa2d4f2ebc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4423866d31a06a810db22062ed13389416a66b22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dbd6378dbf96787d6dbcca44156c511ae085ea3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7570e5b5419ffd34b6dc45a88c51e113a9a187e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a99a547658e5d451f01ed307426286716b6f01bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.027","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc\/vmw_vmci: fix an infoleak in vmci_host_do_receive_datagram()\n\n`struct vmci_event_qp` allocated by qp_notify_peer() contains padding,\nwhich may carry uninitialized data to the userspace, as observed by\nKMSAN:\n\n  BUG: KMSAN: kernel-infoleak in instrument_copy_to_user .\/include\/linux\/instrumented.h:121\n   instrument_copy_to_user .\/include\/linux\/instrumented.h:121\n   _copy_to_user+0x5f\/0xb0 lib\/usercopy.c:33\n   copy_to_user .\/include\/linux\/uaccess.h:169\n   vmci_host_do_receive_datagram drivers\/misc\/vmw_vmci\/vmci_host.c:431\n   vmci_host_unlocked_ioctl+0x33d\/0x43d0 drivers\/misc\/vmw_vmci\/vmci_host.c:925\n   vfs_ioctl fs\/ioctl.c:51\n  ...\n\n  Uninit was stored to memory at:\n   kmemdup+0x74\/0xb0 mm\/util.c:131\n   dg_dispatch_as_host drivers\/misc\/vmw_vmci\/vmci_datagram.c:271\n   vmci_datagram_dispatch+0x4f8\/0xfc0 drivers\/misc\/vmw_vmci\/vmci_datagram.c:339\n   qp_notify_peer+0x19a\/0x290 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1479\n   qp_broker_attach drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1662\n   qp_broker_alloc+0x2977\/0x2f30 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1750\n   vmci_qp_broker_alloc+0x96\/0xd0 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1940\n   vmci_host_do_alloc_queuepair drivers\/misc\/vmw_vmci\/vmci_host.c:488\n   vmci_host_unlocked_ioctl+0x24fd\/0x43d0 drivers\/misc\/vmw_vmci\/vmci_host.c:927\n  ...\n\n  Local variable ev created at:\n   qp_notify_peer+0x54\/0x290 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1456\n   qp_broker_attach drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1662\n   qp_broker_alloc+0x2977\/0x2f30 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1750\n\n  Bytes 28-31 of 48 are uninitialized\n  Memory access of size 48 starts at ffff888035155e00\n  Data copied to user address 0000000020000100\n\nUse memset() to prevent the infoleaks.\n\nAlso speculatively fix qp_notify_peer_local(), which may suffer from the\nsame problem."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: misc\/vmw_vmci: se corrige una fuga de información en vmci_host_do_receive_datagram() `struct vmci_event_qp` asignado por qp_notify_peer() que contiene relleno, que puede llevar datos no inicializados al espacio de usuario, como lo observó KMSAN: ERROR: KMSAN: fuga de información del kernel en instrument_copy_to_user .\/include\/linux\/instrumented.h:121 instrument_copy_to_user .\/include\/linux\/instrumented.h:121 _copy_to_user+0x5f\/0xb0 lib\/usercopy.c:33 copy_to_user .\/include\/linux\/uaccess.h:169 vmci_host_do_receive_datagram drivers\/misc\/vmw_vmci\/vmci_host.c:431 vmci_host_unlocked_ioctl+0x33d\/0x43d0 drivers\/misc\/vmw_vmci\/vmci_host.c:925 vfs_ioctl fs\/ioctl.c:51 ... Uninit se almacenó en la memoria en: kmemdup+0x74\/0xb0 mm\/util.c:131 dg_dispatch_as_host drivers\/misc\/vmw_vmci\/vmci_datagram.c:271 vmci_datagram_dispatch+0x4f8\/0xfc0 drivers\/misc\/vmw_vmci\/vmci_datagram.c:339 qp_notify_peer+0x19a\/0x290 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1479 qp_broker_attach controladores\/misc\/vmw_vmci\/vmci_queue_pair.c:1662 qp_broker_alloc+0x2977\/0x2f30 controladores\/misc\/vmw_vmci\/vmci_queue_pair.c:1750 vmci_qp_broker_alloc+0x96\/0xd0 controladores\/misc\/vmw_vmci\/vmci_queue_pair.c:1940 vmci_host_do_alloc_queuepair controladores\/misc\/vmw_vmci\/vmci_host.c:488 vmci_host_unlocked_ioctl+0x24fd\/0x43d0 controladores\/misc\/vmw_vmci\/vmci_host.c:927 ... Variable local ev creada en: qp_notify_peer+0x54\/0x290 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1456 qp_broker_attach drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1662 qp_broker_alloc+0x2977\/0x2f30 drivers\/misc\/vmw_vmci\/vmci_queue_pair.c:1750 Bytes 28-31 de 48 sin inicializar. El acceso a memoria de tamaño 48 comienza en ffff888035155e00. Datos copiados a la dirección de usuario 0000000020000100. Use memset() para evitar las filtraciones de información. También se especula que se debe corregir qp_notify_peer_local(), que podría presentar el mismo problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a275528025ae4bc7e2232866856dfebf84b2fad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62634b43d3c4e1bf62fd540196f7081bf0885c0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76c50d77b928a33e5290aaa9fdc10e88254ff8c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ccf7229b96fadc3a185d1391f814a604c7ef609","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e2f33c598370bcf828bab4d667d1d38bcd3c57d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5b0d06d9b10f5f43101bd6598b076c347f9295f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7061dd1fef2dfb6458cd521aef27aa66f510d31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f04586c2315cfd03d72ad0395705435e7ed07b1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49789","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.143","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: zfcp: Fix double free of FSF request when qdio send fails\n\nWe used to use the wrong type of integer in 'zfcp_fsf_req_send()' to cache\nthe FSF request ID when sending a new FSF request. This is used in case the\nsending fails and we need to remove the request from our internal hash\ntable again (so we don't keep an invalid reference and use it when we free\nthe request again).\n\nIn 'zfcp_fsf_req_send()' we used to cache the ID as 'int' (signed and 32\nbit wide), but the rest of the zfcp code (and the firmware specification)\nhandles the ID as 'unsigned long'\/'u64' (unsigned and 64 bit wide [s390x\nELF ABI]).  For one this has the obvious problem that when the ID grows\npast 32 bit (this can happen reasonably fast) it is truncated to 32 bit\nwhen storing it in the cache variable and so doesn't match the original ID\nanymore.  The second less obvious problem is that even when the original ID\nhas not yet grown past 32 bit, as soon as the 32nd bit is set in the\noriginal ID (0x80000000 = 2'147'483'648) we will have a mismatch when we\ncast it back to 'unsigned long'. As the cached variable is of a signed\ntype, the compiler will choose a sign-extending instruction to load the 32\nbit variable into a 64 bit register (e.g.: 'lgf %r11,188(%r15)'). So once\nwe pass the cached variable into 'zfcp_reqlist_find_rm()' to remove the\nrequest again all the leading zeros will be flipped to ones to extend the\nsign and won't match the original ID anymore (this has been observed in\npractice).\n\nIf we can't successfully remove the request from the hash table again after\n'zfcp_qdio_send()' fails (this happens regularly when zfcp cannot notify\nthe adapter about new work because the adapter is already gone during\ne.g. a ChpID toggle) we will end up with a double free.  We unconditionally\nfree the request in the calling function when 'zfcp_fsf_req_send()' fails,\nbut because the request is still in the hash table we end up with a stale\nmemory reference, and once the zfcp adapter is either reset during recovery\nor shutdown we end up freeing the same memory twice.\n\nThe resulting stack traces vary depending on the kernel and have no direct\ncorrelation to the place where the bug occurs. Here are three examples that\nhave been seen in practice:\n\n  list_del corruption. next->prev should be 00000001b9d13800, but was 00000000dead4ead. (next=00000001bd131a00)\n  ------------[ cut here ]------------\n  kernel BUG at lib\/list_debug.c:62!\n  monitor event: 0040 ilc:2 [#1] PREEMPT SMP\n  Modules linked in: ...\n  CPU: 9 PID: 1617 Comm: zfcperp0.0.1740 Kdump: loaded\n  Hardware name: ...\n  Krnl PSW : 0704d00180000000 00000003cbeea1f8 (__list_del_entry_valid+0x98\/0x140)\n             R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 RI:0 EA:3\n  Krnl GPRS: 00000000916d12f1 0000000080000000 000000000000006d 00000003cb665cd6\n             0000000000000001 0000000000000000 0000000000000000 00000000d28d21e8\n             00000000d3844000 00000380099efd28 00000001bd131a00 00000001b9d13800\n             00000000d3290100 0000000000000000 00000003cbeea1f4 00000380099efc70\n  Krnl Code: 00000003cbeea1e8: c020004f68a7        larl    %r2,00000003cc8d7336\n             00000003cbeea1ee: c0e50027fd65        brasl   %r14,00000003cc3e9cb8\n            #00000003cbeea1f4: af000000            mc      0,0\n            >00000003cbeea1f8: c02000920440        larl    %r2,00000003cd12aa78\n             00000003cbeea1fe: c0e500289c25        brasl   %r14,00000003cc3fda48\n             00000003cbeea204: b9040043            lgr     %r4,%r3\n             00000003cbeea208: b9040051            lgr     %r5,%r1\n             00000003cbeea20c: b9040032            lgr     %r3,%r2\n  Call Trace:\n   [<00000003cbeea1f8>] __list_del_entry_valid+0x98\/0x140\n  ([<00000003cbeea1f4>] __list_del_entry_valid+0x94\/0x140)\n   [<000003ff7ff502fe>] zfcp_fsf_req_dismiss_all+0xde\/0x150 [zfcp]\n   [<000003ff7ff49cd0>] zfcp_erp_strategy_do_action+0x160\/0x280 [zfcp]\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: scsi: zfcp: Arregla doble liberación de solicitud FSF cuando falla el envío de qdio Solíamos usar el tipo incorrecto de entero en 'zfcp_fsf_req_send()' para almacenar en caché el ID de solicitud FSF al enviar una nueva solicitud FSF. Esto se usa en caso de que el envío falle y necesitemos eliminar la solicitud de nuestra tabla hash interna nuevamente (para no mantener una referencia no válida y usarla cuando liberemos la solicitud nuevamente). En 'zfcp_fsf_req_send()' solíamos almacenar en caché el ID como 'int' (con signo y 32 bits de ancho), pero el resto del código zfcp (y la especificación del firmware) maneja el ID como 'unsigned long'\/'u64' (sin signo y 64 bits de ancho [s390x ELF ABI]). Por un lado, esto presenta el problema obvio de que, cuando el ID supera los 32 bits (esto puede ocurrir con relativa rapidez), se trunca a 32 bits al almacenarlo en la variable de caché, por lo que ya no coincide con el ID original. El segundo problema, menos obvio, es que, incluso cuando el ID original aún no supera los 32 bits, en cuanto se establece el bit 32 en el ID original (0x80000000 = 2'147'483'648), se produce una discrepancia al convertirlo a 'unsigned long'. Como la variable en caché es de tipo con signo, el compilador utilizará una instrucción de extensión de signo para cargar la variable de 32 bits en un registro de 64 bits (p. ej., 'lgf %r11,188(%r15)'). Entonces, una vez que pasamos la variable en caché a 'zfcp_reqlist_find_rm()' para eliminar la solicitud de nuevo, todos los ceros iniciales se invertirán a unos para extender el signo y ya no coincidirán con el ID original (esto se ha observado en la práctica). Si no podemos eliminar correctamente la solicitud de la tabla hash de nuevo después de que 'zfcp_qdio_send()' falle (esto sucede regularmente cuando zfcp no puede notificar al adaptador sobre el nuevo trabajo porque el adaptador ya se ha ido durante, por ejemplo, una conmutación de ChpID), terminaremos con una doble liberación. Liberamos incondicionalmente la solicitud en la función de llamada cuando 'zfcp_fsf_req_send()' falla, pero debido a que la solicitud aún está en la tabla hash, terminamos con una referencia de memoria obsoleta, y una vez que el adaptador zfcp se reinicia durante la recuperación o el apagado, terminamos liberando la misma memoria dos veces. Los seguimientos de pila resultantes varían según el kernel y no tienen correlación directa con el lugar donde ocurre el error. A continuación se muestran tres ejemplos que se han visto en la práctica: corrupción de list_del. next-&gt;prev debería ser 00000001b9d13800, pero era 00000000dead4ead. (next=00000001bd131a00) ------------[ cortar aquí ]------------ ¡ERROR del kernel en lib\/list_debug.c:62! evento de monitor: 0040 ilc:2 [#1] PREEMPT Módulos SMP vinculados: ... CPU: 9 PID: 1617 Comm: zfcperp0.0.1740 Kdump: cargado Nombre del hardware: ... Krnl PSW: 0704d00180000000 00000003cbeea1f8 (__list_del_entry_valid+0x98\/0x140) R:0 T:1 IO:1 EX:1 Clave:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 RI:0 EA:3 Krnl GPRS: 00000000916d12f1 0000000080000000 00000000000006d 00000003cb665cd6 0000000000000001 0000000000000000 0000000000000000 00000000d28d21e8 00000000d3844000 00000380099efd28 00000001bd131a00 00000001b9d13800 00000000d3290100 0000000000000000 00000003cbeea1f4 00000380099efc70 Código Krnl: 00000003cbeea1e8: c020004f68a7 larl %r2,00000003cc8d7336 00000003cbeea1ee: c0e50027fd65 brasl %r14,00000003cc3e9cb8 #00000003cbeea1f4: af000000 mc 0,0 &gt;00000003cbeea1f8: c02000920440 larl %r2,00000003cd12aa78 00000003cbeea1fe: c0e500289c25 brasl %r14,00000003cc3fda48 00000003cbeea204: b9040043 lgr %r4,%r3 00000003cbeea208: b9040051 lgr %r5,%r1 00000003cbeea20c: b9040032 lgr %r3,%r2 Rastreo de llamadas: [&lt;00000003cbeea1f8&gt;] __list_del_entry_valid+0x98\/0x140 ([&lt;00000003cbeea1f4&gt;] __list_del_entry_valid+0x94\/0x140) [&lt;000003ff7ff502fe&gt;] zfcp_fsf_req_dismiss_all+0xde\/0x150 [zfcp] [&lt;000003ff7ff49cd0&gt;] zfcp_erp_strategy_do_action+0x160\/0x280 [zfcp] ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0954256e970ecf371b03a6c9af2cf91b9c4085ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/11edbdee4399401f533adda9bffe94567aa08b96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bf8ed585501bb2dd0b5f67c824eab45adfbdccd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90a49a6b015fa439cd62e45121390284c125a91f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2c7d8f58e9cde8ac8d1f75e9d66c2a813ffe0ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49790","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.260","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: iforce - invert valid length check when fetching device IDs\n\nsyzbot is reporting uninitialized value at iforce_init_device() [1], for\ncommit 6ac0aec6b0a6 (\"Input: iforce - allow callers supply data buffer\nwhen fetching device IDs\") is checking that valid length is shorter than\nbytes to read. Since iforce_get_id_packet() stores valid length when\nreturning 0, the caller needs to check that valid length is longer than or\nequals to bytes to read."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Entrada: iforce - invierte la comprobación de longitud válida al obtener los ID de dispositivo. syzbot informa un valor no inicializado en iforce_init_device() [1], para el commit 6ac0aec6b0a6 (\"Entrada: iforce - permite que los llamantes suministren el búfer de datos al obtener los ID de dispositivo\") y comprueba que la longitud válida sea menor que los bytes a leer. Dado que iforce_get_id_packet() almacena la longitud válida al devolver 0, el llamante debe comprobar que la longitud válida sea mayor o igual que los bytes a leer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24cc679abbf31477d0cc6106ec83c2fbae6b3cdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d53797ce7ce8fb1d95a5bebc5efa9418c4217a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6365569d62a75ddf53fb0c2936c16587a365984c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8ebf250997c5fb253582f42bfe98673801ebebd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdd57c20d4408cac3c3c535c120d244e083406c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49791","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.367","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: fix multishot accept request leaks\n\nHaving REQ_F_POLLED set doesn't guarantee that the request is\nexecuted as a multishot from the polling path. Fortunately for us, if\nthe code thinks it's multishot issue when it's not, it can only ask to\nskip completion so leaking the request. Use issue_flags to mark\nmultipoll issues."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: io_uring: corrección de fugas de solicitudes de aceptación multishot. Tener REQ_F_POLLED configurado no garantiza que la solicitud se ejecute como multishot desde la ruta de sondeo. Afortunadamente, si el código considera que se trata de un problema multishot cuando no lo es, solo puede solicitar omitir la finalización, lo que provoca la fuga de la solicitud. Use issue_flags para marcar los problemas de multipoll."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e4626de856ef8f25ecd9c716e76d4f95ce95639","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91482864768a874c4290ef93b84a78f4f1dac51b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49792","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.460","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: mp2629: fix potential array out of bound access\n\nAdd sentinel at end of maps to avoid potential array out of\nbound access in iio core."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: iio: adc: mp2629: se corrige un posible acceso fuera de los límites de la matriz. Se agrega centinela al final de los mapas para evitar un posible acceso fuera de los límites de la matriz en el núcleo iio."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1678d4abb2dc2ca3b05b998a9d88616976e4f947","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/399b2105a2240e730b9f3880bd8f154247539aa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca1547ab15f48dc81624183ae17a2fd1bad06dfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d95b85c5084ad70011988861ee864529eefa1da0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49793","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.563","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: trigger: sysfs: fix possible memory leak in iio_sysfs_trig_init()\n\ndev_set_name() allocates memory for name, it need be freed\nwhen device_add() fails, call put_device() to give up the\nreference that hold in device_initialize(), so that it can\nbe freed in kobject_cleanup() when the refcount hit to 0.\n\nFault injection test can trigger this:\n\nunreferenced object 0xffff8e8340a7b4c0 (size 32):\n  comm \"modprobe\", pid 243, jiffies 4294678145 (age 48.845s)\n  hex dump (first 32 bytes):\n    69 69 6f 5f 73 79 73 66 73 5f 74 72 69 67 67 65  iio_sysfs_trigge\n    72 00 a7 40 83 8e ff ff 00 86 13 c4 f6 ee ff ff  r..@............\n  backtrace:\n    [<0000000074999de8>] __kmem_cache_alloc_node+0x1e9\/0x360\n    [<00000000497fd30b>] __kmalloc_node_track_caller+0x44\/0x1a0\n    [<000000003636c520>] kstrdup+0x2d\/0x60\n    [<0000000032f84da2>] kobject_set_name_vargs+0x1e\/0x90\n    [<0000000092efe493>] dev_set_name+0x4e\/0x70"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: iio: trigger: sysfs: se corrige una posible fuga de memoria en iio_sysfs_trig_init(). dev_set_name() asigna memoria para name. Esta debe liberarse cuando device_add() falla. Se llama a put_device() para liberar la referencia contenida en device_initialize(), de modo que pueda liberarse en kobject_cleanup() cuando refcount llegue a 0. La prueba de inyección de fallos puede desencadenar esto: objeto sin referencia 0xffff8e8340a7b4c0 (tamaño 32): comm \"modprobe\", pid 243, jiffies 4294678145 (edad 48.845s) volcado hexadecimal (primeros 32 bytes): 69 69 6f 5f 73 79 73 66 73 5f 74 72 69 67 67 65 iio_sysfs_trigge 72 00 a7 40 83 8e ff ff 00 86 13 c4 f6 ee ff ff r..@............ backtrace: [&lt;0000000074999de8&gt;] __kmem_cache_alloc_node+0x1e9\/0x360 [&lt;00000000497fd30b&gt;] __kmalloc_node_track_caller+0x44\/0x1a0 [&lt;000000003636c520&gt;] kstrdup+0x2d\/0x60 [&lt;0000000032f84da2&gt;] kobject_set_name_vargs+0x1e\/0x90 [&lt;0000000092efe493&gt;] dev_set_name+0x4e\/0x70 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd52e141afde089304de470148d311b05c14564","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c4e65285bdea23fd36d2ff376006ac64db6f42e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a39382aa5411d64b25a71516c2c7480aab13bb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/656f670613662b6cc77aad14112db2803ad18fa8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dddf2699da296c84205582aaead6b43dd7e8c4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b47bb521961f027b4dcf8683337a7a1ba9e5ea1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efa17e90e1711bdb084e3954fa44afb6647331c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68c96821b61d2c71a35dbb8bf90c347fad624d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49794","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.673","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: at91_adc: fix possible memory leak in at91_adc_allocate_trigger()\n\nIf iio_trigger_register() returns error, it should call iio_trigger_free()\nto give up the reference that hold in iio_trigger_alloc(), so that it can\ncall iio_trig_release() to free memory when the refcount hit to 0."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: iio: adc: at91_adc: corrige posible pérdida de memoria en at91_adc_allocate_trigger() Si iio_trigger_register() devuelve un error, debe llamar a iio_trigger_free() para renunciar a la referencia contenida en iio_trigger_alloc(), de modo que pueda llamar a iio_trig_release() para liberar memoria cuando el recuento de referencias llegue a 0."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bf8c0aff8fb5c4edf3ba6728e6bedbd610d7f4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b29a7f2d52fb5281b30cf61c947d88bab18a29b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65f20301607d07ee279b0804d11a05a62a6c1a1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b75515728b628a9a7540f201efdeb8ca7299385","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85d2a8b287a89853c0dcfc5a97b5e9d36376fe37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0d98ae5a62a7bbad8fcf9fa22e0a1274197bbc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c27a3b6ba23350708cf5ab9962337447b51eb76d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3ce73f60599a483dca7becd4112508833a40ef9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49795","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.783","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrethook: fix a potential memleak in rethook_alloc()\n\nIn rethook_alloc(), the variable rh is not freed or passed out\nif handler is NULL, which could lead to a memleak, fix it.\n\n[Masami: Add \"rethook:\" tag to the title.]\n\nAcke-by: Masami Hiramatsu (Google) <mhiramat@kernel.org>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rethook: se corrige una posible fuga de memoria en rethook_alloc(). En rethook_alloc(), la variable rh no se libera ni se pasa si el manejador es NULL, lo que podría provocar una fuga de memoria. Corríjalo. [Masami: Añadir la etiqueta \"rethook:\" al título]. Por: Masami Hiramatsu (Google) "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a1ebe35cb3b7aa1f4b26b37e2a0b9ae68dc4ffb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbc5d1f9a8cc40ba2bc6779b36d2ea1f65bc027c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49796","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.887","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix potential null-ptr-deref on trace_array in kprobe_event_gen_test_exit()\n\nWhen test_gen_kprobe_cmd() failed after kprobe_event_gen_cmd_end(), it\nwill goto delete, which will call kprobe_event_delete() and release the\ncorresponding resource. However, the trace_array in gen_kretprobe_test\nwill point to the invalid resource. Set gen_kretprobe_test to NULL\nafter called kprobe_event_delete() to prevent null-ptr-deref.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000070\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCPU: 0 PID: 246 Comm: modprobe Tainted: G        W\n6.1.0-rc1-00174-g9522dc5c87da-dirty #248\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:__ftrace_set_clr_event_nolock+0x53\/0x1b0\nCode: e8 82 26 fc ff 49 8b 1e c7 44 24 0c ea ff ff ff 49 39 de 0f 84 3c\n01 00 00 c7 44 24 18 00 00 00 00 e8 61 26 fc ff 48 8b 6b 10 <44> 8b 65\n70 4c 8b 6d 18 41 f7 c4 00 02 00 00 75 2f\nRSP: 0018:ffffc9000159fe00 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffff88810971d268 RCX: 0000000000000000\nRDX: ffff8881080be600 RSI: ffffffff811b48ff RDI: ffff88810971d058\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000001\nR10: ffffc9000159fe58 R11: 0000000000000001 R12: ffffffffa0001064\nR13: ffffffffa000106c R14: ffff88810971d238 R15: 0000000000000000\nFS:  00007f89eeff6540(0000) GS:ffff88813b600000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000070 CR3: 000000010599e004 CR4: 0000000000330ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n __ftrace_set_clr_event+0x3e\/0x60\n trace_array_set_clr_event+0x35\/0x50\n ? 0xffffffffa0000000\n kprobe_event_gen_test_exit+0xcd\/0x10b [kprobe_event_gen_test]\n __x64_sys_delete_module+0x206\/0x380\n ? lockdep_hardirqs_on_prepare+0xd8\/0x190\n ? syscall_enter_from_user_mode+0x1c\/0x50\n do_syscall_64+0x3f\/0x90\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7f89eeb061b7"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tracing: kprobe: Se corrige la posible desreferencia de PTR nula en trace_array en kprobe_event_gen_test_exit(). Cuando test_gen_kprobe_cmd() falla después de kprobe_event_gen_cmd_end(), se ejecuta el comando \"eliminar\", lo que llama a kprobe_event_delete() y libera el recurso correspondiente. Sin embargo, trace_array en gen_kretprobe_test apuntará al recurso no válido. Establezca gen_kretprobe_test en NULL después de llamar a kprobe_event_delete() para evitar la desreferencia de PTR nula. ERROR: desreferencia de puntero NULL del núcleo, dirección: 0000000000000070 PGD 0 P4D 0 Oops: 0000 [#1] SMP PTI CPU: 0 PID: 246 Comm: modprobe Tainted: GW 6.1.0-rc1-00174-g9522dc5c87da-dirty #248 Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014 RIP: 0010:__ftrace_set_clr_event_nolock+0x53\/0x1b0 Code: e8 82 26 fc ff 49 8b 1e c7 44 24 0c ea ff ff ff 49 39 de 0f 84 3c 01 00 00 c7 44 24 18 00 00 00 00 e8 61 26 fc ff 48 8b 6b 10 &lt;44&gt; 8b 65 70 4c 8b 6d 18 41 f7 c4 00 02 00 00 75 2f RSP: 0018:ffffc9000159fe00 EFLAGS: 00010293 RAX: 0000000000000000 RBX: ffff88810971d268 RCX: 0000000000000000 RDX: ffff8881080be600 RSI: ffffffff811b48ff RDI: ffff88810971d058 RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000001 R10: ffffc9000159fe58 R11: 0000000000000001 R12: ffffffffa0001064 R13: ffffffffa000106c R14: ffff88810971d238 R15: 0000000000000000 FS: 00007f89eeff6540(0000) GS:ffff88813b600000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 0000000000000070 CR3: 000000010599e004 CR4: 0000000000330ef0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Call Trace:  __ftrace_set_clr_event+0x3e\/0x60 trace_array_set_clr_event+0x35\/0x50 ? 0xffffffffa0000000 kprobe_event_gen_test_exit+0xcd\/0x10b [kprobe_event_gen_test] __x64_sys_delete_module+0x206\/0x380 ? lockdep_hardirqs_on_prepare+0xd8\/0x190 ? syscall_enter_from_user_mode+0x1c\/0x50 do_syscall_64+0x3f\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd RIP: 0033:0x7f89eeb061b7 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22ea4ca9631eb137e64e5ab899e9c89cb6670959","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28a54854a95923b6266a9479ad660ca2cc0e1d5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/510c12f93674ea0a1423b24f36c67357168a262a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e57daa750369fedbf678346aec724a43b9a51749","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49797","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:02.990","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix potential null-ptr-deref on trace_event_file in kprobe_event_gen_test_exit()\n\nWhen trace_get_event_file() failed, gen_kretprobe_test will be assigned\nas the error code. If module kprobe_event_gen_test is removed now, the\nnull pointer dereference will happen in kprobe_event_gen_test_exit().\nCheck if gen_kprobe_test or gen_kretprobe_test is error code or NULL\nbefore dereference them.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000012\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCPU: 3 PID: 2210 Comm: modprobe Not tainted\n6.1.0-rc1-00171-g2159299a3b74-dirty #217\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:kprobe_event_gen_test_exit+0x1c\/0xb5 [kprobe_event_gen_test]\nCode: Unable to access opcode bytes at 0xffffffff9ffffff2.\nRSP: 0018:ffffc900015bfeb8 EFLAGS: 00010246\nRAX: ffffffffffffffea RBX: ffffffffa0002080 RCX: 0000000000000000\nRDX: ffffffffa0001054 RSI: ffffffffa0001064 RDI: ffffffffdfc6349c\nRBP: ffffffffa0000000 R08: 0000000000000004 R09: 00000000001e95c0\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000800\nR13: ffffffffa0002420 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007f56b75be540(0000) GS:ffff88813bc00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffff9ffffff2 CR3: 000000010874a006 CR4: 0000000000330ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n __x64_sys_delete_module+0x206\/0x380\n ? lockdep_hardirqs_on_prepare+0xd8\/0x190\n ? syscall_enter_from_user_mode+0x1c\/0x50\n do_syscall_64+0x3f\/0x90\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tracing: kprobe: Se corrige la posible desreferencia de puntero nulo en trace_event_file en kprobe_event_gen_test_exit(). Cuando trace_get_event_file() falla, se asigna gen_kretprobe_test como código de error. Si se elimina el módulo kprobe_event_gen_test, se producirá la desreferencia de puntero nulo en kprobe_event_gen_test_exit(). Compruebe si gen_kprobe_test o gen_kretprobe_test son códigos de error o nulos antes de desreferenciarlos. ERROR: desreferencia de puntero NULL del núcleo, dirección: 0000000000000012 PGD 0 P4D 0 Oops: 0000 [#1] SMP PTI CPU: 3 PID: 2210 Comm: modprobe No contaminado 6.1.0-rc1-00171-g2159299a3b74-dirty #217 Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014 RIP: 0010:kprobe_event_gen_test_exit+0x1c\/0xb5 [kprobe_event_gen_test] Código: No se puede acceder a los bytes del código de operación en 0xffffffff9ffffff2. RSP: 0018:ffffc900015bfeb8 EFLAGS: 00010246 RAX: ffffffffffffffea RBX: ffffffffa0002080 RCX: 000000000000000 RDX: ffffffffa0001054 RSI: ffffffffa0001064 RDI: ffffffffdfc6349c RBP: ffffffffa0000000 R08: 000000000000004 R09: 00000000001e95c0 R10: 000000000000000 R11: 000000000000001 R12: 0000000000000800 R13: ffffffffa0002420 R14: 0000000000000000 R15: 0000000000000000 FS: 00007f56b75be540(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: ffffffff9ffffff2 CR3: 000000010874a006 CR4: 0000000000330ee0 DR0: 00000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 000000000fffe0ff0 DR7: 0000000000000400 Rastreo de llamadas:  __x64_sys_delete_module+0x206\/0x380 ? lockdep_hardirqs_on_prepare+0xd8\/0x190 ? syscall_enter_from_user_mode+0x1c\/0x50 do_syscall_64+0x3f\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a41c0f2a5c3bf72b4c4e9dd4b1025378201e332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb70fcae4115d24b7e8cee17a6da8b1943f546bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d75267f59d7084e0468bd68beeb1bf9c71d7c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd0efd4f7bfe611a8339ba01bc2ac3c33e79159d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49798","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.097","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix race where eprobes can be called before the event\n\nThe flag that tells the event to call its triggers after reading the event\nis set for eprobes after the eprobe is enabled. This leads to a race where\nthe eprobe may be triggered at the beginning of the event where the record\ninformation is NULL. The eprobe then dereferences the NULL record causing\na NULL kernel pointer bug.\n\nTest for a NULL record to keep this from happening."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rastreo: Se corrige la ejecución donde se pueden llamar los eprobes antes del evento. El indicador que indica al evento que llame a sus desencadenadores después de leer el evento se establece para los eprobes después de habilitarlos. Esto provoca una ejecución donde el eprobe puede activarse al inicio del evento cuando la información del registro es nula. El eprobe entonces desreferencia el registro nulo, causando un error de puntero de kernel nulo. Pruebe si hay un registro nulo para evitar que esto suceda."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7291dec4f2d17a2d3fd1f789fb41e58476539f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73f5191467ffe3af82f27fe0ea6a8c2fac724d3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94eedf3dded5fb472ce97bfaf3ac1c6c29c35d26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49799","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.200","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix wild-memory-access in register_synth_event()\n\nIn register_synth_event(), if set_synth_event_print_fmt() failed, then\nboth trace_remove_event_call() and unregister_trace_event() will be\ncalled, which means the trace_event_call will call\n__unregister_trace_event() twice. As the result, the second unregister\nwill causes the wild-memory-access.\n\nregister_synth_event\n    set_synth_event_print_fmt failed\n    trace_remove_event_call\n        event_remove\n            if call->event.funcs then\n            __unregister_trace_event (first call)\n    unregister_trace_event\n        __unregister_trace_event (second call)\n\nFix the bug by avoiding to call the second __unregister_trace_event() by\nchecking if the first one is called.\n\ngeneral protection fault, probably for non-canonical address\n\t0xfbd59c0000000024: 0000 [#1] SMP KASAN PTI\nKASAN: maybe wild-memory-access in range\n[0xdead000000000120-0xdead000000000127]\nCPU: 0 PID: 3807 Comm: modprobe Not tainted\n6.1.0-rc1-00186-g76f33a7eedb4 #299\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:unregister_trace_event+0x6e\/0x280\nCode: 00 fc ff df 4c 89 ea 48 c1 ea 03 80 3c 02 00 0f 85 0e 02 00 00 48\nb8 00 00 00 00 00 fc ff df 4c 8b 63 08 4c 89 e2 48 c1 ea 03 <80> 3c 02\n00 0f 85 e2 01 00 00 49 89 2c 24 48 85 ed 74 28 e8 7a 9b\nRSP: 0018:ffff88810413f370 EFLAGS: 00010a06\nRAX: dffffc0000000000 RBX: ffff888105d050b0 RCX: 0000000000000000\nRDX: 1bd5a00000000024 RSI: ffff888119e276e0 RDI: ffffffff835a8b20\nRBP: dead000000000100 R08: 0000000000000000 R09: fffffbfff0913481\nR10: ffffffff8489a407 R11: fffffbfff0913480 R12: dead000000000122\nR13: ffff888105d050b8 R14: 0000000000000000 R15: ffff888105d05028\nFS:  00007f7823e8d540(0000) GS:ffff888119e00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f7823e7ebec CR3: 000000010a058002 CR4: 0000000000330ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n __create_synth_event+0x1e37\/0x1eb0\n create_or_delete_synth_event+0x110\/0x250\n synth_event_run_command+0x2f\/0x110\n test_gen_synth_cmd+0x170\/0x2eb [synth_event_gen_test]\n synth_event_gen_test_init+0x76\/0x9bc [synth_event_gen_test]\n do_one_initcall+0xdb\/0x480\n do_init_module+0x1cf\/0x680\n load_module+0x6a50\/0x70a0\n __do_sys_finit_module+0x12f\/0x1c0\n do_syscall_64+0x3f\/0x90\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rastreo: Se corrige el acceso a memoria no autorizado en register_synth_event(). En register_synth_event(), si set_synth_event_print_fmt() falla, se invocarán trace_remove_event_call() y unregister_trace_event(), lo que significa que trace_event_call llamará a __unregister_trace_event() dos veces. Como resultado, la segunda anulación del registro provocará el acceso a memoria no autorizado. register_synth_event set_synth_event_print_fmt falló trace_remove_event_call event_remove si call-&gt;event.funcs entonces __unregister_trace_event (primera llamada) unregister_trace_event __unregister_trace_event (segunda llamada) Corrija el error evitando llamar al segundo __unregister_trace_event() verificando si se llama al primero. Fallo de protección general, probablemente por dirección no canónica 0xfbd59c0000000024: 0000 [#1] SMP KASAN PTI KASAN: tal vez acceso a memoria salvaje en el rango [0xdead000000000120-0xdead000000000127] CPU: 0 PID: 3807 Comm: modprobe No contaminado 6.1.0-rc1-00186-g76f33a7eedb4 #299 Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04\/01\/2014 RIP: 0010:unregister_trace_event+0x6e\/0x280 Código: 00 fc ff df 4c 89 ea 48 c1 ea 03 80 3c 02 00 0f 85 0e 02 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 63 08 4c 89 e2 48 c1 ea 03 &lt;80&gt; 3c 02 00 0f 85 e2 01 00 00 49 89 2c 24 48 85 ed 74 28 e8 7a 9b RSP: 0018:ffff88810413f370 EFLAGS: 00010a06 RAX: dffffc0000000000 RBX: ffff888105d050b0 RCX: 0000000000000000 RDX: 1bd5a00000000024 RSI: ffff888119e276e0 RDI: ffffffff835a8b20 RBP: muerto000000000100 R08: 0000000000000000 R09: ffffbfff0913481 R10: ffffffff8489a407 R11: ffffbfff0913480 R12: muerto000000000122 R13: ffff888105d050b8 R14: 0000000000000000 R15: ffff888105d05028 FS: 00007f7823e8d540(0000) GS:ffff888119e00000(0000) knlGS:000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f7823e7ebec CR3: 000000010a058002 CR4: 0000000000330ef0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 00000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Rastreo de llamadas:  __create_synth_event+0x1e37\/0x1eb0 create_or_delete_synth_event+0x110\/0x250 synth_event_run_command+0x2f\/0x110 test_gen_synth_cmd+0x170\/0x2eb [synth_event_gen_test] synth_event_gen_test_init+0x76\/0x9bc [synth_event_gen_test] do_one_initcall+0xdb\/0x480 do_init_module+0x1cf\/0x680 load_module+0x6a50\/0x70a0 __do_sys_finit_module+0x12f\/0x1c0 do_syscall_64+0x3f\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b5f1c34d3f5a664a57a5a7557a50e4e3cc2505c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/315b149f08229a233d47532eb5da1707b28f764c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6517b97134f724d12f673f9fb4f456d75c7a905f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5bfa53e5036b3e7a80be902dd3719a930accabd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49800","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.303","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix memory leak in test_gen_synth_cmd() and test_empty_synth_event()\n\ntest_gen_synth_cmd() only free buf in fail path, hence buf will leak\nwhen there is no failure. Add kfree(buf) to prevent the memleak. The\nsame reason and solution in test_empty_synth_event().\n\nunreferenced object 0xffff8881127de000 (size 2048):\n  comm \"modprobe\", pid 247, jiffies 4294972316 (age 78.756s)\n  hex dump (first 32 bytes):\n    20 67 65 6e 5f 73 79 6e 74 68 5f 74 65 73 74 20   gen_synth_test\n    20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 64 5f   pid_t next_pid_\n  backtrace:\n    [<000000004254801a>] kmalloc_trace+0x26\/0x100\n    [<0000000039eb1cf5>] 0xffffffffa00083cd\n    [<000000000e8c3bc8>] 0xffffffffa00086ba\n    [<00000000c293d1ea>] do_one_initcall+0xdb\/0x480\n    [<00000000aa189e6d>] do_init_module+0x1cf\/0x680\n    [<00000000d513222b>] load_module+0x6a50\/0x70a0\n    [<000000001fd4d529>] __do_sys_finit_module+0x12f\/0x1c0\n    [<00000000b36c4c0f>] do_syscall_64+0x3f\/0x90\n    [<00000000bbf20cf3>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nunreferenced object 0xffff8881127df000 (size 2048):\n  comm \"modprobe\", pid 247, jiffies 4294972324 (age 78.728s)\n  hex dump (first 32 bytes):\n    20 65 6d 70 74 79 5f 73 79 6e 74 68 5f 74 65 73   empty_synth_tes\n    74 20 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69  t  pid_t next_pi\n  backtrace:\n    [<000000004254801a>] kmalloc_trace+0x26\/0x100\n    [<00000000d4db9a3d>] 0xffffffffa0008071\n    [<00000000c31354a5>] 0xffffffffa00086ce\n    [<00000000c293d1ea>] do_one_initcall+0xdb\/0x480\n    [<00000000aa189e6d>] do_init_module+0x1cf\/0x680\n    [<00000000d513222b>] load_module+0x6a50\/0x70a0\n    [<000000001fd4d529>] __do_sys_finit_module+0x12f\/0x1c0\n    [<00000000b36c4c0f>] do_syscall_64+0x3f\/0x90\n    [<00000000bbf20cf3>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rastreo: Se corrige la fuga de memoria en test_gen_synth_cmd() y test_empty_synth_event(). Test_gen_synth_cmd() solo libera búfer en la ruta de fallo, por lo que el búfer se filtrará aunque no haya fallo. Se ha añadido kfree(buf) para evitar la fuga de memoria. La misma razón y solución se aplican en test_empty_synth_event(). objeto sin referencia 0xffff8881127de000 (size 2048): comm \"modprobe\", pid 247, jiffies 4294972316 (age 78.756s) hex dump (first 32 bytes): 20 67 65 6e 5f 73 79 6e 74 68 5f 74 65 73 74 20 gen_synth_test 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 64 5f pid_t next_pid_ backtrace: [&lt;000000004254801a&gt;] kmalloc_trace+0x26\/0x100 [&lt;0000000039eb1cf5&gt;] 0xffffffffa00083cd [&lt;000000000e8c3bc8&gt;] 0xffffffffa00086ba [&lt;00000000c293d1ea&gt;] do_one_initcall+0xdb\/0x480 [&lt;00000000aa189e6d&gt;] do_init_module+0x1cf\/0x680 [&lt;00000000d513222b&gt;] load_module+0x6a50\/0x70a0 [&lt;000000001fd4d529&gt;] __do_sys_finit_module+0x12f\/0x1c0 [&lt;00000000b36c4c0f&gt;] do_syscall_64+0x3f\/0x90 [&lt;00000000bbf20cf3&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd unreferenced object 0xffff8881127df000 (size 2048): comm \"modprobe\", pid 247, jiffies 4294972324 (age 78.728s) hex dump (first 32 bytes): 20 65 6d 70 74 79 5f 73 79 6e 74 68 5f 74 65 73 empty_synth_tes 74 20 20 70 69 64 5f 74 20 6e 65 78 74 5f 70 69 t pid_t next_pi backtrace: [&lt;000000004254801a&gt;] kmalloc_trace+0x26\/0x100 [&lt;00000000d4db9a3d&gt;] 0xffffffffa0008071 [&lt;00000000c31354a5&gt;] 0xffffffffa00086ce [&lt;00000000c293d1ea&gt;] do_one_initcall+0xdb\/0x480 [&lt;00000000aa189e6d&gt;] do_init_module+0x1cf\/0x680 [&lt;00000000d513222b&gt;] load_module+0x6a50\/0x70a0 [&lt;000000001fd4d529&gt;] __do_sys_finit_module+0x12f\/0x1c0 [&lt;00000000b36c4c0f&gt;] do_syscall_64+0x3f\/0x90 [&lt;00000000bbf20cf3&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07ba4f0603aba288580866394f2916dfe55823a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e5baaa181a052d968701bb9c5b1d55847f00942","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65ba7e7c241122ef0a9e61d1920f2ae9689aa796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4527fef9afe5c903c718d0cd24609fe9c754250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49801","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.407","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix memory leak in tracing_read_pipe()\n\nkmemleak reports this issue:\n\nunreferenced object 0xffff888105a18900 (size 128):\n  comm \"test_progs\", pid 18933, jiffies 4336275356 (age 22801.766s)\n  hex dump (first 32 bytes):\n    25 73 00 90 81 88 ff ff 26 05 00 00 42 01 58 04  %s......&...B.X.\n    03 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<00000000560143a1>] __kmalloc_node_track_caller+0x4a\/0x140\n    [<000000006af00822>] krealloc+0x8d\/0xf0\n    [<00000000c309be6a>] trace_iter_expand_format+0x99\/0x150\n    [<000000005a53bdb6>] trace_check_vprintf+0x1e0\/0x11d0\n    [<0000000065629d9d>] trace_event_printf+0xb6\/0xf0\n    [<000000009a690dc7>] trace_raw_output_bpf_trace_printk+0x89\/0xc0\n    [<00000000d22db172>] print_trace_line+0x73c\/0x1480\n    [<00000000cdba76ba>] tracing_read_pipe+0x45c\/0x9f0\n    [<0000000015b58459>] vfs_read+0x17b\/0x7c0\n    [<000000004aeee8ed>] ksys_read+0xed\/0x1c0\n    [<0000000063d3d898>] do_syscall_64+0x3b\/0x90\n    [<00000000a06dda7f>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\niter->fmt alloced in\n  tracing_read_pipe() -> .. ->trace_iter_expand_format(), but not\nfreed, to fix, add free in tracing_release_pipe()"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tracing: Fix memory leakage in tracing_read_pipe() kmemleak informa de este problema: unreferenced object 0xffff888105a18900 (size 128): comm \"test_progs\", pid 18933, jiffies 4336275356 (age 22801.766s) hex dump (first 32 bytes): 25 73 00 90 81 88 ff ff 26 05 00 00 42 01 58 04 %s......&amp;...BX 03 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;00000000560143a1&gt;] __kmalloc_nodo_rastreador_llamador+0x4a\/0x140 [&lt;000000006af00822&gt;] krealloc+0x8d\/0xf0 [&lt;00000000c309be6a&gt;] trace_iter_expand_format+0x99\/0x150 [&lt;000000005a53bdb6&gt;] trace_check_vprintf+0x1e0\/0x11d0 [&lt;0000000065629d9d&gt;] trace_event_printf+0xb6\/0xf0 [&lt;000000009a690dc7&gt;] trace_raw_output_bpf_trace_printk+0x89\/0xc0 [&lt;00000000d22db172&gt;] imprimir_línea_de_seguimiento+0x73c\/0x1480 [&lt;00000000cdba76ba&gt;] conducto_de_lectura_de_seguimiento+0x45c\/0x9f0 [&lt;0000000015b58459&gt;] lectura_vfs+0x17b\/0x7c0 [&lt;000000004aeee8ed&gt;] lectura_ksys+0xed\/0x1c0 [&lt;0000000063d3d898&gt;] hacer_llamada_al_sistema_64+0x3b\/0x90 [&lt;00000000a06dda7f&gt;] entrada_SYSCALL_64_después_de_hwframe+0x63\/0xcd iter-&gt;fmt asignado en conducto_de_lectura_de_seguimiento() -&gt; .. -&gt;trace_iter_expand_format(), pero no se libera, para solucionarlo, agregue free en tracing_release_pipe()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c21ee020ce43d744ecd7f3e9bddfcaafef270ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/649e72070cbbb8600eb823833e4748f5a0815116","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7d3f8f33c113478737bc61bb32ec5f9a987da7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49802","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.510","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix null pointer dereference in ftrace_add_mod()\n\nThe @ftrace_mod is allocated by kzalloc(), so both the members {prev,next}\nof @ftrace_mode->list are NULL, it's not a valid state to call list_del().\nIf kstrdup() for @ftrace_mod->{func|module} fails, it goes to @out_free\ntag and calls free_ftrace_mod() to destroy @ftrace_mod, then list_del()\nwill write prev->next and next->prev, where null pointer dereference\nhappens.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nOops: 0002 [#1] PREEMPT SMP NOPTI\nCall Trace:\n <TASK>\n ftrace_mod_callback+0x20d\/0x220\n ? do_filp_open+0xd9\/0x140\n ftrace_process_regex.isra.51+0xbf\/0x130\n ftrace_regex_write.isra.52.part.53+0x6e\/0x90\n vfs_write+0xee\/0x3a0\n ? __audit_filter_op+0xb1\/0x100\n ? auditd_test_task+0x38\/0x50\n ksys_write+0xa5\/0xe0\n do_syscall_64+0x3a\/0x90\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nKernel panic - not syncing: Fatal exception\n\nSo call INIT_LIST_HEAD() to initialize the list member to fix this issue."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ftrace: Corregir la desreferencia de puntero nulo en ftrace_add_mod() @ftrace_mod se asigna mediante kzalloc(), por lo que ambos miembros {prev,next} de @ftrace_mode-&gt;list son NULL, no es un estado válido para llamar a list_del(). Si kstrdup() para @ftrace_mod-&gt;{func|module} falla, va a la etiqueta @out_free y llama a free_ftrace_mod() para destruir @ftrace_mod, entonces list_del() escribirá prev-&gt;next y next-&gt;prev, donde ocurre la desreferencia de puntero nulo. ERROR: desreferencia de puntero NULL del kernel, dirección: 0000000000000008 Oops: 0002 [#1] PREEMPT SMP NOPTI Call Trace:  ftrace_mod_callback+0x20d\/0x220 ? Pánico del kernel: no se sincroniza: Excepción fatal Por lo tanto, llame a INIT_LIST_HEAD() para inicializar el miembro de la lista para corregir este problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19ba6c8af9382c4c05dc6a0a79af3013b9a35cd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bea037a1abb23a6729bef36a2265a4565f5ea77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/665b4c6648bf2b91f69b33817f4321cf4c3cafe9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a14828caddad0d989495a72af678adf60992704","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e50eb4b1807017f6c2d5089064256ce2de8aef1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5bfc61f541d3f092b13dedcfe000d86eb8e133c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f715f31559b82e3f75ce047fa476de63d8107584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49803","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.617","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetdevsim: Fix memory leak of nsim_dev->fa_cookie\n\nkmemleak reports this issue:\n\nunreferenced object 0xffff8881bac872d0 (size 8):\n  comm \"sh\", pid 58603, jiffies 4481524462 (age 68.065s)\n  hex dump (first 8 bytes):\n    04 00 00 00 de ad be ef                          ........\n  backtrace:\n    [<00000000c80b8577>] __kmalloc+0x49\/0x150\n    [<000000005292b8c6>] nsim_dev_trap_fa_cookie_write+0xc1\/0x210 [netdevsim]\n    [<0000000093d78e77>] full_proxy_write+0xf3\/0x180\n    [<000000005a662c16>] vfs_write+0x1c5\/0xaf0\n    [<000000007aabf84a>] ksys_write+0xed\/0x1c0\n    [<000000005f1d2e47>] do_syscall_64+0x3b\/0x90\n    [<000000006001c6ec>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe issue occurs in the following scenarios:\n\nnsim_dev_trap_fa_cookie_write()\n  kmalloc() fa_cookie\n  nsim_dev->fa_cookie = fa_cookie\n..\nnsim_drv_remove()\n\nThe fa_cookie allocked in nsim_dev_trap_fa_cookie_write() is not freed. To\nfix, add kfree(nsim_dev->fa_cookie) to nsim_drv_remove()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netdevsim: Se corrige la pérdida de memoria de nsim_dev-&gt;fa_cookie. kmemleak informa de este problema: objeto sin referencia 0xffff8881bac872d0 (tamaño 8): comm \"sh\", pid 58603, jiffies 4481524462 (edad 68,065 s) volcado hexadecimal (primeros 8 bytes): 04 00 00 00 de ad be ef ........ backtrace: [&lt;00000000c80b8577&gt;] __kmalloc+0x49\/0x150 [&lt;000000005292b8c6&gt;] nsim_dev_trap_fa_cookie_write+0xc1\/0x210 [netdevsim] [&lt;0000000093d78e77&gt;] escritura de proxy completo+0xf3\/0x180 [&lt;000000005a662c16&gt;] escritura de vfs+0x1c5\/0xaf0 [&lt;000000007aabf84a&gt;] escritura de ksys+0xed\/0x1c0 [&lt;000000005f1d2e47&gt;] llamada al sistema_64+0x3b\/0x90 [&lt;000000006001c6ec&gt;] entrada_SYSCALL_64_after_hwframe+0x63\/0xcd El problema ocurre en los siguientes escenarios: nsim_dev_trap_fa_cookie_write() kmalloc() fa_cookie nsim_dev-&gt;fa_cookie = fa_cookie .. nsim_drv_remove(): La fa_cookie bloqueada en nsim_dev_trap_fa_cookie_write() no se libera. Para solucionarlo, añada kfree(nsim_dev-&gt;fa_cookie) a nsim_drv_remove()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/064bc7312bd09a48798418663090be0c776183db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/207edad5717e0a5709ce8467f0eff41c607835c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49804","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.717","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390: avoid using global register for current_stack_pointer\n\nCommit 30de14b1884b (\"s390: current_stack_pointer shouldn't be a\nfunction\") made current_stack_pointer a global register variable like\non many other architectures. Unfortunately on s390 it uncovers old\ngcc bug which is fixed only since gcc-9.1 [gcc commit 3ad7fed1cc87\n(\"S\/390: Fix PR89775. Stackpointer save\/restore instructions removed\")]\nand backported to gcc-8.4 and later. Due to this bug gcc versions prior\nto 8.4 generate broken code which leads to stack corruptions.\n\nCurrent minimal gcc version required to build the kernel is declared\nas 5.1. It is not possible to fix all old gcc versions, so work\naround this problem by avoiding using global register variable for\ncurrent_stack_pointer."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: s390: evitar el uso de un registro global para current_stack_pointer. El commit 30de14b1884b (\"s390: current_stack_pointer no debería ser una función\") convirtió current_stack_pointer en una variable de registro global, como en muchas otras arquitecturas. Desafortunadamente, en s390, se descubre un antiguo error de gcc corregido solo desde gcc-9.1 [commit 3ad7fed1cc87 de gcc (\"S\/390: Corrección de PR89775. Se eliminaron las instrucciones de guardado\/restauración de Stackpointer\")] y se ha retroportado a gcc-8.4 y posteriores. Debido a este error, las versiones de gcc anteriores a la 8.4 generan código defectuoso que provoca corrupciones en la pila. La versión mínima actual de gcc requerida para compilar el kernel es la 5.1. No es posible corregir todas las versiones antiguas de gcc, por lo que se puede solucionar este problema evitando el uso de la variable de registro global para current_stack_pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a478952a8ac44e32316dc046a063a7dc34825aa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3c11025bcd2142a61abe5806b2f86a0e78118df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49805","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.817","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lan966x: Fix potential null-ptr-deref in lan966x_stats_init()\n\nlan966x_stats_init() calls create_singlethread_workqueue() and not\nchecked the ret value, which may return NULL. And a null-ptr-deref may\nhappen:\n\nlan966x_stats_init()\n    create_singlethread_workqueue() # failed, lan966x->stats_queue is NULL\n    queue_delayed_work()\n        queue_delayed_work_on()\n            __queue_delayed_work()  # warning here, but continue\n                __queue_work()      # access wq->flags, null-ptr-deref\n\nCheck the ret value and return -ENOMEM if it is NULL."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: lan966x: Se corrige un posible error de referencia nulo (PTR) en lan966x_stats_init(). Lan966x_stats_init() llama a create_singlethread_workqueue() y no verifica el valor ret, lo que puede devolver NULL. Podría ocurrir un error de referencia nulo (PTR): lan966x_stats_init() create_singlethread_workqueue() # Falló, lan966x-&gt;stats_queue es NULL. queue_delayed_work() queue_delayed_work_on(). __queue_delayed_work() # Advertencia, pero continúe. __queue_work() # Acceso a wq-&gt;flags, PTR-deref nulo. Verifique el valor ret y devuelva -ENOMEM si es NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4a43c1c6040e848e1344c7b16ac696b68fbc439c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba86af3733aece88dbcee0dfebf7e2dcfefb2be4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49806","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:03.920","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: microchip: sparx5: Fix potential null-ptr-deref in sparx_stats_init() and sparx5_start()\n\nsparx_stats_init() calls create_singlethread_workqueue() and not\nchecked the ret value, which may return NULL. And a null-ptr-deref may\nhappen:\n\nsparx_stats_init()\n    create_singlethread_workqueue() # failed, sparx5->stats_queue is NULL\n    queue_delayed_work()\n        queue_delayed_work_on()\n            __queue_delayed_work()  # warning here, but continue\n                __queue_work()      # access wq->flags, null-ptr-deref\n\nCheck the ret value and return -ENOMEM if it is NULL. So as\nsparx5_start()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: microchip: sparx5: Se corrige un posible null-ptr-deref en sparx_stats_init() y sparx5_start(). sparx_stats_init() llama a create_singlethread_workqueue() y no comprueba el valor ret, lo que puede devolver NULL. Y puede ocurrir un null-ptr-deref: sparx_stats_init() create_singlethread_workqueue() # falló, sparx5-&gt;stats_queue es NULL queue_delayed_work() queue_delayed_work_on() __queue_delayed_work() # advertencia aquí, pero continúe __queue_work() # acceso a wq-&gt;flags, null-ptr-deref Compruebe el valor ret y devuelva -ENOMEM si es NULL. Así como sparx5_start()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/456327e565dc49d18b2f595f39f47df8a36f1057","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/639f5d006e36bb303f525d9479448c412b720c39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80e590aeb132887102c3fa79d99b338f099dc952","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49807","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.030","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: fix a memory leak in nvmet_auth_set_key\n\nWhen changing dhchap secrets we need to release the old\nsecrets as well.\n\nkmemleak complaint:\n--\nunreferenced object 0xffff8c7f44ed8180 (size 64):\n  comm \"check\", pid 7304, jiffies 4295686133 (age 72034.246s)\n  hex dump (first 32 bytes):\n    44 48 48 43 2d 31 3a 30 30 3a 4c 64 4c 4f 64 71  DHHC-1:00:LdLOdq\n    79 56 69 67 77 48 55 32 6d 5a 59 4c 7a 35 59 38  yVigwHU2mZYLz5Y8\n  backtrace:\n    [<00000000b6fc5071>] kstrdup+0x2e\/0x60\n    [<00000000f0f4633f>] 0xffffffffc0e07ee6\n    [<0000000053006c05>] 0xffffffffc0dff783\n    [<00000000419ae922>] configfs_write_iter+0xb1\/0x120\n    [<000000008183c424>] vfs_write+0x2be\/0x3c0\n    [<000000009005a2a5>] ksys_write+0x5f\/0xe0\n    [<00000000cd495c89>] do_syscall_64+0x38\/0x90\n    [<00000000f2a84ac5>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nvmet: corrige una pérdida de memoria en nvmet_auth_set_key Al cambiar los secretos de dhchap, también debemos liberar los secretos antiguos. Queja de kmemleak: -- objeto sin referencia 0xffff8c7f44ed8180 (tamaño 64): comm \"check\", pid 7304, jiffies 4295686133 (edad 72034.246s) volcado hexadecimal (primeros 32 bytes): 44 48 48 43 2d 31 3a 30 30 3a 4c 64 4c 4f 64 71 DHHC-1:00:LdLOdq 79 56 69 67 77 48 55 32 6d 5a 59 4c 7a 35 59 38 yVigwHU2mZYLz5Y8 backtrace: [&lt;00000000b6fc5071&gt;] kstrdup+0x2e\/0x60 [&lt;00000000f0f4633f&gt;] 0xffffffffc0e07ee6 [&lt;0000000053006c05&gt;] 0xffffffffc0dff783 [&lt;00000000419ae922&gt;] configfs_write_iter+0xb1\/0x120 [&lt;000000008183c424&gt;] vfs_write+0x2be\/0x3c0 [&lt;000000009005a2a5&gt;] ksys_write+0x5f\/0xe0 [&lt;00000000cd495c89&gt;] do_syscall_64+0x38\/0x90 [&lt;00000000f2a84ac5&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a52566279b4ee65ecd2503d7b7342851f84755c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65710ea51d4a185592c7b14c9e33d0c4a364f074","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49808","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.130","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: don't leak tagger-owned storage on switch driver unbind\n\nIn the initial commit dc452a471dba (\"net: dsa: introduce tagger-owned\nstorage for private and shared data\"), we had a call to\ntag_ops->disconnect(dst) issued from dsa_tree_free(), which is called at\ntree teardown time.\n\nThere were problems with connecting to a switch tree as a whole, so this\ngot reworked to connecting to individual switches within the tree. In\nthis process, tag_ops->disconnect(ds) was made to be called only from\nswitch.c (cross-chip notifiers emitted as a result of dynamic tag proto\nchanges), but the normal driver teardown code path wasn't replaced with\nanything.\n\nSolve this problem by adding a function that does the opposite of\ndsa_switch_setup_tag_protocol(), which is called from the equivalent\nspot in dsa_switch_teardown(). The positioning here also ensures that we\nwon't have any use-after-free in tagging protocol (*rcv) ops, since the\nteardown sequence is as follows:\n\ndsa_tree_teardown\n-> dsa_tree_teardown_master\n   -> dsa_master_teardown\n      -> unsets master->dsa_ptr, making no further packets match the\n         ETH_P_XDSA packet type handler\n-> dsa_tree_teardown_ports\n   -> dsa_port_teardown\n      -> dsa_slave_destroy\n         -> unregisters DSA net devices, there is even a synchronize_net()\n            in unregister_netdevice_many()\n-> dsa_tree_teardown_switches\n   -> dsa_switch_teardown\n      -> dsa_switch_teardown_tag_protocol\n         -> finally frees the tagger-owned storage"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: dsa: no filtrar almacenamiento propiedad del etiquetador al desvincular el controlador del conmutador. En la confirmación inicial dc452a471dba (\"net: dsa: introducir almacenamiento propiedad del etiquetador para datos privados y compartidos\"), teníamos una llamada a tag_ops-&gt;disconnect(dst) emitida desde dsa_tree_free(), que se llama en el momento del desmontaje del árbol. Había problemas con la conexión a un árbol de conmutadores como un todo, por lo que esto se modificó para conectarse a conmutadores individuales dentro del árbol. En este proceso, tag_ops-&gt;disconnect(ds) se hizo para que se llamara solo desde switch.c (notificadores entre chips emitidos como resultado de cambios dinámicos de protocolo de etiqueta), pero la ruta de código normal para el desmontaje del controlador no se reemplazó con nada. Resuelva este problema añadiendo una función que haga lo contrario de dsa_switch_setup_tag_protocol(), que se llama desde el punto equivalente en dsa_switch_teardown(). El posicionamiento aquí también asegura que no tendremos ningún use-after-free en las operaciones del protocolo de etiquetado (*rcv), ya que la secuencia de desmontaje es la siguiente: dsa_tree_teardown -&gt; dsa_tree_teardown_master -&gt; dsa_master_teardown -&gt; anula el ajuste master-&gt;dsa_ptr, lo que hace que no haya más paquetes que coincidan con el controlador de tipo de paquete ETH_P_XDSA -&gt; dsa_tree_teardown_ports -&gt; dsa_port_teardown -&gt; dsa_slave_destroy -&gt; anula el registro de los dispositivos de red DSA, incluso hay un synchronize_net() en unregister_netdevice_many() -&gt; dsa_tree_teardown_switches -&gt; dsa_switch_teardown -&gt; dsa_switch_teardown_tag_protocol -&gt; finalmente libera el almacenamiento propiedad del etiquetador"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e0c19fcb8b5323716140fa82b79aa9f60e60407","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5809fb03942dbac25144db5bebea84fa003ecaca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49809","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.237","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/x25: Fix skb leak in x25_lapb_receive_frame()\n\nx25_lapb_receive_frame() using skb_copy() to get a private copy of\nskb, the new skb should be freed in the undersized\/fragmented skb\nerror handling path. Otherwise there is a memory leak."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net\/x25: Se corrige la fuga de skb en x25_lapb_receive_frame(). x25_lapb_receive_frame() usa skb_copy() para obtener una copia privada de skb. El nuevo skb debe liberarse en la ruta de gestión de errores de skb de tamaño insuficiente\/fragmentado. De lo contrario, se produce una fuga de memoria."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ef17d966445358a55c5f4ccf2c73cca3e39192b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2929cceb2fcf0ded7182562e4888afafece82cce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d675be16a461310d738d93f9f1a00da62055c5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f00da9c866d506998bf0a3f699ec900730472da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8baf1fc248b2e88642f094fea9509a9bf98c5bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfcfbe4f2e4b2c81cff4e79b48502d97fda73118","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e109b41870db995cae25dfaf0cc3922f9028b1a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fda0ba7c84b46d10947c687320804b9de149a921","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49810","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.347","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix missing xas_retry() calls in xarray iteration\n\nnetfslib has a number of places in which it performs iteration of an xarray\nwhilst being under the RCU read lock.  It *should* call xas_retry() as the\nfirst thing inside of the loop and do \"continue\" if it returns true in case\nthe xarray walker passed out a special value indicating that the walk needs\nto be redone from the root[*].\n\nFix this by adding the missing retry checks.\n\n[*] I wonder if this should be done inside xas_find(), xas_next_node() and\n    suchlike, but I'm told that's not an simple change to effect.\n\nThis can cause an oops like that below.  Note the faulting address - this\nis an internal value (|0x2) returned from xarray.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000402\n...\nRIP: 0010:netfs_rreq_unlock+0xef\/0x380 [netfs]\n...\nCall Trace:\n netfs_rreq_assess+0xa6\/0x240 [netfs]\n netfs_readpage+0x173\/0x3b0 [netfs]\n ? init_wait_var_entry+0x50\/0x50\n filemap_read_page+0x33\/0xf0\n filemap_get_pages+0x2f2\/0x3f0\n filemap_read+0xaa\/0x320\n ? do_filp_open+0xb2\/0x150\n ? rmqueue+0x3be\/0xe10\n ceph_read_iter+0x1fe\/0x680 [ceph]\n ? new_sync_read+0x115\/0x1a0\n new_sync_read+0x115\/0x1a0\n vfs_read+0xf3\/0x180\n ksys_read+0x5f\/0xe0\n do_syscall_64+0x38\/0x90\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nChanges:\n========\nver #2)\n - Changed an unsigned int to a size_t to reduce the likelihood of an\n   overflow as per Willy's suggestion.\n - Added an additional patch to fix the maths."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfs: Se corrigen las llamadas xas_retry() faltantes en la iteración de un xarray. netfslib realiza la iteración de un xarray en varios lugares bajo el bloqueo de lectura de la RCU. *Debería* llamar a xas_retry() como primer paso dentro del bucle y ejecutar \"continue\" si devuelve verdadero en caso de que el rastreador de xarrays haya pasado un valor especial que indique que el recorrido debe rehacerse desde la raíz. [*] Se puede solucionar añadiendo las comprobaciones de reintento faltantes. [*] Me pregunto si esto debería hacerse dentro de xas_find(), xas_next_node() y similares, pero me han dicho que no es un cambio sencillo de implementar. Esto puede causar un error como el que se muestra a continuación. Observe la dirección del error: se trata de un valor interno (|0x2) devuelto por xarray. ERROR: desreferencia de puntero NULL del núcleo, dirección: 0000000000000402 ... RIP: 0010:netfs_rreq_unlock+0xef\/0x380 [netfs] ... Seguimiento de llamadas: netfs_rreq_assess+0xa6\/0x240 [netfs] netfs_readpage+0x173\/0x3b0 [netfs] ? init_wait_var_entry+0x50\/0x50 filemap_read_page+0x33\/0xf0 filemap_get_pages+0x2f2\/0x3f0 filemap_read+0xaa\/0x320 ? do_filp_open+0xb2\/0x150 ? rmqueue+0x3be\/0xe10 ceph_read_iter+0x1fe\/0x680 [ceph] ? new_sync_read+0x115\/0x1a0 new_sync_read+0x115\/0x1a0 vfs_read+0xf3\/0x180 ksys_read+0x5f\/0xe0 do_syscall_64+0x38\/0x90 entry_SYSCALL_64_after_hwframe+0x44\/0xae Changes: ======== ver #2) - Se cambió un int sin signo a un size_t para reducir la probabilidad de un desbordamiento según la sugerencia de Willy. - Se agregó un parche adicional para corregir las matemáticas."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e043a80b5dae5c2d2cf84031501de7827fd6c00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2cc07a76f1eb12de3b22caf5fdbf856a7bef16d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49811","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.450","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrbd: use after free in drbd_create_device()\n\nThe drbd_destroy_connection() frees the \"connection\" so use the _safe()\niterator to prevent a use after free."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drbd: use-after-free en drbd_create_device(). drbd_destroy_connection() libera la \"conexión\", así que use el iterador _safe() para evitar un use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7d93417d596402ddd46bd76c721f205d09d0d025","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/813a8dd9c45fd46f5cbbfbedf0791afa7740ccf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ed51414aef6e59e832e2960f10766dce2d5b1a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7a1598189228b5007369a9622ccdf587be0730f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf47ca1b35fc1f55091ffaff5fbe41ea0c6f59a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2a00b149836d60c222930bbea6b2139caf34d4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc1897f16ebcfd22364f2afcc27f53a740f3bc7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49812","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.560","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbridge: switchdev: Fix memory leaks when changing VLAN protocol\n\nThe bridge driver can offload VLANs to the underlying hardware either\nvia switchdev or the 8021q driver. When the former is used, the VLAN is\nmarked in the bridge driver with the 'BR_VLFLAG_ADDED_BY_SWITCHDEV'\nprivate flag.\n\nTo avoid the memory leaks mentioned in the cited commit, the bridge\ndriver will try to delete a VLAN via the 8021q driver if the VLAN is not\nmarked with the previously mentioned flag.\n\nWhen the VLAN protocol of the bridge changes, switchdev drivers are\nnotified via the 'SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL' attribute, but\nthe 8021q driver is also called to add the existing VLANs with the new\nprotocol and delete them with the old protocol.\n\nIn case the VLANs were offloaded via switchdev, the above behavior is\nboth redundant and buggy. Redundant because the VLANs are already\nprogrammed in hardware and drivers that support VLAN protocol change\n(currently only mlx5) change the protocol upon the switchdev attribute\nnotification. Buggy because the 8021q driver is called despite these\nVLANs being marked with 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. This leads to\nmemory leaks [1] when the VLANs are deleted.\n\nFix by not calling the 8021q driver for VLANs that were already\nprogrammed via switchdev.\n\n[1]\nunreferenced object 0xffff8881f6771200 (size 256):\n  comm \"ip\", pid 446855, jiffies 4298238841 (age 55.240s)\n  hex dump (first 32 bytes):\n    00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<00000000012819ac>] vlan_vid_add+0x437\/0x750\n    [<00000000f2281fad>] __br_vlan_set_proto+0x289\/0x920\n    [<000000000632b56f>] br_changelink+0x3d6\/0x13f0\n    [<0000000089d25f04>] __rtnl_newlink+0x8ae\/0x14c0\n    [<00000000f6276baf>] rtnl_newlink+0x5f\/0x90\n    [<00000000746dc902>] rtnetlink_rcv_msg+0x336\/0xa00\n    [<000000001c2241c0>] netlink_rcv_skb+0x11d\/0x340\n    [<0000000010588814>] netlink_unicast+0x438\/0x710\n    [<00000000e1a4cd5c>] netlink_sendmsg+0x788\/0xc40\n    [<00000000e8992d4e>] sock_sendmsg+0xb0\/0xe0\n    [<00000000621b8f91>] ____sys_sendmsg+0x4ff\/0x6d0\n    [<000000000ea26996>] ___sys_sendmsg+0x12e\/0x1b0\n    [<00000000684f7e25>] __sys_sendmsg+0xab\/0x130\n    [<000000004538b104>] do_syscall_64+0x3d\/0x90\n    [<0000000091ed9678>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bridge: switchdev: Fix memory leakage when Changing VLAN protocol El controlador del puente puede descargar VLAN al hardware subyacente mediante switchdev o el controlador 8021q. Cuando se utiliza el primero, la VLAN se marca en el controlador del puente con el indicador privado 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. Para evitar las fugas de memoria mencionadas en la confirmación citada, el controlador del puente intentará eliminar una VLAN mediante el controlador 8021q si la VLAN no está marcada con el indicador mencionado anteriormente. Cuando cambia el protocolo VLAN del puente, se notifica a los controladores switchdev mediante el atributo 'SWITCHDEV_ATTR_ID_BRIDGE_VLAN_PROTOCOL', pero también se llama al controlador 8021q para agregar las VLAN existentes con el nuevo protocolo y eliminarlas con el protocolo anterior. En caso de que las VLAN se descargaran mediante switchdev, el comportamiento anterior es redundante y presenta errores. Redundante porque las VLAN ya están programadas en el hardware y los controladores compatibles con el cambio de protocolo de VLAN (actualmente solo mlx5) cambian el protocolo al recibir la notificación del atributo switchdev. Presenta errores porque se llama al controlador 8021q a pesar de que estas VLAN están marcadas con 'BR_VLFLAG_ADDED_BY_SWITCHDEV'. Esto provoca fugas de memoria [1] al eliminar las VLAN. Se soluciona no llamando al controlador 8021q para las VLAN ya programadas mediante switchdev. [1] objeto sin referencia 0xffff8881f6771200 (tamaño 256): comm \"ip\", pid 446855, jiffies 4298238841 (edad 55.240s) volcado hexadecimal (primeros 32 bytes): 00 00 7f 0e 83 88 ff ff 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;00000000012819ac&gt;] vlan_vid_add+0x437\/0x750 [&lt;00000000f2281fad&gt;] __br_vlan_set_proto+0x289\/0x920 [&lt;000000000632b56f&gt;] br_changelink+0x3d6\/0x13f0 [&lt;0000000089d25f04&gt;] __rtnl_newlink+0x8ae\/0x14c0 [&lt;00000000f6276baf&gt;] rtnl_newlink+0x5f\/0x90 [&lt;00000000746dc902&gt;] rtnetlink_rcv_msg+0x336\/0xa00 [&lt;000000001c2241c0&gt;] netlink_rcv_skb+0x11d\/0x340 [&lt;0000000010588814&gt;] netlink_unicast+0x438\/0x710 [&lt;00000000e1a4cd5c&gt;] netlink_sendmsg+0x788\/0xc40 [&lt;00000000e8992d4e&gt;] sock_sendmsg+0xb0\/0xe0 [&lt;00000000621b8f91&gt;] ____sys_sendmsg+0x4ff\/0x6d0 [&lt;000000000ea26996&gt;] ___sys_sendmsg+0x12e\/0x1b0 [&lt;00000000684f7e25&gt;] __sys_sendmsg+0xab\/0x130 [&lt;000000004538b104&gt;] do_syscall_64+0x3d\/0x90 [&lt;0000000091ed9678&gt;] entry_SYSCALL_64_after_hwframe+0x46\/0xb0 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/347f1793b573466424c550f2748ed837b6690fe7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d45921ee4cb364910097e7d1b7558559c2f9fd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8926e2d2225eb7b7e11cd3fa266aaad9075b767","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc16a2c81a3eb1cbba8775f5bdc67856df903a7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49813","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.673","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix error handling in ena_init()\n\nThe ena_init() won't destroy workqueue created by\ncreate_singlethread_workqueue() when pci_register_driver() failed.\nCall destroy_workqueue() when pci_register_driver() failed to prevent the\nresource leak."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ena: Se corrige el manejo de errores en ena_init(). Ena_init() no destruye la cola de trabajo creada por create_singlethread_workqueue() cuando pci_register_driver() falla. Se llama a destroy_workqueue() cuando pci_register_driver() falla para evitar la fuga de recursos."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e2369223b174d198ec42a3ec0a7f06c8727b968","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f7b2ef8fe924e299bc339811ea3f1b9935c040f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b23a4b252044e4fd23438930d452244818d7000","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d349e9be5a2c2d7588a2c4e4bfa0bb3dc1226769","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49814","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.787","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: close race conditions on sk_receive_queue\n\nsk->sk_receive_queue is protected by skb queue lock, but for KCM\nsockets its RX path takes mux->rx_lock to protect more than just\nskb queue. However, kcm_recvmsg() still only grabs the skb queue\nlock, so race conditions still exist.\n\nWe can teach kcm_recvmsg() to grab mux->rx_lock too but this would\nintroduce a potential performance regression as struct kcm_mux can\nbe shared by multiple KCM sockets.\n\nSo we have to enforce skb queue lock in requeue_rx_msgs() and handle\nskb peek case carefully in kcm_wait_data(). Fortunately,\nskb_recv_datagram() already handles it nicely and is widely used by\nother sockets, we can just switch to skb_recv_datagram() after\ngetting rid of the unnecessary sock lock in kcm_recvmsg() and\nkcm_splice_read(). Side note: SOCK_DONE is not used by KCM sockets,\nso it is safe to get rid of this check too.\n\nI ran the original syzbot reproducer for 30 min without seeing any\nissue."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: kcm: condiciones de ejecución cerradas en sk_receive_queue. sk-&gt;sk_receive_queue está protegido por el bloqueo de cola skb, pero para los sockets KCM su ruta RX toma mux-&gt;rx_lock para proteger más que solo la cola skb. Sin embargo, kcm_recvmsg() todavía solo captura el bloqueo de cola skb, por lo que las condiciones de ejecución aún existen. Podemos enseñar a kcm_recvmsg() a capturar también mux-&gt;rx_lock, pero esto introduciría una posible regresión del rendimiento, ya que la estructura kcm_mux puede ser compartida por varios sockets KCM. Por lo tanto, debemos aplicar el bloqueo de cola skb en requeue_rx_msgs() y manejar el caso de skb peek con cuidado en kcm_wait_data(). Afortunadamente, skb_recv_datagram() ya lo gestiona correctamente y es ampliamente utilizado por otros sockets. Podemos cambiar a skb_recv_datagram() tras eliminar el bloqueo de sock innecesario en kcm_recvmsg() y kcm_splice_read(). Nota: Los sockets KCM no utilizan SOCK_DONE, por lo que también es seguro omitir esta comprobación. Ejecuté el reproductor syzbot original durante 30 minutos sin observar ningún problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22f6b5d47396b4287662668ee3f5c1f766cb4259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4154b6afa2bd639214ff259d912faad984f7413a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5121197ecc5db58c07da95eb1ff82b98b121a221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf92e54597d842da127c59833b365d6faeeaf020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce57d6474ae999a3b2d442314087473a646a65c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9ad4de92e184b19bcae4da10dac0275abf83931","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49815","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.893","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix missing xas_retry() in fscache mode\n\nThe xarray iteration only holds the RCU read lock and thus may encounter\nXA_RETRY_ENTRY if there's process modifying the xarray concurrently.\nThis will cause oops when referring to the invalid entry.\n\nFix this by adding the missing xas_retry(), which will make the\niteration wind back to the root node if XA_RETRY_ENTRY is encountered."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: erofs: se corrige la falta de xas_retry() en el modo fscache. La iteración del array x solo mantiene el bloqueo de lectura de la RCU y, por lo tanto, puede encontrar XA_RETRY_ENTRY si hay un proceso que modifica el array x simultáneamente. Esto causará errores al hacer referencia a la entrada no válida. Se soluciona añadiendo la falta de xas_retry(), lo que hará que la iteración regrese al nodo raíz si se encuentra XA_RETRY_ENTRY."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37020bbb71d911431e16c2c940b97cf86ae4f2f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbc98fe99e17ed18f2f272d5fe880d844b1c68c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49816","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:04.997","lastModified":"2025-05-02T06:15:47.253","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49817","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.103","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mhi: Fix memory leak in mhi_net_dellink()\n\nMHI driver registers network device without setting the\nneeds_free_netdev flag, and does NOT call free_netdev() when\nunregisters network device, which causes a memory leak.\n\nThis patch calls free_netdev() to fix it since netdev_priv\nis used after unregister."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: mhi: Se corrige la pérdida de memoria en mhi_net_dellink(). El controlador MHI registra el dispositivo de red sin configurar el indicador needs_free_netdev y NO llama a free_netdev() al cancelar el registro del dispositivo de red, lo que provoca una pérdida de memoria. Este parche llama a free_netdev() para corregirla, ya que netdev_priv se utiliza después de cancelar el registro."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25a270343b0f16e1f6e65f541a15975a35e238ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88da008e5e2f9753726ea5a51ef2eb144e9de927","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7c125bd79f50ec6094761090be81d02726ec6f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49818","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.207","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix misuse of put_device() in mISDN_register_device()\n\nWe should not release reference by put_device() before calling device_initialize()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mISDN: corregir el uso incorrecto de put_device() en mISDN_register_device() No debemos liberar la referencia de put_device() antes de llamar a device_initialize()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d25107e111a85c56f601a5470f1780ec054e6ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44658d65f6b3118f595a1229d7eed74845a5e2ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/596230471da3415e92ae6b9d2a4e26f4a81cac5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/709aa1f73d3e9e9ea16e2c4e44f2874c5d2c382c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81db4f182744acd004f17d7cc52dde9ea53467e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83672c1b83d107b0d4fe0accf1bf64d8988398e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87b336aa158201dc30a318431e63e8c5b26c4156","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d40b35a7922f4df3767ad6fb8ef3dc86e31d7ba3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49819","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.317","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteon_ep: fix potential memory leak in octep_device_setup()\n\nWhen occur unsupported_dev and mbox init errors, it did not free oct->conf\nand iounmap() oct->mmio[i].hw_addr. That would trigger memory leak problem.\nAdd kfree() for oct->conf and iounmap() for oct->mmio[i].hw_addr under\nunsupported_dev and mbox init errors to fix the problem."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: octeon_ep: se corrige una posible fuga de memoria en octep_device_setup(). Cuando se producen errores unsupported_dev e init de mbox, no se liberan oct-&gt;conf ni iounmap() de oct-&gt;mmio[i].hw_addr. Esto causaría un problema de fuga de memoria. Se añaden kfree() para oct-&gt;conf e iounmap() para oct-&gt;mmio[i].hw_addr en los errores unsupported_dev e init de mbox para solucionar el problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/67b65a0db8a7fdad43159819f41335497a4bb04f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4041be97b15302ebfffda8bbd45f3b2d096048f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49820","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.413","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmctp i2c: don't count unused \/ invalid keys for flow release\n\nWe're currently hitting the WARN_ON in mctp_i2c_flow_release:\n\n    if (midev->release_count > midev->i2c_lock_count) {\n        WARN_ONCE(1, \"release count overflow\");\n\nThis may be hit if we expire a flow before sending the first packet it\ncontains - as we will not be pairing the increment of release_count\n(performed on flow release) with the i2c lock operation (only\nperformed on actual TX).\n\nTo fix this, only release a flow if we've encountered it previously (ie,\ndev_flow_state does not indicate NEW), as we will mark the flow as\nACTIVE at the same time as accounting for the i2c lock operation. We\nalso need to add an INVALID flow state, to indicate when we've done the\nrelease."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mctp i2c: no cuente las claves no utilizadas o no válidas para la liberación del flujo Actualmente estamos alcanzando el WARN_ON en mctp_i2c_flow_release: if (midev-&gt;release_count &gt; midev-&gt;i2c_lock_count) { WARN_ONCE(1, \"release count overflow\"); Esto puede ser alcanzado si expiramos un flujo antes de enviar el primer paquete que contiene, ya que no estaremos emparejando el incremento de release_count (realizado en la liberación del flujo) con la operación de bloqueo i2c (solo se realiza en TX real). Para corregir esto, solo libere un flujo si lo hemos encontrado previamente (es decir, dev_flow_state no indica NUEVO), ya que marcaremos el flujo como ACTIVO al mismo tiempo que contabilizamos la operación de bloqueo i2c. También necesitamos agregar un estado de flujo INVÁLIDO, para indicar cuándo hemos realizado la liberación."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9cbd48d5fa14e4c65f8580de16686077f7cea02b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5915a9a3ab4067ef8996a57738d156eabeb3a12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49821","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.513","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible memory leak in mISDN_dsp_element_register()\n\nAfer commit 1fa5ae857bb1 (\"driver core: get rid of struct device's\nbus_id string array\"), the name of device is allocated dynamically,\nuse put_device() to give up the reference, so that the name can be\nfreed in kobject_cleanup() when the refcount is 0.\n\nThe 'entry' is going to be freed in mISDN_dsp_dev_release(), so the\nkfree() is removed. list_del() is called in mISDN_dsp_dev_release(),\nso it need be initialized."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mISDN: corrige posible pérdida de memoria en mISDN_dsp_element_register() Después de la confirmación 1fa5ae857bb1 (\"núcleo del controlador: deshacerse de la matriz de cadenas bus_id del dispositivo struct\"), el nombre del dispositivo se asigna dinámicamente, use put_device() para renunciar a la referencia, de modo que el nombre se pueda liberar en kobject_cleanup() cuando refcount sea 0. La 'entrada' se liberará en mISDN_dsp_dev_release(), por lo que se elimina kfree(). list_del() se llama en mISDN_dsp_dev_release(), por lo que necesita inicializarse."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/083a2c9ef82e184bdf0b9f9a1e5fc38d32afbb47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f2c681900a01e3f23789bca26d88268c3d5b51d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/727ed7d28348c026c7ef4d852f3d0e5054d376e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a05e3929668c8cfef495c69752a9e91fac4878f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98a2ac1ca8fd6eca6867726fe238d06e75eb1acd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b119bedbefb7dd9ed8bf8cb9f1056504250d610e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbd53d05c4c892080ef3b617eff4f57903acecb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4b8394725079670be309f9a35ad88a8cbbaaefd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49822","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.623","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix connections leak when tlink setup failed\n\nIf the tlink setup failed, lost to put the connections, then\nthe module refcnt leak since the cifsd kthread not exit.\n\nAlso leak the fscache info, and for next mount with fsc, it will\nprint the follow errors:\n  CIFS: Cache volume key already in use (cifs,127.0.0.1:445,TEST)\n\nLet's check the result of tlink setup, and do some cleanup."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cifs: Se corrige la fuga de conexiones al fallar la configuración de Tlink. Si la configuración de Tlink falla, se pierden las conexiones y se produce una fuga de referencia del módulo, ya que el kthread de cifsd no finaliza. También se filtra la información de fscache, y en el siguiente montaje con fsc, se mostrarán los siguientes errores: CIFS: La clave del volumen de caché ya está en uso (cifs,127.0.0.1:445,TEST). Revisemos el resultado de la configuración de Tlink y realicemos una limpieza."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a087842d10b5daa123ee5291e386cdd78413705","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dcdf5f5b2137185cbdd5385f29949ab3da4f00c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9059e338fc000c0b87d8cf29e93c74fd703212e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49823","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.723","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tdev_add()\n\nIn ata_tdev_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 13 PID: 13603 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #36\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48\/0x3a0\nlr : device_del+0x44\/0x3a0\nCall trace:\n device_del+0x48\/0x3a0\n attribute_container_class_device_del+0x28\/0x40\n transport_remove_classdev+0x60\/0x7c\n attribute_container_device_trigger+0x118\/0x120\n transport_remove_device+0x20\/0x30\n ata_tdev_delete+0x24\/0x50 [libata]\n ata_tlink_delete+0x40\/0xa0 [libata]\n ata_tport_delete+0x2c\/0x60 [libata]\n ata_port_detach+0x148\/0x1b0 [libata]\n ata_pci_remove_one+0x50\/0x80 [libata]\n ahci_remove_one+0x4c\/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tdev_add(). In the error path, device_del() is called to delete\nthe device which was added earlier in this function, and ata_tdev_free()\nis called to free ata_dev."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ata: libata-transport: corrección del manejo de errores en ata_tdev_add(). En ata_tdev_add(), no se comprueba el valor de retorno de transport_add_device(). Como resultado, se genera una referencia nula al eliminar el módulo, ya que se llama a transport_remove_device() para eliminar el dispositivo no añadido. No se puede manejar la desreferencia del puntero NULL del núcleo en la dirección virtual 00000000000000d0 CPU: 13 PID: 13603 Comm: rmmod Kdump: cargado Tainted: GW 6.1.0-rc3+ #36 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48\/0x3a0 lr : device_del+0x44\/0x3a0 Rastreo de llamadas: device_del+0x48\/0x3a0 attribute_container_class_device_del+0x28\/0x40 transport_remove_classdev+0x60\/0x7c attribute_container_device_trigger+0x118\/0x120 transport_remove_device+0x20\/0x30 ata_tdev_delete+0x24\/0x50 [libata] ata_tlink_delete+0x40\/0xa0 [libata] ata_tport_delete+0x2c\/0x60 [libata] ata_port_detach+0x148\/0x1b0 [libata] ata_pci_remove_one+0x50\/0x80 [libata] ahci_remove_one+0x4c\/0x8c [ahci] Para solucionar este problema, verifique y gestione el valor de retorno de transport_add_device() en ata_tdev_add(). En la ruta de error, se llama a device_del() para eliminar el dispositivo añadido previamente en esta función, y ata_tdev_free() para liberar ata_dev."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ff36351309e3eadcff297480baf4785e726de9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef2ac07ab83163b9a53f45da20e14302591ad9cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f23058dc2398db1d8faca9a2b1ce30b85cdd8b22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f54331962883f4fc4bf5e487e6e7cf07c4567fef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49824","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.830","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tlink_add()\n\nIn ata_tlink_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 33 PID: 13850 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #12\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48\/0x39c\nlr : device_del+0x44\/0x39c\nCall trace:\n device_del+0x48\/0x39c\n attribute_container_class_device_del+0x28\/0x40\n transport_remove_classdev+0x60\/0x7c\n attribute_container_device_trigger+0x118\/0x120\n transport_remove_device+0x20\/0x30\n ata_tlink_delete+0x88\/0xb0 [libata]\n ata_tport_delete+0x2c\/0x60 [libata]\n ata_port_detach+0x148\/0x1b0 [libata]\n ata_pci_remove_one+0x50\/0x80 [libata]\n ahci_remove_one+0x4c\/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tlink_add()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ata: libata-transport: corrección del manejo de errores en ata_tlink_add(). En ata_tlink_add(), no se comprueba el valor de retorno de transport_add_device(). Como resultado, se genera una referencia nula al eliminar el módulo, ya que se llama a transport_remove_device() para eliminar el dispositivo no añadido. No se puede manejar la desreferencia del puntero NULL del núcleo en la dirección virtual 00000000000000d0 CPU: 33 PID: 13850 Comm: rmmod Kdump: cargado Tainted: GW 6.1.0-rc3+ #12 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48\/0x39c lr : device_del+0x44\/0x39c Rastreo de llamadas: device_del+0x48\/0x39c attribute_container_class_device_del+0x28\/0x40 transport_remove_classdev+0x60\/0x7c attribute_container_device_trigger+0x118\/0x120 transport_remove_device+0x20\/0x30 ata_tlink_delete+0x88\/0xb0 [libata] ata_tport_delete+0x2c\/0x60 [libata] ata_port_detach+0x148\/0x1b0 [libata] ata_pci_remove_one+0x50\/0x80 [libata] ahci_remove_one+0x4c\/0x8c [ahci] Solucione esto verificando y manejando el valor de retorno de transport_add_device() en ata_tlink_add()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/67b219314628b90b3a314528e177335b0cd5c70b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7377a14598f6b04446c54bc4a50cd249470d6c6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf0816f6322c5c37ee52655f928e91ecf32da103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5234480ca822bdcf03fe4d6a590ddcb854558f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49825","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:05.937","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix error handling in ata_tport_add()\n\nIn ata_tport_add(), the return value of transport_add_device() is\nnot checked. As a result, it causes null-ptr-deref while removing\nthe module, because transport_remove_device() is called to remove\nthe device that was not added.\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000000d0\nCPU: 12 PID: 13605 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc3+ #8\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x48\/0x39c\nlr : device_del+0x44\/0x39c\nCall trace:\n device_del+0x48\/0x39c\n attribute_container_class_device_del+0x28\/0x40\n transport_remove_classdev+0x60\/0x7c\n attribute_container_device_trigger+0x118\/0x120\n transport_remove_device+0x20\/0x30\n ata_tport_delete+0x34\/0x60 [libata]\n ata_port_detach+0x148\/0x1b0 [libata]\n ata_pci_remove_one+0x50\/0x80 [libata]\n ahci_remove_one+0x4c\/0x8c [ahci]\n\nFix this by checking and handling return value of transport_add_device()\nin ata_tport_add()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ata: libata-transport: corrección del manejo de errores en ata_tport_add(). En ata_tport_add(), no se comprueba el valor de retorno de transport_add_device(). Como resultado, se genera una referencia nula al eliminar el módulo, ya que se llama a transport_remove_device() para eliminar el dispositivo no añadido. No se puede manejar la desreferencia del puntero NULL del núcleo en la dirección virtual 00000000000000d0 CPU: 12 PID: 13605 Comm: rmmod Kdump: cargado Tainted: GW 6.1.0-rc3+ #8 pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x48\/0x39c lr : device_del+0x44\/0x39c Rastreo de llamadas: device_del+0x48\/0x39c attribute_container_class_device_del+0x28\/0x40 transport_remove_classdev+0x60\/0x7c attribute_container_device_trigger+0x118\/0x120 transport_remove_device+0x20\/0x30 ata_tport_delete+0x34\/0x60 [libata] ata_port_detach+0x148\/0x1b0 [libata] ata_pci_remove_one+0x50\/0x80 [libata] ahci_remove_one+0x4c\/0x8c [ahci] Solucione esto verificando y manejando el valor de retorno de transport_add_device() en ata_tport_add()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3613dbe3909dcc637fe6be00e4dc43b4aa0470ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52d9bb0adae9359711a0c5271430afd3754069e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5362dc1634d8b8d5f30920f33ac11a3276b7ed9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7bb1b7a7bf26f6b7372b7b683daece4a42fda02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49826","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.043","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-transport: fix double ata_host_put() in ata_tport_add()\n\nIn the error path in ata_tport_add(), when calling put_device(),\nata_tport_release() is called, it will put the refcount of 'ap->host'.\n\nAnd then ata_host_put() is called again, the refcount is decreased\nto 0, ata_host_release() is called, all ports are freed and set to\nnull.\n\nWhen unbinding the device after failure, ata_host_stop() is called\nto release the resources, it leads a null-ptr-deref(), because all\nthe ports all freed and null.\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000008\nCPU: 7 PID: 18671 Comm: modprobe Kdump: loaded Tainted: G            E      6.1.0-rc3+ #8\npstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : ata_host_stop+0x3c\/0x84 [libata]\nlr : release_nodes+0x64\/0xd0\nCall trace:\n ata_host_stop+0x3c\/0x84 [libata]\n release_nodes+0x64\/0xd0\n devres_release_all+0xbc\/0x1b0\n device_unbind_cleanup+0x20\/0x70\n really_probe+0x158\/0x320\n __driver_probe_device+0x84\/0x120\n driver_probe_device+0x44\/0x120\n __driver_attach+0xb4\/0x220\n bus_for_each_dev+0x78\/0xdc\n driver_attach+0x2c\/0x40\n bus_add_driver+0x184\/0x240\n driver_register+0x80\/0x13c\n __pci_register_driver+0x4c\/0x60\n ahci_pci_driver_init+0x30\/0x1000 [ahci]\n\nFix this by removing redundant ata_host_put() in the error path."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ata: libata-transport: corrección de un error doble de ata_host_put() en ata_tport_add(). En la ruta de error de ata_tport_add(), al llamar a put_device(), se llama a ata_tport_release(), lo que resta el recuento de referencias de 'ap-&gt;host'. A continuación, se vuelve a llamar a ata_host_put(), el recuento de referencias se reduce a 0 y se llama a ata_host_release(), liberando todos los puertos y estableciéndolos en nulo. Al desvincular el dispositivo tras un fallo, se llama a ata_host_stop() para liberar los recursos, lo que genera un error null-ptr-deref(), ya que todos los puertos están liberados y en nulo. No se puede manejar la desreferencia del puntero NULL del núcleo en la dirección virtual 0000000000000008 CPU: 7 PID: 18671 Comm: modprobe Kdump: cargado Contaminado: GE 6.1.0-rc3+ #8 pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : ata_host_stop+0x3c\/0x84 [libata] lr : release_nodes+0x64\/0xd0 Rastreo de llamadas: ata_host_stop+0x3c\/0x84 [libata] release_nodes+0x64\/0xd0 devres_release_all+0xbc\/0x1b0 device_unbind_cleanup+0x20\/0x70 really_probe+0x158\/0x320 __driver_probe_device+0x84\/0x120 driver_probe_device+0x44\/0x120 __driver_attach+0xb4\/0x220 bus_for_each_dev+0x78\/0xdc driver_attach+0x2c\/0x40 bus_add_driver+0x184\/0x240 driver_register+0x80\/0x13c __pci_register_driver+0x4c\/0x60 ahci_pci_driver_init+0x30\/0x1000 [ahci] Solucione esto eliminando ata_host_put() redundante en la ruta de error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30e12e2be27ac6c4be2af4163c70db381364706f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/377ff82c33c0cb74562a353361b64b33c09562cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/865a6da40ba092c18292ae5f6194756131293745","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c76310740807ade5ecdab5888f70ecb6d35732e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac471468f7c16cda2525909946ca13ddbcd14000","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bec9ded5404cb14e5f5470103d0973a2ff83d6a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49827","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.150","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Fix potential null-ptr-deref in drm_vblank_destroy_worker()\n\ndrm_vblank_init() call drmm_add_action_or_reset() with\ndrm_vblank_init_release() as action. If __drmm_add_action() failed, will\ndirectly call drm_vblank_init_release() with the vblank whose worker is\nNULL. As the resule, a null-ptr-deref will happen in\nkthread_destroy_worker(). Add the NULL check before calling\ndrm_vblank_destroy_worker().\n\nBUG: null-ptr-deref\nKASAN: null-ptr-deref in range [0x0000000000000068-0x000000000000006f]\nCPU: 5 PID: 961 Comm: modprobe Not tainted 6.0.0-11331-gd465bff130bf-dirty\nRIP: 0010:kthread_destroy_worker+0x25\/0xb0\n  Call Trace:\n    <TASK>\n    drm_vblank_init_release+0x124\/0x220 [drm]\n    ? drm_crtc_vblank_restore+0x8b0\/0x8b0 [drm]\n    __drmm_add_action_or_reset+0x41\/0x50 [drm]\n    drm_vblank_init+0x282\/0x310 [drm]\n    vkms_init+0x35f\/0x1000 [vkms]\n    ? 0xffffffffc4508000\n    ? lock_is_held_type+0xd7\/0x130\n    ? __kmem_cache_alloc_node+0x1c2\/0x2b0\n    ? lock_is_held_type+0xd7\/0x130\n    ? 0xffffffffc4508000\n    do_one_initcall+0xd0\/0x4f0\n    ...\n    do_syscall_64+0x35\/0x80\n    entry_SYSCALL_64_after_hwframe+0x46\/0xb0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm: Se corrige la posible desreferencia PTR nula en la llamada drm_vblank_destroy_worker(). drm_vblank_init() llama a drmm_add_action_or_reset() con la acción drm_vblank_init_release(). Si __drmm_add_action() falla, se llamará directamente a drm_vblank_init_release() con el vblank cuyo trabajador sea NULL. Como resultado, se producirá una desreferencia PTR nula en kthread_destroy_worker(). Se añade la comprobación de valores NULL antes de llamar a drm_vblank_destroy_worker(). ERROR: null-ptr-deref KASAN: null-ptr-deref en el rango [0x0000000000000068-0x000000000000006f] CPU: 5 PID: 961 Comm: modprobe No contaminado 6.0.0-11331-gd465bff130bf-dirty RIP: 0010:kthread_destroy_worker+0x25\/0xb0 Seguimiento de llamadas:   drm_vblank_init_release+0x124\/0x220 [drm] ? drm_crtc_vblank_restore+0x8b0\/0x8b0 [drm] __drmm_add_action_or_reset+0x41\/0x50 [drm] drm_vblank_init+0x282\/0x310 [drm] vkms_init+0x35f\/0x1000 [vkms] ? 0xffffffffc4508000 ? lock_is_held_type+0xd7\/0x130 ? __kmem_cache_alloc_node+0x1c2\/0x2b0 ? lock_is_held_type+0xd7\/0x130 ? 0xffffffffc4508000 do_one_initcall+0xd0\/0x4f0 ... do_syscall_64+0x35\/0x80 entry_SYSCALL_64_after_hwframe+0x46\/0xb0 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d160dfb3fdf11ba9447e862c548447f91f4e74a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3acd2016421b2e628acad65495d15493bf7a3bc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4979524f5a2a8210e87fde2f642b0dc060860821","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e884a6c2d49a6c12761e5bed851e9fe93bd923a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49828","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.260","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhugetlbfs: don't delete error page from pagecache\n\nThis change is very similar to the change that was made for shmem [1], and\nit solves the same problem but for HugeTLBFS instead.\n\nCurrently, when poison is found in a HugeTLB page, the page is removed\nfrom the page cache.  That means that attempting to map or read that\nhugepage in the future will result in a new hugepage being allocated\ninstead of notifying the user that the page was poisoned.  As [1] states,\nthis is effectively memory corruption.\n\nThe fix is to leave the page in the page cache.  If the user attempts to\nuse a poisoned HugeTLB page with a syscall, the syscall will fail with\nEIO, the same error code that shmem uses.  For attempts to map the page,\nthe thread will get a BUS_MCEERR_AR SIGBUS.\n\n[1]: commit a76054266661 (\"mm: shmem: don't truncate page if memory failure happens\")"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: hugetlbfs: no elimine la página de error de la caché de páginas Este cambio es muy similar al cambio que se realizó para shmem [1] y resuelve el mismo problema, pero para HugeTLBFS. Actualmente, cuando se encuentra veneno en una página HugeTLB, la página se elimina de la caché de páginas. Eso significa que intentar mapear o leer esa página enorme en el futuro dará como resultado que se asigne una nueva página enorme en lugar de notificar al usuario que la página fue envenenada. Como indica [1], esto es efectivamente corrupción de memoria. La solución es dejar la página en la caché de páginas. Si el usuario intenta usar una página HugeTLB envenenada con una llamada al sistema, la llamada al sistema fallará con EIO, el mismo código de error que usa shmem. Para los intentos de mapear la página, el hilo obtendrá un SIGBUS BUS_MCEERR_AR. [1]: commit a76054266661 (\"mm: shmem: no truncar la página si se produce un fallo de memoria\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30571f28bb35c826219971c63bcf60d2517112ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8625147cafaa9ba74713d682f5185eb62cb2aedb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec667443b2dbc6cdbbac4073e51a17733158ec6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49829","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.373","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/scheduler: fix fence ref counting\n\nWe leaked dependency fences when processes were beeing killed.\n\nAdditional to that grab a reference to the last scheduled fence."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/scheduler: corrección del conteo de referencias de vallas. Se filtraron vallas de dependencias al finalizar procesos. Además, se obtuvo una referencia a la última valla programada."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b3af84383e7abdc5e63435817bb73a268e7c3637","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5f4b38362df93594cb426b04979d8834122f159","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49830","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.470","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/drv: Fix potential memory leak in drm_dev_init()\n\ndrm_dev_init() will add drm_dev_init_release() as a callback. When\ndrmm_add_action() failed, the release function won't be added. As the\nresult, the ref cnt added by device_get() in drm_dev_init() won't be put\nby drm_dev_init_release(), which leads to the memleak. Use\ndrmm_add_action_or_reset() instead of drmm_add_action() to prevent\nmemleak.\n\nunreferenced object 0xffff88810bc0c800 (size 2048):\n  comm \"modprobe\", pid 8322, jiffies 4305809845 (age 15.292s)\n  hex dump (first 32 bytes):\n    e8 cc c0 0b 81 88 ff ff ff ff ff ff 00 00 00 00  ................\n    20 24 3c 0c 81 88 ff ff 18 c8 c0 0b 81 88 ff ff   $<.............\n  backtrace:\n    [<000000007251f72d>] __kmalloc+0x4b\/0x1c0\n    [<0000000045f21f26>] platform_device_alloc+0x2d\/0xe0\n    [<000000004452a479>] platform_device_register_full+0x24\/0x1c0\n    [<0000000089f4ea61>] 0xffffffffa0736051\n    [<00000000235b2441>] do_one_initcall+0x7a\/0x380\n    [<0000000001a4a177>] do_init_module+0x5c\/0x230\n    [<000000002bf8a8e2>] load_module+0x227d\/0x2420\n    [<00000000637d6d0a>] __do_sys_finit_module+0xd5\/0x140\n    [<00000000c99fc324>] do_syscall_64+0x3f\/0x90\n    [<000000004d85aa77>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/drv: Se solucionó una posible fuga de memoria en drm_dev_init(). drm_dev_init() añadirá drm_dev_init_release() como devolución de llamada. Si drmm_add_action() falla, la función de liberación no se añadirá. Como resultado, el valor de referencia añadido por device_get() en drm_dev_init() no se incluirá en drm_dev_init_release(), lo que provoca la fuga de memoria. Utilice drmm_add_action_or_reset() en lugar de drmm_add_action() para evitar la fuga de memoria. objeto sin referencia 0xffff88810bc0c800 (tamaño 2048): comm \"modprobe\", pid 8322, jiffies 4305809845 (antigüedad 15.292s) volcado hexadecimal (primeros 32 bytes): e8 cc c0 0b 81 88 ff ff ff ff ff ff ff 00 00 00 00 ................ 20 24 3c 0c 81 88 ff ff 18 c8 c0 0b 81 88 ff ff $&lt;............. backtrace:  [&lt;000000007251f72d&gt;] __kmalloc+0x4b\/0x1c0 [&lt;0000000045f21f26&gt;] platform_device_alloc+0x2d\/0xe0 [&lt;000000004452a479&gt;] platform_device_register_full+0x24\/0x1c0 [&lt;0000000089f4ea61&gt;] 0xffffffffa0736051 [&lt;00000000235b2441&gt;] do_one_initcall+0x7a\/0x380 [&lt;0000000001a4a177&gt;] do_init_module+0x5c\/0x230 [&lt;000000002bf8a8e2&gt;] load_module+0x227d\/0x2420 [&lt;00000000637d6d0a&gt;] __do_sys_finit_module+0xd5\/0x140 [&lt;00000000c99fc324&gt;] do_syscall_64+0x3f\/0x90 [&lt;000000004d85aa77&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07e56de8766fe5be67252596244b84ac0ec0de91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd8d1335e6e70a396094ef98913b513140c0b86b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c47a823ea186263ab69cfb665327b7f72cb5e779","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff963634f7b2e0dc011349abb3fb81a0d074f443","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49831","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.573","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: initialize device's zone info for seeding\n\nWhen performing seeding on a zoned filesystem it is necessary to\ninitialize each zoned device's btrfs_zoned_device_info structure,\notherwise mounting the filesystem will cause a NULL pointer dereference.\n\nThis was uncovered by fstests' testcase btrfs\/163."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: zoned: inicializar la información de zona del dispositivo para la propagación. Al propagar en un sistema de archivos con zonas, es necesario inicializar la estructura btrfs_zoned_device_info de cada dispositivo; de lo contrario, al montar el sistema de archivos se producirá una desreferencia de puntero nulo. Esto fue descubierto por el caso de prueba btrfs\/163 de fstests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/544f38a738343d7e75f104e5e9d1ade58d8b71bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91c38504e589dadbcde47b1cacdfc5b684154d44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8d1b1647bf8244a5f270538e9e636e2657fffa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49832","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.673","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: devicetree: fix null pointer dereferencing in pinctrl_dt_to_map\n\nHere is the BUG report by KASAN about null pointer dereference:\n\nBUG: KASAN: null-ptr-deref in strcmp+0x2e\/0x50\nRead of size 1 at addr 0000000000000000 by task python3\/2640\nCall Trace:\n strcmp\n __of_find_property\n of_find_property\n pinctrl_dt_to_map\n\nkasprintf() would return NULL pointer when kmalloc() fail to allocate.\nSo directly return ENOMEM, if kasprintf() return NULL pointer."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: pinctrl: devicetree: corrección de la desreferencia de puntero nulo en pinctrl_dt_to_map Aquí está el informe de ERROR de KASAN sobre la desreferencia de puntero nulo: ERROR: KASAN: null-ptr-deref en strcmp+0x2e\/0x50 Lectura de tamaño 1 en la dirección 0000000000000000 por la tarea python3\/2640 Rastreo de llamadas: strcmp __of_find_property of_find_property pinctrl_dt_to_map kasprintf() devolvería un puntero NULL cuando kmalloc() no pudiera asignar. Por lo tanto, devuelve directamente ENOMEM, si kasprintf() devuelve un puntero NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/040f726fecd88121f3b95e70369785ad452dddf9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5834a3a98cd266ad35a229923c0adbd0addc8d68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/777430aa4ddccaa5accec6db90ffc1d47f00d471","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91d5c5060ee24fe8da88cd585bb43b843d2f0dce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97e5b508e96176f1a73888ed89df396d7041bfcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a988dcd3dd9e691c5ccc3324b209688f3b5453e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaf552c5d53abe4659176e099575fe870d2e4768","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4d9f55cd38435358bc16d580612bc0d798d7b4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49833","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.780","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: clone zoned device info when cloning a device\n\nWhen cloning a btrfs_device, we're not cloning the associated\nbtrfs_zoned_device_info structure of the device in case of a zoned\nfilesystem.\n\nLater on this leads to a NULL pointer dereference when accessing the\ndevice's zone_info for instance when setting a zone as active.\n\nThis was uncovered by fstests' testcase btrfs\/161."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: zoned: clonar información de dispositivo zonificado al clonar un dispositivo. Al clonar un btrfs_device, no se clona la estructura btrfs_zoned_device_info asociada al dispositivo en el caso de un sistema de archivos zonificado. Posteriormente, esto provoca una desreferencia de puntero nulo al acceder a zone_info del dispositivo, por ejemplo, al activar una zona. Esto fue descubierto por el caso de prueba btrfs\/161 de fstests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21e61ec6d0bb786818490e926aa9aeb4de95ad0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad88cabcec942c033f980cd1e28d56ecdaf5f3b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49834","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.873","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix use-after-free bug of ns_writer on remount\n\nIf a nilfs2 filesystem is downgraded to read-only due to metadata\ncorruption on disk and is remounted read\/write, or if emergency read-only\nremount is performed, detaching a log writer and synchronizing the\nfilesystem can be done at the same time.\n\nIn these cases, use-after-free of the log writer (hereinafter\nnilfs->ns_writer) can happen as shown in the scenario below:\n\n Task1                               Task2\n --------------------------------    ------------------------------\n nilfs_construct_segment\n   nilfs_segctor_sync\n     init_wait\n     init_waitqueue_entry\n     add_wait_queue\n     schedule\n                                     nilfs_remount (R\/W remount case)\n\t\t\t\t       nilfs_attach_log_writer\n                                         nilfs_detach_log_writer\n                                           nilfs_segctor_destroy\n                                             kfree\n     finish_wait\n       _raw_spin_lock_irqsave\n         __raw_spin_lock_irqsave\n           do_raw_spin_lock\n             debug_spin_lock_before  <-- use-after-free\n\nWhile Task1 is sleeping, nilfs->ns_writer is freed by Task2.  After Task1\nwaked up, Task1 accesses nilfs->ns_writer which is already freed.  This\nscenario diagram is based on the Shigeru Yoshida's post [1].\n\nThis patch fixes the issue by not detaching nilfs->ns_writer on remount so\nthat this UAF race doesn't happen.  Along with this change, this patch\nalso inserts a few necessary read-only checks with superblock instance\nwhere only the ns_writer pointer was used to check if the filesystem is\nread-only."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nilfs2: corrige el error de use-after-free de ns_writer al volver a montar Si un sistema de archivos nilfs2 se degrada a solo lectura debido a la corrupción de metadatos en el disco y se vuelve a montar en modo de lectura\/escritura, o si se realiza un remontaje de solo lectura de emergencia, se puede desconectar un escritor de registros y sincronizar el sistema de archivos al mismo tiempo. En estos casos, el use-after-free del escritor de registros (en adelante nilfs-&gt;ns_writer) puede ocurrir como se muestra en el siguiente escenario: Tarea1 Tarea2 -------------------------------- ---------------------------------- nilfs_construct_segment nilfs_segctor_sync init_wait init_waitqueue_entry add_wait_queue schedule nilfs_remount (caso de remontaje de R\/W) nilfs_attach_log_writer nilfs_detach_log_writer nilfs_segctor_destroy kfree finish_wait _raw_spin_lock_irqsave __raw_spin_lock_irqsave do_raw_spin_lock debug_spin_lock_before &lt;-- use-after-free Mientras la Tarea1 está en reposo, nilfs-&gt;ns_writer es liberado por la Tarea2. Después de que la Tarea1 se despierta, la Tarea1 accede a nilfs-&gt;ns_writer que ya está liberado. Este diagrama de escenario se basa en la publicación de Shigeru Yoshida [1]. Este parche corrige el problema al no desvincular nilfs-&gt;ns_writer al volver a montar, lo que evita que se produzca esta ejecución UAF. Además de este cambio, este parche también inserta algunas comprobaciones de solo lectura necesarias con la instancia de superbloque, donde solo se usaba el puntero ns_writer para comprobar si el sistema de archivos era de solo lectura."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39a3ed68270b079c6b874d4e4727a512b9b4882c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4feedde5486c07ea79787839153a71ca71329c7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cccf05fe857a18ee26e20d11a8455a73ffd4efd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b162e81045266a2d5b44df9dffdf05c54de9cca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afbd1188382a75f6cfe22c0b68533f7f9664f182","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b152300d5a1ba4258dacf9916bff20e6a8c7603b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2fbf10040216ef5ee270773755fc2f5da65b749","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4736ab5542112fe0a40f140a0a0b072954f34da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49835","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:06.980","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: fix potential memleak in 'add_widget_node'\n\nAs 'kobject_add' may allocated memory for 'kobject->name' when return error.\nAnd in this function, if call 'kobject_add' failed didn't free kobject.\nSo call 'kobject_put' to recycling resources."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ALSA: hda: se corrige una posible fuga de memoria en 'add_widget_node'. 'kobject_add' podría asignar memoria a 'kobject-&gt;name' cuando devuelve un error. En esta función, si la llamada a 'kobject_add' falla, no se libera kobject. Por lo tanto, se llama a 'kobject_put' para reciclar recursos."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02dea987ec1cac712c78e75d224ceb9bb73519ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a79f9568de08657fcdbc41d6fc4c0ca145a7a2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/455d99bd6baf19688048b6d42d9fa74eae27f93b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7140d7aaf93da6a665b454f91bb4dc6b1de218bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b7d055e2b5f39429f9a9e3815b48a48530ef28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a5523f72bd2b0d66eef3d58810c6eb7b5ffc143","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b688a3ec235222d9a84e43a48a6f31acb95baf2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb0ac8d5e541224f599bc8e8f31a313faa4bf7b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49836","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.087","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsiox: fix possible memory leak in siox_device_add()\n\nIf device_register() returns error in siox_device_add(),\nthe name allocated by dev_set_name() need be freed. As\ncomment of device_register() says, it should use put_device()\nto give up the reference in the error path. So fix this\nby calling put_device(), then the name can be freed in\nkobject_cleanup(), and sdevice is freed in siox_device_release(),\nset it to null in error path."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: siox: Se corrige una posible fuga de memoria en siox_device_add(). Si device_register() devuelve un error en siox_device_add(), se debe liberar el nombre asignado por dev_set_name(). Como se indica en el comentario de device_register(), se debe usar put_device() para liberar la referencia en la ruta de error. Para solucionar esto, se debe llamar a put_device(); de esta manera, se puede liberar el nombre en kobject_cleanup() y sdevice se libera en siox_device_release(); configúrelo como nulo en la ruta de error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a5da069603ecc3d7aa09167450235462adaa295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d03c2911c529ea4d6ebfec53425f1091e8d402b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e63153db50059fb78b8a8447b132664887d24e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4b5423f88a17a36550ae8c16c46779b1ee42f4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9c31e728843259209fb530c59995e4fe262699f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9fe7ba4ea5b24ffdf8e125f660aca3ba4a147fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49837","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.187","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix memory leaks in __check_func_call\n\nkmemleak reports this issue:\n\nunreferenced object 0xffff88817139d000 (size 2048):\n  comm \"test_progs\", pid 33246, jiffies 4307381979 (age 45851.820s)\n  hex dump (first 32 bytes):\n    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<0000000045f075f0>] kmalloc_trace+0x27\/0xa0\n    [<0000000098b7c90a>] __check_func_call+0x316\/0x1230\n    [<00000000b4c3c403>] check_helper_call+0x172e\/0x4700\n    [<00000000aa3875b7>] do_check+0x21d8\/0x45e0\n    [<000000001147357b>] do_check_common+0x767\/0xaf0\n    [<00000000b5a595b4>] bpf_check+0x43e3\/0x5bc0\n    [<0000000011e391b1>] bpf_prog_load+0xf26\/0x1940\n    [<0000000007f765c0>] __sys_bpf+0xd2c\/0x3650\n    [<00000000839815d6>] __x64_sys_bpf+0x75\/0xc0\n    [<00000000946ee250>] do_syscall_64+0x3b\/0x90\n    [<0000000000506b7f>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe root case here is: In function prepare_func_exit(), the callee is\nnot released in the abnormal scenario after \"state->curframe--;\". To\nfix, move \"state->curframe--;\" to the very bottom of the function,\nright when we free callee and reset frame[] pointer to NULL, as Andrii\nsuggested.\n\nIn addition, function __check_func_call() has a similar problem. In\nthe abnormal scenario before \"state->curframe++;\", the callee also\nshould be released by free_func_state()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf: Se corrigen fugas de memoria en __check_func_call kmemleak informa de este problema: objeto sin referencia 0xffff88817139d000 (tamaño 2048): comm \"test_progs\", pid 33246, jiffies 4307381979 (edad 45851.820s) volcado hexadecimal (primeros 32 bytes): 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;0000000045f075f0&gt;] kmalloc_trace+0x27\/0xa0 [&lt;0000000098b7c90a&gt;] __check_func_call+0x316\/0x1230 [&lt;00000000b4c3c403&gt;] check_helper_call+0x172e\/0x4700 [&lt;00000000aa3875b7&gt;] do_check+0x21d8\/0x45e0 [&lt;000000001147357b&gt;] do_check_common+0x767\/0xaf0 [&lt;00000000b5a595b4&gt;] bpf_check+0x43e3\/0x5bc0 [&lt;0000000011e391b1&gt;] bpf_prog_load+0xf26\/0x1940 [&lt;0000000007f765c0&gt;] __sys_bpf+0xd2c\/0x3650 [&lt;00000000839815d6&gt;] __x64_sys_bpf+0x75\/0xc0 [&lt;00000000946ee250&gt;] do_syscall_64+0x3b\/0x90 [&lt;0000000000506b7f&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd El caso raíz aquí es: En la función prepare_func_exit(), el llamado no se libera en el escenario anormal después de \"state-&gt;curframe--;\". Para solucionarlo, mueva \"state-&gt;curframe--;\" al final de la función, justo cuando liberamos al destinatario y restablecemos el puntero frame[] a NULL, como sugirió Andrii. Además, la función __check_func_call() presenta un problema similar. En el escenario anormal anterior a \"state-&gt;curframe++;\", el destinatario también debería ser liberado por free_func_state()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/83946d772e756734a900ef99dbe0aeda506adf37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4944497827a3d14bc5a26dbcfb7433eb5a956c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb86559a691cea5fa63e57a03ec3dc9c31e97955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49838","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.290","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: clear out_curr if all frag chunks of current msg are pruned\n\nA crash was reported by Zhen Chen:\n\n  list_del corruption, ffffa035ddf01c18->next is NULL\n  WARNING: CPU: 1 PID: 250682 at lib\/list_debug.c:49 __list_del_entry_valid+0x59\/0xe0\n  RIP: 0010:__list_del_entry_valid+0x59\/0xe0\n  Call Trace:\n   sctp_sched_dequeue_common+0x17\/0x70 [sctp]\n   sctp_sched_fcfs_dequeue+0x37\/0x50 [sctp]\n   sctp_outq_flush_data+0x85\/0x360 [sctp]\n   sctp_outq_uncork+0x77\/0xa0 [sctp]\n   sctp_cmd_interpreter.constprop.0+0x164\/0x1450 [sctp]\n   sctp_side_effects+0x37\/0xe0 [sctp]\n   sctp_do_sm+0xd0\/0x230 [sctp]\n   sctp_primitive_SEND+0x2f\/0x40 [sctp]\n   sctp_sendmsg_to_asoc+0x3fa\/0x5c0 [sctp]\n   sctp_sendmsg+0x3d5\/0x440 [sctp]\n   sock_sendmsg+0x5b\/0x70\n\nand in sctp_sched_fcfs_dequeue() it dequeued a chunk from stream\nout_curr outq while this outq was empty.\n\nNormally stream->out_curr must be set to NULL once all frag chunks of\ncurrent msg are dequeued, as we can see in sctp_sched_dequeue_done().\nHowever, in sctp_prsctp_prune_unsent() as it is not a proper dequeue,\nsctp_sched_dequeue_done() is not called to do this.\n\nThis patch is to fix it by simply setting out_curr to NULL when the\nlast frag chunk of current msg is dequeued from out_curr stream in\nsctp_prsctp_prune_unsent()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: sctp: borrar out_curr si se eliminan todos los fragmentos del mensaje actual. Zhen Chen informó de un fallo: corrupción de list_del, ffffa035ddf01c18-&gt;next es NULL ADVERTENCIA: CPU: 1 PID: 250682 en lib\/list_debug.c:49 __list_del_entry_valid+0x59\/0xe0 RIP: 0010:__list_del_entry_valid+0x59\/0xe0 Rastreo de llamadas: sctp_sched_dequeue_common+0x17\/0x70 [sctp] sctp_sched_fcfs_dequeue+0x37\/0x50 [sctp] sctp_outq_flush_data+0x85\/0x360 [sctp] sctp_outq_uncork+0x77\/0xa0 [sctp] sctp_cmd_interpreter.constprop.0+0x164\/0x1450 [sctp] sctp_side_effects+0x37\/0xe0 [sctp] sctp_do_sm+0xd0\/0x230 [sctp] sctp_primitive_SEND+0x2f\/0x40 [sctp] sctp_sendmsg_to_asoc+0x3fa\/0x5c0 [sctp] sctp_sendmsg+0x3d5\/0x440 [sctp] sock_sendmsg+0x5b\/0x70 y en sctp_sched_fcfs_dequeue() quitó de la cola un fragmento del flujo out_curr outq mientras este outq estaba vacío. Normalmente, stream-&gt;out_curr debe establecerse en NULL una vez que se hayan desencolado todos los fragmentos del mensaje actual, como se puede ver en sctp_sched_dequeue_done(). Sin embargo, en sctp_prsctp_prune_unsent(), dado que no es una desencola adecuada, no se llama a sctp_sched_dequeue_done() para realizar esto. Este parche soluciona este problema simplemente estableciendo out_curr en NULL cuando se desencola el último fragmento del mensaje actual del flujo out_curr en sctp_prsctp_prune_unsent()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ea600b598dd3e061854dd4dd5b4c815397dfcea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f201ae14ae0f91dbf1cffea7bb1e29e81d4d108","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eff34e01062ec08fbb45ce2baaaa644550be821","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e27458b18b35caee4b27b37a4a9c503b93cae5cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49839","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.390","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_transport_sas: Fix error handling in sas_phy_add()\n\nIf transport_add_device() fails in sas_phy_add(), the kernel will crash\ntrying to delete the device in transport_remove_device() called from\nsas_remove_host().\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000108\nCPU: 61 PID: 42829 Comm: rmmod Kdump: loaded Tainted: G        W          6.1.0-rc1+ #173\npstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : device_del+0x54\/0x3d0\nlr : device_del+0x37c\/0x3d0\nCall trace:\n device_del+0x54\/0x3d0\n attribute_container_class_device_del+0x28\/0x38\n transport_remove_classdev+0x6c\/0x80\n attribute_container_device_trigger+0x108\/0x110\n transport_remove_device+0x28\/0x38\n sas_phy_delete+0x30\/0x60 [scsi_transport_sas]\n do_sas_phy_delete+0x6c\/0x80 [scsi_transport_sas]\n device_for_each_child+0x68\/0xb0\n sas_remove_children+0x40\/0x50 [scsi_transport_sas]\n sas_remove_host+0x20\/0x38 [scsi_transport_sas]\n hisi_sas_remove+0x40\/0x68 [hisi_sas_main]\n hisi_sas_v2_remove+0x20\/0x30 [hisi_sas_v2_hw]\n platform_remove+0x2c\/0x60\n\nFix this by checking and handling return value of transport_add_device()\nin sas_phy_add()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: scsi: scsi_transport_sas: Corregir error de manejo en sas_phy_add() Si transport_add_device() falla en sas_phy_add(), el kernel se bloqueará al intentar eliminar el dispositivo en transport_remove_device() llamado desde sas_remove_host(). No se puede manejar la desreferencia del puntero NULL del núcleo en la dirección virtual 0000000000000108 CPU: 61 PID: 42829 Comm: rmmod Kdump: cargado Tainted: GW 6.1.0-rc1+ #173 pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc : device_del+0x54\/0x3d0 lr : device_del+0x37c\/0x3d0 Rastreo de llamadas: device_del+0x54\/0x3d0 attribute_container_class_device_del+0x28\/0x38 transport_remove_classdev+0x6c\/0x80 attribute_container_device_trigger+0x108\/0x110 transport_remove_device+0x28\/0x38 sas_phy_delete+0x30\/0x60 [scsi_transport_sas] do_sas_phy_delete+0x6c\/0x80 [scsi_transport_sas] device_for_each_child+0x68\/0xb0 sas_remove_children+0x40\/0x50 [scsi_transport_sas] sas_remove_host+0x20\/0x38 [scsi_transport_sas] hisi_sas_remove+0x40\/0x68 [hisi_sas_main] hisi_sas_v2_remove+0x20\/0x30 [hisi_sas_v2_hw] platform_remove+0x2c\/0x60 Fix this by checking and handling return value of transport_add_device() in sas_phy_add(). "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03aabcb88aeeb7221ddb6196ae84ad5fb17b743f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f21d653c648735657e23948b1d7ac7273de0f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d7bebf2dfb0dc97aac1fbace0910e557ecdb16f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c736876ee294bb4f271d76a25cc7d70c8537bc5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49840","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.493","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, test_run: Fix alignment problem in bpf_prog_test_run_skb()\n\nWe got a syzkaller problem because of aarch64 alignment fault\nif KFENCE enabled. When the size from user bpf program is an odd\nnumber, like 399, 407, etc, it will cause the struct skb_shared_info's\nunaligned access. As seen below:\n\n  BUG: KFENCE: use-after-free read in __skb_clone+0x23c\/0x2a0 net\/core\/skbuff.c:1032\n\n  Use-after-free read at 0xffff6254fffac077 (in kfence-#213):\n   __lse_atomic_add arch\/arm64\/include\/asm\/atomic_lse.h:26 [inline]\n   arch_atomic_add arch\/arm64\/include\/asm\/atomic.h:28 [inline]\n   arch_atomic_inc include\/linux\/atomic-arch-fallback.h:270 [inline]\n   atomic_inc include\/asm-generic\/atomic-instrumented.h:241 [inline]\n   __skb_clone+0x23c\/0x2a0 net\/core\/skbuff.c:1032\n   skb_clone+0xf4\/0x214 net\/core\/skbuff.c:1481\n   ____bpf_clone_redirect net\/core\/filter.c:2433 [inline]\n   bpf_clone_redirect+0x78\/0x1c0 net\/core\/filter.c:2420\n   bpf_prog_d3839dd9068ceb51+0x80\/0x330\n   bpf_dispatcher_nop_func include\/linux\/bpf.h:728 [inline]\n   bpf_test_run+0x3c0\/0x6c0 net\/bpf\/test_run.c:53\n   bpf_prog_test_run_skb+0x638\/0xa7c net\/bpf\/test_run.c:594\n   bpf_prog_test_run kernel\/bpf\/syscall.c:3148 [inline]\n   __do_sys_bpf kernel\/bpf\/syscall.c:4441 [inline]\n   __se_sys_bpf+0xad0\/0x1634 kernel\/bpf\/syscall.c:4381\n\n  kfence-#213: 0xffff6254fffac000-0xffff6254fffac196, size=407, cache=kmalloc-512\n\n  allocated by task 15074 on cpu 0 at 1342.585390s:\n   kmalloc include\/linux\/slab.h:568 [inline]\n   kzalloc include\/linux\/slab.h:675 [inline]\n   bpf_test_init.isra.0+0xac\/0x290 net\/bpf\/test_run.c:191\n   bpf_prog_test_run_skb+0x11c\/0xa7c net\/bpf\/test_run.c:512\n   bpf_prog_test_run kernel\/bpf\/syscall.c:3148 [inline]\n   __do_sys_bpf kernel\/bpf\/syscall.c:4441 [inline]\n   __se_sys_bpf+0xad0\/0x1634 kernel\/bpf\/syscall.c:4381\n   __arm64_sys_bpf+0x50\/0x60 kernel\/bpf\/syscall.c:4381\n\nTo fix the problem, we adjust @size so that (@size + @hearoom) is a\nmultiple of SMP_CACHE_BYTES. So we make sure the struct skb_shared_info\nis aligned to a cache line."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf, test_run: Se solucionó un problema de alineación en bpf_prog_test_run_skb(). Se detectó un problema en syzkaller debido a un fallo de alineación de aarch64 si KFENCE estaba habilitado. Cuando el tamaño del programa bpf del usuario es un número impar, como 399, 407, etc., se produce un acceso no alineado a la estructura skb_shared_info. Como se ve a continuación: ERROR: KFENCE: lectura de use-after-free en __skb_clone+0x23c\/0x2a0 net\/core\/skbuff.c:1032 Lectura de use-after-free en 0xffff6254fffac077 (en kfence-#213): __lse_atomic_add arch\/arm64\/include\/asm\/atomic_lse.h:26 [en línea] arch_atomic_add arch\/arm64\/include\/asm\/atomic.h:28 [en línea] arch_atomic_inc include\/linux\/atomic-arch-fallback.h:270 [en línea] atomic_inc include\/asm-generic\/atomic-instrumented.h:241 [en línea] __skb_clone+0x23c\/0x2a0 net\/core\/skbuff.c:1032 skb_clone+0xf4\/0x214 net\/core\/skbuff.c:1481 ____bpf_clone_redirect net\/core\/filter.c:2433 [en línea] bpf_clone_redirect+0x78\/0x1c0 net\/core\/filter.c:2420 bpf_prog_d3839dd9068ceb51+0x80\/0x330 bpf_dispatcher_nop_func include\/linux\/bpf.h:728 [en línea] bpf_test_run+0x3c0\/0x6c0 net\/bpf\/test_run.c:53 bpf_prog_test_run_skb+0x638\/0xa7c net\/bpf\/test_run.c:594 bpf_prog_test_run kernel\/bpf\/syscall.c:3148 [en línea] __do_sys_bpf kernel\/bpf\/syscall.c:4441 [en línea] __se_sys_bpf+0xad0\/0x1634 kernel\/bpf\/syscall.c:4381 kfence-#213: 0xffff6254fffac000-0xffff6254fffac196, tamaño=407, caché=kmalloc-512 asignado por la tarea 15074 en la CPU 0 a las 1342.585390 s: kmalloc include\/linux\/slab.h:568 [en línea] kzalloc include\/linux\/slab.h:675 [en línea] bpf_test_init.isra.0+0xac\/0x290 Para corregir el problema, ajustamos @size de modo que (@size + @hearoom) sea un múltiplo de SMP_CACHE_BYTES. Así nos aseguramos de que la estructura skb_shared_info esté alineada con una línea de caché."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/047824a730699c6c66df43306b80f700c9dfc2fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b597f2d6a55e9f549989913860ad5170da04964","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/730fb1ef974a13915bc7651364d8b3318891cd70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a704dbfd3735304e261f2787c52fbc7c3884736","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3fd203f36d46aa29600a72d57a1b61af80e4a25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e60f37a1d379c821c17b08f366412dce9ef3d99f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaa8edd86514afac9deb9bf9a5053e74f37edf40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49841","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.600","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nserial: imx: Add missing .thaw_noirq hook\n\nThe following warning is seen with non-console UART instance when\nsystem hibernates.\n\n[   37.371969] ------------[ cut here ]------------\n[   37.376599] uart3_root_clk already disabled\n[   37.380810] WARNING: CPU: 0 PID: 296 at drivers\/clk\/clk.c:952 clk_core_disable+0xa4\/0xb0\n...\n[   37.506986] Call trace:\n[   37.509432]  clk_core_disable+0xa4\/0xb0\n[   37.513270]  clk_disable+0x34\/0x50\n[   37.516672]  imx_uart_thaw+0x38\/0x5c\n[   37.520250]  platform_pm_thaw+0x30\/0x6c\n[   37.524089]  dpm_run_callback.constprop.0+0x3c\/0xd4\n[   37.528972]  device_resume+0x7c\/0x160\n[   37.532633]  dpm_resume+0xe8\/0x230\n[   37.536036]  hibernation_snapshot+0x288\/0x430\n[   37.540397]  hibernate+0x10c\/0x2e0\n[   37.543798]  state_store+0xc4\/0xd0\n[   37.547203]  kobj_attr_store+0x1c\/0x30\n[   37.550953]  sysfs_kf_write+0x48\/0x60\n[   37.554619]  kernfs_fop_write_iter+0x118\/0x1ac\n[   37.559063]  new_sync_write+0xe8\/0x184\n[   37.562812]  vfs_write+0x230\/0x290\n[   37.566214]  ksys_write+0x68\/0xf4\n[   37.569529]  __arm64_sys_write+0x20\/0x2c\n[   37.573452]  invoke_syscall.constprop.0+0x50\/0xf0\n[   37.578156]  do_el0_svc+0x11c\/0x150\n[   37.581648]  el0_svc+0x30\/0x140\n[   37.584792]  el0t_64_sync_handler+0xe8\/0xf0\n[   37.588976]  el0t_64_sync+0x1a0\/0x1a4\n[   37.592639] ---[ end trace 56e22eec54676d75 ]---\n\nOn hibernating, pm core calls into related hooks in sequence like:\n\n    .freeze\n    .freeze_noirq\n    .thaw_noirq\n    .thaw\n\nWith .thaw_noirq hook being absent, the clock will be disabled in a\nunbalanced call which results the warning above.\n\n    imx_uart_freeze()\n        clk_prepare_enable()\n    imx_uart_suspend_noirq()\n        clk_disable()\n    imx_uart_thaw\n        clk_disable_unprepare()\n\nAdding the missing .thaw_noirq hook as imx_uart_resume_noirq() will have\nthe call sequence corrected as below and thus fix the warning.\n\n    imx_uart_freeze()\n        clk_prepare_enable()\n    imx_uart_suspend_noirq()\n        clk_disable()\n    imx_uart_resume_noirq()\n        clk_enable()\n    imx_uart_thaw\n        clk_disable_unprepare()"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: serial: imx: Agregar el gancho .thaw_noirq faltante. La siguiente advertencia se ve con una instancia UART que no es de consola cuando el sistema hiberna. [ 37.371969] ------------[ cortar aquí ]------------ [ 37.376599] uart3_root_clk ya está deshabilitado [ 37.380810] ADVERTENCIA: CPU: 0 PID: 296 en drivers\/clk\/clk.c:952 clk_core_disable+0xa4\/0xb0 ... [ 37.506986] Rastreo de llamadas: [ 37.509432] clk_core_disable+0xa4\/0xb0 [ 37.513270] clk_disable+0x34\/0x50 [ 37.516672] imx_uart_thaw+0x38\/0x5c [ 37.520250] platform_pm_thaw+0x30\/0x6c [ 37.524089] dpm_run_callback.constprop.0+0x3c\/0xd4 [ 37.528972] device_resume+0x7c\/0x160 [ 37.532633] dpm_resume+0xe8\/0x230 [ 37.536036] hibernation_snapshot+0x288\/0x430 [ 37.540397] hibernate+0x10c\/0x2e0 [ 37.543798] state_store+0xc4\/0xd0 [ 37.547203] kobj_attr_store+0x1c\/0x30 [ 37.550953] sysfs_kf_write+0x48\/0x60 [ 37.554619] kernfs_fop_write_iter+0x118\/0x1ac [ 37.559063] new_sync_write+0xe8\/0x184 [ 37.562812] vfs_write+0x230\/0x290 [ 37.566214] ksys_write+0x68\/0xf4 [ 37.569529] __arm64_sys_write+0x20\/0x2c [ 37.573452] invoke_syscall.constprop.0+0x50\/0xf0 [ 37.578156] do_el0_svc+0x11c\/0x150 [ 37.581648] el0_svc+0x30\/0x140 [ 37.584792] el0t_64_sync_handler+0xe8\/0xf0 [ 37.588976] el0t_64_sync+0x1a0\/0x1a4 [ 37.592639] ---[ end trace 56e22eec54676d75 ] Al hibernar, el núcleo pm llama a los ganchos relacionados en secuencia como: .freeze .freeze_noirq .thaw_noirq .thaw Si el gancho .thaw_noirq está ausente, el reloj se deshabilitará en una llamada desequilibrada que genera la advertencia anterior. imx_uart_freeze() clk_prepare_enable() imx_uart_suspend_noirq() clk_disable() imx_uart_thaw clk_disable_unprepare() Agregar el gancho .thaw_noirq faltante como imx_uart_resume_noirq() corregirá la secuencia de llamada como se muestra a continuación y, por lo tanto, solucionará la advertencia. imx_uart_freeze() clk_prepare_enable() imx_uart_suspend_noirq() clk_disable() imx_uart_resume_noirq() clk_enable() imx_uart_thaw clk_disable_unprepare()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a3160f4ffc70ee4bfa1521f698dace06e6091fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4561d8008a467cb05ac632a215391d6b787f40aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/476b09e07bd519ec7ba5941a6a6f9a02256dbb21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae22294e213a402a70fa1731538367d1b758ffe7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3f9d87d6f0732827c443bd1474df21c2fad704b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e401312ca6e180ee1bd65f6a766e99dd40aa95e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49842","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.703","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: core: Fix use-after-free in snd_soc_exit()\n\nKASAN reports a use-after-free:\n\nBUG: KASAN: use-after-free in device_del+0xb5b\/0xc60\nRead of size 8 at addr ffff888008655050 by task rmmod\/387\nCPU: 2 PID: 387 Comm: rmmod\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nCall Trace:\n<TASK>\ndump_stack_lvl+0x79\/0x9a\nprint_report+0x17f\/0x47b\nkasan_report+0xbb\/0xf0\ndevice_del+0xb5b\/0xc60\nplatform_device_del.part.0+0x24\/0x200\nplatform_device_unregister+0x2e\/0x40\nsnd_soc_exit+0xa\/0x22 [snd_soc_core]\n__do_sys_delete_module.constprop.0+0x34f\/0x5b0\ndo_syscall_64+0x3a\/0x90\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n...\n<\/TASK>\n\nIt's bacause in snd_soc_init(), snd_soc_util_init() is possble to fail,\nbut its ret is ignored, which makes soc_dummy_dev unregistered twice.\n\nsnd_soc_init()\n    snd_soc_util_init()\n        platform_device_register_simple(soc_dummy_dev)\n        platform_driver_register() # fail\n    \tplatform_device_unregister(soc_dummy_dev)\n    platform_driver_register() # success\n...\nsnd_soc_exit()\n    snd_soc_util_exit()\n    # soc_dummy_dev will be unregistered for second time\n\nTo fix it, handle error and stop snd_soc_init() when util_init() fail.\nAlso clean debugfs when util_init() or driver_register() fail."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ASoC: núcleo: Se corrige el use-after-free en snd_soc_exit() KASAN informa un use-after-free: ERROR: KASAN: use-after-free en device_del+0xb5b\/0xc60 Lectura de tamaño 8 en la dirección ffff888008655050 por la tarea rmmod\/387 CPU: 2 PID: 387 Comm: rmmod Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996) Rastreo de llamadas:  dump_stack_lvl+0x79\/0x9a print_report+0x17f\/0x47b kasan_report+0xbb\/0xf0 device_del+0xb5b\/0xc60 platform_device_del.part.0+0x24\/0x200 platform_device_unregister+0x2e\/0x40 snd_soc_exit+0xa\/0x22 [snd_soc_core] __do_sys_delete_module.constprop.0+0x34f\/0x5b0 do_syscall_64+0x3a\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd ...  It's bacause in snd_soc_init(), snd_soc_util_init() is possble to fail, but its ret is ignored, which makes soc_dummy_dev unregistered twice. snd_soc_init() snd_soc_util_init() platform_device_register_simple(soc_dummy_dev) platform_driver_register() # fail platform_device_unregister(soc_dummy_dev) platform_driver_register() # success ... snd_soc_exit() snd_soc_util_exit() # soc_dummy_dev will be unregistered for second time To fix it, handle error and stop snd_soc_init() when util_init() fail. Also clean debugfs when util_init() or driver_register() fail. "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ec3f558db343b045a7c7419cdbaec266b8ac1a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34eee4189bcebbd5f6a2ff25ef0cb893ad33d51e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41fad4f712e081acdfde8b59847f9f66eaf407a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ec27c53886c8963729885bcf2dd996eba2767a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d21554ec7680e9585fb852d933203c3db60dad1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90bbdf30a51e42378cb23a312005a022794b8e1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3365e62239dc064019a244bde5686ac18527c22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5674bd073c0fd9f620ca550c5ff08d0d429bdd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49843","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.807","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Migrate in CPU page fault use current mm\n\nmigrate_vma_setup shows below warning because we don't hold another\nprocess mm mmap_lock. We should use current vmf->vma->vm_mm instead, the\ncaller already hold current mmap lock inside CPU page fault handler.\n\n WARNING: CPU: 10 PID: 3054 at include\/linux\/mmap_lock.h:155 find_vma\n Call Trace:\n  walk_page_range+0x76\/0x150\n  migrate_vma_setup+0x18a\/0x640\n  svm_migrate_vram_to_ram+0x245\/0xa10 [amdgpu]\n  svm_migrate_to_ram+0x36f\/0x470 [amdgpu]\n  do_swap_page+0xcfe\/0xec0\n  __handle_mm_fault+0x96b\/0x15e0\n  handle_mm_fault+0x13f\/0x3e0\n  do_user_addr_fault+0x1e7\/0x690"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amdkfd: Migrar en la CPU con fallos de página al usar la función mm actual. El método \"migrate_vma_setup\" muestra la siguiente advertencia porque no se mantiene el bloqueo mmap_lock de otro proceso. Deberíamos usar la función \"vmf-&gt;vma-&gt;vm_mm\" actual, ya que el llamador ya mantiene el bloqueo mmap actual dentro del controlador de fallos de página de la CPU. ADVERTENCIA: CPU: 10 PID: 3054 en include\/linux\/mmap_lock.h:155 Seguimiento de llamadas find_vma: walk_page_range+0x76\/0x150 migrate_vma_setup+0x18a\/0x640 svm_migrate_vram_to_ram+0x245\/0xa10 [amdgpu] svm_migrate_to_ram+0x36f\/0x470 [amdgpu] do_swap_page+0xcfe\/0xec0 __handle_mm_fault+0x96b\/0x15e0 handle_mm_fault+0x13f\/0x3e0 do_user_addr_fault+0x1e7\/0x690"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/128e284c6cccf5875261569fa3bb07558870c17f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dea25e25acd990d7657940ffcab8354c28fa292","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a876060892ba52dd67d197c78b955e62657d906","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49844","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:07.907","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: dev: fix skb drop check\n\nIn commit a6d190f8c767 (\"can: skb: drop tx skb if in listen only\nmode\") the priv->ctrlmode element is read even on virtual CAN\ninterfaces that do not create the struct can_priv at startup. This\nout-of-bounds read may lead to CAN frame drops for virtual CAN\ninterfaces like vcan and vxcan.\n\nThis patch mainly reverts the original commit and adds a new helper\nfor CAN interface drivers that provide the required information in\nstruct can_priv.\n\n[mkl: patch pch_can, too]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: can: dev: fix skb drop check. En el commit a6d190f8c767 (\"can: skb: drop tx skb if in listen only mode\"), el elemento priv-&gt;ctrlmode se lee incluso en interfaces CAN virtuales que no crean la estructura can_priv al inicio. Esta lectura fuera de los límites puede provocar la pérdida de tramas CAN en interfaces CAN virtuales como vcan y vxcan. Este parche revierte principalmente la confirmación original y añade un nuevo asistente para los controladores de interfaz CAN que proporciona la información necesaria en la estructura can_priv. [mkl: parchear también pch_can]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/386c49fe31ee748e053860b3bac7794a933ac9ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae64438be1923e3c1102d90fd41db7afcfaf54cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49845","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.010","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: j1939_send_one(): fix missing CAN header initialization\n\nThe read access to struct canxl_frame::len inside of a j1939 created\nskbuff revealed a missing initialization of reserved and later filled\nelements in struct can_frame.\n\nThis patch initializes the 8 byte CAN header with zero."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: can: j1939: j1939_send_one(): se corrige la falta de inicialización del encabezado CAN. El acceso de lectura a struct canxl_frame::len dentro de un skbuff creado con j1939 reveló la falta de inicialización de elementos reservados y posteriormente rellenados en struct can_frame. Este parche inicializa el encabezado CAN de 8 bytes con cero."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2719f82ad5d8199cf5f346ea8bb3998ad5323b72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eb3d283e8579a22b81dd2ac3987b77465b2a22f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69e86c6268d59ceddd0abe9ae8f1f5296f316c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0513b095e1ef1469718564dec3fb3348556d0a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8e0edeaa0f2b860bdbbf0aafb4492533043d650","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49846","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.113","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix a slab-out-of-bounds write bug in udf_find_entry()\n\nSyzbot reported a slab-out-of-bounds Write bug:\n\nloop0: detected capacity change from 0 to 2048\n==================================================================\nBUG: KASAN: slab-out-of-bounds in udf_find_entry+0x8a5\/0x14f0\nfs\/udf\/namei.c:253\nWrite of size 105 at addr ffff8880123ff896 by task syz-executor323\/3610\n\nCPU: 0 PID: 3610 Comm: syz-executor323 Not tainted\n6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0\nHardware name: Google Compute Engine\/Google Compute Engine, BIOS\nGoogle 10\/11\/2022\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1b1\/0x28e lib\/dump_stack.c:106\n print_address_description+0x74\/0x340 mm\/kasan\/report.c:284\n print_report+0x107\/0x1f0 mm\/kasan\/report.c:395\n kasan_report+0xcd\/0x100 mm\/kasan\/report.c:495\n kasan_check_range+0x2a7\/0x2e0 mm\/kasan\/generic.c:189\n memcpy+0x3c\/0x60 mm\/kasan\/shadow.c:66\n udf_find_entry+0x8a5\/0x14f0 fs\/udf\/namei.c:253\n udf_lookup+0xef\/0x340 fs\/udf\/namei.c:309\n lookup_open fs\/namei.c:3391 [inline]\n open_last_lookups fs\/namei.c:3481 [inline]\n path_openat+0x10e6\/0x2df0 fs\/namei.c:3710\n do_filp_open+0x264\/0x4f0 fs\/namei.c:3740\n do_sys_openat2+0x124\/0x4e0 fs\/open.c:1310\n do_sys_open fs\/open.c:1326 [inline]\n __do_sys_creat fs\/open.c:1402 [inline]\n __se_sys_creat fs\/open.c:1396 [inline]\n __x64_sys_creat+0x11f\/0x160 fs\/open.c:1396\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7ffab0d164d9\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89\nf7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01\nf0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffe1a7e6bb8 EFLAGS: 00000246 ORIG_RAX: 0000000000000055\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffab0d164d9\nRDX: 00007ffab0d164d9 RSI: 0000000000000000 RDI: 0000000020000180\nRBP: 00007ffab0cd5a10 R08: 0000000000000000 R09: 0000000000000000\nR10: 00005555573552c0 R11: 0000000000000246 R12: 00007ffab0cd5aa0\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n <\/TASK>\n\nAllocated by task 3610:\n kasan_save_stack mm\/kasan\/common.c:45 [inline]\n kasan_set_track+0x3d\/0x60 mm\/kasan\/common.c:52\n ____kasan_kmalloc mm\/kasan\/common.c:371 [inline]\n __kasan_kmalloc+0x97\/0xb0 mm\/kasan\/common.c:380\n kmalloc include\/linux\/slab.h:576 [inline]\n udf_find_entry+0x7b6\/0x14f0 fs\/udf\/namei.c:243\n udf_lookup+0xef\/0x340 fs\/udf\/namei.c:309\n lookup_open fs\/namei.c:3391 [inline]\n open_last_lookups fs\/namei.c:3481 [inline]\n path_openat+0x10e6\/0x2df0 fs\/namei.c:3710\n do_filp_open+0x264\/0x4f0 fs\/namei.c:3740\n do_sys_openat2+0x124\/0x4e0 fs\/open.c:1310\n do_sys_open fs\/open.c:1326 [inline]\n __do_sys_creat fs\/open.c:1402 [inline]\n __se_sys_creat fs\/open.c:1396 [inline]\n __x64_sys_creat+0x11f\/0x160 fs\/open.c:1396\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe buggy address belongs to the object at ffff8880123ff800\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 150 bytes inside of\n 256-byte region [ffff8880123ff800, ffff8880123ff900)\n\nThe buggy address belongs to the physical page:\npage:ffffea000048ff80 refcount:1 mapcount:0 mapping:0000000000000000\nindex:0x0 pfn:0x123fe\nhead:ffffea000048ff80 order:1 compound_mapcount:0 compound_pincount:0\nflags: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff)\nraw: 00fff00000010200 ffffea00004b8500 dead000000000003 ffff888012041b40\nraw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x0(),\npid 1, tgid 1 (swapper\/0), ts 1841222404, free_ts 0\n create_dummy_stack mm\/page_owner.c:\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: udf: Se corrige un error de escritura fuera de los límites en udf_find_entry() Syzbot informó un error de escritura fuera de los límites: loop0: se detectó un cambio de capacidad de 0 a 2048 ======================================================================= ERROR: KASAN: slab-out-of-bounds en udf_find_entry+0x8a5\/0x14f0 fs\/udf\/namei.c:253 Escritura de tamaño 105 en la dirección ffff8880123ff896 por la tarea syz-executor323\/3610 CPU: 0 PID: 3610 Comm: syz-executor323 No contaminado 6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0 Nombre del hardware: Google Compute Engine\/Google Compute Engine, BIOS Google 11\/10\/2022 Seguimiento de llamadas:  __dump_stack lib\/dump_stack.c:88 [inline] dump_stack_lvl+0x1b1\/0x28e lib\/dump_stack.c:106 print_address_description+0x74\/0x340 mm\/kasan\/report.c:284 print_report+0x107\/0x1f0 mm\/kasan\/report.c:395 kasan_report+0xcd\/0x100 mm\/kasan\/report.c:495 kasan_check_range+0x2a7\/0x2e0 mm\/kasan\/generic.c:189 memcpy+0x3c\/0x60 mm\/kasan\/shadow.c:66 udf_find_entry+0x8a5\/0x14f0 fs\/udf\/namei.c:253 udf_lookup+0xef\/0x340 fs\/udf\/namei.c:309 lookup_open fs\/namei.c:3391 [inline] open_last_lookups fs\/namei.c:3481 [inline] path_openat+0x10e6\/0x2df0 fs\/namei.c:3710 do_filp_open+0x264\/0x4f0 fs\/namei.c:3740 do_sys_openat2+0x124\/0x4e0 fs\/open.c:1310 do_sys_open fs\/open.c:1326 [inline] __do_sys_creat fs\/open.c:1402 [inline] __se_sys_creat fs\/open.c:1396 [inline] __x64_sys_creat+0x11f\/0x160 fs\/open.c:1396 do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline] do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd RIP: 0033:0x7ffab0d164d9 Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48 RSP: 002b:00007ffe1a7e6bb8 EFLAGS: 00000246 ORIG_RAX: 0000000000000055 RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffab0d164d9 RDX: 00007ffab0d164d9 RSI: 0000000000000000 RDI: 0000000020000180 RBP: 00007ffab0cd5a10 R08: 0000000000000000 R09: 0000000000000000 R10: 00005555573552c0 R11: 0000000000000246 R12: 00007ffab0cd5aa0 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000  Asignado por la tarea 3610: kasan_save_stack mm\/kasan\/common.c:45 [en línea] kasan_set_track+0x3d\/0x60 mm\/kasan\/common.c:52 ____kasan_kmalloc mm\/kasan\/common.c:371 [en línea] __kasan_kmalloc+0x97\/0xb0 mm\/kasan\/common.c:380 kmalloc include\/linux\/slab.h:576 [en línea] udf_find_entry+0x7b6\/0x14f0 fs\/udf\/namei.c:243 udf_lookup+0xef\/0x340 fs\/udf\/namei.c:309 lookup_open fs\/namei.c:3391 [en línea] open_last_lookups fs\/namei.c:3481 [en línea] path_openat+0x10e6\/0x2df0 fs\/namei.c:3710 do_filp_open+0x264\/0x4f0 fs\/namei.c:3740 do_sys_openat2+0x124\/0x4e0 fs\/open.c:1310 do_sys_open fs\/open.c:1326 [en línea] __do_sys_creat fs\/open.c:1402 [en línea] __se_sys_creat fs\/open.c:1396 [en línea] __x64_sys_creat+0x11f\/0x160 fs\/open.c:1396 do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline] do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd La dirección con errores pertenece al objeto en ffff8880123ff800 que pertenece a la caché kmalloc-256 de tamaño 256 La dirección con errores se encuentra 150 bytes dentro de la región de 256 bytes [ffff8880123ff800, ffff8880123ff900) La dirección con errores pertenece a la página física: page:ffffea000048ff80 refcount:1 mapcount:0 mapping:000000000000000 index:0x0 pfn:0x123fe cabeza:ffffea000048ff80 orden:1 compuesto_mapcount:0 compuesto_pincount:0 banderas: 0xfff00000010200(slab|head|node=0|zone=1|lastcpupid=0x7ff) sin formato: 00fff00000010200 ffffea00004b8500 muerto000000000003 ffff888012041b40 sin formato: 000000000000000 0000000080100010 00000001ffffffff 0000000000000000 página volcada porque: kasan: se detectó un acceso incorrecto page_owner rastrea la página como asignada última página asignada mediante orden 0, migrationtype Inamovible, gfp_---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03f9582a6a2ebd25a440896475c968428c4b63e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/583fdd98d94acba1e7225e5cc29063aef0741030","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a6051d734f1ed0031e2216f9a538621235c11a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac79001b8e603226fab17240a79cb9ef679d3cd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c736ed8541605e3a25075bb1cbf8f38cb3083238","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8af247de385ce49afabc3bf1cf4fd455c94bfe8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8971f410739a864c537e0ac29344a7b6c450232","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1517721c408631f09d54c743aa70cb07fd3eebd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49847","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.223","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: ti: am65-cpsw: Fix segmentation fault at module unload\n\nMove am65_cpsw_nuss_phylink_cleanup() call to after\nam65_cpsw_nuss_cleanup_ndev() so phylink is still valid\nto prevent the below Segmentation fault on module remove when\nfirst slave link is up.\n\n[   31.652944] Unable to handle kernel paging request at virtual address 00040008000005f4\n[   31.684627] Mem abort info:\n[   31.687446]   ESR = 0x0000000096000004\n[   31.704614]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   31.720663]   SET = 0, FnV = 0\n[   31.723729]   EA = 0, S1PTW = 0\n[   31.740617]   FSC = 0x04: level 0 translation fault\n[   31.756624] Data abort info:\n[   31.759508]   ISV = 0, ISS = 0x00000004\n[   31.776705]   CM = 0, WnR = 0\n[   31.779695] [00040008000005f4] address between user and kernel address ranges\n[   31.808644] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[   31.814928] Modules linked in: wlcore_sdio wl18xx wlcore mac80211 libarc4 cfg80211 rfkill crct10dif_ce phy_gmii_sel ti_am65_cpsw_nuss(-) sch_fq_codel ipv6\n[   31.828776] CPU: 0 PID: 1026 Comm: modprobe Not tainted 6.1.0-rc2-00012-gfabfcf7dafdb-dirty #160\n[   31.837547] Hardware name: Texas Instruments AM625 (DT)\n[   31.842760] pstate: 40000005 (nZcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   31.849709] pc : phy_stop+0x18\/0xf8\n[   31.853202] lr : phylink_stop+0x38\/0xf8\n[   31.857031] sp : ffff80000a0839f0\n[   31.860335] x29: ffff80000a0839f0 x28: ffff000000de1c80 x27: 0000000000000000\n[   31.867462] x26: 0000000000000000 x25: 0000000000000000 x24: ffff80000a083b98\n[   31.874589] x23: 0000000000000800 x22: 0000000000000001 x21: ffff000001bfba90\n[   31.881715] x20: ffff0000015ee000 x19: 0004000800000200 x18: 0000000000000000\n[   31.888842] x17: ffff800076c45000 x16: ffff800008004000 x15: 000058e39660b106\n[   31.895969] x14: 0000000000000144 x13: 0000000000000144 x12: 0000000000000000\n[   31.903095] x11: 000000000000275f x10: 00000000000009e0 x9 : ffff80000a0837d0\n[   31.910222] x8 : ffff000000de26c0 x7 : ffff00007fbd6540 x6 : ffff00007fbd64c0\n[   31.917349] x5 : ffff00007fbd0b10 x4 : ffff00007fbd0b10 x3 : ffff00007fbd3920\n[   31.924476] x2 : d0a07fcff8b8d500 x1 : 0000000000000000 x0 : 0004000800000200\n[   31.931603] Call trace:\n[   31.934042]  phy_stop+0x18\/0xf8\n[   31.937177]  phylink_stop+0x38\/0xf8\n[   31.940657]  am65_cpsw_nuss_ndo_slave_stop+0x28\/0x1e0 [ti_am65_cpsw_nuss]\n[   31.947452]  __dev_close_many+0xa4\/0x140\n[   31.951371]  dev_close_many+0x84\/0x128\n[   31.955115]  unregister_netdevice_many+0x130\/0x6d0\n[   31.959897]  unregister_netdevice_queue+0x94\/0xd8\n[   31.964591]  unregister_netdev+0x24\/0x38\n[   31.968504]  am65_cpsw_nuss_cleanup_ndev.isra.0+0x48\/0x70 [ti_am65_cpsw_nuss]\n[   31.975637]  am65_cpsw_nuss_remove+0x58\/0xf8 [ti_am65_cpsw_nuss]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ethernet: ti: am65-cpsw: Se corrige el error de segmentación en la descarga del módulo. Mueve la llamada am65_cpsw_nuss_phylink_cleanup() después de am65_cpsw_nuss_cleanup_ndev() para que phylink siga siendo válido para evitar el siguiente error de segmentación en la eliminación del módulo cuando el primer enlace esclavo está activo. [ 31.652944] No se puede manejar la solicitud de paginación del núcleo en la dirección virtual 00040008000005f4 [ 31.684627] Información de aborto de memoria: [ 31.687446] ESR = 0x0000000096000004 [ 31.704614] EC = 0x25: DABT (EL actual), IL = 32 bits [ 31.720663] SET = 0, FnV = 0 [ 31.723729] EA = 0, S1PTW = 0 [ 31.740617] FSC = 0x04: error de traducción de nivel 0 [ 31.756624] Información de aborto de datos: [ 31.759508] ISV = 0, ISS = 0x00000004 [ 31.776705] CM = 0, WnR = 0 [ 31.779695] [00040008000005f4] dirección entre los rangos de direcciones del usuario y del núcleo [ 31.808644] Error interno: Oops: 0000000096000004 [#1] PREEMPT SMP [ 31.814928] Modules linked in: wlcore_sdio wl18xx wlcore mac80211 libarc4 cfg80211 rfkill crct10dif_ce phy_gmii_sel ti_am65_cpsw_nuss(-) sch_fq_codel ipv6 [ 31.828776] CPU: 0 PID: 1026 Comm: modprobe Not tainted 6.1.0-rc2-00012-gfabfcf7dafdb-dirty #160 [ 31.837547] Hardware name: Texas Instruments AM625 (DT) [ 31.842760] pstate: 40000005 (nZcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 31.849709] pc : phy_stop+0x18\/0xf8 [ 31.853202] lr : phylink_stop+0x38\/0xf8 [ 31.857031] sp : ffff80000a0839f0 [ 31.860335] x29: ffff80000a0839f0 x28: ffff000000de1c80 x27: 0000000000000000 [ 31.867462] x26: 0000000000000000 x25: 0000000000000000 x24: ffff80000a083b98 [ 31.874589] x23: 0000000000000800 x22: 0000000000000001 x21: ffff000001bfba90 [ 31.881715] x20: ffff0000015ee000 x19: 0004000800000200 x18: 0000000000000000 [ 31.888842] x17: ffff800076c45000 x16: ffff800008004000 x15: 000058e39660b106 [ 31.895969] x14: 0000000000000144 x13: 0000000000000144 x12: 0000000000000000 [ 31.903095] x11: 000000000000275f x10: 00000000000009e0 x9 : ffff80000a0837d0 [ 31.910222] x8 : ffff000000de26c0 x7 : ffff00007fbd6540 x6 : ffff00007fbd64c0 [ 31.917349] x5 : ffff00007fbd0b10 x4 : ffff00007fbd0b10 x3 : ffff00007fbd3920 [ 31.924476] x2 : d0a07fcff8b8d500 x1 : 0000000000000000 x0 : 0004000800000200 [ 31.931603] Call trace: [ 31.934042] phy_stop+0x18\/0xf8 [ 31.937177] phylink_stop+0x38\/0xf8 [ 31.940657] am65_cpsw_nuss_ndo_slave_stop+0x28\/0x1e0 [ti_am65_cpsw_nuss] [ 31.947452] __dev_close_many+0xa4\/0x140 [ 31.951371] dev_close_many+0x84\/0x128 [ 31.955115] unregister_netdevice_many+0x130\/0x6d0 [ 31.959897] unregister_netdevice_queue+0x94\/0xd8 [ 31.964591] unregister_netdev+0x24\/0x38 [ 31.968504] am65_cpsw_nuss_cleanup_ndev.isra.0+0x48\/0x70 [ti_am65_cpsw_nuss] [ 31.975637] am65_cpsw_nuss_remove+0x58\/0xf8 [ti_am65_cpsw_nuss] "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a0c016a4831ea29be09bbc8162d4a2a0690b4b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/442fd1bfe599bc54d118775e9e1a4fe913e4b369","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49848","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.327","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: qcom-qmp-combo: fix NULL-deref on runtime resume\n\nCommit fc64623637da (\"phy: qcom-qmp-combo,usb: add support for separate\nPCS_USB region\") started treating the PCS_USB registers as potentially\nseparate from the PCS registers but used the wrong base when no PCS_USB\noffset has been provided.\n\nFix the PCS_USB base used at runtime resume to prevent dereferencing a\nNULL pointer on platforms that do not provide a PCS_USB offset (e.g.\nSC7180)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: phy: qcom-qmp-combo: corrección de la desreferencia de NULL al reanudar la ejecución. El commit fc64623637da (\"phy: qcom-qmp-combo,usb: añadir compatibilidad con la región PCS_USB independiente\") comenzó a tratar los registros PCS_USB como potencialmente independientes de los registros PCS, pero utilizaba la base incorrecta cuando no se proporcionaba un desplazamiento PCS_USB. Se corrigió la base PCS_USB utilizada al reanudar la ejecución para evitar la desreferenciación de un puntero NULL en plataformas que no proporcionan un desplazamiento PCS_USB (p. ej., SC7180)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04948e757148f870a31f4887ea2239403f516c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c559a8b5cfa3db196ced0257b288f17027621348","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49849","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.450","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix match incorrectly in dev_args_match_device\n\nsyzkaller found a failed assertion:\n\n  assertion failed: (args->devid != (u64)-1) || args->missing, in fs\/btrfs\/volumes.c:6921\n\nThis can be triggered when we set devid to (u64)-1 by ioctl. In this\ncase, the match of devid will be skipped and the match of device may\nsucceed incorrectly.\n\nPatch 562d7b1512f7 introduced this function which is used to match device.\nThis function contains two matching scenarios, we can distinguish them by\nchecking the value of args->missing rather than check whether args->devid\nand args->uuid is default value."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: corrección de coincidencia incorrecta en dev_args_match_device syzkaller encontró una aserción fallida: assertion failed: (args-&gt;devid != (u64)-1) || args-&gt;missing, en fs\/btrfs\/volumes.c:6921 Esto puede activarse cuando configuramos devid en (u64)-1 mediante ioctl. En este caso, se omitirá la coincidencia de devid y la coincidencia de dispositivo puede tener éxito incorrectamente. El parche 562d7b1512f7 introdujo esta función que se utiliza para hacer coincidir dispositivos. Esta función contiene dos escenarios de coincidencia; podemos distinguirlos comprobando el valor de args-&gt;missing en lugar de comprobar si args-&gt;devid y args-&gt;uuid son los valores predeterminados."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fca385d6ebc3cabb20f67bcf8a71f1448bdc001","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc6c127c377010f136360552ebf91c2723081c1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9fe4719c662e0af17eea723cf345e37719fd3c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49850","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.567","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix deadlock in nilfs_count_free_blocks()\n\nA semaphore deadlock can occur if nilfs_get_block() detects metadata\ncorruption while locating data blocks and a superblock writeback occurs at\nthe same time:\n\ntask 1                               task 2\n------                               ------\n* A file operation *\nnilfs_truncate()\n  nilfs_get_block()\n    down_read(rwsem A) <--\n    nilfs_bmap_lookup_contig()\n      ...                            generic_shutdown_super()\n                                       nilfs_put_super()\n                                         * Prepare to write superblock *\n                                         down_write(rwsem B) <--\n                                         nilfs_cleanup_super()\n      * Detect b-tree corruption *         nilfs_set_log_cursor()\n      nilfs_bmap_convert_error()             nilfs_count_free_blocks()\n        __nilfs_error()                        down_read(rwsem A) <--\n          nilfs_set_error()\n            down_write(rwsem B) <--\n\n                           *** DEADLOCK ***\n\nHere, nilfs_get_block() readlocks rwsem A (= NILFS_MDT(dat_inode)->mi_sem)\nand then calls nilfs_bmap_lookup_contig(), but if it fails due to metadata\ncorruption, __nilfs_error() is called from nilfs_bmap_convert_error()\ninside the lock section.\n\nSince __nilfs_error() calls nilfs_set_error() unless the filesystem is\nread-only and nilfs_set_error() attempts to writelock rwsem B (=\nnilfs->ns_sem) to write back superblock exclusively, hierarchical lock\nacquisition occurs in the order rwsem A -> rwsem B.\n\nNow, if another task starts updating the superblock, it may writelock\nrwsem B during the lock sequence above, and can deadlock trying to\nreadlock rwsem A in nilfs_count_free_blocks().\n\nHowever, there is actually no need to take rwsem A in\nnilfs_count_free_blocks() because it, within the lock section, only reads\na single integer data on a shared struct with\nnilfs_sufile_get_ncleansegs().  This has been the case after commit\naa474a220180 (\"nilfs2: add local variable to cache the number of clean\nsegments\"), that is, even before this bug was introduced.\n\nSo, this resolves the deadlock problem by just not taking the semaphore in\nnilfs_count_free_blocks()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nilfs2: corregir bloqueo en nilfs_count_free_blocks() Un bloqueo de semáforo puede ocurrir si nilfs_get_block() detecta corrupción de metadatos mientras localiza bloques de datos y ocurre una escritura diferida de superbloque al mismo tiempo: tarea 1 tarea 2 ------ ------ * Una operación de archivo * nilfs_truncate() nilfs_get_block() down_read(rwsem A) &lt;-- nilfs_bmap_lookup_contig() ... generic_shutdown_super() nilfs_put_super() * Preparar para escribir superbloque * down_write(rwsem B) &lt;-- nilfs_cleanup_super() * Detectar corrupción de árbol b * nilfs_set_log_cursor() nilfs_bmap_convert_error() nilfs_count_free_blocks() __nilfs_error() down_read(rwsem A) &lt;-- nilfs_set_error() down_write(rwsem B) &lt;-- *** DEADLOCK *** Aquí, nilfs_get_block() vuelve a bloquear rwsem A (= NILFS_MDT(dat_inode)-&gt;mi_sem) y luego llama a nilfs_bmap_lookup_contig(), pero si falla debido a la corrupción de metadatos, se llama a __nilfs_error() desde nilfs_bmap_convert_error() dentro de la sección de bloqueo. Dado que __nilfs_error() llama a nilfs_set_error() a menos que el sistema de archivos sea de solo lectura y nilfs_set_error() intente bloquear la escritura de rwsem B (= nilfs-&gt;ns_sem) para reescribir exclusivamente el superbloque, la adquisición del bloqueo jerárquico se produce en el orden rwsem A -&gt; rwsem B. Ahora bien, si otra tarea comienza a actualizar el superbloque, puede bloquear la escritura de rwsem B durante la secuencia de bloqueo anterior y puede bloquearse al intentar bloquear la lectura de rwsem A en nilfs_count_free_blocks(). Sin embargo, no es necesario tomar rwsem A en nilfs_count_free_blocks() porque, dentro de la sección de bloqueo, solo lee un único dato entero en una estructura compartida con nilfs_sufile_get_ncleansegs(). Esto ha sucedido después del commit aa474a220180 (\"nilfs2: añadir variable local para almacenar en caché el número de segmentos limpios\"), incluso antes de que se introdujera este error. Por lo tanto, esto resuelve el problema de interbloqueo simplemente eliminando el semáforo en nilfs_count_free_blocks()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d4ff73062096c21b47954d2996b4df259777bda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36ff974b0310771417c0be64b64aa221bd70d63d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c89ca6d3dfa6c09c515807a7a97a521f5d5147e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ac932a4921a96ca52f61935dbba64ea87bbd5dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b4506cff6630bb474bb46a2a75c31e533a756ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abc082aac0d9b6b926038fc3adb7008306581be2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb029b54953420f7a2d65100f1c5107f14411bdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0cc93080d4c09510b74ecba87fd778cca390bb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49851","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.680","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: fix reserved memory setup\n\nCurrently, RISC-V sets up reserved memory using the \"early\" copy of the\ndevice tree. As a result, when trying to get a reserved memory region\nusing of_reserved_mem_lookup(), the pointer to reserved memory regions\nis using the early, pre-virtual-memory address which causes a kernel\npanic when trying to use the buffer's name:\n\n Unable to handle kernel paging request at virtual address 00000000401c31ac\n Oops [#1]\n Modules linked in:\n CPU: 0 PID: 0 Comm: swapper Not tainted 6.0.0-rc1-00001-g0d9d6953d834 #1\n Hardware name: Microchip PolarFire-SoC Icicle Kit (DT)\n epc : string+0x4a\/0xea\n  ra : vsnprintf+0x1e4\/0x336\n epc : ffffffff80335ea0 ra : ffffffff80338936 sp : ffffffff81203be0\n  gp : ffffffff812e0a98 tp : ffffffff8120de40 t0 : 0000000000000000\n  t1 : ffffffff81203e28 t2 : 7265736572203a46 s0 : ffffffff81203c20\n  s1 : ffffffff81203e28 a0 : ffffffff81203d22 a1 : 0000000000000000\n  a2 : ffffffff81203d08 a3 : 0000000081203d21 a4 : ffffffffffffffff\n  a5 : 00000000401c31ac a6 : ffff0a00ffffff04 a7 : ffffffffffffffff\n  s2 : ffffffff81203d08 s3 : ffffffff81203d00 s4 : 0000000000000008\n  s5 : ffffffff000000ff s6 : 0000000000ffffff s7 : 00000000ffffff00\n  s8 : ffffffff80d9821a s9 : ffffffff81203d22 s10: 0000000000000002\n  s11: ffffffff80d9821c t3 : ffffffff812f3617 t4 : ffffffff812f3617\n  t5 : ffffffff812f3618 t6 : ffffffff81203d08\n status: 0000000200000100 badaddr: 00000000401c31ac cause: 000000000000000d\n [<ffffffff80338936>] vsnprintf+0x1e4\/0x336\n [<ffffffff80055ae2>] vprintk_store+0xf6\/0x344\n [<ffffffff80055d86>] vprintk_emit+0x56\/0x192\n [<ffffffff80055ed8>] vprintk_default+0x16\/0x1e\n [<ffffffff800563d2>] vprintk+0x72\/0x80\n [<ffffffff806813b2>] _printk+0x36\/0x50\n [<ffffffff8068af48>] print_reserved_mem+0x1c\/0x24\n [<ffffffff808057ec>] paging_init+0x528\/0x5bc\n [<ffffffff808031ae>] setup_arch+0xd0\/0x592\n [<ffffffff8080070e>] start_kernel+0x82\/0x73c\n\nearly_init_fdt_scan_reserved_mem() takes no arguments as it operates on\ninitial_boot_params, which is populated by early_init_dt_verify(). On\nRISC-V, early_init_dt_verify() is called twice. Once, directly, in\nsetup_arch() if CONFIG_BUILTIN_DTB is not enabled and once indirectly,\nvery early in the boot process, by parse_dtb() when it calls\nearly_init_dt_scan_nodes().\n\nThis first call uses dtb_early_va to set initial_boot_params, which is\nnot usable later in the boot process when\nearly_init_fdt_scan_reserved_mem() is called. On arm64 for example, the\ncorresponding call to early_init_dt_scan_nodes() uses fixmap addresses\nand doesn't suffer the same fate.\n\nMove early_init_fdt_scan_reserved_mem() further along the boot sequence,\nafter the direct call to early_init_dt_verify() in setup_arch() so that\nthe names use the correct virtual memory addresses. The above supposed\nthat CONFIG_BUILTIN_DTB was not set, but should work equally in the case\nwhere it is - unflatted_and_copy_device_tree() also updates\ninitial_boot_params."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: riscv: corrección de la configuración de memoria reservada Actualmente, RISC-V configura la memoria reservada utilizando la copia \"temprana\" del árbol de dispositivos. Como resultado, al intentar obtener una región de memoria reservada usando of_reserved_mem_lookup(), el puntero a las regiones de memoria reservadas usa la dirección anterior a la memoria virtual, lo que causa un pánico del kernel al intentar usar el nombre del búfer: Unable to handle kernel paging request at virtual address 00000000401c31ac Oops [#1] Módulos vinculados: CPU: 0 PID: 0 Comm: swapper Not tainted 6.0.0-rc1-00001-g0d9d6953d834 #1 Nombre del hardware: Microchip PolarFire-SoC Icicle Kit (DT) epc : string+0x4a\/0xea ra : vsnprintf+0x1e4\/0x336 epc : ffffffff80335ea0 ra : ffffffff80338936 sp : ffffffff81203be0 gp: ffffffff812e0a98 tp: ffffffff8120de40 t0: 0000000000000000 t1: ffffffff81203e28 t2: 7265736572203a46 s0: ffffffff81203c20 s1: ffffffff81203e28 a0: ffffffff81203d22 a1: 0000000000000000 a2: ffffffff81203d08 a3: 0000000081203d21 a4: ffffffffffffffff a5: 00000000401c31ac a6 : ffff0a00ffffff04 a7 : ffffffffffffffff s2 : ffffffff81203d08 s3 : ffffffff81203d00 s4 : 0000000000000008 s5 : ffffffff000000ff s6 : 0000000000ffffff s7 : 00000000ffffff00 s8 : ffffffff80d9821a s9 : ffffffff81203d22 s10: 000000000000002 s11: ffffffff80d9821c t3 : ffffffff812f3617 t4: ffffffff812f3617 t5: ffffffff812f3618 t6: ffffffff81203d08 estado: 0000000200000100 dirección incorrecta: 00000000401c31ac causa: 000000000000000d [] vsnprintf+0x1e4\/0x336 [] vprintk_store+0xf6\/0x344 [] vprintk_emit+0x56\/0x192 [] vprintk_default+0x16\/0x1e [] vprintk+0x72\/0x80 [] _printk+0x36\/0x50 [] print_reserved_mem+0x1c\/0x24 [] paging_init+0x528\/0x5bc [] setup_arch+0xd0\/0x592 [] start_kernel+0x82\/0x73c early_init_fdt_scan_reserved_mem() no toma argumentos ya que opera en initial_boot_params, que se completa con early_init_dt_verify(). En RISC-V, early_init_dt_verify() se llama dos veces: una directamente, en setup_arch() si CONFIG_BUILTIN_DTB no está habilitado, y otra indirectamente, en una fase muy temprana del proceso de arranque, mediante parse_dtb() al llamar a early_init_dt_scan_nodes(). Esta primera llamada utiliza dtb_early_va para establecer initial_boot_params, que no se puede utilizar posteriormente en el proceso de arranque cuando se llama a early_init_fdt_scan_reserved_mem(). En arm64, por ejemplo, la llamada correspondiente a early_init_dt_scan_nodes() utiliza direcciones fixmap y no sufre el mismo problema. Desplace early_init_fdt_scan_reserved_mem() más adelante en la secuencia de arranque, después de la llamada directa a early_init_dt_verify() en setup_arch() para que los nombres utilicen las direcciones de memoria virtual correctas. Lo anterior supuso que CONFIG_BUILTIN_DTB no estaba configurado, pero debería funcionar igualmente en el caso en que lo esté: unflatted_and_copy_device_tree() también actualiza initial_boot_params."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50e63dd8ed92045eb70a72d7ec725488320fb68b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/518e49f0590de66555503aabe199ba8d3f2e24ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93598deb101540c4f9e7de15099ea8255b965fc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94ab8f88feb75e3b1486102c0c9c550f37d9d137","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49852","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.787","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: process: fix kernel info leakage\n\nthread_struct's s[12] may contain random kernel memory content, which\nmay be finally leaked to userspace. This is a security hole. Fix it\nby clearing the s[12] array in thread_struct when fork.\n\nAs for kthread case, it's better to clear the s[12] array as well."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: riscv: proceso: corrección de fuga de información del kernel. El array s[12] de thread_struct puede contener contenido aleatorio de memoria del kernel, que podría filtrarse al espacio de usuario. Esto representa una vulnerabilidad de seguridad. Para solucionarlo, borre la matriz s[12] de thread_struct al bifurcar. En el caso de kthread, es recomendable borrar también la matriz s[12]."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/358a68f98304b40b201ba5afe94c20355aa3dc68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6510c78490c490a6636e48b61eeaa6fb65981f4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4601d30f7d989b4f354df899ab85b5f7a750d30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5c0b3167537793a7cf936fb240366eefd2fc7fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc36c7fa5d9384602529ba3eea8c5daee7be4dbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e56d18a976dda653194218df6d40d8122c775712","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49853","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.890","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: macvlan: fix memory leaks of macvlan_common_newlink\n\nkmemleak reports memory leaks in macvlan_common_newlink, as follows:\n\n ip link add link eth0 name .. type macvlan mode source macaddr add\n <MAC-ADDR>\n\nkmemleak reports:\n\nunreferenced object 0xffff8880109bb140 (size 64):\n  comm \"ip\", pid 284, jiffies 4294986150 (age 430.108s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 b8 aa 5a 12 80 88 ff ff  ..........Z.....\n    80 1b fa 0d 80 88 ff ff 1e ff ac af c7 c1 6b 6b  ..............kk\n  backtrace:\n    [<ffffffff813e06a7>] kmem_cache_alloc_trace+0x1c7\/0x300\n    [<ffffffff81b66025>] macvlan_hash_add_source+0x45\/0xc0\n    [<ffffffff81b66a67>] macvlan_changelink_sources+0xd7\/0x170\n    [<ffffffff81b6775c>] macvlan_common_newlink+0x38c\/0x5a0\n    [<ffffffff81b6797e>] macvlan_newlink+0xe\/0x20\n    [<ffffffff81d97f8f>] __rtnl_newlink+0x7af\/0xa50\n    [<ffffffff81d98278>] rtnl_newlink+0x48\/0x70\n    ...\n\nIn the scenario where the macvlan mode is configured as 'source',\nmacvlan_changelink_sources() will be execured to reconfigure list of\nremote source mac addresses, at the same time, if register_netdevice()\nreturn an error, the resource generated by macvlan_changelink_sources()\nis not cleaned up.\n\nUsing this patch, in the case of an error, it will execute\nmacvlan_flush_sources() to ensure that the resource is cleaned up."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: macvlan: corregir fugas de memoria de macvlan_common_newlink kmemleak informa de fugas de memoria en macvlan_common_newlink, como se indica a continuación: ip link add link eth0 name .. type macvlan mode source macaddr add  kmemleak informa: objeto no referenciado 0xffff8880109bb140 (tamaño 64): comm \"ip\", pid 284, jiffies 4294986150 (edad 430.108s) volcado hexadecimal (primeros 32 bytes): 00 00 00 00 00 00 00 00 b8 aa 5a 12 80 88 ff ff ..........Z..... 80 1b fa 0d 80 88 ff ff 1e ff ac af c7 c1 6b 6b ..............kk seguimiento inverso: [] kmem_cache_alloc_trace+0x1c7\/0x300 [] macvlan_hash_add_source+0x45\/0xc0 [] macvlan_changelink_sources+0xd7\/0x170 [] macvlan_common_newlink+0x38c\/0x5a0 [] macvlan_newlink+0xe\/0x20 [] __rtnl_newlink+0x7af\/0xa50 [] rtnl_newlink+0x48\/0x70 ... En el escenario donde el modo macvlan está configurado como 'origen', se ejecutará macvlan_changelink_sources() para reconfigurar la lista de direcciones MAC de origen remoto. Al mismo tiempo, si register_netdevice() devuelve un error, el recurso generado por macvlan_changelink_sources() no se limpia. Con este parche, en caso de error, se ejecutará macvlan_flush_sources() para garantizar que el recurso se limpie."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21d3a8b6a1e39e7529ce9de07316ee13a63f305b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23569b5652ee8e8e55a12f7835f59af6f3cefc30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/685e73e3f7a9fb75cbf049a9d0b7c45cc6b57b2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/956e0216a19994443c90ba2ea6b0b284c9c4f9cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ea003c4671b2fc455320ecf6d4a43b0a3c1878a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f288e338be206713d79b29144c27fca4503c39b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a81b44d1df1f07f00c0dcc0a0b3d2fa24a46289e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8d67367ab33604326cc37ab44fd1801bf5691ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49854","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:08.997","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmctp: Fix an error handling path in mctp_init()\n\nIf mctp_neigh_init() return error, the routes resources should\nbe released in the error handling path. Otherwise some resources\nleak."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mctp: Se corrige una ruta de gestión de errores en mctp_init(). Si mctp_neigh_init() devuelve un error, los recursos de las rutas deben liberarse en la ruta de gestión de errores. De lo contrario, se producen fugas de recursos."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/216c83222d2eb24b0e63df56e8740b02c33286e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d8a6e24a3496d86e8d8ae748375df984fb6d6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4072058af4fd8fb4658e7452289042a406a9398","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49855","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.090","lastModified":"2025-05-02T13:53:20.943","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: iosm: fix memory leak in ipc_pcie_read_bios_cfg\n\nipc_pcie_read_bios_cfg() is using the acpi_evaluate_dsm() to\nobtain the wwan power state configuration from BIOS but is\nnot freeing the acpi_object. The acpi_evaluate_dsm() returned\nacpi_object to be freed.\n\nFree the acpi_object after use."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: wwan: iosm: se corrige la pérdida de memoria en ipc_pcie_read_bios_cfg. ipc_pcie_read_bios_cfg() utiliza acpi_evaluate_dsm() para obtener la configuración del estado de energía de wwan desde la BIOS, pero no libera acpi_object. Acpi_evaluate_dsm() devolvió acpi_object para su liberación. Libere acpi_object después de su uso."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13b1ea861e8aeb701bcfbfe436b943efa2d44029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7560ceef4d2832a67e8781d924e129c7f542376f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d38a648d2d6cc7bee11c6f533ff9426a00c2a74c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49856","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.197","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: call napi_schedule_prep() to ensure we own a napi\n\nA recent patch exposed another issue in napi_get_frags()\ncaught by syzbot [1]\n\nBefore feeding packets to GRO, and calling napi_complete()\nwe must first grab NAPI_STATE_SCHED.\n\n[1]\nWARNING: CPU: 0 PID: 3612 at net\/core\/dev.c:6076 napi_complete_done+0x45b\/0x880 net\/core\/dev.c:6076\nModules linked in:\nCPU: 0 PID: 3612 Comm: syz-executor408 Not tainted 6.1.0-rc3-syzkaller-00175-g1118b2049d77 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\nRIP: 0010:napi_complete_done+0x45b\/0x880 net\/core\/dev.c:6076\nCode: c1 ea 03 0f b6 14 02 4c 89 f0 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 24 04 00 00 41 89 5d 1c e9 73 fc ff ff e8 b5 53 22 fa <0f> 0b e9 82 fe ff ff e8 a9 53 22 fa 48 8b 5c 24 08 31 ff 48 89 de\nRSP: 0018:ffffc90003c4f920 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 0000000000000030 RCX: 0000000000000000\nRDX: ffff8880251c0000 RSI: ffffffff875a58db RDI: 0000000000000007\nRBP: 0000000000000001 R08: 0000000000000007 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000001 R12: ffff888072d02628\nR13: ffff888072d02618 R14: ffff888072d02634 R15: 0000000000000000\nFS: 0000555555f13300(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055c44d3892b8 CR3: 00000000172d2000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\nnapi_complete include\/linux\/netdevice.h:510 [inline]\ntun_get_user+0x206d\/0x3a60 drivers\/net\/tun.c:1980\ntun_chr_write_iter+0xdb\/0x200 drivers\/net\/tun.c:2027\ncall_write_iter include\/linux\/fs.h:2191 [inline]\ndo_iter_readv_writev+0x20b\/0x3b0 fs\/read_write.c:735\ndo_iter_write+0x182\/0x700 fs\/read_write.c:861\nvfs_writev+0x1aa\/0x630 fs\/read_write.c:934\ndo_writev+0x133\/0x2f0 fs\/read_write.c:977\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7f37021a3c19"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: tun: llamar a napi_schedule_prep() para asegurarnos de que poseemos un napi Un parche reciente expuso otro problema en napi_get_frags() detectado por syzbot [1] Antes de alimentar paquetes a GRO y llamar a napi_complete(), primero debemos obtener NAPI_STATE_SCHED. [1] ADVERTENCIA: CPU: 0 PID: 3612 en net\/core\/dev.c:6076 napi_complete_done+0x45b\/0x880 net\/core\/dev.c:6076 Módulos vinculados: CPU: 0 PID: 3612 Comm: syz-executor408 No contaminado 6.1.0-rc3-syzkaller-00175-g1118b2049d77 #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 26\/10\/2022 RIP: 0010:napi_complete_done+0x45b\/0x880 net\/core\/dev.c:6076 Código: c1 ea 03 0f b6 14 02 4c 89 f0 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 24 04 00 00 41 89 5d 1c e9 73 fc ff ff e8 b5 53 22 fa &lt;0f&gt; 0b e9 82 fe ff ff e8 a9 53 22 fa 48 8b 5c 24 08 31 ff 48 89 de RSP: 0018:ffffc90003c4f920 EFLAGS: 00010293 RAX: 0000000000000000 RBX: 0000000000000030 RCX: 000000000000000 RDX: ffff8880251c0000 RSI: ffffffff875a58db RDI: 0000000000000007 RBP: 0000000000000001 R08: 0000000000000007 R09: 0000000000000000 R10: 0000000000000001 R11: 0000000000000001 R12: ffff888072d02628 R13: ffff888072d02618 R14: ffff888072d02634 R15: 0000000000000000 FS: 0000555555f13300(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000055c44d3892b8 CR3: 00000000172d2000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Rastreo de llamadas:  napi_complete include\/linux\/netdevice.h:510 [inline] tun_get_user+0x206d\/0x3a60 drivers\/net\/tun.c:1980 tun_chr_write_iter+0xdb\/0x200 drivers\/net\/tun.c:2027 call_write_iter include\/linux\/fs.h:2191 [inline] do_iter_readv_writev+0x20b\/0x3b0 fs\/read_write.c:735 do_iter_write+0x182\/0x700 fs\/read_write.c:861 vfs_writev+0x1aa\/0x630 fs\/read_write.c:934 do_writev+0x133\/0x2f0 fs\/read_write.c:977 do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd RIP: 0033:0x7f37021a3c19 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07d120aa33cc9d9115753d159f64d20c94458781","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30b0263d0366ea63aa7cad0407dfd945cc348580","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/310f0855352ee4b2eb38855c99185c23e6e1496b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/534762e261c84d43e5d56a780e40278b94c20540","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9132fa043f96ac545254ab326db5c6fd47d54acb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/999550c8cbb3fcb535f542d652fe1cb936839e5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49857","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.307","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: marvell: prestera: fix memory leak in prestera_rxtx_switch_init()\n\nWhen prestera_sdma_switch_init() failed, the memory pointed to by\nsw->rxtx isn't released. Fix it. Only be compiled, not be tested."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: marvell: prestera: se corrige una fuga de memoria en prestera_rxtx_switch_init(). Cuando prestera_sdma_switch_init() falla, la memoria a la que apunta sw-&gt;rxtx no se libera. Se debe corregir. Solo se compilará, no se probará."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31e5084ac6876e52dbb0a1cc4fc18b6c79979f31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/409731df6310a33f4d0a3ef594d2410cdcd637f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/519b58bbfa825f042fcf80261cc18e1e35f85ffd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5333cf1b7f6861912aff6263978d4781f9858e47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49858","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.410","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix SQE threshold checking\n\nCurrent way of checking available SQE count which is based on\nHW updated SQB count could result in driver submitting an SQE\neven before CQE for the previously transmitted SQE at the same\nindex is processed in NAPI resulting losing SKB pointers,\nhence a leak. Fix this by checking a consumer index which\nis updated once CQE is processed."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: octeontx2-pf: Se corrige la comprobación del umbral de SQE. La forma actual de comprobar el recuento de SQE disponibles, basada en el recuento de SQB actualizado por hardware, podría provocar que el controlador envíe un SQE incluso antes de que se procese en NAPI el CQE del SQE previamente transmitido en el mismo índice, lo que resulta en la pérdida de punteros SKB y, por lo tanto, una fuga. Se soluciona esto comprobando un índice de consumidor que se actualiza una vez procesado el CQE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/015e3c0a3b16193aab23beefe4719484b9984c2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0dfc4c88ef39be0ba736aa0ce6119263fc19aeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49859","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.510","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lapbether: fix issue of invalid opcode in lapbeth_open()\n\nIf lapb_register() failed when lapb device goes to up for the first time,\nthe NAPI is not disabled. As a result, the invalid opcode issue is\nreported when the lapb device goes to up for the second time.\n\nThe stack info is as follows:\n[ 1958.311422][T11356] kernel BUG at net\/core\/dev.c:6442!\n[ 1958.312206][T11356] invalid opcode: 0000 [#1] PREEMPT SMP KASAN\n[ 1958.315979][T11356] RIP: 0010:napi_enable+0x16a\/0x1f0\n[ 1958.332310][T11356] Call Trace:\n[ 1958.332817][T11356]  <TASK>\n[ 1958.336135][T11356]  lapbeth_open+0x18\/0x90\n[ 1958.337446][T11356]  __dev_open+0x258\/0x490\n[ 1958.341672][T11356]  __dev_change_flags+0x4d4\/0x6a0\n[ 1958.345325][T11356]  dev_change_flags+0x93\/0x160\n[ 1958.346027][T11356]  devinet_ioctl+0x1276\/0x1bf0\n[ 1958.346738][T11356]  inet_ioctl+0x1c8\/0x2d0\n[ 1958.349638][T11356]  sock_ioctl+0x5d1\/0x750\n[ 1958.356059][T11356]  __x64_sys_ioctl+0x3ec\/0x1790\n[ 1958.365594][T11356]  do_syscall_64+0x35\/0x80\n[ 1958.366239][T11356]  entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n[ 1958.377381][T11356]  <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: lapbether: se corrige el problema de un código de operación no válido en lapbeth_open(). Si lapb_register() falla al iniciar el dispositivo lapb por primera vez, NAPI no se desactiva. Por lo tanto, el problema de código de operación no válido se reporta al iniciar el dispositivo lapb por segunda vez. La información de la pila es la siguiente: [ 1958.311422][T11356] kernel BUG at net\/core\/dev.c:6442! [ 1958.312206][T11356] invalid opcode: 0000 [#1] PREEMPT SMP KASAN [ 1958.315979][T11356] RIP: 0010:napi_enable+0x16a\/0x1f0 [ 1958.332310][T11356] Call Trace: [ 1958.332817][T11356]  [ 1958.336135][T11356] lapbeth_open+0x18\/0x90 [ 1958.337446][T11356] __dev_open+0x258\/0x490 [ 1958.341672][T11356] __dev_change_flags+0x4d4\/0x6a0 [ 1958.345325][T11356] dev_change_flags+0x93\/0x160 [ 1958.346027][T11356] devinet_ioctl+0x1276\/0x1bf0 [ 1958.346738][T11356] inet_ioctl+0x1c8\/0x2d0 [ 1958.349638][T11356] sock_ioctl+0x5d1\/0x750 [ 1958.356059][T11356] __x64_sys_ioctl+0x3ec\/0x1790 [ 1958.365594][T11356] do_syscall_64+0x35\/0x80 [ 1958.366239][T11356] entry_SYSCALL_64_after_hwframe+0x46\/0xb0 [ 1958.377381][T11356]  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3faf7e14ec0c3462c2d747fa6793b8645d1391df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4689bd3a1b23a1bd917899e63b81bca2ccdfab45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed4940050a7ce7fc2ccd51db580ef1ade64290b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49860","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.610","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: k3-udma-glue: fix memory leak when register device fail\n\nIf device_register() fails, it should call put_device() to give\nup reference, the name allocated in dev_set_name() can be freed\nin callback function kobject_cleanup()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: dmaengine: ti: k3-udma-glue: corrige pérdida de memoria cuando falla el registro del dispositivo Si device_register() falla, debe llamar a put_device() para entregar la referencia, el nombre asignado en dev_set_name() se puede liberar en la función de devolución de llamada kobject_cleanup()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/025eab5189fc7ee223ae9b4bc49d7df196543e53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dd27541aa2b95bde71bddd43d73f9c16d73272c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac2b9f34f02052709aea7b34bb2a165e1853eb41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49861","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:09.727","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: mv_xor_v2: Fix a resource leak in mv_xor_v2_remove()\n\nA clk_prepare_enable() call in the probe is not balanced by a corresponding\nclk_disable_unprepare() in the remove function.\n\nAdd the missing call."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: dmaengine: mv_xor_v2: Se corrige una fuga de recursos en mv_xor_v2_remove(). Una llamada clk_prepare_enable() en la sonda no se compensa con la llamada clk_disable_unprepare() correspondiente en la función de eliminación. Agregue la llamada faltante."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04f2cc56d80a1ac058045a7835c5bfd910f17863","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/081195d17a0c4c636da2b869bd5809d42e8cbb13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b7ee3d50f32d277bf024b4ddb4de54da43a3025","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d84887327659c58a6637060ac8c50c3a952a163","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20479886b40c0ed4864a5fc8490a1f6b70cccf1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b6641c3a2ba95ddcfecec263b4a5e572a4b0641","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/992e966caf57e00855edbd79f19d911809732a69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1cb72e20a64a3c83f9b4ee993fbf97e4c1d7714","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49862","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.097","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix the msg->req tlv len check in tipc_nl_compat_name_table_dump_header\n\nThis is a follow-up for commit 974cb0e3e7c9 (\"tipc: fix uninit-value\nin tipc_nl_compat_name_table_dump\") where it should have type casted\nsizeof(..) to int to work when TLV_GET_DATA_LEN() returns a negative\nvalue.\n\nsyzbot reported a call trace because of it:\n\n  BUG: KMSAN: uninit-value in ...\n   tipc_nl_compat_name_table_dump+0x841\/0xea0 net\/tipc\/netlink_compat.c:934\n   __tipc_nl_compat_dumpit+0xab2\/0x1320 net\/tipc\/netlink_compat.c:238\n   tipc_nl_compat_dumpit+0x991\/0xb50 net\/tipc\/netlink_compat.c:321\n   tipc_nl_compat_recv+0xb6e\/0x1640 net\/tipc\/netlink_compat.c:1324\n   genl_family_rcv_msg_doit net\/netlink\/genetlink.c:731 [inline]\n   genl_family_rcv_msg net\/netlink\/genetlink.c:775 [inline]\n   genl_rcv_msg+0x103f\/0x1260 net\/netlink\/genetlink.c:792\n   netlink_rcv_skb+0x3a5\/0x6c0 net\/netlink\/af_netlink.c:2501\n   genl_rcv+0x3c\/0x50 net\/netlink\/genetlink.c:803\n   netlink_unicast_kernel net\/netlink\/af_netlink.c:1319 [inline]\n   netlink_unicast+0xf3b\/0x1270 net\/netlink\/af_netlink.c:1345\n   netlink_sendmsg+0x1288\/0x1440 net\/netlink\/af_netlink.c:1921\n   sock_sendmsg_nosec net\/socket.c:714 [inline]\n   sock_sendmsg net\/socket.c:734 [inline]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: tipc: corrige la comprobación de longitud del tlv msg-&gt;req en tipc_nl_compat_name_table_dump_header Este es un seguimiento del commit 974cb0e3e7c9 (\"tipc: corrige uninit-value en tipc_nl_compat_name_table_dump\") donde debería haber convertido el tipo sizeof(..) a int para que funcione cuando TLV_GET_DATA_LEN() devuelve un valor negativo. syzbot informó un seguimiento de llamadas debido a esto: ERROR: KMSAN: valor no inicializado en ... tipc_nl_compat_name_table_dump+0x841\/0xea0 net\/tipc\/netlink_compat.c:934 __tipc_nl_compat_dumpit+0xab2\/0x1320 net\/tipc\/netlink_compat.c:238 tipc_nl_compat_dumpit+0x991\/0xb50 net\/tipc\/netlink_compat.c:321 tipc_nl_compat_recv+0xb6e\/0x1640 net\/tipc\/netlink_compat.c:1324 genl_family_rcv_msg_doit net\/netlink\/genetlink.c:731 [inline] genl_family_rcv_msg net\/netlink\/genetlink.c:775 [inline] genl_rcv_msg+0x103f\/0x1260 net\/netlink\/genetlink.c:792 netlink_rcv_skb+0x3a5\/0x6c0 net\/netlink\/af_netlink.c:2501 genl_rcv+0x3c\/0x50 net\/netlink\/genetlink.c:803 netlink_unicast_kernel net\/netlink\/af_netlink.c:1319 [inline] netlink_unicast+0xf3b\/0x1270 net\/netlink\/af_netlink.c:1345 netlink_sendmsg+0x1288\/0x1440 net\/netlink\/af_netlink.c:1921 sock_sendmsg_nosec net\/socket.c:714 [inline] sock_sendmsg net\/socket.c:734 [inline] "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/082707d3df191bf5bb8801d43e4ce3dea39ca173","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c075b192fe41030457cd4a5f7dea730412bca40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/301caa06091af4d5cf056ac8249cbda4e6029c6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36769b9477491a7af6635863bd950309c1e1b96c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55a253a6753a603e80b95932ca971ba514aa6ce7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cee2c60bd168279852ac7dbe54c2b70d1028644","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0ead1d648df9c456baec832b494513ef405949a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f31dd158580940938f77514b87337a777520185a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49863","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.203","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: af_can: fix NULL pointer dereference in can_rx_register()\n\nIt causes NULL pointer dereference when testing as following:\n(a) use syscall(__NR_socket, 0x10ul, 3ul, 0) to create netlink socket.\n(b) use syscall(__NR_sendmsg, ...) to create bond link device and vxcan\n    link device, and bind vxcan device to bond device (can also use\n    ifenslave command to bind vxcan device to bond device).\n(c) use syscall(__NR_socket, 0x1dul, 3ul, 1) to create CAN socket.\n(d) use syscall(__NR_bind, ...) to bind the bond device to CAN socket.\n\nThe bond device invokes the can-raw protocol registration interface to\nreceive CAN packets. However, ml_priv is not allocated to the dev,\ndev_rcv_lists is assigned to NULL in can_rx_register(). In this case,\nit will occur the NULL pointer dereference issue.\n\nThe following is the stack information:\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nPGD 122a4067 P4D 122a4067 PUD 1223c067 PMD 0\nOops: 0000 [#1] PREEMPT SMP\nRIP: 0010:can_rx_register+0x12d\/0x1e0\nCall Trace:\n<TASK>\nraw_enable_filters+0x8d\/0x120\nraw_enable_allfilters+0x3b\/0x130\nraw_bind+0x118\/0x4f0\n__sys_bind+0x163\/0x1a0\n__x64_sys_bind+0x1e\/0x30\ndo_syscall_64+0x35\/0x80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n<\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: can: af_can: corrige la desreferencia del puntero NULL en can_rx_register() Provoca la desreferencia del puntero NULL cuando se prueba lo siguiente: (a) use syscall(__NR_socket, 0x10ul, 3ul, 0) para crear el socket netlink. (b) use syscall(__NR_sendmsg, ...) para crear el dispositivo de enlace de enlace y el dispositivo de enlace vxcan, y enlace el dispositivo vxcan al dispositivo de enlace (también puede usar el comando ifenslave para enlazar el dispositivo vxcan al dispositivo de enlace). (c) use syscall(__NR_socket, 0x1dul, 3ul, 1) para crear el socket CAN. (d) use syscall(__NR_bind, ...) para enlazar el dispositivo de enlace al socket CAN. El dispositivo de enlace invoca la interfaz de registro del protocolo can-raw para recibir paquetes CAN. Sin embargo, ml_priv no está asignado a dev, y dev_rcv_lists está asignado a NULL en can_rx_register(). En este caso, se producirá el problema de desreferencia del puntero NULL. La siguiente es la información de la pila: ERROR: desreferencia de puntero NULL del núcleo, dirección: 0000000000000008 PGD 122a4067 P4D 122a4067 PUD 1223c067 PMD 0 Oops: 0000 [#1] PREEMPT SMP RIP: 0010:can_rx_register+0x12d\/0x1e0 Seguimiento de llamadas:  raw_enable_filters+0x8d\/0x120 raw_enable_allfilters+0x3b\/0x130 raw_bind+0x118\/0x4f0 __sys_bind+0x163\/0x1a0 __x64_sys_bind+0x1e\/0x30 do_syscall_64+0x35\/0x80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/261178a1c2623077d62e374a75c195e6c99a6f05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aa59e355949442c408408c2d836e561794c40a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8055677b054bc2bb78beb1080fdc2dc5158c2fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afab4655750fcb3fca359bc7d7214e3d634cdf9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d68fa77ee3d03bad6fe84e89759ddf7005f9e9c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49864","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.313","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Fix NULL pointer dereference in svm_migrate_to_ram()\n\n.\/drivers\/gpu\/drm\/amd\/amdkfd\/kfd_migrate.c:985:58-62: ERROR: p is NULL but dereferenced."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm\/amdkfd: Se corrige la desreferencia del puntero NULL en svm_migrate_to_ram() .\/drivers\/gpu\/drm\/amd\/amdkfd\/kfd_migrate.c:985:58-62: ERROR: p es NULL pero está desreferenciado."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c1bb6187e566143f15dbf0367ae671584aead5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b994354af3cab770bf13386469c5725713679af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/613d5a9a440828970f1543b962779401ac2c9c62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49865","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.420","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: addrlabel: fix infoleak when sending struct ifaddrlblmsg to network\n\nWhen copying a `struct ifaddrlblmsg` to the network, __ifal_reserved\nremained uninitialized, resulting in a 1-byte infoleak:\n\n  BUG: KMSAN: kernel-network-infoleak in __netdev_start_xmit .\/include\/linux\/netdevice.h:4841\n   __netdev_start_xmit .\/include\/linux\/netdevice.h:4841\n   netdev_start_xmit .\/include\/linux\/netdevice.h:4857\n   xmit_one net\/core\/dev.c:3590\n   dev_hard_start_xmit+0x1dc\/0x800 net\/core\/dev.c:3606\n   __dev_queue_xmit+0x17e8\/0x4350 net\/core\/dev.c:4256\n   dev_queue_xmit .\/include\/linux\/netdevice.h:3009\n   __netlink_deliver_tap_skb net\/netlink\/af_netlink.c:307\n   __netlink_deliver_tap+0x728\/0xad0 net\/netlink\/af_netlink.c:325\n   netlink_deliver_tap net\/netlink\/af_netlink.c:338\n   __netlink_sendskb net\/netlink\/af_netlink.c:1263\n   netlink_sendskb+0x1d9\/0x200 net\/netlink\/af_netlink.c:1272\n   netlink_unicast+0x56d\/0xf50 net\/netlink\/af_netlink.c:1360\n   nlmsg_unicast .\/include\/net\/netlink.h:1061\n   rtnl_unicast+0x5a\/0x80 net\/core\/rtnetlink.c:758\n   ip6addrlbl_get+0xfad\/0x10f0 net\/ipv6\/addrlabel.c:628\n   rtnetlink_rcv_msg+0xb33\/0x1570 net\/core\/rtnetlink.c:6082\n  ...\n  Uninit was created at:\n   slab_post_alloc_hook+0x118\/0xb00 mm\/slab.h:742\n   slab_alloc_node mm\/slub.c:3398\n   __kmem_cache_alloc_node+0x4f2\/0x930 mm\/slub.c:3437\n   __do_kmalloc_node mm\/slab_common.c:954\n   __kmalloc_node_track_caller+0x117\/0x3d0 mm\/slab_common.c:975\n   kmalloc_reserve net\/core\/skbuff.c:437\n   __alloc_skb+0x27a\/0xab0 net\/core\/skbuff.c:509\n   alloc_skb .\/include\/linux\/skbuff.h:1267\n   nlmsg_new .\/include\/net\/netlink.h:964\n   ip6addrlbl_get+0x490\/0x10f0 net\/ipv6\/addrlabel.c:608\n   rtnetlink_rcv_msg+0xb33\/0x1570 net\/core\/rtnetlink.c:6082\n   netlink_rcv_skb+0x299\/0x550 net\/netlink\/af_netlink.c:2540\n   rtnetlink_rcv+0x26\/0x30 net\/core\/rtnetlink.c:6109\n   netlink_unicast_kernel net\/netlink\/af_netlink.c:1319\n   netlink_unicast+0x9ab\/0xf50 net\/netlink\/af_netlink.c:1345\n   netlink_sendmsg+0xebc\/0x10f0 net\/netlink\/af_netlink.c:1921\n  ...\n\nThis patch ensures that the reserved field is always initialized."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ipv6: addrlabel: corregir fuga de información al enviar struct ifaddrlblmsg a la red Al copiar un `struct ifaddrlblmsg` a la red, __ifal_reserved permaneció sin inicializar, lo que resultó en una fuga de información de 1 byte: ERROR: KMSAN: kernel-network-infoleak en __netdev_start_xmit .\/include\/linux\/netdevice.h:4841 __netdev_start_xmit .\/include\/linux\/netdevice.h:4841 netdev_start_xmit .\/include\/linux\/netdevice.h:4857 xmit_one net\/core\/dev.c:3590 dev_hard_start_xmit+0x1dc\/0x800 net\/core\/dev.c:3606 __dev_queue_xmit+0x17e8\/0x4350 net\/core\/dev.c:4256 dev_queue_xmit .\/include\/linux\/netdevice.h:3009 __netlink_deliver_tap_skb net\/netlink\/af_netlink.c:307 __netlink_deliver_tap+0x728\/0xad0 net\/netlink\/af_netlink.c:325 netlink_deliver_tap net\/netlink\/af_netlink.c:338 __netlink_sendskb net\/netlink\/af_netlink.c:1263 netlink_sendskb+0x1d9\/0x200 net\/netlink\/af_netlink.c:1272 netlink_unicast+0x56d\/0xf50 net\/netlink\/af_netlink.c:1360 nlmsg_unicast .\/include\/net\/netlink.h:1061 rtnl_unicast+0x5a\/0x80 net\/core\/rtnetlink.c:758 ip6addrlbl_get+0xfad\/0x10f0 net\/ipv6\/addrlabel.c:628 rtnetlink_rcv_msg+0xb33\/0x1570 net\/core\/rtnetlink.c:6082 ... Uninit se creó en: slab_post_alloc_hook+0x118\/0xb00 mm\/slab.h:742 slab_alloc_node mm\/slub.c:3398 __kmem_cache_alloc_node+0x4f2\/0x930 mm\/slub.c:3437 __do_kmalloc_node mm\/slab_common.c:954 __kmalloc_node_track_caller+0x117\/0x3d0 mm\/slab_common.c:975 kmalloc_reserve net\/core\/skbuff.c:437 __alloc_skb+0x27a\/0xab0 net\/core\/skbuff.c:509 alloc_skb .\/include\/linux\/skbuff.h:1267 nlmsg_new .\/include\/net\/netlink.h:964 ip6addrlbl_get+0x490\/0x10f0 net\/ipv6\/addrlabel.c:608 rtnetlink_rcv_msg+0xb33\/0x1570 net\/core\/rtnetlink.c:6082 netlink_rcv_skb+0x299\/0x550 net\/netlink\/af_netlink.c:2540 rtnetlink_rcv+0x26\/0x30 net\/core\/rtnetlink.c:6109 netlink_unicast_kernel net\/netlink\/af_netlink.c:1319 netlink_unicast+0x9ab\/0xf50 net\/netlink\/af_netlink.c:1345 netlink_sendmsg+0xebc\/0x10f0 net\/netlink\/af_netlink.c:1921 ... Este parche garantiza que el campo reservado siempre se inicialice."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f85b7ae7c4b5d7b4bbf7ac653a733c181a8a2bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2acb2779b147decd300c117683d5a32ce61c75d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49e92ba5ecd7d72ba369dde2ccff738edd028a47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/568a47ff756f913e8b374c2af9d22cd2c772c744","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58cd7fdc8c1e6c7873acc08f190069fed88d1c12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d26d0587abccb9835382a0b53faa7b9b1cd83e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a033b86c7f7621fde31f0364af8986f43b44914f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c23fb2c82267638f9d206cb96bb93e1f93ad7828","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49866","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.530","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: mhi: fix memory leak in mhi_mbim_dellink\n\nMHI driver registers network device without setting the\nneeds_free_netdev flag, and does NOT call free_netdev() when\nunregisters network device, which causes a memory leak.\n\nThis patch sets needs_free_netdev to true when registers\nnetwork device, which makes netdev subsystem call free_netdev()\nautomatically after unregister_netdevice()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: wwan: mhi: se corrige una fuga de memoria en mhi_mbim_dellink. El controlador MHI registra el dispositivo de red sin configurar el indicador needs_free_netdev y NO llama a free_netdev() al cancelar el registro del dispositivo de red, lo que provoca una fuga de memoria. Este parche establece needs_free_netdev como verdadero al registrar el dispositivo de red, lo que hace que el subsistema netdev llame automáticamente a free_netdev() después de unregister_netdevice()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2845bc9070cef0c651987487d84d4813d64675dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cd3ffe952f78ec5dadf300cb58d4b38a0c0106d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/668205b9c9f94d5ed6ab00cce9a46a654c2b5d16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49867","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.633","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: iosm: fix memory leak in ipc_wwan_dellink\n\nIOSM driver registers network device without setting the\nneeds_free_netdev flag, and does NOT call free_netdev() when\nunregisters network device, which causes a memory leak.\n\nThis patch sets needs_free_netdev to true when registers\nnetwork device, which makes netdev subsystem call free_netdev()\nautomatically after unregister_netdevice()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: wwan: iosm: se corrige una fuga de memoria en ipc_wwan_dellink. El controlador IOSM registra el dispositivo de red sin configurar el indicador needs_free_netdev y NO llama a free_netdev() al cancelar el registro del dispositivo de red, lo que provoca una fuga de memoria. Este parche establece needs_free_netdev como verdadero al registrar el dispositivo de red, lo que hace que el subsistema netdev llame automáticamente a free_netdev() después de cancelar el registro de netdevice()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/128514b51a5ba2c82f9e4a106f1c10423907618a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ce2348c2858d723f7fe389dead9b43b08e0944e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f25caaca424703d5a0607310f0452f978f1f78d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49868","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.733","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ralink: mt7621-pci: add sentinel to quirks table\n\nWith mt7621 soc_dev_attr fixed to register the soc as a device,\nkernel will experience an oops in soc_device_match_attr\n\nThis quirk test was introduced in the staging driver in\ncommit 9445ccb3714c (\"staging: mt7621-pci-phy: add quirks for 'E2'\nrevision using 'soc_device_attribute'\"). The staging driver was removed,\nand later re-added in commit d87da32372a0 (\"phy: ralink: Add PHY driver\nfor MT7621 PCIe PHY\") for kernel 5.11"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: phy: ralink: mt7621-pci: añadir centinela a la tabla de peculiaridades. Con la corrección de la variable mt7621 soc_dev_attr para registrar el SOC como dispositivo, el kernel experimentará un error en soc_device_match_attr. Esta prueba de peculiaridades se introdujo en el controlador de pruebas en el commit 9445ccb3714c (\"staging: mt7621-pci-phy: añadir peculiaridades para la revisión 'E2' mediante 'soc_device_attribute'\"). El controlador de pruebas se eliminó y se volvió a añadir posteriormente en el commit d87da32372a0 (\"phy: ralink: Añadir controlador PHY para MT7621 PCIe PHY\") para el kernel 5.11."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/500bcd3a99eae84412067c3b9e7ffba1c66e6383","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/819b885cd886c193782891c4f51bbcab3de119a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d539cfd1202d66c2dcea383f1d96835ae72d5809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49869","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.830","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible crash in bnxt_hwrm_set_coal()\n\nDuring the error recovery sequence, the rtnl_lock is not held for the\nentire duration and some datastructures may be freed during the sequence.\nCheck for the BNXT_STATE_OPEN flag instead of netif_running() to ensure\nthat the device is fully operational before proceeding to reconfigure\nthe coalescing settings.\n\nThis will fix a possible crash like this:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] SMP NOPTI\nCPU: 10 PID: 181276 Comm: ethtool Kdump: loaded Tainted: G          IOE    --------- -  - 4.18.0-348.el8.x86_64 #1\nHardware name: Dell Inc. PowerEdge R740\/0F9N89, BIOS 2.3.10 08\/15\/2019\nRIP: 0010:bnxt_hwrm_set_coal+0x1fb\/0x2a0 [bnxt_en]\nCode: c2 66 83 4e 22 08 66 89 46 1c e8 10 cb 00 00 41 83 c6 01 44 39 b3 68 01 00 00 0f 8e a3 00 00 00 48 8b 93 c8 00 00 00 49 63 c6 <48> 8b 2c c2 48 8b 85 b8 02 00 00 48 85 c0 74 2e 48 8b 74 24 08 f6\nRSP: 0018:ffffb11c8dcaba50 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff8d168a8b0ac0 RCX: 00000000000000c5\nRDX: 0000000000000000 RSI: ffff8d162f72c000 RDI: ffff8d168a8b0b28\nRBP: 0000000000000000 R08: b6e1f68a12e9a7eb R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000037 R12: ffff8d168a8b109c\nR13: ffff8d168a8b10aa R14: 0000000000000000 R15: ffffffffc01ac4e0\nFS:  00007f3852e4c740(0000) GS:ffff8d24c0080000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000041b3ee003 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ethnl_set_coalesce+0x3ce\/0x4c0\n genl_family_rcv_msg_doit.isra.15+0x10f\/0x150\n genl_family_rcv_msg+0xb3\/0x160\n ? coalesce_fill_reply+0x480\/0x480\n genl_rcv_msg+0x47\/0x90\n ? genl_family_rcv_msg+0x160\/0x160\n netlink_rcv_skb+0x4c\/0x120\n genl_rcv+0x24\/0x40\n netlink_unicast+0x196\/0x230\n netlink_sendmsg+0x204\/0x3d0\n sock_sendmsg+0x4c\/0x50\n __sys_sendto+0xee\/0x160\n ? syscall_trace_enter+0x1d3\/0x2c0\n ? __audit_syscall_exit+0x249\/0x2a0\n __x64_sys_sendto+0x24\/0x30\n do_syscall_64+0x5b\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x65\/0xca\nRIP: 0033:0x7f38524163bb"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bnxt_en: Se corrige un posible fallo en bnxt_hwrm_set_coal(). Durante la secuencia de recuperación de errores, el bloqueo rtnl_lock no se mantiene durante toda la secuencia y algunas estructuras de datos podrían liberarse durante la misma. Compruebe el indicador BNXT_STATE_OPEN en lugar de netif_running() para asegurarse de que el dispositivo esté completamente operativo antes de reconfigurar los ajustes de coalescencia. Esto solucionará un posible fallo como este: ERROR: no se puede controlar la desreferencia del puntero NULL del núcleo en 0000000000000000 PGD 0 P4D 0 Oops: 0000 [#1] SMP NOPTI CPU: 10 PID: 181276 Comm: ethtool Kdump: cargado Tainted: G IOE --------- - - 4.18.0-348.el8.x86_64 #1 Nombre del hardware: Dell Inc. PowerEdge R740\/0F9N89, BIOS 2.3.10 15\/08\/2019 RIP: 0010:bnxt_hwrm_set_coal+0x1fb\/0x2a0 [bnxt_en] Código: c2 66 83 4e 22 08 66 89 46 1c e8 10 cb 00 00 41 83 c6 01 44 39 b3 68 01 00 00 0f 8e a3 00 00 00 48 8b 93 c8 00 00 00 49 63 c6 &lt;48&gt; 8b 2c c2 48 8b 85 b8 02 00 00 48 85 c0 74 2e 48 8b 74 24 08 f6 RSP: 0018:ffffb11c8dcaba50 EFLAGS: 00010246 RAX: 000000000000000 RBX: ffff8d168a8b0ac0 RCX: 00000000000000c5 RDX: 0000000000000000 RSI: ffff8d162f72c000 RDI: ffff8d168a8b0b28 RBP: 0000000000000000 R08: b6e1f68a12e9a7eb R09: 0000000000000000 R10: 0000000000000001 R11: 0000000000000037 R12: ffff8d168a8b109c R13: ffff8d168a8b10aa R14: 0000000000000000 R15: ffffffffc01ac4e0 FS: 00007f3852e4c740(0000) GS:ffff8d24c0080000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000000000000000 CR3: 000000041b3ee003 CR4: 00000000007706e0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Rastreo de llamadas: ethnl_set_coalesce+0x3ce\/0x4c0 genl_family_rcv_msg_doit.isra.15+0x10f\/0x150 genl_family_rcv_msg+0xb3\/0x160 ? coalesce_fill_reply+0x480\/0x480 genl_rcv_msg+0x47\/0x90 ? genl_family_rcv_msg+0x160\/0x160 netlink_rcv_skb+0x4c\/0x120 genl_rcv+0x24\/0x40 netlink_unicast+0x196\/0x230 netlink_sendmsg+0x204\/0x3d0 sock_sendmsg+0x4c\/0x50 __sys_sendto+0xee\/0x160 ? syscall_trace_enter+0x1d3\/0x2c0 ? __audit_syscall_exit+0x249\/0x2a0 __x64_sys_sendto+0x24\/0x30 do_syscall_64+0x5b\/0x1a0 entry_SYSCALL_64_after_hwframe+0x65\/0xca RIP: 0033:0x7f38524163bb"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38147073c96dce8c7e142ce0e5f305a420a729ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d81ea3765dfa6c8a20822613c81edad1c4a16a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7781e32984cde65549bedc3201537e253297c98d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5a05fbef4a0dfe45fe03b2f1d02ba23aebf5384","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac257c43fa615d22180916074feed803b8bb8cb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49870","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:11.937","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncapabilities: fix undefined behavior in bit shift for CAP_TO_MASK\n\nShifting signed 32-bit value by 31 bits is undefined, so changing\nsignificant bit to unsigned. The UBSAN warning calltrace like below:\n\nUBSAN: shift-out-of-bounds in security\/commoncap.c:1252:2\nleft shift of 1 by 31 places cannot be represented in type 'int'\nCall Trace:\n <TASK>\n dump_stack_lvl+0x7d\/0xa5\n dump_stack+0x15\/0x1b\n ubsan_epilogue+0xe\/0x4e\n __ubsan_handle_shift_out_of_bounds+0x1e7\/0x20c\n cap_task_prctl+0x561\/0x6f0\n security_task_prctl+0x5a\/0xb0\n __x64_sys_prctl+0x61\/0x8f0\n do_syscall_64+0x58\/0x80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: capacidades: corregir comportamiento indefinido en el cambio de bits para CAP_TO_MASK El cambio de un valor con signo de 32 bits por 31 bits no está definido, por lo que se cambia el bit significativo a sin signo. El seguimiento de llamadas de advertencia de UBSAN como se muestra a continuación: UBSAN: desplazamiento fuera de los límites en security\/commoncap.c:1252:2 El desplazamiento a la izquierda de 1 por 31 lugares no se puede representar en el tipo 'int' Seguimiento de llamadas: dump_stack_lvl+0x7d\/0xa5 dump_stack+0x15\/0x1b ubsan_epilogue+0xe\/0x4e __ubsan_handle_shift_out_of_bounds+0x1e7\/0x20c cap_task_prctl+0x561\/0x6f0 security_task_prctl+0x5a\/0xb0 __x64_sys_prctl+0x61\/0x8f0 do_syscall_64+0x58\/0x80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/151dc8087b5609e53b069c068e3f3ee100efa586","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27bdb134c043ff32c459d98f16550d0ffa0b3c34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46653972e3ea64f79e7f8ae3aa41a4d3fdb70a13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5661f111a1616ac105ec8cec81bff99b60f847ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b79fa628e2ab789e629a83cd211ef9b4c1a593e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65b0bc7a0690861812ade523d19f82688ab819dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbaab08c8677d598244d21afb7818e44e1c5d826","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcbd2b336834bd24e1d9454ad5737856470c10d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49871","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.030","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: Fix memory leaks of napi_get_frags\n\nkmemleak reports after running test_progs:\n\nunreferenced object 0xffff8881b1672dc0 (size 232):\n  comm \"test_progs\", pid 394388, jiffies 4354712116 (age 841.975s)\n  hex dump (first 32 bytes):\n    e0 84 d7 a8 81 88 ff ff 80 2c 67 b1 81 88 ff ff  .........,g.....\n    00 40 c5 9b 81 88 ff ff 00 00 00 00 00 00 00 00  .@..............\n  backtrace:\n    [<00000000c8f01748>] napi_skb_cache_get+0xd4\/0x150\n    [<0000000041c7fc09>] __napi_build_skb+0x15\/0x50\n    [<00000000431c7079>] __napi_alloc_skb+0x26e\/0x540\n    [<000000003ecfa30e>] napi_get_frags+0x59\/0x140\n    [<0000000099b2199e>] tun_get_user+0x183d\/0x3bb0 [tun]\n    [<000000008a5adef0>] tun_chr_write_iter+0xc0\/0x1b1 [tun]\n    [<0000000049993ff4>] do_iter_readv_writev+0x19f\/0x320\n    [<000000008f338ea2>] do_iter_write+0x135\/0x630\n    [<000000008a3377a4>] vfs_writev+0x12e\/0x440\n    [<00000000a6b5639a>] do_writev+0x104\/0x280\n    [<00000000ccf065d8>] do_syscall_64+0x3b\/0x90\n    [<00000000d776e329>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe issue occurs in the following scenarios:\ntun_get_user()\n  napi_gro_frags()\n    napi_frags_finish()\n      case GRO_NORMAL:\n        gro_normal_one()\n          list_add_tail(&skb->list, &napi->rx_list);\n          <-- While napi->rx_count < READ_ONCE(gro_normal_batch),\n          <-- gro_normal_list() is not called, napi->rx_list is not empty\n  <-- not ask to complete the gro work, will cause memory leaks in\n  <-- following tun_napi_del()\n...\ntun_napi_del()\n  netif_napi_del()\n    __netif_napi_del()\n    <-- &napi->rx_list is not empty, which caused memory leaks\n\nTo fix, add napi_complete() after napi_gro_frags()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: tun: Se corrigen las fugas de memoria de napi_get_frags que informa kmemleak tras ejecutar test_progs: objeto sin referencia 0xffff8881b1672dc0 (tamaño 232): comm \"test_progs\", pid 394388, jiffies 4354712116 (edad 841,975 s) volcado hexadecimal (primeros 32 bytes): e0 84 d7 a8 81 88 ff ff 80 2c 67 b1 81 88 ff ff .........,g..... 00 40 c5 9b 81 88 ff ff 00 00 00 00 00 00 00 00 .@.............. backtrace: [&lt;00000000c8f01748&gt;] napi_skb_cache_get+0xd4\/0x150 [&lt;0000000041c7fc09&gt;] __napi_build_skb+0x15\/0x50 [&lt;00000000431c7079&gt;] __napi_alloc_skb+0x26e\/0x540 [&lt;000000003ecfa30e&gt;] napi_get_frags+0x59\/0x140 [&lt;0000000099b2199e&gt;] tun_get_user+0x183d\/0x3bb0 [tun] [&lt;000000008a5adef0&gt;] tun_chr_write_iter+0xc0\/0x1b1 [tun] El problema ocurre en los siguientes escenarios: tun_get_user() napi_gro_frags() napi_frags_finish() caso GRO_NORMAL: gro_normal_one() list_add_tail(&amp;skb-&gt;list, &amp;napi-&gt;rx_list); &lt;-- Mientras napi-&gt;rx_count &lt; READ_ONCE(gro_normal_batch), &lt;-- gro_normal_list() no se llama, napi-&gt;rx_list no está vacío &lt;-- no solicita completar el trabajo de gro, causará pérdidas de memoria en &lt;-- siguientes tun_napi_del() ... tun_napi_del() netif_napi_del() __netif_napi_del() &lt;-- &amp;napi-&gt;rx_list no está vacío, lo que causó pérdidas de memoria Para corregirlo, agregue napi_complete() después de napi_gro_frags()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1118b2049d77ca0b505775fc1a8d1909cf19a7ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/223ef6a94e52331a6a7ef31e59921e0e82d2d40a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3401f964028ac941425b9b2c8ff8a022539ef44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b12a020b20a78f62bedc50f26db3bf4fadf8cb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4f73f6adc53fd7a3f9771cbc89a03ef39b0b755","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7569302a7a52a9305d2fb054df908ff985553bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49872","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.133","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: gso: fix panic on frag_list with mixed head alloc types\n\nSince commit 3dcbdb134f32 (\"net: gso: Fix skb_segment splat when\nsplitting gso_size mangled skb having linear-headed frag_list\"), it is\nallowed to change gso_size of a GRO packet. However, that commit assumes\nthat \"checking the first list_skb member suffices; i.e if either of the\nlist_skb members have non head_frag head, then the first one has too\".\n\nIt turns out this assumption does not hold. We've seen BUG_ON being hit\nin skb_segment when skbs on the frag_list had differing head_frag with\nthe vmxnet3 driver. This happens because __netdev_alloc_skb and\n__napi_alloc_skb can return a skb that is page backed or kmalloced\ndepending on the requested size. As the result, the last small skb in\nthe GRO packet can be kmalloced.\n\nThere are three different locations where this can be fixed:\n\n(1) We could check head_frag in GRO and not allow GROing skbs with\n    different head_frag. However, that would lead to performance\n    regression on normal forward paths with unmodified gso_size, where\n    !head_frag in the last packet is not a problem.\n\n(2) Set a flag in bpf_skb_net_grow and bpf_skb_net_shrink indicating\n    that NETIF_F_SG is undesirable. That would need to eat a bit in\n    sk_buff. Furthermore, that flag can be unset when all skbs on the\n    frag_list are page backed. To retain good performance,\n    bpf_skb_net_grow\/shrink would have to walk the frag_list.\n\n(3) Walk the frag_list in skb_segment when determining whether\n    NETIF_F_SG should be cleared. This of course slows things down.\n\nThis patch implements (3). To limit the performance impact in\nskb_segment, the list is walked only for skbs with SKB_GSO_DODGY set\nthat have gso_size changed. Normal paths thus will not hit it.\n\nWe could check only the last skb but since we need to walk the whole\nlist anyway, let's stay on the safe side."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: gso: corrección del pánico en frag_list con tipos de asignación de encabezado mixtos. Desde el commit 3dcbdb134f32 (\"net: gso: corrección del error skb_segment al dividir gso_size de un skb alterado con frag_list de encabezado lineal\"), se permite cambiar gso_size de un paquete GRO. Sin embargo, esta confirmación asume que basta con comprobar el primer miembro de list_skb; es decir, si alguno de los miembros de list_skb tiene un encabezado distinto de head_frag, el primero también lo tendrá. Resulta que esta suposición no se cumple. Hemos observado que se ha alcanzado BUG_ON en skb_segment cuando los skbs de frag_list tenían un head_frag distinto con el controlador vmxnet3. Esto se debe a que __netdev_alloc_skb y __napi_alloc_skb pueden devolver un skb con respaldo de página o asignado a km, según el tamaño solicitado. Como resultado, el último skb pequeño en el paquete GRO puede ser asignado a km. Hay tres ubicaciones diferentes donde esto puede ser corregido: (1) Podríamos revisar head_frag en GRO y no permitir que GROing skbs con diferente head_frag. Sin embargo, eso llevaría a una regresión del rendimiento en rutas de avance normales con gso_size sin modificar, donde !head_frag en el último paquete no es un problema. (2) Establecer un indicador en bpf_skb_net_grow y bpf_skb_net_shrink que indique que NETIF_F_SG no es deseable. Esto requeriría consumir un poco en sk_buff. Además, ese indicador puede ser desactivado cuando todos los skbs en la frag_list están en retroceso de página. Para mantener un buen rendimiento, bpf_skb_net_grow\/shrink tendría que recorrer la frag_list. (3) Recorrer la frag_list en skb_segment al determinar si NETIF_F_SG debe ser borrado. Esto, por supuesto, ralentiza el proceso. Este parche implementa (3). Para limitar el impacto en el rendimiento de skb_segment, la lista solo se recorre para skb con SKB_GSO_DODGY configurado y gso_size modificado. Por lo tanto, las rutas normales no la alcanzarán. Podríamos revisar solo el último skb, pero como necesitamos recorrer la lista completa de todos modos, mejor optemos por lo seguro."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a9f56e525ea871d3950b90076912f5c7494f00f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50868de7dc4e7f0fcadd6029f32bf4387c102ee6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5876b7f249a1ecbbcc8e35072c3828d6526d1c3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/598d9e30927b15731e83797fbd700ecf399f42dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65ad047fd83502447269fda8fd26c99077a9af47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e4b7a99a03aefd37ba7bb1f022c8efab5019165","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad25a115f50800c6847e0d841c5c7992a9f7c1b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd5362e58721e4d0d1a37796593bd6e51536ce7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49873","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.240","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix wrong reg type conversion in release_reference()\n\nSome helper functions will allocate memory. To avoid memory leaks, the\nverifier requires the eBPF program to release these memories by calling\nthe corresponding helper functions.\n\nWhen a resource is released, all pointer registers corresponding to the\nresource should be invalidated. The verifier use release_references() to\ndo this job, by apply  __mark_reg_unknown() to each relevant register.\n\nIt will give these registers the type of SCALAR_VALUE. A register that\nwill contain a pointer value at runtime, but of type SCALAR_VALUE, which\nmay allow the unprivileged user to get a kernel pointer by storing this\nregister into a map.\n\nUsing __mark_reg_not_init() while NOT allow_ptr_leaks can mitigate this\nproblem."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf: Arreglar conversión de tipo de registro incorrecta en release_reference() Algunas funciones auxiliares asignarán memoria. Para evitar fugas de memoria, el verificador requiere que el programa eBPF libere estas memorias llamando a las funciones auxiliares correspondientes. Cuando se libera un recurso, todos los registros de puntero correspondientes al recurso deben invalidarse. El verificador usa release_references() para realizar este trabajo, aplicando __mark_reg_unknown() a cada registro relevante. Les dará a estos registros el tipo SCALAR_VALUE. Un registro que contendrá un valor de puntero en tiempo de ejecución, pero de tipo SCALAR_VALUE, puede permitir que el usuario sin privilegios obtenga un puntero del kernel almacenando este registro en un mapa. Usar __mark_reg_not_init() mientras NO allow_ptr_leaks puede mitigar este problema."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/466ce46f251dfb259a8cbaa895ab9edd6fb56240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae5ccad6c711db0f2ca1231be051935dd128b8f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cedd4f01f67be94735f15123158f485028571037","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1db20814af532f85e091231223e5e4818e8464b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49874","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.340","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hyperv: fix possible memory leak in mousevsc_probe()\n\nIf hid_add_device() returns error, it should call hid_destroy_device()\nto free hid_dev which is allocated in hid_allocate_device()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: HID: hyperv: corrige posible pérdida de memoria en mousevsc_probe() Si hid_add_device() devuelve un error, debe llamar a hid_destroy_device() para liberar hid_dev que está asignado en hid_allocate_device()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/249b743801c00542e9324f87b380032e957a43e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ad95d71344b7ffec360d62591633b3c465dc049","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f3aba6566b866f5b0a4916f0b2e8a6ae66a6451","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8597b59e3d22b27849bd3e4f92a3d466774bfb04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6d2fb1874c52ace1f5cf1966ee558829c5c19b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5bcb94b0954a026bbd671741fdb00e7141f9c91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e29289d0d8193fca6d2c1f0a1de75cfc80edec00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed75d1a1c31a0cae8ecc8bcea710b25c0be68da0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.450","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpftool: Fix NULL pointer dereference when pin {PROG, MAP, LINK} without FILE\n\nWhen using bpftool to pin {PROG, MAP, LINK} without FILE,\nsegmentation fault will occur. The reson is that the lack\nof FILE will cause strlen to trigger NULL pointer dereference.\nThe corresponding stacktrace is shown below:\n\ndo_pin\n  do_pin_any\n    do_pin_fd\n      mount_bpffs_for_pin\n        strlen(name) <- NULL pointer dereference\n\nFix it by adding validation to the common process."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpftool: Se corrige la desreferencia de puntero nulo al anclar {PROG, MAP, LINK} sin archivo. Al usar bpftool para anclar {PROG, MAP, LINK} sin archivo, se produce un fallo de segmentación. La razón es que la falta de archivo provoca que strlen active la desreferencia de puntero nulo. El seguimiento de pila correspondiente se muestra a continuación: do_pin do_pin_any do_pin_fd mount_bpffs_for_pin strlen(name) &lt;- Desreferencia de puntero nulo. Se corrige añadiendo validación al proceso común."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/34de8e6e0e1f66e431abf4123934a2581cb5f133","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dcdd1b68b7f9333d48d48fc77b75e7f235f6a4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c80b2fca4112d724dde477aed13f7b0510a2792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da5161ba94c5e9182c301dd4f09c94f715c068bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.550","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix general-protection-fault in ieee80211_subif_start_xmit()\n\nWhen device is running and the interface status is changed, the gpf issue\nis triggered. The problem triggering process is as follows:\nThread A:                           Thread B\nieee80211_runtime_change_iftype()   process_one_work()\n    ...                                 ...\n    ieee80211_do_stop()                 ...\n    ...                                 ...\n        sdata->bss = NULL               ...\n        ...                             ieee80211_subif_start_xmit()\n                                            ieee80211_multicast_to_unicast\n                                    \/\/!sdata->bss->multicast_to_unicast\n                                      cause gpf issue\n\nWhen the interface status is changed, the sending queue continues to send\npackets. After the bss is set to NULL, the bss is accessed. As a result,\nthis causes a general-protection-fault issue.\n\nThe following is the stack information:\ngeneral protection fault, probably for non-canonical address\n0xdffffc000000002f: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000178-0x000000000000017f]\nWorkqueue: mld mld_ifc_work\nRIP: 0010:ieee80211_subif_start_xmit+0x25b\/0x1310\nCall Trace:\n<TASK>\ndev_hard_start_xmit+0x1be\/0x990\n__dev_queue_xmit+0x2c9a\/0x3b60\nip6_finish_output2+0xf92\/0x1520\nip6_finish_output+0x6af\/0x11e0\nip6_output+0x1ed\/0x540\nmld_sendpack+0xa09\/0xe70\nmld_ifc_work+0x71c\/0xdb0\nprocess_one_work+0x9bf\/0x1710\nworker_thread+0x665\/0x1080\nkthread+0x2e4\/0x3a0\nret_from_fork+0x1f\/0x30\n<\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: mac80211: fix general-protection-fault in ieee80211_subif_start_xmit() Cuando el dispositivo está en ejecución y se cambia el estado de la interfaz, se activa el problema gpf. El proceso de activación del problema es el siguiente: Hilo A: Hilo B ieee80211_runtime_change_iftype() process_one_work() ... ... ieee80211_do_stop() ... ... ... sdata-&gt;bss = NULL ... ... ieee80211_subif_start_xmit() ieee80211_multicast_to_unicast \/\/!sdata-&gt;bss-&gt;multicast_to_unicast cause gpf issue Cuando se cambia el estado de la interfaz, la cola de envío continúa enviando paquetes. Después de que bss se establece en NULL, se accede a bss. Como resultado, esto causa un problema de general-protection-fault. La siguiente es la información de la pila: falla de protección general, probablemente para la dirección no canónica 0xdffffc000000002f: 0000 [#1] PREEMPT SMP KASAN KASAN: null-ptr-deref en el rango [0x0000000000000178-0x000000000000017f] Cola de trabajo: mld mld_ifc_work RIP: 0010:ieee80211_subif_start_xmit+0x25b\/0x1310 Rastreo de llamadas:  dev_hard_start_xmit+0x1be\/0x990 __dev_queue_xmit+0x2c9a\/0x3b60 ip6_finish_output2+0xf92\/0x1520 ip6_finish_output+0x6af\/0x11e0 ip6_output+0x1ed\/0x540 mld_sendpack+0xa09\/0xe70 mld_ifc_work+0x71c\/0xdb0 process_one_work+0x9bf\/0x1710 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03eb68c72cee249aeb7af7d04a83c033aca3d6d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/780854186946e0de2be192ee7fa5125666533b3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49877","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.653","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix the sk->sk_forward_alloc warning of sk_stream_kill_queues\n\nWhen running `test_sockmap` selftests, the following warning appears:\n\n  WARNING: CPU: 2 PID: 197 at net\/core\/stream.c:205 sk_stream_kill_queues+0xd3\/0xf0\n  Call Trace:\n  <TASK>\n  inet_csk_destroy_sock+0x55\/0x110\n  tcp_rcv_state_process+0xd28\/0x1380\n  ? tcp_v4_do_rcv+0x77\/0x2c0\n  tcp_v4_do_rcv+0x77\/0x2c0\n  __release_sock+0x106\/0x130\n  __tcp_close+0x1a7\/0x4e0\n  tcp_close+0x20\/0x70\n  inet_release+0x3c\/0x80\n  __sock_release+0x3a\/0xb0\n  sock_close+0x14\/0x20\n  __fput+0xa3\/0x260\n  task_work_run+0x59\/0xb0\n  exit_to_user_mode_prepare+0x1b3\/0x1c0\n  syscall_exit_to_user_mode+0x19\/0x50\n  do_syscall_64+0x48\/0x90\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root case is in commit 84472b436e76 (\"bpf, sockmap: Fix more uncharged\nwhile msg has more_data\"), where I used msg->sg.size to replace the tosend,\ncausing breakage:\n\n  if (msg->apply_bytes && msg->apply_bytes < tosend)\n    tosend = psock->apply_bytes;"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf, sockmap: corrige la advertencia sk-&gt;sk_forward_alloc de sk_stream_kill_queues Al ejecutar las pruebas automáticas `test_sockmap`, aparece la siguiente advertencia: ADVERTENCIA: CPU: 2 PID: 197 en net\/core\/stream.c:205 sk_stream_kill_queues+0xd3\/0xf0 Seguimiento de llamadas:   inet_csk_destroy_sock+0x55\/0x110 tcp_rcv_state_process+0xd28\/0x1380 ? tcp_v4_do_rcv+0x77\/0x2c0 tcp_v4_do_rcv+0x77\/0x2c0 __release_sock+0x106\/0x130 __tcp_close+0x1a7\/0x4e0 tcp_close+0x20\/0x70 inet_release+0x3c\/0x80 __sock_release+0x3a\/0xb0 sock_close+0x14\/0x20 __fput+0xa3\/0x260 task_work_run+0x59\/0xb0 exit_to_user_mode_prepare+0x1b3\/0x1c0 syscall_exit_to_user_mode+0x19\/0x50 do_syscall_64+0x48\/0x90 entry_SYSCALL_64_after_hwframe+0x44\/0xae El caso raíz está en el commit 84472b436e76 (\"bpf, sockmap: Arreglar más archivos no cargados mientras msg tiene more_data\"), donde utilicé msg-&gt;sg.size para reemplazar tosend, lo que causó fallas: if (msg-&gt;apply_bytes &amp;&amp; msg-&gt;apply_bytes &lt; tosend) tosend = psock-&gt;apply_bytes;"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14e8bc3bf7bd6af64d7538a0684c8238d96cdfd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ec95b94716a1e4d126edc3fb2bc426a717e2dba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95adbd2ac8de82e43fd6b347e7e1b47f74dc1abb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc21dc48a78cc9e5af9a4d039cd456446a6e73ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d975bec1eaeb52341acc9273db79ddb078220399","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49878","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.753","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, verifier: Fix memory leak in array reallocation for stack state\n\nIf an error (NULL) is returned by krealloc(), callers of realloc_array()\nwere setting their allocation pointers to NULL, but on error krealloc()\ndoes not touch the original allocation. This would result in a memory\nresource leak. Instead, free the old allocation on the error handling\npath.\n\nThe memory leak information is as follows as also reported by Zhengchao:\n\n  unreferenced object 0xffff888019801800 (size 256):\n  comm \"bpf_repo\", pid 6490, jiffies 4294959200 (age 17.170s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<00000000b211474b>] __kmalloc_node_track_caller+0x45\/0xc0\n    [<0000000086712a0b>] krealloc+0x83\/0xd0\n    [<00000000139aab02>] realloc_array+0x82\/0xe2\n    [<00000000b1ca41d1>] grow_stack_state+0xfb\/0x186\n    [<00000000cd6f36d2>] check_mem_access.cold+0x141\/0x1341\n    [<0000000081780455>] do_check_common+0x5358\/0xb350\n    [<0000000015f6b091>] bpf_check.cold+0xc3\/0x29d\n    [<000000002973c690>] bpf_prog_load+0x13db\/0x2240\n    [<00000000028d1644>] __sys_bpf+0x1605\/0x4ce0\n    [<00000000053f29bd>] __x64_sys_bpf+0x75\/0xb0\n    [<0000000056fedaf5>] do_syscall_64+0x35\/0x80\n    [<000000002bd58261>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf, verificador: Se corrige una fuga de memoria en la reasignación de matriz para el estado de la pila. Si krealloc() devuelve un error (NULL), los usuarios de realloc_array() establecían sus punteros de asignación en NULL, pero en caso de error, krealloc() no modifica la asignación original. Esto provocaría una fuga de recursos de memoria. En su lugar, se libera la asignación anterior en la ruta de gestión de errores. La información de fuga de memoria es la siguiente, tal como lo informó Zhengchao: objeto sin referencia 0xffff888019801800 (tamaño 256): comm \"bpf_repo\", pid 6490, jiffies 4294959200 (edad 17.170s) volcado hexadecimal (primeros 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;00000000b211474b&gt;] __kmalloc_node_track_caller+0x45\/0xc0 [&lt;0000000086712a0b&gt;] krealloc+0x83\/0xd0 [&lt;00000000139aab02&gt;] realloc_array+0x82\/0xe2 [&lt;00000000b1ca41d1&gt;] grow_stack_state+0xfb\/0x186 [&lt;00000000cd6f36d2&gt;] check_mem_access.cold+0x141\/0x1341 [&lt;0000000081780455&gt;] do_check_common+0x5358\/0xb350 [&lt;0000000015f6b091&gt;] bpf_check.cold+0xc3\/0x29d [&lt;000000002973c690&gt;] bpf_prog_load+0x13db\/0x2240 [&lt;00000000028d1644&gt;] __sys_bpf+0x1605\/0x4ce0 [&lt;00000000053f29bd&gt;] __x64_sys_bpf+0x75\/0xb0 [&lt;0000000056fedaf5&gt;] do_syscall_64+0x35\/0x80 [&lt;000000002bd58261&gt;] entry_SYSCALL_64_after_hwframe+0x63\/0xcd "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06615967d4889b08b19ff3dda96e8b131282f73d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e210891c4a4c2d858cd6f9f61d5809af251d4df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42378a9ca55347102bbf86708776061d8fe3ece2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49879","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.857","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix BUG_ON() when directory entry has invalid rec_len\n\nThe rec_len field in the directory entry has to be a multiple of 4.  A\ncorrupted filesystem image can be used to hit a BUG() in\next4_rec_len_to_disk(), called from make_indexed_dir().\n\n ------------[ cut here ]------------\n kernel BUG at fs\/ext4\/ext4.h:2413!\n ...\n RIP: 0010:make_indexed_dir+0x53f\/0x5f0\n ...\n Call Trace:\n  <TASK>\n  ? add_dirent_to_buf+0x1b2\/0x200\n  ext4_add_entry+0x36e\/0x480\n  ext4_add_nondir+0x2b\/0xc0\n  ext4_create+0x163\/0x200\n  path_openat+0x635\/0xe90\n  do_filp_open+0xb4\/0x160\n  ? __create_object.isra.0+0x1de\/0x3b0\n  ? _raw_spin_unlock+0x12\/0x30\n  do_sys_openat2+0x91\/0x150\n  __x64_sys_open+0x6c\/0xa0\n  do_syscall_64+0x3c\/0x80\n  entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n\nThe fix simply adds a call to ext4_check_dir_entry() to validate the\ndirectory entry, returning -EFSCORRUPTED if the entry is invalid."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: corrección de BUG_ON() cuando la entrada de directorio tiene un rec_len no válido El campo rec_len en la entrada de directorio debe ser un múltiplo de 4. Una imagen de sistema de archivos dañada se puede usar para generar un BUG() en ext4_rec_len_to_disk(), llamado desde make_indexed_dir(). ------------[ cortar aquí ]------------ ¡ERROR del kernel en fs\/ext4\/ext4.h:2413! ... RIP: 0010:make_indexed_dir+0x53f\/0x5f0 ... Rastreo de llamadas:   ? add_dirent_to_buf+0x1b2\/0x200 ext4_add_entry+0x36e\/0x480 ext4_add_nondir+0x2b\/0xc0 ext4_create+0x163\/0x200 path_openat+0x635\/0xe90 do_filp_open+0xb4\/0x160 ? __create_object.isra.0+0x1de\/0x3b0 ? _raw_spin_unlock+0x12\/0x30 do_sys_openat2+0x91\/0x150 __x64_sys_open+0x6c\/0xa0 do_syscall_64+0x3c\/0x80 entry_SYSCALL_64_after_hwframe+0x46\/0xb0 La solución simplemente agrega una llamada a ext4_check_dir_entry() para validar la entrada del directorio, devolviendo -EFSCORRUPTED si la entrada no es válida."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/156451a67b93986fb07c274ef6995ff40766c5ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17a0bc9bd697f75cfdf9b378d5eb2d7409c91340","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fa24d0274fbf913b56ee31f15bc01168669d909","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/999cff2b6ce3b45c08abf793bf55534777421327","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce1ee2c8827fb6493e91acbd50f664cf2a972c3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49880","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:12.960","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix warning in 'ext4_da_release_space'\n\nSyzkaller report issue as follows:\nEXT4-fs (loop0): Free\/Dirty block details\nEXT4-fs (loop0): free_blocks=0\nEXT4-fs (loop0): dirty_blocks=0\nEXT4-fs (loop0): Block reservation details\nEXT4-fs (loop0): i_reserved_data_blocks=0\nEXT4-fs warning (device loop0): ext4_da_release_space:1527: ext4_da_release_space: ino 18, to_free 1 with only 0 reserved data blocks\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 92 at fs\/ext4\/inode.c:1528 ext4_da_release_space+0x25e\/0x370 fs\/ext4\/inode.c:1524\nModules linked in:\nCPU: 0 PID: 92 Comm: kworker\/u4:4 Not tainted 6.0.0-syzkaller-09423-g493ffd6605b2 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/22\/2022\nWorkqueue: writeback wb_workfn (flush-7:0)\nRIP: 0010:ext4_da_release_space+0x25e\/0x370 fs\/ext4\/inode.c:1528\nRSP: 0018:ffffc900015f6c90 EFLAGS: 00010296\nRAX: 42215896cd52ea00 RBX: 0000000000000000 RCX: 42215896cd52ea00\nRDX: 0000000000000000 RSI: 0000000080000001 RDI: 0000000000000000\nRBP: 1ffff1100e907d96 R08: ffffffff816aa79d R09: fffff520002bece5\nR10: fffff520002bece5 R11: 1ffff920002bece4 R12: ffff888021fd2000\nR13: ffff88807483ecb0 R14: 0000000000000001 R15: ffff88807483e740\nFS:  0000000000000000(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005555569ba628 CR3: 000000000c88e000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ext4_es_remove_extent+0x1ab\/0x260 fs\/ext4\/extents_status.c:1461\n mpage_release_unused_pages+0x24d\/0xef0 fs\/ext4\/inode.c:1589\n ext4_writepages+0x12eb\/0x3be0 fs\/ext4\/inode.c:2852\n do_writepages+0x3c3\/0x680 mm\/page-writeback.c:2469\n __writeback_single_inode+0xd1\/0x670 fs\/fs-writeback.c:1587\n writeback_sb_inodes+0xb3b\/0x18f0 fs\/fs-writeback.c:1870\n wb_writeback+0x41f\/0x7b0 fs\/fs-writeback.c:2044\n wb_do_writeback fs\/fs-writeback.c:2187 [inline]\n wb_workfn+0x3cb\/0xef0 fs\/fs-writeback.c:2227\n process_one_work+0x877\/0xdb0 kernel\/workqueue.c:2289\n worker_thread+0xb14\/0x1330 kernel\/workqueue.c:2436\n kthread+0x266\/0x300 kernel\/kthread.c:376\n ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:306\n <\/TASK>\n\nAbove issue may happens as follows:\next4_da_write_begin\n  ext4_create_inline_data\n    ext4_clear_inode_flag(inode, EXT4_INODE_EXTENTS);\n    ext4_set_inode_flag(inode, EXT4_INODE_INLINE_DATA);\n__ext4_ioctl\n  ext4_ext_migrate -> will lead to eh->eh_entries not zero, and set extent flag\next4_da_write_begin\n  ext4_da_convert_inline_data_to_extent\n    ext4_da_write_inline_data_begin\n      ext4_da_map_blocks\n        ext4_insert_delayed_block\n\t  if (!ext4_es_scan_clu(inode, &ext4_es_is_delonly, lblk))\n\t    if (!ext4_es_scan_clu(inode, &ext4_es_is_mapped, lblk))\n\t      ext4_clu_mapped(inode, EXT4_B2C(sbi, lblk)); -> will return 1\n\t       allocated = true;\n          ext4_es_insert_delayed_block(inode, lblk, allocated);\next4_writepages\n  mpage_map_and_submit_extent(handle, &mpd, &give_up_on_write); -> return -ENOSPC\n  mpage_release_unused_pages(&mpd, give_up_on_write); -> give_up_on_write == 1\n    ext4_es_remove_extent\n      ext4_da_release_space(inode, reserved);\n        if (unlikely(to_free > ei->i_reserved_data_blocks))\n\t  -> to_free == 1  but ei->i_reserved_data_blocks == 0\n\t  -> then trigger warning as above\n\nTo solve above issue, forbid inode do migrate which has inline data."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: corrección de advertencia en 'ext4_da_release_space' Syzkaller informa del problema de la siguiente manera: EXT4-fs (loop0): Detalles del bloque libre\/sucio EXT4-fs (loop0): free_blocks=0 EXT4-fs (loop0): dirty_blocks=0 EXT4-fs (loop0): Detalles de la reserva del bloque EXT4-fs (loop0): i_reserved_data_blocks=0 Advertencia de EXT4-fs (dispositivo loop0): ext4_da_release_space:1527: ext4_da_release_space: ino 18, to_free 1 con solo 0 bloques de datos reservados ------------[ cortar aquí ]------------ ADVERTENCIA: CPU: 0 PID: 92 en fs\/ext4\/inode.c:1528 ext4_da_release_space+0x25e\/0x370 fs\/ext4\/inode.c:1524 Módulos vinculados: CPU: 0 PID: 92 Comm: kworker\/u4:4 No contaminado 6.0.0-syzkaller-09423-g493ffd6605b2 #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 22\/09\/2022 Cola de trabajo: escritura diferida wb_workfn (flush-7:0) RIP: 0010:ext4_da_release_space+0x25e\/0x370 fs\/ext4\/inode.c:1528 RSP: 0018:ffffc900015f6c90 EFLAGS: 00010296 RAX: 42215896cd52ea00 RBX: 0000000000000000 RCX: 42215896cd52ea00 RDX: 0000000000000000 RSI: 0000000080000001 RDI: 0000000000000000 RBP: 1ffff1100e907d96 R08: ffffffff816aa79d R09: fffff520002bece5 R10: fffff520002bece5 R11: 1ffff920002bece4 R12: ffff888021fd2000 R13: ffff88807483ecb0 R14: 0000000000000001 R15: ffff88807483e740FS: 0000000000000000(0000) GS:ffff8880b9a00000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00005555569ba628 CR3: 000000000c88e000 CR4: 00000000003506f0 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Rastreo de llamadas:  ext4_es_remove_extent+0x1ab\/0x260 fs\/ext4\/extents_status.c:1461 mpage_release_unused_pages+0x24d\/0xef0 fs\/ext4\/inode.c:1589 ext4_writepages+0x12eb\/0x3be0 fs\/ext4\/inode.c:2852 do_writepages+0x3c3\/0x680 mm\/page-writeback.c:2469 __writeback_single_inode+0xd1\/0x670 fs\/fs-writeback.c:1587 writeback_sb_inodes+0xb3b\/0x18f0 fs\/fs-writeback.c:1870 wb_writeback+0x41f\/0x7b0 fs\/fs-writeback.c:2044 wb_do_writeback fs\/fs-writeback.c:2187 [inline] wb_workfn+0x3cb\/0xef0 fs\/fs-writeback.c:2227 process_one_work+0x877\/0xdb0 kernel\/workqueue.c:2289 worker_thread+0xb14\/0x1330 kernel\/workqueue.c:2436 kthread+0x266\/0x300 kernel\/kthread.c:376 ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:306  El problema anterior puede ocurrir de la siguiente manera: ext4_da_write_begin ext4_create_inline_data ext4_clear_inode_flag(inode, EXT4_INODE_EXTENTS); ext4_set_inode_flag(inode, EXT4_INODE_INLINE_DATA); __ext4_ioctl ext4_ext_migrate -&gt; hará que eh-&gt;eh_entries no sea cero y establecerá el indicador de extensión ext4_da_write_begin ext4_da_convert_inline_data_to_extent ext4_da_write_inline_data_begin ext4_da_map_blocks ext4_insert_delayed_block si (!ext4_es_scan_clu(inodo, &amp;ext4_es_is_delonly, lblk)) si (!ext4_es_scan_clu(inodo, &amp;ext4_es_is_mapped, lblk)) ext4_clu_mapped(inodo, EXT4_B2C(sbi, lblk)); -&gt; devolverá 1 asignado = verdadero; ext4_es_insert_delayed_block(inodo, lblk, asignado); ext4_writepages mpage_map_and_submit_extent(handle, &amp;mpd, &amp;give_up_on_write); -&gt; return -ENOSPC mpage_release_unused_pages(&amp;mpd, give_up_on_write); -&gt; give_up_on_write == 1 ext4_es_remove_extent ext4_da_release_space(inode, reserved); if (unlikely(to_free &gt; ei-&gt;i_reserved_data_blocks)) -&gt; to_free == 1 but ei-&gt;i_reserved_data_blocks == 0 -&gt; then trigger WARNING Como se indica arriba, para resolver el problema anterior, prohíba migrar los inodes que tienen datos en línea."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a43c015e98121c91a76154edf42280ce1a8a883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0de5ee103747fd3a24f1c010c79caabe35e8f0bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b8f787ef547230a3249bcf897221ef0cc78481b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5370b965b7a945bb8f48b9ee23d83a76a947902e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72743d5598b9096950bbfd6a9b7f173d156eea97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/890d738f569fa9412b70ba09f15407f17a52da20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89bee03d2fb8c54119b38ac6c24e7d60fae036b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3bf1e95cfa7d950dc3c064d0c2e3d06b427bc63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.077","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix memory leak in query_regdb_file()\n\nIn the function query_regdb_file() the alpha2 parameter is duplicated\nusing kmemdup() and subsequently freed in regdb_fw_cb(). However,\nrequest_firmware_nowait() can fail without calling regdb_fw_cb() and\nthus leak memory."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: wifi: cfg80211: se corrige una fuga de memoria en query_regdb_file(). En la función query_regdb_file(), el parámetro alpha2 se duplica mediante kmemdup() y posteriormente se libera en regdb_fw_cb(). Sin embargo, request_firmware_nowait() puede fallar sin llamar a regdb_fw_cb() y, por lo tanto, provocar una fuga de memoria."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ede1a988299e95d54bd89551fd635980572e920","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/219446396786330937bcd382a7bc4ccd767383bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38c9fa2cc6bf4b6e1a74057aef8b5cffd23d3264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57b962e627ec0ae53d4d16d7bd1033e27e67677a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1e12180321f416d83444f2cdc9259e0f5093d35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9b5a4566d5bc71cc901be50d1fa24da00613120","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49882","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.183","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Reject attempts to consume or refresh inactive gfn_to_pfn_cache\n\nReject kvm_gpc_check() and kvm_gpc_refresh() if the cache is inactive.\nNot checking the active flag during refresh is particularly egregious, as\nKVM can end up with a valid, inactive cache, which can lead to a variety\nof use-after-free bugs, e.g. consuming a NULL kernel pointer or missing\nan mmu_notifier invalidation due to the cache not being on the list of\ngfns to invalidate.\n\nNote, \"active\" needs to be set if and only if the cache is on the list\nof caches, i.e. is reachable via mmu_notifier events.  If a relevant\nmmu_notifier event occurs while the cache is \"active\" but not on the\nlist, KVM will not acquire the cache's lock and so will not serailize\nthe mmu_notifier event with active users and\/or kvm_gpc_refresh().\n\nA race between KVM_XEN_ATTR_TYPE_SHARED_INFO and KVM_XEN_HVM_EVTCHN_SEND\ncan be exploited to trigger the bug.\n\n1. Deactivate shinfo cache:\n\nkvm_xen_hvm_set_attr\ncase KVM_XEN_ATTR_TYPE_SHARED_INFO\n kvm_gpc_deactivate\n  kvm_gpc_unmap\n   gpc->valid = false\n   gpc->khva = NULL\n  gpc->active = false\n\nResult: active = false, valid = false\n\n2. Cause cache refresh:\n\nkvm_arch_vm_ioctl\ncase KVM_XEN_HVM_EVTCHN_SEND\n kvm_xen_hvm_evtchn_send\n  kvm_xen_set_evtchn\n   kvm_xen_set_evtchn_fast\n    kvm_gpc_check\n    return -EWOULDBLOCK because !gpc->valid\n   kvm_xen_set_evtchn_fast\n    return -EWOULDBLOCK\n   kvm_gpc_refresh\n    hva_to_pfn_retry\n     gpc->valid = true\n     gpc->khva = not NULL\n\nResult: active = false, valid = true\n\n3. Race ioctl KVM_XEN_HVM_EVTCHN_SEND against ioctl\nKVM_XEN_ATTR_TYPE_SHARED_INFO:\n\nkvm_arch_vm_ioctl\ncase KVM_XEN_HVM_EVTCHN_SEND\n kvm_xen_hvm_evtchn_send\n  kvm_xen_set_evtchn\n   kvm_xen_set_evtchn_fast\n    read_lock gpc->lock\n                                          kvm_xen_hvm_set_attr case\n                                          KVM_XEN_ATTR_TYPE_SHARED_INFO\n                                           mutex_lock kvm->lock\n                                           kvm_xen_shared_info_init\n                                            kvm_gpc_activate\n                                             gpc->khva = NULL\n    kvm_gpc_check\n     [ Check passes because gpc->valid is\n       still true, even though gpc->khva\n       is already NULL. ]\n    shinfo = gpc->khva\n    pending_bits = shinfo->evtchn_pending\n    CRASH: test_and_set_bit(..., pending_bits)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: Rechazar intentos de consumir o actualizar gfn_to_pfn_cache inactivo. Rechazar kvm_gpc_check() y kvm_gpc_refresh() si la caché está inactiva. No verificar el indicador de activo durante la actualización es particularmente grave, ya que KVM puede terminar con una caché válida inactiva, lo que puede provocar diversos errores de use-after-free, como consumir un puntero de kernel nulo o perder una invalidación de mmu_notifier debido a que la caché no está en la lista de gfns para invalidar. Tenga en cuenta que \"active\" debe establecerse solo si la caché está en la lista de cachés, es decir, es accesible mediante eventos mmu_notifier. Si se produce un evento mmu_notifier relevante mientras la caché está activa, pero no está en la lista, KVM no adquirirá el bloqueo de la caché y, por lo tanto, no serializará el evento mmu_notifier con usuarios activos ni con kvm_gpc_refresh(). Una competencia entre KVM_XEN_ATTR_TYPE_SHARED_INFO y KVM_XEN_HVM_EVTCHN_SEND puede explotarse para activar el error. 1. Desactivar caché shinfo: kvm_xen_hvm_set_attr caso KVM_XEN_ATTR_TYPE_SHARED_INFO kvm_gpc_deactivate kvm_gpc_unmap gpc-&gt;valid = falso gpc-&gt;khva = NULL gpc-&gt;active = falso Resultado: activo = falso, válido = falso 2. Causar actualización de caché: kvm_arch_vm_ioctl caso KVM_XEN_HVM_EVTCHN_SEND kvm_xen_hvm_evtchn_send kvm_xen_set_evtchn kvm_xen_set_evtchn_fast kvm_gpc_check devolver -EWOULDBLOCK porque !gpc-&gt;valid kvm_xen_set_evtchn_fast devolver -EWOULDBLOCK kvm_gpc_refresh hva_to_pfn_retry gpc-&gt;valid = verdadero gpc-&gt;khva = no NULL Resultado: activo = falso, válido = verdadero 3. Competencia ioctl KVM_XEN_HVM_EVTCHN_SEND contra ioctl KVM_XEN_ATTR_TYPE_SHARED_INFO: kvm_arch_vm_ioctl caso KVM_XEN_HVM_EVTCHN_SEND kvm_xen_hvm_evtchn_send kvm_xen_set_evtchn kvm_xen_set_evtchn_fast read_lock gpc-&gt;lock kvm_xen_hvm_set_attr caso KVM_XEN_ATTR_TYPE_SHARED_INFO mutex_lock kvm-&gt;lock kvm_xen_shared_info_init kvm_gpc_activate gpc-&gt;khva = NULL kvm_gpc_check [ La comprobación pasa porque gpc-&gt;valid sigue siendo cierto, aunque gpc-&gt;khva ya sea NULL. ] shinfo = gpc-&gt;khva pending_bits = shinfo-&gt;evtchn_pending CRASH: test_and_set_bit(..., pending_bits)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bfa9672f8fc9eb118124bab61899d2dd497f95ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecbcf030b45666ad11bc98565e71dfbcb7be4393","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49883","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.287","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: smm: number of GPRs in the SMRAM image depends on the image format\n\nOn 64 bit host, if the guest doesn't have X86_FEATURE_LM, KVM will\naccess 16 gprs to 32-bit smram image, causing out-ouf-bound ram\naccess.\n\nOn 32 bit host, the rsm_load_state_64\/enter_smm_save_state_64\nis compiled out, thus access overflow can't happen."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: x86: smm: el número de GPR en la imagen SMRAM depende del formato de la imagen. En un host de 64 bits, si el invitado no tiene X86_FEATURE_LM, KVM accederá a 16 GPRS en la imagen SMRAM de 32 bits, lo que provocará un acceso a la RAM fuera de los límites. En un host de 32 bits, rsm_load_state_64\/enter_smm_save_state_64 se compila, por lo que no se puede producir un desbordamiento de acceso."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/696db303e54f7352623d9f640e6c51d8fa9d5588","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7ebfbea0f52550d7cdf12c38f3f5eaa7b2b6494","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49884","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.387","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Initialize gfn_to_pfn_cache locks in dedicated helper\n\nMove the gfn_to_pfn_cache lock initialization to another helper and\ncall the new helper during VM\/vCPU creation.  There are race\nconditions possible due to kvm_gfn_to_pfn_cache_init()'s\nability to re-initialize the cache's locks.\n\nFor example: a race between ioctl(KVM_XEN_HVM_EVTCHN_SEND) and\nkvm_gfn_to_pfn_cache_init() leads to a corrupted shinfo gpc lock.\n\n                (thread 1)                |           (thread 2)\n                                          |\n kvm_xen_set_evtchn_fast                  |\n  read_lock_irqsave(&gpc->lock, ...)      |\n                                          | kvm_gfn_to_pfn_cache_init\n                                          |  rwlock_init(&gpc->lock)\n  read_unlock_irqrestore(&gpc->lock, ...) |\n\nRename \"cache_init\" and \"cache_destroy\" to activate+deactivate to\navoid implying that the cache really is destroyed\/freed.\n\nNote, there more races in the newly named kvm_gpc_activate() that will\nbe addressed separately.\n\n[sean: call out that this is a bug fix]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: Inicializar bloqueos de gfn_to_pfn_cache en un asistente dedicado. Trasladar la inicialización del bloqueo de gfn_to_pfn_cache a otro asistente y llamar al nuevo asistente durante la creación de la máquina virtual o la vCPU. Es posible que se produzcan condiciones de competencia debido a la capacidad de kvm_gfn_to_pfn_cache_init() de reinicializar los bloqueos de la caché. Por ejemplo: una competencia entre ioctl(KVM_XEN_HVM_EVTCHN_SEND) y kvm_gfn_to_pfn_cache_init() provoca un bloqueo de gpc de shinfo dañado. (hilo 1) | (hilo 2) | kvm_xen_set_evtchn_fast | read_lock_irqsave(&amp;gpc-&gt;lock, ...) | | kvm_gfn_to_pfn_cache_init | rwlock_init(&amp;gpc-&gt;lock) read_unlock_irqrestore(&amp;gpc-&gt;lock, ...) | Renombra \"cache_init\" y \"cache_destroy\" como activate+deactivate para evitar que la caché se destruya o libere. Ten en cuenta que hay más ejecuciones en el nuevo nombre kvm_gpc_activate() que se abordarán por separado. [sean: se indica que se trata de una corrección de error]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52491a38b2c2411f3f0229dc6ad610349c704a41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61242001d6c9c253df7645dab090842d8da08764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49885","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.480","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: APEI: Fix integer overflow in ghes_estatus_pool_init()\n\nChange num_ghes from int to unsigned int, preventing an overflow\nand causing subsequent vmalloc() to fail.\n\nThe overflow happens in ghes_estatus_pool_init() when calculating\nlen during execution of the statement below as both multiplication\noperands here are signed int:\n\nlen += (num_ghes * GHES_ESOURCE_PREALLOC_MAX_SIZE);\n\nThe following call trace is observed because of this bug:\n\n[    9.317108] swapper\/0: vmalloc error: size 18446744071562596352, exceeds total pages, mode:0xcc0(GFP_KERNEL), nodemask=(null),cpuset=\/,mems_allowed=0-1\n[    9.317131] Call Trace:\n[    9.317134]  <TASK>\n[    9.317137]  dump_stack_lvl+0x49\/0x5f\n[    9.317145]  dump_stack+0x10\/0x12\n[    9.317146]  warn_alloc.cold+0x7b\/0xdf\n[    9.317150]  ? __device_attach+0x16a\/0x1b0\n[    9.317155]  __vmalloc_node_range+0x702\/0x740\n[    9.317160]  ? device_add+0x17f\/0x920\n[    9.317164]  ? dev_set_name+0x53\/0x70\n[    9.317166]  ? platform_device_add+0xf9\/0x240\n[    9.317168]  __vmalloc_node+0x49\/0x50\n[    9.317170]  ? ghes_estatus_pool_init+0x43\/0xa0\n[    9.317176]  vmalloc+0x21\/0x30\n[    9.317177]  ghes_estatus_pool_init+0x43\/0xa0\n[    9.317179]  acpi_hest_init+0x129\/0x19c\n[    9.317185]  acpi_init+0x434\/0x4a4\n[    9.317188]  ? acpi_sleep_proc_init+0x2a\/0x2a\n[    9.317190]  do_one_initcall+0x48\/0x200\n[    9.317195]  kernel_init_freeable+0x221\/0x284\n[    9.317200]  ? rest_init+0xe0\/0xe0\n[    9.317204]  kernel_init+0x1a\/0x130\n[    9.317205]  ret_from_fork+0x22\/0x30\n[    9.317208]  <\/TASK>\n\n[ rjw: Subject and changelog edits ]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ACPI: APEI: Se corrige el desbordamiento de enteros en ghes_estatus_pool_init(). Se cambia num_ghes de int a unsigned int, lo que evita un desbordamiento y provoca el fallo de vmalloc(). El desbordamiento ocurre en ghes_estatus_pool_init() al calcular len durante la ejecución de la siguiente instrucción, ya que ambos operandos de multiplicación son int con signo: len += (num_ghes * GHES_ESOURCE_PREALLOC_MAX_SIZE); El siguiente seguimiento de llamadas se observa debido a este error: [ 9.317108] swapper\/0: error de vmalloc: tamaño 18446744071562596352, excede el total de páginas, modo: 0xcc0 (GFP_KERNEL), nodemask = (null), cpuset = \/, mems_allowed = 0-1 [ 9.317131] Seguimiento de llamadas: [ 9.317134]  [ 9.317137] dump_stack_lvl + 0x49\/0x5f [ 9.317145] dump_stack + 0x10\/0x12 [ 9.317146] warn_alloc.cold + 0x7b\/0xdf [ 9.317150] ? __adjunto_dispositivo+0x16a\/0x1b0 [ 9.317155] __rango_nodo_vmalloc+0x702\/0x740 [ 9.317160] ? agregado_dispositivo+0x17f\/0x920 [ 9.317164] ? nombre_conjunto_dispositivo+0x53\/0x70 [ 9.317166] ? agregado_dispositivo_plataforma+0xf9\/0x240 [ 9.317168] __nodo_vmalloc+0x49\/0x50 [ 9.317170] ? ghes_estatus_pool_init+0x43\/0xa0 [ 9.317176] vmalloc+0x21\/0x30 [ 9.317177] ghes_estatus_pool_init+0x43\/0xa0 [ 9.317179] acpi_hest_init+0x129\/0x19c [ 9.317185] acpi_init+0x434\/0x4a4 [9.317188]? acpi_sleep_proc_init+0x2a\/0x2a [9.317190] do_one_initcall+0x48\/0x200 [9.317195] kernel_init_freeable+0x221\/0x284 [9.317200] ? rest_init+0xe0\/0xe0 [ 9.317204] kernel_init+0x1a\/0x130 [ 9.317205] ret_from_fork+0x22\/0x30 [ 9.317208]  [ rjw: Asunto y ediciones del registro de cambios ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/43d2748394c3feb86c0c771466f5847e274fc043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c10c854113720cbfe75d4f51db79b700a629e73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9edf20e5a1d805855e78f241cf221d741b50d482","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c50ec15725e005e9fb20bce69b6c23b135a4a9b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49886","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.590","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/tdx: Panic on bad configs that #VE on \"private\" memory access\n\nAll normal kernel memory is \"TDX private memory\".  This includes\neverything from kernel stacks to kernel text.  Handling\nexceptions on arbitrary accesses to kernel memory is essentially\nimpossible because they can happen in horribly nasty places like\nkernel entry\/exit.  But, TDX hardware can theoretically _deliver_\na virtualization exception (#VE) on any access to private memory.\n\nBut, it's not as bad as it sounds.  TDX can be configured to never\ndeliver these exceptions on private memory with a \"TD attribute\"\ncalled ATTR_SEPT_VE_DISABLE.  The guest has no way to *set* this\nattribute, but it can check it.\n\nEnsure ATTR_SEPT_VE_DISABLE is set in early boot.  panic() if it\nis unset.  There is no sane way for Linux to run with this\nattribute clear so a panic() is appropriate.\n\nThere's small window during boot before the check where kernel\nhas an early #VE handler. But the handler is only for port I\/O\nand will also panic() as soon as it sees any other #VE, such as\na one generated by a private memory access.\n\n[ dhansen: Rewrite changelog and rebase on new tdx_parse_tdinfo().\n\t   Add Kirill's tested-by because I made changes since\n\t   he wrote this. ]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86\/tdx: Pánico en configuraciones incorrectas que generan #VE al acceder a memoria \"privada\". Toda la memoria normal del kernel es \"memoria privada TDX\". Esto incluye todo, desde las pilas del kernel hasta el texto del kernel. Gestionar excepciones en accesos arbitrarios a la memoria del kernel es prácticamente imposible, ya que pueden ocurrir en lugares muy peligrosos, como la entrada\/salida del kernel. Sin embargo, el hardware TDX, en teoría, puede generar una excepción de virtualización (#VE) en cualquier acceso a memoria privada. Sin embargo, no es tan grave como parece. TDX se puede configurar para que nunca genere estas excepciones en memoria privada con un \"atributo TD\" llamado ATTR_SEPT_VE_DISABLE. El invitado no tiene forma de *configurar* este atributo, pero puede comprobarlo. Asegúrese de que ATTR_SEPT_VE_DISABLE esté configurado en el arranque inicial. Si no está configurado, utilice panic(). No hay una forma sensata de que Linux se ejecute con este atributo sin configurar, por lo que es apropiado usar panic(). Hay una pequeña ventana durante el arranque antes de la comprobación donde el kernel tiene un controlador de #VE temprano. Sin embargo, este controlador solo sirve para la E\/S de puerto y también se pondrá en pánico() en cuanto detecte cualquier otro #VE, como uno generado por un acceso a memoria privada. [dhansen: Reescribir el registro de cambios y reorganizar con el nuevo tdx_parse_tdinfo(). Añadir la prueba de Kirill porque hice cambios desde que escribió esto.]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/373e715e31bf4e0f129befe87613a278fac228d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/895c168c8f78079f21ad50fead7593ffa352f795","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49887","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.690","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: meson: vdec: fix possible refcount leak in vdec_probe()\n\nv4l2_device_unregister need to be called to put the refcount got by\nv4l2_device_register when vdec_probe fails or vdec_remove is called."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: meson: vdec: corrige posible pérdida de recuento de referencias en vdec_probe(). Se debe llamar a v4l2_device_unregister para colocar el recuento de referencias obtenido por v4l2_device_register cuando vdec_probe falla o se llama a vdec_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0457e7b12ece1a7e41fa0ae8b7e47c0a72a83bef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70119756311a0be3b95bec2e1ba714673e90feba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7718999356234d9cc6a11b4641bb773928f1390f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be6e22f54623d8a856a4f167b25be73c2ff1ff80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f96ad391d054bd5c36994f98afd6a12cbb5600bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49888","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.790","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: entry: avoid kprobe recursion\n\nThe cortex_a76_erratum_1463225_debug_handler() function is called when\nhandling debug exceptions (and synchronous exceptions from BRK\ninstructions), and so is called when a probed function executes. If the\ncompiler does not inline cortex_a76_erratum_1463225_debug_handler(), it\ncan be probed.\n\nIf cortex_a76_erratum_1463225_debug_handler() is probed, any debug\nexception or software breakpoint exception will result in recursive\nexceptions leading to a stack overflow. This can be triggered with the\nftrace multiple_probes selftest, and as per the example splat below.\n\nThis is a regression caused by commit:\n\n  6459b8469753e9fe (\"arm64: entry: consolidate Cortex-A76 erratum 1463225 workaround\")\n\n... which removed the NOKPROBE_SYMBOL() annotation associated with the\nfunction.\n\nMy intent was that cortex_a76_erratum_1463225_debug_handler() would be\ninlined into its caller, el1_dbg(), which is marked noinstr and cannot\nbe probed. Mark cortex_a76_erratum_1463225_debug_handler() as\n__always_inline to ensure this.\n\nExample splat prior to this patch (with recursive entries elided):\n\n| # echo p cortex_a76_erratum_1463225_debug_handler > \/sys\/kernel\/debug\/tracing\/kprobe_events\n| # echo p do_el0_svc >> \/sys\/kernel\/debug\/tracing\/kprobe_events\n| # echo 1 > \/sys\/kernel\/debug\/tracing\/events\/kprobes\/enable\n| Insufficient stack space to handle exception!\n| ESR: 0x0000000096000047 -- DABT (current EL)\n| FAR: 0xffff800009cefff0\n| Task stack:     [0xffff800009cf0000..0xffff800009cf4000]\n| IRQ stack:      [0xffff800008000000..0xffff800008004000]\n| Overflow stack: [0xffff00007fbc00f0..0xffff00007fbc10f0]\n| CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2\n| Hardware name: linux,dummy-virt (DT)\n| pstate: 604003c5 (nZCv DAIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n| pc : arm64_enter_el1_dbg+0x4\/0x20\n| lr : el1_dbg+0x24\/0x5c\n| sp : ffff800009cf0000\n| x29: ffff800009cf0000 x28: ffff000002c74740 x27: 0000000000000000\n| x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n| x23: 00000000604003c5 x22: ffff80000801745c x21: 0000aaaac95ac068\n| x20: 00000000f2000004 x19: ffff800009cf0040 x18: 0000000000000000\n| x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n| x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n| x11: 0000000000000010 x10: ffff800008c87190 x9 : ffff800008ca00d0\n| x8 : 000000000000003c x7 : 0000000000000000 x6 : 0000000000000000\n| x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000000043a4\n| x2 : 00000000f2000004 x1 : 00000000f2000004 x0 : ffff800009cf0040\n| Kernel panic - not syncing: kernel stack overflow\n| CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2\n| Hardware name: linux,dummy-virt (DT)\n| Call trace:\n|  dump_backtrace+0xe4\/0x104\n|  show_stack+0x18\/0x4c\n|  dump_stack_lvl+0x64\/0x7c\n|  dump_stack+0x18\/0x38\n|  panic+0x14c\/0x338\n|  test_taint+0x0\/0x2c\n|  panic_bad_stack+0x104\/0x118\n|  handle_bad_stack+0x34\/0x48\n|  __bad_stack+0x78\/0x7c\n|  arm64_enter_el1_dbg+0x4\/0x20\n|  el1h_64_sync_handler+0x40\/0x98\n|  el1h_64_sync+0x64\/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0\/0x34\n...\n|  el1h_64_sync_handler+0x40\/0x98\n|  el1h_64_sync+0x64\/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0\/0x34\n...\n|  el1h_64_sync_handler+0x40\/0x98\n|  el1h_64_sync+0x64\/0x68\n|  cortex_a76_erratum_1463225_debug_handler+0x0\/0x34\n|  el1h_64_sync_handler+0x40\/0x98\n|  el1h_64_sync+0x64\/0x68\n|  do_el0_svc+0x0\/0x28\n|  el0t_64_sync_handler+0x84\/0xf0\n|  el0t_64_sync+0x18c\/0x190\n| Kernel Offset: disabled\n| CPU features: 0x0080,00005021,19001080\n| Memory Limit: none\n| ---[ end Kernel panic - not syncing: kernel stack overflow ]---\n\nWith this patch, cortex_a76_erratum_1463225_debug_handler() is inlined\ninto el1_dbg(), and el1_dbg() cannot be probed:\n\n| # echo p cortex_a76_erratum_1463225_debug_handler > \/sys\/kernel\/debug\/tracing\/kprobe_events\n| sh: write error: No such file or directory\n| # grep -w cortex_a76_errat\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm64: entrada: evitar la recursión de kprobe. La función cortex_a76_erratum_1463225_debug_handler() se llama al gestionar excepciones de depuración (y excepciones síncronas de instrucciones BRK), y por lo tanto se llama cuando se ejecuta una función sondeada. Si el compilador no inserta en línea cortex_a76_erratum_1463225_debug_handler(), se puede sondear. Si se sondea cortex_a76_erratum_1463225_debug_handler(), cualquier excepción de depuración o excepción de punto de interrupción de software resultará en excepciones recursivas que conducen a un desbordamiento de pila. Esto se puede activar con la autoprueba ftrace multiple_probes y como se muestra en el ejemplo a continuación. Esta es una regresión causada por el commit 6459b8469753e9fe (\"arm64: entry: consolidate Cortex-A76 erratum 1463225 workaround\"), que eliminó la anotación NOKPROBE_SYMBOL() asociada a la función. Mi intención era que cortex_a76_erratum_1463225_debug_handler() would be inlined into its caller, el1_dbg(), which is marked noinstr and cannot be probed. Mark cortex_a76_erratum_1463225_debug_handler() as __always_inline to ensure this. Example splat prior to this patch (with recursive entries elided): | # echo p cortex_a76_erratum_1463225_debug_handler &gt; \/sys\/kernel\/debug\/tracing\/kprobe_events | # echo p do_el0_svc &gt;&gt; \/sys\/kernel\/debug\/tracing\/kprobe_events | # echo 1 &gt; \/sys\/kernel\/debug\/tracing\/events\/kprobes\/enable | Insufficient stack space to handle exception! | ESR: 0x0000000096000047 -- DABT (current EL) | FAR: 0xffff800009cefff0 | Task stack: [0xffff800009cf0000..0xffff800009cf4000] | IRQ stack: [0xffff800008000000..0xffff800008004000] | Overflow stack: [0xffff00007fbc00f0..0xffff00007fbc10f0] | CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2 | Hardware name: linux,dummy-virt (DT) | pstate: 604003c5 (nZCv DAIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--) | pc : arm64_enter_el1_dbg+0x4\/0x20 | lr : el1_dbg+0x24\/0x5c | sp : ffff800009cf0000 | x29: ffff800009cf0000 x28: ffff000002c74740 x27: 0000000000000000 | x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000 | x23: 00000000604003c5 x22: ffff80000801745c x21: 0000aaaac95ac068 | x20: 00000000f2000004 x19: ffff800009cf0040 x18: 0000000000000000 | x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000 | x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000 | x11: 0000000000000010 x10: ffff800008c87190 x9 : ffff800008ca00d0 | x8 : 000000000000003c x7 : 0000000000000000 x6 : 0000000000000000 | x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000000043a4 | x2 : 00000000f2000004 x1 : 00000000f2000004 x0 : ffff800009cf0040 | Kernel panic - not syncing: kernel stack overflow | CPU: 0 PID: 145 Comm: sh Not tainted 6.0.0 #2 | Hardware name: linux,dummy-virt (DT) | Call trace: | dump_backtrace+0xe4\/0x104 | show_stack+0x18\/0x4c | dump_stack_lvl+0x64\/0x7c | dump_stack+0x18\/0x38 | panic+0x14c\/0x338 | test_taint+0x0\/0x2c | panic_bad_stack+0x104\/0x118 | handle_bad_stack+0x34\/0x48 | __bad_stack+0x78\/0x7c | arm64_enter_el1_dbg+0x4\/0x20 | el1h_64_sync_handler+0x40\/0x98 | el1h_64_sync+0x64\/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0\/0x34 ... | el1h_64_sync_handler+0x40\/0x98 | el1h_64_sync+0x64\/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0\/0x34 ... | el1h_64_sync_handler+0x40\/0x98 | el1h_64_sync+0x64\/0x68 | cortex_a76_erratum_1463225_debug_handler+0x0\/0x34 | el1h_64_sync_handler+0x40\/0x98 | el1h_64_sync+0x64\/0x68 | do_el0_svc+0x0\/0x28 | el0t_64_sync_handler+0x84\/0xf0 | el0t_64_sync+0x18c\/0x190 | Kernel Offset: disabled | CPU features: 0x0080,00005021,19001080 | Memory Limit: none | ---[ end Kernel panic - not syncing: kernel stack overflow ]--- With this patch, cortex_a76_erratum_1463225_debug_handler() is inlined into el1_dbg(), and el1_dbg() cannot be probed: | # echo p cortex_a76_erratum_1463225_debug_handler &gt; \/sys\/kernel\/debug\/tracing\/kprobe_events | sh: write error: No such file or directory | # grep -w cortex_a76_errat ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/024f4b2e1f874934943eb2d3d288ebc52c79f55c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71d6c33fe223255f4416a01514da2c0bc3e283e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db66629d43b2d12cb43b004a4ca6be1d03228e97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49889","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:13.897","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Check for NULL cpu_buffer in ring_buffer_wake_waiters()\n\nOn some machines the number of listed CPUs may be bigger than the actual\nCPUs that exist. The tracing subsystem allocates a per_cpu directory with\naccess to the per CPU ring buffer via a cpuX file. But to save space, the\nring buffer will only allocate buffers for online CPUs, even though the\nCPU array will be as big as the nr_cpu_ids.\n\nWith the addition of waking waiters on the ring buffer when closing the\nfile, the ring_buffer_wake_waiters() now needs to make sure that the\nbuffer is allocated (with the irq_work allocated with it) before trying to\nwake waiters, as it will cause a NULL pointer dereference.\n\nWhile debugging this, I added a NULL check for the buffer itself (which is\nOK to do), and also NULL pointer checks against buffer->buffers (which is\nnot fine, and will WARN) as well as making sure the CPU number passed in\nis within the nr_cpu_ids (which is also not fine if it isn't).\n\n\nBugzilla: https:\/\/bugzilla.opensuse.org\/show_bug.cgi?id=1204705"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ring-buffer: Comprobar si hay un cpu_buffer nulo en ring_buffer_wake_waiters() En algunas máquinas, el número de CPU listadas puede ser mayor que el de CPU reales existentes. El subsistema de rastreo asigna un directorio per_cpu con acceso al búfer de anillo por CPU a través de un archivo cpuX. Pero para ahorrar espacio, el búfer de anillo solo asignará búferes para las CPU en línea, aunque la matriz de CPU será tan grande como nr_cpu_ids. Con la adición de despertar a los que esperan en el búfer de anillo al cerrar el archivo, ring_buffer_wake_waiters() ahora debe asegurarse de que el búfer esté asignado (con el irq_work asignado con él) antes de intentar despertar a los que esperan, ya que provocará una desreferencia de puntero nulo. Durante la depuración, añadí una comprobación de valores nulos para el propio búfer (lo cual es correcto), así como comprobaciones de punteros nulos contra buffer-&gt;buffers (lo cual no es correcto y generará una advertencia), además de asegurarme de que el número de CPU introducido esté dentro del nr_cpu_ids (lo cual tampoco es correcto si no lo está). Bugzilla: https:\/\/bugzilla.opensuse.org\/show_bug.cgi?id=1204705"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/49ca992f6e50d0f46ec9608f44e011cf3121f389","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7433632c9ff68a991bd0bc38cabf354e9d2de410","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5074df412bf3df9d6ce096b6fa03eb1082d05c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49890","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.000","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncapabilities: fix potential memleak on error path from vfs_getxattr_alloc()\n\nIn cap_inode_getsecurity(), we will use vfs_getxattr_alloc() to\ncomplete the memory allocation of tmpbuf, if we have completed\nthe memory allocation of tmpbuf, but failed to call handler->get(...),\nthere will be a memleak in below logic:\n\n  |-- ret = (int)vfs_getxattr_alloc(mnt_userns, ...)\n    |           \/* ^^^ alloc for tmpbuf *\/\n    |-- value = krealloc(*xattr_value, error + 1, flags)\n    |           \/* ^^^ alloc memory *\/\n    |-- error = handler->get(handler, ...)\n    |           \/* error! *\/\n    |-- *xattr_value = value\n    |           \/* xattr_value is &tmpbuf (memory leak!) *\/\n\nSo we will try to free(tmpbuf) after vfs_getxattr_alloc() fails to fix it.\n\n[PM: subject line and backtrace tweaks]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: capacidades: reparar posible fuga de memoria en la ruta de error de vfs_getxattr_alloc() En cap_inode_getsecurity(), utilizaremos vfs_getxattr_alloc() para completar la asignación de memoria de tmpbuf, si hemos completado la asignación de memoria de tmpbuf, pero no pudimos llamar a handler-&gt;get(...), habrá una fuga de memoria en la siguiente lógica: |-- ret = (int)vfs_getxattr_alloc(mnt_userns, ...) | \/* ^^^ asignar para tmpbuf *\/ |-- valor = krealloc(*xattr_value, error + 1, flags) | \/* ^^^ asignar memoria *\/ |-- error = handler-&gt;get(handler, ...) | \/* ¡error! *\/ |-- *xattr_value = valor | \/* xattr_value es &amp;tmpbuf (¡pérdida de memoria!) *\/ Intentaremos liberar (tmpbuf) después de que vfs_getxattr_alloc() no pueda solucionarlo. [MP: línea de asunto y ajustes de backtrace]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c3e6288da650d1ec911a259c77bc2d88e498603","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2de8eec8afb75792440b8900a01d52b8f6742fd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bb00eb21c0fbf18e5d3538c9ff0cf63fd0ace85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7480aeff0093d8c54377553ec6b31110bea37b4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cf0a1bc12870d148ae830a4ba88cfdf0e879cee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90577bcc01c4188416a47269f8433f70502abe98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdf01c807e974048c43c7fd3ca574f6086a57906","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49891","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.107","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: kprobe: Fix memory leak in test_gen_kprobe\/kretprobe_cmd()\n\ntest_gen_kprobe_cmd() only free buf in fail path, hence buf will leak\nwhen there is no failure. Move kfree(buf) from fail path to common path\nto prevent the memleak. The same reason and solution in\ntest_gen_kretprobe_cmd().\n\nunreferenced object 0xffff888143b14000 (size 2048):\n  comm \"insmod\", pid 52490, jiffies 4301890980 (age 40.553s)\n  hex dump (first 32 bytes):\n    70 3a 6b 70 72 6f 62 65 73 2f 67 65 6e 5f 6b 70  p:kprobes\/gen_kp\n    72 6f 62 65 5f 74 65 73 74 20 64 6f 5f 73 79 73  robe_test do_sys\n  backtrace:\n    [<000000006d7b836b>] kmalloc_trace+0x27\/0xa0\n    [<0000000009528b5b>] 0xffffffffa059006f\n    [<000000008408b580>] do_one_initcall+0x87\/0x2a0\n    [<00000000c4980a7e>] do_init_module+0xdf\/0x320\n    [<00000000d775aad0>] load_module+0x3006\/0x3390\n    [<00000000e9a74b80>] __do_sys_finit_module+0x113\/0x1b0\n    [<000000003726480d>] do_syscall_64+0x35\/0x80\n    [<000000003441e93b>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rastreo: kprobe: Se corrige la fuga de memoria en test_gen_kprobe\/kretprobe_cmd(). test_gen_kprobe_cmd() solo libera búfer en la ruta de fallo, por lo que el búfer se filtrará cuando no haya fallo. Se traslada kfree(buf) de la ruta de fallo a la ruta común para evitar la fuga de memoria. El mismo motivo y solución se aplican en test_gen_kretprobe_cmd(). Objeto sin referencia 0xffff888143b14000 (size 2048): comm \"insmod\", pid 52490, jiffies 4301890980 (age 40.553s) hex dump (first 32 bytes): 70 3a 6b 70 72 6f 62 65 73 2f 67 65 6e 5f 6b 70 p:kprobes\/gen_kp 72 6f 62 65 5f 74 65 73 74 20 64 6f 5f 73 79 73 robe_test do_sys backtrace: [&lt;000000006d7b836b&gt;] kmalloc_trace+0x27\/0xa0 [&lt;0000000009528b5b&gt;] 0xffffffffa059006f [&lt;000000008408b580&gt;] do_one_initcall+0x87\/0x2a0 [&lt;00000000c4980a7e&gt;] do_init_module+0xdf\/0x320 [&lt;00000000d775aad0&gt;] load_module+0x3006\/0x3390 [&lt;00000000e9a74b80&gt;] __do_sys_finit_module+0x113\/0x1b0 [&lt;000000003726480d&gt;] do_syscall_64+0x35\/0x80 [&lt;000000003441e93b&gt;] entry_SYSCALL_64_after_hwframe+0x46\/0xb0 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66f0919c953ef7b55e5ab94389a013da2ce80a2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71aeb8d01a8c7ab5cf7da3f81b35206f56ce6bca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bef08acbe560a926b4cee9cc46404cc98ae5703b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1b6a8e3414aeaa0985139180c145d2d0fbd2a49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49892","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.210","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix use-after-free for dynamic ftrace_ops\n\nKASAN reported a use-after-free with ftrace ops [1]. It was found from\nvmcore that perf had registered two ops with the same content\nsuccessively, both dynamic. After unregistering the second ops, a\nuse-after-free occurred.\n\nIn ftrace_shutdown(), when the second ops is unregistered, the\nFTRACE_UPDATE_CALLS command is not set because there is another enabled\nops with the same content.  Also, both ops are dynamic and the ftrace\ncallback function is ftrace_ops_list_func, so the\nFTRACE_UPDATE_TRACE_FUNC command will not be set. Eventually the value\nof 'command' will be 0 and ftrace_shutdown() will skip the rcu\nsynchronization.\n\nHowever, ftrace may be activated. When the ops is released, another CPU\nmay be accessing the ops.  Add the missing synchronization to fix this\nproblem.\n\n[1]\nBUG: KASAN: use-after-free in __ftrace_ops_list_func kernel\/trace\/ftrace.c:7020 [inline]\nBUG: KASAN: use-after-free in ftrace_ops_list_func+0x2b0\/0x31c kernel\/trace\/ftrace.c:7049\nRead of size 8 at addr ffff56551965bbc8 by task syz-executor.2\/14468\n\nCPU: 1 PID: 14468 Comm: syz-executor.2 Not tainted 5.10.0 #7\nHardware name: linux,dummy-virt (DT)\nCall trace:\n dump_backtrace+0x0\/0x40c arch\/arm64\/kernel\/stacktrace.c:132\n show_stack+0x30\/0x40 arch\/arm64\/kernel\/stacktrace.c:196\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0x1b4\/0x248 lib\/dump_stack.c:118\n print_address_description.constprop.0+0x28\/0x48c mm\/kasan\/report.c:387\n __kasan_report mm\/kasan\/report.c:547 [inline]\n kasan_report+0x118\/0x210 mm\/kasan\/report.c:564\n check_memory_region_inline mm\/kasan\/generic.c:187 [inline]\n __asan_load8+0x98\/0xc0 mm\/kasan\/generic.c:253\n __ftrace_ops_list_func kernel\/trace\/ftrace.c:7020 [inline]\n ftrace_ops_list_func+0x2b0\/0x31c kernel\/trace\/ftrace.c:7049\n ftrace_graph_call+0x0\/0x4\n __might_sleep+0x8\/0x100 include\/linux\/perf_event.h:1170\n __might_fault mm\/memory.c:5183 [inline]\n __might_fault+0x58\/0x70 mm\/memory.c:5171\n do_strncpy_from_user lib\/strncpy_from_user.c:41 [inline]\n strncpy_from_user+0x1f4\/0x4b0 lib\/strncpy_from_user.c:139\n getname_flags+0xb0\/0x31c fs\/namei.c:149\n getname+0x2c\/0x40 fs\/namei.c:209\n [...]\n\nAllocated by task 14445:\n kasan_save_stack+0x24\/0x50 mm\/kasan\/common.c:48\n kasan_set_track mm\/kasan\/common.c:56 [inline]\n __kasan_kmalloc mm\/kasan\/common.c:479 [inline]\n __kasan_kmalloc.constprop.0+0x110\/0x13c mm\/kasan\/common.c:449\n kasan_kmalloc+0xc\/0x14 mm\/kasan\/common.c:493\n kmem_cache_alloc_trace+0x440\/0x924 mm\/slub.c:2950\n kmalloc include\/linux\/slab.h:563 [inline]\n kzalloc include\/linux\/slab.h:675 [inline]\n perf_event_alloc.part.0+0xb4\/0x1350 kernel\/events\/core.c:11230\n perf_event_alloc kernel\/events\/core.c:11733 [inline]\n __do_sys_perf_event_open kernel\/events\/core.c:11831 [inline]\n __se_sys_perf_event_open+0x550\/0x15f4 kernel\/events\/core.c:11723\n __arm64_sys_perf_event_open+0x6c\/0x80 kernel\/events\/core.c:11723\n [...]\n\nFreed by task 14445:\n kasan_save_stack+0x24\/0x50 mm\/kasan\/common.c:48\n kasan_set_track+0x24\/0x34 mm\/kasan\/common.c:56\n kasan_set_free_info+0x20\/0x40 mm\/kasan\/generic.c:358\n __kasan_slab_free.part.0+0x11c\/0x1b0 mm\/kasan\/common.c:437\n __kasan_slab_free mm\/kasan\/common.c:445 [inline]\n kasan_slab_free+0x2c\/0x40 mm\/kasan\/common.c:446\n slab_free_hook mm\/slub.c:1569 [inline]\n slab_free_freelist_hook mm\/slub.c:1608 [inline]\n slab_free mm\/slub.c:3179 [inline]\n kfree+0x12c\/0xc10 mm\/slub.c:4176\n perf_event_alloc.part.0+0xa0c\/0x1350 kernel\/events\/core.c:11434\n perf_event_alloc kernel\/events\/core.c:11733 [inline]\n __do_sys_perf_event_open kernel\/events\/core.c:11831 [inline]\n __se_sys_perf_event_open+0x550\/0x15f4 kernel\/events\/core.c:11723\n [...]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ftrace: Arreglo de use-after-free para ftrace_ops dinámicos KASAN informó de un use-after-free con operaciones ftrace [1]. Se encontró desde vmcore que perf había registrado dos operaciones con el mismo contenido sucesivamente, ambas dinámicas. Después de anular el registro de la segunda operación, se produjo un use-after-free. En ftrace_shutdown(), cuando se anula el registro de la segunda operación, el comando FTRACE_UPDATE_CALLS no se establece porque hay otra operación habilitada con el mismo contenido. Además, ambas operaciones son dinámicas y la función de devolución de llamada de ftrace es ftrace_ops_list_func, por lo que el comando FTRACE_UPDATE_TRACE_FUNC no se establecerá. Finalmente, el valor de 'command' será 0 y ftrace_shutdown() omitirá la sincronización de rcu. Sin embargo, ftrace puede estar activado. Cuando se libera la operación, otra CPU puede estar accediendo a ella. Agregue la sincronización faltante para solucionar este problema. [1] ERROR: KASAN: use-after-free en __ftrace_ops_list_func kernel\/trace\/ftrace.c:7020 [en línea] ERROR: KASAN: use-after-free en ftrace_ops_list_func+0x2b0\/0x31c kernel\/trace\/ftrace.c:7049 Lectura de tamaño 8 en la dirección ffff56551965bbc8 por la tarea syz-executor.2\/14468 CPU: 1 PID: 14468 Comm: syz-executor.2 No contaminado 5.10.0 #7 Nombre del hardware: linux,dummy-virt (DT) Rastreo de llamadas: dump_backtrace+0x0\/0x40c arch\/arm64\/kernel\/stacktrace.c:132 show_stack+0x30\/0x40 arch\/arm64\/kernel\/stacktrace.c:196 __dump_stack lib\/dump_stack.c:77 [en línea] dump_stack+0x1b4\/0x248 lib\/dump_stack.c:118 print_address_description.constprop.0+0x28\/0x48c mm\/kasan\/report.c:387 __kasan_report mm\/kasan\/report.c:547 [en línea] kasan_report+0x118\/0x210 mm\/kasan\/report.c:564 check_memory_region_inline mm\/kasan\/generic.c:187 [en línea] __asan_load8+0x98\/0xc0 mm\/kasan\/generic.c:253 __ftrace_ops_list_func kernel\/trace\/ftrace.c:7020 [en línea] ftrace_ops_list_func+0x2b0\/0x31c kernel\/trace\/ftrace.c:7049 ftrace_graph_call+0x0\/0x4 __might_sleep+0x8\/0x100 include\/linux\/perf_event.h:1170 __might_fault mm\/memory.c:5183 [en línea] __might_fault+0x58\/0x70 mm\/memory.c:5171 do_strncpy_from_user lib\/strncpy_from_user.c:41 [en línea] strncpy_from_user+0x1f4\/0x4b0 lib\/strncpy_from_user.c:139 getname_flags+0xb0\/0x31c fs\/namei.c:149 getname+0x2c\/0x40 fs\/namei.c:209 [...] Asignado por la tarea 14445: kasan_save_stack+0x24\/0x50 mm\/kasan\/common.c:48 kasan_set_track mm\/kasan\/common.c:56 [en línea] __kasan_kmalloc mm\/kasan\/common.c:479 [en línea] __kasan_kmalloc.constprop.0+0x110\/0x13c mm\/kasan\/common.c:449 kasan_kmalloc+0xc\/0x14 mm\/kasan\/common.c:493 kmem_cache_alloc_trace+0x440\/0x924 mm\/slub.c:2950 kmalloc include\/linux\/slab.h:563 [en línea] kzalloc include\/linux\/slab.h:675 [en línea] perf_event_alloc.part.0+0xb4\/0x1350 kernel\/events\/core.c:11230 perf_event_alloc kernel\/events\/core.c:11733 [en línea] __do_sys_perf_event_open kernel\/events\/core.c:11831 [en línea] __se_sys_perf_event_open+0x550\/0x15f4 kernel\/events\/core.c:11723 __arm64_sys_perf_event_open+0x6c\/0x80 kernel\/events\/core.c:11723 [...] Liberado por la tarea 14445: kasan_save_stack+0x24\/0x50 mm\/kasan\/common.c:48 kasan_set_track+0x24\/0x34 mm\/kasan\/common.c:56 kasan_set_free_info+0x20\/0x40 mm\/kasan\/generic.c:358 __kasan_slab_free.part.0+0x11c\/0x1b0 mm\/kasan\/common.c:437 __kasan_slab_free mm\/kasan\/common.c:445 [en línea] kasan_slab_free+0x2c\/0x40 mm\/kasan\/common.c:446 slab_free_hook mm\/slub.c:1569 [en línea] slab_free_freelist_hook mm\/slub.c:1608 [en línea] slab_free mm\/slub.c:3179 [en línea] kfree+0x12c\/0xc10 mm\/slub.c:4176 perf_event_alloc.part.0+0xa0c\/0x1350 kernel\/events\/core.c:11434 perf_event_alloc kernel\/events\/core.c:11733 [en línea] __do_sys_perf_event_open kernel\/events\/core.c:11831 [en línea] __se_sys_perf_event_open+0x550\/0x15f4 kernel\/events\/core.c:11723 [...]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e792b89e6800cd9cb4757a76a96f7ef3e8b6294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88561a66777e7a2fe06638c6dcb22a9fae0b6733","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc1b9961a0ceb70f6ca4e2f4b8bb71c87c7a495c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea5f2fd4640ecbb9df969bf8bb27733ae2183169","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49893","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.317","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/region: Fix cxl_region leak, cleanup targets at region delete\n\nWhen a region is deleted any targets that have been previously assigned\nto that region hold references to it. Trigger those references to\ndrop by detaching all targets at unregister_region() time.\n\nOtherwise that region object will leak as userspace has lost the ability\nto detach targets once region sysfs is torn down."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cxl\/region: Se corrige la fuga de cxl_region y se limpian los objetivos al eliminar una región. Al eliminar una región, todos los objetivos previamente asignados a ella contienen referencias a ella. Para eliminar esas referencias, desvincula todos los objetivos durante la ejecución de unregister_region(). De lo contrario, el objeto de región se filtrará, ya que el espacio de usuario ha perdido la capacidad de desvincular objetivos una vez que se desmantela el sistema operativo de la región."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d9e734018d70cecf79e2e4c6082167160a0f13f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45d9fb4b758b9d602ee7776eb6754b0349946aad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49894","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.417","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/region: Fix region HPA ordering validation\n\nSome regions may not have any address space allocated. Skip them when\nvalidating HPA order otherwise a crash like the following may result:\n\n devm_cxl_add_region: cxl_acpi cxl_acpi.0: decoder3.4: created region9\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n [..]\n RIP: 0010:store_targetN+0x655\/0x1740 [cxl_core]\n [..]\n Call Trace:\n  <TASK>\n  kernfs_fop_write_iter+0x144\/0x200\n  vfs_write+0x24a\/0x4d0\n  ksys_write+0x69\/0xf0\n  do_syscall_64+0x3a\/0x90\n\nstore_targetN+0x655\/0x1740:\nalloc_region_ref at drivers\/cxl\/core\/region.c:676\n(inlined by) cxl_port_attach_region at drivers\/cxl\/core\/region.c:850\n(inlined by) cxl_region_attach at drivers\/cxl\/core\/region.c:1290\n(inlined by) attach_target at drivers\/cxl\/core\/region.c:1410\n(inlined by) store_targetN at drivers\/cxl\/core\/region.c:1453"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cxl\/region: Corregir la validación del ordenamiento HPA de la región. Algunas regiones pueden no tener ningún espacio de direcciones asignado. Omítalos al validar el orden de HPA; de lo contrario, puede producirse un fallo como el siguiente: devm_cxl_add_region: cxl_acpi cxl_acpi.0: decoder3.4: created region9 BUG: desreferencia de puntero NULL del kernel, dirección: 0000000000000000 [..] RIP: 0010:store_targetN+0x655\/0x1740 [cxl_core] [..] Seguimiento de llamadas:  kernfs_fop_write_iter+0x144\/0x200 vfs_write+0x24a\/0x4d0 ksys_write+0x69\/0xf0 do_syscall_64+0x3a\/0x90 store_targetN+0x655\/0x1740: alloc_region_ref at drivers\/cxl\/core\/region.c:676 (integrado por) cxl_port_attach_region en drivers\/cxl\/core\/region.c:850 (integrado por) cxl_region_attach en drivers\/cxl\/core\/region.c:1290 (integrado por) attached_target en drivers\/cxl\/core\/region.c:1410 (integrado por) store_targetN en drivers\/cxl\/core\/region.c:1453"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12316b9f7c18138ae656050cfd716728e27b7e2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a90accb358ae33ea982a35595573f7a045993f8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49895","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.517","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/region: Fix decoder allocation crash\n\nWhen an intermediate port's decoders have been exhausted by existing\nregions, and creating a new region with the port in question in it's\nhierarchical path is attempted, cxl_port_attach_region() fails to find a\nport decoder (as would be expected), and drops into the failure \/ cleanup\npath.\n\nHowever, during cleanup of the region reference, a sanity check attempts\nto dereference the decoder, which in the above case didn't exist. This\ncauses a NULL pointer dereference BUG.\n\nTo fix this, refactor the decoder allocation and de-allocation into\nhelper routines, and in this 'free' routine, check that the decoder,\n@cxld, is valid before attempting any operations on it."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cxl\/region: Fix decoder assignment crash Cuando los decodificadores de un puerto intermedio han sido agotados por las regiones existentes, y se intenta crear una nueva región con el puerto en cuestión en su ruta jerárquica, cxl_port_attach_region() no puede encontrar un decodificador de puerto (como sería de esperar), y cae en la ruta de error\/limpieza. Sin embargo, durante la limpieza de la referencia de la región, una comprobación de cordura intenta desreferenciar el decodificador, que en el caso anterior no existía. Esto causa un ERROR de desreferencia de puntero NULL. Para corregir esto, refactorice la asignación y desasignación del decodificador en rutinas de ayuda, y en esta rutina 'libre', verifique que el decodificador, @cxld, sea válido antes de intentar cualquier operación en él."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/71ee71d7adcba648077997a29a91158d20c40b09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6813b5610ac53af73edd87a660d23a0511faa47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49896","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.643","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/pmem: Fix cxl_pmem_region and cxl_memdev leak\n\nWhen a cxl_nvdimm object goes through a ->remove() event (device\nphysically removed, nvdimm-bridge disabled, or nvdimm device disabled),\nthen any associated regions must also be disabled. As highlighted by the\ncxl-create-region.sh test [1], a single device may host multiple\nregions, but the driver was only tracking one region at a time. This\nleads to a situation where only the last enabled region per nvdimm\ndevice is cleaned up properly. Other regions are leaked, and this also\ncauses cxl_memdev reference leaks.\n\nFix the tracking by allowing cxl_nvdimm objects to track multiple region\nassociations."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: cxl\/pmem: Arregla la fuga de cxl_pmem_region y cxl_memdev Cuando un objeto cxl_nvdimm pasa por un evento -&gt;remove() (dispositivo eliminado físicamente, nvdimm-bridge deshabilitado o dispositivo nvdimm deshabilitado), entonces cualquier región asociada también debe deshabilitarse. Como se destaca en la prueba cxl-create-region.sh [1], un solo dispositivo puede albergar múltiples regiones, pero el controlador solo rastreaba una región a la vez. Esto lleva a una situación en la que solo la última región habilitada por dispositivo nvdimm se limpia correctamente. Se filtran otras regiones, y esto también causa fugas de referencia de cxl_memdev. Arregla el rastreo permitiendo que los objetos cxl_nvdimm rastreen múltiples asociaciones de regiones."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d07ae22e79ebc2d7528bbc69daa53b86981cb3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f43b6bfdbab78606735ba81185cf0602b81e40b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49897","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.747","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfscrypt: fix keyring memory leak on mount failure\n\nCommit d7e7b9af104c (\"fscrypt: stop using keyrings subsystem for\nfscrypt_master_key\") moved the keyring destruction from __put_super() to\ngeneric_shutdown_super() so that the filesystem's block device(s) are\nstill available.  Unfortunately, this causes a memory leak in the case\nwhere a mount is attempted with the test_dummy_encryption mount option,\nbut the mount fails after the option has already been processed.\n\nTo fix this, attempt the keyring destruction in both places."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: fscrypt: corrección de fuga de memoria del llavero en caso de fallo de montaje. El commit d7e7b9af104c (\"fscrypt: dejar de usar el subsistema de llaveros para fscrypt_master_key\") trasladó la destrucción del llavero de __put_super() a generic_shutdown_super() para que los dispositivos de bloque del sistema de archivos sigan disponibles. Desafortunadamente, esto provoca una fuga de memoria si se intenta un montaje con la opción test_dummy_encryption, pero el montaje falla después de que la opción ya se haya procesado. Para solucionarlo, intente la destrucción del llavero en ambos lugares."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b1747653b102c555bac745ebe5ca86cdd20e43f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29997a6fa60de1de2fa0de471e7652efa6e95868","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd30a476f8e864732de220bd50e6f372f5ebcab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cff805b1518f38d57866065343db2285f2dcd5ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49898","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.850","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix tree mod log mishandling of reallocated nodes\n\nWe have been seeing the following panic in production\n\n  kernel BUG at fs\/btrfs\/tree-mod-log.c:677!\n  invalid opcode: 0000 [#1] SMP\n  RIP: 0010:tree_mod_log_rewind+0x1b4\/0x200\n  RSP: 0000:ffffc9002c02f890 EFLAGS: 00010293\n  RAX: 0000000000000003 RBX: ffff8882b448c700 RCX: 0000000000000000\n  RDX: 0000000000008000 RSI: 00000000000000a7 RDI: ffff88877d831c00\n  RBP: 0000000000000002 R08: 000000000000009f R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000100c40 R12: 0000000000000001\n  R13: ffff8886c26d6a00 R14: ffff88829f5424f8 R15: ffff88877d831a00\n  FS:  00007fee1d80c780(0000) GS:ffff8890400c0000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fee1963a020 CR3: 0000000434f33002 CR4: 00000000007706e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  PKRU: 55555554\n  Call Trace:\n   btrfs_get_old_root+0x12b\/0x420\n   btrfs_search_old_slot+0x64\/0x2f0\n   ? tree_mod_log_oldest_root+0x3d\/0xf0\n   resolve_indirect_ref+0xfd\/0x660\n   ? ulist_alloc+0x31\/0x60\n   ? kmem_cache_alloc_trace+0x114\/0x2c0\n   find_parent_nodes+0x97a\/0x17e0\n   ? ulist_alloc+0x30\/0x60\n   btrfs_find_all_roots_safe+0x97\/0x150\n   iterate_extent_inodes+0x154\/0x370\n   ? btrfs_search_path_in_tree+0x240\/0x240\n   iterate_inodes_from_logical+0x98\/0xd0\n   ? btrfs_search_path_in_tree+0x240\/0x240\n   btrfs_ioctl_logical_to_ino+0xd9\/0x180\n   btrfs_ioctl+0xe2\/0x2ec0\n   ? __mod_memcg_lruvec_state+0x3d\/0x280\n   ? do_sys_openat2+0x6d\/0x140\n   ? kretprobe_dispatcher+0x47\/0x70\n   ? kretprobe_rethook_handler+0x38\/0x50\n   ? rethook_trampoline_handler+0x82\/0x140\n   ? arch_rethook_trampoline_callback+0x3b\/0x50\n   ? kmem_cache_free+0xfb\/0x270\n   ? do_sys_openat2+0xd5\/0x140\n   __x64_sys_ioctl+0x71\/0xb0\n   do_syscall_64+0x2d\/0x40\n\nWhich is this code in tree_mod_log_rewind()\n\n\tswitch (tm->op) {\n        case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING:\n\t\tBUG_ON(tm->slot < n);\n\nThis occurs because we replay the nodes in order that they happened, and\nwhen we do a REPLACE we will log a REMOVE_WHILE_FREEING for every slot,\nstarting at 0.  'n' here is the number of items in this block, which in\nthis case was 1, but we had 2 REMOVE_WHILE_FREEING operations.\n\nThe actual root cause of this was that we were replaying operations for\na block that shouldn't have been replayed.  Consider the following\nsequence of events\n\n1. We have an already modified root, and we do a btrfs_get_tree_mod_seq().\n2. We begin removing items from this root, triggering KEY_REPLACE for\n   it's child slots.\n3. We remove one of the 2 children this root node points to, thus triggering\n   the root node promotion of the remaining child, and freeing this node.\n4. We modify a new root, and re-allocate the above node to the root node of\n   this other root.\n\nThe tree mod log looks something like this\n\n\tlogical 0\top KEY_REPLACE (slot 1)\t\t\tseq 2\n\tlogical 0\top KEY_REMOVE (slot 1)\t\t\tseq 3\n\tlogical 0\top KEY_REMOVE_WHILE_FREEING (slot 0)\tseq 4\n\tlogical 4096\top LOG_ROOT_REPLACE (old logical 0)\tseq 5\n\tlogical 8192\top KEY_REMOVE_WHILE_FREEING (slot 1)\tseq 6\n\tlogical 8192\top KEY_REMOVE_WHILE_FREEING (slot 0)\tseq 7\n\tlogical 0\top LOG_ROOT_REPLACE (old logical 8192)\tseq 8\n\n>From here the bug is triggered by the following steps\n\n1.  Call btrfs_get_old_root() on the new_root.\n2.  We call tree_mod_log_oldest_root(btrfs_root_node(new_root)), which is\n    currently logical 0.\n3.  tree_mod_log_oldest_root() calls tree_mod_log_search_oldest(), which\n    gives us the KEY_REPLACE seq 2, and since that's not a\n    LOG_ROOT_REPLACE we incorrectly believe that we don't have an old\n    root, because we expect that the most recent change should be a\n    LOG_ROOT_REPLACE.\n4.  Back in tree_mod_log_oldest_root() we don't have a LOG_ROOT_REPLACE,\n    so we don't set old_root, we simply use our e\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: se corrige el mal manejo del registro de mod de árbol de nodos reasignados ¡Hemos estado viendo el siguiente ERROR de pánico en el kernel de producción en fs\/btrfs\/tree-mod-log.c:677! código de operación no válido: 0000 [#1] SMP RIP: 0010:tree_mod_log_rewind+0x1b4\/0x200 RSP: 0000:ffffc9002c02f890 EFLAGS: 00010293 RAX: 0000000000000003 RBX: ffff8882b448c700 RCX: 0000000000000000 RDX: 0000000000008000 RSI: 00000000000000a7 RDI: ffff88877d831c00 RBP: 0000000000000002 R08: 000000000000009f R09: 00000000000000000 R10: 0000000000000000 R11: 00000000000100c40 R12: 000000000000001 R13: ffff8886c26d6a00 R14: ffff88829f5424f8 R15: ffff88877d831a00 FS: 00007fee1d80c780(0000) GS:ffff8890400c0000(0000) knlGS:000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007fee1963a020 CR3: 0000000434f33002 CR4: 00000000007706e0 DR0: 00000000000000000 DR1: 0000000000000000 DR2: 0000000000000000 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 PKRU: 55555554 Rastreo de llamadas: btrfs_get_old_root+0x12b\/0x420 btrfs_search_old_slot+0x64\/0x2f0 ? tree_mod_log_oldest_root+0x3d\/0xf0 resolve_indirect_ref+0xfd\/0x660 ? ulist_alloc+0x31\/0x60 ? kmem_cache_alloc_trace+0x114\/0x2c0 find_parent_nodes+0x97a\/0x17e0 ? ulist_alloc+0x30\/0x60 btrfs_find_all_roots_safe+0x97\/0x150 iterate_extent_inodes+0x154\/0x370 ? btrfs_search_path_in_tree+0x240\/0x240 iterate_inodes_from_logical+0x98\/0xd0 ? btrfs_search_path_in_tree+0x240\/0x240 btrfs_ioctl_logical_to_ino+0xd9\/0x180 btrfs_ioctl+0xe2\/0x2ec0 ? __mod_memcg_lruvec_state+0x3d\/0x280 ? do_sys_openat2+0x6d\/0x140 ? kretprobe_dispatcher+0x47\/0x70 ? kretprobe_rethook_handler+0x38\/0x50 ? rethook_trampoline_handler+0x82\/0x140 ? arch_rethook_trampoline_callback+0x3b\/0x50 ? kmem_cache_free+0xfb\/0x270 ? do_sys_openat2+0xd5\/0x140 __x64_sys_ioctl+0x71\/0xb0 do_syscall_64+0x2d\/0x40 Which is this code in tree_mod_log_rewind() switch (tm-&gt;op) { case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING: BUG_ON(tm-&gt;slot &lt; n); Esto ocurre porque reproducimos los nodos en el orden en que sucedieron, y cuando hacemos un REPLACE registraremos un REMOVE_WHILE_FREEING para cada ranura, comenzando en 0. 'n' aquí es el número de elementos en este bloque, que en este caso era 1, pero teníamos 2 operaciones REMOVE_WHILE_FREEING. La causa raíz real de esto fue que estábamos reproduciendo operaciones para un bloque que no debería haberse reproducido. Considere la siguiente secuencia de eventos: 1. Tenemos una raíz ya modificada y ejecutamos btrfs_get_tree_mod_seq(). 2. Comenzamos a eliminar elementos de esta raíz, activando KEY_REPLACE para sus ranuras secundarias. 3. Eliminamos uno de los dos hijos a los que apunta este nodo raíz, lo que activa la promoción del hijo restante y libera este nodo. 4. Modificamos una nueva raíz y reasignamos el nodo anterior al nodo raíz de esta otra raíz. El registro de mod del árbol se parece a esto lógico 0 op KEY_REPLACE (ranura 1) seq 2 lógico 0 op KEY_REMOVE (ranura 1) seq 3 lógico 0 op KEY_REMOVE_WHILE_FREEING (ranura 0) seq 4 lógico 4096 op LOG_ROOT_REPLACE (antiguo lógico 0) seq 5 lógico 8192 op KEY_REMOVE_WHILE_FREEING (ranura 1) seq 6 lógico 8192 op KEY_REMOVE_WHILE_FREEING (ranura 0) seq 7 lógico 0 op LOG_ROOT_REPLACE (antiguo lógico 8192) seq 8 &gt;A partir de aquí el error se activa con los siguientes pasos 1. Llama a btrfs_get_old_root() en new_root. 2. Llamamos a tree_mod_log_oldest_root(btrfs_root_node(new_root)), que actualmente tiene un valor lógico 0. 3. tree_mod_log_oldest_root() llama a tree_mod_log_search_oldest(), que nos proporciona la secuencia KEY_REPLACE 2. Dado que no es un LOG_ROOT_REPLACE, creemos erróneamente que no tenemos una raíz antigua, ya que esperamos que el cambio más reciente sea un LOG_ROOT_REPLACE. 4. En tree_mod_log_oldest_root(), no tenemos un LOG_ROOT_REPLACE, por lo que no establecemos old_root; simplemente usamos nuestra e ---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/007058eb8292efc4c88f921752194b83269da085","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52b2b65c9eb56fd829dda323786db828627ff7e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/968b71583130b6104c9f33ba60446d598e327a8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49899","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:14.953","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfscrypt: stop using keyrings subsystem for fscrypt_master_key\n\nThe approach of fs\/crypto\/ internally managing the fscrypt_master_key\nstructs as the payloads of \"struct key\" objects contained in a\n\"struct key\" keyring has outlived its usefulness.  The original idea was\nto simplify the code by reusing code from the keyrings subsystem.\nHowever, several issues have arisen that can't easily be resolved:\n\n- When a master key struct is destroyed, blk_crypto_evict_key() must be\n  called on any per-mode keys embedded in it.  (This started being the\n  case when inline encryption support was added.)  Yet, the keyrings\n  subsystem can arbitrarily delay the destruction of keys, even past the\n  time the filesystem was unmounted.  Therefore, currently there is no\n  easy way to call blk_crypto_evict_key() when a master key is\n  destroyed.  Currently, this is worked around by holding an extra\n  reference to the filesystem's request_queue(s).  But it was overlooked\n  that the request_queue reference is *not* guaranteed to pin the\n  corresponding blk_crypto_profile too; for device-mapper devices that\n  support inline crypto, it doesn't.  This can cause a use-after-free.\n\n- When the last inode that was using an incompletely-removed master key\n  is evicted, the master key removal is completed by removing the key\n  struct from the keyring.  Currently this is done via key_invalidate().\n  Yet, key_invalidate() takes the key semaphore.  This can deadlock when\n  called from the shrinker, since in fscrypt_ioctl_add_key(), memory is\n  allocated with GFP_KERNEL under the same semaphore.\n\n- More generally, the fact that the keyrings subsystem can arbitrarily\n  delay the destruction of keys (via garbage collection delay, or via\n  random processes getting temporary key references) is undesirable, as\n  it means we can't strictly guarantee that all secrets are ever wiped.\n\n- Doing the master key lookups via the keyrings subsystem results in the\n  key_permission LSM hook being called.  fscrypt doesn't want this, as\n  all access control for encrypted files is designed to happen via the\n  files themselves, like any other files.  The workaround which SELinux\n  users are using is to change their SELinux policy to grant key search\n  access to all domains.  This works, but it is an odd extra step that\n  shouldn't really have to be done.\n\nThe fix for all these issues is to change the implementation to what I\nshould have done originally: don't use the keyrings subsystem to keep\ntrack of the filesystem's fscrypt_master_key structs.  Instead, just\nstore them in a regular kernel data structure, and rework the reference\ncounting, locking, and lifetime accordingly.  Retain support for\nRCU-mode key lookups by using a hash table.  Replace fscrypt_sb_free()\nwith fscrypt_sb_delete(), which releases the keys synchronously and runs\na bit earlier during unmount, so that block devices are still available.\n\nA side effect of this patch is that neither the master keys themselves\nnor the filesystem keyrings will be listed in \/proc\/keys anymore.\n(\"Master key users\" and the master key users keyrings will still be\nlisted.)  However, this was mostly an implementation detail, and it was\nintended just for debugging purposes.  I don't know of anyone using it.\n\nThis patch does *not* change how \"master key users\" (->mk_users) works;\nthat still uses the keyrings subsystem.  That is still needed for key\nquotas, and changing that isn't necessary to solve the issues listed\nabove.  If we decide to change that too, it would be a separate patch.\n\nI've marked this as fixing the original commit that added the fscrypt\nkeyring, but as noted above the most important issue that this patch\nfixes wasn't introduced until the addition of inline encryption support."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: fscrypt: dejar de usar el subsistema de llaveros para fscrypt_master_key. El enfoque de fs\/crypto\/, que gestionaba internamente las estructuras fscrypt_master_key como payloads de objetos \"struct key\" contenidos en un llavero \"struct key\", ha dejado de ser útil. La idea original era simplificar el código reutilizando código del subsistema de llaveros. Sin embargo, han surgido varios problemas que no se pueden resolver fácilmente: - Cuando se destruye una estructura de clave maestra, se debe llamar a blk_crypto_evict_key() en cualquier clave por modo incrustada en ella. (Esto empezó a ocurrir cuando se añadió la compatibilidad con el cifrado en línea). Sin embargo, el subsistema de llaveros puede retrasar arbitrariamente la destrucción de claves, incluso después de que se desmontara el sistema de archivos. Por lo tanto, actualmente no hay una forma sencilla de llamar a blk_crypto_evict_key() cuando se destruye una clave maestra. Actualmente, esto se soluciona manteniendo una referencia adicional a las colas de solicitudes (solicitudes) del sistema de archivos. Sin embargo, se pasó por alto que la referencia a la cola de solicitudes *no* garantiza que también fije el perfil blk_crypto_profile correspondiente; para los dispositivos con mapeador de dispositivos que admiten criptografía en línea, no lo hace. Esto puede causar un uso después de la liberación. - Cuando se expulsa el último inodo que usaba una clave maestra eliminada de forma incompleta, la eliminación de la clave maestra se completa eliminando la estructura de la clave del anillo de claves. Actualmente, esto se realiza mediante key_invalidate(). Sin embargo, key_invalidate() toma el semáforo de la clave. Esto puede generar un bloqueo al ser llamado desde el reductor, ya que en fscrypt_ioctl_add_key(), la memoria se asigna con GFP_KERNEL bajo el mismo semáforo. En términos más generales, el hecho de que el subsistema de llaveros pueda retrasar arbitrariamente la destrucción de claves (mediante un retraso en la recolección de basura o mediante procesos aleatorios que obtienen referencias temporales a las claves) es indeseable, ya que significa que no podemos garantizar estrictamente que todos los secretos se borren. Realizar las búsquedas de la clave maestra a través del subsistema de llaveros resulta en la llamada al gancho LSM key_permission. fscrypt no desea esto, ya que todo el control de acceso a los archivos cifrados está diseñado para realizarse a través de los propios archivos, como cualquier otro archivo. La solución alternativa que utilizan los usuarios de SELinux es cambiar su política de SELinux para otorgar acceso de búsqueda de claves a todos los dominios. Esto funciona, pero es un paso adicional extraño que realmente no debería ser necesario. La solución para todos estos problemas es cambiar la implementación a lo que debería haber hecho originalmente: no usar el subsistema de llaveros para realizar un seguimiento de las estructuras fscrypt_master_key del sistema de archivos. En su lugar, simplemente almacénelos en una estructura de datos de kernel normal y modifique el recuento de referencias, el bloqueo y la duración según corresponda. Mantenga la compatibilidad con las búsquedas de claves en modo RCU mediante una tabla hash. Reemplace fscrypt_sb_free() por fscrypt_sb_delete(), que libera las claves sincrónicamente y se ejecuta un poco antes durante el desmontaje, para que los dispositivos de bloque sigan disponibles. Un efecto secundario de este parche es que ni las claves maestras ni los conjuntos de claves del sistema de archivos aparecerán en \/proc\/keys. (Los \"usuarios de clave maestra\" y los conjuntos de claves de los usuarios de clave maestra seguirán apareciendo). Sin embargo, esto era principalmente un detalle de implementación y estaba destinado únicamente a fines de depuración. No conozco a nadie que lo use. Este parche *no* cambia el funcionamiento de los \"usuarios de clave maestra\" (-&gt;mk_users)--- truncado ----"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/391cceee6d435e616f68631e68f5b32d480b1e67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68d15d6558a386f46d815a6ac39edecad713a1bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7e7b9af104c7b389a0c21eb26532511bce4b510","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6f4fd85ef1ee6ab356bfbd64df28c1cb73aee7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49900","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.060","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: piix4: Fix adapter not be removed in piix4_remove()\n\nIn piix4_probe(), the piix4 adapter will be registered in:\n\n   piix4_probe()\n     piix4_add_adapters_sb800() \/ piix4_add_adapter()\n       i2c_add_adapter()\n\nBased on the probed device type, piix4_add_adapters_sb800() or single\npiix4_add_adapter() will be called.\nFor the former case, piix4_adapter_count is set as the number of adapters,\nwhile for antoher case it is not set and kept default *zero*.\n\nWhen piix4 is removed, piix4_remove() removes the adapters added in\npiix4_probe(), basing on the piix4_adapter_count value.\nBecause the count is zero for the single adapter case, the adapter won't\nbe removed and makes the sources allocated for adapter leaked, such as\nthe i2c client and device.\n\nThese sources can still be accessed by i2c or bus and cause problems.\nAn easily reproduced case is that if a new adapter is registered, i2c\nwill get the leaked adapter and try to call smbus_algorithm, which was\nalready freed:\n\nTriggered by: rmmod i2c_piix4 && modprobe max31730\n\n BUG: unable to handle page fault for address: ffffffffc053d860\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n Oops: 0000 [#1] PREEMPT SMP KASAN\n CPU: 0 PID: 3752 Comm: modprobe Tainted: G\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n RIP: 0010:i2c_default_probe (drivers\/i2c\/i2c-core-base.c:2259) i2c_core\n RSP: 0018:ffff888107477710 EFLAGS: 00000246\n ...\n <TASK>\n  i2c_detect (drivers\/i2c\/i2c-core-base.c:2302) i2c_core\n  __process_new_driver (drivers\/i2c\/i2c-core-base.c:1336) i2c_core\n  bus_for_each_dev (drivers\/base\/bus.c:301)\n  i2c_for_each_dev (drivers\/i2c\/i2c-core-base.c:1823) i2c_core\n  i2c_register_driver (drivers\/i2c\/i2c-core-base.c:1861) i2c_core\n  do_one_initcall (init\/main.c:1296)\n  do_init_module (kernel\/module\/main.c:2455)\n  ...\n <\/TASK>\n ---[ end trace 0000000000000000 ]---\n\nFix this problem by correctly set piix4_adapter_count as 1 for the\nsingle adapter so it can be normally removed."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: i2c: piix4: Adaptador de corrección que no se eliminará en piix4_remove() En piix4_probe(), el adaptador piix4 se registrará en: piix4_probe() piix4_add_adapters_sb800() \/ piix4_add_adapter() i2c_add_adapter() En función del tipo de dispositivo sondeado, se llamará a piix4_add_adapters_sb800() o a un solo piix4_add_adapter(). Para el primer caso, piix4_adapter_count se establece como el número de adaptadores, mientras que para otro caso no se establece y se mantiene predeterminado *cero*. Cuando se elimina piix4, piix4_remove() elimina los adaptadores agregados en piix4_probe(), basándose en el valor de piix4_adapter_count. Dado que el conteo es cero en el caso de un solo adaptador, este no se eliminará y se filtrarán las fuentes asignadas, como el cliente y el dispositivo i2c. Estas fuentes aún pueden ser accedidas por i2c o el bus, lo que puede causar problemas. Un caso que se reproduce fácilmente es que si se registra un nuevo adaptador, i2c obtendrá el adaptador filtrado e intentará llamar a smbus_algorithm, que ya se había liberado: Activado por: rmmod i2c_piix4 y modprobe max31730 ERROR: no se puede controlar el error de página para la dirección: ffffffffc053d860 #PF: acceso de lectura del supervisor en modo kernel #PF: error_code(0x0000) - página no presente Oops: 0000 [#1] PREEMPT SMP KASAN CPU: 0 PID: 3752 Comm: modprobe Tainted: G Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:i2c_default_probe (drivers\/i2c\/i2c-core-base.c:2259) i2c_core RSP: 0018:ffff888107477710 EFLAGS: 00000246 ...  i2c_detect (controladores\/i2c\/i2c-core-base.c:2302) i2c_core __process_new_driver (controladores\/i2c\/i2c-core-base.c:1336) i2c_core bus_for_each_dev (controladores\/base\/bus.c:301) i2c_for_each_dev (controladores\/i2c\/i2c-core-base.c:1823) i2c_core i2c_register_driver (controladores\/i2c\/i2c-core-base.c:1861) i2c_core do_one_initcall (init\/main.c:1296) do_init_module (kernel\/module\/main.c:2455) ...  ---[ fin del seguimiento 0000000000000000 ]--- Solucione este problema configurando correctamente piix4_adapter_count como 1 para el adaptador único de modo que se pueda quitar normalmente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/569bea74c94d37785682b11bab76f557520477cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfd5e62f9a7ee214661cb6f143a3b40ccc63317f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d78ccdce662e88f41e87e90cf2bee63c1715d2a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe51636fffc8108c7c4da6aa393010e786530ad9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49901","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.167","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: Fix kmemleak in blk_mq_init_allocated_queue\n\nThere is a kmemleak caused by modprobe null_blk.ko\n\nunreferenced object 0xffff8881acb1f000 (size 1024):\n  comm \"modprobe\", pid 836, jiffies 4294971190 (age 27.068s)\n  hex dump (first 32 bytes):\n    00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........\n    ff ff ff ff ff ff ff ff 00 53 99 9e ff ff ff ff  .........S......\n  backtrace:\n    [<000000004a10c249>] kmalloc_node_trace+0x22\/0x60\n    [<00000000648f7950>] blk_mq_alloc_and_init_hctx+0x289\/0x350\n    [<00000000af06de0e>] blk_mq_realloc_hw_ctxs+0x2fe\/0x3d0\n    [<00000000e00c1872>] blk_mq_init_allocated_queue+0x48c\/0x1440\n    [<00000000d16b4e68>] __blk_mq_alloc_disk+0xc8\/0x1c0\n    [<00000000d10c98c3>] 0xffffffffc450d69d\n    [<00000000b9299f48>] 0xffffffffc4538392\n    [<0000000061c39ed6>] do_one_initcall+0xd0\/0x4f0\n    [<00000000b389383b>] do_init_module+0x1a4\/0x680\n    [<0000000087cf3542>] load_module+0x6249\/0x7110\n    [<00000000beba61b8>] __do_sys_finit_module+0x140\/0x200\n    [<00000000fdcfff51>] do_syscall_64+0x35\/0x80\n    [<000000003c0f1f71>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n\nThat is because q->ma_ops is set to NULL before blk_release_queue is\ncalled.\n\nblk_mq_init_queue_data\n  blk_mq_init_allocated_queue\n    blk_mq_realloc_hw_ctxs\n      for (i = 0; i < set->nr_hw_queues; i++) {\n        old_hctx = xa_load(&q->hctx_table, i);\n        if (!blk_mq_alloc_and_init_hctx(.., i, ..))\t\t[1]\n          if (!old_hctx)\n\t    break;\n\n      xa_for_each_start(&q->hctx_table, j, hctx, j)\n        blk_mq_exit_hctx(q, set, hctx, j); \t\t\t[2]\n\n    if (!q->nr_hw_queues)\t\t\t\t\t[3]\n      goto err_hctxs;\n\n  err_exit:\n      q->mq_ops = NULL;\t\t\t  \t\t\t[4]\n\n  blk_put_queue\n    blk_release_queue\n      if (queue_is_mq(q))\t\t\t\t\t[5]\n        blk_mq_release(q);\n\n[1]: blk_mq_alloc_and_init_hctx failed at i != 0.\n[2]: The hctxs allocated by [1] are moved to q->unused_hctx_list and\nwill be cleaned up in blk_mq_release.\n[3]: q->nr_hw_queues is 0.\n[4]: Set q->mq_ops to NULL.\n[5]: queue_is_mq returns false due to [4]. And blk_mq_release\nwill not be called. The hctxs in q->unused_hctx_list are leaked.\n\nTo fix it, call blk_release_queue in exception path."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: blk-mq: Se corrige kmemleak en blk_mq_init_allocated_queue Hay una kmemleak causada por modprobe null_blk.ko objeto no referenciado 0xffff8881acb1f000 (tamaño 1024): comm \"modprobe\", pid 836, jiffies 4294971190 (edad 27.068s) volcado hexadecimal (primeros 32 bytes): 00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00 .....N.......... ff ff ff ff ff ff ff ff ff 00 53 99 9e ff ff ff ff .........S...... backtrace: [&lt;000000004a10c249&gt;] kmalloc_node_trace+0x22\/0x60 [&lt;00000000648f7950&gt;] blk_mq_alloc_and_init_hctx+0x289\/0x350 [&lt;00000000af06de0e&gt;] blk_mq_realloc_hw_ctxs+0x2fe\/0x3d0 [&lt;00000000e00c1872&gt;] blk_mq_init_allocated_queue+0x48c\/0x1440 [&lt;00000000d16b4e68&gt;] __blk_mq_alloc_disk+0xc8\/0x1c0 [&lt;00000000d10c98c3&gt;] 0xffffffffc450d69d [&lt;00000000b9299f48&gt;] 0xffffffffc4538392 [&lt;0000000061c39ed6&gt;] hacer_una_llamada_inicio+0xd0\/0x4f0 [&lt;00000000b389383b&gt;] hacer_módulo_inicio+0x1a4\/0x680 [&lt;0000000087cf3542&gt;] cargar_módulo+0x6249\/0x7110 [&lt;00000000beba61b8&gt;] __hacer_módulo_finit_sys+0x140\/0x200 [&lt;00000000fdcfff51&gt;] hacer_llamada_al_sistema_64+0x35\/0x80 [&lt;000000003c0f1f71&gt;] entry_SYSCALL_64_after_hwframe+0x46\/0xb0 Esto se debe a que q-&gt;ma_ops se establece en NULL antes de llamar a blk_release_queue. blk_mq_init_queue_data blk_mq_init_allocated_queue blk_mq_realloc_hw_ctxs para (i = 0; i &lt; set-&gt;nr_hw_queues; i++) { old_hctx = xa_load(&amp;q-&gt;hctx_table, i); si (!blk_mq_alloc_and_init_hctx(.., i, ..)) [1] si (!old_hctx) break; xa_for_each_start(&amp;q-&gt;hctx_table, j, hctx, j) blk_mq_exit_hctx(q, set, hctx, j); [2] if (!q-&gt;nr_hw_queues) [3] goto err_hctxs; err_exit: q-&gt;mq_ops = NULL; [4] blk_put_queue blk_release_queue if (queue_is_mq(q)) [5] blk_mq_release(q); [1]: blk_mq_alloc_and_init_hctx falló en i != 0. [2]: Los hctxs asignados por [1] se mueven a q-&gt;unused_hctx_list y se limpiarán en blk_mq_release. [3]: q-&gt;nr_hw_queues es 0. [4]: Establece q-&gt;mq_ops en NULL. [5]: queue_is_mq devuelve falso debido a [4]. No se llamará a blk_mq_release. Los hctxs en q-&gt;unused_hctx_list tienen fugas. Para solucionarlo, llame a blk_release_queue en la ruta de excepción."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dc97e15a54b7bdf457848aa8c663c98a24e58a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/943f45b9399ed8b2b5190cbc797995edaa97f58f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49902","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.270","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix possible memory leak for rq_wb on add_disk failure\n\nkmemleak reported memory leaks in device_add_disk():\n\nkmemleak: 3 new suspected memory leaks\n\nunreferenced object 0xffff88800f420800 (size 512):\n  comm \"modprobe\", pid 4275, jiffies 4295639067 (age 223.512s)\n  hex dump (first 32 bytes):\n    04 00 00 00 08 00 00 00 01 00 00 00 00 00 00 00  ................\n    00 e1 f5 05 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<00000000d3662699>] kmalloc_trace+0x26\/0x60\n    [<00000000edc7aadc>] wbt_init+0x50\/0x6f0\n    [<0000000069601d16>] wbt_enable_default+0x157\/0x1c0\n    [<0000000028fc393f>] blk_register_queue+0x2a4\/0x420\n    [<000000007345a042>] device_add_disk+0x6fd\/0xe40\n    [<0000000060e6aab0>] nbd_dev_add+0x828\/0xbf0 [nbd]\n    ...\n\nIt is because the memory allocated in wbt_enable_default() is not\nreleased in device_add_disk() error path.\nNormally, these memory are freed in:\n\ndel_gendisk()\n  rq_qos_exit()\n    rqos->ops->exit(rqos);\n      wbt_exit()\n\nSo rq_qos_exit() is called to free the rq_wb memory for wbt_init().\nHowever in the error path of device_add_disk(), only\nblk_unregister_queue() is called and make rq_wb memory leaked.\n\nAdd rq_qos_exit() to the error path to fix it."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bloque: Reparar posible pérdida de memoria para rq_wb en caso de error de add_disk kmemleak informó pérdidas de memoria en device_add_disk(): kmemleak: 3 nuevas pérdidas de memoria sospechosas objeto no referenciado 0xffff88800f420800 (tamaño 512): comm \"modprobe\", pid 4275, jiffies 4295639067 (edad 223.512s) volcado hexadecimal (primeros 32 bytes): 04 00 00 00 08 00 00 00 01 00 00 00 00 00 00 00 00 ................ 00 e1 f5 05 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [&lt;00000000d3662699&gt;] kmalloc_trace+0x26\/0x60 [&lt;00000000edc7aadc&gt;] wbt_init+0x50\/0x6f0 [&lt;0000000069601d16&gt;] wbt_enable_default+0x157\/0x1c0 [&lt;0000000028fc393f&gt;] blk_register_queue+0x2a4\/0x420 [&lt;000000007345a042&gt;] device_add_disk+0x6fd\/0xe40 [&lt;0000000060e6aab0&gt;] nbd_dev_add+0x828\/0xbf0 [nbd] ... Esto se debe a que la memoria asignada en wbt_enable_default() no se libera en la ruta de error device_add_disk(). Normalmente, esta memoria se libera en: del_gendisk() rq_qos_exit() rqos-&gt;ops-&gt;exit(rqos); wbt_exit(). Por lo tanto, se llama a rq_qos_exit() para liberar la memoria rq_wb para wbt_init(). Sin embargo, en la ruta de error de device_add_disk(), solo se llama a blk_unregister_queue(), lo que provoca una fuga de memoria en rq_wb. Agregue rq_qos_exit() a la ruta de error para corregirlo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e68c5da60cd79950bd56287ae80b39d6261f995","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/528677d3b4af985445bd4ac667485ded1ed11220","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa81cbafbf5764ad5053512152345fab37a1fe18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49903","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.373","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix WARNING in ip6_route_net_exit_late()\n\nDuring the initialization of ip6_route_net_init_late(), if file\nipv6_route or rt6_stats fails to be created, the initialization is\nsuccessful by default. Therefore, the ipv6_route or rt6_stats file\ndoesn't be found during the remove in ip6_route_net_exit_late(). It\nwill cause WRNING.\n\nThe following is the stack information:\nname 'rt6_stats'\nWARNING: CPU: 0 PID: 9 at fs\/proc\/generic.c:712 remove_proc_entry+0x389\/0x460\nModules linked in:\nWorkqueue: netns cleanup_net\nRIP: 0010:remove_proc_entry+0x389\/0x460\nPKRU: 55555554\nCall Trace:\n<TASK>\nops_exit_list+0xb0\/0x170\ncleanup_net+0x4ea\/0xb00\nprocess_one_work+0x9bf\/0x1710\nworker_thread+0x665\/0x1080\nkthread+0x2e4\/0x3a0\nret_from_fork+0x1f\/0x30\n<\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ipv6: corrección de una advertencia en ip6_route_net_exit_late(). Durante la inicialización de ip6_route_net_init_late(), si no se crea el archivo ipv6_route o rt6_stats, la inicialización se realiza correctamente por defecto. Por lo tanto, no se encuentra el archivo ipv6_route o rt6_stats durante la eliminación en ip6_route_net_exit_late(). Esto provocará una advertencia. La siguiente es la información de la pila: nombre 'rt6_stats' ADVERTENCIA: CPU: 0 PID: 9 en fs\/proc\/generic.c:712 remove_proc_entry+0x389\/0x460 Módulos vinculados: Cola de trabajo: netns cleanup_net RIP: 0010:remove_proc_entry+0x389\/0x460 PKRU: 55555554 Seguimiento de llamadas:  ops_exit_list+0xb0\/0x170 cleanup_net+0x4ea\/0xb00 process_one_work+0x9bf\/0x1710 workers_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/080589287127838046077904f34d5054ea0f895c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ed71af4d017d2bd2cbb8f7254f613a4914def26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/381453770f731f0f43616a1cd4c759b7807a1517","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dbb47ee89762da433cd8458788d7640c85f1a07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/768b3c745fe5789f2430bdab02f35a9ad1148d97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83fbf246ced54dadd7b9adc2a16efeff30ba944d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49904","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.480","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet, neigh: Fix null-ptr-deref in neigh_table_clear()\n\nWhen IPv6 module gets initialized but hits an error in the middle,\nkenel panic with:\n\nKASAN: null-ptr-deref in range [0x0000000000000598-0x000000000000059f]\nCPU: 1 PID: 361 Comm: insmod\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nRIP: 0010:__neigh_ifdown.isra.0+0x24b\/0x370\nRSP: 0018:ffff888012677908 EFLAGS: 00000202\n...\nCall Trace:\n <TASK>\n neigh_table_clear+0x94\/0x2d0\n ndisc_cleanup+0x27\/0x40 [ipv6]\n inet6_init+0x21c\/0x2cb [ipv6]\n do_one_initcall+0xd3\/0x4d0\n do_init_module+0x1ae\/0x670\n...\nKernel panic - not syncing: Fatal exception\n\nWhen ipv6 initialization fails, it will try to cleanup and calls:\n\nneigh_table_clear()\n  neigh_ifdown(tbl, NULL)\n    pneigh_queue_purge(&tbl->proxy_queue, dev_net(dev == NULL))\n    # dev_net(NULL) triggers null-ptr-deref.\n\nFix it by passing NULL to pneigh_queue_purge() in neigh_ifdown() if dev\nis NULL, to make kernel not panic immediately."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net, neigh: Fix null-ptr-deref en neigh_table_clear() Cuando se inicializa un módulo IPv6 pero se produce un error en el medio, kenel entra en pánico con: KASAN: null-ptr-deref en el rango [0x0000000000000598-0x000000000000059f] CPU: 1 PID: 361 Comm: insmod Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:__neigh_ifdown.isra.0+0x24b\/0x370 RSP: 0018:ffff888012677908 EFLAGS: 00000202 ... Seguimiento de llamadas:  neigh_table_clear+0x94\/0x2d0 ndisc_cleanup+0x27\/0x40 [ipv6] inet6_init+0x21c\/0x2cb [ipv6] do_one_initcall+0xd3\/0x4d0 do_init_module+0x1ae\/0x670 ... Pánico del kernel - no sincroniza: Excepción fatal Cuando falla la inicialización de ipv6, intentará limpiar y llamará a: neigh_table_clear() neigh_ifdown(tbl, NULL) pneigh_queue_purge(&amp;tbl-&gt;proxy_queue, dev_net(dev == NULL)) # dev_net(NULL) activa null-ptr-deref. Corríjalo pasando NULL a pneigh_queue_purge() en neigh_ifdown() si dev es NULL, para que el kernel no entre en pánico inmediatamente."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d38b4ca6679e72860ff8730e79bb99d0e9fa3b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c89642e7f2b7ecc9635610653f5c2f0276c0051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b45d6d0c41cb9593868e476681efb1aae5078a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a99a8ec4c62180c889482a2ff6465033e0743458","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b49f6b2f21f543d4dc88fb7b1ec2adccb822f27c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b736592de2aa53aee2d48d6b129bc0c892007bbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8017317cb0b279b8ab98b0f3901a2e0ac880dad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49905","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.593","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: Fix possible leaked pernet namespace in smc_init()\n\nIn smc_init(), register_pernet_subsys(&smc_net_stat_ops) is called\nwithout any error handling.\nIf it fails, registering of &smc_net_ops won't be reverted.\nAnd if smc_nl_init() fails, &smc_net_stat_ops itself won't be reverted.\n\nThis leaves wild ops in subsystem linkedlist and when another module\ntries to call register_pernet_operations() it triggers page fault:\n\nBUG: unable to handle page fault for address: fffffbfff81b964c\nRIP: 0010:register_pernet_operations+0x1b9\/0x5f0\nCall Trace:\n  <TASK>\n  register_pernet_subsys+0x29\/0x40\n  ebtables_init+0x58\/0x1000 [ebtables]\n  ..."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net\/smc: Se corrige una posible fuga de espacio de nombres pernet en smc_init(). En smc_init(), se llama a register_pernet_subsys(&amp;smc_net_stat_ops) sin gestionar errores. Si falla, el registro de &amp;smc_net_ops no se revertirá. Y si smc_nl_init() falla, &amp;smc_net_stat_ops no se revertirá. Esto deja operaciones salvajes en la lista enlazada del subsistema y cuando otro módulo intenta llamar a register_pernet_operations() desencadena un error de página: ERROR: no se puede manejar el error de página para la dirección: fffffbfff81b964c RIP: 0010:register_pernet_operations+0x1b9\/0x5f0 Rastreo de llamada:  register_pernet_subsys+0x29\/0x40 ebtables_init+0x58\/0x1000 [ebtables] ... "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61defd6450a9ef4a1487090449999b0fd83518ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62ff373da2534534c55debe6c724c7fe14adb97f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c97daf836f7caf81d3144b8cd2b2a51f9bc3bd09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49906","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.703","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: Free rwi on reset success\n\nFree the rwi structure in the event that the last rwi in the list\nprocessed successfully. The logic in commit 4f408e1fa6e1 (\"ibmvnic:\nretry reset if there are no other resets\") introduces an issue that\nresults in a 32 byte memory leak whenever the last rwi in the list\ngets processed."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ibmvnic: Liberar rwi al reiniciarse correctamente. Libera la estructura rwi si el último rwi de la lista se ha procesado correctamente. La lógica del commit 4f408e1fa6e1 (\"ibmvnic: reintentar reiniciar si no hay otros reinicios\") genera un problema que provoca una pérdida de memoria de 32 bytes cada vez que se procesa el último rwi de la lista."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/535b78739ae75f257c894a05b1afa86ad9a3669e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3543a287cfba9105dcc4bb41eb817f51266caaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6dd2fe71153f0ff748bf188bd4af076fe09a0a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49907","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.810","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdio: fix undefined behavior in bit shift for __mdiobus_register\n\nShifting signed 32-bit value by 31 bits is undefined, so changing\nsignificant bit to unsigned. The UBSAN warning calltrace like below:\n\nUBSAN: shift-out-of-bounds in drivers\/net\/phy\/mdio_bus.c:586:27\nleft shift of 1 by 31 places cannot be represented in type 'int'\nCall Trace:\n <TASK>\n dump_stack_lvl+0x7d\/0xa5\n dump_stack+0x15\/0x1b\n ubsan_epilogue+0xe\/0x4e\n __ubsan_handle_shift_out_of_bounds+0x1e7\/0x20c\n __mdiobus_register+0x49d\/0x4e0\n fixed_mdio_bus_init+0xd8\/0x12d\n do_one_initcall+0x76\/0x430\n kernel_init_freeable+0x3b3\/0x422\n kernel_init+0x24\/0x1e0\n ret_from_fork+0x1f\/0x30\n <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: mdio: corrige comportamiento indefinido en el desplazamiento de bits para __mdiobus_register El desplazamiento de un valor de 32 bits con signo en 31 bits no está definido, por lo que se cambia el bit significativo a sin signo. El seguimiento de llamadas de advertencia de UBSAN como se muestra a continuación: UBSAN: desplazamiento fuera de los límites en drivers\/net\/phy\/mdio_bus.c:586:27 El desplazamiento a la izquierda de 1 por 31 lugares no se puede representar en el tipo 'int' Seguimiento de llamadas:   dump_stack_lvl+0x7d\/0xa5 dump_stack+0x15\/0x1b ubsan_epilogue+0xe\/0x4e __ubsan_handle_shift_out_of_bounds+0x1e7\/0x20c __mdiobus_register+0x49d\/0x4e0 fixed_mdio_bus_init+0xd8\/0x12d do_one_initcall+0x76\/0x430 kernel_init_freeable+0x3b3\/0x422 kernel_init+0x24\/0x1e0 ret_from_fork+0x1f\/0x30  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20ed01a7b9af6e6a3c33761eebbb710ea6dd49b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40e4eb324c59e11fcb927aa46742d28aba6ecb8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4954b5359eb141499492fadfab891e28905509e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/634f066d02bdb22a26da7deb0c7617ab1a65fc9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ce6f8f8f6316da6f92afe7490bc2f0b654d68e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7006176a3c863e3e353ce1b8a349ef5bb1b9320e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/985a88bf0b27193522bba7856b1763f428cef19d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3fafc974be37319679f36dc4e7cca7db1e02973","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49908","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:15.920","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix memory leak in vhci_write\n\nSyzkaller reports a memory leak as follows:\n====================================\nBUG: memory leak\nunreferenced object 0xffff88810d81ac00 (size 240):\n  [...]\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff838733d9>] __alloc_skb+0x1f9\/0x270 net\/core\/skbuff.c:418\n    [<ffffffff833f742f>] alloc_skb include\/linux\/skbuff.h:1257 [inline]\n    [<ffffffff833f742f>] bt_skb_alloc include\/net\/bluetooth\/bluetooth.h:469 [inline]\n    [<ffffffff833f742f>] vhci_get_user drivers\/bluetooth\/hci_vhci.c:391 [inline]\n    [<ffffffff833f742f>] vhci_write+0x5f\/0x230 drivers\/bluetooth\/hci_vhci.c:511\n    [<ffffffff815e398d>] call_write_iter include\/linux\/fs.h:2192 [inline]\n    [<ffffffff815e398d>] new_sync_write fs\/read_write.c:491 [inline]\n    [<ffffffff815e398d>] vfs_write+0x42d\/0x540 fs\/read_write.c:578\n    [<ffffffff815e3cdd>] ksys_write+0x9d\/0x160 fs\/read_write.c:631\n    [<ffffffff845e0645>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n    [<ffffffff845e0645>] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n    [<ffffffff84600087>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n====================================\n\nHCI core will uses hci_rx_work() to process frame, which is queued to\nthe hdev->rx_q tail in hci_recv_frame() by HCI driver.\n\nYet the problem is that, HCI core may not free the skb after handling\nACL data packets. To be more specific, when start fragment does not\ncontain the L2CAP length, HCI core just copies skb into conn->rx_skb and\nfinishes frame process in l2cap_recv_acldata(), without freeing the skb,\nwhich triggers the above memory leak.\n\nThis patch solves it by releasing the relative skb, after processing\nthe above case in l2cap_recv_acldata()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: L2CAP: Se corrige la pérdida de memoria en vhci_write Syzkaller informa de una pérdida de memoria de la siguiente manera: ===================================== ERROR: pérdida de memoria del objeto no referenciado 0xffff88810d81ac00 (tamaño 240): [...] volcado hexadecimal (primeros 32 bytes): 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ backtrace: [] __alloc_skb+0x1f9\/0x270 net\/core\/skbuff.c:418 [] alloc_skb include\/linux\/skbuff.h:1257 [en línea] [] bt_skb_alloc include\/net\/bluetooth\/bluetooth.h:469 [en línea] [] vhci_get_user drivers\/bluetooth\/hci_vhci.c:391 [en línea] [] vhci_write+0x5f\/0x230 drivers\/bluetooth\/hci_vhci.c:511 [] call_write_iter include\/linux\/fs.h:2192 [en línea] [] new_sync_write fs\/read_write.c:491 [en línea] [] vfs_write+0x42d\/0x540 fs\/read_write.c:578 [] ksys_write+0x9d\/0x160 fs\/read_write.c:631 [] do_syscall_x64 arch\/x86\/entry\/common.c:50 [en línea] [] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80 [] entry_SYSCALL_64_after_hwframe+0x63\/0xcd ====================================== El núcleo HCI utiliza hci_rx_work() para procesar la trama, que el controlador HCI pone en cola en la cola hdev-&gt;rx_q en hci_recv_frame(). Sin embargo, el problema es que el núcleo HCI puede no liberar el skb después de procesar los paquetes de datos ACL. Para ser más específicos, cuando el fragmento de inicio no contiene la longitud L2CAP, el núcleo HCI simplemente copia el skb en conn-&gt;rx_skb y finaliza el procesamiento de la trama en l2cap_recv_acldata(), sin liberar el skb, lo que desencadena la pérdida de memoria mencionada anteriormente. Este parche lo resuelve liberando el skb relativo, después de procesar el caso mencionado en l2cap_recv_acldata()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4f039a2f487c5edae681d763fe1af505f84c13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c9524d929648935bac2bbb4c20437df8f9c3f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa16cac06b752e5f609c106735bd7838f444784c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49909","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.030","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: fix use-after-free in l2cap_conn_del()\n\nWhen l2cap_recv_frame() is invoked to receive data, and the cid is\nL2CAP_CID_A2MP, if the channel does not exist, it will create a channel.\nHowever, after a channel is created, the hold operation of the channel\nis not performed. In this case, the value of channel reference counting\nis 1. As a result, after hci_error_reset() is triggered, l2cap_conn_del()\ninvokes the close hook function of A2MP to release the channel. Then\n l2cap_chan_unlock(chan) will trigger UAF issue.\n\nThe process is as follows:\nReceive data:\nl2cap_data_channel()\n    a2mp_channel_create()  --->channel ref is 2\n    l2cap_chan_put()       --->channel ref is 1\n\nTriger event:\n    hci_error_reset()\n        hci_dev_do_close()\n        ...\n        l2cap_disconn_cfm()\n            l2cap_conn_del()\n                l2cap_chan_hold()    --->channel ref is 2\n                l2cap_chan_del()     --->channel ref is 1\n                a2mp_chan_close_cb() --->channel ref is 0, release channel\n                l2cap_chan_unlock()  --->UAF of channel\n\nThe detailed Call Trace is as follows:\nBUG: KASAN: use-after-free in __mutex_unlock_slowpath+0xa6\/0x5e0\nRead of size 8 at addr ffff8880160664b8 by task kworker\/u11:1\/7593\nWorkqueue: hci0 hci_error_reset\nCall Trace:\n <TASK>\n dump_stack_lvl+0xcd\/0x134\n print_report.cold+0x2ba\/0x719\n kasan_report+0xb1\/0x1e0\n kasan_check_range+0x140\/0x190\n __mutex_unlock_slowpath+0xa6\/0x5e0\n l2cap_conn_del+0x404\/0x7b0\n l2cap_disconn_cfm+0x8c\/0xc0\n hci_conn_hash_flush+0x11f\/0x260\n hci_dev_close_sync+0x5f5\/0x11f0\n hci_dev_do_close+0x2d\/0x70\n hci_error_reset+0x9e\/0x140\n process_one_work+0x98a\/0x1620\n worker_thread+0x665\/0x1080\n kthread+0x2e4\/0x3a0\n ret_from_fork+0x1f\/0x30\n <\/TASK>\n\nAllocated by task 7593:\n kasan_save_stack+0x1e\/0x40\n __kasan_kmalloc+0xa9\/0xd0\n l2cap_chan_create+0x40\/0x930\n amp_mgr_create+0x96\/0x990\n a2mp_channel_create+0x7d\/0x150\n l2cap_recv_frame+0x51b8\/0x9a70\n l2cap_recv_acldata+0xaa3\/0xc00\n hci_rx_work+0x702\/0x1220\n process_one_work+0x98a\/0x1620\n worker_thread+0x665\/0x1080\n kthread+0x2e4\/0x3a0\n ret_from_fork+0x1f\/0x30\n\nFreed by task 7593:\n kasan_save_stack+0x1e\/0x40\n kasan_set_track+0x21\/0x30\n kasan_set_free_info+0x20\/0x30\n ____kasan_slab_free+0x167\/0x1c0\n slab_free_freelist_hook+0x89\/0x1c0\n kfree+0xe2\/0x580\n l2cap_chan_put+0x22a\/0x2d0\n l2cap_conn_del+0x3fc\/0x7b0\n l2cap_disconn_cfm+0x8c\/0xc0\n hci_conn_hash_flush+0x11f\/0x260\n hci_dev_close_sync+0x5f5\/0x11f0\n hci_dev_do_close+0x2d\/0x70\n hci_error_reset+0x9e\/0x140\n process_one_work+0x98a\/0x1620\n worker_thread+0x665\/0x1080\n kthread+0x2e4\/0x3a0\n ret_from_fork+0x1f\/0x30\n\nLast potentially related work creation:\n kasan_save_stack+0x1e\/0x40\n __kasan_record_aux_stack+0xbe\/0xd0\n call_rcu+0x99\/0x740\n netlink_release+0xe6a\/0x1cf0\n __sock_release+0xcd\/0x280\n sock_close+0x18\/0x20\n __fput+0x27c\/0xa90\n task_work_run+0xdd\/0x1a0\n exit_to_user_mode_prepare+0x23c\/0x250\n syscall_exit_to_user_mode+0x19\/0x50\n do_syscall_64+0x42\/0x80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nSecond to last potentially related work creation:\n kasan_save_stack+0x1e\/0x40\n __kasan_record_aux_stack+0xbe\/0xd0\n call_rcu+0x99\/0x740\n netlink_release+0xe6a\/0x1cf0\n __sock_release+0xcd\/0x280\n sock_close+0x18\/0x20\n __fput+0x27c\/0xa90\n task_work_run+0xdd\/0x1a0\n exit_to_user_mode_prepare+0x23c\/0x250\n syscall_exit_to_user_mode+0x19\/0x50\n do_syscall_64+0x42\/0x80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: L2CAP: corrección de use-after-free en l2cap_conn_del(). Cuando se invoca l2cap_recv_frame() para recibir datos y el CID es L2CAP_CID_A2MP, si el canal no existe, se crea uno. Sin embargo, una vez creado el canal, no se realiza la operación de retención. En este caso, el valor del recuento de referencias del canal es 1. Como resultado, tras la activación de hci_error_reset(), l2cap_conn_del() invoca la función de cierre de A2MP para liberar el canal. Entonces, l2cap_chan_unlock(chan) activará el problema de UAF. El proceso es el siguiente: Recibir datos: l2cap_data_channel() a2mp_channel_create() ---&gt;la referencia del canal es 2 l2cap_chan_put() ---&gt;la referencia del canal es 1 Evento desencadenador: hci_error_reset() hci_dev_do_close() ... l2cap_disconn_cfm() l2cap_conn_del() l2cap_chan_hold() ---&gt;la referencia del canal es 2 l2cap_chan_del() ---&gt;la referencia del canal es 1 a2mp_chan_close_cb() ---&gt;la referencia del canal es 0, liberar el canal l2cap_chan_unlock() ---&gt;UAF del canal El seguimiento de llamadas detallado es el siguiente: ERROR: KASAN: use-after-free en __mutex_unlock_slowpath+0xa6\/0x5e0 Lectura de tamaño 8 en la dirección ffff8880160664b8 por la tarea kworker\/u11:1\/7593 Cola de trabajo: hci0 Rastreo de llamadas hci_error_reset:   dump_stack_lvl+0xcd\/0x134 print_report.cold+0x2ba\/0x719 kasan_report+0xb1\/0x1e0 kasan_check_range+0x140\/0x190 __mutex_unlock_slowpath+0xa6\/0x5e0 l2cap_conn_del+0x404\/0x7b0 l2cap_disconn_cfm+0x8c\/0xc0 hci_conn_hash_flush+0x11f\/0x260 hci_dev_close_sync+0x5f5\/0x11f0 hci_dev_do_close+0x2d\/0x70 hci_error_reset+0x9e\/0x140 process_one_work+0x98a\/0x1620 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30  Allocated by task 7593: kasan_save_stack+0x1e\/0x40 __kasan_kmalloc+0xa9\/0xd0 l2cap_chan_create+0x40\/0x930 amp_mgr_create+0x96\/0x990 a2mp_channel_create+0x7d\/0x150 l2cap_recv_frame+0x51b8\/0x9a70 l2cap_recv_acldata+0xaa3\/0xc00 hci_rx_work+0x702\/0x1220 process_one_work+0x98a\/0x1620 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30 Freed by task 7593: kasan_save_stack+0x1e\/0x40 kasan_set_track+0x21\/0x30 kasan_set_free_info+0x20\/0x30 ____kasan_slab_free+0x167\/0x1c0 slab_free_freelist_hook+0x89\/0x1c0 kfree+0xe2\/0x580 l2cap_chan_put+0x22a\/0x2d0 l2cap_conn_del+0x3fc\/0x7b0 l2cap_disconn_cfm+0x8c\/0xc0 hci_conn_hash_flush+0x11f\/0x260 hci_dev_close_sync+0x5f5\/0x11f0 hci_dev_do_close+0x2d\/0x70 hci_error_reset+0x9e\/0x140 process_one_work+0x98a\/0x1620 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30 Last potentially related work creation: kasan_save_stack+0x1e\/0x40 __kasan_record_aux_stack+0xbe\/0xd0 call_rcu+0x99\/0x740 netlink_release+0xe6a\/0x1cf0 __sock_release+0xcd\/0x280 sock_close+0x18\/0x20 __fput+0x27c\/0xa90 task_work_run+0xdd\/0x1a0 exit_to_user_mode_prepare+0x23c\/0x250 syscall_exit_to_user_mode+0x19\/0x50 do_syscall_64+0x42\/0x80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd Second to last potentially related work creation: kasan_save_stack+0x1e\/0x40 __kasan_record_aux_stack+0xbe\/0xd0 call_rcu+0x99\/0x740 netlink_release+0xe6a\/0x1cf0 __sock_release+0xcd\/0x280 sock_close+0x18\/0x20 __fput+0x27c\/0xa90 task_work_run+0xdd\/0x1a0 exit_to_user_mode_prepare+0x23c\/0x250 syscall_exit_to_user_mode+0x19\/0x50 do_syscall_64+0x42\/0x80 entry_SYSCALL_64_after_hwframe+0x63\/0xcd "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d0e2d032811280b927650ff3c15fe5020e82533","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17c6164854f8bb80bf76f32b2c2f199c16b53703","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f7bfdd9a9af3b12c33d9da9a012e7f4d5c91f4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f7e4cf0694149a5d999d676ebd9ecf1b4cb2cc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3a7b2ac64de232edb67279e804932cb42f0b52a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1f594dddd9ffd747c39f49cc5b67a9b7677d2ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9ec6e2fbd4a565b2345d4852f586b7ae3ab41fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db4a0783ed78beb2ebaa32f5f785bfd79c580689","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49910","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.147","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix use-after-free caused by l2cap_reassemble_sdu\n\nFix the race condition between the following two flows that run in\nparallel:\n\n1. l2cap_reassemble_sdu -> chan->ops->recv (l2cap_sock_recv_cb) ->\n   __sock_queue_rcv_skb.\n\n2. bt_sock_recvmsg -> skb_recv_datagram, skb_free_datagram.\n\nAn SKB can be queued by the first flow and immediately dequeued and\nfreed by the second flow, therefore the callers of l2cap_reassemble_sdu\ncan't use the SKB after that function returns. However, some places\ncontinue accessing struct l2cap_ctrl that resides in the SKB's CB for a\nshort time after l2cap_reassemble_sdu returns, leading to a\nuse-after-free condition (the stack trace is below, line numbers for\nkernel 5.19.8).\n\nFix it by keeping a local copy of struct l2cap_ctrl.\n\nBUG: KASAN: use-after-free in l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth\nRead of size 1 at addr ffff88812025f2f0 by task kworker\/u17:3\/43169\n\nWorkqueue: hci0 hci_rx_work [bluetooth]\nCall Trace:\n <TASK>\n dump_stack_lvl (lib\/dump_stack.c:107 (discriminator 4))\n print_report.cold (mm\/kasan\/report.c:314 mm\/kasan\/report.c:429)\n ? l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth\n kasan_report (mm\/kasan\/report.c:162 mm\/kasan\/report.c:493)\n ? l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth\n l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth\n l2cap_rx (net\/bluetooth\/l2cap_core.c:7236 net\/bluetooth\/l2cap_core.c:7271) bluetooth\n ret_from_fork (arch\/x86\/entry\/entry_64.S:306)\n <\/TASK>\n\nAllocated by task 43169:\n kasan_save_stack (mm\/kasan\/common.c:39)\n __kasan_slab_alloc (mm\/kasan\/common.c:45 mm\/kasan\/common.c:436 mm\/kasan\/common.c:469)\n kmem_cache_alloc_node (mm\/slab.h:750 mm\/slub.c:3243 mm\/slub.c:3293)\n __alloc_skb (net\/core\/skbuff.c:414)\n l2cap_recv_frag (.\/include\/net\/bluetooth\/bluetooth.h:425 net\/bluetooth\/l2cap_core.c:8329) bluetooth\n l2cap_recv_acldata (net\/bluetooth\/l2cap_core.c:8442) bluetooth\n hci_rx_work (net\/bluetooth\/hci_core.c:3642 net\/bluetooth\/hci_core.c:3832) bluetooth\n process_one_work (kernel\/workqueue.c:2289)\n worker_thread (.\/include\/linux\/list.h:292 kernel\/workqueue.c:2437)\n kthread (kernel\/kthread.c:376)\n ret_from_fork (arch\/x86\/entry\/entry_64.S:306)\n\nFreed by task 27920:\n kasan_save_stack (mm\/kasan\/common.c:39)\n kasan_set_track (mm\/kasan\/common.c:45)\n kasan_set_free_info (mm\/kasan\/generic.c:372)\n ____kasan_slab_free (mm\/kasan\/common.c:368 mm\/kasan\/common.c:328)\n slab_free_freelist_hook (mm\/slub.c:1780)\n kmem_cache_free (mm\/slub.c:3536 mm\/slub.c:3553)\n skb_free_datagram (.\/include\/net\/sock.h:1578 .\/include\/net\/sock.h:1639 net\/core\/datagram.c:323)\n bt_sock_recvmsg (net\/bluetooth\/af_bluetooth.c:295) bluetooth\n l2cap_sock_recvmsg (net\/bluetooth\/l2cap_sock.c:1212) bluetooth\n sock_read_iter (net\/socket.c:1087)\n new_sync_read (.\/include\/linux\/fs.h:2052 fs\/read_write.c:401)\n vfs_read (fs\/read_write.c:482)\n ksys_read (fs\/read_write.c:620)\n do_syscall_64 (arch\/x86\/entry\/common.c:50 arch\/x86\/entry\/common.c:80)\n entry_SYSCALL_64_after_hwframe (arch\/x86\/entry\/entry_64.S:120)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Bluetooth: L2CAP: Se corrige eluse-after-free causado por l2cap_reassemble_sdu. Se corrige la condición de ejecución entre los dos flujos que se ejecutan en paralelo: 1. l2cap_reassemble_sdu -&gt; chan-&gt;ops-&gt;recv (l2cap_sock_recv_cb) -&gt; __sock_queue_rcv_skb. 2. bt_sock_recvmsg -&gt; skb_recv_datagram, skb_free_datagram. Un SKB puede ser puesto en cola por el primer flujo e inmediatamente desencolado y liberado por el segundo flujo; por lo tanto, quienes llaman a l2cap_reassemble_sdu no pueden usar el SKB después del retorno de la función. Sin embargo, en algunos lugares, se continúa accediendo a la estructura l2cap_ctrl, que reside en el CB de la SKB, durante un breve periodo después del retorno de l2cap_reassemble_sdu, lo que genera una condición de use-after-free (el seguimiento de la pila se encuentra a continuación; los números de línea corresponden al kernel 5.19.8). Para solucionarlo, mantenga una copia local de la estructura l2cap_ctrl. ERROR: KASAN: use-after-free en l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth Lectura de tamaño 1 en la dirección ffff88812025f2f0 por la tarea kworker\/u17:3\/43169 Cola de trabajo: hci0 hci_rx_work [bluetooth] Rastreo de llamadas:   dump_stack_lvl (lib\/dump_stack.c:107 (discriminator 4)) print_report.cold (mm\/kasan\/report.c:314 mm\/kasan\/report.c:429) ? l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth kasan_report (mm\/kasan\/report.c:162 mm\/kasan\/report.c:493) ? l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth l2cap_rx_state_recv (net\/bluetooth\/l2cap_core.c:6906) bluetooth l2cap_rx (net\/bluetooth\/l2cap_core.c:7236 net\/bluetooth\/l2cap_core.c:7271) bluetooth ret_from_fork (arch\/x86\/entry\/entry_64.S:306)  Allocated by task 43169: kasan_save_stack (mm\/kasan\/common.c:39) __kasan_slab_alloc (mm\/kasan\/common.c:45 mm\/kasan\/common.c:436 mm\/kasan\/common.c:469) kmem_cache_alloc_node (mm\/slab.h:750 mm\/slub.c:3243 mm\/slub.c:3293) __alloc_skb (net\/core\/skbuff.c:414) l2cap_recv_frag (.\/include\/net\/bluetooth\/bluetooth.h:425 net\/bluetooth\/l2cap_core.c:8329) bluetooth l2cap_recv_acldata (net\/bluetooth\/l2cap_core.c:8442) bluetooth hci_rx_work (net\/bluetooth\/hci_core.c:3642 net\/bluetooth\/hci_core.c:3832) bluetooth process_one_work (kernel\/workqueue.c:2289) worker_thread (.\/include\/linux\/list.h:292 kernel\/workqueue.c:2437) kthread (kernel\/kthread.c:376) ret_from_fork (arch\/x86\/entry\/entry_64.S:306) Freed by task 27920: kasan_save_stack (mm\/kasan\/common.c:39) kasan_set_track (mm\/kasan\/common.c:45) kasan_set_free_info (mm\/kasan\/generic.c:372) ____kasan_slab_free (mm\/kasan\/common.c:368 mm\/kasan\/common.c:328) slab_free_freelist_hook (mm\/slub.c:1780) kmem_cache_free (mm\/slub.c:3536 mm\/slub.c:3553) skb_free_datagram (.\/include\/net\/sock.h:1578 .\/include\/net\/sock.h:1639 net\/core\/datagram.c:323) bt_sock_recvmsg (net\/bluetooth\/af_bluetooth.c:295) bluetooth l2cap_sock_recvmsg (net\/bluetooth\/l2cap_sock.c:1212) bluetooth sock_read_iter (net\/socket.c:1087) new_sync_read (.\/include\/linux\/fs.h:2052 fs\/read_write.c:401) vfs_read (fs\/read_write.c:482) ksys_read (fs\/read_write.c:620) do_syscall_64 (arch\/x86\/entry\/common.c:50 arch\/x86\/entry\/common.c:80) entry_SYSCALL_64_after_hwframe (arch\/x86\/entry\/entry_64.S:120) "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03af22e23b96fb7ef75fb7885407ef457e8b403d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3aff8aaca4e36dc8b17eaa011684881a80238966","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cd094fd5d872862ca278e15b9b51b07e915ef3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c7407bfbeafc80a04e6eaedcf34d378532a04f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8278a87bb1eeea94350d675ef961ee5a03341fde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a04161244603f502c6e453913e51edd59cb70c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb1c012099ef5904cd468bdb8d6fcdfdd9bcb569","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc30e05bb18852303084430c03ca76e69257d9ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49911","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.260","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: enforce documented limit to prevent allocating huge memory\n\nDaniel Xu reported that the hash:net,iface type of the ipset subsystem does\nnot limit adding the same network with different interfaces to a set, which\ncan lead to huge memory usage or allocation failure.\n\nThe quick reproducer is\n\n$ ipset create ACL.IN.ALL_PERMIT hash:net,iface hashsize 1048576 timeout 0\n$ for i in $(seq 0 100); do \/sbin\/ipset add ACL.IN.ALL_PERMIT 0.0.0.0\/0,kaf_$i timeout 0 -exist; done\n\nThe backtrace when vmalloc fails:\n\n        [Tue Oct 25 00:13:08 2022] ipset: vmalloc error: size 1073741848, exceeds total pages\n        <...>\n        [Tue Oct 25 00:13:08 2022] Call Trace:\n        [Tue Oct 25 00:13:08 2022]  <TASK>\n        [Tue Oct 25 00:13:08 2022]  dump_stack_lvl+0x48\/0x60\n        [Tue Oct 25 00:13:08 2022]  warn_alloc+0x155\/0x180\n        [Tue Oct 25 00:13:08 2022]  __vmalloc_node_range+0x72a\/0x760\n        [Tue Oct 25 00:13:08 2022]  ? hash_netiface4_add+0x7c0\/0xb20\n        [Tue Oct 25 00:13:08 2022]  ? __kmalloc_large_node+0x4a\/0x90\n        [Tue Oct 25 00:13:08 2022]  kvmalloc_node+0xa6\/0xd0\n        [Tue Oct 25 00:13:08 2022]  ? hash_netiface4_resize+0x99\/0x710\n        <...>\n\nThe fix is to enforce the limit documented in the ipset(8) manpage:\n\n>  The internal restriction of the hash:net,iface set type is that the same\n>  network prefix cannot be stored with more than 64 different interfaces\n>  in a single set."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: ipset: aplicar el límite documentado para evitar la asignación de grandes cantidades de memoria. Daniel Xu informó que el tipo hash:net,iface del subsistema ipset no limita la adición de la misma red con diferentes interfaces a un conjunto, lo que puede provocar un uso excesivo de memoria o fallos de asignación. El reproductor rápido es: $ ipset create ACL.IN.ALL_PERMIT hash:net,iface hashsize 1048576 timeout 0 $ for i in $(seq 0 100); do \/sbin\/ipset add ACL.IN.ALL_PERMIT 0.0.0.0\/0,kaf_$i timeout 0 -exist; hecho El backtrace cuando vmalloc falla: [Tue Oct 25 00:13:08 2022] ipset: vmalloc error: size 1073741848, exceeds total pages &lt;...&gt; [Tue Oct 25 00:13:08 2022] Call Trace: [Tue Oct 25 00:13:08 2022]  [Tue Oct 25 00:13:08 2022] dump_stack_lvl+0x48\/0x60 [Tue Oct 25 00:13:08 2022] warn_alloc+0x155\/0x180 [Tue Oct 25 00:13:08 2022] __vmalloc_node_range+0x72a\/0x760 [Tue Oct 25 00:13:08 2022] ? hash_netiface4_add+0x7c0\/0xb20 [Tue Oct 25 00:13:08 2022] ? __kmalloc_large_node+0x4a\/0x90 [Tue Oct 25 00:13:08 2022] kvmalloc_node+0xa6\/0xd0 [Tue Oct 25 00:13:08 2022] ? hash_netiface4_resize+0x99\/0x710 &lt;...&gt;  La solución es aplicar el límite documentado en la página de manual de ipset(8): &gt; La restricción interna del tipo de conjunto hash:net,iface es que el mismo prefijo de red no se puede almacenar con más de 64 interfaces diferentes en un solo conjunto."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42d20d5e24575c9afa2d66d9a51e7386db9514f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/510841da1fcc16f702440ab58ef0b4d82a9056b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a37ef32fe5956fe9248df68f6a61997845ba047e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49912","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.363","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix ulist leaks in error paths of qgroup self tests\n\nIn the test_no_shared_qgroup() and test_multiple_refs() qgroup self tests,\nif we fail to add the tree ref, remove the extent item or remove the\nextent ref, we are returning from the test function without freeing the\n\"old_roots\" ulist that was allocated by the previous calls to\nbtrfs_find_all_roots(). Fix that by calling ulist_free() before returning."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: se corrigen fugas de ulist en las rutas de error de las autopruebas de qgroup. En las autopruebas de qgroup test_no_shared_qgroup() y test_multiple_refs(), si no se añade la referencia del árbol, se elimina el elemento de extensión o se elimina la referencia de extensión, se regresa de la función de prueba sin liberar la ulist \"old_roots\" asignada por las llamadas anteriores a btrfs_find_all_roots(). Se puede solucionar llamando a ulist_free() antes de regresar."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a0dead4ad1a2e2a9bdf133ef45111d7c8daef84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/203204798831c35d855ecc6417d98267d2d2184b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f58283d83a588ff5da62fc150de19e798ed2ec2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d1a47ebf84540e40b5b43fc21aef0d6c0f627d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d37de92b38932d40e4a251e876cc388f9aee5f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d81370396025cf63a7a1b5f8bb25a3479203b2ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da7003434bcab0ae9aba3f2c003e734cae093326","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f46ea5fa3320dca4fe0c0926b49a5f14cb85de62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49913","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.477","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix inode list leak during backref walking at find_parent_nodes()\n\nDuring backref walking, at find_parent_nodes(), if we are dealing with a\ndata extent and we get an error while resolving the indirect backrefs, at\nresolve_indirect_refs(), or in the while loop that iterates over the refs\nin the direct refs rbtree, we end up leaking the inode lists attached to\nthe direct refs we have in the direct refs rbtree that were not yet added\nto the refs ulist passed as argument to find_parent_nodes(). Since they\nwere not yet added to the refs ulist and prelim_release() does not free\nthe lists, on error the caller can only free the lists attached to the\nrefs that were added to the refs ulist, all the remaining refs get their\ninode lists never freed, therefore leaking their memory.\n\nFix this by having prelim_release() always free any attached inode list\nto each ref found in the rbtree, and have find_parent_nodes() set the\nref's inode list to NULL once it transfers ownership of the inode list\nto a ref added to the refs ulist passed to find_parent_nodes()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: corrección de fuga de lista de inodos durante el recorrido de backref en find_parent_nodes() Durante el recorrido de backref, en find_parent_nodes(), si estamos tratando con una extensión de datos y obtenemos un error al resolver los backrefs indirectos, en resolve_indirect_refs(), o en el bucle while que itera sobre los refs en el rbtree de refs directos, terminamos filtrando las listas de inodos adjuntas a los refs directos que tenemos en el rbtree de refs directos que aún no se agregaron a la ulist de refs pasada como argumento a find_parent_nodes(). Dado que aún no se agregaron a la ulist de refs y prelim_release() no libera las listas, en caso de error, el llamador solo puede liberar las listas adjuntas a los refs que se agregaron a la ulist de refs, todas las referencias restantes obtienen sus listas de inodos nunca liberadas, por lo tanto, filtran su memoria. Para solucionar este problema, haga que prelim_release() siempre libere cualquier lista de inodos adjunta a cada referencia encontrada en el rbtree y que find_parent_nodes() establezca la lista de inodos de la referencia en NULL una vez que transfiera la propiedad de la lista de inodos a una referencia agregada a la lista de referencias pasada a find_parent_nodes()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/222a3d533027b9492d5b7f5ecdc01a90f57bb5a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61e06128113711df0534c404fb6bb528eb7d2332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a6731a0df8c47ecc703bd7bb73459df767051e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83ea8c5b54d452a5769e605e3c5c687e8ca06d89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92876eec382a0f19f33d09d2c939e9ca49038ae5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49914","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.593","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix inode list leak during backref walking at resolve_indirect_refs()\n\nDuring backref walking, at resolve_indirect_refs(), if we get an error\nwe jump to the 'out' label and call ulist_free() on the 'parents' ulist,\nwhich frees all the elements in the ulist - however that does not free\nany inode lists that may be attached to elements, through the 'aux' field\nof a ulist node, so we end up leaking lists if we have any attached to\nthe unodes.\n\nFix this by calling free_leaf_list() instead of ulist_free() when we exit\nfrom resolve_indirect_refs(). The static function free_leaf_list() is\nmoved up for this to be possible and it's slightly simplified by removing\nunnecessary code."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: corrección de fuga de lista de inodos durante el recorrido de backref en resolve_indirect_refs() Durante el recorrido de backref, en resolve_indirect_refs(), si obtenemos un error saltamos a la etiqueta 'out' y llamamos a ulist_free() en la ulist 'parents', que libera todos los elementos en la ulist - sin embargo, eso no libera ninguna lista de inodos que pueda estar adjunta a elementos, a través del campo 'aux' de un nodo ulist, por lo que terminamos filtrando listas si tenemos alguna adjunta a los unodes. Arregle esto llamando a free_leaf_list() en lugar de ulist_free() cuando salimos de resolve_indirect_refs(). La función estática free_leaf_list() se mueve hacia arriba para que esto sea posible y se simplifica ligeramente eliminando código innecesario."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c0329406bb28109c07c6e23e5e3e0fa618a95d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/396515db923ad5cbeb179d6b88927870b4cbebb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5614dc3a47e3310fbc77ea3b67eaadd1c6417bf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ba3479f9e96b9ad460c7e77abc26dd16e5dec4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a52e24c7fcc3c5ce3588a14e3663c00868d36623","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1dc9019bb5f89abae85645de1a2dd4830c1f8e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cded2c89774b99b67c98147ae103ea878c92a206","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49915","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.710","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible memory leak in mISDN_register_device()\n\nAfer commit 1fa5ae857bb1 (\"driver core: get rid of struct device's\nbus_id string array\"), the name of device is allocated dynamically,\nadd put_device() to give up the reference, so that the name can be\nfreed in kobject_cleanup() when the refcount is 0.\n\nSet device class before put_device() to avoid null release() function\nWARN message in device_release()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mISDN: se corrige una posible pérdida de memoria en mISDN_register_device() Después de el commit 1fa5ae857bb1 (\"núcleo del controlador: deshacerse de la matriz de cadenas bus_id del dispositivo de estructura\"), el nombre del dispositivo se asigna dinámicamente, agregue put_device() para renunciar a la referencia, de modo que el nombre se pueda liberar en kobject_cleanup() cuando el refcount sea 0. Establezca la clase del dispositivo antes de put_device() para evitar el mensaje WARN de la función release() nula en device_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/029d5b7688a2f3a86f2a3be5a6ba9cc968c80e41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/080aabfb29b2ee9cbb8894a1d039651943d3773e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0d4e91efcaee081e919b3c50e875ecbb84290e41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ff6b669523d3b3d253a044fa9636a67d0694995","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a636fc5a7cabd05699b5692ad838c2c7a3abec7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1d1aede313eb2b9a84afd60ff6cfb7c33631e0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e77d213843e67b4373285712699b692f9c743f61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7d1d4d9ac0dfa40be4c2c8abd0731659869b297","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49916","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.820","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrose: Fix NULL pointer dereference in rose_send_frame()\n\nThe syzkaller reported an issue:\n\nKASAN: null-ptr-deref in range [0x0000000000000380-0x0000000000000387]\nCPU: 0 PID: 4069 Comm: kworker\/0:15 Not tainted 6.0.0-syzkaller-02734-g0326074ff465 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/22\/2022\nWorkqueue: rcu_gp srcu_invoke_callbacks\nRIP: 0010:rose_send_frame+0x1dd\/0x2f0 net\/rose\/rose_link.c:101\nCall Trace:\n <IRQ>\n rose_transmit_clear_request+0x1d5\/0x290 net\/rose\/rose_link.c:255\n rose_rx_call_request+0x4c0\/0x1bc0 net\/rose\/af_rose.c:1009\n rose_loopback_timer+0x19e\/0x590 net\/rose\/rose_loopback.c:111\n call_timer_fn+0x1a0\/0x6b0 kernel\/time\/timer.c:1474\n expire_timers kernel\/time\/timer.c:1519 [inline]\n __run_timers.part.0+0x674\/0xa80 kernel\/time\/timer.c:1790\n __run_timers kernel\/time\/timer.c:1768 [inline]\n run_timer_softirq+0xb3\/0x1d0 kernel\/time\/timer.c:1803\n __do_softirq+0x1d0\/0x9c8 kernel\/softirq.c:571\n [...]\n <\/IRQ>\n\nIt triggers NULL pointer dereference when 'neigh->dev->dev_addr' is\ncalled in the rose_send_frame(). It's the first occurrence of the\n`neigh` is in rose_loopback_timer() as `rose_loopback_neigh', and\nthe 'dev' in 'rose_loopback_neigh' is initialized sa nullptr.\n\nIt had been fixed by commit 3b3fd068c56e3fbea30090859216a368398e39bf\n(\"rose: Fix Null pointer dereference in rose_send_frame()\") ever.\nBut it's introduced by commit 3c53cd65dece47dd1f9d3a809f32e59d1d87b2b8\n(\"rose: check NULL rose_loopback_neigh->loopback\") again.\n\nWe fix it by add NULL check in rose_transmit_clear_request(). When\nthe 'dev' in 'neigh' is NULL, we don't reply the request and just\nclear it.\n\nsyzkaller don't provide repro, and I provide a syz repro like:\nr0 = syz_init_net_socket$bt_sco(0x1f, 0x5, 0x2)\nioctl$sock_inet_SIOCSIFFLAGS(r0, 0x8914, &(0x7f0000000180)={'rose0\\x00', 0x201})\nr1 = syz_init_net_socket$rose(0xb, 0x5, 0x0)\nbind$rose(r1, &(0x7f00000000c0)=@full={0xb, @dev, @null, 0x0, [@null, @null, @netrom, @netrom, @default, @null]}, 0x40)\nconnect$rose(r1, &(0x7f0000000240)=@short={0xb, @dev={0xbb, 0xbb, 0xbb, 0x1, 0x0}, @remote={0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1}, 0x1, @netrom={0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0x0, 0x0}}, 0x1c)"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: rose: Se corrige la desreferencia del puntero NULL en rose_send_frame() Syzkaller informó un problema: KASAN: null-ptr-deref en el rango [0x0000000000000380-0x0000000000000387] CPU: 0 PID: 4069 Comm: kworker\/0:15 No contaminado 6.0.0-syzkaller-02734-g0326074ff465 #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 22\/09\/2022 Cola de trabajo: rcu_gp srcu_invoke_callbacks RIP: 0010:rose_send_frame+0x1dd\/0x2f0 net\/rose\/rose_link.c:101 Rastreo de llamadas:  rose_transmit_clear_request+0x1d5\/0x290 net\/rose\/rose_link.c:255 rose_rx_call_request+0x4c0\/0x1bc0 net\/rose\/af_rose.c:1009 rose_loopback_timer+0x19e\/0x590 net\/rose\/rose_loopback.c:111 call_timer_fn+0x1a0\/0x6b0 kernel\/time\/timer.c:1474 expire_timers kernel\/time\/timer.c:1519 [en línea] __run_timers.part.0+0x674\/0xa80 kernel\/time\/timer.c:1790 __run_timers kernel\/time\/timer.c:1768 [en línea] run_timer_softirq+0xb3\/0x1d0 kernel\/time\/timer.c:1803 __do_softirq+0x1d0\/0x9c8 kernel\/softirq.c:571 [...]  Activa la desreferencia de puntero nulo cuando se llama a 'neigh-&gt;dev-&gt;dev_addr' en rose_send_frame(). Es la primera vez que `neigh` aparece en rose_loopback_timer() como `rose_loopback_neigh', y `dev' en `rose_loopback_neigh' se inicializa como nullptr. Se corrigió con el commit 3b3fd068c56e3fbea30090859216a368398e39bf (\"rose: Corregir la desreferencia de puntero nulo en rose_send_frame()\"). Pero esto se introduce de nuevo con el commit 3c53cd65dece47dd1f9d3a809f32e59d1d87b2b8 (\"rose: check NULL rose_loopback_neigh-&gt;loopback\"). Lo solucionamos añadiendo una comprobación NULL en rose_transmit_clear_request(). Cuando el valor de \"dev\" en \"neigh\" es NULL, no respondemos a la solicitud y simplemente la borramos. syzkaller no proporciona reproducción, y yo proporciono una reproducción syz como: r0 = syz_init_net_socket$bt_sco(0x1f, 0x5, 0x2) ioctl$sock_inet_SIOCSIFFLAGS(r0, 0x8914, &amp;(0x7f0000000180)={'rose0\\x00', 0x201}) r1 = syz_init_net_socket$rose(0xb, 0x5, 0x0) bind$rose(r1, &amp;(0x7f00000000c0)=@full={0xb, @dev, @null, 0x0, [@null, @null, @netrom, @netrom, @default, @null]}, 0x40) conectar$rosa(r1, &amp;(0x7f0000000240)=@corto={0xb, @dev={0xbb, 0xbb, 0xbb, 0x1, 0x0}, @remoto={0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x1}, 0x1, @netrom={0xbb, 0xbb, 0xbb, 0xbb, 0xbb, 0x0, 0x0}}, 0x1c)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b9c68c121847d05a4ccef68244dadf82bfa331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e2129c67daca21043a26575108f6286c85e71f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b46adfbee1e429f33b10a88d6c00fa88f3d6c77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a601e5eded33bb88b8a42743db8fef3ad41dd97e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b13be5e852b03f376058027e462fad4230240891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbc03d74e641e824754443b908454ca9e203773e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e97c089d7a49f67027395ddf70bf327eeac2611e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f06186e5271b980bac03f5c97276ed0146ddc9b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49917","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:16.927","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: fix WARNING in ip_vs_app_net_cleanup()\n\nDuring the initialization of ip_vs_app_net_init(), if file ip_vs_app\nfails to be created, the initialization is successful by default.\nTherefore, the ip_vs_app file doesn't be found during the remove in\nip_vs_app_net_cleanup(). It will cause WRNING.\n\nThe following is the stack information:\nname 'ip_vs_app'\nWARNING: CPU: 1 PID: 9 at fs\/proc\/generic.c:712 remove_proc_entry+0x389\/0x460\nModules linked in:\nWorkqueue: netns cleanup_net\nRIP: 0010:remove_proc_entry+0x389\/0x460\nCall Trace:\n<TASK>\nops_exit_list+0x125\/0x170\ncleanup_net+0x4ea\/0xb00\nprocess_one_work+0x9bf\/0x1710\nworker_thread+0x665\/0x1080\nkthread+0x2e4\/0x3a0\nret_from_fork+0x1f\/0x30\n<\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ipvs: corrección de una advertencia en ip_vs_app_net_cleanup(). Durante la inicialización de ip_vs_app_net_init(), si no se crea el archivo ip_vs_app, la inicialización se realiza correctamente por defecto. Por lo tanto, el archivo ip_vs_app no se encuentra durante la eliminación en ip_vs_app_net_cleanup(). Esto provocará un error WRNING. La siguiente es la información de la pila: nombre 'ip_vs_app' ADVERTENCIA: CPU: 1 PID: 9 en fs\/proc\/generic.c:712 remove_proc_entry+0x389\/0x460 Módulos vinculados en: Cola de trabajo: netns cleanup_net RIP: 0010:remove_proc_entry+0x389\/0x460 Seguimiento de llamadas:  ops_exit_list+0x125\/0x170 cleanup_net+0x4ea\/0xb00 process_one_work+0x9bf\/0x1710 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30  "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06d7596d18725f1a93cf817662d36050e5afb989","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c8d81bdb2684d53d6cedad7410ba4cf9090e343","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5663ed63adb9619c98ab7479aa4606fa9b7a548c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8457a00c981fe1a799ce34123908856b0f5973b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97f872b00937f2689bff2dab4ad9ed259482840f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adc76740ccd52e4a1d910767cd1223e134a7078b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49918","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.060","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: fix WARNING in __ip_vs_cleanup_batch()\n\nDuring the initialization of ip_vs_conn_net_init(), if file ip_vs_conn\nor ip_vs_conn_sync fails to be created, the initialization is successful\nby default. Therefore, the ip_vs_conn or ip_vs_conn_sync file doesn't\nbe found during the remove.\n\nThe following is the stack information:\nname 'ip_vs_conn_sync'\nWARNING: CPU: 3 PID: 9 at fs\/proc\/generic.c:712\nremove_proc_entry+0x389\/0x460\nModules linked in:\nWorkqueue: netns cleanup_net\nRIP: 0010:remove_proc_entry+0x389\/0x460\nCall Trace:\n<TASK>\n__ip_vs_cleanup_batch+0x7d\/0x120\nops_exit_list+0x125\/0x170\ncleanup_net+0x4ea\/0xb00\nprocess_one_work+0x9bf\/0x1710\nworker_thread+0x665\/0x1080\nkthread+0x2e4\/0x3a0\nret_from_fork+0x1f\/0x30\n<\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ipvs: corrección de una ADVERTENCIA en __ip_vs_cleanup_batch(). Durante la inicialización de ip_vs_conn_net_init(), si no se crea el archivo ip_vs_conn o ip_vs_conn_sync, la inicialización se realiza correctamente por defecto. Por lo tanto, no se encuentra el archivo ip_vs_conn o ip_vs_conn_sync durante la eliminación. La siguiente es la información de la pila: nombre 'ip_vs_conn_sync' ADVERTENCIA: CPU: 3 PID: 9 en fs\/proc\/generic.c:712 remove_proc_entry+0x389\/0x460 Módulos vinculados en: Cola de trabajo: netns cleanup_net RIP: 0010:remove_proc_entry+0x389\/0x460 Seguimiento de llamadas:  __ip_vs_cleanup_batch+0x7d\/0x120 ops_exit_list+0x125\/0x170 cleanup_net+0x4ea\/0xb00 process_one_work+0x9bf\/0x1710 worker_thread+0x665\/0x1080 kthread+0x2e4\/0x3a0 ret_from_fork+0x1f\/0x30 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d00c6a0da8ddcf75213e004765e4a42acc71d5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee2d6b726b0ce339e36569e5849692f4cf4595e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7effc4ce3d1434ce6ff286866585a6e905fdbfc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/931f56d59c854263b32075bfac56fdb3b1598d1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e724220b826e008764309d2a1f55a9434a4e1530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f08ee2aa24c076f81d84e26e213d8c6f4efd9f50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49919","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.380","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: release flow rule object from commit path\n\nNo need to postpone this to the commit release path, since no packets\nare walking over this object, this is accessed from control plane only.\nThis helped uncovered UAF triggered by races with the netlink notifier."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: nf_tables: liberación del objeto de regla de flujo desde la ruta de confirmación. No es necesario posponer esto hasta la ruta de liberación de la confirmación, ya que ningún paquete pasa por este objeto; solo se accede a él desde el plano de control. Esto ayudó a descubrir el UAF activado por ejecuciones con el notificador netlink."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26b5934ff4194e13196bedcba373cd4915071d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ab6f96444e936f5e4a936d5c0bc948144bcded3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6044791b7be707fd0e709f26e961a446424e5051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74fd5839467054cd9c4d050614d3ee8788386171","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2d7a92aff0fbd93c29d2aa6451fb99f050e2c4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49920","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.517","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: netlink notifier might race to release objects\n\ncommit release path is invoked via call_rcu and it runs lockless to\nrelease the objects after rcu grace period. The netlink notifier handler\nmight win race to remove objects that the transaction context is still\nreferencing from the commit release path.\n\nCall rcu_barrier() to ensure pending rcu callbacks run to completion\nif the list of transactions to be destroyed is not empty."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: nf_tables: el notificador netlink podría acelerar la liberación de objetos. La ruta de liberación de confirmación se invoca mediante call_rcu y se ejecuta sin bloqueo para liberar los objetos después del período de gracia de rcu. El controlador del notificador netlink podría ganar la ejecución para eliminar objetos de la ruta de liberación de confirmación a los que el contexto de la transacción aún hace referencia. Se debe llamar a rcu_barrier() para garantizar que las devoluciones de llamada rcu pendientes se ejecuten por completo si la lista de transacciones a destruir no está vacía."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ffe7100411a8b9015115ce124cd6c9c9da6f8e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4bc8271db21ea9f1c86a1ca4d64999f184d4aae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e40b7c44d19e327ad8b49a491ef1fa8dcc4566e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49921","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.627","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: Fix use after free in red_enqueue()\n\nWe can't use \"skb\" again after passing it to qdisc_enqueue().  This is\nbasically identical to commit 2f09707d0c97 (\"sch_sfb: Also store skb\nlen before calling child enqueue\")."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: sched: Se corrige el use after free en red_enqueue(). No podemos volver a usar \"skb\" después de pasarlo a qdisc_enqueue(). Esto es prácticamente idéntico a el commit 2f09707d0c97 (\"sch_sfb: También se almacena la longitud de skb antes de llamar a la cola secundaria\")."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/170e5317042c302777ed6d59fdb84af9b0219d4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52e0429471976785c155bfbf51d80990c6cd46e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5960b9081baca85cc7dcb14aec1de85999ea9d36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/795afe0b9bb6c915f0299a8e309936519be01619","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bdc2acd420c6f3dd1f1c78750ec989f02a1e2b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a238cdcf2bdc72207c74375fc8be13ee549ca9db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e877f8fa49fbccc63cb2df2e9179bddc695b825a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc4b50adb400ee5ec527a04073174e8e73a139fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49922","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.747","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nfcmrvl: Fix potential memory leak in nfcmrvl_i2c_nci_send()\n\nnfcmrvl_i2c_nci_send() will be called by nfcmrvl_nci_send(), and skb\nshould be freed in nfcmrvl_i2c_nci_send(). However, nfcmrvl_nci_send()\nwill only free skb when i2c_master_send() return >=0, which means skb\nwill memleak when i2c_master_send() failed. Free skb no matter whether\ni2c_master_send() succeeds."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nfc: nfcmrvl: Se corrige una posible fuga de memoria en nfcmrvl_i2c_nci_send(). nfcmrvl_i2c_nci_send() será llamado por nfcmrvl_nci_send(), y skb debería liberarse en nfcmrvl_i2c_nci_send(). Sin embargo, nfcmrvl_nci_send() solo liberará skb cuando i2c_master_send() devuelva &gt;=0, lo que significa que skb sufrirá fugas de memoria si i2c_master_send() falla. Skb se libera independientemente de si i2c_master_send() tiene éxito."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52438e734c1566f5e2bcd9a065d2d65e306c0555","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dfdac5e3f8db5f4445228c44f64091045644a3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/825656ae61e73ddc05f585e6258d284c87064b10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92a1df9c6da20c02cf9872f8b025a66ddb307aeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93d904a734a74c54d945a9884b4962977f1176cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8e7d4a1166f063703955f1b2e765a6db5bf1771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd0ee55ead91fbb16889dbe7ff0b0f7c9e4e849d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f30060efcf18883748a0541aa41acef183cd9c0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49923","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:17.900","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nxp-nci: Fix potential memory leak in nxp_nci_send()\n\nnxp_nci_send() will call nxp_nci_i2c_write(), and only free skb when\nnxp_nci_i2c_write() failed. However, even if the nxp_nci_i2c_write()\nrun succeeds, the skb will not be freed in nxp_nci_i2c_write(). As the\nresult, the skb will memleak. nxp_nci_send() should also free the skb\nwhen nxp_nci_i2c_write() succeeds."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nfc: nxp-nci: Se corrige una posible fuga de memoria en nxp_nci_send(). nxp_nci_send() llamará a nxp_nci_i2c_write() y solo liberará skb cuando nxp_nci_i2c_write() falle. Sin embargo, incluso si la ejecución de nxp_nci_i2c_write() tiene éxito, skb no se liberará en nxp_nci_i2c_write(). Como resultado, skb sufrirá una fuga de memoria. nxp_nci_send() también debería liberar skb cuando nxp_nci_i2c_write() tenga éxito."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cba1f061bfe23fece2841129ca2862cdec29d5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ecf0f4227029b2c42e036b10ff6e5d09e20821e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bf1ed6aff0f70434bd0cdd45495e83f1dffb551","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ae2c9a91ff068f4c3e392f47e8e26a1c9f85ebb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49924","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.170","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: fdp: Fix potential memory leak in fdp_nci_send()\n\nfdp_nci_send() will call fdp_nci_i2c_write that will not free skb in\nthe function. As a result, when fdp_nci_i2c_write() finished, the skb\nwill memleak. fdp_nci_send() should free skb after fdp_nci_i2c_write()\nfinished."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nfc: fdp: Se corrige una posible fuga de memoria en fdp_nci_send(). fdp_nci_send() llamará a fdp_nci_i2c_write, lo que no liberará skb en la función. Como resultado, al finalizar fdp_nci_i2c_write(), skb sufrirá una fuga de memoria. fdp_nci_send() debería liberar skb después de finalizar fdp_nci_i2c_write()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a7a898f8f7b56c0eaa2baf67a0c96235a30bc29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44bc1868a4f542502ea2221fe5ad88ca66d1c6b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e4aae6b8ca76afb1fb64dcb24be44ba814e7f8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8c11ee2d07f7c4dfa2ac0ea8efc4f627e58ea57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49925","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.337","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/core: Fix null-ptr-deref in ib_core_cleanup()\n\nKASAN reported a null-ptr-deref error:\n\n  KASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]\n  CPU: 1 PID: 379\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n  RIP: 0010:destroy_workqueue+0x2f\/0x740\n  RSP: 0018:ffff888016137df8 EFLAGS: 00000202\n  ...\n  Call Trace:\n   ib_core_cleanup+0xa\/0xa1 [ib_core]\n   __do_sys_delete_module.constprop.0+0x34f\/0x5b0\n   do_syscall_64+0x3a\/0x90\n   entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n  RIP: 0033:0x7fa1a0d221b7\n  ...\n\nIt is because the fail of roce_gid_mgmt_init() is ignored:\n\n ib_core_init()\n   roce_gid_mgmt_init()\n     gid_cache_wq = alloc_ordered_workqueue # fail\n ...\n ib_core_cleanup()\n   roce_gid_mgmt_cleanup()\n     destroy_workqueue(gid_cache_wq)\n     # destroy an unallocated wq\n\nFix this by catching the fail of roce_gid_mgmt_init() in ib_core_init()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA\/core: Fix null-ptr-deref en ib_core_cleanup() KASAN informó un error null-ptr-deref: KASAN: null-ptr-deref en el rango [0x0000000000000118-0x000000000000011f] CPU: 1 PID: 379 Nombre del hardware: QEMU Standard PC (i440FX + PIIX, 1996) RIP: 0010:destroy_workqueue+0x2f\/0x740 RSP: 0018:ffff888016137df8 EFLAGS: 00000202 ... Seguimiento de llamadas:  ib_core_cleanup+0xa\/0xa1 [ib_core] __do_sys_delete_module.constprop.0+0x34f\/0x5b0 do_syscall_64+0x3a\/0x90 entry_SYSCALL_64_after_hwframe+0x63\/0xcd RIP: 0033:0x7fa1a0d221b7 ... It is because the fail of roce_gid_mgmt_init() is ignored: ib_core_init() roce_gid_mgmt_init() gid_cache_wq = alloc_ordered_workqueue # fail ... ib_core_cleanup() roce_gid_mgmt_cleanup() destroy_workqueue(gid_cache_wq) # destroy an unallocated wq Fix this by catching the fail of roce_gid_mgmt_init() in ib_core_init(). "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07c0d131cc0fe1f3981a42958fc52d573d303d89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b3d5dcb12347f3518308c2c9d2cf72453a3e1e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab817f75e5e0fa58d9be0825da6a7b7d8a1fa1d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af8fb5a0600e9ae29950e9422a032c3c22649ee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d360e875c011a005628525bf290322058927e7dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49926","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.440","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: Fix possible memory leaks in dsa_loop_init()\n\nkmemleak reported memory leaks in dsa_loop_init():\n\nkmemleak: 12 new suspected memory leaks\n\nunreferenced object 0xffff8880138ce000 (size 2048):\n  comm \"modprobe\", pid 390, jiffies 4295040478 (age 238.976s)\n  backtrace:\n    [<000000006a94f1d5>] kmalloc_trace+0x26\/0x60\n    [<00000000a9c44622>] phy_device_create+0x5d\/0x970\n    [<00000000d0ee2afc>] get_phy_device+0xf3\/0x2b0\n    [<00000000dca0c71f>] __fixed_phy_register.part.0+0x92\/0x4e0\n    [<000000008a834798>] fixed_phy_register+0x84\/0xb0\n    [<0000000055223fcb>] dsa_loop_init+0xa9\/0x116 [dsa_loop]\n    ...\n\nThere are two reasons for memleak in dsa_loop_init().\n\nFirst, fixed_phy_register() create and register phy_device:\n\nfixed_phy_register()\n  get_phy_device()\n    phy_device_create() # freed by phy_device_free()\n  phy_device_register() # freed by phy_device_remove()\n\nBut fixed_phy_unregister() only calls phy_device_remove().\nSo the memory allocated in phy_device_create() is leaked.\n\nSecond, when mdio_driver_register() fail in dsa_loop_init(),\nit just returns and there is no cleanup for phydevs.\n\nFix the problems by catching the error of mdio_driver_register()\nin dsa_loop_init(), then calling both fixed_phy_unregister() and\nphy_device_free() to release phydevs.\nAlso add a function for phydevs cleanup to avoid duplacate."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: dsa: Se corrigen posibles fugas de memoria en dsa_loop_init() kmemleak informó de fugas de memoria en dsa_loop_init(): kmemleak: 12 nuevas fugas de memoria sospechosas objeto no referenciado 0xffff8880138ce000 (tamaño 2048): comm \"modprobe\", pid 390, jiffies 4295040478 (edad 238,976 s) backtrace: [&lt;000000006a94f1d5&gt;] kmalloc_trace+0x26\/0x60 [&lt;00000000a9c44622&gt;] phy_device_create+0x5d\/0x970 [&lt;00000000d0ee2afc&gt;] Hay dos razones para la pérdida de memoria en dsa_loop_init(). Primero, fixed_phy_register() crea y registra phy_device: fixed_phy_register() get_phy_device() phy_device_create() # liberado por phy_device_free() phy_device_register() # liberado por phy_device_remove() Pero fixed_phy_unregister() solo llama a phy_device_remove(). Por lo tanto, la memoria asignada en phy_device_create() se filtra. Segundo, cuando mdio_driver_register() falla en dsa_loop_init(), simplemente regresa y no hay limpieza para phydevs. Solucione los problemas capturando el error de mdio_driver_register() en dsa_loop_init(), luego llame a fixed_phy_unregister() y phy_device_free() para liberar phydevs. También agregue una función para la limpieza de phydevs para evitar la duplicación."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37a098fc9b42bd7fce66764866aa514639667b6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d2024b138d9f7b02ae13ee997fd3a71e9e46254","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/633efc8b3dc96f56f5a57f2a49764853a2fa3f50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/935b4beb724946a37cebf97191592d4879d3a3a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f555b1584fc2d5d16ee3c4d9438e93ac7c502c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbc5d7b46a729bfcbb5544f6612b7a67dd4f4d6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d593e1ede655b74c42e4e4fe285ea64aee96fb5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49927","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.657","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfs4: Fix kmemleak when allocate slot failed\n\nIf one of the slot allocate failed, should cleanup all the other\nallocated slots, otherwise, the allocated slots will leak:\n\n  unreferenced object 0xffff8881115aa100 (size 64):\n    comm \"\"mount.nfs\"\", pid 679, jiffies 4294744957 (age 115.037s)\n    hex dump (first 32 bytes):\n      00 cc 19 73 81 88 ff ff 00 a0 5a 11 81 88 ff ff  ...s......Z.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace:\n      [<000000007a4c434a>] nfs4_find_or_create_slot+0x8e\/0x130\n      [<000000005472a39c>] nfs4_realloc_slot_table+0x23f\/0x270\n      [<00000000cd8ca0eb>] nfs40_init_client+0x4a\/0x90\n      [<00000000128486db>] nfs4_init_client+0xce\/0x270\n      [<000000008d2cacad>] nfs4_set_client+0x1a2\/0x2b0\n      [<000000000e593b52>] nfs4_create_server+0x300\/0x5f0\n      [<00000000e4425dd2>] nfs4_try_get_tree+0x65\/0x110\n      [<00000000d3a6176f>] vfs_get_tree+0x41\/0xf0\n      [<0000000016b5ad4c>] path_mount+0x9b3\/0xdd0\n      [<00000000494cae71>] __x64_sys_mount+0x190\/0x1d0\n      [<000000005d56bdec>] do_syscall_64+0x35\/0x80\n      [<00000000687c9ae4>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nfs4: Se corrige kmemleak cuando falla la asignación de ranura Si falla la asignación de una ranura, se deben limpiar todas las demás ranuras asignadas, de lo contrario, las ranuras asignadas tendrán fugas: objeto sin referencia 0xffff8881115aa100 (tamaño 64): comm \"\"mount.nfs\"\", pid 679, jiffies 4294744957 (edad 115.037s) volcado hexadecimal (primeros 32 bytes): 00 cc 19 73 81 88 ff ff 00 a0 5a 11 81 88 ff ff ...s......Z..... 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ seguimiento inverso:[&lt;000000007a4c434a&gt;] nfs4_find_or_create_slot+0x8e\/0x130 [&lt;000000005472a39c&gt;] nfs4_realloc_slot_table+0x23f\/0x270 [&lt;00000000cd8ca0eb&gt;] nfs40_init_client+0x4a\/0x90 [&lt;00000000128486db&gt;] nfs4_init_client+0xce\/0x270 [&lt;000000008d2cacad&gt;] nfs4_set_client+0x1a2\/0x2b0 [&lt;000000000e593b52&gt;] nfs4_create_server+0x300\/0x5f0 [&lt;00000000e4425dd2&gt;] nfs4_try_get_tree+0x65\/0x110 [&lt;00000000d3a6176f&gt;] vfs_get_tree+0x41\/0xf0 [&lt;0000000016b5ad4c&gt;] path_mount+0x9b3\/0xdd0 [&lt;00000000494cae71&gt;] __x64_sys_mount+0x190\/0x1d0 [&lt;000000005d56bdec&gt;] do_syscall_64+0x35\/0x80 [&lt;00000000687c9ae4&gt;] entry_SYSCALL_64_after_hwframe+0x46\/0xb0 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24641993a7dce6b1628645f4e1d97ca06c9f765d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45aea4fbf61e205649c29200726b9f45c1718a67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e8436728e22181c3f12a5dbabd35ed3a8b8c593","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84b5cb476903003ae9ca88f32b57ff0eaefa6d4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86ce0e93cf6fb4d0c447323ac66577c642628b9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/925cb538bd5851154602818dc80bf4b4d924c127","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aae35a0c8a775fa4afa6a4e7dab3f936f1f89bbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db333ae981fb8843c383aa7dbf62cc682597d401","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49928","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.783","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix null-ptr-deref when xps sysfs alloc failed\n\nThere is a null-ptr-deref when xps sysfs alloc failed:\n  BUG: KASAN: null-ptr-deref in sysfs_do_create_link_sd+0x40\/0xd0\n  Read of size 8 at addr 0000000000000030 by task gssproxy\/457\n\n  CPU: 5 PID: 457 Comm: gssproxy Not tainted 6.0.0-09040-g02357b27ee03 #9\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x34\/0x44\n   kasan_report+0xa3\/0x120\n   sysfs_do_create_link_sd+0x40\/0xd0\n   rpc_sysfs_client_setup+0x161\/0x1b0\n   rpc_new_client+0x3fc\/0x6e0\n   rpc_create_xprt+0x71\/0x220\n   rpc_create+0x1d4\/0x350\n   gssp_rpc_create+0xc3\/0x160\n   set_gssp_clnt+0xbc\/0x140\n   write_gssp+0x116\/0x1a0\n   proc_reg_write+0xd6\/0x130\n   vfs_write+0x177\/0x690\n   ksys_write+0xb9\/0x150\n   do_syscall_64+0x35\/0x80\n   entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n\nWhen the xprt_switch sysfs alloc failed, should not add xprt and\nswitch sysfs to it, otherwise, maybe null-ptr-deref; also initialize\nthe 'xps_sysfs' to NULL to avoid oops when destroy it."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: SUNRPC: Se corrige null-ptr-deref cuando falla la asignación de sysfs en XPS. Hay un null-ptr-deref cuando falla la asignación de sysfs en XPS: ERROR: KASAN: null-ptr-deref en sysfs_do_create_link_sd+0x40\/0xd0 Lectura de tamaño 8 en la dirección 0000000000000030 por la tarea gssproxy\/457 CPU: 5 PID: 457 Comm: gssproxy No contaminado 6.0.0-09040-g02357b27ee03 #9 Rastreo de llamadas:   dump_stack_lvl+0x34\/0x44 kasan_report+0xa3\/0x120 sysfs_do_create_link_sd+0x40\/0xd0 rpc_sysfs_client_setup+0x161\/0x1b0 rpc_new_client+0x3fc\/0x6e0 rpc_create_xprt+0x71\/0x220 rpc_create+0x1d4\/0x350 gssp_rpc_create+0xc3\/0x160 set_gssp_clnt+0xbc\/0x140 write_gssp+0x116\/0x1a0 proc_reg_write+0xd6\/0x130 vfs_write+0x177\/0x690 ksys_write+0xb9\/0x150 do_syscall_64+0x35\/0x80 entry_SYSCALL_64_after_hwframe+0x46\/0xb0 Cuando la asignación sysfs xprt_switch falla, no se debe agregar xprt y switch sysfs a él, de lo contrario, tal vez null-ptr-deref; también inicialice 'xps_sysfs' a NULL para evitar errores al destruirlo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7b189b0aa8dab14b49c31c65af8a982e96e25b62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbdeaee94a415800c65a8c3fa04d9664a8b8fb3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d59722d088a9d86ce6d9d39979e5d1d669d249f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49929","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.887","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/rxe: Fix mr leak in RESPST_ERR_RNR\n\nrxe_recheck_mr() will increase mr's ref_cnt, so we should call rxe_put(mr)\nto drop mr's ref_cnt in RESPST_ERR_RNR to avoid below warning:\n\n  WARNING: CPU: 0 PID: 4156 at drivers\/infiniband\/sw\/rxe\/rxe_pool.c:259 __rxe_cleanup+0x1df\/0x240 [rdma_rxe]\n...\n  Call Trace:\n   rxe_dereg_mr+0x4c\/0x60 [rdma_rxe]\n   ib_dereg_mr_user+0xa8\/0x200 [ib_core]\n   ib_mr_pool_destroy+0x77\/0xb0 [ib_core]\n   nvme_rdma_destroy_queue_ib+0x89\/0x240 [nvme_rdma]\n   nvme_rdma_free_queue+0x40\/0x50 [nvme_rdma]\n   nvme_rdma_teardown_io_queues.part.0+0xc3\/0x120 [nvme_rdma]\n   nvme_rdma_error_recovery_work+0x4d\/0xf0 [nvme_rdma]\n   process_one_work+0x582\/0xa40\n   ? pwq_dec_nr_in_flight+0x100\/0x100\n   ? rwlock_bug.part.0+0x60\/0x60\n   worker_thread+0x2a9\/0x700\n   ? process_one_work+0xa40\/0xa40\n   kthread+0x168\/0x1a0\n   ? kthread_complete_and_exit+0x20\/0x20\n   ret_from_fork+0x22\/0x30"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA\/rxe: Reparar fuga de mr en RESPST_ERR_RNR rxe_recheck_mr() aumentará el ref_cnt de mr, por lo que debemos llamar a rxe_put(mr) para eliminar el ref_cnt de mr en RESPST_ERR_RNR para evitar la siguiente advertencia: ADVERTENCIA: CPU: 0 PID: 4156 en drivers\/infiniband\/sw\/rxe\/rxe_pool.c:259 __rxe_cleanup+0x1df\/0x240 [rdma_rxe] ... Rastreo de llamadas:  rxe_dereg_mr+0x4c\/0x60 [rdma_rxe] ib_dereg_mr_user+0xa8\/0x200 [ib_core] ib_mr_pool_destroy+0x77\/0xb0 [ib_core] nvme_rdma_destroy_queue_ib+0x89\/0x240 [nvme_rdma] nvme_rdma_free_queue+0x40\/0x50 [nvme_rdma] nvme_rdma_teardown_io_queues.part.0+0xc3\/0x120 [nvme_rdma] nvme_rdma_error_recovery_work+0x4d\/0xf0 [nvme_rdma] process_one_work+0x582\/0xa40 ? pwq_dec_nr_in_flight+0x100\/0x100 ? rwlock_bug.part.0+0x60\/0x60 worker_thread+0x2a9\/0x700 ? process_one_work+0xa40\/0xa40 kthread+0x168\/0x1a0 ? kthread_complete_and_exit+0x20\/0x20 ret_from_fork+0x22\/0x30 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50b35ad2864a9d66f802f9ce193d99bbef64e219","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5f9a01fae42684648c2ee3cd9985f80c67ab9f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49930","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:18.983","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hns: Fix NULL pointer problem in free_mr_init()\n\nLock grab occurs in a concurrent scenario, resulting in stepping on a NULL\npointer.  It should be init mutex_init() first before use the lock.\n\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  Call trace:\n   __mutex_lock.constprop.0+0xd0\/0x5c0\n   __mutex_lock_slowpath+0x1c\/0x2c\n   mutex_lock+0x44\/0x50\n   free_mr_send_cmd_to_hw+0x7c\/0x1c0 [hns_roce_hw_v2]\n   hns_roce_v2_dereg_mr+0x30\/0x40 [hns_roce_hw_v2]\n   hns_roce_dereg_mr+0x4c\/0x130 [hns_roce_hw_v2]\n   ib_dereg_mr_user+0x54\/0x124\n   uverbs_free_mr+0x24\/0x30\n   destroy_hw_idr_uobject+0x38\/0x74\n   uverbs_destroy_uobject+0x48\/0x1c4\n   uobj_destroy+0x74\/0xcc\n   ib_uverbs_cmd_verbs+0x368\/0xbb0\n   ib_uverbs_ioctl+0xec\/0x1a4\n   __arm64_sys_ioctl+0xb4\/0x100\n   invoke_syscall+0x50\/0x120\n   el0_svc_common.constprop.0+0x58\/0x190\n   do_el0_svc+0x30\/0x90\n   el0_svc+0x2c\/0xb4\n   el0t_64_sync_handler+0x1a4\/0x1b0\n   el0t_64_sync+0x19c\/0x1a0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA\/hns: Se solucionó el problema del puntero nulo en free_mr_init(). La captura de bloqueo ocurre en un escenario concurrente, lo que resulta en la sobreexposición a un puntero nulo. Se debe inicializar mutex_init() antes de usar el bloqueo. No se puede gestionar la desreferencia del puntero NULL del núcleo en la dirección virtual 0000000000000000 Rastreo de llamadas: __mutex_lock.constprop.0+0xd0\/0x5c0 __mutex_lock_slowpath+0x1c\/0x2c mutex_lock+0x44\/0x50 free_mr_send_cmd_to_hw+0x7c\/0x1c0 [hns_roce_hw_v2] hns_roce_v2_dereg_mr+0x30\/0x40 [hns_roce_hw_v2] hns_roce_dereg_mr+0x4c\/0x130 [hns_roce_hw_v2] ib_dereg_mr_user+0x54\/0x124 uverbs_free_mr+0x24\/0x30 destroy_hw_idr_uobject+0x38\/0x74 uverbs_destroy_uobject+0x48\/0x1c4 uobj_destroy+0x74\/0xcc ib_uverbs_cmd_verbs+0x368\/0xbb0 ib_uverbs_ioctl+0xec\/0x1a4 __arm64_sys_ioctl+0xb4\/0x100 invoke_syscall+0x50\/0x120 el0_svc_common.constprop.0+0x58\/0x190 do_el0_svc+0x30\/0x90 el0_svc+0x2c\/0xb4 el0t_64_sync_handler+0x1a4\/0x1b0 el0t_64_sync+0x19c\/0x1a0 "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e23e85d86b78e734dd6654f1b69fbaeb5534c81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/12bcaf87d8b66d8cd812479c8a6349dcb245375c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49931","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-01T15:16:19.087","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/hfi1: Correctly move list in sc_disable()\n\nCommit 13bac861952a (\"IB\/hfi1: Fix abba locking issue with sc_disable()\")\nincorrectly tries to move a list from one list head to another.  The\nresult is a kernel crash.\n\nThe crash is triggered when a link goes down and there are waiters for a\nsend to complete.  The following signature is seen:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000030\n  [...]\n  Call Trace:\n   sc_disable+0x1ba\/0x240 [hfi1]\n   pio_freeze+0x3d\/0x60 [hfi1]\n   handle_freeze+0x27\/0x1b0 [hfi1]\n   process_one_work+0x1b0\/0x380\n   ? process_one_work+0x380\/0x380\n   worker_thread+0x30\/0x360\n   ? process_one_work+0x380\/0x380\n   kthread+0xd7\/0x100\n   ? kthread_complete_and_exit+0x20\/0x20\n   ret_from_fork+0x1f\/0x30\n\nThe fix is to use the correct call to move the list."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: IB\/hfi1: Mover correctamente la lista en sc_disable(). El commit 13bac861952a (\"IB\/hfi1: Solucionar el problema de bloqueo de abba con sc_disable()\") intenta mover incorrectamente una lista de una cabecera a otra. Esto provoca un fallo del kernel. El fallo se activa cuando un enlace se cae y hay esperas para que se complete un envío. Se observa la siguiente firma: ERROR: desreferencia de puntero nulo del kernel, dirección: 000000000000030 [...] Seguimiento de llamadas:  sc_disable+0x1ba\/0x240 [hfi1] pio_freeze+0x3d\/0x60 [hfi1] handle_freeze+0x27\/0x1b0 [hfi1] process_one_work+0x1b0\/0x380 ? process_one_work+0x380\/0x380 worker_thread+0x30\/0x360 ? process_one_work+0x380\/0x380 kthread+0xd7\/0x100 ? kthread_complete_and_exit+0x20\/0x20 ret_from_fork+0x1f\/0x30 La solución es utilizar la llamada correcta para mover la lista."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1afac08b39d85437187bb2a92d89a741b1078f55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25760a41e3802f54aadcc31385543665ab349b8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c4260f8f188df32414a5ecad63e8b934c2aa3f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8bcff99b07cc175a6ee12a52db51cdd2229586c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba95409d6b580501ff6d78efd00064f7df669926","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-23246","sourceIdentifier":"psirt@nvidia.com","published":"2025-05-01T15:16:19.970","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"NVIDIA vGPU software for Windows and Linux contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it allows a guest to consume uncontrolled resources. A successful exploit of this vulnerability might lead to denial of service."},{"lang":"es","value":"El software NVIDIA vGPU para Windows y Linux contiene una vulnerabilidad en el Administrador de GPU Virtual (complemento vGPU), que permite que un invitado consuma recursos sin control. Una explotación exitosa de esta vulnerabilidad podría provocar una denegación de servicio."}],"metrics":{"cvssMetricV31":[{"source":"psirt@nvidia.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":5.5,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@nvidia.com","type":"Primary","description":[{"lang":"en","value":"CWE-400"}]}],"references":[{"url":"https:\/\/nvidia.custhelp.com\/app\/answers\/detail\/a_id\/5630","source":"psirt@nvidia.com"}]}},{"cve":{"id":"CVE-2025-44836","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T15:16:20.723","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CPE CP900 V6.3c.1144_B20190715 was discovered to contain a command injection vulnerability in the setApRebootScheCfg function via the hour or minute parameters. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CPE CP900 V6.3c.1144_B20190715 contiene una vulnerabilidad de inyección de comandos en la función setApRebootScheCfg mediante los parámetros de hora o minuto. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/n0wstr\/IOTVuln\/tree\/main\/CP900\/setApRebootScheCfg","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44837","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T15:16:20.837","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CPE CP900 V6.3c.1144_B20190715 was discovered to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the url or magicid parameters. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CPE CP900 V6.3c.1144_B20190715 contiene una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante los parámetros url o magicid. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/n0wstr\/IOTVuln\/tree\/main\/CP900\/CloudSrvUserdataVersionCheck","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44838","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T15:16:20.950","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CPE CP900 V6.3c.1144_B20190715 was discovered to contain a command injection vulnerability in the setUploadUserData function via the FileName parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CPE CP900 V6.3c.1144_B20190715 contiene una vulnerabilidad de inyección de comandos en la función setUploadUserData mediante el parámetro FileName. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/n0wstr\/IOTVuln\/tree\/main\/CP900\/setUploadUserData","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44839","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.127","lastModified":"2025-05-02T16:15:34.367","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the magicid parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante el parámetro magicid. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/CloudSrvUserdataVersionCheck_magicid\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44840","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.253","lastModified":"2025-05-02T16:15:34.520","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the svn parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante el parámetro svn. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/CloudSrvUserdataVersionCheck_svn\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44841","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.360","lastModified":"2025-05-02T16:15:34.667","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the version parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante el parámetro de versión. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/CloudSrvUserdataVersionCheck_version\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44842","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.467","lastModified":"2025-05-02T16:15:34.813","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the msg_process function via the Port parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función msg_process mediante el parámetro Port. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/msg_process_Port\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44843","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.583","lastModified":"2025-05-02T16:15:34.960","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the url parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante el parámetro url. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/CloudSrvUserdataVersionCheck_url\/readme.md","source":"cve@mitre.org"},{"url":"https:\/\/www.totolink.net","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44844","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.690","lastModified":"2025-05-02T16:15:35.107","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the setUpgradeFW function via the FileName parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función setUpgradeFW mediante el parámetro FileName. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/setUpgradeFW\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44845","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.807","lastModified":"2025-05-02T16:15:35.263","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the NTPSyncWithHost function via the hostTime parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función NTPSyncWithHost mediante el parámetro hostTime. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/NTPSyncWithHost\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44846","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:50.917","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the recvUpgradeNewFw function via the fwUrl parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función recvUpgradeNewFw mediante el parámetro fwUrl. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/recvUpgradeNewFw\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44847","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:51.037","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the setWebWlanIdx function via the webWlanIdx parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función setWebWlanIdx mediante el parámetro webWlanIdx. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/setWebWlanIdx\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44848","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T17:15:51.140","lastModified":"2025-05-02T18:15:26.753","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA600-PoE V5.3c.6665_B20180820 was found to contain a command injection vulnerability in the msg_process function via the Url parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA600-PoE V5.3c.6665_B20180820 contenía una vulnerabilidad de inyección de comandos en la función msg_process mediante el parámetro Url. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA600-PoE\/msg_process_Url\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-4173","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T17:15:51.257","lastModified":"2025-05-02T18:15:27.400","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in SourceCodester Online Eyewear Shop 1.0. Affected by this vulnerability is the function delete_cart of the file \/oews\/classes\/Master.php?f=delete_cart. The manipulation of the argument ID leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se encontró una vulnerabilidad clasificada como crítica en SourceCodester Online Eyewear Shop 1.0. Esta vulnerabilidad afecta a la función delete_cart del archivo \/oews\/classes\/Master.php?f=delete_cart. La manipulación del ID del argumento provoca una inyección SQL. El ataque puede ejecutarse remotamente. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/huashuocc\/cve\/blob\/main\/sql.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306793","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306793","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561737","source":"cna@vuldb.com"},{"url":"https:\/\/www.sourcecodester.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/huashuocc\/cve\/blob\/main\/sql.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-32881","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:54.970","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. By default, the GID is the user's phone number unless they specifically opt out. A phone number is very sensitive information because it can be tied back to individuals. The app does not encrypt the GID in messages."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. Por defecto, el GID es el número de teléfono del usuario, a menos que este lo desactive específicamente. Un número de teléfono es información muy sensible, ya que puede asociarse con personas. La aplicación no cifra el GID en los mensajes."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-319"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32882","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.127","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. The app uses a custom implementation of encryption without any additional integrity checking mechanisms. This leaves messages malleable to an attacker that can access the message."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. La aplicación utiliza una implementación personalizada de cifrado sin mecanismos adicionales de verificación de integridad. Esto permite que los mensajes sean vulnerables a un atacante que pueda acceder a ellos."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.6,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-353"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32883","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.280","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna Mesh devices with app 5.5.3 and firmware 1.1.12. The app there makes it possible to inject any custom message (into existing mesh networks) with any GID and Callsign via a software defined radio. This can be exploited if the device is being used in an unencrypted environment or if the cryptography has already been compromised."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna Mesh con la aplicación 5.5.3 y el firmware 1.1.12. Esta aplicación permite inyectar cualquier mensaje personalizado (en redes mesh existentes) con cualquier GID e indicativo mediante una radio definida por software. Esto puede explotarse si el dispositivo se utiliza en un entorno sin cifrar o si la criptografía ya ha sido comprometida."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-1390"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32884","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.427","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna Mesh devices with app 5.5.3 and firmware 1.1.12. By default, a GID is the user's phone number unless they specifically opt out. A phone number is very sensitive information because it can be tied back to individuals. The app does not encrypt the GID in messages."},{"lang":"es","value":"Se detectó un problema en los dispositivos goTenna Mesh con la aplicación 5.5.3 y el firmware 1.1.12. Por defecto, el GID es el número de teléfono del usuario, a menos que este lo desactive específicamente. Un número de teléfono es información muy sensible, ya que puede asociarse con personas. La aplicación no cifra el GID en los mensajes."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-319"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32885","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.593","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. The app there makes it possible to inject any custom message (into existing v1 networks) with any GID and Callsign via a software defined radio. This can be exploited if the device is being used in an unencrypted environment or if the cryptography has already been compromised."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. Esta aplicación permite inyectar cualquier mensaje personalizado (en redes v1 existentes) con cualquier GID e indicativo mediante una radio definida por software. Esto puede explotarse si el dispositivo se utiliza en un entorno sin cifrar o si la criptografía ya ha sido comprometida."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-1390"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32886","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.800","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. All packets sent over RF are also sent over UART with USB Shell, allowing someone with local access to gain information about the protocol and intercept sensitive data."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. Todos los paquetes enviados por RF también se envían por UART con USB Shell, lo que permite que alguien con acceso local obtenga información sobre el protocolo e intercepte datos confidenciales."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.0,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.5,"impactScore":1.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-923"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32887","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:55.957","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. A command channel includes the next hop. which can be intercepted and used to break frequency hopping."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. Un canal de comando incluye el siguiente salto, que puede interceptarse y utilizarse para interrumpir el salto de frecuencia."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:H","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":4.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-319"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32888","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.107","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna Mesh devices with app 5.5.3 and firmware 1.1.12. The verification token used for sending SMS through a goTenna server is hardcoded in the app."},{"lang":"es","value":"Se detectó un problema en los dispositivos goTenna Mesh con la aplicación 5.5.3 y el firmware 1.1.12. El token de verificación utilizado para enviar SMS a través de un servidor goTenna está codificado en la aplicación."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:H","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"HIGH"},"exploitabilityScore":2.5,"impactScore":4.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-798"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32889","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.247","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna v1 devices with app 5.5.3 and firmware 0.25.5. The verification token used for sending SMS through a goTenna server is hardcoded in the app."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna v1 con la aplicación 5.5.3 y el firmware 0.25.5. El token de verificación utilizado para enviar SMS a través de un servidor goTenna está codificado en la aplicación."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:H","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"HIGH"},"exploitabilityScore":2.5,"impactScore":4.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-798"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-32890","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.390","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on goTenna Mesh devices with app 5.5.3 and firmware 1.1.12. It uses a custom implementation of encryption without any additional integrity checking mechanisms. This leaves messages malleable to an attacker that can access the message."},{"lang":"es","value":"Se detectó un problema en dispositivos goTenna Mesh con la aplicación 5.5.3 y el firmware 1.1.12. Este problema utiliza una implementación personalizada de cifrado sin mecanismos adicionales de verificación de integridad. Esto deja los mensajes vulnerables a un atacante que pueda acceder a ellos."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.6,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-353"}]}],"references":[{"url":"https:\/\/github.com\/Dollarhyde\/goTenna_v1_and_Mesh_vulnerabilities","source":"cve@mitre.org"},{"url":"https:\/\/gotenna.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44860","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.537","lastModified":"2025-05-02T16:15:35.413","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA300-POE V6.2c.884_B20180522 was found to contain a command injection vulnerability in the msg_process function via the Port parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA300-POE V6.2c.884_B20180522 contenía una vulnerabilidad de inyección de comandos en la función msg_process mediante el parámetro Port. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA300-POE\/msg_process_Port\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44861","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.647","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA300-POE V6.2c.884_B20180522 was found to contain a command injection vulnerability in the CloudSrvUserdataVersionCheck function via the url parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA300-POE V6.2c.884_B20180522 contenía una vulnerabilidad de inyección de comandos en la función CloudSrvUserdataVersionCheck mediante el parámetro url. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA300-POE\/CloudSrvUserdataVersionCheck\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44862","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.753","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA300-POE V6.2c.884_B20180522 was found to contain a command injection vulnerability in the recvUpgradeNewFw function via the fwUrl parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA300-POE V6.2c.884_B20180522 contenía una vulnerabilidad de inyección de comandos en la función recvUpgradeNewFw mediante el parámetro fwUrl. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA300-POE\/recvUpgradeNewFw\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44863","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.873","lastModified":"2025-05-02T16:15:35.563","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK CA300-POE V6.2c.884_B20180522 was found to contain a command injection vulnerability in the msg_process function via the Url parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que TOTOLINK CA300-POE V6.2c.884_B20180522 contenía una vulnerabilidad de inyección de comandos en la función msg_process mediante el parámetro Url. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Totolink_CA300-POE\/msg_process_Url\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44864","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:56.987","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda W20E V15.11.0.6 was found to contain a command injection vulnerability in the formSetDebugCfg function via the module parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que Tenda W20E V15.11.0.6 contenía una vulnerabilidad de inyección de comandos en la función formSetDebugCfg mediante el parámetro module. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_W20E\/formSetDebugCfg_module\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44865","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:57.100","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda W20E V15.11.0.6 was found to contain a command injection vulnerability in the formSetDebugCfg function via the enable parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que Tenda W20E V15.11.0.6 contenía una vulnerabilidad de inyección de comandos en la función formSetDebugCfg mediante el parámetro enable. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_W20E\/formSetDebugCfg_enable\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44866","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:57.200","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda W20E V15.11.0.6 was found to contain a command injection vulnerability in the formSetDebugCfg function via the level parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se detectó que Tenda W20E V15.11.0.6 contenía una vulnerabilidad de inyección de comandos en la función formSetDebugCfg mediante el parámetro level. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_W20E\/formSetDebugCfg_level\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44867","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T18:15:57.353","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda W20E V15.11.0.6 was found to contain a command injection vulnerability in the formSetNetCheckTools function via the hostName parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."},{"lang":"es","value":"Se descubrió que Tenda W20E V15.11.0.6 contenía una vulnerabilidad de inyección de comandos en la función formSetNetCheckTools mediante el parámetro hostName. Esta vulnerabilidad permite a los atacantes ejecutar comandos arbitrarios mediante una solicitud manipulada."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_W20E\/formSetNetCheckTools\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46337","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:57.510","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"ADOdb is a PHP database class library that provides abstractions for performing queries and managing databases. Prior to version 5.22.9, improper escaping of a query parameter may allow an attacker to execute arbitrary SQL statements when the code using ADOdb connects to a PostgreSQL database and calls pg_insert_id() with user-supplied data. This issue has been patched in version 5.22.9."},{"lang":"es","value":"ADOdb es una librería de clases de bases de datos PHP que proporciona abstracciones para realizar consultas y administrar bases de datos. Antes de la versión 5.22.9, el escape incorrecto de un parámetro de consulta podía permitir que un atacante ejecutara sentencias SQL arbitrarias cuando el código que usa ADOdb se conecta a una base de datos PostgreSQL e invoca pg_insert_id() con datos proporcionados por el usuario. Este problema se ha corregido en la versión 5.22.9."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:L","baseScore":10.0,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":6.0}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ADOdb\/ADOdb\/commit\/11107d6d6e5160b62e05dff8a3a2678cf0e3a426","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/ADOdb\/ADOdb\/issues\/1070","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/ADOdb\/ADOdb\/security\/advisories\/GHSA-8x27-jwjr-8545","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2025-46345","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:57.657","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Auth0 Account Link Extension is an extension aimed to help link accounts easily. Versions 2.3.4 to 2.6.6 do not verify the signature of the provided JWT. This allows the user the ability to supply a forged token and the potential to access user information without proper authorization. This issue has been patched in versions 2.6.7, 2.7.0, and 3.0.0. It is recommended to upgrade to version 3.0.0 or greater."},{"lang":"es","value":"Auth0 Account Link Extension facilita la vinculación de cuentas. Las versiones 2.3.4 a 2.6.6 no verifican la firma del JWT proporcionado. Esto permite al usuario proporcionar un token falsificado y acceder a la información del usuario sin la debida autorización. Este problema se ha corregido en las versiones 2.6.7, 2.7.0 y 3.0.0. Se recomienda actualizar a la versión 3.0.0 o superior."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-290"}]}],"references":[{"url":"https:\/\/github.com\/auth0-extensions\/auth0-account-link-extension\/pull\/187","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/auth0-extensions\/auth0-account-link-extension\/security\/advisories\/GHSA-j2jh-rqff-7vmg","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2025-46565","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:57.797","lastModified":"2025-05-02T18:15:27.060","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Vite is a frontend tooling framework for javascript. Prior to versions 6.3.4, 6.2.7, 6.1.6, 5.4.19, and 4.5.14, the contents of files in the project root that are denied by a file matching pattern can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using --host or server.host config option) are affected. Only files that are under project root and are denied by a file matching pattern can be bypassed. `server.fs.deny` can contain patterns matching against files (by default it includes .env, .env.*, *.{crt,pem} as such patterns). These patterns were able to bypass for files under `root` by using a combination of slash and dot (\/.). This issue has been patched in versions 6.3.4, 6.2.7, 6.1.6, 5.4.19, and 4.5.14."},{"lang":"es","value":"Vite es un framework de herramientas frontend para JavaScript. En versiones anteriores a las 6.3.4, 6.2.7, 6.1.6, 5.4.19 y 4.5.14, el contenido de los archivos en la root del proyecto que se deniegan por un patrón de coincidencia de archivos se puede devolver al navegador. Solo las aplicaciones que exponen explícitamente el servidor de desarrollo de Vite a la red (mediante la opción de configuración --host o server.host) se ven afectadas. Solo se pueden omitir los archivos que se encuentran en la root del proyecto y se deniegan por un patrón de coincidencia de archivos. `server.fs.deny` puede contener patrones que coinciden con archivos (por defecto, incluye .env, .env.*, *.{crt,pem} como tales patrones). Estos patrones se podían omitir para los archivos en `root` mediante una combinación de barra diagonal y punto (\/.). Este problema se ha solucionado en las versiones 6.3.4, 6.2.7, 6.1.6, 5.4.19 y 4.5.14."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:P\/PR:N\/UI:P\/VC:H\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.0,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"PRESENT","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/vitejs\/vite\/commit\/c22c43de612eebb6c182dd67850c24e4fab8cacb","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-859w-5945-r5v3","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/vitejs\/vite\/security\/advisories\/GHSA-859w-5945-r5v3","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-46566","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:57.940","lastModified":"2025-05-02T18:15:27.160","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"DataEase is an open-source BI tool alternative to Tableau. Prior to version 2.10.9, authenticated users can complete RCE through the backend JDBC link. This issue has been patched in version 2.10.9."},{"lang":"es","value":"DataEase es una herramienta de inteligencia empresarial (BI) de código abierto alternativa a Tableau. Antes de la versión 2.10.9, los usuarios autenticados podían completar RCE mediante el enlace JDBC del backend. Este problema se ha corregido en la versión 2.10.9."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:H\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-284"},{"lang":"en","value":"CWE-923"}]}],"references":[{"url":"https:\/\/github.com\/dataease\/dataease\/security\/advisories\/GHSA-hxw4-vpfp-frgv","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/dataease\/dataease\/security\/advisories\/GHSA-hxw4-vpfp-frgv","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-46567","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:58.117","lastModified":"2025-05-02T18:15:27.260","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"LLama Factory enables fine-tuning of large language models. Prior to version 1.0.0, a critical vulnerability exists in the `llamafy_baichuan2.py` script of the LLaMA-Factory project. The script performs insecure deserialization using `torch.load()` on user-supplied `.bin` files from an input directory. An attacker can exploit this behavior by crafting a malicious `.bin` file that executes arbitrary commands during deserialization. This issue has been patched in version 1.0.0."},{"lang":"es","value":"LLama Factory permite el ajuste fino de modelos de lenguaje grandes. Antes de la versión 1.0.0, existía una vulnerabilidad crítica en el script `llamafy_baichuan2.py` del proyecto LLaMA-Factory. Este script realiza una deserialización insegura mediante `torch.load()` en archivos `.bin` proporcionados por el usuario desde un directorio de entrada. Un atacante puede explotar este comportamiento manipulando un archivo `.bin` malicioso que ejecute comandos arbitrarios durante la deserialización. Este problema se ha corregido en la versión 1.0.0."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:R\/S:U\/C:H\/I:L\/A:L","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.3,"impactScore":4.7}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-502"}]}],"references":[{"url":"https:\/\/github.com\/hiyouga\/LLaMA-Factory\/commit\/2989d39239d2f46e584c1e1180ba46b9768afb2a","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/hiyouga\/LLaMA-Factory\/security\/advisories\/GHSA-f2f7-gj54-6vpv","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/hiyouga\/LLaMA-Factory\/security\/advisories\/GHSA-f2f7-gj54-6vpv","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-46568","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T18:15:58.263","lastModified":"2025-05-02T14:15:19.860","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Stirling-PDF is a locally hosted web application that allows you to perform various operations on PDF files. Prior to version 0.45.0, Stirling-PDF is vulnerable to SSRF-induced arbitrary file read. WeasyPrint redefines a set of HTML tags, including img, embed, object, and others. The references to several files inside, allow the attachment of content from any webpage or local file to a PDF. This allows the attacker to read any file on the server, including sensitive files and configuration files. All users utilizing this feature will be affected. This issue has been patched in version 0.45.0."},{"lang":"es","value":"Stirling-PDF es una aplicación web alojada localmente que permite realizar diversas operaciones con archivos PDF. Antes de la versión 0.45.0, Stirling-PDF era vulnerable a la lectura arbitraria de archivos inducida por SSRF. WeasyPrint redefine un conjunto de etiquetas HTML, como img, embed, object y otras. Las referencias a varios archivos que contiene permiten adjuntar contenido de cualquier página web o archivo local a un PDF. Esto permite al atacante leer cualquier archivo del servidor, incluyendo archivos confidenciales y de configuración. Todos los usuarios que utilicen esta función se verán afectados. Este problema se ha corregido en la versión 0.45.0."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":7.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/github.com\/Stirling-Tools\/Stirling-PDF\/security\/advisories\/GHSA-998c-x8hx-737r","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/Stirling-Tools\/Stirling-PDF\/security\/advisories\/GHSA-998c-x8hx-737r","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-24522","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:57.097","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"KUNBUS Revolution Pi OS Bookworm 01\/2025 is vulnerable because authentication is not configured by default for the Node-RED server. This can give an unauthenticated remote attacker full access to the Node-RED server where they can run arbitrary commands on the underlying operating system."},{"lang":"es","value":"KUNBUS Revolution Pi OS Bookworm 01\/2025 es vulnerable porque la autenticación no está configurada por defecto para el servidor Node-RED. Esto puede otorgar a un atacante remoto no autenticado acceso total al servidor Node-RED, donde puede ejecutar comandos arbitrarios en el sistema operativo subyacente."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":9.3,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","baseScore":10.0,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":6.0}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-305"}]}],"references":[{"url":"http:\/\/packages.revolutionpi.de\/pool\/main\/p\/pictory\/","source":"ics-cert@hq.dhs.gov"},{"url":"https:\/\/www.cisa.gov\/news-events\/ics-advisories\/icsa-25-121-01","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-32011","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:57.357","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"KUNBUS PiCtory versions 2.5.0 through 2.11.1 have an authentication bypass vulnerability where a remote attacker can bypass authentication to get access due to a path traversal."},{"lang":"es","value":"Las versiones 2.5.0 a 2.11.1 de KUNBUS PiCtory tienen una vulnerabilidad de omisión de autenticación donde un atacante remoto puede omitir la autenticación para obtener acceso debido a path traversal."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":9.3,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-305"}]}],"references":[{"url":"http:\/\/packages.revolutionpi.de\/pool\/main\/p\/pictory\/","source":"ics-cert@hq.dhs.gov"},{"url":"https:\/\/www.cisa.gov\/news-events\/ics-advisories\/icsa-25-121-01","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-35975","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:57.887","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"MicroDicom DICOM Viewer is vulnerable to an out-of-bounds write which may allow an attacker to execute arbitrary code. The user must open a malicious DCM file for exploitation."},{"lang":"es","value":"MicroDicom DICOM Viewer es vulnerable a una escritura fuera de los límites, lo que podría permitir que un atacante ejecute código arbitrario. El usuario debe abrir un archivo DCM malicioso para explotar esta vulnerabilidad."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:A\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.6,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"ACTIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-787"}]}],"references":[{"url":"https:\/\/www.cisa.gov\/news-events\/ics-medical-advisories\/icsma-25-121-01","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-35996","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:58.047","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"KUNBUS PiCtory version 2.11.1 and earlier are vulnerable when an authenticated remote attacker crafts a special filename that can be stored by API endpoints. That filename is later transmitted to the client in order to show a list of configuration files. Due to a missing escape or sanitization, the filename could be executed as HTML script tag resulting in a cross-site-scripting attack."},{"lang":"es","value":"KUNBUS PiCtory versión 2.11.1 y anteriores son vulnerables cuando un atacante remoto autenticado crea un nombre de archivo especial que puede ser almacenado por los endpoints de la API. Este nombre de archivo se transmite posteriormente al cliente para mostrar una lista de archivos de configuración. Debido a la falta de un escape o depuración, el nombre de archivo podría ejecutarse como una etiqueta de script HTML, lo que resulta en un ataque de cross-site-scripting."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:A\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"ACTIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:H\/I:H\/A:H","baseScore":9.0,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.3,"impactScore":6.0}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-97"}]}],"references":[{"url":"http:\/\/packages.revolutionpi.de\/pool\/main\/p\/pictory\/","source":"ics-cert@hq.dhs.gov"},{"url":"https:\/\/www.cisa.gov\/news-events\/ics-advisories\/icsa-25-121-01","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-36521","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:58.203","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"MicroDicom DICOM Viewer is vulnerable to an out-of-bounds read which may allow an attacker to cause memory corruption within the application. The user must open a malicious DCM file for exploitation."},{"lang":"es","value":"MicroDicom DICOM Viewer es vulnerable a una lectura fuera de los límites, lo que podría permitir que un atacante corrompa la memoria de la aplicación. El usuario debe abrir un archivo DCM malicioso para explotar esta vulnerabilidad."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:A\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.6,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"ACTIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-125"}]}],"references":[{"url":"https:\/\/www.cisa.gov\/news-events\/ics-medical-advisories\/icsma-25-121-01","source":"ics-cert@hq.dhs.gov"},{"url":"https:\/\/www.microdicom.com\/downloads.html","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-36558","sourceIdentifier":"ics-cert@hq.dhs.gov","published":"2025-05-01T19:15:58.367","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"KUNBUS PiCtory version 2.11.1 and earlier are vulnerable to a cross-site-scripting attack via the sso_token used for authentication. If an attacker provides the user with a PiCtory URL containing an HTML script as an sso_token, that script will reply to the user and be executed."},{"lang":"es","value":"KUNBUS PiCtory versión 2.11.1 y anteriores son vulnerables a ataques de cross-site scripting mediante el token sso_token utilizado para la autenticación. Si un atacante proporciona al usuario una URL de PiCtory que contiene un script HTML como token sso_token, dicho script responderá al usuario y se ejecutará."}],"metrics":{"cvssMetricV40":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:A\/VC:L\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"ACTIVE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"ics-cert@hq.dhs.gov","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"ics-cert@hq.dhs.gov","type":"Primary","description":[{"lang":"en","value":"CWE-97"}]}],"references":[{"url":"http:\/\/packages.revolutionpi.de\/pool\/main\/p\/pictory\/","source":"ics-cert@hq.dhs.gov"},{"url":"https:\/\/www.cisa.gov\/news-events\/ics-advisories\/icsa-25-121-01","source":"ics-cert@hq.dhs.gov"}]}},{"cve":{"id":"CVE-2025-3517","sourceIdentifier":"security@devolutions.net","published":"2025-05-01T19:15:58.517","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Incorrect privilege assignment in PAM JIT elevation feature in Devolutions Server 2025.1.5.0 and earlier allows a PAM user to elevate a previously configured user configured in a PAM JIT account via failure to update the internal account’s SID when updating the username."},{"lang":"es","value":"El error de cambio de contexto de privilegio en la función PAM JIT en Devolutions Server 2025.1.5.0 y versiones anteriores permite que una contraseña de cuenta PAM JIT se restablezca incorrectamente después del uso a través de acciones específicas, como editar el nombre de usuario."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"security@devolutions.net","type":"Secondary","description":[{"lang":"en","value":"CWE-266"}]}],"references":[{"url":"https:\/\/devolutions.net\/security\/advisories\/DEVO-2025-0006\/","source":"security@devolutions.net"}]}},{"cve":{"id":"CVE-2025-4174","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T19:15:59.333","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in PHPGurukul COVID19 Testing Management System 1.0. Affected by this issue is some unknown functionality of the file \/login.php. The manipulation of the argument Username leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha detectado una vulnerabilidad clasificada como crítica en PHPGurukul COVID19 Testing Management System 1.0. Este problema afecta a una funcionalidad desconocida del archivo \/login.php. La manipulación del argumento \"Username\" provoca una inyección SQL. El ataque puede ejecutarse remotamente. Se ha hecho público el exploit y puede que sea utilizado."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/FLYFISH567\/CVE\/issues\/1","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306794","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306794","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561746","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/FLYFISH567\/CVE\/issues\/1","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-29763","sourceIdentifier":"psirt@esri.com","published":"2025-05-01T20:15:36.110","lastModified":"2025-05-01T20:15:36.110","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: “This CVE ID is Rejected and will not be used.  The issue was determined to not be a vulnerability.”"}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-46569","sourceIdentifier":"security-advisories@github.com","published":"2025-05-01T20:15:37.887","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Open Policy Agent (OPA) is an open source, general-purpose policy engine. Prior to version 1.4.0, when run as a server, OPA exposes an HTTP Data API for reading and writing documents. Requesting a virtual document through the Data API entails policy evaluation, where a Rego query containing a single data document reference is constructed from the requested path. This query is then used for policy evaluation. A HTTP request path can be crafted in a way that injects Rego code into the constructed query. The evaluation result cannot be made to return any other data than what is generated by the requested path, but this path can be misdirected, and the injected Rego code can be crafted to make the query succeed or fail; opening up for oracle attacks or, given the right circumstances, erroneous policy decision results. Furthermore, the injected code can be crafted to be computationally expensive, resulting in a Denial Of Service (DoS) attack. This issue has been patched in version 1.4.0. A workaround involves having network access to OPA’s RESTful APIs being limited to `localhost` and\/or trusted networks, unless necessary for production reasons."},{"lang":"es","value":"Open Policy Agent (OPA) es un motor de políticas de código abierto y propósito general. Antes de la versión 1.4.0, al ejecutarse como servidor, OPA exponía una API de datos HTTP para leer y escribir documentos. Solicitar un documento virtual a través de la API de datos implicaba la evaluación de políticas, donde se generaba una consulta Rego con una única referencia al documento de datos a partir de la ruta solicitada. Esta consulta se utiliza para la evaluación de políticas. Una ruta de solicitud HTTP puede configurarse de forma que inyecte código Rego en la consulta construida. El resultado de la evaluación no puede devolver datos distintos a los generados por la ruta solicitada, pero esta puede desviarse y el código Rego inyectado puede configurarse para que la consulta tenga éxito o fracase, lo que expone a ataques de oráculo o, en las circunstancias adecuadas, a decisiones de política erróneas. Además, el código inyectado puede configurarse para que sea computacionalmente costoso, lo que resulta en un ataque de denegación de servicio (DoS). Este problema se ha corregido en la versión 1.4.0. Una solución alternativa implica que el acceso de red a las API RESTful de OPA se limite a `localhost` y\/o redes confiables, a menos que sea necesario por razones de producción."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:P\/PR:L\/UI:N\/VC:H\/VI:N\/VA:H\/SC:H\/SI:H\/SA:H\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":7.4,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"PRESENT","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"HIGH","subIntegrityImpact":"HIGH","subAvailabilityImpact":"HIGH","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-94"},{"lang":"en","value":"CWE-863"}]}],"references":[{"url":"https:\/\/github.com\/open-policy-agent\/opa\/commit\/ad2063247a14711882f18c387a511fc8094aa79c","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/open-policy-agent\/opa\/security\/advisories\/GHSA-6m8w-jc87-6cr7","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2025-46625","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.037","lastModified":"2025-05-02T14:15:19.957","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Lack of input validation\/sanitization in the 'setLanCfg' API endpoint in httpd in the Tenda RX2 Pro 16.03.30.14 allows a remote attacker that is authorized to the web management portal to gain root shell access to the device by sending a crafted web request. This is persistent because the command injection is saved in the configuration of the device."},{"lang":"es","value":"La falta de validación\/depuración de entrada en el endpoint de la API 'setLanCfg' en httpd en Tenda RX2 Pro 16.03.30.14 permite que un atacante remoto autorizado al portal de administración web obtenga acceso root al dispositivo mediante una solicitud web manipulada. Esto es persistente porque la inyección de comandos se guarda en la configuración del dispositivo."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46625-command-injection-through-setlancfg-in-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46626","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.190","lastModified":"2025-05-02T16:15:35.710","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Reuse of a static AES key and initialization vector for encrypted traffic to the 'ate' management service of the Tenda RX2 Pro 16.03.30.14 allows an attacker to decrypt, replay, and\/or forge traffic to the service."},{"lang":"es","value":"La reutilización de una clave AES estática y un vector de inicialización para el tráfico cifrado hacia el servicio de gestión 'ate' del Tenda RX2 Pro 16.03.30.14 permite a un atacante descifrar, reproducir y\/o falsificar el tráfico hacia el servicio."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-326"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46625-command-injection-through-setlancfg-in-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46627","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.350","lastModified":"2025-05-02T16:15:35.860","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Use of weak credentials in the Tenda RX2 Pro 16.03.30.14 allows an unauthenticated attacker to authenticate to the telnet service by calculating the root password based on easily-obtained device information. The password is based on the last two digits\/octets of the MAC address."},{"lang":"es","value":"El uso de credenciales débiles en el Tenda RX2 Pro 16.03.30.14 permite a un atacante no autenticado autenticarse en el servicio Telnet calculando la contraseña root a partir de información del dispositivo fácilmente obtenible. La contraseña se basa en los dos últimos dígitos\/octetos de la dirección MAC."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:L\/A:N","baseScore":8.2,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":4.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-922"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46627-calculated-os-root-password","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46628","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.510","lastModified":"2025-05-02T16:15:36.010","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Lack of input validation\/sanitization in the 'ate' management service in the Tenda RX2 Pro 16.03.30.14 allows an unauthorized remote attacker to gain root shell access to the device by sending a crafted UDP packet to the 'ate' service when it is enabled. Authentication is not needed."},{"lang":"es","value":"La falta de validación\/depuración de entrada en el servicio de gestión \"ate\" del Tenda RX2 Pro 16.03.30.14 permite que un atacante remoto no autorizado obtenga acceso root al dispositivo mediante el envío de un paquete UDP manipulado al servicio \"ate\" cuando este está habilitado. No se requiere autenticación."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46628-command-injection-through-ifconfig-command-in-ate","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46629","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.660","lastModified":"2025-05-02T16:15:36.160","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Lack of access controls in the 'ate' management binary of the Tenda RX2 Pro 16.03.30.14 allows an unauthenticated remote attacker to perform unauthorized configuration changes for any router where 'ate' has been enabled by sending a crafted UDP packet"},{"lang":"es","value":"La falta de controles de acceso en el binario de administración 'ate' del Tenda RX2 Pro 16.03.30.14 permite que un atacante remoto no autenticado realice cambios de configuración no autorizados para cualquier enrutador donde se haya habilitado 'ate' mediante el envío de un paquete UDP manipulado."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46629-lack-of-authentication-in-ate","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46630","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:38.803","lastModified":"2025-05-02T15:15:49.420","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper access controls in the web management portal of the Tenda RX2 Pro 16.03.30.14 allows an unauthenticated remote attacker to enable 'ate' (a remote system management binary) by sending a \/goform\/ate web request."},{"lang":"es","value":"Los controles de acceso inadecuados en el portal de administración web de Tenda RX2 Pro 16.03.30.14 permiten que un atacante remoto no autenticado habilite 'ate' (un binario de administración del sistema remoto) enviando una solicitud web \/goform\/ate."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-287"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46630-enable-ate-unauthenticated-through-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46631","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:39.010","lastModified":"2025-05-02T15:15:49.560","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper access controls in the web management portal of the Tenda RX2 Pro 16.03.30.14 allows an unauthenticated remote attacker to enable telnet access to the router's OS by sending a \/goform\/telnet web request."},{"lang":"es","value":"Los controles de acceso inadecuados en el portal de administración web del Tenda RX2 Pro 16.03.30.14 permiten que un atacante remoto no autenticado habilite el acceso telnet al sistema operativo del enrutador mediante el envío de una solicitud web \/goform\/telnet."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-287"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46631-enable-telnet-unauthenticated-through-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46632","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:39.167","lastModified":"2025-05-02T15:15:49.710","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Initialization vector (IV) reuse in the web management portal of the Tenda RX2 Pro 16.03.30.14 may allow an attacker to discern information about or more easily decrypt encrypted messages between client and server."},{"lang":"es","value":"La reutilización del vector de inicialización (IV) en el portal de administración web de Tenda RX2 Pro 16.03.30.14 puede permitir que un atacante discierna información o descifre más fácilmente los mensajes cifrados entre el cliente y el servidor."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-323"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46632-static-iv-use-in-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46633","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:39.310","lastModified":"2025-05-02T15:15:49.853","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Cleartext transmission of sensitive information in the web management portal of the Tenda RX2 Pro 16.03.30.14 allows an attacker to decrypt traffic between the client and server by collecting the symmetric AES key from collected and\/or observed traffic. The AES key in sent in cleartext in response to successful authentication. The IV is always EU5H62G9ICGRNI43."},{"lang":"es","value":"La transmisión de información confidencial en texto plano en el portal de administración web del Tenda RX2 Pro 16.03.30.14 permite a un atacante descifrar el tráfico entre el cliente y el servidor mediante la recopilación de la clave AES simétrica del tráfico recopilado u observado. La clave AES se envía en texto plano en respuesta a una autenticación exitosa. El IV siempre es EU5H62G9ICGRNI43."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:L\/A:N","baseScore":8.2,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":4.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-312"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46633-transmission-of-plaintext-symmetric-key-in-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46634","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:39.460","lastModified":"2025-05-02T15:15:50.023","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Cleartext transmission of sensitive information in the web management portal of the Tenda RX2 Pro 16.03.30.14 may allow an unauthenticated attacker to authenticate to the web management portal by collecting credentials from observed\/collected traffic. It implements encryption, but not until after the user has transmitted the hash of their password in cleartext. The hash can be replayed to authenticate."},{"lang":"es","value":"La transmisión de información confidencial en texto plano en el portal de administración web del Tenda RX2 Pro 16.03.30.14 podría permitir que un atacante no autenticado se autentique en dicho portal recopilando credenciales del tráfico observado\/recopilado. Implementa cifrado, pero solo después de que el usuario haya transmitido el hash de su contraseña en texto plano. El hash puede reproducirse para la autenticación."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:L\/A:N","baseScore":8.2,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":4.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-312"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-rx2pro\/README?id=cve-2025-46634-transmission-of-plaintext-credentials-in-httpd","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46635","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T20:15:39.600","lastModified":"2025-05-02T15:15:50.167","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered on Tenda RX2 Pro 16.03.30.14 devices. Improper network isolation between the guest Wi-Fi network and other network interfaces on the router allows an attacker (who is authenticated to the guest Wi-Fi) to access resources on the router and\/or resources and devices on other networks hosted by the router by configuring a static IP address (within the non-guest subnet) on their host."},{"lang":"es","value":"Se detectó un problema en los dispositivos Tenda RX2 Pro 16.03.30.14. Un aislamiento de red inadecuado entre la red Wi-Fi de invitado y otras interfaces de red del router permite a un atacante (autenticado en la red Wi-Fi de invitado) acceder a recursos del router o a recursos y dispositivos de otras redes alojadas por este configurando una dirección IP estática (dentro de la subred no de invitado) en su host."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:L\/A:N","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":4.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/blog.uturn.dev\/#\/writeups\/iot-village\/tenda-w18e\/README?id=cve-2024-46435-delfacebookpic-stack-overflow","source":"cve@mitre.org"},{"url":"https:\/\/www.tendacn.com\/us\/default.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48905","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T21:15:52.033","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Sematell ReplyOne 7.4.3.0 has Insecure Permissions for the \/rest\/sessions endpoint."},{"lang":"es","value":"Sematell ReplyOne 7.4.3.0 tiene permisos inseguros para el endpoint \/rest\/sessions."}],"metrics":{},"references":[{"url":"https:\/\/www.syss.de\/fileadmin\/dokumente\/Publikationen\/Advisories\/SYSS-2024-082.txt","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48906","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T21:15:52.160","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Sematell ReplyOne 7.4.3.0 allows XSS via a ReplyDesk e-mail attachment name."},{"lang":"es","value":"Sematell ReplyOne 7.4.3.0 permite XSS a través de un nombre de archivo adjunto en un correo electrónico de ReplyDesk."}],"metrics":{},"references":[{"url":"https:\/\/www.syss.de\/fileadmin\/dokumente\/Publikationen\/Advisories\/SYSS-2024-081.txt","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48907","sourceIdentifier":"cve@mitre.org","published":"2025-05-01T21:15:52.270","lastModified":"2025-05-02T15:15:47.830","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Sematell ReplyOne 7.4.3.0 allows SSRF via the application server API."},{"lang":"es","value":"Sematell ReplyOne 7.4.3.0 permite SSRF a través de la API del servidor de aplicaciones."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/www.syss.de\/fileadmin\/dokumente\/Publikationen\/Advisories\/SYSS-2024-083.txt","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-4175","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T21:15:54.687","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in AlanBinu007 Spring-Boot-Advanced-Projects up to 3.1.3. This affects the function uploadUserProfileImage of the file \/Spring-Boot-Advanced-Projects-main\/Project-4.SpringBoot-AWS-S3\/backend\/src\/main\/java\/com\/urunov\/profile\/UserProfileController.jav of the component Upload Profile API Endpoint. The manipulation of the argument File leads to path traversal. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."},{"lang":"es","value":"Se encontró una vulnerabilidad clasificada como crítica en AlanBinu007 Spring-Boot-Advanced-Projects hasta la versión 3.1.3. Esta vulnerabilidad afecta a la función uploadUserProfileImage del archivo \/Spring-Boot-Advanced-Projects-main\/Project-4.SpringBoot-AWS-S3\/backend\/src\/main\/java\/com\/urunov\/profile\/UserProfileController.jav del componente Upload Profile API Endpoint. La manipulación del argumento File provoca un path traversal. Es posible iniciar el ataque de forma remota. El exploit se ha divulgado públicamente y podría utilizarse. Se contactó al proveedor con antelación para informarle sobre esta divulgación, pero no respondió."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/ShenxiuSec\/cve-proofs\/blob\/main\/POC-20250418-01.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306795","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306795","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561760","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-1333","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-01T22:15:16.657","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM MQ Container when used with the IBM MQ Operator LTS 2.0.0 through 2.0.29, MQ Operator CD 3.0.0, 3.0.1, 3.1.0 through 3.1.3, 3.3.0, 3.4.0, 3.4.1, 3.5.0, 3.5.1, and MQ Operator SC2 3.2.0 through 3.2.10  and configured with Cloud Pak for Integration Keycloak could disclose sensitive information to a privileged user."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:C\/C:H\/I:N\/A:N","baseScore":6.0,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.5,"impactScore":4.0}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-214"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232272","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2025-27365","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-01T22:15:17.500","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM MQ Operator LTS 2.0.0 through 2.0.29, MQ Operator CD 3.0.0, 3.0.1, 3.1.0 through 3.1.3, 3.3.0, 3.4.0, 3.4.1, 3.5.0, 3.5.1, and MQ Operator SC2 3.2.0 through 3.2.10 \n\nClient connecting to a MQ Queue Manager can cause a SIGSEGV in the AMQRMPPA channel process terminating it."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-416"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232272","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2025-43595","sourceIdentifier":"9119a7d8-5eab-497f-8521-727c672e3725","published":"2025-05-01T22:15:17.800","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An insecure file system permissions vulnerability in MSP360 Backup 4.3.1.115 allows a low privileged user to execute commands with root privileges in the 'Online Backup' folder. Upgrade to MSP360 Backup 4.4 (released on 2025-04-22)."}],"metrics":{"cvssMetricV40":[{"source":"9119a7d8-5eab-497f-8521-727c672e3725","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:L\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.5,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"9119a7d8-5eab-497f-8521-727c672e3725","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.9}]},"weaknesses":[{"source":"9119a7d8-5eab-497f-8521-727c672e3725","type":"Secondary","description":[{"lang":"en","value":"CWE-276"}]}],"references":[{"url":"https:\/\/help.msp360.com\/cloudberry-backup-mac-linux\/whats-new","source":"9119a7d8-5eab-497f-8521-727c672e3725"}]}},{"cve":{"id":"CVE-2025-4176","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T22:15:17.950","lastModified":"2025-05-02T18:15:27.613","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in PHPGurukul Blood Bank & Donor Management System 2.4 and classified as critical. This vulnerability affects unknown code of the file \/admin\/request-received-bydonar.php. The manipulation of the argument searchdata leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/bluechips-zhao\/myCVE\/issues\/5","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306796","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306796","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561764","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/bluechips-zhao\/myCVE\/issues\/5","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4178","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T22:15:18.140","lastModified":"2025-05-02T18:15:27.780","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in xiaowei1118 java_server up to 11a5bac8f4ba1c17e4bc1b27cad6d24868500e3a on Windows and classified as critical. This issue affects some unknown processing of the file \/src\/main\/java\/com\/changyu\/foryou\/controller\/FoodController.java of the component File Upload API. The manipulation leads to path traversal. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. This product takes the approach of rolling releases to provide continious delivery. Therefore, version details for affected and updated releases are not available."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:N\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:L","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":2.5}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:P","baseScore":5.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":4.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/ShenxiuSec\/cve-proofs\/blob\/main\/POC-20250418-02.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306797","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306797","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561794","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/ShenxiuSec\/cve-proofs\/blob\/main\/POC-20250418-02.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4180","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T22:15:18.313","lastModified":"2025-05-02T18:15:27.937","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server 2.0.7. It has been classified as critical. Affected is an unknown function of the component TRACE Command Handler. The manipulation leads to buffer overflow. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-25d55ad283aa400af464c76d713c07ad.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306798","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306798","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561035","source":"cna@vuldb.com"},{"url":"https:\/\/fitoxs.com\/exploit\/exploit-25d55ad283aa400af464c76d713c07ad.txt","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-52903","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-01T23:15:50.317","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Db2 for Linux, UNIX and Windows 12.1.0 and 12.1.1 is vulnerable to a denial of service as the server may crash under certain conditions with a specially crafted query."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":1.6,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232336","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2025-4181","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T23:15:50.833","lastModified":"2025-05-02T18:15:28.050","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server 2.0.7. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the component SEND Command Handler. The manipulation leads to buffer overflow. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-202cb962ac59075b964b07152d234b70.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306799","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306799","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561139","source":"cna@vuldb.com"},{"url":"https:\/\/fitoxs.com\/exploit\/exploit-202cb962ac59075b964b07152d234b70.txt","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4182","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T23:15:51.023","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PCMan FTP Server 2.0.7. It has been rated as critical. Affected by this issue is some unknown functionality of the component BELL Command Handler. The manipulation leads to buffer overflow. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-e99a18c428cb38d5f260853678922e03.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306800","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306800","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561141","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4183","sourceIdentifier":"cna@vuldb.com","published":"2025-05-01T23:15:51.197","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in PCMan FTP Server 2.0.7. This affects an unknown part of the component RECV Command Handler. The manipulation leads to buffer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-d8578edf8458ce06fbc5bb76a58c5ca4.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306801","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306801","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561144","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4184","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T00:15:18.877","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in PCMan FTP Server 2.0.7. This vulnerability affects unknown code of the component QUOTE Command Handler. The manipulation leads to buffer overflow. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/fitoxs.com\/exploit\/exploit-81dc9bdb52d04dc20036dbd8313ed055.txt","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306802","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306802","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561145","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4185","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T00:15:19.050","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in Wangshen SecGate 3600 2024. This issue affects some unknown processing of the file ?g=obj_area_export_save. The manipulation of the argument file_name leads to path traversal. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/flowus.cn\/share\/6bd8ca39-bad2-4567-b0e1-9407991ad943?code=G8A6P3","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306803","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306803","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561803","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4186","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T00:15:19.233","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in Wangshen SecGate 3600 2024. Affected is an unknown function of the file \/?g=route_ispinfo_export_save. The manipulation of the argument file_name leads to path traversal. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/flowus.cn\/share\/0f982f99-ecd5-4e35-88f0-c27093743385?code=G8A6P3","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306804","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306804","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561814","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4191","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T00:15:19.440","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in PHPGurukul Employee Record Management System 1.3 and classified as critical. Affected by this vulnerability is an unknown functionality of the file \/editmyeducation.php. The manipulation of the argument coursepg leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ideal-valli\/myCVE\/issues\/3","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306805","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306805","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561816","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/ideal-valli\/myCVE\/issues\/3","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-55909","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-02T01:15:52.567","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Concert Software 1.0.0 through 1.0.5 could allow an authenticated user to cause a denial of service due to the expansion of archive files without controlling resource consumption."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-409"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232169","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2024-55910","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-02T01:15:53.867","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Concert Software 1.0.0 through 1.0.5 is vulnerable to server-side request forgery (SSRF). This may allow an authenticated attacker to send unauthorized requests from the system, potentially leading to network enumeration or facilitating other attacks."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232169","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2024-55912","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-02T01:15:54.000","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Concert Software 1.0.0 through 1.0.5 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":5.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.2,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-327"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232169","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2024-55913","sourceIdentifier":"psirt@us.ibm.com","published":"2025-05-02T01:15:54.140","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Concert Software 1.0.0 through 1.0.5 could allow a remote attacker to traverse directories on the system. An attacker could send a specially crafted URL request containing \"dot dot\" sequences (\/..\/) to view arbitrary files on the system."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7232169","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2025-4192","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T01:15:54.520","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in itsourcecode Restaurant Management System 1.0. It has been classified as critical. This affects an unknown part of the file \/admin\/category_save.php. The manipulation of the argument Category leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ARPANET-cybersecurity\/vuldb\/issues\/4","source":"cna@vuldb.com"},{"url":"https:\/\/itsourcecode.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306807","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306807","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561838","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/XuepengZhao-insp\/vuldb\/issues\/4","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4193","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T01:15:54.743","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in itsourcecode Restaurant Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file \/admin\/category_update.php. The manipulation of the argument Category leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ARPANET-cybersecurity\/vuldb\/issues\/5","source":"cna@vuldb.com"},{"url":"https:\/\/itsourcecode.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306806","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306806","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561849","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/XuepengZhao-insp\/vuldb\/issues\/5","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-4195","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T01:15:54.917","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in itsourcecode Gym Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file \/ajax.php?action=save_member. The manipulation of the argument umember_id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/ARPANET-cybersecurity\/vuldb\/issues\/6","source":"cna@vuldb.com"},{"url":"https:\/\/itsourcecode.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306808","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306808","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561876","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/XuepengZhao-insp\/vuldb\/issues\/6","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2025-29825","sourceIdentifier":"secure@microsoft.com","published":"2025-05-02T02:15:16.317","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"User interface (ui) misrepresentation of critical information in Microsoft Edge (Chromium-based) allows an unauthorized attacker to perform spoofing over a network."}],"metrics":{"cvssMetricV31":[{"source":"secure@microsoft.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:N\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"secure@microsoft.com","type":"Primary","description":[{"lang":"en","value":"CWE-451"}]}],"references":[{"url":"https:\/\/msrc.microsoft.com\/update-guide\/vulnerability\/CVE-2025-29825","source":"secure@microsoft.com"}]}},{"cve":{"id":"CVE-2025-4196","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T02:15:17.320","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Patient Record Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/birthing.php. The manipulation of the argument comp_id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/zhxu147\/CVE\/blob\/main\/hcpms_birthing.php_sqli.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306809","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306809","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561880","source":"cna@vuldb.com"},{"url":"https:\/\/www.sourcecodester.com\/","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-4197","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T02:15:17.687","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in code-projects Patient Record Management System 1.0. Affected is an unknown function of the file \/edit_xpatient.php. The manipulation of the argument lastname leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/zhxu147\/CVE\/blob\/main\/hcpms_edit_xpatient.php_sqli.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.306810","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.306810","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.561890","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-2880","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:19.750","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Yame | Link In Bio plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 0.9.0 through the publicly accessible phpinfo.php script. This makes it possible for unauthenticated attackers to view potentially sensitive information contained in the exposed file."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/plugins.svn.wordpress.org\/yame-linkinbio\/trunk\/vendor\/phpfastcache\/phpfastcache\/examples\/phpinfo.php","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/yame-linkinbio\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c45aea72-2c9d-484d-8904-a1985df4b57c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3670","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:20.700","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The KiwiChat NextClient plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘url’ parameter in all versions up to, and including, 6.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/kiwichat\/trunk\/public\/index.php#L25","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/kiwichat\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/fd6f6a2c-59d3-4091-82ac-0edf9f47ef65?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3746","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:20.850","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The OTP-less one tap Sign in plugin for WordPress is vulnerable to privilege escalation via account takeover in versions 2.0.14 to 2.0.59. This is due to the plugin not properly validating a user's identity prior to updating their details, like email. This makes it possible for unauthenticated attackers to change arbitrary users' email addresses, including administrators, and leverage that to reset the user's password and gain access to their account.\r\nAdditionally, the plugin returns authentication cookies in the response, which can be used to access the account directly."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/otpless\/tags\/2.0.59.\/includes\/class-login.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/63fab608-1a75-4b07-8d82-8ab87e197547?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4131","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:21.257","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The GmapsMania plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's gmap shortcode in all versions up to, and including, 1.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/gmapsmania\/trunk\/gmapsmania.php#L14","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/30d39718-945a-43a2-be08-70be1af55965?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4177","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:21.397","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Flynax Bridge plugin for WordPress is vulnerable to unauthorized loss of data due to a missing capability check on the deleteUser() function in all versions up to, and including, 2.2.0. This makes it possible for unauthenticated attackers to delete arbitrary users."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/flynax-bridge\/trunk\/src\/API.php#L386","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/dcb33d02-d384-4dff-91e1-c49e86b97d6e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-4179","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T03:15:21.540","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Flynax Bridge plugin for WordPress is vulnerable to limited Privilege Escalation due to a missing capability check on the registerUser() function in all versions up to, and including, 2.2.0. This makes it possible for unauthenticated attackers to register new user accounts as authors."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/flynax-bridge\/trunk\/src\/API.php#L288","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a2447cf4-0261-4ef2-98ec-98fa02dc8b87?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12023","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:43.097","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The FULL – Cliente plugin for WordPress is vulnerable to SQL Injection via the 'formId' parameter in all versions 3.1.5 to 3.1.25 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database. This is only exploitable when the PRO version of the plugin is activated, along with Elementor Pro and  Elementor CRM."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/full-customer\/tags\/3.1.25\/app\/controller\/elementor-crm\/Hooks.php#L181","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/full-customer\/tags\/3.1.26\/app\/controller\/elementor-crm\/Hooks.php#L181","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/86e990ae-6bfe-4f2b-8c37-b0675430a638?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13322","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:44.210","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Ads Pro Plugin - Multi-Purpose WordPress Advertising Manager plugin for WordPress is vulnerable to SQL Injection via the 'a_id' parameter in all versions up to, and including, 4.88 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/codecanyon.net\/item\/ads-pro-plugin-multipurpose-wordpress-advertising-manager\/10275010","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/3bcb60a8-220f-45a4-a9a9-10f64acf470c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13344","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:45.430","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Advance Seat Reservation Management for WooCommerce plugin for WordPress is vulnerable to SQL Injection via the 'profileId' parameter in all versions up to, and including, 3.3 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/codecanyon.net\/item\/advance-seat-reservation-management-for-woocommerce\/19984266","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/35acdb85-e463-46b1-aea7-a6d4c3581499?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13418","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:45.697","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Multiple plugins and\/or themes for WordPress are vulnerable to Arbitrary File Uploads due to a missing capability check on the ajaxUploadFonts() function in various versions. This makes it possible for authenticated attackers, with Subscriber-level access and above, to upload arbitrary files that can make remote code execution possible. This issue was escalated to Envato over two months from the date of this disclosure and the issue, while partially patched, is still vulnerable."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/beyot-wordpress-real-estate-theme\/19514964","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/bced4547-3264-43dc-8bb1-89a06f74ccbd?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13419","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:45.873","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Multiple plugins and\/or themes for WordPress using Smart Framework are vulnerable to Stored Cross-Site Scripting due to a missing capability check on the saveOptions() and importThemeOptions() functions in various versions. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update the plugin's settings which includes custom JavaScript that is enabled site-wide. This issue was escalated to Envato over two months from the date of this disclosure and the issue is still vulnerable."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/beyot-wordpress-real-estate-theme\/19514964","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/07729c28-a73a-46f4-853e-116792d612f5?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13420","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:46.047","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Multiple plugins and\/or themes for WordPress are vulnerable to unauthorized access due to a missing capability check on several AJAX actions like 'gsf_reset_section_options', 'gsf_reset_section_options', 'gsf_create_preset_options' and more in various versions. This makes it possible for authenticated attackers, with Subscriber-level access and above, to reset and modify some of the plugin\/theme settings. This issue was escalated to Envato over two months from the date of this disclosure and the issues, while partially patched, are still vulnerable."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/beyot-wordpress-real-estate-theme\/19514964","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/6d484422-4adf-4370-b228-61496d5ad78a?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1326","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:46.530","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Homey theme for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the homey_reservation_del() function in all versions up to, and including, 2.4.4. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete arbitrary reservations and posts."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/homey-booking-wordpress-theme\/23338013","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c0ef3ae7-b3c0-4f54-a95d-9f8cf9497d8f?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1327","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:46.760","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Homey theme for WordPress is vulnerable to Insecure Direct Object Reference in all versions up to, and including, 2.4.4 via the 'homey_delete_user_account' action due to missing validation on a user controlled key. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete other user's accounts."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/homey-booking-wordpress-theme\/23338013","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/38aa649c-e9d3-458b-b567-e2e751aaca00?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3510","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:51.480","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The tagDiv Composer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple shortcodes in all versions up to, and including, 5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/tagdiv.com\/newspaper-changelog\/","source":"security@wordfence.com"},{"url":"https:\/\/tagdiv.com\/tagdiv-composer-page-builder-basics\/","source":"security@wordfence.com"},{"url":"https:\/\/themeforest.net\/item\/newspaper\/5489609","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/2bd6b66d-f33e-4287-850b-a199de72f6ad?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3707","sourceIdentifier":"twcert@cert.org.tw","published":"2025-05-02T04:15:55.140","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The eHDR CTMS from Sunnet has a SQL Injection vulnerability, allowing remote attackers with regular privileges to inject arbitrary SQL command to read database contents."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-10084-d7c47-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-10083-4ed7f-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2025-3708","sourceIdentifier":"twcert@cert.org.tw","published":"2025-05-02T04:15:55.507","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Le-show medical practice management system from Le-yan has a SQL Injection vulnerability, allowing unauthenticated remote attackers to inject arbitrary SQL commands to read, modify, and delete database contents."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-10086-dbfd0-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-10085-69e16-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2025-3709","sourceIdentifier":"twcert@cert.org.tw","published":"2025-05-02T04:15:55.707","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Agentflow from Flowring Technology has an Account Lockout Bypass vulnerability, allowing unauthenticated remote attackers to exploit this vulnerability to perform password brute force attack."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-307"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-10090-112f7-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-10091-12462-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2025-3748","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:55.883","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Taxonomy Chain Menu plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's pn_chain_menu shortcode in all versions up to, and including, 1.0.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/taxonomy-chain-menu\/trunk\/index.php#L190","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3284354\/","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/taxonomy-chain-menu\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/25afc28c-2814-4b49-add5-1d0ce5ff3a07?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3858","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T04:15:56.040","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Formality plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘align’ parameter in all versions up to, and including, 1.5.8 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/formality\/trunk\/public\/class-formality-form.php#L137","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3285036\/","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/formality\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e25157d3-42ac-4dd6-a736-5623a16e5629?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3438","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T06:15:48.020","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The MStore API – Create Native Android & iOS Apps On The Cloud plugin for WordPress is vulnerable to limited privilege escalation in all versions up to, and including, 4.17.4. This is due to a lack of restriction of role when registering. This makes it possible for unauthenticated attackers to to register with the 'wcfm_vendor' role, which is a Store Vendor role in the WCFM Marketplace – Multivendor Marketplace for WooCommerce plugin for WordPress. The vulnerability can only be exploited if the WCFM Marketplace – Multivendor Marketplace for WooCommerce plugin is installed and activated. The vulnerability was partially patched in version 4.17.3."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-269"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/mstore-api\/trunk\/controllers\/flutter-user.php#L392","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/mstore-api\/trunk\/controllers\/flutter-user.php#L413","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3277790","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3279132\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/be5d86ad-f94b-4fcb-9b74-ecddde2bf29d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3488","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T06:15:48.707","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The WPML plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's wpml_language_switcher shortcode in versions 3.6.0 - 4.7.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpml.org\/category\/changelog\/","source":"security@wordfence.com"},{"url":"https:\/\/wpml.org\/documentation\/support\/wpml-coding-api\/shortcodes\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/92c1bd85-5f81-4bb6-b6af-6cda85b91b9e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-3513","sourceIdentifier":"contact@wpscan.com","published":"2025-05-02T06:15:48.887","lastModified":"2025-05-02T16:15:34.100","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The SureForms  WordPress plugin before 1.4.4 does not sanitise and escape some of its Form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/dd7e0bb3-4a98-4f62-bd2e-f30b27d71226\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-3514","sourceIdentifier":"contact@wpscan.com","published":"2025-05-02T06:15:48.980","lastModified":"2025-05-02T15:15:48.797","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The SureForms  WordPress plugin before 1.4.4 does not sanitise and escape some of its Form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/fc3da503-a973-44d8-82d0-13539501f8c0\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2025-47201","sourceIdentifier":"cve@mitre.org","published":"2025-05-02T06:15:49.070","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In Intrexx Portal Server before 12.0.4, multiple Velocity-Scripts are susceptible to the execution of unrequested JavaScript code in HTML, aka XSS."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.3,"impactScore":2.7}]},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/security.intrexx.com\/en\/security-advisories\/ixsa-20250429-01\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-13858","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T07:15:50.860","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Buddyboss Platform plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘invitee_name’ parameter in all versions up to, and including, 2.8.50 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. The vulnerability was partially patched in version 2.8.41."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.buddyboss.com\/platform\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/5f50e293-aebd-44dd-a692-64dea8f6622f?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13859","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T07:15:51.067","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Buddyboss Platform plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘bp_nouveau_ajax_media_save’ function in all versions up to, and including, 2.8.50 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. The vulnerability was partially patched in version 2.8.41."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.buddyboss.com\/platform\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/d77c8096-40b1-4ac7-881f-6aed98da6752?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13860","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T07:15:51.220","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Buddyboss Platform plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘bbp_topic_title’ parameter in all versions up to, and including, 2.8.50 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Subscriber-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. The vulnerability was partially patched in version 2.8.41."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/example\/social\/forums\/forum\/redteam\/","source":"security@wordfence.com"},{"url":"https:\/\/www.buddyboss.com\/platform\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a0ac8a41-553e-473b-82a7-226de17e472d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-11142","sourceIdentifier":"iletisim@usom.gov.tr","published":"2025-05-02T08:15:15.247","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Cross-Site Request Forgery (CSRF) vulnerability in Gosoft Software Proticaret E-Commerce allows Cross Site Request Forgery.This issue affects Proticaret E-Commerce: before v6.0\n\nNOTE: According to the vendor, fixing process is still ongoing for v4.05."}],"metrics":{"cvssMetricV31":[{"source":"iletisim@usom.gov.tr","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.5}]},"weaknesses":[{"source":"iletisim@usom.gov.tr","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/www.usom.gov.tr\/bildirim\/tr-25-0098","source":"iletisim@usom.gov.tr"}]}},{"cve":{"id":"CVE-2025-2812","sourceIdentifier":"iletisim@usom.gov.tr","published":"2025-05-02T09:15:20.210","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Mydata Informatics Ticket Sales Automation allows Blind SQL Injection.This issue affects Ticket Sales Automation: before 03.04.2025 (DD.MM.YYYY)."}],"metrics":{"cvssMetricV31":[{"source":"iletisim@usom.gov.tr","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"iletisim@usom.gov.tr","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/www.usom.gov.tr\/bildirim\/tr-25-0099","source":"iletisim@usom.gov.tr"}]}},{"cve":{"id":"CVE-2025-0072","sourceIdentifier":"arm-security@arm.com","published":"2025-05-02T10:15:15.947","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Use After Free vulnerability in Arm Ltd Valhall GPU Kernel Driver, Arm Ltd Arm 5th Gen GPU Architecture Kernel Driver allows a local non-privileged user process to perform improper GPU memory processing operations to gain access to already freed memory.\n\nThis issue affects Valhall GPU Kernel Driver: from r29p0 through r49p3, from r50p0 through r53p0; Arm 5th Gen GPU Architecture Kernel Driver: from r41p0 through r49p3, from r50p0 through r53p0."}],"metrics":{},"weaknesses":[{"source":"arm-security@arm.com","type":"Secondary","description":[{"lang":"en","value":"CWE-416"}]}],"references":[{"url":"https:\/\/developer.arm.com\/documentation\/110465\/latest\/","source":"arm-security@arm.com"}]}},{"cve":{"id":"CVE-2025-0427","sourceIdentifier":"arm-security@arm.com","published":"2025-05-02T10:15:16.637","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Use After Free vulnerability in Arm Ltd Bifrost GPU Kernel Driver, Arm Ltd Valhall GPU Kernel Driver, Arm Ltd Arm 5th Gen GPU Architecture Kernel Driver allows a local non-privileged user process to perform valid GPU processing operations to gain access to already freed memory.This issue affects Bifrost GPU Kernel Driver: from r8p0 through r49p3, from r50p0 through r51p0; Valhall GPU Kernel Driver: from r19p0 through r49p3, from r50p0 through r53p0; Arm 5th Gen GPU Architecture Kernel Driver: from r41p0 through r49p3, from r50p0 through r53p0."}],"metrics":{},"weaknesses":[{"source":"arm-security@arm.com","type":"Secondary","description":[{"lang":"en","value":"CWE-416"}]}],"references":[{"url":"https:\/\/developer.arm.com\/documentation\/110465\/latest\/","source":"arm-security@arm.com"}]}},{"cve":{"id":"CVE-2025-1301","sourceIdentifier":"iletisim@usom.gov.tr","published":"2025-05-02T11:15:46.000","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Yordam Informatics Library Automation System allows Reflected XSS.This issue affects Library Automation System: before 21.6."}],"metrics":{"cvssMetricV31":[{"source":"iletisim@usom.gov.tr","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:H\/I:N\/A:N","baseScore":7.4,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":4.0}]},"weaknesses":[{"source":"iletisim@usom.gov.tr","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.usom.gov.tr\/bildirim\/tr-25-0100","source":"iletisim@usom.gov.tr"}]}},{"cve":{"id":"CVE-2025-2421","sourceIdentifier":"iletisim@usom.gov.tr","published":"2025-05-02T12:15:15.803","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Control of Generation of Code ('Code Injection') vulnerability in Profelis Informatics SambaBox allows Code Injection.This issue affects SambaBox: before 5.1."}],"metrics":{"cvssMetricV31":[{"source":"iletisim@usom.gov.tr","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:C\/C:H\/I:H\/A:H","baseScore":8.2,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.5,"impactScore":6.0}]},"weaknesses":[{"source":"iletisim@usom.gov.tr","type":"Primary","description":[{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/sambabox.io\/2025\/04\/14\/version-5-1\/","source":"iletisim@usom.gov.tr"},{"url":"https:\/\/www.usom.gov.tr\/bildirim\/tr-25-0101","source":"iletisim@usom.gov.tr"}]}},{"cve":{"id":"CVE-2025-2488","sourceIdentifier":"iletisim@usom.gov.tr","published":"2025-05-02T12:15:16.340","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Profelis Informatics SambaBox allows Cross-Site Scripting (XSS).This issue affects SambaBox: before 5.1."}],"metrics":{"cvssMetricV31":[{"source":"iletisim@usom.gov.tr","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:R\/S:U\/C:L\/I:L\/A:L","baseScore":4.0,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":0.6,"impactScore":3.4}]},"weaknesses":[{"source":"iletisim@usom.gov.tr","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/sambabox.io\/2025\/04\/14\/version-5-1\/","source":"iletisim@usom.gov.tr"},{"url":"https:\/\/www.usom.gov.tr\/bildirim\/tr-25-0101","source":"iletisim@usom.gov.tr"}]}},{"cve":{"id":"CVE-2025-2605","sourceIdentifier":"psirt@honeywell.com","published":"2025-05-02T13:15:46.440","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Honeywell MB-Secure allows Privilege Abuse. This issue affects MB-Secure: from V11.04 before V12.53 and MB-Secure PRO from V01.06 before V03.09.Honeywell also recommends updating to the most recent version of this product."}],"metrics":{"cvssMetricV31":[{"source":"psirt@honeywell.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:H\/A:H","baseScore":9.9,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.1,"impactScore":6.0}]},"weaknesses":[{"source":"psirt@honeywell.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/www.honeywell.com\/us\/en\/product-security#security-notices","source":"psirt@honeywell.com"}]}},{"cve":{"id":"CVE-2025-4204","sourceIdentifier":"security@wordfence.com","published":"2025-05-02T13:15:47.423","lastModified":"2025-05-02T13:52:51.693","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The Ultimate Auction Pro plugin for WordPress is vulnerable to SQL Injection via the ‘auction_id’ parameter in all versions up to, and including, 1.5.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/auctionplugin.net\/changelog\/ultimate-woo-auction-pro\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e492029d-6613-4881-b986-9fe14cb2cf74?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1883","sourceIdentifier":"3DS.Information-Security@3ds.com","published":"2025-05-02T15:15:48.317","lastModified":"2025-05-02T15:15:48.317","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Out-Of-Bounds Write vulnerability exists in the OBJ file reading procedure in SOLIDWORKS eDrawings on Release SOLIDWORKS Desktop 2025. This vulnerability could allow an attacker to execute arbitrary code while opening a specially crafted OBJÂ file."}],"metrics":{"cvssMetricV31":[{"source":"3DS.Information-Security@3ds.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":7.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.9}]},"weaknesses":[{"source":"3DS.Information-Security@3ds.com","type":"Secondary","description":[{"lang":"en","value":"CWE-787"}]}],"references":[{"url":"https:\/\/www.3ds.com\/vulnerability\/advisories","source":"3DS.Information-Security@3ds.com"}]}},{"cve":{"id":"CVE-2025-1884","sourceIdentifier":"3DS.Information-Security@3ds.com","published":"2025-05-02T15:15:48.440","lastModified":"2025-05-02T15:15:48.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Use-After-Free vulnerability exists in the SLDPRT file reading procedure in SOLIDWORKS eDrawings on Release SOLIDWORKS Desktop 2025. This vulnerability could allow an attacker to execute arbitrary code while opening a specially crafted SLDPRT file."}],"metrics":{"cvssMetricV31":[{"source":"3DS.Information-Security@3ds.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":7.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.9}]},"weaknesses":[{"source":"3DS.Information-Security@3ds.com","type":"Secondary","description":[{"lang":"en","value":"CWE-416"}]}],"references":[{"url":"https:\/\/www.3ds.com\/vulnerability\/advisories","source":"3DS.Information-Security@3ds.com"}]}},{"cve":{"id":"CVE-2025-37797","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T15:15:48.557","lastModified":"2025-05-02T15:15:48.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class handling\n\nThis patch fixes a Use-After-Free vulnerability in the HFSC qdisc class\nhandling. The issue occurs due to a time-of-check\/time-of-use condition\nin hfsc_change_class() when working with certain child qdiscs like netem\nor codel.\n\nThe vulnerability works as follows:\n1. hfsc_change_class() checks if a class has packets (q.qlen != 0)\n2. It then calls qdisc_peek_len(), which for certain qdiscs (e.g.,\n   codel, netem) might drop packets and empty the queue\n3. The code continues assuming the queue is still non-empty, adding\n   the class to vttree\n4. This breaks HFSC scheduler assumptions that only non-empty classes\n   are in vttree\n5. Later, when the class is destroyed, this can lead to a Use-After-Free\n\nThe fix adds a second queue length check after qdisc_peek_len() to verify\nthe queue wasn't emptied."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20d584a33e480ae80d105f43e0e7b56784da41b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28b09a067831f7317c3841812276022d6c940677","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39b9095dd3b55d9b2743df038c32138efa34a9de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3aa852e3605000d5c47035c3fc3a986d14ccfa9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3df275ef0a6ae181e8428a6589ef5d5231e58b5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86cd4641c713455a4f1c8e54c370c598c2b1cee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb583c88d23b72d8d16453d24856c99bd93dadf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcc8ede663569c704fb00a702973bd6c00373283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-37798","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T15:15:48.657","lastModified":"2025-05-02T15:15:48.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncodel: remove sch->q.qlen check before qdisc_tree_reduce_backlog()\n\nAfter making all ->qlen_notify() callbacks idempotent, now it is safe to\nremove the check of qlen!=0 from both fq_codel_dequeue() and\ncodel_qdisc_dequeue()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f9761a94bae33d26e6a81b31b36e7d776d93dc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/342debc12183b51773b3345ba267e9263bdfaaef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d55144b12e742404bb3f8fee6038bafbf45619d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/829c49b6b2ff45b043739168fd1245e4e1a91a30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a57fe60ef4cf96bfbb6b58397ec28bdb5a5c6b31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e73c838c80dccb9e4f19becc11d9f3cb4a27d483","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-3927","sourceIdentifier":"cret@cert.org","published":"2025-05-02T15:15:49.017","lastModified":"2025-05-02T16:15:34.273","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"cret@cert.org","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"Digigram's PYKO-OUT audio-over-IP (AoIP) web-server does not require a password by default, allowing any attacker with the target IP address to connect and compromise the device, potentially pivoting to connected network or hardware devices."}],"metrics":{},"references":[{"url":"https:\/\/www.digigram.com\/download\/pyko-out-user-manual-en-jan-2019\/","source":"cret@cert.org"},{"url":"https:\/\/www.kb.cert.org\/vuls\/id\/360686","source":"af854a3a-2127-422b-91ae-364da2661108"}]}},{"cve":{"id":"CVE-2025-44868","sourceIdentifier":"cve@mitre.org","published":"2025-05-02T15:15:49.123","lastModified":"2025-05-02T15:15:49.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Wavlink WL-WN530H4 20220801 was found to contain a command injection vulnerability in the ping_test function of the adm.cgi via the pingIp parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Wavlink_WL-WN530H4\/ping_test\/readme.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44872","sourceIdentifier":"cve@mitre.org","published":"2025-05-02T15:15:49.227","lastModified":"2025-05-02T15:15:49.227","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda AC9 V15.03.06.42_multi was found to contain a command injection vulnerability in the formsetUsbUnload function via the deviceName parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_AC\/AC9_formsetUsbUnload","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-44877","sourceIdentifier":"cve@mitre.org","published":"2025-05-02T15:15:49.323","lastModified":"2025-05-02T15:15:49.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Tenda AC9 V15.03.06.42_multi was found to contain a command injection vulnerability in the formSetSambaConf function via the usbname parameter. This vulnerability allows attackers to execute arbitrary commands via a crafted request."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Summermu\/VulnForIoT\/tree\/main\/Tenda_AC\/AC9_formSetSambaConf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-4166","sourceIdentifier":"security@hashicorp.com","published":"2025-05-02T15:15:50.313","lastModified":"2025-05-02T15:15:50.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vault Community and Vault Enterprise Key\/Value (kv) Version 2 plugin may unintentionally expose sensitive information in server and audit logs when users submit malformed payloads during secret creation or update operations via the Vault REST API. This vulnerability, identified as CVE-2025-4166, is fixed in Vault Community 1.19.3 and Vault Enterprise 1.19.3, 1.18.9, 1.17.16, 1.16.20."}],"metrics":{"cvssMetricV31":[{"source":"security@hashicorp.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:H\/I:N\/A:N","baseScore":4.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@hashicorp.com","type":"Secondary","description":[{"lang":"en","value":"CWE-209"}]}],"references":[{"url":"https:\/\/discuss.hashicorp.com\/t\/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin","source":"security@hashicorp.com"}]}},{"cve":{"id":"CVE-2022-49932","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.070","lastModified":"2025-05-02T16:15:22.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Do _all_ initialization before exposing \/dev\/kvm to userspace\n\nCall kvm_init() only after _all_ setup is complete, as kvm_init() exposes\n\/dev\/kvm to userspace and thus allows userspace to create VMs (and call\nother ioctls).  E.g. KVM will encounter a NULL pointer when attempting to\nadd a vCPU to the per-CPU loaded_vmcss_on_cpu list if userspace is able to\ncreate a VM before vmx_init() configures said list.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000008\n #PF: supervisor write access in kernel mode\n #PF: error_code(0x0002) - not-present page\n PGD 0 P4D 0\n Oops: 0002 [#1] SMP\n CPU: 6 PID: 1143 Comm: stable Not tainted 6.0.0-rc7+ #988\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n RIP: 0010:vmx_vcpu_load_vmcs+0x68\/0x230 [kvm_intel]\n  <TASK>\n  vmx_vcpu_load+0x16\/0x60 [kvm_intel]\n  kvm_arch_vcpu_load+0x32\/0x1f0 [kvm]\n  vcpu_load+0x2f\/0x40 [kvm]\n  kvm_arch_vcpu_create+0x231\/0x310 [kvm]\n  kvm_vm_ioctl+0x79f\/0xe10 [kvm]\n  ? handle_mm_fault+0xb1\/0x220\n  __x64_sys_ioctl+0x80\/0xb0\n  do_syscall_64+0x2b\/0x50\n  entry_SYSCALL_64_after_hwframe+0x46\/0xb0\n RIP: 0033:0x7f5a6b05743b\n  <\/TASK>\n Modules linked in: vhost_net vhost vhost_iotlb tap kvm_intel(+) kvm irqbypass"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e136e969d268b9b89329c816c002e53f60e82985","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e28533c08023c4b319b7f2cd77f3f7c9204eb517","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e32b120071ea114efc0b4ddd439547750b85f618","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49933","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.163","lastModified":"2025-05-02T16:15:22.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Reset eVMCS controls in VP assist page during hardware disabling\n\nReset the eVMCS controls in the per-CPU VP assist page during hardware\ndisabling instead of waiting until kvm-intel's module exit.  The controls\nare activated if and only if KVM creates a VM, i.e. don't need to be\nreset if hardware is never enabled.\n\nDoing the reset during hardware disabling will naturally fix a potential\nNULL pointer deref bug once KVM disables CPU hotplug while enabling and\ndisabling hardware (which is necessary to fix a variety of bugs).  If the\nkernel is running as the root partition, the VP assist page is unmapped\nduring CPU hot unplug, and so KVM's clearing of the eVMCS controls needs\nto occur with CPU hot(un)plug disabled, otherwise KVM could attempt to\nwrite to a CPU's VP assist page after it's unmapped."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01aa8e5704bac9fcd7401eb1a74a375fba594203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2916b70fc342719f570640de07251b7f91feebdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afb26bfc01db6ef4728e96314f08431934ffe833","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53035","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.627","lastModified":"2025-05-02T16:15:22.627","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix kernel-infoleak in nilfs_ioctl_wrap_copy()\n\nThe ioctl helper function nilfs_ioctl_wrap_copy(), which exchanges a\nmetadata array to\/from user space, may copy uninitialized buffer regions\nto user space memory for read-only ioctl commands NILFS_IOCTL_GET_SUINFO\nand NILFS_IOCTL_GET_CPINFO.\n\nThis can occur when the element size of the user space metadata given by\nthe v_size member of the argument nilfs_argv structure is larger than the\nsize of the metadata element (nilfs_suinfo structure or nilfs_cpinfo\nstructure) on the file system side.\n\nKMSAN-enabled kernels detect this issue as follows:\n\n BUG: KMSAN: kernel-infoleak in instrument_copy_to_user\n include\/linux\/instrumented.h:121 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_user+0xc0\/0x100 lib\/usercopy.c:33\n  instrument_copy_to_user include\/linux\/instrumented.h:121 [inline]\n  _copy_to_user+0xc0\/0x100 lib\/usercopy.c:33\n  copy_to_user include\/linux\/uaccess.h:169 [inline]\n  nilfs_ioctl_wrap_copy+0x6fa\/0xc10 fs\/nilfs2\/ioctl.c:99\n  nilfs_ioctl_get_info fs\/nilfs2\/ioctl.c:1173 [inline]\n  nilfs_ioctl+0x2402\/0x4450 fs\/nilfs2\/ioctl.c:1290\n  nilfs_compat_ioctl+0x1b8\/0x200 fs\/nilfs2\/ioctl.c:1343\n  __do_compat_sys_ioctl fs\/ioctl.c:968 [inline]\n  __se_compat_sys_ioctl+0x7dd\/0x1000 fs\/ioctl.c:910\n  __ia32_compat_sys_ioctl+0x93\/0xd0 fs\/ioctl.c:910\n  do_syscall_32_irqs_on arch\/x86\/entry\/common.c:112 [inline]\n  __do_fast_syscall_32+0xa2\/0x100 arch\/x86\/entry\/common.c:178\n  do_fast_syscall_32+0x37\/0x80 arch\/x86\/entry\/common.c:203\n  do_SYSENTER_32+0x1f\/0x30 arch\/x86\/entry\/common.c:246\n  entry_SYSENTER_compat_after_hwframe+0x70\/0x82\n\n Uninit was created at:\n  __alloc_pages+0x9f6\/0xe90 mm\/page_alloc.c:5572\n  alloc_pages+0xab0\/0xd80 mm\/mempolicy.c:2287\n  __get_free_pages+0x34\/0xc0 mm\/page_alloc.c:5599\n  nilfs_ioctl_wrap_copy+0x223\/0xc10 fs\/nilfs2\/ioctl.c:74\n  nilfs_ioctl_get_info fs\/nilfs2\/ioctl.c:1173 [inline]\n  nilfs_ioctl+0x2402\/0x4450 fs\/nilfs2\/ioctl.c:1290\n  nilfs_compat_ioctl+0x1b8\/0x200 fs\/nilfs2\/ioctl.c:1343\n  __do_compat_sys_ioctl fs\/ioctl.c:968 [inline]\n  __se_compat_sys_ioctl+0x7dd\/0x1000 fs\/ioctl.c:910\n  __ia32_compat_sys_ioctl+0x93\/0xd0 fs\/ioctl.c:910\n  do_syscall_32_irqs_on arch\/x86\/entry\/common.c:112 [inline]\n  __do_fast_syscall_32+0xa2\/0x100 arch\/x86\/entry\/common.c:178\n  do_fast_syscall_32+0x37\/0x80 arch\/x86\/entry\/common.c:203\n  do_SYSENTER_32+0x1f\/0x30 arch\/x86\/entry\/common.c:246\n  entry_SYSENTER_compat_after_hwframe+0x70\/0x82\n\n Bytes 16-127 of 3968 are uninitialized\n ...\n\nThis eliminates the leak issue by initializing the page allocated as\nbuffer using get_zeroed_page()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/003587000276f81d0114b5ce773d80c119d8cb30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bb105cc72beb9d51bf12f5c657336d2d35bdc5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f33b042f74fc9662eba17f4cd19b07d84bbc6c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a6550b365c0ce2e65905de57dcbfe1f7d629726","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5cbf6a8c0e19b062b829c5b7aca01468bb57f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c5034e9a0e03db8d5e9eabb176340259b5b97e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a94932381e8dae4117e9129b3c1282e18aa97b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d18db946cc6a394291539e030df32324285648f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53036","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.733","lastModified":"2025-05-02T16:15:22.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Fix call trace warning and hang when removing amdgpu device\n\nOn GPUs with RAS enabled, below call trace and hang are observed when\nshutting down device.\n\nv2: use DRM device unplugged flag instead of shutdown flag as the check to\nprevent memory wipe in shutdown stage.\n\n[ +0.000000] RIP: 0010:amdgpu_vram_mgr_fini+0x18d\/0x1c0 [amdgpu]\n[ +0.000001] PKRU: 55555554\n[ +0.000001] Call Trace:\n[ +0.000001] <TASK>\n[ +0.000002] amdgpu_ttm_fini+0x140\/0x1c0 [amdgpu]\n[ +0.000183] amdgpu_bo_fini+0x27\/0xa0 [amdgpu]\n[ +0.000184] gmc_v11_0_sw_fini+0x2b\/0x40 [amdgpu]\n[ +0.000163] amdgpu_device_fini_sw+0xb6\/0x510 [amdgpu]\n[ +0.000152] amdgpu_driver_release_kms+0x16\/0x30 [amdgpu]\n[ +0.000090] drm_dev_release+0x28\/0x50 [drm]\n[ +0.000016] devm_drm_dev_init_release+0x38\/0x60 [drm]\n[ +0.000011] devm_action_release+0x15\/0x20\n[ +0.000003] release_nodes+0x40\/0xc0\n[ +0.000001] devres_release_all+0x9e\/0xe0\n[ +0.000001] device_unbind_cleanup+0x12\/0x80\n[ +0.000003] device_release_driver_internal+0xff\/0x160\n[ +0.000001] driver_detach+0x4a\/0x90\n[ +0.000001] bus_remove_driver+0x6c\/0xf0\n[ +0.000001] driver_unregister+0x31\/0x50\n[ +0.000001] pci_unregister_driver+0x40\/0x90\n[ +0.000003] amdgpu_exit+0x15\/0x120 [amdgpu]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/93bb18d2a873d2fa9625c8ea927723660a868b95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a02dae3bbfe2df8e1c81e61a08695709e9588f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f06b902511ea05526f405ee64da54a8313d91831","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53037","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.827","lastModified":"2025-05-02T16:15:22.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Bad drive in topology results kernel crash\n\nWhen the SAS Transport Layer support is enabled and a device exposed to\nthe OS by the driver fails INQUIRY commands, the driver frees up the memory\nallocated for an internal HBA port data structure. However, in some places,\nthe reference to the freed memory is not cleared. When the firmware sends\nthe Device Info change event for the same device again, the freed memory is\naccessed and that leads to memory corruption and OS crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f822ae8fb2a20fffa71e9bfa9b203c03d72d3ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e45183978d64699df639e795235433a60f35047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa11e4b6cdb403b9fdef6939550f6b36dd61624d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53038","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:22.920","lastModified":"2025-05-02T16:15:22.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Check kzalloc() in lpfc_sli4_cgn_params_read()\n\nIf kzalloc() fails in lpfc_sli4_cgn_params_read(), then we rely on\nlpfc_read_object()'s routine to NULL check pdata.\n\nCurrently, an early return error is thrown from lpfc_read_object() to\nprotect us from NULL ptr dereference, but the errno code is -ENODEV.\n\nChange the errno code to a more appropriate -ENOMEM."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/312320b0e0ec21249a17645683fe5304d796aec1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4829a1e1171536978b240a1438789c2e4d5c9715","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67b8343998b84418bc5b5206aa01fe9b461a80ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/908dd9a0853a88155a5a36018c7e2b32ccf20379","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53039","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.017","lastModified":"2025-05-02T16:15:23.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: intel-ish-hid: ipc: Fix potential use-after-free in work function\n\nWhen a reset notify IPC message is received, the ISR schedules a work\nfunction and passes the ISHTP device to it via a global pointer\nishtp_dev. If ish_probe() fails, the devm-managed device resources\nincluding ishtp_dev are freed, but the work is not cancelled, causing a\nuse-after-free when the work function tries to access ishtp_dev. Use\ndevm_work_autocancel() instead, so that the work is automatically\ncancelled if probe fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a594cb490ca6232671fc09e2dc1a0fc7ccbb0b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ae2f2b0a28416ed2f6d8478ac8b9f7862f36785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c1d378b8c224fd50247625255f09fc01dcc5836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3ce3afd9f791dd1b7daedfcf8c396b60af5dec0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53040","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.113","lastModified":"2025-05-02T16:15:23.113","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nca8210: fix mac_len negative array access\n\nThis patch fixes a buffer overflow access of skb->data if\nieee802154_hdr_peek_addrs() fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55d836f75778d2e2cafe37e023f9c106400bad4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5da4469a7aa011de614c3e2ae383c35a353a382e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c993779ea1d0cccdb3a5d7d45446dd229e610a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7df72bedbdd1d02bb216e1f6eca0a16900238c4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/918944526a386f186dd818ea6b0bcbed75d8c16b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d143e327c97241599c958d1ba9fbaa88c37db721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2b3bd0d4cadfdb7f3454d2aef9d5d9e8b48aae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd176a18db96d574d8c4763708abcec4444a08b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53041","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.220","lastModified":"2025-05-02T16:15:23.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Perform lockless command completion in abort path\n\nWhile adding and removing the controller, the following call trace was\nobserved:\n\nWARNING: CPU: 3 PID: 623596 at kernel\/dma\/mapping.c:532 dma_free_attrs+0x33\/0x50\nCPU: 3 PID: 623596 Comm: sh Kdump: loaded Not tainted 5.14.0-96.el9.x86_64 #1\nRIP: 0010:dma_free_attrs+0x33\/0x50\n\nCall Trace:\n   qla2x00_async_sns_sp_done+0x107\/0x1b0 [qla2xxx]\n   qla2x00_abort_srb+0x8e\/0x250 [qla2xxx]\n   ? ql_dbg+0x70\/0x100 [qla2xxx]\n   __qla2x00_abort_all_cmds+0x108\/0x190 [qla2xxx]\n   qla2x00_abort_all_cmds+0x24\/0x70 [qla2xxx]\n   qla2x00_abort_isp_cleanup+0x305\/0x3e0 [qla2xxx]\n   qla2x00_remove_one+0x364\/0x400 [qla2xxx]\n   pci_device_remove+0x36\/0xa0\n   __device_release_driver+0x17a\/0x230\n   device_release_driver+0x24\/0x30\n   pci_stop_bus_device+0x68\/0x90\n   pci_stop_and_remove_bus_device_locked+0x16\/0x30\n   remove_store+0x75\/0x90\n   kernfs_fop_write_iter+0x11c\/0x1b0\n   new_sync_write+0x11f\/0x1b0\n   vfs_write+0x1eb\/0x280\n   ksys_write+0x5f\/0xe0\n   do_syscall_64+0x5c\/0x80\n   ? do_user_addr_fault+0x1d8\/0x680\n   ? do_syscall_64+0x69\/0x80\n   ? exc_page_fault+0x62\/0x140\n   ? asm_exc_page_fault+0x8\/0x30\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe command was completed in the abort path during driver unload with a\nlock held, causing the warning in abort path. Hence complete the command\nwithout any lock held."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0367076b0817d5c75dfb83001ce7ce5c64d803a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/231cfa78ec5badd84a1a2b09465bfad1a926aba1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/415d614344a4f1bbddf55d724fc7eb9ef4b39aad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9189f20b4c5307c0998682bb522e481b4567a8b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd0a1804ac5bab2545ac700c8d0fe9ae9284c567","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6f7377528d2abf338e504126e44439541be8f7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53042","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.320","lastModified":"2025-05-02T16:15:23.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Do not set DRR on pipe Commit\n\n[WHY]\nWriting to DRR registers such as OTG_V_TOTAL_MIN on the same frame as a\npipe commit can cause underflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c20a098b507020936e02a98f4fbb924deeef44b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56574f89dbd84004c3fd6485bcaafb5aa9b8be14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8080f1e300e7abcc03025ec8b5bab69ae98daaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53043","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.400","lastModified":"2025-05-02T16:15:23.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: dts: qcom: sc7280: Mark PCIe controller as cache coherent\n\nIf the controller is not marked as cache coherent, then kernel will\ntry to ensure coherency during dma-ops and that may cause data corruption.\nSo, mark the PCIe node as dma-coherent as the devices on PCIe bus are\ncache coherent."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/267b899375bf38944d915c9654d6eb434edad0ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a63441e83724fee1ef3fd37b237d40d90780766","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e43bba938e2c9104bb4f8bc417ac4d7bb29755e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53044","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.490","lastModified":"2025-05-02T16:15:23.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm stats: check for and propagate alloc_percpu failure\n\nCheck alloc_precpu()'s return value and return an error from\ndm_stats_init() if it fails. Update alloc_dev() to fail if\ndm_stats_init() does.\n\nOtherwise, a NULL pointer dereference will occur in dm_stats_cleanup()\neven if dm-stats isn't being actively used."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d96bd507ed7e7d565b6d53ebd3874686f123b2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2287d7b721471a3d58bcd829250336e3cdf1635e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/443c9d522397511a4328dc2ec3c9c63c73049756","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a32a9a818a895671bd43e0c40351e60e4e9140b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b66e36a3efd24041b7374432bfa4dec2ff01e95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a42180dd361584816bfe15c137b665699b994d90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c68f08cc745675a17894e1b4a5b5b9700ace6da4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3aa3e060c4a80827eb801fc448debc9daa7c46b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53045","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.590","lastModified":"2025-05-02T16:15:23.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_audio: don't let userspace block driver unbind\n\nIn the unbind callback for f_uac1 and f_uac2, a call to snd_card_free()\nvia g_audio_cleanup() will disconnect the card and then wait for all\nresources to be released, which happens when the refcount falls to zero.\nSince userspace can keep the refcount incremented by not closing the\nrelevant file descriptor, the call to unbind may block indefinitely.\nThis can cause a deadlock during reboot, as evidenced by the following\nblocked task observed on my machine:\n\n  task:reboot  state:D stack:0   pid:2827  ppid:569    flags:0x0000000c\n  Call trace:\n   __switch_to+0xc8\/0x140\n   __schedule+0x2f0\/0x7c0\n   schedule+0x60\/0xd0\n   schedule_timeout+0x180\/0x1d4\n   wait_for_completion+0x78\/0x180\n   snd_card_free+0x90\/0xa0\n   g_audio_cleanup+0x2c\/0x64\n   afunc_unbind+0x28\/0x60\n   ...\n   kernel_restart+0x4c\/0xac\n   __do_sys_reboot+0xcc\/0x1ec\n   __arm64_sys_reboot+0x28\/0x30\n   invoke_syscall+0x4c\/0x110\n   ...\n\nThe issue can also be observed by opening the card with arecord and\nthen stopping the process through the shell before unbinding:\n\n  # arecord -D hw:UAC2Gadget -f S32_LE -c 2 -r 48000 \/dev\/null\n  Recording WAVE '\/dev\/null' : Signed 32 bit Little Endian, Rate 48000 Hz, Stereo\n  ^Z[1]+  Stopped                    arecord -D hw:UAC2Gadget -f S32_LE -c 2 -r 48000 \/dev\/null\n  # echo gadget.0 > \/sys\/bus\/gadget\/drivers\/configfs-gadget\/unbind\n  (observe that the unbind command never finishes)\n\nFix the problem by using snd_card_free_when_closed() instead, which will\nstill disconnect the card as desired, but defer the task of freeing the\nresources to the core once userspace closes its file descriptor."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0eda2004f38d95ef5715d62be884cd344260535b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3256e152b645fc1e788ba44c2d8ced690113e3e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33f341c1fc60e172a3515c51bdabee11e83d1ee9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bc7324e4911351e39c54a62e6ca46321cb10faf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e016ef2e72da93a2ea7afbb45de1b481b44d761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43ca70753dfffd517d2af126da28690f8f615605","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c67ed9ad9b83e453e808f9b31a931a20a25629b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b131989797f7287d7fdadb2bababc05a15d44750","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53046","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.697","lastModified":"2025-05-02T16:15:23.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix race condition in hci_cmd_sync_clear\n\nThere is a potential race condition in hci_cmd_sync_work and\nhci_cmd_sync_clear, and could lead to use-after-free. For instance,\nhci_cmd_sync_work is added to the 'req_workqueue' after cancel_work_sync\nThe entry of 'cmd_sync_work_list' may be freed in hci_cmd_sync_clear, and\ncausing kernel panic when it is used in 'hci_cmd_sync_work'.\n\nHere's the call trace:\n\ndump_stack_lvl+0x49\/0x63\nprint_report.cold+0x5e\/0x5d3\n? hci_cmd_sync_work+0x282\/0x320\nkasan_report+0xaa\/0x120\n? hci_cmd_sync_work+0x282\/0x320\n__asan_report_load8_noabort+0x14\/0x20\nhci_cmd_sync_work+0x282\/0x320\nprocess_one_work+0x77b\/0x11c0\n? _raw_spin_lock_irq+0x8e\/0xf0\nworker_thread+0x544\/0x1180\n? poll_idle+0x1e0\/0x1e0\nkthread+0x285\/0x320\n? process_one_work+0x11c0\/0x11c0\n? kthread_complete_and_exit+0x30\/0x30\nret_from_fork+0x22\/0x30\n<\/TASK>\n\nAllocated by task 266:\nkasan_save_stack+0x26\/0x50\n__kasan_kmalloc+0xae\/0xe0\nkmem_cache_alloc_trace+0x191\/0x350\nhci_cmd_sync_queue+0x97\/0x2b0\nhci_update_passive_scan+0x176\/0x1d0\nle_conn_complete_evt+0x1b5\/0x1a00\nhci_le_conn_complete_evt+0x234\/0x340\nhci_le_meta_evt+0x231\/0x4e0\nhci_event_packet+0x4c5\/0xf00\nhci_rx_work+0x37d\/0x880\nprocess_one_work+0x77b\/0x11c0\nworker_thread+0x544\/0x1180\nkthread+0x285\/0x320\nret_from_fork+0x22\/0x30\n\nFreed by task 269:\nkasan_save_stack+0x26\/0x50\nkasan_set_track+0x25\/0x40\nkasan_set_free_info+0x24\/0x40\n____kasan_slab_free+0x176\/0x1c0\n__kasan_slab_free+0x12\/0x20\nslab_free_freelist_hook+0x95\/0x1a0\nkfree+0xba\/0x2f0\nhci_cmd_sync_clear+0x14c\/0x210\nhci_unregister_dev+0xff\/0x440\nvhci_release+0x7b\/0xf0\n__fput+0x1f3\/0x970\n____fput+0xe\/0x20\ntask_work_run+0xd4\/0x160\ndo_exit+0x8b0\/0x22a0\ndo_group_exit+0xba\/0x2a0\nget_signal+0x1e4a\/0x25b0\narch_do_signal_or_restart+0x93\/0x1f80\nexit_to_user_mode_prepare+0xf5\/0x1a0\nsyscall_exit_to_user_mode+0x26\/0x50\nret_from_fork+0x15\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c66bee492a5fe00ae3fe890bb693bfc99f994c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/608901a77c945ac15dea23f6098c9882ef19d9f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be586211a3ab40a4f4ca60450e0d31606afc55ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53047","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.790","lastModified":"2025-05-02T16:15:23.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntee: amdtee: fix race condition in amdtee_open_session\n\nThere is a potential race condition in amdtee_open_session that may\nlead to use-after-free. For instance, in amdtee_open_session() after\nsess->sess_mask is set, and before setting:\n\n    sess->session_info[i] = session_info;\n\nif amdtee_close_session() closes this same session, then 'sess' data\nstructure will be released, causing kernel panic when 'sess' is\naccessed within amdtee_open_session().\n\nThe solution is to set the bit sess->sess_mask as the last step in\namdtee_open_session()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02b296978a2137d7128151c542e84dc96400bc00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a63cce9393e4e7dbc5af82dc87e68cb321cb1a78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3ef9e6fe09f1a132af28c623edcf4d4f39d9f35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f632a90f8e39db39b322107b9a8d438b826a7f4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8502fba45bd30e1a6a354d9d898bc99d1a11e6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53048","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.897","lastModified":"2025-05-02T16:15:23.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: fix warning when handle discover_identity message\n\nSince both source and sink device can send discover_identity message in\nPD3, kernel may dump below warning:\n\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 169 at drivers\/usb\/typec\/tcpm\/tcpm.c:1446 tcpm_queue_vdm+0xe0\/0xf0\nModules linked in:\nCPU: 0 PID: 169 Comm: 1-0050 Not tainted 6.1.1-00038-g6a3c36cf1da2-dirty #567\nHardware name: NXP i.MX8MPlus EVK board (DT)\npstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : tcpm_queue_vdm+0xe0\/0xf0\nlr : tcpm_queue_vdm+0x2c\/0xf0\nsp : ffff80000c19bcd0\nx29: ffff80000c19bcd0 x28: 0000000000000001 x27: ffff0000d11c8ab8\nx26: ffff0000d11cc000 x25: 0000000000000000 x24: 00000000ff008081\nx23: 0000000000000001 x22: 00000000ff00a081 x21: ffff80000c19bdbc\nx20: 0000000000000000 x19: ffff0000d11c8080 x18: ffffffffffffffff\nx17: 0000000000000000 x16: 0000000000000000 x15: ffff0000d716f580\nx14: 0000000000000001 x13: ffff0000d716f507 x12: 0000000000000001\nx11: 0000000000000000 x10: 0000000000000020 x9 : 00000000000ee098\nx8 : 00000000ffffffff x7 : 000000000000001c x6 : ffff0000d716f580\nx5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000\nx2 : ffff80000c19bdbc x1 : 00000000ff00a081 x0 : 0000000000000004\nCall trace:\ntcpm_queue_vdm+0xe0\/0xf0\ntcpm_pd_rx_handler+0x340\/0x1ab0\nkthread_worker_fn+0xcc\/0x18c\nkthread+0x10c\/0x110\nret_from_fork+0x10\/0x20\n---[ end trace 0000000000000000 ]---\n\nBelow sequences may trigger this warning:\n\ntcpm_send_discover_work(work)\n  tcpm_send_vdm(port, USB_SID_PD, CMD_DISCOVER_IDENT, NULL, 0);\n   tcpm_queue_vdm(port, header, data, count);\n    port->vdm_state = VDM_STATE_READY;\n\nvdm_state_machine_work(work);\n\t\t\t<-- received discover_identity from partner\n vdm_run_state_machine(port);\n  port->vdm_state = VDM_STATE_SEND_MESSAGE;\n   mod_vdm_delayed_work(port, x);\n\ntcpm_pd_rx_handler(work);\n tcpm_pd_data_request(port, msg);\n  tcpm_handle_vdm_request(port, msg->payload, cnt);\n   tcpm_queue_vdm(port, response[0], &response[1], rlen - 1);\n--> WARN_ON(port->vdm_state > VDM_STATE_DONE);\n\nFor this case, the state machine could still send out discover\nidentity message later if we skip current discover_identity message.\nSo we should handle the received message firstly and override the pending\ndiscover_identity message without warning in this case. Then, a delayed\nsend_discover work will send discover_identity message again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/abfc4fa28f0160df61c7149567da4f6494dfb488","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb579b3f75c60bf488a7c36e092e8be583407d53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d55ca2d2ea1a7ec553213986993fba8c0257381c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e37d2c489d71e94ed4a39529bc9520a7fd983d42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53049","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:23.990","lastModified":"2025-05-02T16:15:23.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: ucsi: Fix NULL pointer deref in ucsi_connector_change()\n\nWhen ucsi_init() fails, ucsi->connector is NULL, yet in case of\nucsi_acpi we may still get events which cause the ucs_acpi code to call\nucsi_connector_change(), which then derefs the NULL ucsi->connector\npointer.\n\nFix this by not setting ucsi->ntfy inside ucsi_init() until ucsi_init()\nhas succeeded, so that ucsi_connector_change() ignores the events\nbecause UCSI_ENABLE_NTFY_CONNECTOR_CHANGE is not set in the ntfy mask."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c5abcb13491da8c049f20462189c12c753ba978","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dd27aed9c456670b3882877ef17a48195f21693","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ef0423e43f877a328454059d46763043ce3da44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6adfe9bbd6ac11e398b54ccd99a0f8eea09f3c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f87fb985452ab2083967103ac00bfd68fb182764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53050","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.093","lastModified":"2025-05-02T16:15:24.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthunderbolt: Fix memory leak in margining\n\nMemory for the usb4->margining needs to be relased for the upstream port\nof the router as well, even though the debugfs directory gets released\nwith the router device removal. Fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b357b360e671688f9bf38ff94300515b68bc247","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acec726473822bc6b585961f4ca2a11fa7f28341","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f390095bbd131ec2dfb29792d9f6fd0f0656bfc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53051","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.180","lastModified":"2025-05-02T16:15:24.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm crypt: add cond_resched() to dmcrypt_write()\n\nThe loop in dmcrypt_write may be running for unbounded amount of time,\nthus we need cond_resched() in it.\n\nThis commit fixes the following warning:\n\n[ 3391.153255][   C12] watchdog: BUG: soft lockup - CPU#12 stuck for 23s! [dmcrypt_write\/2:2897]\n...\n[ 3391.387210][   C12] Call trace:\n[ 3391.390338][   C12]  blk_attempt_bio_merge.part.6+0x38\/0x158\n[ 3391.395970][   C12]  blk_attempt_plug_merge+0xc0\/0x1b0\n[ 3391.401085][   C12]  blk_mq_submit_bio+0x398\/0x550\n[ 3391.405856][   C12]  submit_bio_noacct+0x308\/0x380\n[ 3391.410630][   C12]  dmcrypt_write+0x1e4\/0x208 [dm_crypt]\n[ 3391.416005][   C12]  kthread+0x130\/0x138\n[ 3391.419911][   C12]  ret_from_fork+0x10\/0x18"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c743db1193bf0e76c73d71ede08bd9b96e6c31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66ff37993dd7e9954b6446237fe2453b380ce40d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b9f8efb5fc888dd938d2964e705b8e00f1dc0f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/885c28ceae7dab2b18c2cc0eb95f1f82b1f629d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e87cd83f70504f1cd2e428966f353c007d6d2d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb485b7404a281d974bd445ddc5b0b8d5958f371","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0eb61b493dbbc32529fbd0d2e945b71b0e47306","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb294b1c0ba982144ca467a75e7d01ff26304e2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53052","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.283","lastModified":"2025-05-02T16:15:24.283","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix use-after-free bug in refresh_cache_worker()\n\nThe UAF bug occurred because we were putting DFS root sessions in\ncifs_umount() while DFS cache refresher was being executed.\n\nMake DFS root sessions have same lifetime as DFS tcons so we can avoid\nthe use-after-free bug is DFS cache refresher and other places that\nrequire IPCs to get new DFS referrals on.  Also, get rid of mount\ngroup handling in DFS cache as we no longer need it.\n\nThis fixes below use-after-free bug catched by KASAN\n\n[ 379.946955] BUG: KASAN: use-after-free in __refresh_tcon.isra.0+0x10b\/0xc10 [cifs]\n[ 379.947642] Read of size 8 at addr ffff888018f57030 by task kworker\/u4:3\/56\n[ 379.948096]\n[ 379.948208] CPU: 0 PID: 56 Comm: kworker\/u4:3 Not tainted 6.2.0-rc7-lku #23\n[ 379.948661] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.16.0-0-gd239552-rebuilt.opensuse.org 04\/01\/2014\n[ 379.949368] Workqueue: cifs-dfscache refresh_cache_worker [cifs]\n[ 379.949942] Call Trace:\n[ 379.950113] <TASK>\n[ 379.950260] dump_stack_lvl+0x50\/0x67\n[ 379.950510] print_report+0x16a\/0x48e\n[ 379.950759] ? __virt_addr_valid+0xd8\/0x160\n[ 379.951040] ? __phys_addr+0x41\/0x80\n[ 379.951285] kasan_report+0xdb\/0x110\n[ 379.951533] ? __refresh_tcon.isra.0+0x10b\/0xc10 [cifs]\n[ 379.952056] ? __refresh_tcon.isra.0+0x10b\/0xc10 [cifs]\n[ 379.952585] __refresh_tcon.isra.0+0x10b\/0xc10 [cifs]\n[ 379.953096] ? __pfx___refresh_tcon.isra.0+0x10\/0x10 [cifs]\n[ 379.953637] ? __pfx___mutex_lock+0x10\/0x10\n[ 379.953915] ? lock_release+0xb6\/0x720\n[ 379.954167] ? __pfx_lock_acquire+0x10\/0x10\n[ 379.954443] ? refresh_cache_worker+0x34e\/0x6d0 [cifs]\n[ 379.954960] ? __pfx_wb_workfn+0x10\/0x10\n[ 379.955239] refresh_cache_worker+0x4ad\/0x6d0 [cifs]\n[ 379.955755] ? __pfx_refresh_cache_worker+0x10\/0x10 [cifs]\n[ 379.956323] ? __pfx_lock_acquired+0x10\/0x10\n[ 379.956615] ? read_word_at_a_time+0xe\/0x20\n[ 379.956898] ? lockdep_hardirqs_on_prepare+0x12\/0x220\n[ 379.957235] process_one_work+0x535\/0x990\n[ 379.957509] ? __pfx_process_one_work+0x10\/0x10\n[ 379.957812] ? lock_acquired+0xb7\/0x5f0\n[ 379.958069] ? __list_add_valid+0x37\/0xd0\n[ 379.958341] ? __list_add_valid+0x37\/0xd0\n[ 379.958611] worker_thread+0x8e\/0x630\n[ 379.958861] ? __pfx_worker_thread+0x10\/0x10\n[ 379.959148] kthread+0x17d\/0x1b0\n[ 379.959369] ? __pfx_kthread+0x10\/0x10\n[ 379.959630] ret_from_fork+0x2c\/0x50\n[ 379.959879] <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/396935de145589c8bfe552fa03a5e38604071829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a89d81c1a3c152837ea204fd29572228e54ce0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53053","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.373","lastModified":"2025-05-02T16:15:24.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerspan: do not use skb_mac_header() in ndo_start_xmit()\n\nDrivers should not assume skb_mac_header(skb) == skb->data in their\nndo_start_xmit().\n\nUse skb_network_offset() and skb_transport_offset() which\nbetter describe what is needed in erspan_fb_xmit() and\nip6erspan_tunnel_xmit()\n\nsyzbot reported:\nWARNING: CPU: 0 PID: 5083 at include\/linux\/skbuff.h:2873 skb_mac_header include\/linux\/skbuff.h:2873 [inline]\nWARNING: CPU: 0 PID: 5083 at include\/linux\/skbuff.h:2873 ip6erspan_tunnel_xmit+0x1d9c\/0x2d90 net\/ipv6\/ip6_gre.c:962\nModules linked in:\nCPU: 0 PID: 5083 Comm: syz-executor406 Not tainted 6.3.0-rc2-syzkaller-00866-gd4671cb96fa3 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 03\/02\/2023\nRIP: 0010:skb_mac_header include\/linux\/skbuff.h:2873 [inline]\nRIP: 0010:ip6erspan_tunnel_xmit+0x1d9c\/0x2d90 net\/ipv6\/ip6_gre.c:962\nCode: 04 02 41 01 de 84 c0 74 08 3c 03 0f 8e 1c 0a 00 00 45 89 b4 24 c8 00 00 00 c6 85 77 fe ff ff 01 e9 33 e7 ff ff e8 b4 27 a1 f8 <0f> 0b e9 b6 e7 ff ff e8 a8 27 a1 f8 49 8d bf f0 0c 00 00 48 b8 00\nRSP: 0018:ffffc90003b2f830 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 000000000000ffff RCX: 0000000000000000\nRDX: ffff888021273a80 RSI: ffffffff88e1bd4c RDI: 0000000000000003\nRBP: ffffc90003b2f9d8 R08: 0000000000000003 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000000 R12: ffff88802b28da00\nR13: 00000000000000d0 R14: ffff88807e25b6d0 R15: ffff888023408000\nFS: 0000555556a61300(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055e5b11eb6e8 CR3: 0000000027c1b000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\n__netdev_start_xmit include\/linux\/netdevice.h:4900 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4914 [inline]\n__dev_direct_xmit+0x504\/0x730 net\/core\/dev.c:4300\ndev_direct_xmit include\/linux\/netdevice.h:3088 [inline]\npacket_xmit+0x20a\/0x390 net\/packet\/af_packet.c:285\npacket_snd net\/packet\/af_packet.c:3075 [inline]\npacket_sendmsg+0x31a0\/0x5150 net\/packet\/af_packet.c:3107\nsock_sendmsg_nosec net\/socket.c:724 [inline]\nsock_sendmsg+0xde\/0x190 net\/socket.c:747\n__sys_sendto+0x23a\/0x340 net\/socket.c:2142\n__do_sys_sendto net\/socket.c:2154 [inline]\n__se_sys_sendto net\/socket.c:2150 [inline]\n__x64_sys_sendto+0xe1\/0x1b0 net\/socket.c:2150\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x39\/0xb0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7f123aaa1039\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 b1 14 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffc15d12058 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f123aaa1039\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000003\nRBP: 0000000000000000 R08: 0000000020000040 R09: 0000000000000014\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f123aa648c0\nR13: 431bde82d7b634db R14: 0000000000000000 R15: 0000000000000000"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d4172732f0ee1639a361a6cc5c3114bbb397386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e50ed774554f93d55426039b27b1e38d7fa64d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c7d6803689c99d55bbb862260d0ba486ff23c0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b41f37dbd9cdb60000e3b0dfad6df787591c2265","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b72f453e886af532bde1fd049a2d2421999630d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da149daf821a3c05cd04f7c60776c86c5ee9685c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8cec30541f5c5cc218e9a32138d45d227727f2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53054","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.483","lastModified":"2025-05-02T16:15:24.483","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: fix a devres leak in hw_enable upon suspend resume\n\nEach time the platform goes to low power, PM suspend \/ resume routines\ncall: __dwc2_lowlevel_hw_enable -> devm_add_action_or_reset().\nThis adds a new devres each time.\nThis may also happen at runtime, as dwc2_lowlevel_hw_enable() can be\ncalled from udc_start().\n\nThis can be seen with tracing:\n- echo 1 > \/sys\/kernel\/debug\/tracing\/events\/dev\/devres_log\/enable\n- go to low power\n- cat \/sys\/kernel\/debug\/tracing\/trace\n\nA new \"ADD\" entry is found upon each low power cycle:\n... devres_log: 49000000.usb-otg ADD 82a13bba devm_action_release (8 bytes)\n... devres_log: 49000000.usb-otg ADD 49889daf devm_action_release (8 bytes)\n...\n\nA second issue is addressed here:\n- regulator_bulk_enable() is called upon each PM cycle (suspend\/resume).\n- regulator_bulk_disable() never gets called.\n\nSo the reference count for these regulators constantly increase, by one\nupon each low power cycle, due to missing regulator_bulk_disable() call\nin __dwc2_lowlevel_hw_disable().\n\nThe original fix that introduced the devm_add_action_or_reset() call,\nfixed an issue during probe, that happens due to other errors in\ndwc2_driver_probe() -> dwc2_core_reset(). Then the probe fails without\ndisabling regulators, when dr_mode == USB_DR_MODE_PERIPHERAL.\n\nRather fix the error path: disable all the low level hardware in the\nerror path, by using the \"hsotg->ll_hw_enabled\" flag. Checking dr_mode\nhas been introduced to avoid a dual call to dwc2_lowlevel_hw_disable().\n\"ll_hw_enabled\" should achieve the same (and is used currently in the\nremove() routine)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f01027c51eb16145e8e07fafea3ca07ef102d06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6485fc381b6528b6f547ee1ff10bdbcbe31a6e4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cba76e1fb896b573f09f51aa299223276a77bc90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f747313249b74f323ddf841a9c8db14d989f296a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffb8ab6f87bd28d700ab5c20d9d3a7e75067630d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53055","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.590","lastModified":"2025-05-02T16:15:24.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfscrypt: destroy keyring after security_sb_delete()\n\nfscrypt_destroy_keyring() must be called after all potentially-encrypted\ninodes were evicted; otherwise it cannot safely destroy the keyring.\nSince inodes that are in-use by the Landlock LSM don't get evicted until\nsecurity_sb_delete(), this means that fscrypt_destroy_keyring() must be\ncalled *after* security_sb_delete().\n\nThis fixes a WARN_ON followed by a NULL dereference, only possible if\nLandlock was being used on encrypted files."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/497ab5d9c7852dfedab2c9de75e41b60e54b7c5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/992a3f3e8a0c92151dfdf65fc85567c865fd558a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccb820dc7d2236b1af0d54ae038a27b5b6d5ae5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d77531fac6a1fd9f1db0195438ba5419d72b96c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53056","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.680","lastModified":"2025-05-02T16:15:24.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Synchronize the IOCB count to be in order\n\nA system hang was observed with the following call trace:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 15 PID: 86747 Comm: nvme Kdump: loaded Not tainted 6.2.0+ #1\nHardware name: Dell Inc. PowerEdge R6515\/04F3CJ, BIOS 2.7.3 03\/31\/2022\nRIP: 0010:__wake_up_common+0x55\/0x190\nCode: 41 f6 01 04 0f 85 b2 00 00 00 48 8b 43 08 4c 8d\n      40 e8 48 8d 43 08 48 89 04 24 48 89 c6\\\n      49 8d 40 18 48 39 c6 0f 84 e9 00 00 00 <49> 8b 40 18 89 6c 24 14 31\n      ed 4c 8d 60 e8 41 8b 18 f6 c3 04 75 5d\nRSP: 0018:ffffb05a82afbba0 EFLAGS: 00010082\nRAX: 0000000000000000 RBX: ffff8f9b83a00018 RCX: 0000000000000000\nRDX: 0000000000000001 RSI: ffff8f9b83a00020 RDI: ffff8f9b83a00018\nRBP: 0000000000000001 R08: ffffffffffffffe8 R09: ffffb05a82afbbf8\nR10: 70735f7472617473 R11: 5f30307832616c71 R12: 0000000000000001\nR13: 0000000000000003 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007f815cf4c740(0000) GS:ffff8f9eeed80000(0000)\n\tknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000010633a000 CR4: 0000000000350ee0\nCall Trace:\n    <TASK>\n    __wake_up_common_lock+0x83\/0xd0\n    qla_nvme_ls_req+0x21b\/0x2b0 [qla2xxx]\n    __nvme_fc_send_ls_req+0x1b5\/0x350 [nvme_fc]\n    nvme_fc_xmt_disconnect_assoc+0xca\/0x110 [nvme_fc]\n    nvme_fc_delete_association+0x1bf\/0x220 [nvme_fc]\n    ? nvme_remove_namespaces+0x9f\/0x140 [nvme_core]\n    nvme_do_delete_ctrl+0x5b\/0xa0 [nvme_core]\n    nvme_sysfs_delete+0x5f\/0x70 [nvme_core]\n    kernfs_fop_write_iter+0x12b\/0x1c0\n    vfs_write+0x2a3\/0x3b0\n    ksys_write+0x5f\/0xe0\n    do_syscall_64+0x5c\/0x90\n    ? syscall_exit_work+0x103\/0x130\n    ? syscall_exit_to_user_mode+0x12\/0x30\n    ? do_syscall_64+0x69\/0x90\n    ? exit_to_user_mode_loop+0xd0\/0x130\n    ? exit_to_user_mode_prepare+0xec\/0x100\n    ? syscall_exit_to_user_mode+0x12\/0x30\n    ? do_syscall_64+0x69\/0x90\n    ? syscall_exit_to_user_mode+0x12\/0x30\n    ? do_syscall_64+0x69\/0x90\n    entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n    RIP: 0033:0x7f815cd3eb97\n\nThe IOCB counts are out of order and that would block any commands from\ngoing out and subsequently hang the system. Synchronize the IOCB count to\nbe in correct order."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6295b3ec64a3623fa96869ffb7cf17d0b3c92035","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d57b77d7369ed73836c82b25f785b34923eef84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3affdeb400f3adc925bd996f3839481f5291839","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffd7831841d3c56c655531fc8c5acafaaf20e1bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53057","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.773","lastModified":"2025-05-02T16:15:24.773","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: HCI: Fix global-out-of-bounds\n\nTo loop a variable-length array, hci_init_stage_sync(stage) considers\nthat stage[i] is valid as long as stage[i-1].func is valid.\nThus, the last element of stage[].func should be intentionally invalid\nas hci_init0[], le_init2[], and others did.\nHowever, amp_init1[] and amp_init2[] have no invalid element, letting\nhci_init_stage_sync() keep accessing amp_init1[] over its valid range.\nThis patch fixes this by adding {} in the last of amp_init1[] and\namp_init2[].\n\n==================================================================\nBUG: KASAN: global-out-of-bounds in hci_dev_open_sync (\n\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3154\n\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3343\n\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4418\n\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4609\n\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4689)\nRead of size 8 at addr ffffffffaed1ab70 by task kworker\/u5:0\/1032\nCPU: 0 PID: 1032 Comm: kworker\/u5:0 Not tainted 6.2.0 #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\nWorkqueue: hci1 hci_power_on\nCall Trace:\n <TASK>\ndump_stack_lvl (\/v6.2-bzimage\/lib\/dump_stack.c:107 (discriminator 1))\nprint_report (\/v6.2-bzimage\/mm\/kasan\/report.c:307\n  \/v6.2-bzimage\/mm\/kasan\/report.c:417)\n? hci_dev_open_sync (\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3154\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3343\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4418\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4609\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4689)\nkasan_report (\/v6.2-bzimage\/mm\/kasan\/report.c:184\n  \/v6.2-bzimage\/mm\/kasan\/report.c:519)\n? hci_dev_open_sync (\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3154\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3343\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4418\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4609\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4689)\nhci_dev_open_sync (\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3154\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:3343\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4418\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4609\n  \/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4689)\n? __pfx_hci_dev_open_sync (\/v6.2-bzimage\/net\/bluetooth\/hci_sync.c:4635)\n? mutex_lock (\/v6.2-bzimage\/.\/arch\/x86\/include\/asm\/atomic64_64.h:190\n  \/v6.2-bzimage\/.\/include\/linux\/atomic\/atomic-long.h:443\n  \/v6.2-bzimage\/.\/include\/linux\/atomic\/atomic-instrumented.h:1781\n  \/v6.2-bzimage\/kernel\/locking\/mutex.c:171\n  \/v6.2-bzimage\/kernel\/locking\/mutex.c:285)\n? __pfx_mutex_lock (\/v6.2-bzimage\/kernel\/locking\/mutex.c:282)\nhci_power_on (\/v6.2-bzimage\/net\/bluetooth\/hci_core.c:485\n  \/v6.2-bzimage\/net\/bluetooth\/hci_core.c:984)\n? __pfx_hci_power_on (\/v6.2-bzimage\/net\/bluetooth\/hci_core.c:969)\n? read_word_at_a_time (\/v6.2-bzimage\/.\/include\/asm-generic\/rwonce.h:85)\n? strscpy (\/v6.2-bzimage\/.\/arch\/x86\/include\/asm\/word-at-a-time.h:62\n  \/v6.2-bzimage\/lib\/string.c:161)\nprocess_one_work (\/v6.2-bzimage\/kernel\/workqueue.c:2294)\nworker_thread (\/v6.2-bzimage\/.\/include\/linux\/list.h:292\n  \/v6.2-bzimage\/kernel\/workqueue.c:2437)\n? __pfx_worker_thread (\/v6.2-bzimage\/kernel\/workqueue.c:2379)\nkthread (\/v6.2-bzimage\/kernel\/kthread.c:376)\n? __pfx_kthread (\/v6.2-bzimage\/kernel\/kthread.c:331)\nret_from_fork (\/v6.2-bzimage\/arch\/x86\/entry\/entry_64.S:314)\n <\/TASK>\nThe buggy address belongs to the variable:\namp_init1+0x30\/0x60\nThe buggy address belongs to the physical page:\npage:000000003a157ec6 refcount:1 mapcount:0 mapping:0000000000000000 ia\nflags: 0x200000000001000(reserved|node=0|zone=2)\nraw: 0200000000001000 ffffea0005054688 ffffea0005054688 000000000000000\nraw: 0000000000000000 0000000000000000 00000001ffffffff 000000000000000\npage dumped because: kasan: bad access detected\nMemory state around the buggy address:\n ffffffffaed1aa00: f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9 00 00 00 00\n ffffffffaed1aa80: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 00 00 00 00\n>ffffffffaed1ab00: 00 f9 f9 f9 f9 f9 f9 f9 00 00 00 00 00 00 f9 f9\n                  \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8497222b22b591c6b2d106e0e3c1672ffe4e10e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3168abd24245aa0775c5a387dcf94d36ca7e738","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bce56405201111807cc8e4f47c6de3e10b17c1ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53058","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.867","lastModified":"2025-05-02T16:15:24.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: E-Switch, Fix an Oops in error handling code\n\nThe error handling dereferences \"vport\".  There is nothing we can do if\nit is an error pointer except returning the error code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a9853a7437a22fd849347008fb3c85087906b56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/388188fb58bef9e7f3ca4f8970f03d493b66909f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eadc80328298ef7beaaf0cd96791667d3b485ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/640fcdbcf27fc62de9223f958ceb4e897a00e791","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4c977935b2fc60084b3735737d17a06e7ba1bd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53059","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:24.963","lastModified":"2025-05-02T16:15:24.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/chrome: cros_ec_chardev: fix kernel data leak from ioctl\n\nIt is possible to peep kernel page's data by providing larger `insize`\nin struct cros_ec_command[1] when invoking EC host commands.\n\nFix it by using zeroed memory.\n\n[1]: https:\/\/elixir.bootlin.com\/linux\/v6.2\/source\/include\/linux\/platform_data\/cros_ec_proto.h#L74"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13493ad6a220cb3f6f3552a16b4f2753a118b633","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0d8644784f73fa39f57f72f374eefaba2bf48a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b20cf3f89c56b5f6a38b7f76a8128bf9f291bbd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eab28bfafcd1245a3510df9aa9eb940589956ea6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebea2e16504f40d2c2bac42ad5c5a3de5ce034b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f86ff88a1548ccf5a13960c0e7625ca787ea0993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53060","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.060","lastModified":"2025-05-02T16:15:25.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: revert rtnl_lock() that causes deadlock\n\nThe commit 6faee3d4ee8b (\"igb: Add lock to avoid data race\") adds\nrtnl_lock to eliminate a false data race shown below\n\n (FREE from device detaching)      |   (USE from netdev core)\nigb_remove                         |  igb_ndo_get_vf_config\n igb_disable_sriov                 |  vf >= adapter->vfs_allocated_count?\n  kfree(adapter->vf_data)          |\n  adapter->vfs_allocated_count = 0 |\n                                   |    memcpy(... adapter->vf_data[vf]\n\nThe above race will never happen and the extra rtnl_lock causes deadlock\nbelow\n\n[  141.420169]  <TASK>\n[  141.420672]  __schedule+0x2dd\/0x840\n[  141.421427]  schedule+0x50\/0xc0\n[  141.422041]  schedule_preempt_disabled+0x11\/0x20\n[  141.422678]  __mutex_lock.isra.13+0x431\/0x6b0\n[  141.423324]  unregister_netdev+0xe\/0x20\n[  141.423578]  igbvf_remove+0x45\/0xe0 [igbvf]\n[  141.423791]  pci_device_remove+0x36\/0xb0\n[  141.423990]  device_release_driver_internal+0xc1\/0x160\n[  141.424270]  pci_stop_bus_device+0x6d\/0x90\n[  141.424507]  pci_stop_and_remove_bus_device+0xe\/0x20\n[  141.424789]  pci_iov_remove_virtfn+0xba\/0x120\n[  141.425452]  sriov_disable+0x2f\/0xf0\n[  141.425679]  igb_disable_sriov+0x4e\/0x100 [igb]\n[  141.426353]  igb_remove+0xa0\/0x130 [igb]\n[  141.426599]  pci_device_remove+0x36\/0xb0\n[  141.426796]  device_release_driver_internal+0xc1\/0x160\n[  141.427060]  driver_detach+0x44\/0x90\n[  141.427253]  bus_remove_driver+0x55\/0xe0\n[  141.427477]  pci_unregister_driver+0x2a\/0xa0\n[  141.428296]  __x64_sys_delete_module+0x141\/0x2b0\n[  141.429126]  ? mntput_no_expire+0x4a\/0x240\n[  141.429363]  ? syscall_trace_enter.isra.19+0x126\/0x1a0\n[  141.429653]  do_syscall_64+0x5b\/0x80\n[  141.429847]  ? exit_to_user_mode_prepare+0x14d\/0x1c0\n[  141.430109]  ? syscall_exit_to_user_mode+0x12\/0x30\n[  141.430849]  ? do_syscall_64+0x67\/0x80\n[  141.431083]  ? syscall_exit_to_user_mode_prepare+0x183\/0x1b0\n[  141.431770]  ? syscall_exit_to_user_mode+0x12\/0x30\n[  141.432482]  ? do_syscall_64+0x67\/0x80\n[  141.432714]  ? exc_page_fault+0x64\/0x140\n[  141.432911]  entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\nSince the igb_disable_sriov() will call pci_disable_sriov() before\nreleasing any resources, the netdev core will synchronize the cleanup to\navoid any races. This patch removes the useless rtnl_(un)lock to guarantee\ncorrectness."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dabb72b923e17cb3b4ac99ea1adc9ef35116930","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d2626e10709ff8474ffd1a9db3cf4647569e89c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62a64645749926f9d75af82a96440941f22b046f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65f69851e44d71248b952a687e44759a7abb5016","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66e5577cabc3d463eea540332727929d0ace41c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d845e9a485f287181ff81567c3900a8e7ad1e28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd1e320ac0958298c2774605ad050483f33a21f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de91528d8ba274c614a2265077d695c61e31fd43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53061","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.163","lastModified":"2025-05-02T16:15:25.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix possible refcount leak in smb2_open()\n\nReference count of acls will leak when memory allocation fails. Fix this\nby adding the missing posix_acl_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2624b445544ffc1472ccabfb6ec867c199d4c95c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/303f8e58cc3ace744801dcdcabfc06ffc72ed62d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a22c49a05e5e7aa2c414fbc42c49c4c01a5c9a78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c33344b7972225b232966f95d31f6312dcc6273d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53062","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.257","lastModified":"2025-05-02T16:15:25.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc95xx: Limit packet length to skb->len\n\nPacket length retrieved from descriptor may be larger than\nthe actual socket buffer length. In such case the cloned\nskb passed up the network stack will leak kernel memory contents."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33d1603a38e05886c538129ddfe00bd52d347e7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70eb25c6a6cde149affe8a587371a3a8ad295ba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/733580e268a53db1cd01f2251419da91866378f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba6c40227108f8ee428e42eb0337b48ed3001e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3c145a4d24b752c9a1314d5a595014d51471418","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e041bef1adee02999cf24f9a2e15ed452bc363fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2111c791d885211714db85f9a06188571c57dd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff821092cf02a70c2bccd2d19269f01e29aa52cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53063","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.377","lastModified":"2025-05-02T16:15:25.377","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btsdio: fix use after free bug in btsdio_remove due to unfinished work\n\nIn btsdio_probe, &data->work was bound with btsdio_work.In\nbtsdio_send_frame, it was started by schedule_work.\n\nIf we call btsdio_remove with an unfinished job, there may\nbe a race condition and cause UAF bug on hdev."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e9ac114c4428fdb7ff4635b45d4f46017e8916f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8efae2112d910d8e5166dd0a836791b08721eef1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95eacef5692545f199fae4e52abfbfa273acb351","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a18fb433ceb56e0787546a9d77056dd0f215e762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af4d48754d5517d33bac5e504ff1f1de0808e29e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c59c65a14e8f7d738429648833f3bb3f9df0513f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbf8deacb7053ce3e3fed64b277c6c6989e65bba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da3d3fdfb4d523c5da30e35a8dd90e04f0fd8962","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53064","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.480","lastModified":"2025-05-02T16:15:25.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niavf: fix hang on reboot with ice\n\nWhen a system with E810 with existing VFs gets rebooted the following\nhang may be observed.\n\n Pid 1 is hung in iavf_remove(), part of a network driver:\n PID: 1        TASK: ffff965400e5a340  CPU: 24   COMMAND: \"systemd-shutdow\"\n  #0 [ffffaad04005fa50] __schedule at ffffffff8b3239cb\n  #1 [ffffaad04005fae8] schedule at ffffffff8b323e2d\n  #2 [ffffaad04005fb00] schedule_hrtimeout_range_clock at ffffffff8b32cebc\n  #3 [ffffaad04005fb80] usleep_range_state at ffffffff8b32c930\n  #4 [ffffaad04005fbb0] iavf_remove at ffffffffc12b9b4c [iavf]\n  #5 [ffffaad04005fbf0] pci_device_remove at ffffffff8add7513\n  #6 [ffffaad04005fc10] device_release_driver_internal at ffffffff8af08baa\n  #7 [ffffaad04005fc40] pci_stop_bus_device at ffffffff8adcc5fc\n  #8 [ffffaad04005fc60] pci_stop_and_remove_bus_device at ffffffff8adcc81e\n  #9 [ffffaad04005fc70] pci_iov_remove_virtfn at ffffffff8adf9429\n #10 [ffffaad04005fca8] sriov_disable at ffffffff8adf98e4\n #11 [ffffaad04005fcc8] ice_free_vfs at ffffffffc04bb2c8 [ice]\n #12 [ffffaad04005fd10] ice_remove at ffffffffc04778fe [ice]\n #13 [ffffaad04005fd38] ice_shutdown at ffffffffc0477946 [ice]\n #14 [ffffaad04005fd50] pci_device_shutdown at ffffffff8add58f1\n #15 [ffffaad04005fd70] device_shutdown at ffffffff8af05386\n #16 [ffffaad04005fd98] kernel_restart at ffffffff8a92a870\n #17 [ffffaad04005fda8] __do_sys_reboot at ffffffff8a92abd6\n #18 [ffffaad04005fee0] do_syscall_64 at ffffffff8b317159\n #19 [ffffaad04005ff08] __context_tracking_enter at ffffffff8b31b6fc\n #20 [ffffaad04005ff18] syscall_exit_to_user_mode at ffffffff8b31b50d\n #21 [ffffaad04005ff28] do_syscall_64 at ffffffff8b317169\n #22 [ffffaad04005ff50] entry_SYSCALL_64_after_hwframe at ffffffff8b40009b\n     RIP: 00007f1baa5c13d7  RSP: 00007fffbcc55a98  RFLAGS: 00000202\n     RAX: ffffffffffffffda  RBX: 0000000000000000  RCX: 00007f1baa5c13d7\n     RDX: 0000000001234567  RSI: 0000000028121969  RDI: 00000000fee1dead\n     RBP: 00007fffbcc55ca0   R8: 0000000000000000   R9: 00007fffbcc54e90\n     R10: 00007fffbcc55050  R11: 0000000000000202  R12: 0000000000000005\n     R13: 0000000000000000  R14: 00007fffbcc55af0  R15: 0000000000000000\n     ORIG_RAX: 00000000000000a9  CS: 0033  SS: 002b\n\nDuring reboot all drivers PM shutdown callbacks are invoked.\nIn iavf_shutdown() the adapter state is changed to __IAVF_REMOVE.\nIn ice_shutdown() the call chain above is executed, which at some point\ncalls iavf_remove(). However iavf_remove() expects the VF to be in one\nof the states __IAVF_RUNNING, __IAVF_DOWN or __IAVF_INIT_FAILED. If\nthat's not the case it sleeps forever.\nSo if iavf_shutdown() gets invoked before iavf_remove() the system will\nhang indefinitely because the adapter is already in state __IAVF_REMOVE.\n\nFix this by returning from iavf_remove() if the state is __IAVF_REMOVE,\nas we already went through iavf_shutdown()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e264be98b88a6d6f476c11087fe865696e8bef5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/502b898235f06130750c91512c86dd0e9efe28e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a29799fc141ba9e6cf921fc8e958e3398ad1a4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f752ace58867de3c063512b21e0f1694fc27f043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53065","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.580","lastModified":"2025-05-02T16:15:25.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/core: Fix perf_output_begin parameter is incorrectly invoked in perf_event_bpf_output\n\nsyzkaller reportes a KASAN issue with stack-out-of-bounds.\nThe call trace is as follows:\n  dump_stack+0x9c\/0xd3\n  print_address_description.constprop.0+0x19\/0x170\n  __kasan_report.cold+0x6c\/0x84\n  kasan_report+0x3a\/0x50\n  __perf_event_header__init_id+0x34\/0x290\n  perf_event_header__init_id+0x48\/0x60\n  perf_output_begin+0x4a4\/0x560\n  perf_event_bpf_output+0x161\/0x1e0\n  perf_iterate_sb_cpu+0x29e\/0x340\n  perf_iterate_sb+0x4c\/0xc0\n  perf_event_bpf_event+0x194\/0x2c0\n  __bpf_prog_put.constprop.0+0x55\/0xf0\n  __cls_bpf_delete_prog+0xea\/0x120 [cls_bpf]\n  cls_bpf_delete_prog_work+0x1c\/0x30 [cls_bpf]\n  process_one_work+0x3c2\/0x730\n  worker_thread+0x93\/0x650\n  kthread+0x1b8\/0x210\n  ret_from_fork+0x1f\/0x30\n\ncommit 267fb27352b6 (\"perf: Reduce stack usage of perf_output_begin()\")\nuse on-stack struct perf_sample_data of the caller function.\n\nHowever, perf_event_bpf_output uses incorrect parameter to convert\nsmall-sized data (struct perf_bpf_event) into large-sized data\n(struct perf_sample_data), which causes memory overwriting occurs in\n__perf_event_header__init_id."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a776fddb4e5598c8bfcd4ad094fba34f9856fc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac5f88642cb211152041f84a985309e9af4baf59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddcf8320003638a06eb1e46412e045d0c5701575","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb81a2ed4f52be831c9fb879752d89645a312c13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff8137727a2af4ad5f6e6c8b9f7ec5e8db9da86c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53066","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.673","lastModified":"2025-05-02T16:15:25.673","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nqed\/qed_sriov: guard against NULL derefs from qed_iov_get_vf_info\n\nWe have to make sure that the info returned by the helper is valid\nbefore using it.\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE\nstatic analysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25143b6a01d0cc5319edd3de22ffa2578b045550","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39c3b9dd481c3afce9439b29bafe00444cb4406b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42d72c6d1edc9dc09a5d6f6695d257fa9e9cc270","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7742c08e012eb65405e8304d100641638c5ff882","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bd0037822fd04da13721f77a42ee5a077d4c5fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97ea704f39b5ded96f071e98701aa543f6f89683","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b224b0cab3a66e93d414825065a2e667a1d28c32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e42d3bde4ec03c863259878dddaef5c351cca7ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53067","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.777","lastModified":"2025-05-02T16:15:25.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: Only call get_timer_irq() once in constant_clockevent_init()\n\nUnder CONFIG_DEBUG_ATOMIC_SLEEP=y and CONFIG_DEBUG_PREEMPT=y, we can see\nthe following messages on LoongArch, this is because using might_sleep()\nin preemption disable context.\n\n[    0.001127] smp: Bringing up secondary CPUs ...\n[    0.001222] Booting CPU#1...\n[    0.001244] 64-bit Loongson Processor probed (LA464 Core)\n[    0.001247] CPU1 revision is: 0014c012 (Loongson-64bit)\n[    0.001250] FPU1 revision is: 00000000\n[    0.001252] BUG: sleeping function called from invalid context at kernel\/locking\/mutex.c:283\n[    0.001255] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper\/1\n[    0.001257] preempt_count: 1, expected: 0\n[    0.001258] RCU nest depth: 0, expected: 0\n[    0.001259] Preemption disabled at:\n[    0.001261] [<9000000000223800>] arch_dup_task_struct+0x20\/0x110\n[    0.001272] CPU: 1 PID: 0 Comm: swapper\/1 Not tainted 6.2.0-rc7+ #43\n[    0.001275] Hardware name: Loongson Loongson-3A5000-7A1000-1w-A2101\/Loongson-LS3A5000-7A1000-1w-A2101, BIOS vUDK2018-LoongArch-V4.0.05132-beta10 12\/13\/202\n[    0.001277] Stack : 0072617764726148 0000000000000000 9000000000222f1c 90000001001e0000\n[    0.001286]         90000001001e3be0 90000001001e3be8 0000000000000000 0000000000000000\n[    0.001292]         90000001001e3be8 0000000000000040 90000001001e3cb8 90000001001e3a50\n[    0.001297]         9000000001642000 90000001001e3be8 be694d10ce4139dd 9000000100174500\n[    0.001303]         0000000000000001 0000000000000001 00000000ffffe0a2 0000000000000020\n[    0.001309]         000000000000002f 9000000001354116 00000000056b0000 ffffffffffffffff\n[    0.001314]         0000000000000000 0000000000000000 90000000014f6e90 9000000001642000\n[    0.001320]         900000000022b69c 0000000000000001 0000000000000000 9000000001736a90\n[    0.001325]         9000000100038000 0000000000000000 9000000000222f34 0000000000000000\n[    0.001331]         00000000000000b0 0000000000000004 0000000000000000 0000000000070000\n[    0.001337]         ...\n[    0.001339] Call Trace:\n[    0.001342] [<9000000000222f34>] show_stack+0x5c\/0x180\n[    0.001346] [<90000000010bdd80>] dump_stack_lvl+0x60\/0x88\n[    0.001352] [<9000000000266418>] __might_resched+0x180\/0x1cc\n[    0.001356] [<90000000010c742c>] mutex_lock+0x20\/0x64\n[    0.001359] [<90000000002a8ccc>] irq_find_matching_fwspec+0x48\/0x124\n[    0.001364] [<90000000002259c4>] constant_clockevent_init+0x68\/0x204\n[    0.001368] [<900000000022acf4>] start_secondary+0x40\/0xa8\n[    0.001371] [<90000000010c0124>] smpboot_entry+0x60\/0x64\n\nHere are the complete call chains:\n\nsmpboot_entry()\n  start_secondary()\n    constant_clockevent_init()\n      get_timer_irq()\n        irq_find_matching_fwnode()\n          irq_find_matching_fwspec()\n            mutex_lock()\n              might_sleep()\n                __might_sleep()\n                  __might_resched()\n\nIn order to avoid the above issue, we should break the call chains,\nusing timer_irq_installed variable as check condition to only call\nget_timer_irq() once in constant_clockevent_init() is a simple and\nproper way."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/acadbd058fa12b510fbecca11eae22bd6f654250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9c379e1d7e141b102f41858c9b8f6f36e7c89a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb7a78e343468873bf00b2b181fcfd3c02d8cb56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53068","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.870","lastModified":"2025-05-02T16:15:25.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: lan78xx: Limit packet length to skb->len\n\nPacket length retrieved from descriptor may be larger than\nthe actual socket buffer length. In such case the cloned\nskb passed up the network stack will leak kernel memory contents.\n\nAdditionally prevent integer underflow when size is less than\nETH_FCS_LEN."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44b9ed73369fc5ec85dd2ee487e986301792a82d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f247f5a2c18b3f21206cdd51193df4f38e1b9f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83de34967473ed31d276381373713cc2869a42e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53069","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:25.960","lastModified":"2025-05-02T16:15:25.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-vf: Add missing free for alloc_percpu\n\nAdd the free_percpu for the allocated \"vf->hw.lmt_info\" in order to avoid\nmemory leak, same as the \"pf->hw.lmt_info\" in\n`drivers\/net\/ethernet\/marvell\/octeontx2\/nic\/otx2_pf.c`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/813b590840771890c738ce6dbfd0c5938a1bafb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/840631bcf21f58c0a3f01378a54d79e9ce86b226","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90874b76e5f82eaa3309714d72ff2cd8bb8d1b02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f038f3917baf04835ba2b7bcf2a04ac93fbf8a9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53070","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.050","lastModified":"2025-05-02T16:15:26.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: PPTT: Fix to avoid sleep in the atomic context when PPTT is absent\n\nCommit 0c80f9e165f8 (\"ACPI: PPTT: Leave the table mapped for the runtime usage\")\nenabled to map PPTT once on the first invocation of acpi_get_pptt() and\nnever unmapped the same allowing it to be used at runtime with out the\nhassle of mapping and unmapping the table. This was needed to fetch LLC\ninformation from the PPTT in the cpuhotplug path which is executed in\nthe atomic context as the acpi_get_table() might sleep waiting for a\nmutex.\n\nHowever it missed to handle the case when there is no PPTT on the system\nwhich results in acpi_get_pptt() being called from all the secondary\nCPUs attempting to fetch the LLC information in the atomic context\nwithout knowing the absence of PPTT resulting in the splat like below:\n\n | BUG: sleeping function called from invalid context at kernel\/locking\/semaphore.c:164\n | in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper\/1\n | preempt_count: 1, expected: 0\n | RCU nest depth: 0, expected: 0\n | no locks held by swapper\/1\/0.\n | irq event stamp: 0\n | hardirqs last  enabled at (0): 0x0\n | hardirqs last disabled at (0): copy_process+0x61c\/0x1b40\n | softirqs last  enabled at (0): copy_process+0x61c\/0x1b40\n | softirqs last disabled at (0): 0x0\n | CPU: 1 PID: 0 Comm: swapper\/1 Not tainted 6.3.0-rc1 #1\n | Call trace:\n |  dump_backtrace+0xac\/0x138\n |  show_stack+0x30\/0x48\n |  dump_stack_lvl+0x60\/0xb0\n |  dump_stack+0x18\/0x28\n |  __might_resched+0x160\/0x270\n |  __might_sleep+0x58\/0xb0\n |  down_timeout+0x34\/0x98\n |  acpi_os_wait_semaphore+0x7c\/0xc0\n |  acpi_ut_acquire_mutex+0x58\/0x108\n |  acpi_get_table+0x40\/0xe8\n |  acpi_get_pptt+0x48\/0xa0\n |  acpi_get_cache_info+0x38\/0x140\n |  init_cache_level+0xf4\/0x118\n |  detect_cache_attributes+0x2e4\/0x640\n |  update_siblings_masks+0x3c\/0x330\n |  store_cpu_topology+0x88\/0xf0\n |  secondary_start_kernel+0xd0\/0x168\n |  __secondary_switched+0xb8\/0xc0\n\nUpdate acpi_get_pptt() to consider the fact that PPTT is once checked and\nis not available on the system and return NULL avoiding any attempts to\nfetch PPTT and thereby avoiding any possible sleep waiting for a mutex\nin the atomic context."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1318a07706bb2f8c65f88f39a16c2b5260bcdcd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91d7b60a65d9f71230ea09b86d2058a884a3c2af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0c1106d51b9abc8eae03c5522b20649b6a55f6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53071","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.140","lastModified":"2025-05-02T16:15:26.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: do not run mt76_unregister_device() on unregistered hw\n\nTrying to probe a mt7921e pci card without firmware results in a\nsuccessful probe where ieee80211_register_hw hasn't been called. When\nremoving the driver, ieee802111_unregister_hw is called unconditionally\nleading to a kernel NULL pointer dereference.\nFix the issue running mt76_unregister_device routine just for registered\nhw."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d34f27714c97a9786a30b3bb54944d6d8ed612f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41130c32f3a18fcc930316da17f3a5f3bc326aa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dffe86df26aee01a5fc56a175b7a7f157961e370","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53072","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.237","lastModified":"2025-05-02T16:15:26.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: use the workqueue to destroy unaccepted sockets\n\nChristoph reported a UaF at token lookup time after having\nrefactored the passive socket initialization part:\n\n  BUG: KASAN: use-after-free in __token_bucket_busy+0x253\/0x260\n  Read of size 4 at addr ffff88810698d5b0 by task syz-executor653\/3198\n\n  CPU: 1 PID: 3198 Comm: syz-executor653 Not tainted 6.2.0-rc59af4eaa31c1f6c00c8f1e448ed99a45c66340dd5 #6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x6e\/0x91\n   print_report+0x16a\/0x46f\n   kasan_report+0xad\/0x130\n   __token_bucket_busy+0x253\/0x260\n   mptcp_token_new_connect+0x13d\/0x490\n   mptcp_connect+0x4ed\/0x860\n   __inet_stream_connect+0x80e\/0xd90\n   tcp_sendmsg_fastopen+0x3ce\/0x710\n   mptcp_sendmsg+0xff1\/0x1a20\n   inet_sendmsg+0x11d\/0x140\n   __sys_sendto+0x405\/0x490\n   __x64_sys_sendto+0xdc\/0x1b0\n   do_syscall_64+0x3b\/0x90\n   entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\nWe need to properly clean-up all the paired MPTCP-level\nresources and be sure to release the msk last, even when\nthe unaccepted subflow is destroyed by the TCP internals\nvia inet_child_forget().\n\nWe can re-use the existing MPTCP_WORK_CLOSE_SUBFLOW infra,\nexplicitly checking that for the critical scenario: the\nclosed subflow is the MPC one, the msk is not accepted and\neventually going through full cleanup.\n\nWith such change, __mptcp_destroy_sock() is always called\non msk sockets, even on accepted ones. We don't need anymore\nto transiently drop one sk reference at msk clone time.\n\nPlease note this commit depends on the parent one:\n\n  mptcp: refactor passive socket initialization"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2827f099b3fb9a59263c997400e9182f5d423e84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/804cf487fb0031f3c74755b78d8663333f0ba636","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6985b9b82954caa53f862d6059d06c0526254f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53073","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.330","lastModified":"2025-05-02T16:15:26.330","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/x86\/amd\/core: Always clear status for idx\n\nThe variable 'status' (which contains the unhandled overflow bits) is\nnot being properly masked in some cases, displaying the following\nwarning:\n\n  WARNING: CPU: 156 PID: 475601 at arch\/x86\/events\/amd\/core.c:972 amd_pmu_v2_handle_irq+0x216\/0x270\n\nThis seems to be happening because the loop is being continued before\nthe status bit being unset, in case x86_perf_event_set_period()\nreturns 0. This is also causing an inconsistency because the \"handled\"\ncounter is incremented, but the status bit is not cleaned.\n\nMove the bit cleaning together above, together when the \"handled\"\ncounter is incremented."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/263f5ecaf7080513efc248ec739b6d9e00f4129f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d4c7b1f12e101d6d6253092588b127416ddfb6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab33a8f7649b0324639a336e1081aaea51a4523e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53074","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.420","lastModified":"2025-05-02T16:15:26.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: fix ttm_bo calltrace warning in psp_hw_fini\n\nThe call trace occurs when the amdgpu is removed after\nthe mode1 reset. During mode1 reset, from suspend to resume,\nthere is no need to reinitialize the ta firmware buffer\nwhich caused the bo pin_count increase redundantly.\n\n[  489.885525] Call Trace:\n[  489.885525]  <TASK>\n[  489.885526]  amdttm_bo_put+0x34\/0x50 [amdttm]\n[  489.885529]  amdgpu_bo_free_kernel+0xe8\/0x130 [amdgpu]\n[  489.885620]  psp_free_shared_bufs+0xb7\/0x150 [amdgpu]\n[  489.885720]  psp_hw_fini+0xce\/0x170 [amdgpu]\n[  489.885815]  amdgpu_device_fini_hw+0x2ff\/0x413 [amdgpu]\n[  489.885960]  ? blocking_notifier_chain_unregister+0x56\/0xb0\n[  489.885962]  amdgpu_driver_unload_kms+0x51\/0x60 [amdgpu]\n[  489.886049]  amdgpu_pci_remove+0x5a\/0x140 [amdgpu]\n[  489.886132]  ? __pm_runtime_resume+0x60\/0x90\n[  489.886134]  pci_device_remove+0x3e\/0xb0\n[  489.886135]  __device_release_driver+0x1ab\/0x2a0\n[  489.886137]  driver_detach+0xf3\/0x140\n[  489.886138]  bus_remove_driver+0x6c\/0xf0\n[  489.886140]  driver_unregister+0x31\/0x60\n[  489.886141]  pci_unregister_driver+0x40\/0x90\n[  489.886142]  amdgpu_exit+0x15\/0x451 [amdgpu]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23f4a2d29ba57bf88095f817de5809d427fcbe7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55a7c647ebf6e376c45d8322568dd6eb71937139","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7be9a2f8c5179520a7d5570e648e0c97d09e4fae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53075","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.510","lastModified":"2025-05-02T16:15:26.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix invalid address access in lookup_rec() when index is 0\n\nKASAN reported follow problem:\n\n BUG: KASAN: use-after-free in lookup_rec\n Read of size 8 at addr ffff000199270ff0 by task modprobe\n CPU: 2 Comm: modprobe\n Call trace:\n  kasan_report\n  __asan_load8\n  lookup_rec\n  ftrace_location\n  arch_check_ftrace_location\n  check_kprobe_address_safe\n  register_kprobe\n\nWhen checking pg->records[pg->index - 1].ip in lookup_rec(), it can get a\npg which is newly added to ftrace_pages_start in ftrace_process_locs().\nBefore the first pg->index++, index is 0 and accessing pg->records[-1].ip\nwill cause this problem.\n\nDon't check the ip when pg->index is 0."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a0d71fabfeb349216d33f001a6421b1768bd3a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2de28e5ce34b22b73b833a21e2c45ae3aade3964","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f84f31f63416b0f02fc146ffdc4ab32723eb7e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7569ee04b0e3b32df79f64db3a7138573edad9bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83c3b2f4e7c61367c7b24551f4c6eb94bbdda283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac58b88ccbbb8e9fb83e137cee04a856b1ea6635","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee92fa443358f4fc0017c1d0d325c27b37802504","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1bd8b7fd890d87d0dc4dedc6287ea34dd07c0b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53076","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.610","lastModified":"2025-05-02T16:15:26.610","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Adjust insufficient default bpf_jit_limit\n\nWe've seen recent AWS EKS (Kubernetes) user reports like the following:\n\n  After upgrading EKS nodes from v20230203 to v20230217 on our 1.24 EKS\n  clusters after a few days a number of the nodes have containers stuck\n  in ContainerCreating state or liveness\/readiness probes reporting the\n  following error:\n\n    Readiness probe errored: rpc error: code = Unknown desc = failed to\n    exec in container: failed to start exec \"4a11039f730203ffc003b7[...]\":\n    OCI runtime exec failed: exec failed: unable to start container process:\n    unable to init seccomp: error loading seccomp filter into kernel:\n    error loading seccomp filter: errno 524: unknown\n\n  However, we had not been seeing this issue on previous AMIs and it only\n  started to occur on v20230217 (following the upgrade from kernel 5.4 to\n  5.10) with no other changes to the underlying cluster or workloads.\n\n  We tried the suggestions from that issue (sysctl net.core.bpf_jit_limit=452534528)\n  which helped to immediately allow containers to be created and probes to\n  execute but after approximately a day the issue returned and the value\n  returned by cat \/proc\/vmallocinfo | grep bpf_jit | awk '{s+=$2} END {print s}'\n  was steadily increasing.\n\nI tested bpf tree to observe bpf_jit_charge_modmem, bpf_jit_uncharge_modmem\ntheir sizes passed in as well as bpf_jit_current under tcpdump BPF filter,\nseccomp BPF and native (e)BPF programs, and the behavior all looks sane\nand expected, that is nothing \"leaking\" from an upstream perspective.\n\nThe bpf_jit_limit knob was originally added in order to avoid a situation\nwhere unprivileged applications loading BPF programs (e.g. seccomp BPF\npolicies) consuming all the module memory space via BPF JIT such that loading\nof kernel modules would be prevented. The default limit was defined back in\n2018 and while good enough back then, we are generally seeing far more BPF\nconsumers today.\n\nAdjust the limit for the BPF JIT pool from originally 1\/4 to now 1\/2 of the\nmodule memory space to better reflect today's needs and avoid more users\nrunning into potentially hard to debug issues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10ec8ca8ec1a2f04c4ed90897225231c58c124a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/374ed036309fce73f9db04c3054018a71912d46b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42049e65d338870e93732b0b80c6c41faf6aa781","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54869daa6a437887614274f65298ba44a3fac63a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68ed00a37d2d1c932ff7be40be4b90c4bec48c56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cda812c76067c8a771eae43bb6943481cc7effc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4bbab27c4bf69486f5846d44134eb31c37e9b22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d69c2ded95b17d51cc6632c7848cbd476381ecd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53077","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.720","lastModified":"2025-05-02T16:15:26.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: fix shift-out-of-bounds in CalculateVMAndRowBytes\n\n[WHY]\nWhen PTEBufferSizeInRequests is zero, UBSAN reports the following\nwarning because dml_log2 returns an unexpected negative value:\n\n  shift exponent 4294966273 is too large for 32-bit type 'int'\n\n[HOW]\n\nIn the case PTEBufferSizeInRequests is zero, skip the dml_log2() and\nassign the result directly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/031f196d1b1b6d5dfcb0533b431e3ab1750e6189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7257070be70e19a9138f39009c1a26c83a8a7cfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a16394b5d661afec9a264fecac3abd87aea439ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bec1bea2fa974e63f6059c33edde669c7894d0bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e12b95680821b9880cd9992c0f3555389363604f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53078","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.820","lastModified":"2025-05-02T16:15:26.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: scsi_dh_alua: Fix memleak for 'qdata' in alua_activate()\n\nIf alua_rtpg_queue() failed from alua_activate(), then 'qdata' is not\nfreed, which will cause following memleak:\n\nunreferenced object 0xffff88810b2c6980 (size 32):\n  comm \"kworker\/u16:2\", pid 635322, jiffies 4355801099 (age 1216426.076s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    40 39 24 c1 ff ff ff ff 00 f8 ea 0a 81 88 ff ff  @9$.............\n  backtrace:\n    [<0000000098f3a26d>] alua_activate+0xb0\/0x320\n    [<000000003b529641>] scsi_dh_activate+0xb2\/0x140\n    [<000000007b296db3>] activate_path_work+0xc6\/0xe0 [dm_multipath]\n    [<000000007adc9ace>] process_one_work+0x3c5\/0x730\n    [<00000000c457a985>] worker_thread+0x93\/0x650\n    [<00000000cb80e628>] kthread+0x1ba\/0x210\n    [<00000000a1e61077>] ret_from_fork+0x22\/0x30\n\nFix the problem by freeing 'qdata' in error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d89254a4320eb7de0970c478172f764125c6355","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/123483df146492ca22b503ae6dacc2ce7c3a3974","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c55982beb80c7d3c30278fc6cfda8496a31dbe6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c4d71424df34fc23dc5336d09394ce68c849542","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9311e7a554dffd3823499e309a8b86a5cd1540e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a13faca032acbf2699293587085293bdfaafc8ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c09cdf6eb815ee35e55d6c50ac7f63db58bd20b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c110051d335ef7f62ad33474b0c23997fee5bfb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53079","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:26.923","lastModified":"2025-05-02T16:15:26.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Fix steering rules cleanup\n\nvport's mc, uc and multicast rules are not deleted in teardown path when\nEEH happens. Since the vport's promisc settings(uc, mc and all) in\nfirmware are reset after EEH, mlx5 driver will try to delete the above\nrules in the initialization path. This cause kernel crash because these\nsoftware rules are no longer valid.\n\nFix by nullifying these rules right after delete to avoid accessing any dangling\npointers.\n\nCall Trace:\n__list_del_entry_valid+0xcc\/0x100 (unreliable)\ntree_put_node+0xf4\/0x1b0 [mlx5_core]\ntree_remove_node+0x30\/0x70 [mlx5_core]\nmlx5_del_flow_rules+0x14c\/0x1f0 [mlx5_core]\nesw_apply_vport_rx_mode+0x10c\/0x200 [mlx5_core]\nesw_update_vport_rx_mode+0xb4\/0x180 [mlx5_core]\nesw_vport_change_handle_locked+0x1ec\/0x230 [mlx5_core]\nesw_enable_vport+0x130\/0x260 [mlx5_core]\nmlx5_eswitch_enable_sriov+0x2a0\/0x2f0 [mlx5_core]\nmlx5_device_enable_sriov+0x74\/0x440 [mlx5_core]\nmlx5_load_one+0x114c\/0x1550 [mlx5_core]\nmlx5_pci_resume+0x68\/0xf0 [mlx5_core]\neeh_report_resume+0x1a4\/0x230\neeh_pe_dev_traverse+0x98\/0x170\neeh_handle_normal_event+0x3e4\/0x640\neeh_handle_event+0x4c\/0x370\neeh_event_handler+0x14c\/0x210\nkthread+0x168\/0x1b0\nret_from_kernel_thread+0x5c\/0x84"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18cead61e437f4c7898acca0a5f3df12f801d97f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4df1f2d36bdc9a368650bf14b9097c555e95f71d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63546395a0e6ac264f78f65218086ce6014b4494","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f5780536181d1d0d09a11a1bc92f22e143447e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/922f56e9a795d6f3dd72d3428ebdd7ee040fa855","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53080","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.020","lastModified":"2025-05-02T16:15:27.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: Add missing overflow check in xdp_umem_reg\n\nThe number of chunks can overflow u32. Make sure to return -EINVAL on\noverflow. Also remove a redundant u32 cast assigning umem->npgs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cfc3564411acf96bf2fb791f706a1aa4f872c1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/580634b03a55f04a3c1968bcbd97736c079c6601","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a069909acc4435eeb41d05ccc03baa447cc01b7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb2e3bfb2a79db0c2057c6f701b782954394c67f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7df4813b149362248d6ef7be41a311e27bf75fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53081","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.117","lastModified":"2025-05-02T16:15:27.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix data corruption after failed write\n\nWhen buffered write fails to copy data into underlying page cache page,\nocfs2_write_end_nolock() just zeroes out and dirties the page.  This can\nleave dirty page beyond EOF and if page writeback tries to write this page\nbefore write succeeds and expands i_size, page gets into inconsistent\nstate where page dirty bit is clear but buffer dirty bits stay set\nresulting in page data never getting written and so data copied to the\npage is lost.  Fix the problem by invalidating page beyond EOF after\nfailed write."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1629f6f522b2d058019710466a84b240683bbee3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/205759c6c18f54659b0b5976b14a52d1b3eb9f57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47eb055ad3588fc96d34e9e1dd87b210ce62906b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c24eb49ab44351424ac8fe8567f91ea48a06089","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90410bcf873cf05f54a32183afff0161f44f9715","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91d7a4bd5656552d6259e2d0f8859f9e8cc5ef68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9e53869cb43c96d6d851c491fd4e26430ab6ba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c26f3ff4c0be590c1250f945ac2e4fc5fcdc5f45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53082","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.220","lastModified":"2025-05-02T16:15:27.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvp_vdpa: fix the crash in hot unplug with vp_vdpa\n\nWhile unplugging the vp_vdpa device, it triggers a kernel panic\nThe root cause is: vdpa_mgmtdev_unregister() will accesses modern\ndevices which will cause a use after free.\nSo need to change the sequence in vp_vdpa_remove\n\n[  195.003359] BUG: unable to handle page fault for address: ff4e8beb80199014\n[  195.004012] #PF: supervisor read access in kernel mode\n[  195.004486] #PF: error_code(0x0000) - not-present page\n[  195.004960] PGD 100000067 P4D 1001b6067 PUD 1001b7067 PMD 1001b8067 PTE 0\n[  195.005578] Oops: 0000 1 PREEMPT SMP PTI\n[  195.005968] CPU: 13 PID: 164 Comm: kworker\/u56:10 Kdump: loaded Not tainted 5.14.0-252.el9.x86_64 #1\n[  195.006792] Hardware name: Red Hat KVM\/RHEL, BIOS edk2-20221207gitfff6d81270b5-2.el9 unknown\n[  195.007556] Workqueue: kacpi_hotplug acpi_hotplug_work_fn\n[  195.008059] RIP: 0010:ioread8+0x31\/0x80\n[  195.008418] Code: 77 28 48 81 ff 00 00 01 00 76 0b 89 fa ec 0f b6 c0 c3 cc cc cc cc 8b 15 ad 72 93 01 b8 ff 00 00 00 85 d2 75 0f c3 cc cc cc cc <8a> 07 0f b6 c0 c3 cc cc cc cc 83 ea 01 48 83 ec 08 48 89 fe 48 c7\n[  195.010104] RSP: 0018:ff4e8beb8067bab8 EFLAGS: 00010292\n[  195.010584] RAX: ffffffffc05834a0 RBX: ffffffffc05843c0 RCX: ff4e8beb8067bae0\n[  195.011233] RDX: ff1bcbd580f88000 RSI: 0000000000000246 RDI: ff4e8beb80199014\n[  195.011881] RBP: ff1bcbd587e39000 R08: ffffffff916fa2d0 R09: ff4e8beb8067ba68\n[  195.012527] R10: 000000000000001c R11: 0000000000000000 R12: ff1bcbd5a3de9120\n[  195.013179] R13: ffffffffc062d000 R14: 0000000000000080 R15: ff1bcbe402bc7805\n[  195.013826] FS:  0000000000000000(0000) GS:ff1bcbe402740000(0000) knlGS:0000000000000000\n[  195.014564] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  195.015093] CR2: ff4e8beb80199014 CR3: 0000000107dea002 CR4: 0000000000771ee0\n[  195.015741] PKRU: 55555554\n[  195.016001] Call Trace:\n[  195.016233]  <TASK>\n[  195.016434]  vp_modern_get_status+0x12\/0x20\n[  195.016823]  vp_vdpa_reset+0x1b\/0x50 [vp_vdpa]\n[  195.017238]  virtio_vdpa_reset+0x3c\/0x48 [virtio_vdpa]\n[  195.017709]  remove_vq_common+0x1f\/0x3a0 [virtio_net]\n[  195.018178]  virtnet_remove+0x5d\/0x70 [virtio_net]\n[  195.018618]  virtio_dev_remove+0x3d\/0x90\n[  195.018986]  device_release_driver_internal+0x1aa\/0x230\n[  195.019466]  bus_remove_device+0xd8\/0x150\n[  195.019841]  device_del+0x18b\/0x3f0\n[  195.020167]  ? kernfs_find_ns+0x35\/0xd0\n[  195.020526]  device_unregister+0x13\/0x60\n[  195.020894]  unregister_virtio_device+0x11\/0x20\n[  195.021311]  device_release_driver_internal+0x1aa\/0x230\n[  195.021790]  bus_remove_device+0xd8\/0x150\n[  195.022162]  device_del+0x18b\/0x3f0\n[  195.022487]  device_unregister+0x13\/0x60\n[  195.022852]  ? vdpa_dev_remove+0x30\/0x30 [vdpa]\n[  195.023270]  vp_vdpa_dev_del+0x12\/0x20 [vp_vdpa]\n[  195.023694]  vdpa_match_remove+0x2b\/0x40 [vdpa]\n[  195.024115]  bus_for_each_dev+0x78\/0xc0\n[  195.024471]  vdpa_mgmtdev_unregister+0x65\/0x80 [vdpa]\n[  195.024937]  vp_vdpa_remove+0x23\/0x40 [vp_vdpa]\n[  195.025353]  pci_device_remove+0x36\/0xa0\n[  195.025719]  device_release_driver_internal+0x1aa\/0x230\n[  195.026201]  pci_stop_bus_device+0x6c\/0x90\n[  195.026580]  pci_stop_and_remove_bus_device+0xe\/0x20\n[  195.027039]  disable_slot+0x49\/0x90\n[  195.027366]  acpiphp_disable_and_eject_slot+0x15\/0x90\n[  195.027832]  hotplug_event+0xea\/0x210\n[  195.028171]  ? hotplug_event+0x210\/0x210\n[  195.028535]  acpiphp_hotplug_notify+0x22\/0x80\n[  195.028942]  ? hotplug_event+0x210\/0x210\n[  195.029303]  acpi_device_hotplug+0x8a\/0x1d0\n[  195.029690]  acpi_hotplug_work_fn+0x1a\/0x30\n[  195.030077]  process_one_work+0x1e8\/0x3c0\n[  195.030451]  worker_thread+0x50\/0x3b0\n[  195.030791]  ? rescuer_thread+0x3a0\/0x3a0\n[  195.031165]  kthread+0xd9\/0x100\n[  195.031459]  ? kthread_complete_and_exit+0x20\/0x20\n[  195.031899]  ret_from_fork+0x22\/0x30\n[  195.032233]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aed8efddd39b3434c96718d39009285c52b1cafc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baafa2960731211837d8fc04ff3873ecb7440464","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa1f327f93c9a7310cce9d2fcda28b7af91f7437","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53083","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.310","lastModified":"2025-05-02T16:15:27.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: don't replace page in rq_pages if it's a continuation of last page\n\nThe splice read calls nfsd_splice_actor to put the pages containing file\ndata into the svc_rqst->rq_pages array. It's possible however to get a\nsplice result that only has a partial page at the end, if (e.g.) the\nfilesystem hands back a short read that doesn't cover the whole page.\n\nnfsd_splice_actor will plop the partial page into its rq_pages array and\nreturn. Then later, when nfsd_splice_actor is called again, the\nremainder of the page may end up being filled out. At this point,\nnfsd_splice_actor will put the page into the array _again_ corrupting\nthe reply. If this is done enough times, rq_next_page will overrun the\narray and corrupt the trailing fields -- the rq_respages and\nrq_next_page pointers themselves.\n\nIf we've already added the page to the array in the last pass, don't add\nit to the array a second time when dealing with a splice continuation.\nThis was originally handled properly in nfsd_splice_actor, but commit\n91e23b1c3982 (\"NFSD: Clean up nfsd_splice_actor()\") removed the check\nfor it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0101067f376eb7b9afd00279270f25d5111a091d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/12eca509234acb6b666802edf77408bb70d7bfca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27c934dd8832dd40fd34776f916dc201e18b319b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51ddb84baff6f09ad62b5999ece3ec172e4e3568","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8235cd619db6e67f1d7d26c55f1f3e4e575c947d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53084","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.403","lastModified":"2025-05-02T16:15:27.403","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/shmem-helper: Remove another errant put in error path\n\ndrm_gem_shmem_mmap() doesn't own reference in error code path, resulting\nin the dma-buf shmem GEM object getting prematurely freed leading to a\nlater use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5cfb617967b05f8f27e862c97db1fabd8485f4db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/684c7372bbd6447c2e86a2a84e97a1478604d21f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77d26c824aa5a7e0681ef1d5b75fe538d746addc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dede8c14a37a7ac458f9add56154a074ed78e7cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee9adb7a45516cfa536ca92253d7ae59d56db9e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53085","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.493","lastModified":"2025-05-02T16:15:27.493","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/edid: fix info leak when failing to get panel id\n\nMake sure to clear the transfer buffer before fetching the EDID to\navoid leaking slab data to the logs on errors that leave the buffer\nunchanged."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d8457fe0eb9c80ff7795cf8a30962128b71d853","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/598c42c78919117dc0d235ae22d17ad642377483","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53086","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.580","lastModified":"2025-05-02T16:15:27.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: connac: do not check WED status for non-mmio devices\n\nWED is supported just for mmio devices, so do not check it for usb or\nsdio devices. This patch fixes the crash reported below:\n\n[   21.946627] wlp0s3u1i3: authenticate with c4:41:1e:f5:2b:1d\n[   22.525298] wlp0s3u1i3: send auth to c4:41:1e:f5:2b:1d (try 1\/3)\n[   22.548274] wlp0s3u1i3: authenticate with c4:41:1e:f5:2b:1d\n[   22.557694] wlp0s3u1i3: send auth to c4:41:1e:f5:2b:1d (try 1\/3)\n[   22.565885] wlp0s3u1i3: authenticated\n[   22.569502] wlp0s3u1i3: associate with c4:41:1e:f5:2b:1d (try 1\/3)\n[   22.578966] wlp0s3u1i3: RX AssocResp from c4:41:1e:f5:2b:1d (capab=0x11 status=30 aid=3)\n[   22.579113] wlp0s3u1i3: c4:41:1e:f5:2b:1d rejected association temporarily; comeback duration 1000 TU (1024 ms)\n[   23.649518] wlp0s3u1i3: associate with c4:41:1e:f5:2b:1d (try 2\/3)\n[   23.752528] wlp0s3u1i3: RX AssocResp from c4:41:1e:f5:2b:1d (capab=0x11 status=0 aid=3)\n[   23.797450] wlp0s3u1i3: associated\n[   24.959527] kernel tried to execute NX-protected page - exploit attempt? (uid: 0)\n[   24.959640] BUG: unable to handle page fault for address: ffff88800c223200\n[   24.959706] #PF: supervisor instruction fetch in kernel mode\n[   24.959788] #PF: error_code(0x0011) - permissions violation\n[   24.959846] PGD 2c01067 P4D 2c01067 PUD 2c02067 PMD c2a8063 PTE 800000000c223163\n[   24.959957] Oops: 0011 [#1] PREEMPT SMP\n[   24.960009] CPU: 0 PID: 391 Comm: wpa_supplicant Not tainted 6.2.0-kvm #18\n[   24.960089] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.1-2.fc37 04\/01\/2014\n[   24.960191] RIP: 0010:0xffff88800c223200\n[   24.960446] RSP: 0018:ffffc90000ff7698 EFLAGS: 00010282\n[   24.960513] RAX: ffff888028397010 RBX: ffff88800c26e630 RCX: 0000000000000058\n[   24.960598] RDX: ffff88800c26f844 RSI: 0000000000000006 RDI: ffff888028397010\n[   24.960682] RBP: ffff88800ea72f00 R08: 18b873fbab2b964c R09: be06b38235f3c63c\n[   24.960766] R10: 18b873fbab2b964c R11: be06b38235f3c63c R12: 0000000000000001\n[   24.960853] R13: ffff88800c26f84c R14: ffff8880063f0ff8 R15: ffff88800c26e644\n[   24.960950] FS:  00007effcea327c0(0000) GS:ffff88807dc00000(0000) knlGS:0000000000000000\n[   24.961036] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   24.961106] CR2: ffff88800c223200 CR3: 000000000eaa2000 CR4: 00000000000006b0\n[   24.961190] Call Trace:\n[   24.961219]  <TASK>\n[   24.961245]  ? mt76_connac_mcu_add_key+0x2cf\/0x310\n[   24.961313]  ? mt7921_set_key+0x150\/0x200\n[   24.961365]  ? drv_set_key+0xa9\/0x1b0\n[   24.961418]  ? ieee80211_key_enable_hw_accel+0xd9\/0x240\n[   24.961485]  ? ieee80211_key_replace+0x3f3\/0x730\n[   24.961541]  ? crypto_shash_setkey+0x89\/0xd0\n[   24.961597]  ? ieee80211_key_link+0x2d7\/0x3a0\n[   24.961664]  ? crypto_aead_setauthsize+0x31\/0x50\n[   24.961730]  ? sta_info_hash_lookup+0xa6\/0xf0\n[   24.961785]  ? ieee80211_add_key+0x1fc\/0x250\n[   24.961842]  ? rdev_add_key+0x41\/0x140\n[   24.961882]  ? nl80211_parse_key+0x6c\/0x2f0\n[   24.961940]  ? nl80211_new_key+0x24a\/0x290\n[   24.961984]  ? genl_rcv_msg+0x36c\/0x3a0\n[   24.962036]  ? rdev_mod_link_station+0xe0\/0xe0\n[   24.962102]  ? nl80211_set_key+0x410\/0x410\n[   24.962143]  ? nl80211_pre_doit+0x200\/0x200\n[   24.962187]  ? genl_bind+0xc0\/0xc0\n[   24.962217]  ? netlink_rcv_skb+0xaa\/0xd0\n[   24.962259]  ? genl_rcv+0x24\/0x40\n[   24.962300]  ? netlink_unicast+0x224\/0x2f0\n[   24.962345]  ? netlink_sendmsg+0x30b\/0x3d0\n[   24.962388]  ? ____sys_sendmsg+0x109\/0x1b0\n[   24.962388]  ? ____sys_sendmsg+0x109\/0x1b0\n[   24.962440]  ? __import_iovec+0x2e\/0x110\n[   24.962482]  ? ___sys_sendmsg+0xbe\/0xe0\n[   24.962525]  ? mod_objcg_state+0x25c\/0x330\n[   24.962576]  ? __dentry_kill+0x19e\/0x1d0\n[   24.962618]  ? call_rcu+0x18f\/0x270\n[   24.962660]  ? __dentry_kill+0x19e\/0x1d0\n[   24.962702]  ? __x64_sys_sendmsg+0x70\/0x90\n[   24.962744]  ? do_syscall_64+0x3d\/0x80\n[   24.962796]  ? exit_to_user_mode_prepare+0x1b\/0x70\n[   24.962852]  ? entry_SYSCA\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/53edfda851dd1ce41ac049ce2f195dc41dd27cc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5683e1488aa9b0805a9403d215e48fed29d6d923","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53087","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.667","lastModified":"2025-05-02T16:15:27.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/active: Fix misuse of non-idle barriers as fence trackers\n\nUsers reported oopses on list corruptions when using i915 perf with a\nnumber of concurrently running graphics applications.  Root cause analysis\npointed at an issue in barrier processing code -- a race among perf open \/\nclose replacing active barriers with perf requests on kernel context and\nconcurrent barrier preallocate \/ acquire operations performed during user\ncontext first pin \/ last unpin.\n\nWhen adding a request to a composite tracker, we try to reuse an existing\nfence tracker, already allocated and registered with that composite.  The\ntracker we obtain may already track another fence, may be an idle barrier,\nor an active barrier.\n\nIf the tracker we get occurs a non-idle barrier then we try to delete that\nbarrier from a list of barrier tasks it belongs to.  However, while doing\nthat we don't respect return value from a function that performs the\nbarrier deletion.  Should the deletion ever fail, we would end up reusing\nthe tracker still registered as a barrier task.  Since the same structure\nfield is reused with both fence callback lists and barrier tasks list,\nlist corruptions would likely occur.\n\nBarriers are now deleted from a barrier tasks list by temporarily removing\nthe list content, traversing that content with skip over the node to be\ndeleted, then populating the list back with the modified content.  Should\nthat intentionally racy concurrent deletion attempts be not serialized,\none or more of those may fail because of the list being temporary empty.\n\nRelated code that ignores the results of barrier deletion was initially\nintroduced in v5.4 by commit d8af05ff38ae (\"drm\/i915: Allow sharing the\nidle-barrier from other kernel requests\").  However, all users of the\nbarrier deletion routine were apparently serialized at that time, then the\nissue didn't exhibit itself.  Results of git bisect with help of a newly\ndeveloped igt@gem_barrier_race@remote-request IGT test indicate that list\ncorruptions might start to appear after commit 311770173fac (\"drm\/i915\/gt:\nSchedule request retirement when timeline idles\"), introduced in v5.5.\n\nRespect results of barrier deletion attempts -- mark the barrier as idle\nonly if successfully deleted from the list.  Then, before proceeding with\nsetting our fence as the one currently tracked, make sure that the tracker\nwe've got is not a non-idle barrier.  If that check fails then don't use\nthat tracker but go back and try to acquire a new, usable one.\n\nv3: use unlikely() to document what outcome we expect (Andi),\n  - fix bad grammar in commit description.\nv2: no code changes,\n  - blame commit 311770173fac (\"drm\/i915\/gt: Schedule request retirement\n    when timeline idles\"), v5.5, not commit d8af05ff38ae (\"drm\/i915: Allow\n    sharing the idle-barrier from other kernel requests\"), v5.4,\n  - reword commit description.\n\n(cherry picked from commit 506006055769b10d1b2b4e22f636f3b45e0e9fc7)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7591b8574c52c56b3994c2fbef1a3a311b5715","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e784a7d07af42057c0576fb647b482f4cb0dc2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ab7d33617559cced63d467928f478ea5c459021","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9159db27fb19bbf1c91b5c9d5285e66cc96cc5ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0e6b416b25ee14716f3549e0cbec1011b193809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53088","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.760","lastModified":"2025-05-02T16:15:27.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix UaF in listener shutdown\n\nAs reported by Christoph after having refactored the passive\nsocket initialization, the mptcp listener shutdown path is prone\nto an UaF issue.\n\n  BUG: KASAN: use-after-free in _raw_spin_lock_bh+0x73\/0xe0\n  Write of size 4 at addr ffff88810cb23098 by task syz-executor731\/1266\n\n  CPU: 1 PID: 1266 Comm: syz-executor731 Not tainted 6.2.0-rc59af4eaa31c1f6c00c8f1e448ed99a45c66340dd5 #6\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x6e\/0x91\n   print_report+0x16a\/0x46f\n   kasan_report+0xad\/0x130\n   kasan_check_range+0x14a\/0x1a0\n   _raw_spin_lock_bh+0x73\/0xe0\n   subflow_error_report+0x6d\/0x110\n   sk_error_report+0x3b\/0x190\n   tcp_disconnect+0x138c\/0x1aa0\n   inet_child_forget+0x6f\/0x2e0\n   inet_csk_listen_stop+0x209\/0x1060\n   __mptcp_close_ssk+0x52d\/0x610\n   mptcp_destroy_common+0x165\/0x640\n   mptcp_destroy+0x13\/0x80\n   __mptcp_destroy_sock+0xe7\/0x270\n   __mptcp_close+0x70e\/0x9b0\n   mptcp_close+0x2b\/0x150\n   inet_release+0xe9\/0x1f0\n   __sock_release+0xd2\/0x280\n   sock_close+0x15\/0x20\n   __fput+0x252\/0xa20\n   task_work_run+0x169\/0x250\n   exit_to_user_mode_prepare+0x113\/0x120\n   syscall_exit_to_user_mode+0x1d\/0x40\n   do_syscall_64+0x48\/0x90\n   entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\nThe msk grace period can legitly expire in between the last\nreference count dropped in mptcp_subflow_queue_clean() and\nthe later eventual access in inet_csk_listen_stop()\n\nAfter the previous patch we don't need anymore special-casing\nmsk listener socket cleanup: the mptcp worker will process each\nof the unaccepted msk sockets.\n\nJust drop the now unnecessary code.\n\nPlease note this commit depends on the two parent ones:\n\n  mptcp: refactor passive socket initialization\n  mptcp: use the workqueue to destroy unaccepted sockets"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a3f4f1f9c27215e4ddcd312558342e57b93e518","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f4f4cf5d32f10543deb946a37111e714579511e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5564be74a22a61855f8b8c100d8c4abb003bb792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53089","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.853","lastModified":"2025-05-02T16:15:27.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix task hung in ext4_xattr_delete_inode\n\nSyzbot reported a hung task problem:\n==================================================================\nINFO: task syz-executor232:5073 blocked for more than 143 seconds.\n      Not tainted 6.2.0-rc2-syzkaller-00024-g512dee0c00ad #0\n\"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\ntask:syz-exec232 state:D stack:21024 pid:5073 ppid:5072 flags:0x00004004\nCall Trace:\n <TASK>\n context_switch kernel\/sched\/core.c:5244 [inline]\n __schedule+0x995\/0xe20 kernel\/sched\/core.c:6555\n schedule+0xcb\/0x190 kernel\/sched\/core.c:6631\n __wait_on_freeing_inode fs\/inode.c:2196 [inline]\n find_inode_fast+0x35a\/0x4c0 fs\/inode.c:950\n iget_locked+0xb1\/0x830 fs\/inode.c:1273\n __ext4_iget+0x22e\/0x3ed0 fs\/ext4\/inode.c:4861\n ext4_xattr_inode_iget+0x68\/0x4e0 fs\/ext4\/xattr.c:389\n ext4_xattr_inode_dec_ref_all+0x1a7\/0xe50 fs\/ext4\/xattr.c:1148\n ext4_xattr_delete_inode+0xb04\/0xcd0 fs\/ext4\/xattr.c:2880\n ext4_evict_inode+0xd7c\/0x10b0 fs\/ext4\/inode.c:296\n evict+0x2a4\/0x620 fs\/inode.c:664\n ext4_orphan_cleanup+0xb60\/0x1340 fs\/ext4\/orphan.c:474\n __ext4_fill_super fs\/ext4\/super.c:5516 [inline]\n ext4_fill_super+0x81cd\/0x8700 fs\/ext4\/super.c:5644\n get_tree_bdev+0x400\/0x620 fs\/super.c:1282\n vfs_get_tree+0x88\/0x270 fs\/super.c:1489\n do_new_mount+0x289\/0xad0 fs\/namespace.c:3145\n do_mount fs\/namespace.c:3488 [inline]\n __do_sys_mount fs\/namespace.c:3697 [inline]\n __se_sys_mount+0x2d3\/0x3c0 fs\/namespace.c:3674\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7fa5406fd5ea\nRSP: 002b:00007ffc7232f968 EFLAGS: 00000202 ORIG_RAX: 00000000000000a5\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fa5406fd5ea\nRDX: 0000000020000440 RSI: 0000000020000000 RDI: 00007ffc7232f970\nRBP: 00007ffc7232f970 R08: 00007ffc7232f9b0 R09: 0000000000000432\nR10: 0000000000804a03 R11: 0000000000000202 R12: 0000000000000004\nR13: 0000555556a7a2c0 R14: 00007ffc7232f9b0 R15: 0000000000000000\n <\/TASK>\n==================================================================\n\nThe problem is that the inode contains an xattr entry with ea_inum of 15\nwhen cleaning up an orphan inode <15>. When evict inode <15>, the reference\ncounting of the corresponding EA inode is decreased. When EA inode <15> is\nfound by find_inode_fast() in __ext4_iget(), it is found that the EA inode\nholds the I_FREEING flag and waits for the EA inode to complete deletion.\nAs a result, when inode <15> is being deleted, we wait for inode <15> to\ncomplete the deletion, resulting in an infinite loop and triggering Hung\nTask. To solve this problem, we only need to check whether the ino of EA\ninode and parent is the same before getting EA inode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f7bfd6f8164be32dbbdf36aa1e5d00485c53cd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1aec41c98cce61d19ce89650895e51b9f3cdef13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c96c52aeaa6fd9163cfacdd98778b4a0398ef18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64b72f5e7574020dea62ab733d88a54d903c42a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73f7987fe1b82596f1a380e85cd0097ebaae7e01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94fd091576b12540924f6316ebc0678e84cb2800","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a98160d8f3e6242ca9b7f443f26e7ef3a61ba684","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efddc7e106fdf8d1f62d45e79de78f63b7c04fba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53090","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:27.957","lastModified":"2025-05-02T16:15:27.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Fix an illegal memory access\n\nIn the kfd_wait_on_events() function, the kfd_event_waiter structure is\nallocated by alloc_event_waiters(), but the event field of the waiter\nstructure is not initialized; When copy_from_user() fails in the\nkfd_wait_on_events() function, it will enter exception handling to\nrelease the previously allocated memory of the waiter structure;\nDue to the event field of the waiters structure being accessed\nin the free_waiters() function, this results in illegal memory access\nand system crash, here is the crash log:\n\nlocalhost kernel: RIP: 0010:native_queued_spin_lock_slowpath+0x185\/0x1e0\nlocalhost kernel: RSP: 0018:ffffaa53c362bd60 EFLAGS: 00010082\nlocalhost kernel: RAX: ff3d3d6bff4007cb RBX: 0000000000000282 RCX: 00000000002c0000\nlocalhost kernel: RDX: ffff9e855eeacb80 RSI: 000000000000279c RDI: ffffe7088f6a21d0\nlocalhost kernel: RBP: ffffe7088f6a21d0 R08: 00000000002c0000 R09: ffffaa53c362be64\nlocalhost kernel: R10: ffffaa53c362bbd8 R11: 0000000000000001 R12: 0000000000000002\nlocalhost kernel: R13: ffff9e7ead15d600 R14: 0000000000000000 R15: ffff9e7ead15d698\nlocalhost kernel: FS:  0000152a3d111700(0000) GS:ffff9e855ee80000(0000) knlGS:0000000000000000\nlocalhost kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nlocalhost kernel: CR2: 0000152938000010 CR3: 000000044d7a4000 CR4: 00000000003506e0\nlocalhost kernel: Call Trace:\nlocalhost kernel: _raw_spin_lock_irqsave+0x30\/0x40\nlocalhost kernel: remove_wait_queue+0x12\/0x50\nlocalhost kernel: kfd_wait_on_events+0x1b6\/0x490 [hydcu]\nlocalhost kernel: ? ftrace_graph_caller+0xa0\/0xa0\nlocalhost kernel: kfd_ioctl+0x38c\/0x4a0 [hydcu]\nlocalhost kernel: ? kfd_ioctl_set_trap_handler+0x70\/0x70 [hydcu]\nlocalhost kernel: ? kfd_ioctl_create_queue+0x5a0\/0x5a0 [hydcu]\nlocalhost kernel: ? ftrace_graph_caller+0xa0\/0xa0\nlocalhost kernel: __x64_sys_ioctl+0x8e\/0xd0\nlocalhost kernel: ? syscall_trace_enter.isra.18+0x143\/0x1b0\nlocalhost kernel: do_syscall_64+0x33\/0x80\nlocalhost kernel: entry_SYSCALL_64_after_hwframe+0x44\/0xa9\nlocalhost kernel: RIP: 0033:0x152a4dff68d7\n\nAllocate the structure with kcalloc, and remove redundant 0-initialization\nand a redundant loop condition check."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fece63b55c5d74cd6f5de51159e2cde37e10555","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fc8fff378b2f2039f2a666d9f8c570f4e58352c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a3fb3b745af0ce46ec2e0c8e507bae45b937334","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61f306f8df0d5559659c5578cf6d95236bcdcb25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6936525142a015e854d0a23e9ad9ea0a28b3843d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbf5eada4334a96e3a204b2307ff5b14dc380b0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9923e7214a870b312bf61f6a89c7554d0966985","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53091","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.073","lastModified":"2025-05-02T16:15:28.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: update s_journal_inum if it changes after journal replay\n\nWhen mounting a crafted ext4 image, s_journal_inum may change after journal\nreplay, which is obviously unreasonable because we have successfully loaded\nand replayed the journal through the old s_journal_inum. And the new\ns_journal_inum bypasses some of the checks in ext4_get_journal(), which\nmay trigger a null pointer dereference problem. So if s_journal_inum\nchanges after the journal replay, we ignore the change, and rewrite the\ncurrent journal_inum to the superblock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3039d8b8692408438a618fac2776b629852663c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/499fef2030fb754c68b1c7cb3a799a3bc1d0d925","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70e66bdeae4d0f7c8e87762f425b68aedd5e8955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee0c5277d4fab920bd31345c49e193ecede9ecef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53092","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.180","lastModified":"2025-05-02T16:15:28.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ninterconnect: exynos: fix node leak in probe PM QoS error path\n\nMake sure to add the newly allocated interconnect node to the provider\nbefore adding the PM QoS request so that the node is freed on errors."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3aab264875bf3c915ea2517fae1eec213e0b4987","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b71dd43bd49bd68186c1d19dbeedee219e003149","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c479e4ac4a3d1485a48599e66ce46547c1367828","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd4738ae1a0c216d25360a98e835967b06d6a253","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53093","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.270","lastModified":"2025-05-02T16:15:28.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Do not let histogram values have some modifiers\n\nHistogram values can not be strings, stacktraces, graphs, symbols,\nsyscalls, or grouped in buckets or log. Give an error if a value is set to\ndo so.\n\nNote, the histogram code was not prepared to handle these modifiers for\nhistograms and caused a bug.\n\nMark Rutland reported:\n\n # echo 'p:copy_to_user __arch_copy_to_user n=$arg2' >> \/sys\/kernel\/tracing\/kprobe_events\n # echo 'hist:keys=n:vals=hitcount.buckets=8:sort=hitcount' > \/sys\/kernel\/tracing\/events\/kprobes\/copy_to_user\/trigger\n # cat \/sys\/kernel\/tracing\/events\/kprobes\/copy_to_user\/hist\n[  143.694628] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n[  143.695190] Mem abort info:\n[  143.695362]   ESR = 0x0000000096000004\n[  143.695604]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  143.695889]   SET = 0, FnV = 0\n[  143.696077]   EA = 0, S1PTW = 0\n[  143.696302]   FSC = 0x04: level 0 translation fault\n[  143.702381] Data abort info:\n[  143.702614]   ISV = 0, ISS = 0x00000004\n[  143.702832]   CM = 0, WnR = 0\n[  143.703087] user pgtable: 4k pages, 48-bit VAs, pgdp=00000000448f9000\n[  143.703407] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n[  143.704137] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[  143.704714] Modules linked in:\n[  143.705273] CPU: 0 PID: 133 Comm: cat Not tainted 6.2.0-00003-g6fc512c10a7c #3\n[  143.706138] Hardware name: linux,dummy-virt (DT)\n[  143.706723] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  143.707120] pc : hist_field_name.part.0+0x14\/0x140\n[  143.707504] lr : hist_field_name.part.0+0x104\/0x140\n[  143.707774] sp : ffff800008333a30\n[  143.707952] x29: ffff800008333a30 x28: 0000000000000001 x27: 0000000000400cc0\n[  143.708429] x26: ffffd7a653b20260 x25: 0000000000000000 x24: ffff10d303ee5800\n[  143.708776] x23: ffffd7a6539b27b0 x22: ffff10d303fb8c00 x21: 0000000000000001\n[  143.709127] x20: ffff10d303ec2000 x19: 0000000000000000 x18: 0000000000000000\n[  143.709478] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[  143.709824] x14: 0000000000000000 x13: 203a6f666e692072 x12: 6567676972742023\n[  143.710179] x11: 0a230a6d6172676f x10: 000000000000002c x9 : ffffd7a6521e018c\n[  143.710584] x8 : 000000000000002c x7 : 7f7f7f7f7f7f7f7f x6 : 000000000000002c\n[  143.710915] x5 : ffff10d303b0103e x4 : ffffd7a653b20261 x3 : 000000000000003d\n[  143.711239] x2 : 0000000000020001 x1 : 0000000000000001 x0 : 0000000000000000\n[  143.711746] Call trace:\n[  143.712115]  hist_field_name.part.0+0x14\/0x140\n[  143.712642]  hist_field_name.part.0+0x104\/0x140\n[  143.712925]  hist_field_print+0x28\/0x140\n[  143.713125]  event_hist_trigger_print+0x174\/0x4d0\n[  143.713348]  hist_show+0xf8\/0x980\n[  143.713521]  seq_read_iter+0x1bc\/0x4b0\n[  143.713711]  seq_read+0x8c\/0xc4\n[  143.713876]  vfs_read+0xc8\/0x2a4\n[  143.714043]  ksys_read+0x70\/0xfc\n[  143.714218]  __arm64_sys_read+0x24\/0x30\n[  143.714400]  invoke_syscall+0x50\/0x120\n[  143.714587]  el0_svc_common.constprop.0+0x4c\/0x100\n[  143.714807]  do_el0_svc+0x44\/0xd0\n[  143.714970]  el0_svc+0x2c\/0x84\n[  143.715134]  el0t_64_sync_handler+0xbc\/0x140\n[  143.715334]  el0t_64_sync+0x190\/0x194\n[  143.715742] Code: a9bd7bfd 910003fd a90153f3 aa0003f3 (f9400000)\n[  143.716510] ---[ end trace 0000000000000000 ]---\nSegmentation fault"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fc0ee435c9264cdb7c5e872f76cd9bb97640227","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39cd75f2f3a43c0e2f95749eb6dd6420c553f87d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0213434fe3e4a0d118923dc98d31e7ff1cd9e45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53094","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.363","lastModified":"2025-05-02T16:15:28.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: fsl_lpuart: fix race on RX DMA shutdown\n\nFrom time to time DMA completion can come in the middle of DMA shutdown:\n\n<process ctx>:\t\t\t\t<IRQ>:\nlpuart32_shutdown()\n  lpuart_dma_shutdown()\n    del_timer_sync()\n\t\t\t\t\tlpuart_dma_rx_complete()\n\t\t\t\t\t  lpuart_copy_rx_to_tty()\n\t\t\t\t\t    mod_timer()\n    lpuart_dma_rx_free()\n\nWhen the timer fires a bit later, sport->dma_rx_desc is NULL:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000004\npc : lpuart_copy_rx_to_tty+0xcc\/0x5bc\nlr : lpuart_timer_func+0x1c\/0x2c\nCall trace:\n lpuart_copy_rx_to_tty\n lpuart_timer_func\n call_timer_fn\n __run_timers.part.0\n run_timer_softirq\n __do_softirq\n __irq_exit_rcu\n irq_exit\n handle_domain_irq\n gic_handle_irq\n call_on_irq_stack\n do_interrupt_handler\n ...\n\nTo fix this fold del_timer_sync() into lpuart_dma_rx_free() after\ndmaengine_terminate_sync() to make sure timer will not be re-started in\nlpuart_copy_rx_to_tty() <= lpuart_dma_rx_complete()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19a98d56dfedafb25652bdb9cd48a4e73ceba702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1be6f2b15f902c02e055ae0b419ca789200473c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a36b444cace9580380467fd1183bb5e85bcc80a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90530e7214c8a04dcdde57502d93fa96af288c38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/954fc9931f0aabf272b5674cf468affdd88d3a36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53095","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.453","lastModified":"2025-05-02T16:15:28.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/ttm: Fix a NULL pointer dereference\n\nThe LRU mechanism may look up a resource in the process of being removed\nfrom an object. The locking rules here are a bit unclear but it looks\ncurrently like res->bo assignment is protected by the LRU lock, whereas\nbo->resource is protected by the object lock, while *clearing* of\nbo->resource is also protected by the LRU lock. This means that if\nwe check that bo->resource points to the LRU resource under the LRU\nlock we should be safe.\nSo perform that check before deciding to swap out a bo. That avoids\ndereferencing a NULL bo->resource in ttm_bo_swapout()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9a9a8fe26751334b7739193a94eba741073b8a55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ba1720f6c4a0f13c3f3cb5c28132ee75555d04f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d9b1f9f7a72d83ebf173534e76b246349f32374","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53096","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.543","lastModified":"2025-05-02T16:15:28.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ninterconnect: fix mem leak when freeing nodes\n\nThe node link array is allocated when adding links to a node but is not\ndeallocated when nodes are destroyed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e0b13a1827229a02abef97b50ffaf89ba25370a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3167306455d0fbbbcf08cb25651acc527a86a95e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5904f415e1af72fa8fe6665aa4f554dc2099a95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1722e4113281fb34e5b4fb5c5387b17cd39a537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efae80ca13faa94457208852825731da44a788ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1e3a20c60196c37a402c584d0c9de306ba988ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53097","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.643","lastModified":"2025-05-02T16:15:28.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/iommu: fix memory leak with using debugfs_lookup()\n\nWhen calling debugfs_lookup() the result must have dput() called on it,\notherwise the memory will leak over time.  To make things simpler, just\ncall debugfs_lookup_and_remove() instead which handles all of the logic\nat once."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24c1bd1cd0d1ff821fd7d2f01a1e648c7882dfc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4050498c0ae3946c223fc63e9dd7b878b76611e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b505063910c134778202dfad9332dfcecb76bab3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3a62a35f903fd8be5b44542fe3901ec45f16757","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53098","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.733","lastModified":"2025-05-02T16:15:28.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rc: gpio-ir-recv: add remove function\n\nIn case runtime PM is enabled, do runtime PM clean up to remove\ncpu latency qos request, otherwise driver removal may have below\nkernel dump:\n\n[   19.463299] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000048\n[   19.472161] Mem abort info:\n[   19.474985]   ESR = 0x0000000096000004\n[   19.478754]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   19.484081]   SET = 0, FnV = 0\n[   19.487149]   EA = 0, S1PTW = 0\n[   19.490361]   FSC = 0x04: level 0 translation fault\n[   19.495256] Data abort info:\n[   19.498149]   ISV = 0, ISS = 0x00000004\n[   19.501997]   CM = 0, WnR = 0\n[   19.504977] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000049f81000\n[   19.511432] [0000000000000048] pgd=0000000000000000,\np4d=0000000000000000\n[   19.518245] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[   19.524520] Modules linked in: gpio_ir_recv(+) rc_core [last\nunloaded: rc_core]\n[   19.531845] CPU: 0 PID: 445 Comm: insmod Not tainted\n6.2.0-rc1-00028-g2c397a46d47c #72\n[   19.531854] Hardware name: FSL i.MX8MM EVK board (DT)\n[   19.531859] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS\nBTYPE=--)\n[   19.551777] pc : cpu_latency_qos_remove_request+0x20\/0x110\n[   19.557277] lr : gpio_ir_recv_runtime_suspend+0x18\/0x30\n[gpio_ir_recv]\n[   19.557294] sp : ffff800008ce3740\n[   19.557297] x29: ffff800008ce3740 x28: 0000000000000000 x27:\nffff800008ce3d50\n[   19.574270] x26: ffffc7e3e9cea100 x25: 00000000000f4240 x24:\nffffc7e3f9ef0e30\n[   19.574284] x23: 0000000000000000 x22: ffff0061803820f4 x21:\n0000000000000008\n[   19.574296] x20: ffffc7e3fa75df30 x19: 0000000000000020 x18:\nffffffffffffffff\n[   19.588570] x17: 0000000000000000 x16: ffffc7e3f9efab70 x15:\nffffffffffffffff\n[   19.595712] x14: ffff800008ce37b8 x13: ffff800008ce37aa x12:\n0000000000000001\n[   19.602853] x11: 0000000000000001 x10: ffffcbe3ec0dff87 x9 :\n0000000000000008\n[   19.609991] x8 : 0101010101010101 x7 : 0000000000000000 x6 :\n000000000f0bfe9f\n[   19.624261] x5 : 00ffffffffffffff x4 : 0025ab8e00000000 x3 :\nffff006180382010\n[   19.631405] x2 : ffffc7e3e9ce8030 x1 : ffffc7e3fc3eb810 x0 :\n0000000000000020\n[   19.638548] Call trace:\n[   19.640995]  cpu_latency_qos_remove_request+0x20\/0x110\n[   19.646142]  gpio_ir_recv_runtime_suspend+0x18\/0x30 [gpio_ir_recv]\n[   19.652339]  pm_generic_runtime_suspend+0x2c\/0x44\n[   19.657055]  __rpm_callback+0x48\/0x1dc\n[   19.660807]  rpm_callback+0x6c\/0x80\n[   19.664301]  rpm_suspend+0x10c\/0x640\n[   19.667880]  rpm_idle+0x250\/0x2d0\n[   19.671198]  update_autosuspend+0x38\/0xe0\n[   19.675213]  pm_runtime_set_autosuspend_delay+0x40\/0x60\n[   19.680442]  gpio_ir_recv_probe+0x1b4\/0x21c [gpio_ir_recv]\n[   19.685941]  platform_probe+0x68\/0xc0\n[   19.689610]  really_probe+0xc0\/0x3dc\n[   19.693189]  __driver_probe_device+0x7c\/0x190\n[   19.697550]  driver_probe_device+0x3c\/0x110\n[   19.701739]  __driver_attach+0xf4\/0x200\n[   19.705578]  bus_for_each_dev+0x70\/0xd0\n[   19.709417]  driver_attach+0x24\/0x30\n[   19.712998]  bus_add_driver+0x17c\/0x240\n[   19.716834]  driver_register+0x78\/0x130\n[   19.720676]  __platform_driver_register+0x28\/0x34\n[   19.725386]  gpio_ir_recv_driver_init+0x20\/0x1000 [gpio_ir_recv]\n[   19.731404]  do_one_initcall+0x44\/0x2ac\n[   19.735243]  do_init_module+0x48\/0x1d0\n[   19.739003]  load_module+0x19fc\/0x2034\n[   19.742759]  __do_sys_finit_module+0xac\/0x12c\n[   19.747124]  __arm64_sys_finit_module+0x20\/0x30\n[   19.751664]  invoke_syscall+0x48\/0x114\n[   19.755420]  el0_svc_common.constprop.0+0xcc\/0xec\n[   19.760132]  do_el0_svc+0x38\/0xb0\n[   19.763456]  el0_svc+0x2c\/0x84\n[   19.766516]  el0t_64_sync_handler+0xf4\/0x120\n[   19.770789]  el0t_64_sync+0x190\/0x194\n[   19.774460] Code: 910003fd a90153f3 aa0003f3 91204021 (f9401400)\n[   19.780556] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00e81f191bc00cb6faabf468960e96ebf0404a6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ece4d2f7eac1cb51dc0e9859e09bfdb00faa28e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30040818b338b8ebc956ce0ebd198f8d593586a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/513572bb89e8075f5d2a2bb4c89f1152e44da9d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5c140d88a69eb43de2a030f1d7ff7b16bff3b1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53099","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.830","lastModified":"2025-05-02T16:15:28.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: xilinx: don't make a sleepable memory allocation from an atomic context\n\nThe following issue was discovered using lockdep:\n[    6.691371] BUG: sleeping function called from invalid context at include\/linux\/sched\/mm.h:209\n[    6.694602] in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 1, name: swapper\/0\n[    6.702431] 2 locks held by swapper\/0\/1:\n[    6.706300]  #0: ffffff8800f6f188 (&dev->mutex){....}-{3:3}, at: __device_driver_lock+0x4c\/0x90\n[    6.714900]  #1: ffffffc009a2abb8 (enable_lock){....}-{2:2}, at: clk_enable_lock+0x4c\/0x140\n[    6.723156] irq event stamp: 304030\n[    6.726596] hardirqs last  enabled at (304029): [<ffffffc008d17ee0>] _raw_spin_unlock_irqrestore+0xc0\/0xd0\n[    6.736142] hardirqs last disabled at (304030): [<ffffffc00876bc5c>] clk_enable_lock+0xfc\/0x140\n[    6.744742] softirqs last  enabled at (303958): [<ffffffc0080904f0>] _stext+0x4f0\/0x894\n[    6.752655] softirqs last disabled at (303951): [<ffffffc0080e53b8>] irq_exit+0x238\/0x280\n[    6.760744] CPU: 1 PID: 1 Comm: swapper\/0 Tainted: G     U            5.15.36 #2\n[    6.768048] Hardware name: xlnx,zynqmp (DT)\n[    6.772179] Call trace:\n[    6.774584]  dump_backtrace+0x0\/0x300\n[    6.778197]  show_stack+0x18\/0x30\n[    6.781465]  dump_stack_lvl+0xb8\/0xec\n[    6.785077]  dump_stack+0x1c\/0x38\n[    6.788345]  ___might_sleep+0x1a8\/0x2a0\n[    6.792129]  __might_sleep+0x6c\/0xd0\n[    6.795655]  kmem_cache_alloc_trace+0x270\/0x3d0\n[    6.800127]  do_feature_check_call+0x100\/0x220\n[    6.804513]  zynqmp_pm_invoke_fn+0x8c\/0xb0\n[    6.808555]  zynqmp_pm_clock_getstate+0x90\/0xe0\n[    6.813027]  zynqmp_pll_is_enabled+0x8c\/0x120\n[    6.817327]  zynqmp_pll_enable+0x38\/0xc0\n[    6.821197]  clk_core_enable+0x144\/0x400\n[    6.825067]  clk_core_enable+0xd4\/0x400\n[    6.828851]  clk_core_enable+0xd4\/0x400\n[    6.832635]  clk_core_enable+0xd4\/0x400\n[    6.836419]  clk_core_enable+0xd4\/0x400\n[    6.840203]  clk_core_enable+0xd4\/0x400\n[    6.843987]  clk_core_enable+0xd4\/0x400\n[    6.847771]  clk_core_enable+0xd4\/0x400\n[    6.851555]  clk_core_enable_lock+0x24\/0x50\n[    6.855683]  clk_enable+0x24\/0x40\n[    6.858952]  fclk_probe+0x84\/0xf0\n[    6.862220]  platform_probe+0x8c\/0x110\n[    6.865918]  really_probe+0x110\/0x5f0\n[    6.869530]  __driver_probe_device+0xcc\/0x210\n[    6.873830]  driver_probe_device+0x64\/0x140\n[    6.877958]  __driver_attach+0x114\/0x1f0\n[    6.881828]  bus_for_each_dev+0xe8\/0x160\n[    6.885698]  driver_attach+0x34\/0x50\n[    6.889224]  bus_add_driver+0x228\/0x300\n[    6.893008]  driver_register+0xc0\/0x1e0\n[    6.896792]  __platform_driver_register+0x44\/0x60\n[    6.901436]  fclk_driver_init+0x1c\/0x28\n[    6.905220]  do_one_initcall+0x104\/0x590\n[    6.909091]  kernel_init_freeable+0x254\/0x2bc\n[    6.913390]  kernel_init+0x24\/0x130\n[    6.916831]  ret_from_fork+0x10\/0x20\n\nFix it by passing the GFP_ATOMIC gfp flag for the corresponding\nmemory allocation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/162049c31eb64308afa22e341a257a723526eb5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38ed310c22e7a0fc978b1f8292136a4a4a8b3051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86afb633beaa02ee95b5126a14c9f22cfade4fd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bbab2843f2d1337a268499a1c02b435d2985a17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b37d3ccbd549494890672136a0e623eb010d46a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53100","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:28.923","lastModified":"2025-05-02T16:15:28.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix WARNING in ext4_update_inline_data\n\nSyzbot found the following issue:\nEXT4-fs (loop0): mounted filesystem 00000000-0000-0000-0000-000000000000 without journal. Quota mode: none.\nfscrypt: AES-256-CTS-CBC using implementation \"cts-cbc-aes-aesni\"\nfscrypt: AES-256-XTS using implementation \"xts-aes-aesni\"\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 5071 at mm\/page_alloc.c:5525 __alloc_pages+0x30a\/0x560 mm\/page_alloc.c:5525\nModules linked in:\nCPU: 1 PID: 5071 Comm: syz-executor263 Not tainted 6.2.0-rc1-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\nRIP: 0010:__alloc_pages+0x30a\/0x560 mm\/page_alloc.c:5525\nRSP: 0018:ffffc90003c2f1c0 EFLAGS: 00010246\nRAX: ffffc90003c2f220 RBX: 0000000000000014 RCX: 0000000000000000\nRDX: 0000000000000028 RSI: 0000000000000000 RDI: ffffc90003c2f248\nRBP: ffffc90003c2f2d8 R08: dffffc0000000000 R09: ffffc90003c2f220\nR10: fffff52000785e49 R11: 1ffff92000785e44 R12: 0000000000040d40\nR13: 1ffff92000785e40 R14: dffffc0000000000 R15: 1ffff92000785e3c\nFS:  0000555556c0d300(0000) GS:ffff8880b9800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f95d5e04138 CR3: 00000000793aa000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n __alloc_pages_node include\/linux\/gfp.h:237 [inline]\n alloc_pages_node include\/linux\/gfp.h:260 [inline]\n __kmalloc_large_node+0x95\/0x1e0 mm\/slab_common.c:1113\n __do_kmalloc_node mm\/slab_common.c:956 [inline]\n __kmalloc+0xfe\/0x190 mm\/slab_common.c:981\n kmalloc include\/linux\/slab.h:584 [inline]\n kzalloc include\/linux\/slab.h:720 [inline]\n ext4_update_inline_data+0x236\/0x6b0 fs\/ext4\/inline.c:346\n ext4_update_inline_dir fs\/ext4\/inline.c:1115 [inline]\n ext4_try_add_inline_entry+0x328\/0x990 fs\/ext4\/inline.c:1307\n ext4_add_entry+0x5a4\/0xeb0 fs\/ext4\/namei.c:2385\n ext4_add_nondir+0x96\/0x260 fs\/ext4\/namei.c:2772\n ext4_create+0x36c\/0x560 fs\/ext4\/namei.c:2817\n lookup_open fs\/namei.c:3413 [inline]\n open_last_lookups fs\/namei.c:3481 [inline]\n path_openat+0x12ac\/0x2dd0 fs\/namei.c:3711\n do_filp_open+0x264\/0x4f0 fs\/namei.c:3741\n do_sys_openat2+0x124\/0x4e0 fs\/open.c:1310\n do_sys_open fs\/open.c:1326 [inline]\n __do_sys_openat fs\/open.c:1342 [inline]\n __se_sys_openat fs\/open.c:1337 [inline]\n __x64_sys_openat+0x243\/0x290 fs\/open.c:1337\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nAbove issue happens as follows:\next4_iget\n   ext4_find_inline_data_nolock ->i_inline_off=164 i_inline_size=60\next4_try_add_inline_entry\n   __ext4_mark_inode_dirty\n      ext4_expand_extra_isize_ea ->i_extra_isize=32 s_want_extra_isize=44\n         ext4_xattr_shift_entries\n\t ->after shift i_inline_off is incorrect, actually is change to 176\next4_try_add_inline_entry\n  ext4_update_inline_dir\n    get_max_inline_xattr_value_size\n      if (EXT4_I(inode)->i_inline_off)\n\tentry = (struct ext4_xattr_entry *)((void *)raw_inode +\n\t\t\tEXT4_I(inode)->i_inline_off);\n        free += EXT4_XATTR_SIZE(le32_to_cpu(entry->e_value_size));\n\t->As entry is incorrect, then 'free' may be negative\n   ext4_update_inline_data\n      value = kzalloc(len, GFP_NOFS);\n      -> len is unsigned int, maybe very large, then trigger warning when\n         'kzalloc()'\n\nTo resolve the above issue we need to update 'i_inline_off' after\n'ext4_xattr_shift_entries()'.  We do not need to set\nEXT4_STATE_MAY_INLINE_DATA flag here, since ext4_mark_inode_dirty()\nalready sets this flag if needed.  Setting EXT4_STATE_MAY_INLINE_DATA\nwhen it is needed may trigger a BUG_ON in ext4_writepages()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b96b4a5d9443ca4cad58b0040be455803c05a42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35161cec76772f74526f5886ad4082ec48511d5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39c5df2ca544368b44b59d0f6d80131e90763371","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74d775083e9f3d9dadf9e3b5f3e0028d1ad0bd5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92eee6a82a9a6f9f83559e17a2b6b935e1a5cd25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9bd94f67b27739bbe8583c52256502bd4cc7e83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5aa102b433b1890e1ccaa40c06826c77dda1665","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca500cf2eceb5a8e93bf71ab97b5f7a18ecabce2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53101","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.023","lastModified":"2025-05-02T16:15:29.023","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: zero i_disksize when initializing the bootloader inode\n\nIf the boot loader inode has never been used before, the\nEXT4_IOC_SWAP_BOOT inode will initialize it, including setting the\ni_size to 0.  However, if the \"never before used\" boot loader has a\nnon-zero i_size, then i_disksize will be non-zero, and the\ninconsistency between i_size and i_disksize can trigger a kernel\nwarning:\n\n WARNING: CPU: 0 PID: 2580 at fs\/ext4\/file.c:319\n CPU: 0 PID: 2580 Comm: bb Not tainted 6.3.0-rc1-00004-g703695902cfa\n RIP: 0010:ext4_file_write_iter+0xbc7\/0xd10\n Call Trace:\n  vfs_write+0x3b1\/0x5c0\n  ksys_write+0x77\/0x160\n  __x64_sys_write+0x22\/0x30\n  do_syscall_64+0x39\/0x80\n\nReproducer:\n 1. create corrupted image and mount it:\n       mke2fs -t ext4 \/tmp\/foo.img 200\n       debugfs -wR \"sif <5> size 25700\" \/tmp\/foo.img\n       mount -t ext4 \/tmp\/foo.img \/mnt\n       cd \/mnt\n       echo 123 > file\n 2. Run the reproducer program:\n       posix_memalign(&buf, 1024, 1024)\n       fd = open(\"file\", O_RDWR | O_DIRECT);\n       ioctl(fd, EXT4_IOC_SWAP_BOOT);\n       write(fd, buf, 1024);\n\nFix this by setting i_disksize as well as i_size to zero when\ninitiaizing the boot loader inode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01a821aacc64d4b05dafd239dbc9b7856686002f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0d8a6c9a6415999fee1259ccf1796480c026b7d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f00c476da8fe7c4c34ea16abb55d74127120413","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59eee0cdf8c036f554add97a4da7c06d7a9ff34a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cb27b1e76f0cc886ac09055bc41c0ab3f205167","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9a4cc5486356158554f6ad73027d8635a48b34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6c1447e483c05dbcfb3ff77ac04237a82070b8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5361da1e60d54ec81346aee8e3d8baf1be0b762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53102","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.127","lastModified":"2025-05-02T16:15:29.127","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: xsk: disable txq irq before flushing hw\n\nice_qp_dis() intends to stop a given queue pair that is a target of xsk\npool attach\/detach. One of the steps is to disable interrupts on these\nqueues. It currently is broken in a way that txq irq is turned off\n*after* HW flush which in turn takes no effect.\n\nice_qp_dis():\n-> ice_qvec_dis_irq()\n--> disable rxq irq\n--> flush hw\n-> ice_vsi_stop_tx_ring()\n-->disable txq irq\n\nBelow splat can be triggered by following steps:\n- start xdpsock WITHOUT loading xdp prog\n- run xdp_rxq_info with XDP_TX action on this interface\n- start traffic\n- terminate xdpsock\n\n[  256.312485] BUG: kernel NULL pointer dereference, address: 0000000000000018\n[  256.319560] #PF: supervisor read access in kernel mode\n[  256.324775] #PF: error_code(0x0000) - not-present page\n[  256.329994] PGD 0 P4D 0\n[  256.332574] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[  256.337006] CPU: 3 PID: 32 Comm: ksoftirqd\/3 Tainted: G           OE      6.2.0-rc5+ #51\n[  256.345218] Hardware name: Intel Corporation S2600WFT\/S2600WFT, BIOS SE5C620.86B.02.01.0008.031920191559 03\/19\/2019\n[  256.355807] RIP: 0010:ice_clean_rx_irq_zc+0x9c\/0x7d0 [ice]\n[  256.361423] Code: b7 8f 8a 00 00 00 66 39 ca 0f 84 f1 04 00 00 49 8b 47 40 4c 8b 24 d0 41 0f b7 45 04 66 25 ff 3f 66 89 04 24 0f 84 85 02 00 00 <49> 8b 44 24 18 0f b7 14 24 48 05 00 01 00 00 49 89 04 24 49 89 44\n[  256.380463] RSP: 0018:ffffc900088bfd20 EFLAGS: 00010206\n[  256.385765] RAX: 000000000000003c RBX: 0000000000000035 RCX: 000000000000067f\n[  256.393012] RDX: 0000000000000775 RSI: 0000000000000000 RDI: ffff8881deb3ac80\n[  256.400256] RBP: 000000000000003c R08: ffff889847982710 R09: 0000000000010000\n[  256.407500] R10: ffffffff82c060c0 R11: 0000000000000004 R12: 0000000000000000\n[  256.414746] R13: ffff88811165eea0 R14: ffffc9000d255000 R15: ffff888119b37600\n[  256.421990] FS:  0000000000000000(0000) GS:ffff8897e0cc0000(0000) knlGS:0000000000000000\n[  256.430207] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  256.436036] CR2: 0000000000000018 CR3: 0000000005c0a006 CR4: 00000000007706e0\n[  256.443283] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  256.450527] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  256.457770] PKRU: 55555554\n[  256.460529] Call Trace:\n[  256.463015]  <TASK>\n[  256.465157]  ? ice_xmit_zc+0x6e\/0x150 [ice]\n[  256.469437]  ice_napi_poll+0x46d\/0x680 [ice]\n[  256.473815]  ? _raw_spin_unlock_irqrestore+0x1b\/0x40\n[  256.478863]  __napi_poll+0x29\/0x160\n[  256.482409]  net_rx_action+0x136\/0x260\n[  256.486222]  __do_softirq+0xe8\/0x2e5\n[  256.489853]  ? smpboot_thread_fn+0x2c\/0x270\n[  256.494108]  run_ksoftirqd+0x2a\/0x50\n[  256.497747]  smpboot_thread_fn+0x1c1\/0x270\n[  256.501907]  ? __pfx_smpboot_thread_fn+0x10\/0x10\n[  256.506594]  kthread+0xea\/0x120\n[  256.509785]  ? __pfx_kthread+0x10\/0x10\n[  256.513597]  ret_from_fork+0x29\/0x50\n[  256.517238]  <\/TASK>\n\nIn fact, irqs were not disabled and napi managed to be scheduled and run\nwhile xsk_pool pointer was still valid, but SW ring of xdp_buff pointers\nwas already freed.\n\nTo fix this, call ice_qvec_dis_irq() after ice_vsi_stop_tx_ring(). Also\nwhile at it, remove redundant ice_clean_rx_ring() call - this is handled\nin ice_qp_clean_rings()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/243cde8de10894d7812c8a6b62653bf04d8f9700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ecc6e44959382f95c9d427cd8da85121a9cecda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b830c9642386867863ac64295185f896ff2928ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b89a453c6918e0f346fb0562e8c7812b94d28c73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cccba1ff0798a27f7b8d0c06762ef977400a2afb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53103","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.223","lastModified":"2025-05-02T16:15:29.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: restore bond's IFF_SLAVE flag if a non-eth dev enslave fails\n\nsyzbot reported a warning[1] where the bond device itself is a slave and\nwe try to enslave a non-ethernet device as the first slave which fails\nbut then in the error path when ether_setup() restores the bond device\nit also clears all flags. In my previous fix[2] I restored the\nIFF_MASTER flag, but I didn't consider the case that the bond device\nitself might also be a slave with IFF_SLAVE set, so we need to restore\nthat flag as well. Use the bond_ether_setup helper which does the right\nthing and restores the bond's flags properly.\n\nSteps to reproduce using a nlmon dev:\n $ ip l add nlmon0 type nlmon\n $ ip l add bond1 type bond\n $ ip l add bond2 type bond\n $ ip l set bond1 master bond2\n $ ip l set dev nlmon0 master bond1\n $ ip -d l sh dev bond1\n 22: bond1: <BROADCAST,MULTICAST,MASTER> mtu 1500 qdisc noqueue master bond2 state DOWN mode DEFAULT group default qlen 1000\n (now bond1's IFF_SLAVE flag is gone and we'll hit a warning[3] if we\n  try to delete it)\n\n[1] https:\/\/syzkaller.appspot.com\/bug?id=391c7b1f6522182899efba27d891f1743e8eb3ef\n[2] commit 7d5cd2ce5292 (\"bonding: correctly handle bonding type change on enslave failure\")\n[3] example warning:\n [   27.008664] bond1: (slave nlmon0): The slave device specified does not support setting the MAC address\n [   27.008692] bond1: (slave nlmon0): Error -95 calling set_mac_address\n [   32.464639] bond1 (unregistering): Released all slaves\n [   32.464685] ------------[ cut here ]------------\n [   32.464686] WARNING: CPU: 1 PID: 2004 at net\/core\/dev.c:10829 unregister_netdevice_many+0x72a\/0x780\n [   32.464694] Modules linked in: br_netfilter bridge bonding virtio_net\n [   32.464699] CPU: 1 PID: 2004 Comm: ip Kdump: loaded Not tainted 5.18.0-rc3+ #47\n [   32.464703] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.1-2.fc37 04\/01\/2014\n [   32.464704] RIP: 0010:unregister_netdevice_many+0x72a\/0x780\n [   32.464707] Code: 99 fd ff ff ba 90 1a 00 00 48 c7 c6 f4 02 66 96 48 c7 c7 20 4d 35 96 c6 05 fa c7 2b 02 01 e8 be 6f 4a 00 0f 0b e9 73 fd ff ff <0f> 0b e9 5f fd ff ff 80 3d e3 c7 2b 02 00 0f 85 3b fd ff ff ba 59\n [   32.464710] RSP: 0018:ffffa006422d7820 EFLAGS: 00010206\n [   32.464712] RAX: ffff8f6e077140a0 RBX: ffffa006422d7888 RCX: 0000000000000000\n [   32.464714] RDX: ffff8f6e12edbe58 RSI: 0000000000000296 RDI: ffffffff96d4a520\n [   32.464716] RBP: ffff8f6e07714000 R08: ffffffff96d63600 R09: ffffa006422d7728\n [   32.464717] R10: 0000000000000ec0 R11: ffffffff9698c988 R12: ffff8f6e12edb140\n [   32.464719] R13: dead000000000122 R14: dead000000000100 R15: ffff8f6e12edb140\n [   32.464723] FS:  00007f297c2f1740(0000) GS:ffff8f6e5d900000(0000) knlGS:0000000000000000\n [   32.464725] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [   32.464726] CR2: 00007f297bf1c800 CR3: 00000000115e8000 CR4: 0000000000350ee0\n [   32.464730] Call Trace:\n [   32.464763]  <TASK>\n [   32.464767]  rtnl_dellink+0x13e\/0x380\n [   32.464776]  ? cred_has_capability.isra.0+0x68\/0x100\n [   32.464780]  ? __rtnl_unlock+0x33\/0x60\n [   32.464783]  ? bpf_lsm_capset+0x10\/0x10\n [   32.464786]  ? security_capable+0x36\/0x50\n [   32.464790]  rtnetlink_rcv_msg+0x14e\/0x3b0\n [   32.464792]  ? _copy_to_iter+0xb1\/0x790\n [   32.464796]  ? post_alloc_hook+0xa0\/0x160\n [   32.464799]  ? rtnl_calcit.isra.0+0x110\/0x110\n [   32.464802]  netlink_rcv_skb+0x50\/0xf0\n [   32.464806]  netlink_unicast+0x216\/0x340\n [   32.464809]  netlink_sendmsg+0x23f\/0x480\n [   32.464812]  sock_sendmsg+0x5e\/0x60\n [   32.464815]  ____sys_sendmsg+0x22c\/0x270\n [   32.464818]  ? import_iovec+0x17\/0x20\n [   32.464821]  ? sendmsg_copy_msghdr+0x59\/0x90\n [   32.464823]  ? do_set_pte+0xa0\/0xe0\n [   32.464828]  ___sys_sendmsg+0x81\/0xc0\n [   32.464832]  ? mod_objcg_state+0xc6\/0x300\n [   32.464835]  ? refill_obj_stock+0xa9\/0x160\n [   32.464838]  ? memcg_slab_free_hook+0x1a5\/0x1f0\n [   32.464842]  __sys_sendm\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0276813b8ab08d9bf5ca4159f301d0829ecf13fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93c8cbeb1b2b8ff670b3dfd01b3abd843995c80f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e667d469098671261d558be0cd93dca4d285ce1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb1b5135bd3f232d5335b3935e2c2ac11bfa02f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53104","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.317","lastModified":"2025-05-02T16:15:29.317","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Move packet length check to prevent kernel panic in skb_pull\n\nPacket length check needs to be located after size and align_count\ncalculation to prevent kernel panic in skb_pull() in case\nrx_cmd_a & RX_CMD_A_RED evaluates to true."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/181e9db5caec4daae57a58675a1ceaa47348958f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cc46ed406bb325f10a251b03d9a83ae67b3d3d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43ffe6caccc7a1bb9d7442fbab521efbf6c1378c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4caee8e7d91e4f06f21881726da9c1bb2cd6e4fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c96eeba93980c5cef5176a4bac0ddb722fd57dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bf0eac3fdd2d25f5c6ceab63e3e4902e274f7ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89441504d66d116eb5ce58c132f58cdcca5b498a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d07a3203c36d073af2177edfc6b070220a60cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53105","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.430","lastModified":"2025-05-02T16:15:29.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix cleanup null-ptr deref on encap lock\n\nDuring module is unloaded while a peer tc flow is still offloaded,\nfirst the peer uplink rep profile is changed to a nic profile, and so\nneigh encap lock is destroyed. Next during unload, the VF reps netdevs\nare unregistered which causes the original non-peer tc flow to be deleted,\nwhich deletes the peer flow. The peer flow deletion detaches the encap\nentry and try to take the already destroyed encap lock, causing the\nbelow trace.\n\nFix this by clearing peer flows during tc eswitch cleanup\n(mlx5e_tc_esw_cleanup()).\n\nRelevant trace:\n[ 4316.837128] BUG: kernel NULL pointer dereference, address: 00000000000001d8\n[ 4316.842239] RIP: 0010:__mutex_lock+0xb5\/0xc40\n[ 4316.851897] Call Trace:\n[ 4316.852481]  <TASK>\n[ 4316.857214]  mlx5e_rep_neigh_entry_release+0x93\/0x790 [mlx5_core]\n[ 4316.858258]  mlx5e_rep_encap_entry_detach+0xa7\/0xf0 [mlx5_core]\n[ 4316.859134]  mlx5e_encap_dealloc+0xa3\/0xf0 [mlx5_core]\n[ 4316.859867]  clean_encap_dests.part.0+0x5c\/0xe0 [mlx5_core]\n[ 4316.860605]  mlx5e_tc_del_fdb_flow+0x32a\/0x810 [mlx5_core]\n[ 4316.862609]  __mlx5e_tc_del_fdb_peer_flow+0x1a2\/0x250 [mlx5_core]\n[ 4316.863394]  mlx5e_tc_del_flow+0x(\/0x630 [mlx5_core]\n[ 4316.864090]  mlx5e_flow_put+0x5f\/0x100 [mlx5_core]\n[ 4316.864771]  mlx5e_delete_flower+0x4de\/0xa40 [mlx5_core]\n[ 4316.865486]  tc_setup_cb_reoffload+0x20\/0x80\n[ 4316.865905]  fl_reoffload+0x47c\/0x510 [cls_flower]\n[ 4316.869181]  tcf_block_playback_offloads+0x91\/0x1d0\n[ 4316.869649]  tcf_block_unbind+0xe7\/0x1b0\n[ 4316.870049]  tcf_block_offload_cmd.isra.0+0x1ee\/0x270\n[ 4316.879266]  tcf_block_offload_unbind+0x61\/0xa0\n[ 4316.879711]  __tcf_block_put+0xa4\/0x310"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01fdaea410787fe372daeaeda93a29ed0606d334","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7350f8dbe0c2a1d4d3ad7c35b610abd3cb91750","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9668f0b1d28570327dbba189f2c61f6f9e43ae7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53106","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.520","lastModified":"2025-05-02T16:15:29.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: st-nci: Fix use after free bug in ndlc_remove due to race condition\n\nThis bug influences both st_nci_i2c_remove and st_nci_spi_remove.\nTake st_nci_i2c_remove as an example.\n\nIn st_nci_i2c_probe, it called ndlc_probe and bound &ndlc->sm_work\nwith llt_ndlc_sm_work.\n\nWhen it calls ndlc_recv or timeout handler, it will finally call\nschedule_work to start the work.\n\nWhen we call st_nci_i2c_remove to remove the driver, there\nmay be a sequence as follows:\n\nFix it by finishing the work before cleanup in ndlc_remove\n\nCPU0                  CPU1\n\n                    |llt_ndlc_sm_work\nst_nci_i2c_remove   |\n  ndlc_remove       |\n     st_nci_remove  |\n     nci_free_device|\n     kfree(ndev)    |\n\/\/free ndlc->ndev   |\n                    |llt_ndlc_rcv_queue\n                    |nci_recv_frame\n                    |\/\/use ndlc->ndev"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2156490c4b7cacda9a18ec99929940b8376dc0e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3405eb641dafcc8b28d174784b203c1622c121bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43aa468df246175207a7d5d7d6d31b231f15b49c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5000fe6c27827a61d8250a7e4a1d26c3298ef4f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e331022b448fbc5e76f24349cd0246844dcad25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84dd9cc34014e3a3dcce0eb6d54b8a067e97676b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0c202a8dc63008205a5d546559736507a9aae66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f589e5b56c562d99ea74e05b1c3f0eab78aa17a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53107","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.620","lastModified":"2025-05-02T16:15:29.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nveth: Fix use after free in XDP_REDIRECT\n\nCommit 718a18a0c8a6 (\"veth: Rework veth_xdp_rcv_skb in order\nto accept non-linear skb\") introduced a bug where it tried to\nuse pskb_expand_head() if the headroom was less than\nXDP_PACKET_HEADROOM.  This however uses kmalloc to expand the head,\nwhich will later allow consume_skb() to free the skb while is it still\nin use by AF_XDP.\n\nPreviously if the headroom was less than XDP_PACKET_HEADROOM we\ncontinued on to allocate a new skb from pages so this restores that\nbehavior.\n\nBUG: KASAN: use-after-free in __xsk_rcv+0x18d\/0x2c0\nRead of size 78 at addr ffff888976250154 by task napi\/iconduit-g\/148640\n\nCPU: 5 PID: 148640 Comm: napi\/iconduit-g Kdump: loaded Tainted: G           O       6.1.4-cloudflare-kasan-2023.1.2 #1\nHardware name: Quanta Computer Inc. QuantaPlex T41S-2U\/S2S-MB, BIOS S2S_3B10.03 06\/21\/2018\nCall Trace:\n  <TASK>\n  dump_stack_lvl+0x34\/0x48\n  print_report+0x170\/0x473\n  ? __xsk_rcv+0x18d\/0x2c0\n  kasan_report+0xad\/0x130\n  ? __xsk_rcv+0x18d\/0x2c0\n  kasan_check_range+0x149\/0x1a0\n  memcpy+0x20\/0x60\n  __xsk_rcv+0x18d\/0x2c0\n  __xsk_map_redirect+0x1f3\/0x490\n  ? veth_xdp_rcv_skb+0x89c\/0x1ba0 [veth]\n  xdp_do_redirect+0x5ca\/0xd60\n  veth_xdp_rcv_skb+0x935\/0x1ba0 [veth]\n  ? __netif_receive_skb_list_core+0x671\/0x920\n  ? veth_xdp+0x670\/0x670 [veth]\n  veth_xdp_rcv+0x304\/0xa20 [veth]\n  ? do_xdp_generic+0x150\/0x150\n  ? veth_xdp_rcv_one+0xde0\/0xde0 [veth]\n  ? _raw_spin_lock_bh+0xe0\/0xe0\n  ? newidle_balance+0x887\/0xe30\n  ? __perf_event_task_sched_in+0xdb\/0x800\n  veth_poll+0x139\/0x571 [veth]\n  ? veth_xdp_rcv+0xa20\/0xa20 [veth]\n  ? _raw_spin_unlock+0x39\/0x70\n  ? finish_task_switch.isra.0+0x17e\/0x7d0\n  ? __switch_to+0x5cf\/0x1070\n  ? __schedule+0x95b\/0x2640\n  ? io_schedule_timeout+0x160\/0x160\n  __napi_poll+0xa1\/0x440\n  napi_threaded_poll+0x3d1\/0x460\n  ? __napi_poll+0x440\/0x440\n  ? __kthread_parkme+0xc6\/0x1f0\n  ? __napi_poll+0x440\/0x440\n  kthread+0x2a2\/0x340\n  ? kthread_complete_and_exit+0x20\/0x20\n  ret_from_fork+0x22\/0x30\n  <\/TASK>\n\nFreed by task 148640:\n  kasan_save_stack+0x23\/0x50\n  kasan_set_track+0x21\/0x30\n  kasan_save_free_info+0x2a\/0x40\n  ____kasan_slab_free+0x169\/0x1d0\n  slab_free_freelist_hook+0xd2\/0x190\n  __kmem_cache_free+0x1a1\/0x2f0\n  skb_release_data+0x449\/0x600\n  consume_skb+0x9f\/0x1c0\n  veth_xdp_rcv_skb+0x89c\/0x1ba0 [veth]\n  veth_xdp_rcv+0x304\/0xa20 [veth]\n  veth_poll+0x139\/0x571 [veth]\n  __napi_poll+0xa1\/0x440\n  napi_threaded_poll+0x3d1\/0x460\n  kthread+0x2a2\/0x340\n  ret_from_fork+0x22\/0x30\n\nThe buggy address belongs to the object at ffff888976250000\n  which belongs to the cache kmalloc-2k of size 2048\nThe buggy address is located 340 bytes inside of\n  2048-byte region [ffff888976250000, ffff888976250800)\n\nThe buggy address belongs to the physical page:\npage:00000000ae18262a refcount:2 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x976250\nhead:00000000ae18262a order:3 compound_mapcount:0 compound_pincount:0\nflags: 0x2ffff800010200(slab|head|node=0|zone=2|lastcpupid=0x1ffff)\nraw: 002ffff800010200 0000000000000000 dead000000000122 ffff88810004cf00\nraw: 0000000000000000 0000000080080008 00000002ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n  ffff888976250000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff888976250080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n> ffff888976250100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                                  ^\n  ffff888976250180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff888976250200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6e755b56896df48b0fae0db275e148f8d8aa7d6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/717d20710596b5b26595ede454d1105fa176f4a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c10131803e45269ddc6c817f19ed649110f3cae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53108","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.713","lastModified":"2025-05-02T16:15:29.713","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/iucv: Fix size of interrupt data\n\niucv_irq_data needs to be 4 bytes larger.\nThese bytes are not used by the iucv module, but written by\nthe z\/VM hypervisor in case a CPU is deconfigured.\n\nReported as:\nBUG dma-kmalloc-64 (Not tainted): kmalloc Redzone overwritten\n-----------------------------------------------------------------------------\n0x0000000000400564-0x0000000000400567 @offset=1380. First byte 0x80 instead of 0xcc\nAllocated in iucv_cpu_prepare+0x44\/0xd0 age=167839 cpu=2 pid=1\n__kmem_cache_alloc_node+0x166\/0x450\nkmalloc_node_trace+0x3a\/0x70\niucv_cpu_prepare+0x44\/0xd0\ncpuhp_invoke_callback+0x156\/0x2f0\ncpuhp_issue_call+0xf0\/0x298\n__cpuhp_setup_state_cpuslocked+0x136\/0x338\n__cpuhp_setup_state+0xf4\/0x288\niucv_init+0xf4\/0x280\ndo_one_initcall+0x78\/0x390\ndo_initcalls+0x11a\/0x140\nkernel_init_freeable+0x25e\/0x2a0\nkernel_init+0x2e\/0x170\n__ret_from_fork+0x3c\/0x58\nret_from_fork+0xa\/0x40\nFreed in iucv_init+0x92\/0x280 age=167839 cpu=2 pid=1\n__kmem_cache_free+0x308\/0x358\niucv_init+0x92\/0x280\ndo_one_initcall+0x78\/0x390\ndo_initcalls+0x11a\/0x140\nkernel_init_freeable+0x25e\/0x2a0\nkernel_init+0x2e\/0x170\n__ret_from_fork+0x3c\/0x58\nret_from_fork+0xa\/0x40\nSlab 0x0000037200010000 objects=32 used=30 fp=0x0000000000400640 flags=0x1ffff00000010200(slab|head|node=0|zone=0|\nObject 0x0000000000400540 @offset=1344 fp=0x0000000000000000\nRedzone  0000000000400500: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400510: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400520: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400530: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nObject   0000000000400540: 00 01 00 03 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject   0000000000400550: f3 86 81 f2 f4 82 f8 82 f0 f0 f0 f0 f0 f0 f0 f2  ................\nObject   0000000000400560: 00 00 00 00 80 00 00 00 cc cc cc cc cc cc cc cc  ................\nObject   0000000000400570: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc  ................\nRedzone  0000000000400580: cc cc cc cc cc cc cc cc                          ........\nPadding  00000000004005d4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ\nPadding  00000000004005e4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ\nPadding  00000000004005f4: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a              ZZZZZZZZZZZZ\nCPU: 6 PID: 121030 Comm: 116-pai-crypto. Not tainted 6.3.0-20230221.rc0.git4.99b8246b2d71.300.fc37.s390x+debug #1\nHardware name: IBM 3931 A01 704 (z\/VM 7.3.0)\nCall Trace:\n[<000000032aa034ec>] dump_stack_lvl+0xac\/0x100\n[<0000000329f5a6cc>] check_bytes_and_report+0x104\/0x140\n[<0000000329f5aa78>] check_object+0x370\/0x3c0\n[<0000000329f5ede6>] free_debug_processing+0x15e\/0x348\n[<0000000329f5f06a>] free_to_partial_list+0x9a\/0x2f0\n[<0000000329f5f4a4>] __slab_free+0x1e4\/0x3a8\n[<0000000329f61768>] __kmem_cache_free+0x308\/0x358\n[<000000032a91465c>] iucv_cpu_dead+0x6c\/0x88\n[<0000000329c2fc66>] cpuhp_invoke_callback+0x156\/0x2f0\n[<000000032aa062da>] _cpu_down.constprop.0+0x22a\/0x5e0\n[<0000000329c3243e>] cpu_device_down+0x4e\/0x78\n[<000000032a61dee0>] device_offline+0xc8\/0x118\n[<000000032a61e048>] online_store+0x60\/0xe0\n[<000000032a08b6b0>] kernfs_fop_write_iter+0x150\/0x1e8\n[<0000000329fab65c>] vfs_write+0x174\/0x360\n[<0000000329fab9fc>] ksys_write+0x74\/0x100\n[<000000032aa03a5a>] __do_syscall+0x1da\/0x208\n[<000000032aa177b2>] system_call+0x82\/0xb0\nINFO: lockdep is turned off.\nFIX dma-kmalloc-64: Restoring kmalloc Redzone 0x0000000000400564-0x0000000000400567=0xcc\nFIX dma-kmalloc-64: Object at 0x0000000000400540 not freed"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cfdefdaaa4b2a77e84d0db5e0a47a7aa3bb615a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d87debb8ed2649608ff432699e7c961c0c6f03b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71da5991b6438ad6da13ceb25465ee2760a1c52f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93a970494881004c348d8feb38463ee72496e99a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a908eae0f71811afee86be7088692f1aa5855c3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0d2bb5e31a693ebc8888eb407f8a257a3680efa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd2e78462ae18484e55ae4d285df2c86b86bdd12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c78f1345db4e4b3b78f9b768f4074ebd60abe966","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53109","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.823","lastModified":"2025-05-02T16:15:29.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tunnels: annotate lockless accesses to dev->needed_headroom\n\nIP tunnels can apparently update dev->needed_headroom\nin their xmit path.\n\nThis patch takes care of three tunnels xmit, and also the\ncore LL_RESERVED_SPACE() and LL_RESERVED_SPACE_EXTRA()\nhelpers.\n\nMore changes might be needed for completeness.\n\nBUG: KCSAN: data-race in ip_tunnel_xmit \/ ip_tunnel_xmit\n\nread to 0xffff88815b9da0ec of 2 bytes by task 888 on cpu 1:\nip_tunnel_xmit+0x1270\/0x1730 net\/ipv4\/ip_tunnel.c:803\n__gre_xmit net\/ipv4\/ip_gre.c:469 [inline]\nipgre_xmit+0x516\/0x570 net\/ipv4\/ip_gre.c:661\n__netdev_start_xmit include\/linux\/netdevice.h:4881 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4895 [inline]\nxmit_one net\/core\/dev.c:3580 [inline]\ndev_hard_start_xmit+0x127\/0x400 net\/core\/dev.c:3596\n__dev_queue_xmit+0x1007\/0x1eb0 net\/core\/dev.c:4246\ndev_queue_xmit include\/linux\/netdevice.h:3051 [inline]\nneigh_direct_output+0x17\/0x20 net\/core\/neighbour.c:1623\nneigh_output include\/net\/neighbour.h:546 [inline]\nip_finish_output2+0x740\/0x840 net\/ipv4\/ip_output.c:228\nip_finish_output+0xf4\/0x240 net\/ipv4\/ip_output.c:316\nNF_HOOK_COND include\/linux\/netfilter.h:291 [inline]\nip_output+0xe5\/0x1b0 net\/ipv4\/ip_output.c:430\ndst_output include\/net\/dst.h:444 [inline]\nip_local_out+0x64\/0x80 net\/ipv4\/ip_output.c:126\niptunnel_xmit+0x34a\/0x4b0 net\/ipv4\/ip_tunnel_core.c:82\nip_tunnel_xmit+0x1451\/0x1730 net\/ipv4\/ip_tunnel.c:813\n__gre_xmit net\/ipv4\/ip_gre.c:469 [inline]\nipgre_xmit+0x516\/0x570 net\/ipv4\/ip_gre.c:661\n__netdev_start_xmit include\/linux\/netdevice.h:4881 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4895 [inline]\nxmit_one net\/core\/dev.c:3580 [inline]\ndev_hard_start_xmit+0x127\/0x400 net\/core\/dev.c:3596\n__dev_queue_xmit+0x1007\/0x1eb0 net\/core\/dev.c:4246\ndev_queue_xmit include\/linux\/netdevice.h:3051 [inline]\nneigh_direct_output+0x17\/0x20 net\/core\/neighbour.c:1623\nneigh_output include\/net\/neighbour.h:546 [inline]\nip_finish_output2+0x740\/0x840 net\/ipv4\/ip_output.c:228\nip_finish_output+0xf4\/0x240 net\/ipv4\/ip_output.c:316\nNF_HOOK_COND include\/linux\/netfilter.h:291 [inline]\nip_output+0xe5\/0x1b0 net\/ipv4\/ip_output.c:430\ndst_output include\/net\/dst.h:444 [inline]\nip_local_out+0x64\/0x80 net\/ipv4\/ip_output.c:126\niptunnel_xmit+0x34a\/0x4b0 net\/ipv4\/ip_tunnel_core.c:82\nip_tunnel_xmit+0x1451\/0x1730 net\/ipv4\/ip_tunnel.c:813\n__gre_xmit net\/ipv4\/ip_gre.c:469 [inline]\nipgre_xmit+0x516\/0x570 net\/ipv4\/ip_gre.c:661\n__netdev_start_xmit include\/linux\/netdevice.h:4881 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4895 [inline]\nxmit_one net\/core\/dev.c:3580 [inline]\ndev_hard_start_xmit+0x127\/0x400 net\/core\/dev.c:3596\n__dev_queue_xmit+0x1007\/0x1eb0 net\/core\/dev.c:4246\ndev_queue_xmit include\/linux\/netdevice.h:3051 [inline]\nneigh_direct_output+0x17\/0x20 net\/core\/neighbour.c:1623\nneigh_output include\/net\/neighbour.h:546 [inline]\nip_finish_output2+0x740\/0x840 net\/ipv4\/ip_output.c:228\nip_finish_output+0xf4\/0x240 net\/ipv4\/ip_output.c:316\nNF_HOOK_COND include\/linux\/netfilter.h:291 [inline]\nip_output+0xe5\/0x1b0 net\/ipv4\/ip_output.c:430\ndst_output include\/net\/dst.h:444 [inline]\nip_local_out+0x64\/0x80 net\/ipv4\/ip_output.c:126\niptunnel_xmit+0x34a\/0x4b0 net\/ipv4\/ip_tunnel_core.c:82\nip_tunnel_xmit+0x1451\/0x1730 net\/ipv4\/ip_tunnel.c:813\n__gre_xmit net\/ipv4\/ip_gre.c:469 [inline]\nipgre_xmit+0x516\/0x570 net\/ipv4\/ip_gre.c:661\n__netdev_start_xmit include\/linux\/netdevice.h:4881 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4895 [inline]\nxmit_one net\/core\/dev.c:3580 [inline]\ndev_hard_start_xmit+0x127\/0x400 net\/core\/dev.c:3596\n__dev_queue_xmit+0x1007\/0x1eb0 net\/core\/dev.c:4246\ndev_queue_xmit include\/linux\/netdevice.h:3051 [inline]\nneigh_direct_output+0x17\/0x20 net\/core\/neighbour.c:1623\nneigh_output include\/net\/neighbour.h:546 [inline]\nip_finish_output2+0x740\/0x840 net\/ipv4\/ip_output.c:228\nip_finish_output+0xf4\/0x240 net\/ipv4\/ip_output.c:316\nNF_HOOK_COND include\/linux\/netfilter.h:291 [inline]\nip_output+0xe5\/0x1b0 net\/i\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b397c06cb987935b1b097336532aa6b4210e091","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51f3bd3765bc5ca4583af07a00833da00d2ace1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5aaab217c8f5387b9c5fff9e940d80f135e04366","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e206f66d824b3b28a7f9ee1366dfc79a937bb46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b86a8702b042ee4e15d2d46375be873a6a8834f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a69b72b57b7d269e833e520ba7500d556e8189b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be59b87ee4aed81db7c10e44f603866a0ac3ca5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0a557fc1daf5c1086e47150a4571aebadbb62be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53110","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:29.930","lastModified":"2025-05-02T16:15:29.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: fix NULL sndbuf_desc in smc_cdc_tx_handler()\n\nWhen performing a stress test on SMC-R by rmmod mlx5_ib driver\nduring the wrk\/nginx test, we found that there is a probability\nof triggering a panic while terminating all link groups.\n\nThis issue dues to the race between smc_smcr_terminate_all()\nand smc_buf_create().\n\n\t\t\tsmc_smcr_terminate_all\n\nsmc_buf_create\n\/* init *\/\nconn->sndbuf_desc = NULL;\n...\n\n\t\t\t__smc_lgr_terminate\n\t\t\t\tsmc_conn_kill\n\t\t\t\t\tsmc_close_abort\n\t\t\t\t\t\tsmc_cdc_get_slot_and_msg_send\n\n\t\t\t__softirqentry_text_start\n\t\t\t\tsmc_wr_tx_process_cqe\n\t\t\t\t\tsmc_cdc_tx_handler\n\t\t\t\t\t\tREAD(conn->sndbuf_desc->len);\n\t\t\t\t\t\t\/* panic dues to NULL sndbuf_desc *\/\n\nconn->sndbuf_desc = xxx;\n\nThis patch tries to fix the issue by always to check the sndbuf_desc\nbefore send any cdc msg, to make sure that no null pointer is\nseen during cqe processing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22a825c541d775c1dbe7b2402786025acad6727b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31817c530768b0199771ec6019571b4f0ddbf230","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c270435db8aa34929263dddae8fd050f5216ecb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ebac7cf0a184a8102821a7a00203f02bebda83c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b108bd9e6be000492ebebe867daa699285978a10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53111","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.027","lastModified":"2025-05-02T16:15:30.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nloop: Fix use-after-free issues\n\ndo_req_filebacked() calls blk_mq_complete_request() synchronously or\nasynchronously when using asynchronous I\/O unless memory allocation fails.\nHence, modify loop_handle_cmd() such that it does not dereference 'cmd' nor\n'rq' after do_req_filebacked() finished unless we are sure that the request\nhas not yet been completed. This patch fixes the following kernel crash:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000054\nCall trace:\n css_put.42938+0x1c\/0x1ac\n loop_process_work+0xc8c\/0xfd4\n loop_rootcg_workfn+0x24\/0x34\n process_one_work+0x244\/0x558\n worker_thread+0x400\/0x8fc\n kthread+0x16c\/0x1e0\n ret_from_fork+0x10\/0x20"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/407badf73ec9fb0d5744bf2ca1745c1818aa222f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6917395c4667cfb607ed8bf1826205a59414657c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b0cb770f5d7b1ff40bea7ca385438ee94570eec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3fda704903f6d1fc351412f1bc6620333959ada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53112","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.140","lastModified":"2025-05-02T16:15:30.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/sseu: fix max_subslices array-index-out-of-bounds access\n\nIt seems that commit bc3c5e0809ae (\"drm\/i915\/sseu: Don't try to store EU\nmask internally in UAPI format\") exposed a potential out-of-bounds\naccess, reported by UBSAN as following on a laptop with a gen 11 i915\ncard:\n\n  UBSAN: array-index-out-of-bounds in drivers\/gpu\/drm\/i915\/gt\/intel_sseu.c:65:27\n  index 6 is out of range for type 'u16 [6]'\n  CPU: 2 PID: 165 Comm: systemd-udevd Not tainted 6.2.0-9-generic #9-Ubuntu\n  Hardware name: Dell Inc. XPS 13 9300\/077Y9N, BIOS 1.11.0 03\/22\/2022\n  Call Trace:\n   <TASK>\n   show_stack+0x4e\/0x61\n   dump_stack_lvl+0x4a\/0x6f\n   dump_stack+0x10\/0x18\n   ubsan_epilogue+0x9\/0x3a\n   __ubsan_handle_out_of_bounds.cold+0x42\/0x47\n   gen11_compute_sseu_info+0x121\/0x130 [i915]\n   intel_sseu_info_init+0x15d\/0x2b0 [i915]\n   intel_gt_init_mmio+0x23\/0x40 [i915]\n   i915_driver_mmio_probe+0x129\/0x400 [i915]\n   ? intel_gt_probe_all+0x91\/0x2e0 [i915]\n   i915_driver_probe+0xe1\/0x3f0 [i915]\n   ? drm_privacy_screen_get+0x16d\/0x190 [drm]\n   ? acpi_dev_found+0x64\/0x80\n   i915_pci_probe+0xac\/0x1b0 [i915]\n   ...\n\nAccording to the definition of sseu_dev_info, eu_mask->hsw is limited to\na maximum of GEN_MAX_SS_PER_HSW_SLICE (6) sub-slices, but\ngen11_sseu_info_init() can potentially set 8 sub-slices, in the\n!IS_JSL_EHL(gt->i915) case.\n\nFix this by reserving up to 8 slots for max_subslices in the eu_mask\nstruct.\n\n(cherry picked from commit 3cba09a6ac86ea1d456909626eb2685596c07822)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/193c41926d152761764894f46e23b53c00186a82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a1682abf7399318ac074b1f2ac6a8c992b5b3da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36b076ab6247cf0d2135b2ad6bb337617c3b5a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53113","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.407","lastModified":"2025-05-02T16:15:30.407","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: fix NULL-ptr deref in offchan check\n\nIf, e.g. in AP mode, the link was already created by userspace\nbut not activated yet, it has a chandef but the chandef isn't\nvalid and has no channel. Check for this and ignore this link."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/201a836c2385fdd2b9d0a8e7737bba5b26f1863a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87e80ea4fbc9ce2f2005905fdbcd38baaa47463a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f624bb6fad23df3270580b4fcef415c6e7bf7705","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53114","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.493","lastModified":"2025-05-02T16:15:30.493","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix kernel crash during reboot when adapter is in recovery mode\n\nIf the driver detects during probe that firmware is in recovery\nmode then i40e_init_recovery_mode() is called and the rest of\nprobe function is skipped including pci_set_drvdata(). Subsequent\ni40e_shutdown() called during shutdown\/reboot dereferences NULL\npointer as pci_get_drvdata() returns NULL.\n\nTo fix call pci_set_drvdata() also during entering to recovery mode.\n\nReproducer:\n1) Lets have i40e NIC with firmware in recovery mode\n2) Run reboot\n\nResult:\n[  139.084698] i40e: Intel(R) Ethernet Connection XL710 Network Driver\n[  139.090959] i40e: Copyright (c) 2013 - 2019 Intel Corporation.\n[  139.108438] i40e 0000:02:00.0: Firmware recovery mode detected. Limiting functionality.\n[  139.116439] i40e 0000:02:00.0: Refer to the Intel(R) Ethernet Adapters and Devices User Guide for details on firmware recovery mode.\n[  139.129499] i40e 0000:02:00.0: fw 8.3.64775 api 1.13 nvm 8.30 0x8000b78d 1.3106.0 [8086:1583] [15d9:084a]\n[  139.215932] i40e 0000:02:00.0 enp2s0f0: renamed from eth0\n[  139.223292] i40e 0000:02:00.1: Firmware recovery mode detected. Limiting functionality.\n[  139.231292] i40e 0000:02:00.1: Refer to the Intel(R) Ethernet Adapters and Devices User Guide for details on firmware recovery mode.\n[  139.244406] i40e 0000:02:00.1: fw 8.3.64775 api 1.13 nvm 8.30 0x8000b78d 1.3106.0 [8086:1583] [15d9:084a]\n[  139.329209] i40e 0000:02:00.1 enp2s0f1: renamed from eth0\n...\n[  156.311376] BUG: kernel NULL pointer dereference, address: 00000000000006c2\n[  156.318330] #PF: supervisor write access in kernel mode\n[  156.323546] #PF: error_code(0x0002) - not-present page\n[  156.328679] PGD 0 P4D 0\n[  156.331210] Oops: 0002 [#1] PREEMPT SMP NOPTI\n[  156.335567] CPU: 26 PID: 15119 Comm: reboot Tainted: G            E      6.2.0+ #1\n[  156.343126] Hardware name: Abacus electric, s.r.o. - servis@abacus.cz Super Server\/H12SSW-iN, BIOS 2.4 04\/13\/2022\n[  156.353369] RIP: 0010:i40e_shutdown+0x15\/0x130 [i40e]\n[  156.358430] Code: c1 fc ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 55 48 89 fd 53 48 8b 9f 48 01 00 00 <f0> 80 8b c2 06 00 00 04 f0 80 8b c0 06 00 00 08 48 8d bb 08 08 00\n[  156.377168] RSP: 0018:ffffb223c8447d90 EFLAGS: 00010282\n[  156.382384] RAX: ffffffffc073ee70 RBX: 0000000000000000 RCX: 0000000000000001\n[  156.389510] RDX: 0000000080000001 RSI: 0000000000000246 RDI: ffff95db49988000\n[  156.396634] RBP: ffff95db49988000 R08: ffffffffffffffff R09: ffffffff8bd17d40\n[  156.403759] R10: 0000000000000001 R11: ffffffff8a5e3d28 R12: ffff95db49988000\n[  156.410882] R13: ffffffff89a6fe17 R14: ffff95db49988150 R15: 0000000000000000\n[  156.418007] FS:  00007fe7c0cc3980(0000) GS:ffff95ea8ee80000(0000) knlGS:0000000000000000\n[  156.426083] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  156.431819] CR2: 00000000000006c2 CR3: 00000003092fc005 CR4: 0000000000770ee0\n[  156.438944] PKRU: 55555554\n[  156.441647] Call Trace:\n[  156.444096]  <TASK>\n[  156.446199]  pci_device_shutdown+0x38\/0x60\n[  156.450297]  device_shutdown+0x163\/0x210\n[  156.454215]  kernel_restart+0x12\/0x70\n[  156.457872]  __do_sys_reboot+0x1ab\/0x230\n[  156.461789]  ? vfs_writev+0xa6\/0x1a0\n[  156.465362]  ? __pfx_file_free_rcu+0x10\/0x10\n[  156.469635]  ? __call_rcu_common.constprop.85+0x109\/0x5a0\n[  156.475034]  do_syscall_64+0x3e\/0x90\n[  156.478611]  entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n[  156.483658] RIP: 0033:0x7fe7bff37ab7"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cbecb1c9085a00155639404f7addbcbfc987ba3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ff82695266576a0b4f1077a7100b2451e476df4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e18f66b704bd725196508c1db93bf7338cdc8de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e4f8a0c495413a50413e8c9f1032ce1bc633bae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3826fb3ea14646b3d4e6309bfc384b349f36eb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c703362a66ea971905b9dc153fc54d1b6ac05423","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53115","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.590","lastModified":"2025-05-02T16:15:30.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix memory leaks in mpi3mr_init_ioc()\n\nDon't allocate memory again when IOC is being reinitialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5aab9342f12f980b64617a034d121efbbf09100a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7277b4eec2f25a0653646ba95b1f25fa16be1d6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c798304470cab88723d895726d17fcb96472e0e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53116","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.680","lastModified":"2025-05-02T16:15:30.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvmet: avoid potential UAF in nvmet_req_complete()\n\nAn nvme target ->queue_response() operation implementation may free the\nrequest passed as argument. Such implementation potentially could result\nin a use after free of the request pointer when percpu_ref_put() is\ncalled in nvmet_req_complete().\n\nAvoid such problem by using a local variable to save the sq pointer\nbefore calling __nvmet_req_complete(), thus avoiding dereferencing the\nreq pointer after that function call."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04c394208831d5e0d5cfee46722eb0f033cd4083","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6173a77b7e9d3e202bdb9897b23f2a8afe7bf286","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ed9813871038b25a934b21ab76b5b7dbf44fc3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6317235da8aa7cb97529ebc8121cc2a4c4c437a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcd535f07c58342302a2cd2bdd8894fe0872c8a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5d99b29012bbf0e86929403209723b2806500c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1d5888a5efe345b63c430b256e95acb0a475642","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fafcb4b26393870c45462f9af6a48e581dbbcf7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53117","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.783","lastModified":"2025-05-02T16:15:30.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs: prevent out-of-bounds array speculation when closing a file descriptor\n\nGoogle-Bug-Id: 114199369"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d5d9501b634fd268eb56428cda92cd317752d69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/609d54441493c99f21c1823dfd66fa7f4c512ff4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6631c8da02cfad96c53b217cf647b511c7f34faf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a759905de9cd6ec9ca08ceadf0920272772ed830","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cec08b7d1ebcd3138d4658b3868ce26aeb1e8e06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eea8e4e056a5ffbeb539a13854c017d5d62c756a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f31cd5da636682caea424fa1c22679016cbfc16b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8cd8754a03a3748384ee438c572423643c9c315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53118","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.880","lastModified":"2025-05-02T16:15:30.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix a procfs host directory removal regression\n\nscsi_proc_hostdir_rm() decreases a reference counter and hence must only be\ncalled once per host that is removed. This change does not require a\nscsi_add_host_with_dma() change since scsi_add_host_with_dma() will return\n0 (success) if scsi_proc_host_add() is called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a764d55e938743efa7c2cba7305633bcf227f09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68c665bb185037e7eb66fb792c61da9d7151e99c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73f030d4ef6d1ad17f824a0a2eb637ef7a9c7d51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e0ae8667fcdd99d1756922e1140cac75f5fa279","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88c3d3bb6469cea929ac68fd326bdcbefcdfdd83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be03df3d4bfe7e8866d4aa43d62e648ffe884f5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53119","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:30.980","lastModified":"2025-05-02T16:15:30.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: pn533: initialize struct pn533_out_arg properly\n\nstruct pn533_out_arg used as a temporary context for out_urb is not\ninitialized properly. Its uninitialized 'phy' field can be dereferenced in\nerror cases inside pn533_out_complete() callback function. It causes the\nfollowing failure:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 PID: 0 Comm: swapper\/1 Not tainted 6.2.0-rc3-next-20230110-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\nRIP: 0010:pn533_out_complete.cold+0x15\/0x44 drivers\/nfc\/pn533\/usb.c:441\nCall Trace:\n <IRQ>\n __usb_hcd_giveback_urb+0x2b6\/0x5c0 drivers\/usb\/core\/hcd.c:1671\n usb_hcd_giveback_urb+0x384\/0x430 drivers\/usb\/core\/hcd.c:1754\n dummy_timer+0x1203\/0x32d0 drivers\/usb\/gadget\/udc\/dummy_hcd.c:1988\n call_timer_fn+0x1da\/0x800 kernel\/time\/timer.c:1700\n expire_timers+0x234\/0x330 kernel\/time\/timer.c:1751\n __run_timers kernel\/time\/timer.c:2022 [inline]\n __run_timers kernel\/time\/timer.c:1995 [inline]\n run_timer_softirq+0x326\/0x910 kernel\/time\/timer.c:2035\n __do_softirq+0x1fb\/0xaf6 kernel\/softirq.c:571\n invoke_softirq kernel\/softirq.c:445 [inline]\n __irq_exit_rcu+0x123\/0x180 kernel\/softirq.c:650\n irq_exit_rcu+0x9\/0x20 kernel\/softirq.c:662\n sysvec_apic_timer_interrupt+0x97\/0xc0 arch\/x86\/kernel\/apic\/apic.c:1107\n\nInitialize the field with the pn533_usb_phy currently used.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f9c1f26d434c32520dfe33326b28c5954bc4299","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2703da78849c47b6b5b4471edb35fc7b7f91dead","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bd1ed6d607d7013ed4959e86990a04f028543ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bee84369b76f6c9ef71938069c65a6ebd1a12f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cbd4213baf7be5d87d183e2032c54003de0790f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/484b7059796e3bc1cb527caa61dfc60da649b4f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c20a07ed26a71a8ccc9c6d935fc181573f5462e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a97ef110c491b72c138111a595a3a3af56cbc94c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53120","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.083","lastModified":"2025-05-02T16:15:31.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix config page DMA memory leak\n\nA fix for:\n\nDMA-API: pci 0000:83:00.0: device driver has pending DMA allocations while released from device [count=1]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5fc4d698ed4b6507be2eb36d040a678adcb89da4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d2b02172b6a2ae6aecd7ef6480b9c4bf3dc59f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dca06ccf13de14e144d34f158f73ae0032f80e63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53121","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.173","lastModified":"2025-05-02T16:15:31.173","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: tcp_make_synack() can be called from process context\n\ntcp_rtx_synack() now could be called in process context as explained in\n0a375c822497 (\"tcp: tcp_rtx_synack() can be called from process\ncontext\").\n\ntcp_rtx_synack() might call tcp_make_synack(), which will touch per-CPU\nvariables with preemption enabled. This causes the following BUG:\n\n    BUG: using __this_cpu_add() in preemptible [00000000] code: ThriftIO1\/5464\n    caller is tcp_make_synack+0x841\/0xac0\n    Call Trace:\n     <TASK>\n     dump_stack_lvl+0x10d\/0x1a0\n     check_preemption_disabled+0x104\/0x110\n     tcp_make_synack+0x841\/0xac0\n     tcp_v6_send_synack+0x5c\/0x450\n     tcp_rtx_synack+0xeb\/0x1f0\n     inet_rtx_syn_ack+0x34\/0x60\n     tcp_check_req+0x3af\/0x9e0\n     tcp_rcv_state_process+0x59b\/0x2030\n     tcp_v6_do_rcv+0x5f5\/0x700\n     release_sock+0x3a\/0xf0\n     tcp_sendmsg+0x33\/0x40\n     ____sys_sendmsg+0x2f2\/0x490\n     __sys_sendmsg+0x184\/0x230\n     do_syscall_64+0x3d\/0x90\n\nAvoid calling __TCP_INC_STATS() with will touch per-cpu variables. Use\nTCP_INC_STATS() which is safe to be called from context switch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/442aa78ed70188b21ccd8669738448702c0a3281","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7613cde8c0c1f02a7ec2e1d536c01b65b135fc1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77ad58bca0119e8cc3e0e9d91a3f22caa66e4dfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9180aa4622a720b433e842b4d3aa34d73eec577a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad07290d63ff6689f50565b02f5b6f34ec15a5ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bced3f7db95ff2e6ca29dc4d1c9751ab5e736a09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d493d4fe88195a144d6a277a90062a7534ed2192","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e23ca307745be3df7fe9762f3e2a7e311a57852e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53122","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.270","lastModified":"2025-05-02T16:15:31.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRISC-V: fix taking the text_mutex twice during sifive errata patching\n\nChris pointed out that some bonehead, *cough* me *cough*, added two\nmutex_locks() to the SiFive errata patching. The second was meant to\nhave been a mutex_unlock().\n\nThis results in errors such as\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000030\nOops [#1]\nModules linked in:\nCPU: 0 PID: 0 Comm: swapper Not tainted\n6.2.0-rc1-starlight-00079-g9493e6f3ce02 #229\nHardware name: BeagleV Starlight Beta (DT)\nepc : __schedule+0x42\/0x500\n ra : schedule+0x46\/0xce\nepc : ffffffff8065957c ra : ffffffff80659a80 sp : ffffffff81203c80\n gp : ffffffff812d50a0 tp : ffffffff8120db40 t0 : ffffffff81203d68\n t1 : 0000000000000001 t2 : 4c45203a76637369 s0 : ffffffff81203cf0\n s1 : ffffffff8120db40 a0 : 0000000000000000 a1 : ffffffff81213958\n a2 : ffffffff81213958 a3 : 0000000000000000 a4 : 0000000000000000\n a5 : ffffffff80a1bd00 a6 : 0000000000000000 a7 : 0000000052464e43\n s2 : ffffffff8120db41 s3 : ffffffff80a1ad00 s4 : 0000000000000000\n s5 : 0000000000000002 s6 : ffffffff81213938 s7 : 0000000000000000\n s8 : 0000000000000000 s9 : 0000000000000001 s10: ffffffff812d7204\n s11: ffffffff80d3c920 t3 : 0000000000000001 t4 : ffffffff812e6dd7\n t5 : ffffffff812e6dd8 t6 : ffffffff81203bb8\nstatus: 0000000200000100 badaddr: 0000000000000030 cause: 000000000000000d\n[<ffffffff80659a80>] schedule+0x46\/0xce\n[<ffffffff80659dce>] schedule_preempt_disabled+0x16\/0x28\n[<ffffffff8065ae0c>] __mutex_lock.constprop.0+0x3fe\/0x652\n[<ffffffff8065b138>] __mutex_lock_slowpath+0xe\/0x16\n[<ffffffff8065b182>] mutex_lock+0x42\/0x4c\n[<ffffffff8000ad94>] sifive_errata_patch_func+0xf6\/0x18c\n[<ffffffff80002b92>] _apply_alternatives+0x74\/0x76\n[<ffffffff80802ee8>] apply_boot_alternatives+0x3c\/0xfa\n[<ffffffff80803cb0>] setup_arch+0x60c\/0x640\n[<ffffffff80800926>] start_kernel+0x8e\/0x99c\n---[ end trace 0000000000000000 ]---\n\n[Palmer: pick up Geert's bug report from the thread]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2feac714c6818f7767cfc21a3c10fa926b7398a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96a1600461957731b6d8ff3563c9f94b315bdaa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf89b7ee52af5a5944fa3539e86089f72475055b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53123","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.360","lastModified":"2025-05-02T16:15:31.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: s390: Fix use-after-free of PCI resources with per-function hotplug\n\nOn s390 PCI functions may be hotplugged individually even when they\nbelong to a multi-function device. In particular on an SR-IOV device VFs\nmay be removed and later re-added.\n\nIn commit a50297cf8235 (\"s390\/pci: separate zbus creation from\nscanning\") it was missed however that struct pci_bus and struct\nzpci_bus's resource list retained a reference to the PCI functions MMIO\nresources even though those resources are released and freed on\nhot-unplug. These stale resources may subsequently be claimed when the\nPCI function re-appears resulting in use-after-free.\n\nOne idea of fixing this use-after-free in s390 specific code that was\ninvestigated was to simply keep resources around from the moment a PCI\nfunction first appeared until the whole virtual PCI bus created for\na multi-function device disappears. The problem with this however is\nthat due to the requirement of artificial MMIO addreesses (address\ncookies) extra logic is then needed to keep the address cookies\ncompatible on re-plug. At the same time the MMIO resources semantically\nbelong to the PCI function so tying their lifecycle to the function\nseems more logical.\n\nInstead a simpler approach is to remove the resources of an individually\nhot-unplugged PCI function from the PCI bus's resource list while\nkeeping the resources of other PCI functions on the PCI bus untouched.\n\nThis is done by introducing pci_bus_remove_resource() to remove an\nindividual resource. Similarly the resource also needs to be removed\nfrom the struct zpci_bus's resource list. It turns out however, that\nthere is really no need to add the MMIO resources to the struct\nzpci_bus's resource list at all and instead we can simply use the\nzpci_bar_struct's resource pointer directly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/437bb839e36cc9f35adc6d2a2bf113b7a0fc9985","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2410d0c3d2d714ed968a135dfcbed6aa3ff7027","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab909509850b27fd39b8ba99e44cda39dbc3858c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b99ebf4b62774e690e73a551cf5fbf6f219bdd96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53124","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.453","lastModified":"2025-05-02T16:15:31.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix NULL pointer access in mpt3sas_transport_port_add()\n\nPort is allocated by sas_port_alloc_num() and rphy is allocated by either\nsas_end_device_alloc() or sas_expander_alloc(), all of which may return\nNULL. So we need to check the rphy to avoid possible NULL pointer access.\n\nIf sas_rphy_add() returned with failure, rphy is set to NULL. We would\naccess the rphy in the following lines which would also result NULL pointer\naccess."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/090305c36185c0547e4441d4c08f1cf096b32134","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f0c2f70d9929208d8427ec72c3ed91e2251e289","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9937f784a608944107dcc2ba9a9c3333f8330b9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a26c775ccc4cfe46f9b718b51bd24313053c7e0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5e5bbb3fa5f8412e96c5eda7f4a4af6241d6bd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3c57724f1569311e4b81e98fad0931028b9bdcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53125","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.547","lastModified":"2025-05-02T16:15:31.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: smsc75xx: Limit packet length to skb->len\n\nPacket length retrieved from skb data may be larger than\nthe actual socket buffer length (up to 9026 bytes). In such\ncase the cloned skb passed up the network stack will leak\nkernel memory contents."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/105db6574281e1e03fcbf87983f4fee111682306","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a4de0a68b18485c68ab4f0cfa665b1633c6d277","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53966d572d056d6b234cfe76a5f9d60049d3c178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ee5df9c039e37b9d8eb5e3de08bfb7f53d31cb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fabdd79051a9fe51388df099aff6e4b660fedd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7bdc137ca163b90917c1eeba4f1937684bd4f8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8b228318935044dafe3a5bc07ee71a1f1424b8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e294f0aa47e4844f3d3c8766c02accd5a76a7d4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53126","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.643","lastModified":"2025-05-02T16:15:31.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix sas_hba.phy memory leak in mpi3mr_remove()\n\nFree mrioc->sas_hba.phy at .remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/480aae2f30637b5140e9c7a9b10298e538df2b5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c60a7c7508645a9f36e4a18a5f548fb79378acd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4caa1a4255cc44be56bcab3db2c97c632e6cc10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53127","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.730","lastModified":"2025-05-02T16:15:31.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix expander node leak in mpi3mr_remove()\n\nAdd a missing resource clean up in .remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0023972a7593720f8878aed06c03ac9e541078be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce756daa36e1ba271bb3334267295e447aa57a5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf9777be5683c5e55680c089df02ee27d2226aa8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53128","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.820","lastModified":"2025-05-02T16:15:31.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix throttle_groups memory leak\n\nAdd a missing kfree()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/574cc10edaa7dba833764efed8c57ee0e6bf7574","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85349a227eb4a56520adc190c666075f80d4ae70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f305a7b6ca21a665e8d0cf70b5936991a298c93c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53129","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.907","lastModified":"2025-05-02T16:15:31.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: Fix deadlock during directory rename\n\nAs lockdep properly warns, we should not be locking i_rwsem while having\ntransactions started as the proper lock ordering used by all directory\nhandling operations is i_rwsem -> transaction start. Fix the lock\nordering by moving the locking of the directory earlier in\next4_rename()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ef7f829214fa8f428d953b49557b89b2b02db66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/352c728653a1179ce7bb37a4c8aa8404d83914a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c92792da8506a295afb6d032b4476e46f979725","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b06c4ae64e3557a19b3bb0b6dbf641bc41fc218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2bc806e95bde8de3a0d675051d9ae78dcf6c691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b113f90204479f55a17295bedf0cc966a60c7a56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53130","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:31.997","lastModified":"2025-05-02T16:15:31.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix wrong mode for blkdev_put() from disk_scan_partitions()\n\nIf disk_scan_partitions() is called with 'FMODE_EXCL',\nblkdev_get_by_dev() will be called without 'FMODE_EXCL', however, follow\nblkdev_put() is still called with 'FMODE_EXCL', which will cause\n'bd_holders' counter to leak.\n\nFix the problem by using the right mode for blkdev_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/428913bce1e67ccb4dae317fd0332545bf8c9233","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d81c6c98d45311a7f3abff4bd5e1eb8e5089972e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5febcfbae9396fb3f064a2a14368c3d77d73ad4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53131","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.087","lastModified":"2025-05-02T16:15:32.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix a server shutdown leak\n\nFix a race where kthread_stop() may prevent the threadfn from ever getting\ncalled.  If that happens the svc_rqst will not be cleaned up."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7a3720361068ab520aed4608bad31ea9a6cc7fe7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ca6705d9d609441d34f8b853e1e4a6369b3b171","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad7e40ee157ba33950a4ccdc284334580da3638d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce7dd61e004002bc1c48d1ca47c887f3f3cc7370","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f74b3286859463cd63cc9d4aeaabd8b0c640182a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53132","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.170","lastModified":"2025-05-02T16:15:32.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix mpi3mr_hba_port memory leak in mpi3mr_remove()\n\nFree mpi3mr_hba_port at .remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6322569273071745f2dd0c541b154b9666ae7767","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0f3c3728da8af76dfe435f7f0cfa2b9d9e43ef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f28bdab9e208792212c52b0c232a13bba84cf048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53133","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.260","lastModified":"2025-05-02T16:15:32.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix an infinite loop error when len is 0 in tcp_bpf_recvmsg_parser()\n\nWhen the buffer length of the recvmsg system call is 0, we got the\nflollowing soft lockup problem:\n\nwatchdog: BUG: soft lockup - CPU#3 stuck for 27s! [a.out:6149]\nCPU: 3 PID: 6149 Comm: a.out Kdump: loaded Not tainted 6.2.0+ #30\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04\/01\/2014\nRIP: 0010:remove_wait_queue+0xb\/0xc0\nCode: 5e 41 5f c3 cc cc cc cc 0f 1f 80 00 00 00 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 41 57 <41> 56 41 55 41 54 55 48 89 fd 53 48 89 f3 4c 8d 6b 18 4c 8d 73 20\nRSP: 0018:ffff88811b5978b8 EFLAGS: 00000246\nRAX: 0000000000000000 RBX: ffff88811a7d3780 RCX: ffffffffb7a4d768\nRDX: dffffc0000000000 RSI: ffff88811b597908 RDI: ffff888115408040\nRBP: 1ffff110236b2f1b R08: 0000000000000000 R09: ffff88811a7d37e7\nR10: ffffed10234fa6fc R11: 0000000000000001 R12: ffff88811179b800\nR13: 0000000000000001 R14: ffff88811a7d38a8 R15: ffff88811a7d37e0\nFS:  00007f6fb5398740(0000) GS:ffff888237180000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000010b6ba002 CR4: 0000000000370ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n tcp_msg_wait_data+0x279\/0x2f0\n tcp_bpf_recvmsg_parser+0x3c6\/0x490\n inet_recvmsg+0x280\/0x290\n sock_recvmsg+0xfc\/0x120\n ____sys_recvmsg+0x160\/0x3d0\n ___sys_recvmsg+0xf0\/0x180\n __sys_recvmsg+0xea\/0x1a0\n do_syscall_64+0x3f\/0x90\n entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\nThe logic in tcp_bpf_recvmsg_parser is as follows:\n\nmsg_bytes_ready:\n\tcopied = sk_msg_recvmsg(sk, psock, msg, len, flags);\n\tif (!copied) {\n\t\twait data;\n\t\tgoto msg_bytes_ready;\n\t}\n\nIn this case, \"copied\" always is 0, the infinite loop occurs.\n\nAccording to the Linux system call man page, 0 should be returned in this\ncase. Therefore, in tcp_bpf_recvmsg_parser(), if the length is 0, directly\nreturn. Also modify several other functions with the same problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4a476285f6d2921c3c9faa494eab83b78f78fc55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf0579989de64d36e177c0611c685dc4a91457a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d900f3d20cc3169ce42ec72acc850e662a4d4db2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f45cf3ae3068e70e2c7f3e24a7f8e8aa99511f03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53134","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.353","lastModified":"2025-05-02T16:15:32.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Avoid order-5 memory allocation for TPA data\n\nThe driver needs to keep track of all the possible concurrent TPA (GRO\/LRO)\ncompletions on the aggregation ring.  On P5 chips, the maximum number\nof concurrent TPA is 256 and the amount of memory we allocate is order-5\non systems using 4K pages.  Memory allocation failure has been reported:\n\nNetworkManager: page allocation failure: order:5, mode:0x40dc0(GFP_KERNEL|__GFP_COMP|__GFP_ZERO), nodemask=(null),cpuset=\/,mems_allowed=0-1\nCPU: 15 PID: 2995 Comm: NetworkManager Kdump: loaded Not tainted 5.10.156 #1\nHardware name: Dell Inc. PowerEdge R660\/0M1CC5, BIOS 0.2.25 08\/12\/2022\nCall Trace:\n dump_stack+0x57\/0x6e\n warn_alloc.cold.120+0x7b\/0xdd\n ? _cond_resched+0x15\/0x30\n ? __alloc_pages_direct_compact+0x15f\/0x170\n __alloc_pages_slowpath.constprop.108+0xc58\/0xc70\n __alloc_pages_nodemask+0x2d0\/0x300\n kmalloc_order+0x24\/0xe0\n kmalloc_order_trace+0x19\/0x80\n bnxt_alloc_mem+0x1150\/0x15c0 [bnxt_en]\n ? bnxt_get_func_stat_ctxs+0x13\/0x60 [bnxt_en]\n __bnxt_open_nic+0x12e\/0x780 [bnxt_en]\n bnxt_open+0x10b\/0x240 [bnxt_en]\n __dev_open+0xe9\/0x180\n __dev_change_flags+0x1af\/0x220\n dev_change_flags+0x21\/0x60\n do_setlink+0x35c\/0x1100\n\nInstead of allocating this big chunk of memory and dividing it up for the\nconcurrent TPA instances, allocate each small chunk separately for each\nTPA instance.  This will reduce it to order-0 allocations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16f3aae1aa2dd89bc8d073a67f190af580386ae9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20fd0607acbf9770db9b99e3418dd75614f80b6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/accd7e23693aaaa9aa0d3e9eca0ae77d1be80ab3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad529d1fae1565d38f929479d4ea8aea90054bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d16701a385b54f44bf41ff1d7485e7a11080deb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcae40e65802547def39b4deaa2ae38a29864d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53135","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.447","lastModified":"2025-05-02T16:15:32.447","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Use READ_ONCE_NOCHECK in imprecise unwinding stack mode\n\nWhen CONFIG_FRAME_POINTER is unset, the stack unwinding function\nwalk_stackframe randomly reads the stack and then, when KASAN is enabled,\nit can lead to the following backtrace:\n\n[    0.000000] ==================================================================\n[    0.000000] BUG: KASAN: stack-out-of-bounds in walk_stackframe+0xa6\/0x11a\n[    0.000000] Read of size 8 at addr ffffffff81807c40 by task swapper\/0\n[    0.000000]\n[    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 6.2.0-12919-g24203e6db61f #43\n[    0.000000] Hardware name: riscv-virtio,qemu (DT)\n[    0.000000] Call Trace:\n[    0.000000] [<ffffffff80007ba8>] walk_stackframe+0x0\/0x11a\n[    0.000000] [<ffffffff80099ecc>] init_param_lock+0x26\/0x2a\n[    0.000000] [<ffffffff80007c4a>] walk_stackframe+0xa2\/0x11a\n[    0.000000] [<ffffffff80c49c80>] dump_stack_lvl+0x22\/0x36\n[    0.000000] [<ffffffff80c3783e>] print_report+0x198\/0x4a8\n[    0.000000] [<ffffffff80099ecc>] init_param_lock+0x26\/0x2a\n[    0.000000] [<ffffffff80007c4a>] walk_stackframe+0xa2\/0x11a\n[    0.000000] [<ffffffff8015f68a>] kasan_report+0x9a\/0xc8\n[    0.000000] [<ffffffff80007c4a>] walk_stackframe+0xa2\/0x11a\n[    0.000000] [<ffffffff80007c4a>] walk_stackframe+0xa2\/0x11a\n[    0.000000] [<ffffffff8006e99c>] desc_make_final+0x80\/0x84\n[    0.000000] [<ffffffff8009a04e>] stack_trace_save+0x88\/0xa6\n[    0.000000] [<ffffffff80099fc2>] filter_irq_stacks+0x72\/0x76\n[    0.000000] [<ffffffff8006b95e>] devkmsg_read+0x32a\/0x32e\n[    0.000000] [<ffffffff8015ec16>] kasan_save_stack+0x28\/0x52\n[    0.000000] [<ffffffff8006e998>] desc_make_final+0x7c\/0x84\n[    0.000000] [<ffffffff8009a04a>] stack_trace_save+0x84\/0xa6\n[    0.000000] [<ffffffff8015ec52>] kasan_set_track+0x12\/0x20\n[    0.000000] [<ffffffff8015f22e>] __kasan_slab_alloc+0x58\/0x5e\n[    0.000000] [<ffffffff8015e7ea>] __kmem_cache_create+0x21e\/0x39a\n[    0.000000] [<ffffffff80e133ac>] create_boot_cache+0x70\/0x9c\n[    0.000000] [<ffffffff80e17ab2>] kmem_cache_init+0x6c\/0x11e\n[    0.000000] [<ffffffff80e00fd6>] mm_init+0xd8\/0xfe\n[    0.000000] [<ffffffff80e011d8>] start_kernel+0x190\/0x3ca\n[    0.000000]\n[    0.000000] The buggy address belongs to stack of task swapper\/0\n[    0.000000]  and is located at offset 0 in frame:\n[    0.000000]  stack_trace_save+0x0\/0xa6\n[    0.000000]\n[    0.000000] This frame has 1 object:\n[    0.000000]  [32, 56) 'c'\n[    0.000000]\n[    0.000000] The buggy address belongs to the physical page:\n[    0.000000] page:(____ptrval____) refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x81a07\n[    0.000000] flags: 0x1000(reserved|zone=0)\n[    0.000000] raw: 0000000000001000 ff600003f1e3d150 ff600003f1e3d150 0000000000000000\n[    0.000000] raw: 0000000000000000 0000000000000000 00000001ffffffff\n[    0.000000] page dumped because: kasan: bad access detected\n[    0.000000]\n[    0.000000] Memory state around the buggy address:\n[    0.000000]  ffffffff81807b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    0.000000]  ffffffff81807b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    0.000000] >ffffffff81807c00: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 f3\n[    0.000000]                                            ^\n[    0.000000]  ffffffff81807c80: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n[    0.000000]  ffffffff81807d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[    0.000000] ==================================================================\n\nFix that by using READ_ONCE_NOCHECK when reading the stack in imprecise\nmode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17fa90ffba20743c946920fbb0afe160d0ead8c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/324912d6c0c4006711054d389faa2239c1655e1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a9418d2c93c1c86ce4d0595112d91c7a8e70c2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3de277af481ab931fab9e295ad8762692920732a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76950340cf03b149412fe0d5f0810e52ac1df8cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a99a61d9e1bfca2fc37d223a6a185c0eb66aba02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53136","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.540","lastModified":"2025-05-02T16:15:32.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: fix struct pid leaks in OOB support\n\nsyzbot reported struct pid leak [1].\n\nIssue is that queue_oob() calls maybe_add_creds() which potentially\nholds a reference on a pid.\n\nBut skb->destructor is not set (either directly or by calling\nunix_scm_to_skb())\n\nThis means that subsequent kfree_skb() or consume_skb() would leak\nthis reference.\n\nIn this fix, I chose to fully support scm even for the OOB message.\n\n[1]\nBUG: memory leak\nunreferenced object 0xffff8881053e7f80 (size 128):\ncomm \"syz-executor242\", pid 5066, jiffies 4294946079 (age 13.220s)\nhex dump (first 32 bytes):\n01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\nbacktrace:\n[<ffffffff812ae26a>] alloc_pid+0x6a\/0x560 kernel\/pid.c:180\n[<ffffffff812718df>] copy_process+0x169f\/0x26c0 kernel\/fork.c:2285\n[<ffffffff81272b37>] kernel_clone+0xf7\/0x610 kernel\/fork.c:2684\n[<ffffffff812730cc>] __do_sys_clone+0x7c\/0xb0 kernel\/fork.c:2825\n[<ffffffff849ad699>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n[<ffffffff849ad699>] do_syscall_64+0x39\/0xb0 arch\/x86\/entry\/common.c:80\n[<ffffffff84a0008b>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2aab4b96900272885bc157f8b236abf1cdc02e08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a59d6306263c38e5c0592ea4451ca26a0778c947","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac1968ac399205fda9ee3b18f7de7416cb3a5d0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3969427fb06a2c3cd6efd7faab63505cfa76e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53137","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.633","lastModified":"2025-05-02T16:15:32.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: Fix possible corruption when moving a directory\n\nWhen we are renaming a directory to a different directory, we need to\nupdate '..' entry in the moved directory. However nothing prevents moved\ndirectory from being modified and even converted from the inline format\nto the normal format. When such race happens the rename code gets\nconfused and we crash. Fix the problem by locking the moved directory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0813299c586b175d7edb25f56412c54b812d0379","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c440f14558bfacd22c6935ae1fd4b2a09e96b5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/291cd19d107e197306869cb3237c1bba62d13182","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dac5a63cf79707b547ea3d425fead5f4482198f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0bb13612292ca90fa4c2a7e425375649bc50d3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c50fc503ee1b97f12c98e26afc39fdaebebcf04f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53138","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.720","lastModified":"2025-05-02T16:15:32.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: caif: Fix use-after-free in cfusbl_device_notify()\n\nsyzbot reported use-after-free in cfusbl_device_notify() [1].  This\ncauses a stack trace like below:\n\nBUG: KASAN: use-after-free in cfusbl_device_notify+0x7c9\/0x870 net\/caif\/caif_usb.c:138\nRead of size 8 at addr ffff88807ac4e6f0 by task kworker\/u4:6\/1214\n\nCPU: 0 PID: 1214 Comm: kworker\/u4:6 Not tainted 5.19.0-rc3-syzkaller-00146-g92f20ff72066 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nWorkqueue: netns cleanup_net\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n print_address_description.constprop.0.cold+0xeb\/0x467 mm\/kasan\/report.c:313\n print_report mm\/kasan\/report.c:429 [inline]\n kasan_report.cold+0xf4\/0x1c6 mm\/kasan\/report.c:491\n cfusbl_device_notify+0x7c9\/0x870 net\/caif\/caif_usb.c:138\n notifier_call_chain+0xb5\/0x200 kernel\/notifier.c:87\n call_netdevice_notifiers_info+0xb5\/0x130 net\/core\/dev.c:1945\n call_netdevice_notifiers_extack net\/core\/dev.c:1983 [inline]\n call_netdevice_notifiers net\/core\/dev.c:1997 [inline]\n netdev_wait_allrefs_any net\/core\/dev.c:10227 [inline]\n netdev_run_todo+0xbc0\/0x10f0 net\/core\/dev.c:10341\n default_device_exit_batch+0x44e\/0x590 net\/core\/dev.c:11334\n ops_exit_list+0x125\/0x170 net\/core\/net_namespace.c:167\n cleanup_net+0x4ea\/0xb00 net\/core\/net_namespace.c:594\n process_one_work+0x996\/0x1610 kernel\/workqueue.c:2289\n worker_thread+0x665\/0x1080 kernel\/workqueue.c:2436\n kthread+0x2e9\/0x3a0 kernel\/kthread.c:376\n ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:302\n <\/TASK>\n\nWhen unregistering a net device, unregister_netdevice_many_notify()\nsets the device's reg_state to NETREG_UNREGISTERING, calls notifiers\nwith NETDEV_UNREGISTER, and adds the device to the todo list.\n\nLater on, devices in the todo list are processed by netdev_run_todo().\nnetdev_run_todo() waits devices' reference count become 1 while\nrebdoadcasting NETDEV_UNREGISTER notification.\n\nWhen cfusbl_device_notify() is called with NETDEV_UNREGISTER multiple\ntimes, the parent device might be freed.  This could cause UAF.\nProcessing NETDEV_UNREGISTER multiple times also causes inbalance of\nreference count for the module.\n\nThis patch fixes the issue by accepting only first NETDEV_UNREGISTER\nnotification."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1793da97a23e31c5bf06631f3f3e5a25f368fd64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/287027d8a567168a5d8ce5cb0cba16a34791a48c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f14457e1584224f4296af613bbd99deb60b5d91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a45c3cf0e2242a533657f4f535d9b6a7447a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9781e98a97110f5e76999058368b4be76a788484","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9dc16be373b382ddd4c274052a6e870a95e76c01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3aaec463a632cf4187dc017e421bfa69d7834a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1a11bbdbb5ea9f172019c5a4a3e9d8eabd72179","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53139","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.817","lastModified":"2025-05-02T16:15:32.817","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: fdp: add null check of devm_kmalloc_array in fdp_nci_i2c_read_device_properties\n\ndevm_kmalloc_array may fails, *fw_vsc_cfg might be null and cause\nout-of-bounds write in device_property_read_u8_array later."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a3664a1058d4b2b1ea2112cc275ca47fba7fc08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/11f180a5d62a51b484e9648f9b310e1bd50b1a57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27824b2f98818215adc9661e563252c48dab1a13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4357bbb921fe9e81d0fd9f70d669d1f177d8380e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80be62358fa5507cefbaa067c7e6648401f2c3da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98f49e693e02c1dafd5786be3468657840dd6f06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad11b872bc9b5d27e56183c6b01f9218c85395d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce93f1afc05941a572f5a69e2ed4012af905a693","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53140","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:32.920","lastModified":"2025-05-02T16:15:32.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Remove the \/proc\/scsi\/${proc_name} directory earlier\n\nRemove the \/proc\/scsi\/${proc_name} directory earlier to fix a race\ncondition between unloading and reloading kernel modules. This fixes a bug\nintroduced in 2009 by commit 77c019768f06 (\"[SCSI] fix \/proc memory leak in\nthe SCSI core\").\n\nFix the following kernel warning:\n\nproc_dir_entry 'scsi\/scsi_debug' already registered\nWARNING: CPU: 19 PID: 27986 at fs\/proc\/generic.c:376 proc_register+0x27d\/0x2e0\nCall Trace:\n proc_mkdir+0xb5\/0xe0\n scsi_proc_hostdir_add+0xb5\/0x170\n scsi_host_alloc+0x683\/0x6c0\n sdebug_driver_probe+0x6b\/0x2d0 [scsi_debug]\n really_probe+0x159\/0x540\n __driver_probe_device+0xdc\/0x230\n driver_probe_device+0x4f\/0x120\n __device_attach_driver+0xef\/0x180\n bus_for_each_drv+0xe5\/0x130\n __device_attach+0x127\/0x290\n device_initial_probe+0x17\/0x20\n bus_probe_device+0x110\/0x130\n device_add+0x673\/0xc80\n device_register+0x1e\/0x30\n sdebug_add_host_helper+0x1a7\/0x3b0 [scsi_debug]\n scsi_debug_init+0x64f\/0x1000 [scsi_debug]\n do_one_initcall+0xd7\/0x470\n do_init_module+0xe7\/0x330\n load_module+0x122a\/0x12c0\n __do_sys_finit_module+0x124\/0x1a0\n __x64_sys_finit_module+0x46\/0x50\n do_syscall_64+0x38\/0x80\n entry_SYSCALL_64_after_hwframe+0x46\/0xb0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13daafe1e209b03e9bda16ff2bd2b2da145a139b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17e98a5ede81b7696bec421f7afa2dfe467f5e6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ec363599f8346d5a8d08c71a0d9860d6c420ec0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b223e32d66ca9db1f252f433514783d8b22a8e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/891a3cba425cf483d96facca55aebd6ff1da4338","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e471e928de97b00f297ad1015cc14f9459765713","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc663711b94468f4e1427ebe289c9f05669699c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53141","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:33.023","lastModified":"2025-05-02T16:15:33.023","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nila: do not generate empty messages in ila_xlat_nl_cmd_get_mapping()\n\nila_xlat_nl_cmd_get_mapping() generates an empty skb,\ntriggerring a recent sanity check [1].\n\nInstead, return an error code, so that user space\ncan get it.\n\n[1]\nskb_assert_len\nWARNING: CPU: 0 PID: 5923 at include\/linux\/skbuff.h:2527 skb_assert_len include\/linux\/skbuff.h:2527 [inline]\nWARNING: CPU: 0 PID: 5923 at include\/linux\/skbuff.h:2527 __dev_queue_xmit+0x1bc0\/0x3488 net\/core\/dev.c:4156\nModules linked in:\nCPU: 0 PID: 5923 Comm: syz-executor269 Not tainted 6.2.0-syzkaller-18300-g2ebd1fbb946d #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/21\/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : skb_assert_len include\/linux\/skbuff.h:2527 [inline]\npc : __dev_queue_xmit+0x1bc0\/0x3488 net\/core\/dev.c:4156\nlr : skb_assert_len include\/linux\/skbuff.h:2527 [inline]\nlr : __dev_queue_xmit+0x1bc0\/0x3488 net\/core\/dev.c:4156\nsp : ffff80001e0d6c40\nx29: ffff80001e0d6e60 x28: dfff800000000000 x27: ffff0000c86328c0\nx26: dfff800000000000 x25: ffff0000c8632990 x24: ffff0000c8632a00\nx23: 0000000000000000 x22: 1fffe000190c6542 x21: ffff0000c8632a10\nx20: ffff0000c8632a00 x19: ffff80001856e000 x18: ffff80001e0d5fc0\nx17: 0000000000000000 x16: ffff80001235d16c x15: 0000000000000000\nx14: 0000000000000000 x13: 0000000000000001 x12: 0000000000000001\nx11: ff80800008353a30 x10: 0000000000000000 x9 : 21567eaf25bfb600\nx8 : 21567eaf25bfb600 x7 : 0000000000000001 x6 : 0000000000000001\nx5 : ffff80001e0d6558 x4 : ffff800015c74760 x3 : ffff800008596744\nx2 : 0000000000000001 x1 : 0000000100000000 x0 : 000000000000000e\nCall trace:\nskb_assert_len include\/linux\/skbuff.h:2527 [inline]\n__dev_queue_xmit+0x1bc0\/0x3488 net\/core\/dev.c:4156\ndev_queue_xmit include\/linux\/netdevice.h:3033 [inline]\n__netlink_deliver_tap_skb net\/netlink\/af_netlink.c:307 [inline]\n__netlink_deliver_tap+0x45c\/0x6f8 net\/netlink\/af_netlink.c:325\nnetlink_deliver_tap+0xf4\/0x174 net\/netlink\/af_netlink.c:338\n__netlink_sendskb net\/netlink\/af_netlink.c:1283 [inline]\nnetlink_sendskb+0x6c\/0x154 net\/netlink\/af_netlink.c:1292\nnetlink_unicast+0x334\/0x8d4 net\/netlink\/af_netlink.c:1380\nnlmsg_unicast include\/net\/netlink.h:1099 [inline]\ngenlmsg_unicast include\/net\/genetlink.h:433 [inline]\ngenlmsg_reply include\/net\/genetlink.h:443 [inline]\nila_xlat_nl_cmd_get_mapping+0x620\/0x7d0 net\/ipv6\/ila\/ila_xlat.c:493\ngenl_family_rcv_msg_doit net\/netlink\/genetlink.c:968 [inline]\ngenl_family_rcv_msg net\/netlink\/genetlink.c:1048 [inline]\ngenl_rcv_msg+0x938\/0xc1c net\/netlink\/genetlink.c:1065\nnetlink_rcv_skb+0x214\/0x3c4 net\/netlink\/af_netlink.c:2574\ngenl_rcv+0x38\/0x50 net\/netlink\/genetlink.c:1076\nnetlink_unicast_kernel net\/netlink\/af_netlink.c:1339 [inline]\nnetlink_unicast+0x660\/0x8d4 net\/netlink\/af_netlink.c:1365\nnetlink_sendmsg+0x800\/0xae0 net\/netlink\/af_netlink.c:1942\nsock_sendmsg_nosec net\/socket.c:714 [inline]\nsock_sendmsg net\/socket.c:734 [inline]\n____sys_sendmsg+0x558\/0x844 net\/socket.c:2479\n___sys_sendmsg net\/socket.c:2533 [inline]\n__sys_sendmsg+0x26c\/0x33c net\/socket.c:2562\n__do_sys_sendmsg net\/socket.c:2571 [inline]\n__se_sys_sendmsg net\/socket.c:2569 [inline]\n__arm64_sys_sendmsg+0x80\/0x94 net\/socket.c:2569\n__invoke_syscall arch\/arm64\/kernel\/syscall.c:38 [inline]\ninvoke_syscall+0x98\/0x2c0 arch\/arm64\/kernel\/syscall.c:52\nel0_svc_common+0x138\/0x258 arch\/arm64\/kernel\/syscall.c:142\ndo_el0_svc+0x64\/0x198 arch\/arm64\/kernel\/syscall.c:193\nel0_svc+0x58\/0x168 arch\/arm64\/kernel\/entry-common.c:637\nel0t_64_sync_handler+0x84\/0xf0 arch\/arm64\/kernel\/entry-common.c:655\nel0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:591\nirq event stamp: 136484\nhardirqs last enabled at (136483): [<ffff800008350244>] __up_console_sem+0x60\/0xb4 kernel\/printk\/printk.c:345\nhardirqs last disabled at (136484): [<ffff800012358d60>] el1_dbg+0x24\/0x80 arch\/arm64\/kernel\/entry-common.c:405\nsoftirqs last enabled at (136418): [<ffff800008020ea8>] softirq_ha\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25b54f247ea060aeb85ec88a82c75060fca03521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42d9ed4e5dc5f87fbd67c232e2e4a9b88ceeb47f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60fe7cb483c8c5dcadaeeac867251d6e59c7badc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/693aa2c0d9b6d5b1f2745d31b6e70d09dbbaf06e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/783f218940b3c7b872e4111d0145000f26ecbdf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91aceb3844d4aec555c7f423f9fd843eff5835e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26bc5861505f04dea933ca3e522772b20fa086f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c631e52aea0fc8d4deea06e439f5810a8b40ad0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53142","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:33.137","lastModified":"2025-05-02T16:15:33.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: copy last block omitted in ice_get_module_eeprom()\n\nice_get_module_eeprom() is broken since commit e9c9692c8a81 (\"ice:\nReimplement module reads used by ethtool\") In this refactor,\nice_get_module_eeprom() reads the eeprom in blocks of size 8.\nBut the condition that should protect the buffer overflow\nignores the last block. The last block always contains zeros.\n\nBug uncovered by ethtool upstream commit 9538f384b535\n(\"netlink: eeprom: Defer page requests to individual parsers\")\nAfter this commit, ethtool reads a block with length = 1;\nto read the SFF-8024 identifier value.\n\nunpatched driver:\n$ ethtool -m enp65s0f0np0 offset 0x90 length 8\nOffset          Values\n------          ------\n0x0090:         00 00 00 00 00 00 00 00\n$ ethtool -m enp65s0f0np0 offset 0x90 length 12\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c 00 00 00 00\n$\n\n$ ethtool -m enp65s0f0np0\nOffset          Values\n------          ------\n0x0000:         11 06 06 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0010:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0020:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0030:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0040:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0050:         00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n0x0060:         00 00 00 00 00 00 00 00 00 00 00 00 00 01 08 00\n0x0070:         00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\npatched driver:\n$ ethtool -m enp65s0f0np0 offset 0x90 length 8\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c\n$ ethtool -m enp65s0f0np0 offset 0x90 length 12\nOffset          Values\n------          ------\n0x0090:         00 00 01 a0 4d 65 6c 6c 61 6e 6f 78\n$ ethtool -m enp65s0f0np0\n    Identifier                                : 0x11 (QSFP28)\n    Extended identifier                       : 0x00\n    Extended identifier description           : 1.5W max. Power consumption\n    Extended identifier description           : No CDR in TX, No CDR in RX\n    Extended identifier description           : High Power Class (> 3.5 W) not enabled\n    Connector                                 : 0x23 (No separable connector)\n    Transceiver codes                         : 0x88 0x00 0x00 0x00 0x00 0x00 0x00 0x00\n    Transceiver type                          : 40G Ethernet: 40G Base-CR4\n    Transceiver type                          : 25G Ethernet: 25G Base-CR CA-N\n    Encoding                                  : 0x05 (64B\/66B)\n    BR, Nominal                               : 25500Mbps\n    Rate identifier                           : 0x00\n    Length (SMF,km)                           : 0km\n    Length (OM3 50um)                         : 0m\n    Length (OM2 50um)                         : 0m\n    Length (OM1 62.5um)                       : 0m\n    Length (Copper or Active cable)           : 1m\n    Transmitter technology                    : 0xa0 (Copper cable unequalized)\n    Attenuation at 2.5GHz                     : 4db\n    Attenuation at 5.0GHz                     : 5db\n    Attenuation at 7.0GHz                     : 7db\n    Attenuation at 12.9GHz                    : 10db\n    ........\n    ...."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84cba1840e68430325ac133a11be06bfb2f7acd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cfbdda65588e75bfbd93e5ee847efcb4796ad09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b40ab29298db3a4879c1d3c4e685184386bce6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c813f7a3161481483ae2077651b21bc217c419e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53143","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:33.240","lastModified":"2025-05-02T16:15:33.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix another off-by-one fsmap error on 1k block filesystems\n\nApparently syzbot figured out that issuing this FSMAP call:\n\nstruct fsmap_head cmd = {\n\t.fmh_count\t= ...;\n\t.fmh_keys\t= {\n\t\t{ .fmr_device = \/* ext4 dev *\/, .fmr_physical = 0, },\n\t\t{ .fmr_device = \/* ext4 dev *\/, .fmr_physical = 0, },\n\t},\n...\n};\nret = ioctl(fd, FS_IOC_GETFSMAP, &cmd);\n\nProduces this crash if the underlying filesystem is a 1k-block ext4\nfilesystem:\n\nkernel BUG at fs\/ext4\/ext4.h:3331!\ninvalid opcode: 0000 [#1] PREEMPT SMP\nCPU: 3 PID: 3227965 Comm: xfs_io Tainted: G        W  O       6.2.0-rc8-achx\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04\/01\/2014\nRIP: 0010:ext4_mb_load_buddy_gfp+0x47c\/0x570 [ext4]\nRSP: 0018:ffffc90007c03998 EFLAGS: 00010246\nRAX: ffff888004978000 RBX: ffffc90007c03a20 RCX: ffff888041618000\nRDX: 0000000000000000 RSI: 00000000000005a4 RDI: ffffffffa0c99b11\nRBP: ffff888012330000 R08: ffffffffa0c2b7d0 R09: 0000000000000400\nR10: ffffc90007c03950 R11: 0000000000000000 R12: 0000000000000001\nR13: 00000000ffffffff R14: 0000000000000c40 R15: ffff88802678c398\nFS:  00007fdf2020c880(0000) GS:ffff88807e100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffd318a5fe8 CR3: 000000007f80f001 CR4: 00000000001706e0\nCall Trace:\n <TASK>\n ext4_mballoc_query_range+0x4b\/0x210 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_getfsmap_datadev+0x713\/0x890 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_getfsmap+0x2b7\/0x330 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n ext4_ioc_getfsmap+0x153\/0x2b0 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n __ext4_ioctl+0x2a7\/0x17e0 [ext4 dfa189daddffe8fecd3cdfd00564e0f265a8ab80]\n __x64_sys_ioctl+0x82\/0xa0\n do_syscall_64+0x2b\/0x80\n entry_SYSCALL_64_after_hwframe+0x46\/0xb0\nRIP: 0033:0x7fdf20558aff\nRSP: 002b:00007ffd318a9e30 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00000000000200c0 RCX: 00007fdf20558aff\nRDX: 00007fdf1feb2010 RSI: 00000000c0c0583b RDI: 0000000000000003\nRBP: 00005625c0634be0 R08: 00005625c0634c40 R09: 0000000000000001\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fdf1feb2010\nR13: 00005625be70d994 R14: 0000000000000800 R15: 0000000000000000\n\nFor GETFSMAP calls, the caller selects a physical block device by\nwriting its block number into fsmap_head.fmh_keys[01].fmr_device.\nTo query mappings for a subrange of the device, the starting byte of the\nrange is written to fsmap_head.fmh_keys[0].fmr_physical and the last\nbyte of the range goes in fsmap_head.fmh_keys[1].fmr_physical.\n\nIOWs, to query what mappings overlap with bytes 3-14 of \/dev\/sda, you'd\nset the inputs as follows:\n\n\tfmh_keys[0] = { .fmr_device = major(8, 0), .fmr_physical = 3},\n\tfmh_keys[1] = { .fmr_device = major(8, 0), .fmr_physical = 14},\n\nWhich would return you whatever is mapped in the 12 bytes starting at\nphysical offset 3.\n\nThe crash is due to insufficient range validation of keys[1] in\next4_getfsmap_datadev.  On 1k-block filesystems, block 0 is not part of\nthe filesystem, which means that s_first_data_block is nonzero.\next4_get_group_no_and_offset subtracts this quantity from the blocknr\nargument before cracking it into a group number and a block number\nwithin a group.  IOWs, block group 0 spans blocks 1-8192 (1-based)\ninstead of 0-8191 (0-based) like what happens with larger blocksizes.\n\nThe net result of this encoding is that blocknr < s_first_data_block is\nnot a valid input to this function.  The end_fsb variable is set from\nthe keys that are copied from userspace, which means that in the above\nexample, its value is zero.  That leads to an underflow here:\n\n\tblocknr = blocknr - le32_to_cpu(es->s_first_data_block);\n\nThe division then operates on -1:\n\n\toffset = do_div(blocknr, EXT4_BLOCKS_PER_GROUP(sb)) >>\n\t\tEXT4_SB(sb)->s_cluster_bits;\n\nLeaving an impossibly large group number (2^32-1) in blocknr.\next4_getfsmap_check_keys checked that keys[0\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15ebade3266b300da9cd1edce4004fe8fd6a2b88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d2366624b4c19a2ba6baf67fe57f4a1b0f67c05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a70b49dc7eee5dbe3775a650ce598e3557ff5475","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c24f838493792b5e78a3596b4ca96375aa0af4c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5d7c31e17224d847a330180ec1b03bf390632b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c993799baf9c5861f8df91beb80e1611b12efcbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb3a695aa71a514f2e7f5778e05faba3733b70a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f16054ac1774915160ca4e1c73ff7a269465a1b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-53144","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-05-02T16:15:33.357","lastModified":"2025-05-02T16:15:33.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix wrong kunmap when using LZMA on HIGHMEM platforms\n\nAs the call trace shown, the root cause is kunmap incorrect pages:\n\n BUG: kernel NULL pointer dereference, address: 00000000\n CPU: 1 PID: 40 Comm: kworker\/u5:0 Not tainted 6.2.0-rc5 #4\n Workqueue: erofs_worker z_erofs_decompressqueue_work\n EIP: z_erofs_lzma_decompress+0x34b\/0x8ac\n  z_erofs_decompress+0x12\/0x14\n  z_erofs_decompress_queue+0x7e7\/0xb1c\n  z_erofs_decompressqueue_work+0x32\/0x60\n  process_one_work+0x24b\/0x4d8\n  ? process_one_work+0x1a4\/0x4d8\n  worker_thread+0x14c\/0x3fc\n  kthread+0xe6\/0x10c\n  ? rescuer_thread+0x358\/0x358\n  ? kthread_complete_and_exit+0x18\/0x18\n  ret_from_fork+0x1c\/0x28\n ---[ end trace 0000000000000000 ]---\n\nThe bug is trivial and should be fixed now.  It has no impact on\n!HIGHMEM platforms."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28aea8ae6cf212a5bf3ed962b27921e2029ad754","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f121dfb15f7b4ab345992ce96003eb63fd608f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa4056781ac067b5946c6811459e1a36842047fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-4210","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T16:15:36.743","lastModified":"2025-05-02T16:15:36.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Casdoor up to 1.811.0. This vulnerability affects the function HandleScim of the file controllers\/scim.go of the component SCIM User Creation Endpoint. The manipulation leads to authorization bypass. The attack can be initiated remotely. Upgrading to version 1.812.0 is able to address this issue. The name of the patch is 3d12ac8dc2282369296c3386815c00a06c6a92fe. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-285"},{"lang":"en","value":"CWE-639"}]}],"references":[{"url":"https:\/\/github.com\/casdoor\/casdoor\/commit\/3d12ac8dc2282369296c3386815c00a06c6a92fe","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/casdoor\/casdoor\/releases\/tag\/v1.812.0","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.307180","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.307180","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.556201","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2025-3879","sourceIdentifier":"security@hashicorp.com","published":"2025-05-02T17:15:51.273","lastModified":"2025-05-02T17:15:51.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vault Community, Vault Enterprise (“Vault”) Azure Auth method did not correctly validate the claims in the Azure-issued token, resulting in the potential bypass of the bound_locations parameter on login. Fixed in Vault Community Edition 1.19.1 and Vault Enterprise 1.19.1, 1.18.7, 1.17.14, 1.16.18."}],"metrics":{"cvssMetricV31":[{"source":"security@hashicorp.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":6.6,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.7,"impactScore":5.9}]},"weaknesses":[{"source":"security@hashicorp.com","type":"Secondary","description":[{"lang":"en","value":"CWE-863"}]}],"references":[{"url":"https:\/\/discuss.hashicorp.com\/t\/hcsec-2025-07-vault-s-azure-authentication-method-bound-location-restriction-could-be-bypassed-on-login\/74716","source":"security@hashicorp.com"}]}},{"cve":{"id":"CVE-2025-45800","sourceIdentifier":"cve@mitre.org","published":"2025-05-02T17:15:52.423","lastModified":"2025-05-02T17:15:52.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"TOTOLINK A950RG V4.1.2cu.5204_B20210112 contains a command execution vulnerability in the setDeviceName interface of the \/lib\/cste_modules\/global.so library, specifically in the processing of the deviceMac parameter."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/SunnyYANGyaya\/cuicuishark-sheep-fishIOT\/blob\/main\/ToTolink\/A950RG\/5024-setDeviceName-deviceMac-command.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-46332","sourceIdentifier":"security-advisories@github.com","published":"2025-05-02T17:15:52.947","lastModified":"2025-05-02T17:15:52.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Flags SDK is an open-source feature flags toolkit for Next.js and SvelteKit. Impacted versions include flags from 3.2.0 and prior and @vercel\/flags from 3.1.1 and prior as certain circumstances allows a bad actor with detailed knowledge of the vulnerability to list all flags returned by the flags discovery endpoint (.well-known\/vercel\/flags). This vulnerability allows for information disclosure, where a bad actor could gain access to a list of all feature flags exposed through the flags discovery endpoint, including the flag names, flag descriptions, available options and their labels (e.g. true, false), and default flag values. This issue has been patched in flags@4.0.0, users of flags and @vercel\/flags should also migrate to flags@4.0.0."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/github.com\/vercel\/flags\/blob\/main\/packages\/flags\/guides\/upgrade-to-v4.md","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/vercel\/flags\/security\/advisories\/GHSA-892p-pqrr-hxqr","source":"security-advisories@github.com"},{"url":"https:\/\/vercel.com\/changelog\/information-disclosure-in-flags-sdk-cve-2025-46332","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2025-4213","sourceIdentifier":"cna@vuldb.com","published":"2025-05-02T18:15:28.160","lastModified":"2025-05-02T18:15:28.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in PHPGurukul Online Birth Certificate System 1.0 and classified as critical. This vulnerability affects unknown code of the file \/admin\/search.php. The manipulation of the argument searchdata leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnConfidentialityImpact":"LOW","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"LOW","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/LoovvvE18\/CVE\/issues\/1","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.307192","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.307192","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.562291","source":"cna@vuldb.com"}]}}]}