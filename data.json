{"resultsPerPage":446,"startIndex":0,"totalResults":446,"format":"NVD_CVE","version":"2.0","timestamp":"2024-10-22T04:15:41.767","vulnerabilities":[{"cve":{"id":"CVE-2024-10196","sourceIdentifier":"cna@vuldb.com","published":"2024-10-21T01:15:02.230","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Pharmacy Management System 1.0 and classified as critical. This issue affects some unknown processing of the file \/add_new_invoice.php. The manipulation of the argument text leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Pharmacy Management System 1.0 y se ha clasificado como crítica. Este problema afecta a algunos procesos desconocidos del archivo \/add_new_invoice.php. La manipulación del texto del argumento conduce a una inyección SQL. El ataque puede iniciarse de forma remota. El exploit se ha hecho público y puede utilizarse."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":5.3,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/higordiego\/be616d2853a9f1820d8558fc00e97e24","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.281021","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.281021","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.426862","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-10197","sourceIdentifier":"cna@vuldb.com","published":"2024-10-21T01:15:02.687","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Pharmacy Management System 1.0. It has been classified as problematic. Affected is an unknown function of the file \/manage_supplier.php of the component Manage Supplier Page. The manipulation of the argument address leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Pharmacy Management System 1.0. Se ha clasificado como problemática. Se ve afectada una función desconocida del archivo \/manage_supplier.php del componente Manage Supplier Page. La manipulación del argumento address provoca Cross-Site Scripting. Es posible lanzar el ataque de forma remota. El exploit se ha hecho público y puede utilizarse. También pueden verse afectados otros parámetros."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":5.1,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/higordiego\/bc051be4a8c6b6641578cad533742aab","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.281022","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.281022","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.426884","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-49215","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T01:15:02.943","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in Sangoma Asterisk through 18.20.0, 19.x and 20.x through 20.5.0, and 21.x through 21.0.0, and Certified Asterisk through 18.9-cert5. In manager.c, the functions action_getconfig() and action_getconfigJson() do not process the input file path, resulting in a path traversal vulnerability. In versions without the restrictedFile() function, no processing is done on the input path. In versions with the restrictedFile() function, path traversal is not processed."},{"lang":"es","value":"Se descubrió un problema en Sangoma Asterisk hasta 18.20.0, 19.x y 20.x hasta 20.5.0, y 21.x hasta 21.0.0, y Certified Asterisk hasta 18.9-cert5. En manager.c, las funciones action_getconfig() y action_getconfigJson() no procesan la ruta del archivo de entrada, lo que genera una vulnerabilidad de path traversal. En las versiones sin la función restrictFile(), no se realiza ningún procesamiento en la ruta de entrada. En las versiones con la función restrictFile(), no se procesa el path traversal."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/hyp164D1\/5d68b9b7a504f1416272a825ce65966a","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/asterisk\/asterisk\/blob\/20.5.0\/main\/manager.c#L3755","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-10198","sourceIdentifier":"cna@vuldb.com","published":"2024-10-21T02:15:02.133","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Pharmacy Management System 1.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file \/manage_customer.php of the component Manage Customer Page. The manipulation of the argument suppliers_name\/address leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The initial researcher advisory mentions contradicting files to be affected. Other parameters might be affected as well."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Pharmacy Management System 1.0. Se ha declarado como problemática. Esta vulnerabilidad afecta a una funcionalidad desconocida del archivo \/manage_customer.php del componente Manage Customer Page. La manipulación del argumento providers_name\/address conduce a Cross-Site Scripting. El ataque se puede lanzar de forma remota. El exploit se ha hecho público y puede utilizarse. El aviso inicial para investigadores menciona archivos contradictorios que se verán afectados. También podrían verse afectados otros parámetros."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":5.1,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/higordiego\/93343006341d3799de0cb8912cc328ec","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.281023","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.281023","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.426885","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-10199","sourceIdentifier":"cna@vuldb.com","published":"2024-10-21T02:15:02.403","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Pharmacy Management System 1.0. It has been rated as problematic. Affected by this issue is some unknown functionality of the file \/manage_medicine.php of the component Manage Medicines Page. The manipulation of the argument name\/address\/doctor_address\/suppliers_name leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The initial researcher advisory mentions contradicting files to be affected."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Pharmacy Management System 1.0. Se ha calificado como problemática. Este problema afecta a algunas funciones desconocidas del archivo \/manage_medicine.php del componente Manage Medicines Page. La manipulación del argumento name\/address\/doctor_address\/suppliers_name provoca Cross-Site Scripting. El ataque puede ejecutarse de forma remota. El exploit se ha hecho público y puede utilizarse. El aviso inicial para investigadores menciona archivos contradictorios que se verán afectados."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":5.1,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/gist.github.com\/higordiego\/0dae6dd4a36acd12bcc408caf1c787d9","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.281024","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.281024","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.426916","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-43689","sourceIdentifier":"vultures@jpcert.or.jp","published":"2024-10-21T02:15:02.680","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Stack-based buffer overflow vulnerability exists in WAB-I1750-PS and WAB-S1167-PS. By processing a specially crafted HTTP request, arbitrary code may be executed."},{"lang":"es","value":"Existe una vulnerabilidad de desbordamiento de búfer basado en pila en WAB-I1750-PS y WAB-S1167-PS. Al procesar una solicitud HTTP especialmente manipulada, se puede ejecutar código arbitrario."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":8.8,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"vultures@jpcert.or.jp","type":"Secondary","description":[{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/jvn.jp\/en\/jp\/JVN24885537\/","source":"vultures@jpcert.or.jp"},{"url":"https:\/\/www.elecom.co.jp\/news\/security\/20240827-01\/","source":"vultures@jpcert.or.jp"}]}},{"cve":{"id":"CVE-2024-10200","sourceIdentifier":"twcert@cert.org.tw","published":"2024-10-21T04:15:02.513","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Administrative Management System from Wellchoose has a Path Traversal vulnerability, allowing unauthenticated remote attackers to exploit this vulnerability to download arbitrary files on the server."},{"lang":"es","value":"Administrative Management System de Wellchoose tiene una vulnerabilidad de path traversal, lo que permite a atacantes remotos no autenticados explotar esta vulnerabilidad para descargar archivos arbitrarios en el servidor."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-23"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-8158-dadbc-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-8159-0f7a2-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2024-10201","sourceIdentifier":"twcert@cert.org.tw","published":"2024-10-21T04:15:02.893","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Administrative Management System from Wellchoose does not properly validate uploaded file types, allowing remote attackers with regular privileges to upload and execute webshells."},{"lang":"es","value":"Administrative Management System de Wellchoose no valida correctamente los tipos de archivos cargados, lo que permite que atacantes remotos con privilegios regulares carguen y ejecuten webshells."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":8.8,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-8161-b8a6d-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-8160-756b6-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2024-10202","sourceIdentifier":"twcert@cert.org.tw","published":"2024-10-21T04:15:03.900","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Administrative Management System from Wellchoose has an OS Command Injection vulnerability, allowing remote attackers with regular privileges to inject and execute arbitrary OS commands."},{"lang":"es","value":"Administrative Management System de Wellchoose tiene una vulnerabilidad de inyección de comandos del sistema operativo, lo que permite a atacantes remotos con privilegios regulares inyectar y ejecutar comandos arbitrarios del sistema operativo."}],"metrics":{"cvssMetricV31":[{"source":"twcert@cert.org.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":8.8,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"twcert@cert.org.tw","type":"Primary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/www.twcert.org.tw\/en\/cp-139-8163-b701e-2.html","source":"twcert@cert.org.tw"},{"url":"https:\/\/www.twcert.org.tw\/tw\/cp-132-8162-dc491-1.html","source":"twcert@cert.org.tw"}]}},{"cve":{"id":"CVE-2024-8625","sourceIdentifier":"contact@wpscan.com","published":"2024-10-21T06:15:02.207","lastModified":"2024-10-21T20:35:22.930","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"The TS Poll  WordPress plugin before 2.4.0 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks"},{"lang":"es","value":"El complemento TS Poll de WordPress anterior a la versión 2.4.0 no desinfecta ni escapa un parámetro antes de usarlo en una declaración SQL, lo que permite a los administradores realizar ataques de inyección SQL"}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ab4d7065-4ea2-4233-9593-0f540f91f45e\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-43945","sourceIdentifier":"audit@patchstack.com","published":"2024-10-21T11:15:02.933","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Cross-Site Request Forgery (CSRF) vulnerability in Latepoint LatePoint allows Cross Site Request Forgery.This issue affects LatePoint: from n\/a through 4.9.91."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":6.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/vulnerability\/latepoint\/wordpress-latepoint-plugin-4-9-91-cross-site-request-forgery-csrf-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2024-47328","sourceIdentifier":"audit@patchstack.com","published":"2024-10-21T11:15:03.393","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in FunnelKit Automation By Autonami allows SQL Injection.This issue affects Automation By Autonami: from n\/a through 3.1.2."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:C\/C:H\/I:N\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"LOW","baseScore":7.6,"baseSeverity":"HIGH"},"exploitabilityScore":2.3,"impactScore":4.7}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/vulnerability\/wp-marketing-automations\/wordpress-recover-woocommerce-cart-abandonment-newsletter-email-marketing-marketing-automation-by-funnelkit-plugin-3-1-2-sql-injection-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2024-47675","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:04.600","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix use-after-free in bpf_uprobe_multi_link_attach()\n\nIf bpf_link_prime() fails, bpf_uprobe_multi_link_attach() goes to the\nerror_free label and frees the array of bpf_uprobe's without calling\nbpf_uprobe_unregister().\n\nThis leaks bpf_uprobe->uprobe and worse, this frees bpf_uprobe->consumer\nwithout removing it from the uprobe->consumers list."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5fe6e308abaea082c20fbf2aa5df8e14495622cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/790c630ab0e7d7aba6d186581d4627c09fce60f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c1d782e5afbf7c50ba74ecc4ddc18a05d63e5ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdf27834c3dd5d9abf7eb8e4ee87ee9e307eb25c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47676","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:04.687","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/hugetlb.c: fix UAF of vma in hugetlb fault pathway\n\nSyzbot reports a UAF in hugetlb_fault().  This happens because\nvmf_anon_prepare() could drop the per-VMA lock and allow the current VMA\nto be freed before hugetlb_vma_unlock_read() is called.\n\nWe can fix this by using a modified version of vmf_anon_prepare() that\ndoesn't release the VMA lock on failure, and then release it ourselves\nafter hugetlb_vma_unlock_read()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/98b74bb4d7e96b4da5ef3126511febe55b76b807","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d59ebc99dee0a2687a26df94b901eb8216dbf876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e897d184a8dd4a4e1f39c8c495598e4d9472776c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47677","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:04.760","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: resolve memory leak from exfat_create_upcase_table()\n\nIf exfat_load_upcase_table reaches end and returns -EINVAL,\nallocated memory doesn't get freed and while\nexfat_load_default_upcase_table allocates more memory, leading to a\nmemory leak.\n\nHere's link to syzkaller crash report illustrating this issue:\nhttps:\/\/syzkaller.appspot.com\/text?tag=CrashReport&x=1406c201980000"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/331ed2c739ce656a67865f6b3ee0a478349d78cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c290fe508eee36df1640c3cb35dc8f89e073c8a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9835aec49670c46ebe2973032caaa1043b3d4da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47678","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:04.837","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nicmp: change the order of rate limits\n\nICMP messages are ratelimited :\n\nAfter the blamed commits, the two rate limiters are applied in this order:\n\n1) host wide ratelimit (icmp_global_allow())\n\n2) Per destination ratelimit (inetpeer based)\n\nIn order to avoid side-channels attacks, we need to apply\nthe per destination check first.\n\nThis patch makes the following change :\n\n1) icmp_global_allow() checks if the host wide limit is reached.\n   But credits are not yet consumed. This is deferred to 3)\n\n2) The per destination limit is checked\/updated.\n   This might add a new node in inetpeer tree.\n\n3) icmp_global_consume() consumes tokens if prior operations succeeded.\n\nThis means that host wide ratelimit is still effective\nin keeping inetpeer tree small even under DDOS.\n\nAs a bonus, I removed icmp_global.lock as the fast path\ncan use a lock-free operation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/483397b4ba280813e4a9c161a0a85172ddb43d19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/662ec52260cc07b9ae53ecd3925183c29d34288b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c2bd38b95f75f3d2a08c93e35303e26d480d24e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/997ba8889611891f91e8ad83583466aeab6239a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7722921adb046e3836eb84372241f32584bdb07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47679","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:04.920","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvfs: fix race between evice_inodes() and find_inode()&iput()\n\nHi, all\n\nRecently I noticed a bug[1] in btrfs, after digged it into\nand I believe it'a race in vfs.\n\nLet's assume there's a inode (ie ino 261) with i_count 1 is\ncalled by iput(), and there's a concurrent thread calling\ngeneric_shutdown_super().\n\ncpu0:                              cpu1:\niput() \/\/ i_count is 1\n  ->spin_lock(inode)\n  ->dec i_count to 0\n  ->iput_final()                    generic_shutdown_super()\n    ->__inode_add_lru()               ->evict_inodes()\n      \/\/ cause some reason[2]           ->if (atomic_read(inode->i_count)) continue;\n      \/\/ return before                  \/\/ inode 261 passed the above check\n      \/\/ list_lru_add_obj()             \/\/ and then schedule out\n   ->spin_unlock()\n\/\/ note here: the inode 261\n\/\/ was still at sb list and hash list,\n\/\/ and I_FREEING|I_WILL_FREE was not been set\n\nbtrfs_iget()\n  \/\/ after some function calls\n  ->find_inode()\n    \/\/ found the above inode 261\n    ->spin_lock(inode)\n   \/\/ check I_FREEING|I_WILL_FREE\n   \/\/ and passed\n      ->__iget()\n    ->spin_unlock(inode)                \/\/ schedule back\n                                        ->spin_lock(inode)\n                                        \/\/ check (I_NEW|I_FREEING|I_WILL_FREE) flags,\n                                        \/\/ passed and set I_FREEING\niput()                                  ->spin_unlock(inode)\n  ->spin_lock(inode)\t\t\t  ->evict()\n  \/\/ dec i_count to 0\n  ->iput_final()\n    ->spin_unlock()\n    ->evict()\n\nNow, we have two threads simultaneously evicting\nthe same inode, which may trigger the BUG(inode->i_state & I_CLEAR)\nstatement both within clear_inode() and iput().\n\nTo fix the bug, recheck the inode->i_count after holding i_lock.\nBecause in the most scenarios, the first check is valid, and\nthe overhead of spin_lock() can be reduced.\n\nIf there is any misunderstanding, please let me know, thanks.\n\n[1]: https:\/\/lore.kernel.org\/linux-btrfs\/000000000000eabe1d0619c48986@google.com\/\n[2]: The reason might be 1. SB_ACTIVE was removed or 2. mapping_shrinkable()\nreturn false when I reproduced the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0eed942bc65de1f93eca7bda51344290f9c573bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f8a5b6d0dafa4f533ac82e98f8b812073a7c9d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3721a69403291e2514d13a7c3af50a006ea1153b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47a68c75052a660e4c37de41e321582ec9496195","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/540fb13120c9eab3ef203f90c00c8e69f37449d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c857fb12b9137fee574443385d53914356bbe11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88b1afbf0f6b221f6c5bb66cc80cd3b38d696687","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47680","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.003","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: check discard support for conventional zones\n\nAs the helper function f2fs_bdev_support_discard() shows, f2fs checks if\nthe target block devices support discard by calling\nbdev_max_discard_sectors() and bdev_is_zoned(). This check works well\nfor most cases, but it does not work for conventional zones on zoned\nblock devices. F2fs assumes that zoned block devices support discard,\nand calls __submit_discard_cmd(). When __submit_discard_cmd() is called\nfor sequential write required zones, it works fine since\n__submit_discard_cmd() issues zone reset commands instead of discard\ncommands. However, when __submit_discard_cmd() is called for\nconventional zones, __blkdev_issue_discard() is called even when the\ndevices do not support discard.\n\nThe inappropriate __blkdev_issue_discard() call was not a problem before\nthe commit 30f1e7241422 (\"block: move discard checks into the ioctl\nhandler\") because __blkdev_issue_discard() checked if the target devices\nsupport discard or not. If not, it returned EOPNOTSUPP. After the\ncommit, __blkdev_issue_discard() no longer checks it. It always returns\nzero and sets NULL to the given bio pointer. This NULL pointer triggers\nf2fs_bug_on() in __submit_discard_cmd(). The BUG is recreated with the\ncommands below at the umount step, where \/dev\/nullb0 is a zoned null_blk\nwith 5GB total size, 128MB zone size and 10 conventional zones.\n\n$ mkfs.f2fs -f -m \/dev\/nullb0\n$ mount \/dev\/nullb0 \/mnt\n$ for ((i=0;i<5;i++)); do dd if=\/dev\/zero of=\/mnt\/test bs=65536 count=1600 conv=fsync; done\n$ umount \/mnt\n\nTo fix the BUG, avoid the inappropriate __blkdev_issue_discard() call.\nWhen discard is requested for conventional zones, check if the device\nsupports discard or not. If not, return EOPNOTSUPP."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/43aec4d01bd2ce961817a777b3846f8318f398e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bd7ce68ddad5a28565e42ef21cacaff113773a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2352b57897f6a3349666fc318dcbec99092c6a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47681","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.080","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7996: fix NULL pointer dereference in mt7996_mcu_sta_bfer_he\n\nFix the NULL pointer dereference in mt7996_mcu_sta_bfer_he\nroutine adding an sta interface to the mt7996 driver.\n\nFound by code review."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/174c803b432596cdd7dd3ec5e0ec52b561969ee2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1afdde3b5f56217d875a543cf565075c11bbddad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e4b60ae8a047ad2fb175fcfdd54feee80983a45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f503ae90c7355e8506e68498fe84c1357894cd5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47682","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.143","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sd: Fix off-by-one error in sd_read_block_characteristics()\n\nFf the device returns page 0xb1 with length 8 (happens with qemu v2.x, for\nexample), sd_read_block_characteristics() may attempt an out-of-bounds\nmemory access when accessing the zoned field at offset 8."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/413df704f149dec585df07466d2401bbd1f490a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/568c7c4c77eee6df7677bb861b7cee7398a3255d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60312ae7392f9c75c6591a52fc359cf7f810d48f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a776050373893e4c847a49abeae2ccb581153df0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f81eaf08385ddd474a2f41595a7757502870c0eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47683","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.210","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Skip Recompute DSC Params if no Stream on Link\n\n[why]\nEncounter NULL pointer dereference uner mst + dsc setup.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\n    PGD 0 P4D 0\n    Oops: 0000 [#1] PREEMPT SMP NOPTI\n    CPU: 4 PID: 917 Comm: sway Not tainted 6.3.9-arch1-1 #1 124dc55df4f5272ccb409f39ef4872fc2b3376a2\n    Hardware name: LENOVO 20NKS01Y00\/20NKS01Y00, BIOS R12ET61W(1.31 ) 07\/28\/2022\n    RIP: 0010:drm_dp_atomic_find_time_slots+0x5e\/0x260 [drm_display_helper]\n    Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 <48> 8>\n    RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293\n    RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224\n    RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280\n    RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850\n    R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000\n    R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224\n    FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 0000000000000008 CR3: 000000010ddc6000 CR4: 00000000003506e0\n    Call Trace:\n<TASK>\n     ? __die+0x23\/0x70\n     ? page_fault_oops+0x171\/0x4e0\n     ? plist_add+0xbe\/0x100\n     ? exc_page_fault+0x7c\/0x180\n     ? asm_exc_page_fault+0x26\/0x30\n     ? drm_dp_atomic_find_time_slots+0x5e\/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]\n     ? drm_dp_atomic_find_time_slots+0x28\/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]\n     compute_mst_dsc_configs_for_link+0x2ff\/0xa40 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]\n     ? fill_plane_buffer_attributes+0x419\/0x510 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]\n     compute_mst_dsc_configs_for_state+0x1e1\/0x250 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]\n     amdgpu_dm_atomic_check+0xecd\/0x1190 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]\n     drm_atomic_check_only+0x5c5\/0xa40\n     drm_mode_atomic_ioctl+0x76e\/0xbc0\n\n[how]\ndsc recompute should be skipped if no mode change detected on the new\nrequest. If detected, keep checking whether the stream is already on\ncurrent state or not."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/282f0a482ee61d5e863512f3c4fcec90216c20d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f9c39e8169384d2a5ca9bf323a0c1b81b3d0f3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70275bb960c71d313254473d38c14e7101cee5ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/718d83f66fb07b2cab89a1fc984613a00e3db18f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c887efda1201110211fed8921a92a713e0b6bcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8151a6c13111b465dbabe07c19f572f7cbd16fef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a53841b074cc196c3caaa37e1f15d6bc90943b97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d45c64d933586d409d3f1e0ecaca4da494b1d9c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47684","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.290","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: check skb is non-NULL in tcp_rto_delta_us()\n\nWe have some machines running stock Ubuntu 20.04.6 which is their 5.4.0-174-generic\nkernel that are running ceph and recently hit a null ptr dereference in\ntcp_rearm_rto(). Initially hitting it from the TLP path, but then later we also\nsaw it getting hit from the RACK case as well. Here are examples of the oops\nmessages we saw in each of those cases:\n\nJul 26 15:05:02 rx [11061395.780353] BUG: kernel NULL pointer dereference, address: 0000000000000020\nJul 26 15:05:02 rx [11061395.787572] #PF: supervisor read access in kernel mode\nJul 26 15:05:02 rx [11061395.792971] #PF: error_code(0x0000) - not-present page\nJul 26 15:05:02 rx [11061395.798362] PGD 0 P4D 0\nJul 26 15:05:02 rx [11061395.801164] Oops: 0000 [#1] SMP NOPTI\nJul 26 15:05:02 rx [11061395.805091] CPU: 0 PID: 9180 Comm: msgr-worker-1 Tainted: G W 5.4.0-174-generic #193-Ubuntu\nJul 26 15:05:02 rx [11061395.814996] Hardware name: Supermicro SMC 2x26 os-gen8 64C NVME-Y 256G\/H12SSW-NTR, BIOS 2.5.V1.2U.NVMe.UEFI 05\/09\/2023\nJul 26 15:05:02 rx [11061395.825952] RIP: 0010:tcp_rearm_rto+0xe4\/0x160\nJul 26 15:05:02 rx [11061395.830656] Code: 87 ca 04 00 00 00 5b 41 5c 41 5d 5d c3 c3 49 8b bc 24 40 06 00 00 eb 8d 48 bb cf f7 53 e3 a5 9b c4 20 4c 89 ef e8 0c fe 0e 00 <48> 8b 78 20 48 c1 ef 03 48 89 f8 41 8b bc 24 80 04 00 00 48 f7 e3\nJul 26 15:05:02 rx [11061395.849665] RSP: 0018:ffffb75d40003e08 EFLAGS: 00010246\nJul 26 15:05:02 rx [11061395.855149] RAX: 0000000000000000 RBX: 20c49ba5e353f7cf RCX: 0000000000000000\nJul 26 15:05:02 rx [11061395.862542] RDX: 0000000062177c30 RSI: 000000000000231c RDI: ffff9874ad283a60\nJul 26 15:05:02 rx [11061395.869933] RBP: ffffb75d40003e20 R08: 0000000000000000 R09: ffff987605e20aa8\nJul 26 15:05:02 rx [11061395.877318] R10: ffffb75d40003f00 R11: ffffb75d4460f740 R12: ffff9874ad283900\nJul 26 15:05:02 rx [11061395.884710] R13: ffff9874ad283a60 R14: ffff9874ad283980 R15: ffff9874ad283d30\nJul 26 15:05:02 rx [11061395.892095] FS: 00007f1ef4a2e700(0000) GS:ffff987605e00000(0000) knlGS:0000000000000000\nJul 26 15:05:02 rx [11061395.900438] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nJul 26 15:05:02 rx [11061395.906435] CR2: 0000000000000020 CR3: 0000003e450ba003 CR4: 0000000000760ef0\nJul 26 15:05:02 rx [11061395.913822] PKRU: 55555554\nJul 26 15:05:02 rx [11061395.916786] Call Trace:\nJul 26 15:05:02 rx [11061395.919488]\nJul 26 15:05:02 rx [11061395.921765] ? show_regs.cold+0x1a\/0x1f\nJul 26 15:05:02 rx [11061395.925859] ? __die+0x90\/0xd9\nJul 26 15:05:02 rx [11061395.929169] ? no_context+0x196\/0x380\nJul 26 15:05:02 rx [11061395.933088] ? ip6_protocol_deliver_rcu+0x4e0\/0x4e0\nJul 26 15:05:02 rx [11061395.938216] ? ip6_sublist_rcv_finish+0x3d\/0x50\nJul 26 15:05:02 rx [11061395.943000] ? __bad_area_nosemaphore+0x50\/0x1a0\nJul 26 15:05:02 rx [11061395.947873] ? bad_area_nosemaphore+0x16\/0x20\nJul 26 15:05:02 rx [11061395.952486] ? do_user_addr_fault+0x267\/0x450\nJul 26 15:05:02 rx [11061395.957104] ? ipv6_list_rcv+0x112\/0x140\nJul 26 15:05:02 rx [11061395.961279] ? __do_page_fault+0x58\/0x90\nJul 26 15:05:02 rx [11061395.965458] ? do_page_fault+0x2c\/0xe0\nJul 26 15:05:02 rx [11061395.969465] ? page_fault+0x34\/0x40\nJul 26 15:05:02 rx [11061395.973217] ? tcp_rearm_rto+0xe4\/0x160\nJul 26 15:05:02 rx [11061395.977313] ? tcp_rearm_rto+0xe4\/0x160\nJul 26 15:05:02 rx [11061395.981408] tcp_send_loss_probe+0x10b\/0x220\nJul 26 15:05:02 rx [11061395.985937] tcp_write_timer_handler+0x1b4\/0x240\nJul 26 15:05:02 rx [11061395.990809] tcp_write_timer+0x9e\/0xe0\nJul 26 15:05:02 rx [11061395.994814] ? tcp_write_timer_handler+0x240\/0x240\nJul 26 15:05:02 rx [11061395.999866] call_timer_fn+0x32\/0x130\nJul 26 15:05:02 rx [11061396.003782] __run_timers.part.0+0x180\/0x280\nJul 26 15:05:02 rx [11061396.008309] ? recalibrate_cpu_khz+0x10\/0x10\nJul 26 15:05:02 rx [11061396.012841] ? native_x2apic_icr_write+0x30\/0x30\nJul 26 15:05:02 rx [11061396.017718] ? lapic_next_even\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09aea49fbc7e755a915c405644f347137cdb62b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/570f7d8c9bf14f041152ba8353d4330ef7575915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c4c03288a4aea705e36aa44119c13d7ee4dce99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81d18c152e3f82bacadf83bc0a471b2363b9cc18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96c4983eab2a5da235f7fff90beaf17b008ba029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8770db2d54437a5f49417ae7b46f7de23d14db6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec31cf42fc4e35bb1248ce6eb1de6de9f851ac86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47685","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.397","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_reject_ipv6: fix nf_reject_ip6_tcphdr_put()\n\nsyzbot reported that nf_reject_ip6_tcphdr_put() was possibly sending\ngarbage on the four reserved tcp bits (th->res1)\n\nUse skb_put_zero() to clear the whole TCP header,\nas done in nf_reject_ip_tcphdr_put()\n\nBUG: KMSAN: uninit-value in nf_reject_ip6_tcphdr_put+0x688\/0x6c0 net\/ipv6\/netfilter\/nf_reject_ipv6.c:255\n  nf_reject_ip6_tcphdr_put+0x688\/0x6c0 net\/ipv6\/netfilter\/nf_reject_ipv6.c:255\n  nf_send_reset6+0xd84\/0x15b0 net\/ipv6\/netfilter\/nf_reject_ipv6.c:344\n  nft_reject_inet_eval+0x3c1\/0x880 net\/netfilter\/nft_reject_inet.c:48\n  expr_call_ops_eval net\/netfilter\/nf_tables_core.c:240 [inline]\n  nft_do_chain+0x438\/0x22a0 net\/netfilter\/nf_tables_core.c:288\n  nft_do_chain_inet+0x41a\/0x4f0 net\/netfilter\/nft_chain_filter.c:161\n  nf_hook_entry_hookfn include\/linux\/netfilter.h:154 [inline]\n  nf_hook_slow+0xf4\/0x400 net\/netfilter\/core.c:626\n  nf_hook include\/linux\/netfilter.h:269 [inline]\n  NF_HOOK include\/linux\/netfilter.h:312 [inline]\n  ipv6_rcv+0x29b\/0x390 net\/ipv6\/ip6_input.c:310\n  __netif_receive_skb_one_core net\/core\/dev.c:5661 [inline]\n  __netif_receive_skb+0x1da\/0xa00 net\/core\/dev.c:5775\n  process_backlog+0x4ad\/0xa50 net\/core\/dev.c:6108\n  __napi_poll+0xe7\/0x980 net\/core\/dev.c:6772\n  napi_poll net\/core\/dev.c:6841 [inline]\n  net_rx_action+0xa5a\/0x19b0 net\/core\/dev.c:6963\n  handle_softirqs+0x1ce\/0x800 kernel\/softirq.c:554\n  __do_softirq+0x14\/0x1a kernel\/softirq.c:588\n  do_softirq+0x9a\/0x100 kernel\/softirq.c:455\n  __local_bh_enable_ip+0x9f\/0xb0 kernel\/softirq.c:382\n  local_bh_enable include\/linux\/bottom_half.h:33 [inline]\n  rcu_read_unlock_bh include\/linux\/rcupdate.h:908 [inline]\n  __dev_queue_xmit+0x2692\/0x5610 net\/core\/dev.c:4450\n  dev_queue_xmit include\/linux\/netdevice.h:3105 [inline]\n  neigh_resolve_output+0x9ca\/0xae0 net\/core\/neighbour.c:1565\n  neigh_output include\/net\/neighbour.h:542 [inline]\n  ip6_finish_output2+0x2347\/0x2ba0 net\/ipv6\/ip6_output.c:141\n  __ip6_finish_output net\/ipv6\/ip6_output.c:215 [inline]\n  ip6_finish_output+0xbb8\/0x14b0 net\/ipv6\/ip6_output.c:226\n  NF_HOOK_COND include\/linux\/netfilter.h:303 [inline]\n  ip6_output+0x356\/0x620 net\/ipv6\/ip6_output.c:247\n  dst_output include\/net\/dst.h:450 [inline]\n  NF_HOOK include\/linux\/netfilter.h:314 [inline]\n  ip6_xmit+0x1ba6\/0x25d0 net\/ipv6\/ip6_output.c:366\n  inet6_csk_xmit+0x442\/0x530 net\/ipv6\/inet6_connection_sock.c:135\n  __tcp_transmit_skb+0x3b07\/0x4880 net\/ipv4\/tcp_output.c:1466\n  tcp_transmit_skb net\/ipv4\/tcp_output.c:1484 [inline]\n  tcp_connect+0x35b6\/0x7130 net\/ipv4\/tcp_output.c:4143\n  tcp_v6_connect+0x1bcc\/0x1e40 net\/ipv6\/tcp_ipv6.c:333\n  __inet_stream_connect+0x2ef\/0x1730 net\/ipv4\/af_inet.c:679\n  inet_stream_connect+0x6a\/0xd0 net\/ipv4\/af_inet.c:750\n  __sys_connect_file net\/socket.c:2061 [inline]\n  __sys_connect+0x606\/0x690 net\/socket.c:2078\n  __do_sys_connect net\/socket.c:2088 [inline]\n  __se_sys_connect net\/socket.c:2085 [inline]\n  __x64_sys_connect+0x91\/0xe0 net\/socket.c:2085\n  x64_sys_call+0x27a5\/0x3ba0 arch\/x86\/include\/generated\/asm\/syscalls_64.h:43\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nUninit was stored to memory at:\n  nf_reject_ip6_tcphdr_put+0x60c\/0x6c0 net\/ipv6\/netfilter\/nf_reject_ipv6.c:249\n  nf_send_reset6+0xd84\/0x15b0 net\/ipv6\/netfilter\/nf_reject_ipv6.c:344\n  nft_reject_inet_eval+0x3c1\/0x880 net\/netfilter\/nft_reject_inet.c:48\n  expr_call_ops_eval net\/netfilter\/nf_tables_core.c:240 [inline]\n  nft_do_chain+0x438\/0x22a0 net\/netfilter\/nf_tables_core.c:288\n  nft_do_chain_inet+0x41a\/0x4f0 net\/netfilter\/nft_chain_filter.c:161\n  nf_hook_entry_hookfn include\/linux\/netfilter.h:154 [inline]\n  nf_hook_slow+0xf4\/0x400 net\/netfilter\/core.c:626\n  nf_hook include\/linux\/netfilter.h:269 [inline]\n  NF_HOOK include\/linux\/netfilter.h:312 [inline]\n  ipv6_rcv+0x29b\/0x390 net\/ipv6\/ip6_input.c:310\n  __netif_receive_skb_one_core\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10210658f827ad45061581cbfc05924b723e8922","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a7b5a27c53b55e91eecf646d1b204e73fa4af93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ea2bcfd9bf4c3dbbf22546162226fd1c14d8ad2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c778fe48d20ef362047e3376dee56d77f8500d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af4b8a704f26f38310655bad67fd8096293275a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcf48ab3ca2c55b09c8f9c8de0df01c1943bc4e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbff87d682e57ddbbe82abf6d0a1a4a36a98afcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47686","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.497","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nep93xx: clock: Fix off by one in ep93xx_div_recalc_rate()\n\nThe psc->div[] array has psc->num_div elements.  These values come from\nwhen we call clk_hw_register_div().  It's adc_divisors and\nARRAY_SIZE(adc_divisors)) and so on.  So this condition needs to be >=\ninstead of > to prevent an out of bounds read."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27f493e141823db052586010c1532b70b164507c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66e78ade976dbd9bea09166aa8d66afc0963cde4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a5bd2fb92388c51d267f6ce57c40f1cca8af1e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae59eaf36a1ad396e9f657ec9b8b52da6206ed5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7f06284a6427475e3df742215535ec3f6cd9662","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47687","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.580","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvdpa\/mlx5: Fix invalid mr resource destroy\n\nCertain error paths from mlx5_vdpa_dev_add() can end up releasing mr\nresources which never got initialized in the first place.\n\nThis patch adds the missing check in mlx5_vdpa_destroy_mr_resources()\nto block releasing non-initialized mr resources.\n\nReference trace:\n\n  mlx5_core 0000:08:00.2: mlx5_vdpa_dev_add:3274:(pid 2700) warning: No mac address provisioned?\n  BUG: kernel NULL pointer dereference, address: 0000000000000000\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 140216067 P4D 0\n  Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 8 PID: 2700 Comm: vdpa Kdump: loaded Not tainted 5.14.0-496.el9.x86_64 #1\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n  RIP: 0010:vhost_iotlb_del_range+0xf\/0xe0 [vhost_iotlb]\n  Code: [...]\n  RSP: 0018:ff1c823ac23077f0 EFLAGS: 00010246\n  RAX: ffffffffc1a21a60 RBX: ffffffff899567a0 RCX: 0000000000000000\n  RDX: ffffffffffffffff RSI: 0000000000000000 RDI: 0000000000000000\n  RBP: ff1bda1f7c21e800 R08: 0000000000000000 R09: ff1c823ac2307670\n  R10: ff1c823ac2307668 R11: ffffffff8a9e7b68 R12: 0000000000000000\n  R13: 0000000000000000 R14: ff1bda1f43e341a0 R15: 00000000ffffffea\n  FS:  00007f56eba7c740(0000) GS:ff1bda269f800000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000000000000 CR3: 0000000104d90001 CR4: 0000000000771ef0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  PKRU: 55555554\n  Call Trace:\n\n   ? show_trace_log_lvl+0x1c4\/0x2df\n   ? show_trace_log_lvl+0x1c4\/0x2df\n   ? mlx5_vdpa_free+0x3d\/0x150 [mlx5_vdpa]\n   ? __die_body.cold+0x8\/0xd\n   ? page_fault_oops+0x134\/0x170\n   ? __irq_work_queue_local+0x2b\/0xc0\n   ? irq_work_queue+0x2c\/0x50\n   ? exc_page_fault+0x62\/0x150\n   ? asm_exc_page_fault+0x22\/0x30\n   ? __pfx_mlx5_vdpa_free+0x10\/0x10 [mlx5_vdpa]\n   ? vhost_iotlb_del_range+0xf\/0xe0 [vhost_iotlb]\n   mlx5_vdpa_free+0x3d\/0x150 [mlx5_vdpa]\n   vdpa_release_dev+0x1e\/0x50 [vdpa]\n   device_release+0x31\/0x90\n   kobject_cleanup+0x37\/0x130\n   mlx5_vdpa_dev_add+0x2d2\/0x7a0 [mlx5_vdpa]\n   vdpa_nl_cmd_dev_add_set_doit+0x277\/0x4c0 [vdpa]\n   genl_family_rcv_msg_doit+0xd9\/0x130\n   genl_family_rcv_msg+0x14d\/0x220\n   ? __pfx_vdpa_nl_cmd_dev_add_set_doit+0x10\/0x10 [vdpa]\n   ? _copy_to_user+0x1a\/0x30\n   ? move_addr_to_user+0x4b\/0xe0\n   genl_rcv_msg+0x47\/0xa0\n   ? __import_iovec+0x46\/0x150\n   ? __pfx_genl_rcv_msg+0x10\/0x10\n   netlink_rcv_skb+0x54\/0x100\n   genl_rcv+0x24\/0x40\n   netlink_unicast+0x245\/0x370\n   netlink_sendmsg+0x206\/0x440\n   __sys_sendto+0x1dc\/0x1f0\n   ? do_read_fault+0x10c\/0x1d0\n   ? do_pte_missing+0x10d\/0x190\n   __x64_sys_sendto+0x20\/0x30\n   do_syscall_64+0x5c\/0xf0\n   ? __count_memcg_events+0x4f\/0xb0\n   ? mm_account_fault+0x6c\/0x100\n   ? handle_mm_fault+0x116\/0x270\n   ? do_user_addr_fault+0x1d6\/0x6a0\n   ? do_syscall_64+0x6b\/0xf0\n   ? clear_bhb_loop+0x25\/0x80\n   ? clear_bhb_loop+0x25\/0x80\n   ? clear_bhb_loop+0x25\/0x80\n   ? clear_bhb_loop+0x25\/0x80\n   ? clear_bhb_loop+0x25\/0x80\n   entry_SYSCALL_64_after_hwframe+0x78\/0x80"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5fe351def237df1ad29aa8af574350bc5340b4cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6fbb1c7801f46a0e5461c02904eab0d7535c790","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc12502905b7a3de9097ea6b98870470c2921e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47688","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.653","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: Fix a potential null-ptr-deref in module_add_driver()\n\nInject fault while probing of-fpga-region, if kasprintf() fails in\nmodule_add_driver(), the second sysfs_remove_link() in exit path will cause\nnull-ptr-deref as below because kernfs_name_hash() will call strlen() with\nNULL driver_name.\n\nFix it by releasing resources based on the exit path sequence.\n\n\t KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n\t Mem abort info:\n\t   ESR = 0x0000000096000005\n\t   EC = 0x25: DABT (current EL), IL = 32 bits\n\t   SET = 0, FnV = 0\n\t   EA = 0, S1PTW = 0\n\t   FSC = 0x05: level 1 translation fault\n\t Data abort info:\n\t   ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000\n\t   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n\t   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n\t [dfffffc000000000] address between user and kernel address ranges\n\t Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP\n\t Dumping ftrace buffer:\n\t    (ftrace buffer empty)\n\t Modules linked in: of_fpga_region(+) fpga_region fpga_bridge cfg80211 rfkill 8021q garp mrp stp llc ipv6 [last unloaded: of_fpga_region]\n\t CPU: 2 UID: 0 PID: 2036 Comm: modprobe Not tainted 6.11.0-rc2-g6a0e38264012 #295\n\t Hardware name: linux,dummy-virt (DT)\n\t pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n\t pc : strlen+0x24\/0xb0\n\t lr : kernfs_name_hash+0x1c\/0xc4\n\t sp : ffffffc081f97380\n\t x29: ffffffc081f97380 x28: ffffffc081f97b90 x27: ffffff80c821c2a0\n\t x26: ffffffedac0be418 x25: 0000000000000000 x24: ffffff80c09d2000\n\t x23: 0000000000000000 x22: 0000000000000000 x21: 0000000000000000\n\t x20: 0000000000000000 x19: 0000000000000000 x18: 0000000000001840\n\t x17: 0000000000000000 x16: 0000000000000000 x15: 1ffffff8103f2e42\n\t x14: 00000000f1f1f1f1 x13: 0000000000000004 x12: ffffffb01812d61d\n\t x11: 1ffffff01812d61c x10: ffffffb01812d61c x9 : dfffffc000000000\n\t x8 : 0000004fe7ed29e4 x7 : ffffff80c096b0e7 x6 : 0000000000000001\n\t x5 : ffffff80c096b0e0 x4 : 1ffffffdb990efa2 x3 : 0000000000000000\n\t x2 : 0000000000000000 x1 : dfffffc000000000 x0 : 0000000000000000\n\t Call trace:\n\t  strlen+0x24\/0xb0\n\t  kernfs_name_hash+0x1c\/0xc4\n\t  kernfs_find_ns+0x118\/0x2e8\n\t  kernfs_remove_by_name_ns+0x80\/0x100\n\t  sysfs_remove_link+0x74\/0xa8\n\t  module_add_driver+0x278\/0x394\n\t  bus_add_driver+0x1f0\/0x43c\n\t  driver_register+0xf4\/0x3c0\n\t  __platform_driver_register+0x60\/0x88\n\t  of_fpga_region_init+0x20\/0x1000 [of_fpga_region]\n\t  do_one_initcall+0x110\/0x788\n\t  do_init_module+0x1dc\/0x5c8\n\t  load_module+0x3c38\/0x4cac\n\t  init_module_from_file+0xd4\/0x128\n\t  idempotent_init_module+0x2cc\/0x528\n\t  __arm64_sys_finit_module+0xac\/0x100\n\t  invoke_syscall+0x6c\/0x258\n\t  el0_svc_common.constprop.0+0x160\/0x22c\n\t  do_el0_svc+0x44\/0x5c\n\t  el0_svc+0x48\/0xb8\n\t  el0t_64_sync_handler+0x13c\/0x158\n\t  el0t_64_sync+0x190\/0x194\n\t Code: f2fbffe1 a90157f4 12000802 aa0003f5 (38e16861)\n\t ---[ end trace 0000000000000000 ]---\n\t Kernel panic - not syncing: Oops: Fatal exception"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18ec12c97b39ff6aa15beb8d2b25d15cd44b87d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b5d48b7a29cc6d508121a4b4e0c97a891e5273c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8e45b910525704010d10c9dcbf2abf3005aa97c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcb9d581dee4c23f2378b6650511ece80dda4e2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47689","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.733","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to don't set SB_RDONLY in f2fs_handle_critical_error()\n\nsyzbot reports a f2fs bug as below:\n\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 58 at kernel\/rcu\/sync.c:177 rcu_sync_dtor+0xcd\/0x180 kernel\/rcu\/sync.c:177\nCPU: 1 UID: 0 PID: 58 Comm: kworker\/1:2 Not tainted 6.10.0-syzkaller-12562-g1722389b0d86 #0\nWorkqueue: events destroy_super_work\nRIP: 0010:rcu_sync_dtor+0xcd\/0x180 kernel\/rcu\/sync.c:177\nCall Trace:\n percpu_free_rwsem+0x41\/0x80 kernel\/locking\/percpu-rwsem.c:42\n destroy_super_work+0xec\/0x130 fs\/super.c:282\n process_one_work kernel\/workqueue.c:3231 [inline]\n process_scheduled_works+0xa2c\/0x1830 kernel\/workqueue.c:3312\n worker_thread+0x86d\/0xd40 kernel\/workqueue.c:3390\n kthread+0x2f0\/0x390 kernel\/kthread.c:389\n ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n\nAs Christian Brauner pointed out [1]: the root cause is f2fs sets\nSB_RDONLY flag in internal function, rather than setting the flag\ncovered w\/ sb->s_umount semaphore via remount procedure, then below\nrace condition causes this bug:\n\n- freeze_super()\n - sb_wait_write(sb, SB_FREEZE_WRITE)\n - sb_wait_write(sb, SB_FREEZE_PAGEFAULT)\n - sb_wait_write(sb, SB_FREEZE_FS)\n\t\t\t\t\t- f2fs_handle_critical_error\n\t\t\t\t\t - sb->s_flags |= SB_RDONLY\n- thaw_super\n - thaw_super_locked\n  - sb_rdonly() is true, so it skips\n    sb_freeze_unlock(sb, SB_FREEZE_FS)\n  - deactivate_locked_super\n\nSince f2fs has almost the same logic as ext4 [2] when handling critical\nerror in filesystem if it mounts w\/ errors=remount-ro option:\n- set CP_ERROR_FLAG flag which indicates filesystem is stopped\n- record errors to superblock\n- set SB_RDONLY falg\nOnce we set CP_ERROR_FLAG flag, all writable interfaces can detect the\nflag and stop any further updates on filesystem. So, it is safe to not\nset SB_RDONLY flag, let's remove the logic and keep in line w\/ ext4 [3].\n\n[1] https:\/\/lore.kernel.org\/all\/20240729-himbeeren-funknetz-96e62f9c7aee@brauner\n[2] https:\/\/lore.kernel.org\/all\/20240729132721.hxih6ehigadqf7wx@quack3\n[3] https:\/\/lore.kernel.org\/linux-ext4\/20240805201241.27286-1-jack@suse.cz"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f63f405c1a1a64b9c310388aad7055fb86b245c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/649ec8b30df113042588bd3d3cd4e98bcb1091e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/930c6ab93492c4b15436524e704950b364b2930c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de43021c72993877a8f86f9fddfa0687609da5a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47690","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.800","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: get rid of online repaire on corrupted directory\n\nsyzbot reports a f2fs bug as below:\n\nkernel BUG at fs\/f2fs\/inode.c:896!\nRIP: 0010:f2fs_evict_inode+0x1598\/0x15c0 fs\/f2fs\/inode.c:896\nCall Trace:\n evict+0x532\/0x950 fs\/inode.c:704\n dispose_list fs\/inode.c:747 [inline]\n evict_inodes+0x5f9\/0x690 fs\/inode.c:797\n generic_shutdown_super+0x9d\/0x2d0 fs\/super.c:627\n kill_block_super+0x44\/0x90 fs\/super.c:1696\n kill_f2fs_super+0x344\/0x690 fs\/f2fs\/super.c:4898\n deactivate_locked_super+0xc4\/0x130 fs\/super.c:473\n cleanup_mnt+0x41f\/0x4b0 fs\/namespace.c:1373\n task_work_run+0x24f\/0x310 kernel\/task_work.c:228\n ptrace_notify+0x2d2\/0x380 kernel\/signal.c:2402\n ptrace_report_syscall include\/linux\/ptrace.h:415 [inline]\n ptrace_report_syscall_exit include\/linux\/ptrace.h:477 [inline]\n syscall_exit_work+0xc6\/0x190 kernel\/entry\/common.c:173\n syscall_exit_to_user_mode_prepare kernel\/entry\/common.c:200 [inline]\n __syscall_exit_to_user_mode_work kernel\/entry\/common.c:205 [inline]\n syscall_exit_to_user_mode+0x279\/0x370 kernel\/entry\/common.c:218\n do_syscall_64+0x100\/0x230 arch\/x86\/entry\/common.c:89\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0010:f2fs_evict_inode+0x1598\/0x15c0 fs\/f2fs\/inode.c:896\n\nOnline repaire on corrupted directory in f2fs_lookup() can generate\ndirty data\/meta while racing w\/ readonly remount, it may leave dirty\ninode after filesystem becomes readonly, however, checkpoint() will\nskips flushing dirty inode in a state of readonly mode, result in\nabove panic.\n\nLet's get rid of online repaire in f2fs_lookup(), and leave the work\nto fsck.f2fs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/884ee6dc85b959bc152f15bca80c30f06069e6c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8be95cd607478d85fa4626e86f811e785905bcbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcefd0b0611f35b560d0a7281d87529fbe7a1e32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8d64f598eeb079c42a52deaa3a91312c736a49d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4746f2d79507f65cfbde11d3c39ee8338aa50af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9ce2f550d53d044ecfb5ce996406cf42cd6b84d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47691","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.880","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid use-after-free in f2fs_stop_gc_thread()\n\nsyzbot reports a f2fs bug as below:\n\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:114\n print_report+0xe8\/0x550 mm\/kasan\/report.c:491\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189\n instrument_atomic_read_write include\/linux\/instrumented.h:96 [inline]\n atomic_fetch_add_relaxed include\/linux\/atomic\/atomic-instrumented.h:252 [inline]\n __refcount_add include\/linux\/refcount.h:184 [inline]\n __refcount_inc include\/linux\/refcount.h:241 [inline]\n refcount_inc include\/linux\/refcount.h:258 [inline]\n get_task_struct include\/linux\/sched\/task.h:118 [inline]\n kthread_stop+0xca\/0x630 kernel\/kthread.c:704\n f2fs_stop_gc_thread+0x65\/0xb0 fs\/f2fs\/gc.c:210\n f2fs_do_shutdown+0x192\/0x540 fs\/f2fs\/file.c:2283\n f2fs_ioc_shutdown fs\/f2fs\/file.c:2325 [inline]\n __f2fs_ioctl+0x443a\/0xbe60 fs\/f2fs\/file.c:4325\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:907 [inline]\n __se_sys_ioctl+0xfc\/0x170 fs\/ioctl.c:893\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nThe root cause is below race condition, it may cause use-after-free\nissue in sbi->gc_th pointer.\n\n- remount\n - f2fs_remount\n  - f2fs_stop_gc_thread\n   - kfree(gc_th)\n\t\t\t\t- f2fs_ioc_shutdown\n\t\t\t\t - f2fs_do_shutdown\n\t\t\t\t  - f2fs_stop_gc_thread\n\t\t\t\t   - kthread_stop(gc_th->f2fs_gc_task)\n   : sbi->gc_thread = NULL;\n\nWe will call f2fs_do_shutdown() in two paths:\n- for f2fs_ioc_shutdown() path, we should grab sb->s_umount semaphore\nfor fixing.\n- for f2fs_shutdown() path, it's safe since caller has already grabbed\nsb->s_umount semaphore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7c339dee7eb0f8e4cadc317c595f898ef04dae30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7f114d864ac91515bb07ac271e9824a20f5ed95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d79343cd66343709e409d96b2abb139a0a55ce34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc18e655b62ac6bc9f12f5de0d749b4a3fe1e812","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47692","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:05.953","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: return -EINVAL when namelen is 0\n\nWhen we have a corrupted main.sqlite in \/var\/lib\/nfs\/nfsdcld\/, it may\nresult in namelen being 0, which will cause memdup_user() to return\nZERO_SIZE_PTR.\nWhen we access the name.data that has been assigned the value of\nZERO_SIZE_PTR in nfs4_client_to_reclaim(), null pointer dereference is\ntriggered.\n\n[ T1205] ==================================================================\n[ T1205] BUG: KASAN: null-ptr-deref in nfs4_client_to_reclaim+0xe9\/0x260\n[ T1205] Read of size 1 at addr 0000000000000010 by task nfsdcld\/1205\n[ T1205]\n[ T1205] CPU: 11 PID: 1205 Comm: nfsdcld Not tainted 5.10.0-00003-g2c1423731b8d #406\n[ T1205] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04\/01\/2014\n[ T1205] Call Trace:\n[ T1205]  dump_stack+0x9a\/0xd0\n[ T1205]  ? nfs4_client_to_reclaim+0xe9\/0x260\n[ T1205]  __kasan_report.cold+0x34\/0x84\n[ T1205]  ? nfs4_client_to_reclaim+0xe9\/0x260\n[ T1205]  kasan_report+0x3a\/0x50\n[ T1205]  nfs4_client_to_reclaim+0xe9\/0x260\n[ T1205]  ? nfsd4_release_lockowner+0x410\/0x410\n[ T1205]  cld_pipe_downcall+0x5ca\/0x760\n[ T1205]  ? nfsd4_cld_tracking_exit+0x1d0\/0x1d0\n[ T1205]  ? down_write_killable_nested+0x170\/0x170\n[ T1205]  ? avc_policy_seqno+0x28\/0x40\n[ T1205]  ? selinux_file_permission+0x1b4\/0x1e0\n[ T1205]  rpc_pipe_write+0x84\/0xb0\n[ T1205]  vfs_write+0x143\/0x520\n[ T1205]  ksys_write+0xc9\/0x170\n[ T1205]  ? __ia32_sys_read+0x50\/0x50\n[ T1205]  ? ktime_get_coarse_real_ts64+0xfe\/0x110\n[ T1205]  ? ktime_get_coarse_real_ts64+0xa2\/0x110\n[ T1205]  do_syscall_64+0x33\/0x40\n[ T1205]  entry_SYSCALL_64_after_hwframe+0x67\/0xd1\n[ T1205] RIP: 0033:0x7fdbdb761bc7\n[ T1205] Code: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 514\n[ T1205] RSP: 002b:00007fff8c4b7248 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ T1205] RAX: ffffffffffffffda RBX: 000000000000042b RCX: 00007fdbdb761bc7\n[ T1205] RDX: 000000000000042b RSI: 00007fff8c4b75f0 RDI: 0000000000000008\n[ T1205] RBP: 00007fdbdb761bb0 R08: 0000000000000000 R09: 0000000000000001\n[ T1205] R10: 0000000000000000 R11: 0000000000000246 R12: 000000000000042b\n[ T1205] R13: 0000000000000008 R14: 00007fff8c4b75f0 R15: 0000000000000000\n[ T1205] ==================================================================\n\nFix it by checking namelen."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f1d007bbea38a61cf9c5392708dc70ae9d84a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ff8be8d008b9ddc8e7043fbddd37d5d451b271b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22451a16b7ab7debefce660672566be887db1637","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/318f70857caab3da9a6ada9bc8c1f4f7591b695e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/766d5fbd78f7a52b3888449a0358760477b74602","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84a563d136faf514fdad1ade28d7a142fd313cb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7b7a8df41ef18862dd6b22289fb46c2c12398af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47693","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.033","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/core: Fix ib_cache_setup_one error flow cleanup\n\nWhen ib_cache_update return an error, we exit ib_cache_setup_one\ninstantly with no proper cleanup, even though before this we had\nalready successfully done gid_table_setup_one, that results in\nthe kernel WARN below.\n\nDo proper cleanup using gid_table_cleanup_one before returning\nthe err in order to fix the issue.\n\nWARNING: CPU: 4 PID: 922 at drivers\/infiniband\/core\/cache.c:806 gid_table_release_one+0x181\/0x1a0\nModules linked in:\nCPU: 4 UID: 0 PID: 922 Comm: c_repro Not tainted 6.11.0-rc1+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:gid_table_release_one+0x181\/0x1a0\nCode: 44 8b 38 75 0c e8 2f cb 34 ff 4d 8b b5 28 05 00 00 e8 23 cb 34 ff 44 89 f9 89 da 4c 89 f6 48 c7 c7 d0 58 14 83 e8 4f de 21 ff <0f> 0b 4c 8b 75 30 e9 54 ff ff ff 48 8    3 c4 10 5b 5d 41 5c 41 5d 41\nRSP: 0018:ffffc90002b835b0 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff811c8527\nRDX: 0000000000000000 RSI: ffffffff811c8534 RDI: 0000000000000001\nRBP: ffff8881011b3d00 R08: ffff88810b3abe00 R09: 205d303839303631\nR10: 666572207972746e R11: 72746e6520444947 R12: 0000000000000001\nR13: ffff888106390000 R14: ffff8881011f2110 R15: 0000000000000001\nFS:  00007fecc3b70800(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000340 CR3: 000000010435a001 CR4: 00000000003706b0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ? show_regs+0x94\/0xa0\n ? __warn+0x9e\/0x1c0\n ? gid_table_release_one+0x181\/0x1a0\n ? report_bug+0x1f9\/0x340\n ? gid_table_release_one+0x181\/0x1a0\n ? handle_bug+0xa2\/0x110\n ? exc_invalid_op+0x31\/0xa0\n ? asm_exc_invalid_op+0x16\/0x20\n ? __warn_printk+0xc7\/0x180\n ? __warn_printk+0xd4\/0x180\n ? gid_table_release_one+0x181\/0x1a0\n ib_device_release+0x71\/0xe0\n ? __pfx_ib_device_release+0x10\/0x10\n device_release+0x44\/0xd0\n kobject_put+0x135\/0x3d0\n put_device+0x20\/0x30\n rxe_net_add+0x7d\/0xa0\n rxe_newlink+0xd7\/0x190\n nldev_newlink+0x1b0\/0x2a0\n ? __pfx_nldev_newlink+0x10\/0x10\n rdma_nl_rcv_msg+0x1ad\/0x2e0\n rdma_nl_rcv_skb.constprop.0+0x176\/0x210\n netlink_unicast+0x2de\/0x400\n netlink_sendmsg+0x306\/0x660\n __sock_sendmsg+0x110\/0x120\n ____sys_sendmsg+0x30e\/0x390\n ___sys_sendmsg+0x9b\/0xf0\n ? kstrtouint+0x6e\/0xa0\n ? kstrtouint_from_user+0x7c\/0xb0\n ? get_pid_task+0xb0\/0xd0\n ? proc_fail_nth_write+0x5b\/0x140\n ? __fget_light+0x9a\/0x200\n ? preempt_count_add+0x47\/0xa0\n __sys_sendmsg+0x61\/0xd0\n do_syscall_64+0x50\/0x110\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1403c8b14765eab805377dd3b75e96ace8747aed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1730d47d1865af89efd01cf0469a9a739cbf60f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/290fe42fe0165205c4451334d8833a9202ae1d52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f63f4bb9a7128a6209d766c2fc02b3d42fbf3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af633fd9d9fff59e31c804f47ca0c8a784977773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d08754be993f270e3d296d8f5d8e071fe6638651","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47694","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.107","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/mlx5: Fix UMR pd cleanup on error flow of driver init\n\nThe cited commit moves the pd allocation from function\nmlx5r_umr_resource_cleanup() to a new function mlx5r_umr_cleanup().\nSo the fix in commit [1] is broken. In error flow, will hit panic [2].\n\nFix it by checking pd pointer to avoid panic if it is NULL;\n\n[1] RDMA\/mlx5: Fix UMR cleanup on error flow of driver init\n[2]\n [  347.567063] infiniband mlx5_0: Couldn't register device with driver model\n [  347.591382] BUG: kernel NULL pointer dereference, address: 0000000000000020\n [  347.593438] #PF: supervisor read access in kernel mode\n [  347.595176] #PF: error_code(0x0000) - not-present page\n [  347.596962] PGD 0 P4D 0\n [  347.601361] RIP: 0010:ib_dealloc_pd_user+0x12\/0xc0 [ib_core]\n [  347.604171] RSP: 0018:ffff888106293b10 EFLAGS: 00010282\n [  347.604834] RAX: 0000000000000000 RBX: 000000000000000e RCX: 0000000000000000\n [  347.605672] RDX: ffff888106293ad0 RSI: 0000000000000000 RDI: 0000000000000000\n [  347.606529] RBP: 0000000000000000 R08: ffff888106293ae0 R09: ffff888106293ae0\n [  347.607379] R10: 0000000000000a06 R11: 0000000000000000 R12: 0000000000000000\n [  347.608224] R13: ffffffffa0704dc0 R14: 0000000000000001 R15: 0000000000000001\n [  347.609067] FS:  00007fdc720cd9c0(0000) GS:ffff88852c880000(0000) knlGS:0000000000000000\n [  347.610094] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [  347.610727] CR2: 0000000000000020 CR3: 0000000103012003 CR4: 0000000000370eb0\n [  347.611421] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n [  347.612113] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n [  347.612804] Call Trace:\n [  347.613130]  <TASK>\n [  347.613417]  ? __die+0x20\/0x60\n [  347.613793]  ? page_fault_oops+0x150\/0x3e0\n [  347.614243]  ? free_msg+0x68\/0x80 [mlx5_core]\n [  347.614840]  ? cmd_exec+0x48f\/0x11d0 [mlx5_core]\n [  347.615359]  ? exc_page_fault+0x74\/0x130\n [  347.615808]  ? asm_exc_page_fault+0x22\/0x30\n [  347.616273]  ? ib_dealloc_pd_user+0x12\/0xc0 [ib_core]\n [  347.616801]  mlx5r_umr_cleanup+0x23\/0x90 [mlx5_ib]\n [  347.617365]  mlx5_ib_stage_pre_ib_reg_umr_cleanup+0x36\/0x40 [mlx5_ib]\n [  347.618025]  __mlx5_ib_add+0x96\/0xd0 [mlx5_ib]\n [  347.618539]  mlx5r_probe+0xe9\/0x310 [mlx5_ib]\n [  347.619032]  ? kernfs_add_one+0x107\/0x150\n [  347.619478]  ? __mlx5_ib_add+0xd0\/0xd0 [mlx5_ib]\n [  347.619984]  auxiliary_bus_probe+0x3e\/0x90\n [  347.620448]  really_probe+0xc5\/0x3a0\n [  347.620857]  __driver_probe_device+0x80\/0x160\n [  347.621325]  driver_probe_device+0x1e\/0x90\n [  347.621770]  __driver_attach+0xec\/0x1c0\n [  347.622213]  ? __device_attach_driver+0x100\/0x100\n [  347.622724]  bus_for_each_dev+0x71\/0xc0\n [  347.623151]  bus_add_driver+0xed\/0x240\n [  347.623570]  driver_register+0x58\/0x100\n [  347.623998]  __auxiliary_driver_register+0x6a\/0xc0\n [  347.624499]  ? driver_register+0xae\/0x100\n [  347.624940]  ? 0xffffffffa0893000\n [  347.625329]  mlx5_ib_init+0x16a\/0x1e0 [mlx5_ib]\n [  347.625845]  do_one_initcall+0x4a\/0x2a0\n [  347.626273]  ? gcov_event+0x2e2\/0x3a0\n [  347.626706]  do_init_module+0x8a\/0x260\n [  347.627126]  init_module_from_file+0x8b\/0xd0\n [  347.627596]  __x64_sys_finit_module+0x1ca\/0x2f0\n [  347.628089]  do_syscall_64+0x4c\/0x100"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/112e6e83a894260cc7efe79a1fc47d4d51461742","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99e2de5942b0390ddc24efada71edc6593e23f05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47695","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.180","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/rtrs-clt: Reset cid to con_num - 1 to stay in bounds\n\nIn the function init_conns(), after the create_con() and create_cm() for\nloop if something fails. In the cleanup for loop after the destroy tag, we\naccess out of bound memory because cid is set to clt_path->s.con_num.\n\nThis commits resets the cid to clt_path->s.con_num - 1, to stay in bounds\nin the cleanup loop later."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b9be936ee8839ab9f83a7e84ee02ac6c8303c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0429a4e972082e3a2351da414b1c017daaf8aed2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c50e0265fa332c94a4a182e4efa0fc70d8fad94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e4289b29e216a55d08a89e126bc0b37cbad9f38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ac73f8191f3de41fef4f934d84d97f3aadb301f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8b7f3d9fada0d4b4b7db86bf7345cd61f1d972e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47696","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.257","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/iwcm: Fix WARNING:at_kernel\/workqueue.c:#check_flush_dependency\n\nIn the commit aee2424246f9 (\"RDMA\/iwcm: Fix a use-after-free related to\ndestroying CM IDs\"), the function flush_workqueue is invoked to flush the\nwork queue iwcm_wq.\n\nBut at that time, the work queue iwcm_wq was created via the function\nalloc_ordered_workqueue without the flag WQ_MEM_RECLAIM.\n\nBecause the current process is trying to flush the whole iwcm_wq, if\niwcm_wq doesn't have the flag WQ_MEM_RECLAIM, verify that the current\nprocess is not reclaiming memory or running on a workqueue which doesn't\nhave the flag WQ_MEM_RECLAIM as that can break forward-progress guarantee\nleading to a deadlock.\n\nThe call trace is as below:\n\n[  125.350876][ T1430] Call Trace:\n[  125.356281][ T1430]  <TASK>\n[ 125.361285][ T1430] ? __warn (kernel\/panic.c:693)\n[ 125.367640][ T1430] ? check_flush_dependency (kernel\/workqueue.c:3706 (discriminator 9))\n[ 125.375689][ T1430] ? report_bug (lib\/bug.c:180 lib\/bug.c:219)\n[ 125.382505][ T1430] ? handle_bug (arch\/x86\/kernel\/traps.c:239)\n[ 125.388987][ T1430] ? exc_invalid_op (arch\/x86\/kernel\/traps.c:260 (discriminator 1))\n[ 125.395831][ T1430] ? asm_exc_invalid_op (arch\/x86\/include\/asm\/idtentry.h:621)\n[ 125.403125][ T1430] ? check_flush_dependency (kernel\/workqueue.c:3706 (discriminator 9))\n[ 125.410984][ T1430] ? check_flush_dependency (kernel\/workqueue.c:3706 (discriminator 9))\n[ 125.418764][ T1430] __flush_workqueue (kernel\/workqueue.c:3970)\n[ 125.426021][ T1430] ? __pfx___might_resched (kernel\/sched\/core.c:10151)\n[ 125.433431][ T1430] ? destroy_cm_id (drivers\/infiniband\/core\/iwcm.c:375) iw_cm\n[ 125.441209][ T1430] ? __pfx___flush_workqueue (kernel\/workqueue.c:3910)\n[ 125.473900][ T1430] ? _raw_spin_lock_irqsave (arch\/x86\/include\/asm\/atomic.h:107 include\/linux\/atomic\/atomic-arch-fallback.h:2170 include\/linux\/atomic\/atomic-instrumented.h:1302 include\/asm-generic\/qspinlock.h:111 include\/linux\/spinlock.h:187 include\/linux\/spinlock_api_smp.h:111 kernel\/locking\/spinlock.c:162)\n[ 125.473909][ T1430] ? __pfx__raw_spin_lock_irqsave (kernel\/locking\/spinlock.c:161)\n[ 125.482537][ T1430] _destroy_id (drivers\/infiniband\/core\/cma.c:2044) rdma_cm\n[ 125.495072][ T1430] nvme_rdma_free_queue (drivers\/nvme\/host\/rdma.c:656 drivers\/nvme\/host\/rdma.c:650) nvme_rdma\n[ 125.505827][ T1430] nvme_rdma_reset_ctrl_work (drivers\/nvme\/host\/rdma.c:2180) nvme_rdma\n[ 125.505831][ T1430] process_one_work (kernel\/workqueue.c:3231)\n[ 125.515122][ T1430] worker_thread (kernel\/workqueue.c:3306 kernel\/workqueue.c:3393)\n[ 125.515127][ T1430] ? __pfx_worker_thread (kernel\/workqueue.c:3339)\n[ 125.531837][ T1430] kthread (kernel\/kthread.c:389)\n[ 125.539864][ T1430] ? __pfx_kthread (kernel\/kthread.c:342)\n[ 125.550628][ T1430] ret_from_fork (arch\/x86\/kernel\/process.c:147)\n[ 125.558840][ T1430] ? __pfx_kthread (kernel\/kthread.c:342)\n[ 125.558844][ T1430] ret_from_fork_asm (arch\/x86\/entry\/entry_64.S:257)\n[  125.566487][ T1430]  <\/TASK>\n[  125.566488][ T1430] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2efe8da2ddbf873385b4bc55366d09350b408df6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86dfdd8288907f03c18b7fb462e0e232c4f98d89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b7df76356d098f85f3bd2c7cf6fb43f531893d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a09dc967b3c58899e259c0aea092f421d22a0b04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a64f30db12bdc937c5108158d98c8eab1925c548","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8b18a75282cfd27822a8cc3c1f005c1ac8d1a58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da0392698c62397c19deb1b9e9bdf2fbb5a9420e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47697","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.343","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: media: dvb-frontends\/rtl2830: fix an out-of-bounds write error\n\nEnsure index in rtl2830_pid_filter does not exceed 31 to prevent\nout-of-bounds access.\n\ndev->filters is a 32-bit value, so set_bit and clear_bit functions should\nonly operate on indices from 0 to 31. If index is 32, it will attempt to\naccess a non-existent 33rd bit, leading to out-of-bounds access.\nChange the boundary check from index > 32 to index >= 32 to resolve this\nissue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/042b101d7bf70616c4967c286ffa6fcca65babfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dba83d3c81de1368d15a39f22df7b53e306052f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46d7ebfe6a75a454a5fa28604f0ef1491f9d8d14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58f31be7dfbc0c84a6497ad51924949cf64b86a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fd6aae7e53b94f4035b1bfce28b8dfa0d0ae470","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86d920d2600c3a48efc2775c1666c1017eec6956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/badbd736e6649c4e6d7b4ff7e2b9857acfa9ea94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47698","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.423","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: media: dvb-frontends\/rtl2832: fix an out-of-bounds write error\n\nEnsure index in rtl2832_pid_filter does not exceed 31 to prevent\nout-of-bounds access.\n\ndev->filters is a 32-bit value, so set_bit and clear_bit functions should\nonly operate on indices from 0 to 31. If index is 32, it will attempt to\naccess a non-existent 33rd bit, leading to out-of-bounds access.\nChange the boundary check from index > 32 to index >= 32 to resolve this\nissue.\n\n[hverkuil: added fixes tag, rtl2830_pid_filter -> rtl2832_pid_filter in logmsg]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15bea004e939d938a6771dfcf2a26cc899ffd20a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/527ab3eb3b0b4a6ee00e183c1de6a730239e2835","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66dbe0df6eccc7ee53a2c35016ce81e13b3ff447","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ae3b9aee42616ee93c4585174f40c767828006d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ae06f360cfaca2b88b98ca89144548b3186aab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a879b6cdd48134a3d58949ea4f075c75fa2d7d71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bedd42e07988dbdd124b23e758ffef7a681b9c60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47699","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.503","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential null-ptr-deref in nilfs_btree_insert()\n\nPatch series \"nilfs2: fix potential issues with empty b-tree nodes\".\n\nThis series addresses three potential issues with empty b-tree nodes that\ncan occur with corrupted filesystem images, including one recently\ndiscovered by syzbot.\n\n\nThis patch (of 3):\n\nIf a b-tree is broken on the device, and the b-tree height is greater than\n2 (the level of the root node is greater than 1) even if the number of\nchild nodes of the b-tree root is 0, a NULL pointer dereference occurs in\nnilfs_btree_prepare_insert(), which is called from nilfs_btree_insert().\n\nThis is because, when the number of child nodes of the b-tree root is 0,\nnilfs_btree_do_lookup() does not set the block buffer head in any of\npath[x].bp_bh, leaving it as the initial value of NULL, but if the level\nof the b-tree root node is greater than 1, nilfs_btree_get_nonroot_node(),\nwhich accesses the buffer memory of path[x].bp_bh, is called.\n\nFix this issue by adding a check to nilfs_btree_root_broken(), which\nperforms sanity checks when reading the root node from the device, to\ndetect this inconsistency.\n\nThanks to Lizhi Xu for trying to solve the bug and clarifying the cause\nearly on."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21839b6fbc3c41b3e374ecbdb0cabbbb2c53cf34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24bf40740a3da6b4056721da34997ae6938f3da1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3644554d308ddf2669e459a1551a7edf60b2d62b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73d23ecf234b7a6d47fb883f2dabe10e3230b31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9403001ad65ae4f4c5de368bdda3a0636b51d51a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db73500d3f0e558eb642aae1d4782e7726b4a03f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68523e0f26faade18833fbef577a4295d8e2c94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47700","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.593","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: check stripe size compatibility on remount as well\n\nWe disable stripe size in __ext4_fill_super if it is not a multiple of\nthe cluster ratio however this check is missed when trying to remount.\nThis can leave us with cases where stripe < cluster_ratio after\nremount:set making EXT4_B2C(sbi->s_stripe) become 0 that can cause some\nunforeseen bugs like divide by 0.\n\nFix that by adding the check in remount path as well."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/297615e992bbb30a55c158141086be6505d5d722","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a31b712f75445d52fc0451dc54fd7b16a552cb7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee85e0938aa8f9846d21e4d302c3cf6a2a75110d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faeff8b1ee2eaa5969c8e994d66c3337298cefed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47701","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.663","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid OOB when system.data xattr changes underneath the filesystem\n\nWhen looking up for an entry in an inlined directory, if e_value_offs is\nchanged underneath the filesystem by some change in the block device, it\nwill lead to an out-of-bounds access that KASAN detects as an UAF.\n\nEXT4-fs (loop0): mounted filesystem 00000000-0000-0000-0000-000000000000 r\/w without journal. Quota mode: none.\nloop0: detected capacity change from 2048 to 2047\n==================================================================\nBUG: KASAN: use-after-free in ext4_search_dir+0xf2\/0x1c0 fs\/ext4\/namei.c:1500\nRead of size 1 at addr ffff88803e91130f by task syz-executor269\/5103\n\nCPU: 0 UID: 0 PID: 5103 Comm: syz-executor269 Not tainted 6.11.0-rc4-syzkaller #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:93 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:119\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n ext4_search_dir+0xf2\/0x1c0 fs\/ext4\/namei.c:1500\n ext4_find_inline_entry+0x4be\/0x5e0 fs\/ext4\/inline.c:1697\n __ext4_find_entry+0x2b4\/0x1b30 fs\/ext4\/namei.c:1573\n ext4_lookup_entry fs\/ext4\/namei.c:1727 [inline]\n ext4_lookup+0x15f\/0x750 fs\/ext4\/namei.c:1795\n lookup_one_qstr_excl+0x11f\/0x260 fs\/namei.c:1633\n filename_create+0x297\/0x540 fs\/namei.c:3980\n do_symlinkat+0xf9\/0x3a0 fs\/namei.c:4587\n __do_sys_symlinkat fs\/namei.c:4610 [inline]\n __se_sys_symlinkat fs\/namei.c:4607 [inline]\n __x64_sys_symlinkat+0x95\/0xb0 fs\/namei.c:4607\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f3e73ced469\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 21 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff4d40c258 EFLAGS: 00000246 ORIG_RAX: 000000000000010a\nRAX: ffffffffffffffda RBX: 0032656c69662f2e RCX: 00007f3e73ced469\nRDX: 0000000020000200 RSI: 00000000ffffff9c RDI: 00000000200001c0\nRBP: 0000000000000000 R08: 00007fff4d40c290 R09: 00007fff4d40c290\nR10: 0023706f6f6c2f76 R11: 0000000000000246 R12: 00007fff4d40c27c\nR13: 0000000000000003 R14: 431bde82d7b634db R15: 00007fff4d40c2b0\n <\/TASK>\n\nCalling ext4_xattr_ibody_find right after reading the inode with\next4_get_inode_loc will lead to a check of the validity of the xattrs,\navoiding this problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a6579ef5f2576a940125729f7409cc182f1c8df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/371d0bacecd529f887ea2547333d9173e7bcdc0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fc22c3b3ffc0e952f5e0062dd11aa6ae76affba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be2e9b111e2790962cc66a177869b4e9717b4e29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6b72f5d82b1017bad80f9ebf502832fc321d796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccb8c18076e2e630fea23fbec583cdad61787fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea32883e4a03ed575a2eb7a66542022312bde477","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47702","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.743","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fail verification for sign-extension of packet data\/data_end\/data_meta\n\nsyzbot reported a kernel crash due to\n  commit 1f1e864b6555 (\"bpf: Handle sign-extenstin ctx member accesses\").\nThe reason is due to sign-extension of 32-bit load for\npacket data\/data_end\/data_meta uapi field.\n\nThe original code looks like:\n        r2 = *(s32 *)(r1 + 76) \/* load __sk_buff->data *\/\n        r3 = *(u32 *)(r1 + 80) \/* load __sk_buff->data_end *\/\n        r0 = r2\n        r0 += 8\n        if r3 > r0 goto +1\n        ...\nNote that __sk_buff->data load has 32-bit sign extension.\n\nAfter verification and convert_ctx_accesses(), the final asm code looks like:\n        r2 = *(u64 *)(r1 +208)\n        r2 = (s32)r2\n        r3 = *(u64 *)(r1 +80)\n        r0 = r2\n        r0 += 8\n        if r3 > r0 goto pc+1\n        ...\nNote that 'r2 = (s32)r2' may make the kernel __sk_buff->data address invalid\nwhich may cause runtime failure.\n\nCurrently, in C code, typically we have\n        void *data = (void *)(long)skb->data;\n        void *data_end = (void *)(long)skb->data_end;\n        ...\nand it will generate\n        r2 = *(u64 *)(r1 +208)\n        r3 = *(u64 *)(r1 +80)\n        r0 = r2\n        r0 += 8\n        if r3 > r0 goto pc+1\n\nIf we allow sign-extension,\n        void *data = (void *)(long)(int)skb->data;\n        void *data_end = (void *)(long)skb->data_end;\n        ...\nthe generated code looks like\n        r2 = *(u64 *)(r1 +208)\n        r2 <<= 32\n        r2 s>>= 32\n        r3 = *(u64 *)(r1 +80)\n        r0 = r2\n        r0 += 8\n        if r3 > r0 goto pc+1\nand this will cause verification failure since \"r2 <<= 32\" is not allowed\nas \"r2\" is a packet pointer.\n\nTo fix this issue for case\n  r2 = *(s32 *)(r1 + 76) \/* load __sk_buff->data *\/\nthis patch added additional checking in is_valid_access() callback\nfunction for packet data\/data_end\/data_meta access. If those accesses\nare with sign-extenstion, the verification will fail.\n\n  [1] https:\/\/lore.kernel.org\/bpf\/000000000000c90eee061d236d37@google.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/92de36080c93296ef9005690705cba260b9bd68a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f09757fe97a225ae505886eac572e4cbfba96537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1620c93a1ec950d87ef327a565d3907736d3340","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47703","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.823","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, lsm: Add check for BPF LSM return value\n\nA bpf prog returning a positive number attached to file_alloc_security\nhook makes kernel panic.\n\nThis happens because file system can not filter out the positive number\nreturned by the LSM prog using IS_ERR, and misinterprets this positive\nnumber as a file pointer.\n\nGiven that hook file_alloc_security never returned positive number\nbefore the introduction of BPF LSM, and other BPF LSM hooks may\nencounter similar issues, this patch adds LSM return value check\nin verifier, to ensure no unexpected value is returned."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1050727d83e70449991c29dd1cf29fe936a63da3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27ca3e20fe80be85a92b10064dfeb56cb2564b1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d99e198be279045e6ecefe220f5c52f8ce9bfd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47704","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:06.923","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check link_res->hpo_dp_link_enc before using it\n\n[WHAT & HOW]\nFunctions dp_enable_link_phy and dp_disable_link_phy can pass link_res\nwithout initializing hpo_dp_link_enc and it is necessary to check for\nnull before dereferencing.\n\nThis fixes 2 FORWARD_NULL issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0508a4e95ac1aefd851ceb97ea050d8abb93262c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0beca868cde8742240cd0038141c30482d2b7eb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/530e29452b955c30cf2102fa4d07420dc6e0c953","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be2ca7a2c1561390d28bf2f92654d819659ba510","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47705","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.020","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix potential invalid pointer dereference in blk_add_partition\n\nThe blk_add_partition() function initially used a single if-condition\n(IS_ERR(part)) to check for errors when adding a partition. This was\nmodified to handle the specific case of -ENXIO separately, allowing the\nfunction to proceed without logging the error in this case. However,\nthis change unintentionally left a path where md_autodetect_dev()\ncould be called without confirming that part is a valid pointer.\n\nThis commit separates the error handling logic by splitting the\ninitial if-condition, improving code readability and handling specific\nerror scenarios explicitly. The function now distinguishes the general\nerror case from -ENXIO without altering the existing behavior of\nmd_autodetect_dev() calls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26e197b7f9240a4ac301dd0ad520c0c697c2ea7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bc4272e2506941c3f3d4fb8b0c659ee814dcf6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64cf2a39202ca2d9df5ee70eb310b6141ce2b8ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/652039ba477c9a4ab43740cf2cb0d068d53508c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80f5bfbb80ea1615290dbc24f49d3d8c86db58fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afe53ea9b378c376101d99d216f13b6256f75189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc4d21d9492db4e534d3e01253cf885c90dd2a8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47706","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.120","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix possible UAF for bfqq->bic with merge chain\n\n1) initial state, three tasks:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t\t  |  ?            |  ?\t\t  |  ?\n\t\t  |  |            |  |\t\t  |  |\n\t\t  V  |            V  |\t\t  V  |\n\t\t  bfqq1           bfqq2\t\t  bfqq3\nprocess ref:\t   1\t\t    1\t\t    1\n\n2) bfqq1 merged to bfqq2:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t\t  |               |\t\t  |  ?\n\t\t  \\--------------\\|\t\t  |  |\n\t\t                  V\t\t  V  |\n\t\t  bfqq1--------->bfqq2\t\t  bfqq3\nprocess ref:\t   0\t\t    2\t\t    1\n\n3) bfqq2 merged to bfqq3:\n\n\t\tProcess 1       Process 2\tProcess 3\n\t\t (BIC1)          (BIC2)\t\t (BIC3)\n\t here -> ?                |\t\t  |\n\t\t  \\--------------\\ \\-------------\\|\n\t\t                  V\t\t  V\n\t\t  bfqq1--------->bfqq2---------->bfqq3\nprocess ref:\t   0\t\t    1\t\t    3\n\nIn this case, IO from Process 1 will get bfqq2 from BIC1 first, and then\nget bfqq3 through merge chain, and finially handle IO by bfqq3.\nHowerver, current code will think bfqq2 is owned by BIC1, like initial\nstate, and set bfqq2->bic to BIC1.\n\nbfq_insert_request\n-> by Process 1\n bfqq = bfq_init_rq(rq)\n  bfqq = bfq_get_bfqq_handle_split\n   bfqq = bic_to_bfqq\n   -> get bfqq2 from BIC1\n bfqq->ref++\n rq->elv.priv[0] = bic\n rq->elv.priv[1] = bfqq\n if (bfqq_process_refs(bfqq) == 1)\n  bfqq->bic = bic\n  -> record BIC1 to bfqq2\n\n  __bfq_insert_request\n   new_bfqq = bfq_setup_cooperator\n   -> get bfqq3 from bfqq2->new_bfqq\n   bfqq_request_freed(bfqq)\n   new_bfqq->ref++\n   rq->elv.priv[1] = new_bfqq\n   -> handle IO by bfqq3\n\nFix the problem by checking bfqq is from merge chain fist. And this\nmight fix a following problem reported by our syzkaller(unreproducible):\n\n==================================================================\nBUG: KASAN: slab-use-after-free in bfq_do_early_stable_merge block\/bfq-iosched.c:5692 [inline]\nBUG: KASAN: slab-use-after-free in bfq_do_or_sched_stable_merge block\/bfq-iosched.c:5805 [inline]\nBUG: KASAN: slab-use-after-free in bfq_get_queue+0x25b0\/0x2610 block\/bfq-iosched.c:5889\nWrite of size 1 at addr ffff888123839eb8 by task kworker\/0:1H\/18595\n\nCPU: 0 PID: 18595 Comm: kworker\/0:1H Tainted: G             L     6.6.0-07439-gba2303cacfda #6\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\nWorkqueue: kblockd blk_mq_requeue_work\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0x91\/0xf0 lib\/dump_stack.c:106\n print_address_description mm\/kasan\/report.c:364 [inline]\n print_report+0x10d\/0x610 mm\/kasan\/report.c:475\n kasan_report+0x8e\/0xc0 mm\/kasan\/report.c:588\n bfq_do_early_stable_merge block\/bfq-iosched.c:5692 [inline]\n bfq_do_or_sched_stable_merge block\/bfq-iosched.c:5805 [inline]\n bfq_get_queue+0x25b0\/0x2610 block\/bfq-iosched.c:5889\n bfq_get_bfqq_handle_split+0x169\/0x5d0 block\/bfq-iosched.c:6757\n bfq_init_rq block\/bfq-iosched.c:6876 [inline]\n bfq_insert_request block\/bfq-iosched.c:6254 [inline]\n bfq_insert_requests+0x1112\/0x5cf0 block\/bfq-iosched.c:6304\n blk_mq_insert_request+0x290\/0x8d0 block\/blk-mq.c:2593\n blk_mq_requeue_work+0x6bc\/0xa70 block\/blk-mq.c:1502\n process_one_work kernel\/workqueue.c:2627 [inline]\n process_scheduled_works+0x432\/0x13f0 kernel\/workqueue.c:2700\n worker_thread+0x6f2\/0x1160 kernel\/workqueue.c:2781\n kthread+0x33c\/0x440 kernel\/kthread.c:388\n ret_from_fork+0x4d\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1b\/0x30 arch\/x86\/entry\/entry_64.S:305\n <\/TASK>\n\nAllocated by task 20776:\n kasan_save_stack+0x20\/0x40 mm\/kasan\/common.c:45\n kasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\n __kasan_slab_alloc+0x87\/0x90 mm\/kasan\/common.c:328\n kasan_slab_alloc include\/linux\/kasan.h:188 [inline]\n slab_post_alloc_hook mm\/slab.h:763 [inline]\n slab_alloc_node mm\/slub.c:3458 [inline]\n kmem_cache_alloc_node+0x1a4\/0x6f0 mm\/slub.c:3503\n ioc_create_icq block\/blk-ioc.c:370 [inline]\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18ad4df091dd5d067d2faa8fce1180b79f7041a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d130db286ad0ea392c96ebb2551acf0d7308048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7faed2896d78e48ec96229e73b30b0af6c00a9aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/880692ee233ba63808182705b3333403413b58f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aa9de02a4be2e7006e636816ce19b0d667ceaa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddbdaad123254fb53e32480cb74a486a6868b1e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1277ae780cca4e69ef5468d4582dfd48f0b8320","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47707","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.220","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: avoid possible NULL deref in rt6_uncached_list_flush_dev()\n\nBlamed commit accidentally removed a check for rt->rt6i_idev being NULL,\nas spotted by syzbot:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 UID: 0 PID: 10998 Comm: syz-executor Not tainted 6.11.0-rc6-syzkaller-00208-g625403177711 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\n RIP: 0010:rt6_uncached_list_flush_dev net\/ipv6\/route.c:177 [inline]\n RIP: 0010:rt6_disable_ip+0x33e\/0x7e0 net\/ipv6\/route.c:4914\nCode: 41 80 3c 04 00 74 0a e8 90 d0 9b f7 48 8b 7c 24 08 48 8b 07 48 89 44 24 10 4c 89 f0 48 c1 e8 03 48 b9 00 00 00 00 00 fc ff df <80> 3c 08 00 74 08 4c 89 f7 e8 64 d0 9b f7 48 8b 44 24 18 49 39 06\nRSP: 0018:ffffc900047374e0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 1ffff1100fdf8f33 RCX: dffffc0000000000\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff88807efc78c0\nRBP: ffffc900047375d0 R08: 0000000000000003 R09: fffff520008e6e8c\nR10: dffffc0000000000 R11: fffff520008e6e8c R12: 1ffff1100fdf8f18\nR13: ffff88807efc7998 R14: 0000000000000000 R15: ffff88807efc7930\nFS:  0000000000000000(0000) GS:ffff8880b8900000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020002a80 CR3: 0000000022f62000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  addrconf_ifdown+0x15d\/0x1bd0 net\/ipv6\/addrconf.c:3856\n addrconf_notify+0x3cb\/0x1020\n  notifier_call_chain+0x19f\/0x3e0 kernel\/notifier.c:93\n  call_netdevice_notifiers_extack net\/core\/dev.c:2032 [inline]\n  call_netdevice_notifiers net\/core\/dev.c:2046 [inline]\n  unregister_netdevice_many_notify+0xd81\/0x1c40 net\/core\/dev.c:11352\n  unregister_netdevice_many net\/core\/dev.c:11414 [inline]\n  unregister_netdevice_queue+0x303\/0x370 net\/core\/dev.c:11289\n  unregister_netdevice include\/linux\/netdevice.h:3129 [inline]\n  __tun_detach+0x6b9\/0x1600 drivers\/net\/tun.c:685\n  tun_detach drivers\/net\/tun.c:701 [inline]\n  tun_chr_close+0x108\/0x1b0 drivers\/net\/tun.c:3510\n  __fput+0x24a\/0x8a0 fs\/file_table.c:422\n  task_work_run+0x24f\/0x310 kernel\/task_work.c:228\n  exit_task_work include\/linux\/task_work.h:40 [inline]\n  do_exit+0xa2f\/0x27f0 kernel\/exit.c:882\n  do_group_exit+0x207\/0x2c0 kernel\/exit.c:1031\n  __do_sys_exit_group kernel\/exit.c:1042 [inline]\n  __se_sys_exit_group kernel\/exit.c:1040 [inline]\n  __x64_sys_exit_group+0x3f\/0x40 kernel\/exit.c:1040\n  x64_sys_call+0x2634\/0x2640 arch\/x86\/include\/generated\/asm\/syscalls_64.h:232\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f1acc77def9\nCode: Unable to access opcode bytes at 0x7f1acc77decf.\nRSP: 002b:00007ffeb26fa738 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f1acc77def9\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000043\nRBP: 00007f1acc7dd508 R08: 00007ffeb26f84d7 R09: 0000000000000003\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001\nR13: 0000000000000003 R14: 00000000ffffffff R15: 00007ffeb26fa8e0\n <\/TASK>\nModules linked in:\n---[ end trace 0000000000000000 ]---\n RIP: 0010:rt6_uncached_list_flush_dev net\/ipv6\/route.c:177 [inline]\n RIP: 0010:rt6_disable_ip+0x33e\/0x7e0 net\/ipv6\/route.c:4914\nCode: 41 80 3c 04 00 74 0a e8 90 d0 9b f7 48 8b 7c 24 08 48 8b 07 48 89 44 24 10 4c 89 f0 48 c1 e8 03 48 b9 00 00 00 00 00 fc ff df <80> 3c 08 00 74 08 4c 89 f7 e8 64 d0 9b f7 48 8b 44 24 18 49 39 06\nRSP: 0018:ffffc900047374e0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 1ffff1100fdf8f33 RCX: dffffc0000000000\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff88807efc78c0\nR\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04ccecfa959d3b9ae7348780d8e379c6486176ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/08409e401622e2896b4313be9f781bde8a2a6a53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ceb2f2b5c813f932d6e60d3feec5e7e713da783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a0ddc73be37d19dff1ba08290af34e707d18e50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2bd9635543ca41533b870f420872819f8331823","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47708","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.313","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetkit: Assign missing bpf_net_context\n\nDuring the introduction of struct bpf_net_context handling for\nXDP-redirect, the netkit driver has been missed, which also requires it\nbecause NETKIT_REDIRECT invokes skb_do_redirect() which is accessing the\nper-CPU variables. Otherwise we see the following crash:\n\n\tBUG: kernel NULL pointer dereference, address: 0000000000000038\n\tbpf_redirect()\n\tnetkit_xmit()\n\tdev_hard_start_xmit()\n\nSet the bpf_net_context before invoking netkit_xmit() program within the\nnetkit driver."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/157f29152b61ca41809dd7ead29f5733adeced19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/182c6fed8c7f62cddce0126ec1fc0da2b700fb11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47709","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.397","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: Clear bo->bcm_proc_read after remove_proc_entry().\n\nsyzbot reported a warning in bcm_release(). [0]\n\nThe blamed change fixed another warning that is triggered when\nconnect() is issued again for a socket whose connect()ed device has\nbeen unregistered.\n\nHowever, if the socket is just close()d without the 2nd connect(), the\nremaining bo->bcm_proc_read triggers unnecessary remove_proc_entry()\nin bcm_release().\n\nLet's clear bo->bcm_proc_read after remove_proc_entry() in bcm_notify().\n\n[0]\nname '4986'\nWARNING: CPU: 0 PID: 5234 at fs\/proc\/generic.c:711 remove_proc_entry+0x2e7\/0x5d0 fs\/proc\/generic.c:711\nModules linked in:\nCPU: 0 UID: 0 PID: 5234 Comm: syz-executor606 Not tainted 6.11.0-rc5-syzkaller-00178-g5517ae241919 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nRIP: 0010:remove_proc_entry+0x2e7\/0x5d0 fs\/proc\/generic.c:711\nCode: ff eb 05 e8 cb 1e 5e ff 48 8b 5c 24 10 48 c7 c7 e0 f7 aa 8e e8 2a 38 8e 09 90 48 c7 c7 60 3a 1b 8c 48 89 de e8 da 42 20 ff 90 <0f> 0b 90 90 48 8b 44 24 18 48 c7 44 24 40 0e 36 e0 45 49 c7 04 07\nRSP: 0018:ffffc9000345fa20 EFLAGS: 00010246\nRAX: 2a2d0aee2eb64600 RBX: ffff888032f1f548 RCX: ffff888029431e00\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: ffffc9000345fb08 R08: ffffffff8155b2f2 R09: 1ffff1101710519a\nR10: dffffc0000000000 R11: ffffed101710519b R12: ffff888011d38640\nR13: 0000000000000004 R14: 0000000000000000 R15: dffffc0000000000\nFS:  0000000000000000(0000) GS:ffff8880b8800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fcfb52722f0 CR3: 000000000e734000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n bcm_release+0x250\/0x880 net\/can\/bcm.c:1578\n __sock_release net\/socket.c:659 [inline]\n sock_close+0xbc\/0x240 net\/socket.c:1421\n __fput+0x24a\/0x8a0 fs\/file_table.c:422\n task_work_run+0x24f\/0x310 kernel\/task_work.c:228\n exit_task_work include\/linux\/task_work.h:40 [inline]\n do_exit+0xa2f\/0x27f0 kernel\/exit.c:882\n do_group_exit+0x207\/0x2c0 kernel\/exit.c:1031\n __do_sys_exit_group kernel\/exit.c:1042 [inline]\n __se_sys_exit_group kernel\/exit.c:1040 [inline]\n __x64_sys_exit_group+0x3f\/0x40 kernel\/exit.c:1040\n x64_sys_call+0x2634\/0x2640 arch\/x86\/include\/generated\/asm\/syscalls_64.h:232\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7fcfb51ee969\nCode: Unable to access opcode bytes at 0x7fcfb51ee93f.\nRSP: 002b:00007ffce0109ca8 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7\nRAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007fcfb51ee969\nRDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000001\nRBP: 00007fcfb526f3b0 R08: ffffffffffffffb8 R09: 0000555500000000\nR10: 0000555500000000 R11: 0000000000000246 R12: 00007fcfb526f3b0\nR13: 0000000000000000 R14: 00007fcfb5271ee0 R15: 00007fcfb51bf160\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5cc00913c1fdcab861c4e65fa20d1f1e1bbbf977","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/770b463264426cc3c167b1d44efa85f6a526ce5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a145d6ec2124bdb94bd6fc436b342ff6ddf2b70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94b0818fa63555a65f6ba107080659ea6bcca63e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9550baada4c8ef8cebefccc746384842820b4dff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b02ed2f01240b226570b4a19b5041d61f5125784","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3d941cc734e0c8dc486c062926d5249070af5e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47710","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.483","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsock_map: Add a cond_resched() in sock_hash_free()\n\nSeveral syzbot soft lockup reports all have in common sock_hash_free()\n\nIf a map with a large number of buckets is destroyed, we need to yield\nthe cpu when needed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04f62c012e0e4683e572b30baf6004ca0a3f6772","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a11a1a53255ddab8a903cdae01b9d3eb2c1a47b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80bd490ac0a3b662a489e17d8eedeb1e905a3d40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/984648aac87a6a1c8fd61663bec3f7b61eafad5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae8c1b3e7353ad240b829eabac7ba2584b2c6bdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1339be951ad31947ae19bc25cb08769bf255100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd10abf41bae55c9d2b93f34a516dbf52626bcb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47711","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.563","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Don't return OOB skb in manage_oob().\n\nsyzbot reported use-after-free in unix_stream_recv_urg(). [0]\n\nThe scenario is\n\n  1. send(MSG_OOB)\n  2. recv(MSG_OOB)\n     -> The consumed OOB remains in recv queue\n  3. send(MSG_OOB)\n  4. recv()\n     -> manage_oob() returns the next skb of the consumed OOB\n     -> This is also OOB, but unix_sk(sk)->oob_skb is not cleared\n  5. recv(MSG_OOB)\n     -> unix_sk(sk)->oob_skb is used but already freed\n\nThe recent commit 8594d9b85c07 (\"af_unix: Don't call skb_get() for OOB\nskb.\") uncovered the issue.\n\nIf the OOB skb is consumed and the next skb is peeked in manage_oob(),\nwe still need to check if the skb is OOB.\n\nLet's do so by falling back to the following checks in manage_oob()\nand add the test case in selftest.\n\nNote that we need to add a similar check for SIOCATMARK.\n\n[0]:\nBUG: KASAN: slab-use-after-free in unix_stream_read_actor+0xa6\/0xb0 net\/unix\/af_unix.c:2959\nRead of size 4 at addr ffff8880326abcc4 by task syz-executor178\/5235\n\nCPU: 0 UID: 0 PID: 5235 Comm: syz-executor178 Not tainted 6.11.0-rc5-syzkaller-00742-gfbdaffe41adc #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:93 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:119\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n unix_stream_read_actor+0xa6\/0xb0 net\/unix\/af_unix.c:2959\n unix_stream_recv_urg+0x1df\/0x320 net\/unix\/af_unix.c:2640\n unix_stream_read_generic+0x2456\/0x2520 net\/unix\/af_unix.c:2778\n unix_stream_recvmsg+0x22b\/0x2c0 net\/unix\/af_unix.c:2996\n sock_recvmsg_nosec net\/socket.c:1046 [inline]\n sock_recvmsg+0x22f\/0x280 net\/socket.c:1068\n ____sys_recvmsg+0x1db\/0x470 net\/socket.c:2816\n ___sys_recvmsg net\/socket.c:2858 [inline]\n __sys_recvmsg+0x2f0\/0x3e0 net\/socket.c:2888\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f5360d6b4e9\nCode: 48 83 c4 28 c3 e8 37 17 00 00 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fff29b3a458 EFLAGS: 00000246 ORIG_RAX: 000000000000002f\nRAX: ffffffffffffffda RBX: 00007fff29b3a638 RCX: 00007f5360d6b4e9\nRDX: 0000000000002001 RSI: 0000000020000640 RDI: 0000000000000003\nRBP: 00007f5360dde610 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001\nR13: 00007fff29b3a628 R14: 0000000000000001 R15: 0000000000000001\n <\/TASK>\n\nAllocated by task 5235:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n unpoison_slab_object mm\/kasan\/common.c:312 [inline]\n __kasan_slab_alloc+0x66\/0x80 mm\/kasan\/common.c:338\n kasan_slab_alloc include\/linux\/kasan.h:201 [inline]\n slab_post_alloc_hook mm\/slub.c:3988 [inline]\n slab_alloc_node mm\/slub.c:4037 [inline]\n kmem_cache_alloc_node_noprof+0x16b\/0x320 mm\/slub.c:4080\n __alloc_skb+0x1c3\/0x440 net\/core\/skbuff.c:667\n alloc_skb include\/linux\/skbuff.h:1320 [inline]\n alloc_skb_with_frags+0xc3\/0x770 net\/core\/skbuff.c:6528\n sock_alloc_send_pskb+0x91a\/0xa60 net\/core\/sock.c:2815\n sock_alloc_send_skb include\/net\/sock.h:1778 [inline]\n queue_oob+0x108\/0x680 net\/unix\/af_unix.c:2198\n unix_stream_sendmsg+0xd24\/0xf80 net\/unix\/af_unix.c:2351\n sock_sendmsg_nosec net\/socket.c:730 [inline]\n __sock_sendmsg+0x221\/0x270 net\/socket.c:745\n ____sys_sendmsg+0x525\/0x7d0 net\/socket.c:2597\n ___sys_sendmsg net\/socket.c:2651 [inline]\n __sys_sendmsg+0x2b0\/0x3a0 net\/socket.c:2680\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nFreed by task 5235:\n kasan_save_stack mm\/kasan\/common.c:47\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4a7f9a2591a923bdde4bd7eac33490b6ae3b257c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5aa57d9f2d5311f19434d95b2a81610aa263e23b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47712","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.640","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: fix potential RCU dereference issue in wilc_parse_join_bss_param\n\nIn the `wilc_parse_join_bss_param` function, the TSF field of the `ies`\nstructure is accessed after the RCU read-side critical section is\nunlocked. According to RCU usage rules, this is illegal. Reusing this\npointer can lead to unpredictable behavior, including accessing memory\nthat has been updated or causing use-after-free issues.\n\nThis possible bug was identified using a static analysis tool developed\nby myself, specifically designed to detect RCU-related issues.\n\nTo address this, the TSF value is now stored in a local variable\n`ies_tsf` before the RCU lock is released. The `param->tsf_lo` field is\nthen assigned using this local variable, ensuring that the TSF value is\nsafely accessed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f944e6255c2fc1c9bd9ee32f6b14ee0b2a51eb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/557418e1704605a81c9e26732449f71b1d40ba1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d7c6ae1efb1ff68bc01d79d94fdf0388f86cdd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79510414a7626317f13cc9073244ab7a8deb3192","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84398204c5df5aaf89453056cf0647cda9664d2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b040b71d99ee5e17bb7a743dc01cbfcae8908ce1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf090f4fe935294361eabd9dc5a949fdd77d3d1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47713","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.717","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: use two-phase skb reclamation in ieee80211_do_stop()\n\nSince '__dev_queue_xmit()' should be called with interrupts enabled,\nthe following backtrace:\n\nieee80211_do_stop()\n ...\n spin_lock_irqsave(&local->queue_stop_reason_lock, flags)\n ...\n ieee80211_free_txskb()\n  ieee80211_report_used_skb()\n   ieee80211_report_ack_skb()\n    cfg80211_mgmt_tx_status_ext()\n     nl80211_frame_tx_status()\n      genlmsg_multicast_netns()\n       genlmsg_multicast_netns_filtered()\n        nlmsg_multicast_filtered()\n\t netlink_broadcast_filtered()\n\t  do_one_broadcast()\n\t   netlink_broadcast_deliver()\n\t    __netlink_sendskb()\n\t     netlink_deliver_tap()\n\t      __netlink_deliver_tap_skb()\n\t       dev_queue_xmit()\n\t        __dev_queue_xmit() ; with IRQS disabled\n ...\n spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags)\n\nissues the warning (as reported by syzbot reproducer):\n\nWARNING: CPU: 2 PID: 5128 at kernel\/softirq.c:362 __local_bh_enable_ip+0xc3\/0x120\n\nFix this by implementing a two-phase skb reclamation in\n'ieee80211_do_stop()', where actual work is performed\noutside of a section with interrupts disabled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/058c9026ad79dc98572442fd4c7e9a36aba6f596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d301de12da6e1bb069a9835c38359b8e8135121","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acb53a716e492a02479345157c43f21edc8bc64b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad4b7068b101fbbb4a9ca4b99b25eb051a9482ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db5ca4b42ccfa42d2af7b335ff12578e57775c02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eab272972cffff9cd973b8e4055a8e81c64f7e6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f232916fab67ca1c3425926df4a866e59ff26908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47714","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.797","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7996: use hweight16 to get correct tx antenna\n\nThe chainmask is u16 so using hweight8 cannot get correct tx_ant.\nWithout this patch, the tx_ant of band 2 would be -1 and lead to the\nfollowing issue:\nBUG: KASAN: stack-out-of-bounds in mt7996_mcu_add_sta+0x12e0\/0x16e0 [mt7996e]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33954930870c18ec549e4bca0eeff43e252cb740","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50d87e3b70980abc090676b6b4703fcbd96221f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f51fc8a9e2fd96363d8ec3f4ee4b78dd64754e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f98c3de92bb05dac4a4969df8a4595ed380b4604","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47715","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.870","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7915: fix oops on non-dbdc mt7986\n\nmt7915_band_config() sets band_idx = 1 on the main phy for mt7986\nwith MT7975_ONE_ADIE or MT7976_ONE_ADIE.\n\nCommit 0335c034e726 (\"wifi: mt76: fix race condition related to\nchecking tx queue fill status\") introduced a dereference of the\nphys array indirectly indexed by band_idx via wcid->phy_idx in\nmt76_wcid_cleanup(). This caused the following Oops on affected\nmt7986 devices:\n\n Unable to handle kernel read from unreadable memory at virtual address 0000000000000024\n Mem abort info:\n   ESR = 0x0000000096000005\n   EC = 0x25: DABT (current EL), IL = 32 bits\n   SET = 0, FnV = 0\n   EA = 0, S1PTW = 0\n   FSC = 0x05: level 1 translation fault\n Data abort info:\n   ISV = 0, ISS = 0x00000005\n   CM = 0, WnR = 0\n user pgtable: 4k pages, 39-bit VAs, pgdp=0000000042545000\n [0000000000000024] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000\n Internal error: Oops: 0000000096000005 [#1] SMP\n Modules linked in: ... mt7915e mt76_connac_lib mt76 mac80211 cfg80211 ...\n CPU: 2 PID: 1631 Comm: hostapd Not tainted 5.15.150 #0\n Hardware name: ZyXEL EX5700 (Telenor) (DT)\n pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : mt76_wcid_cleanup+0x84\/0x22c [mt76]\n lr : mt76_wcid_cleanup+0x64\/0x22c [mt76]\n sp : ffffffc00a803700\n x29: ffffffc00a803700 x28: ffffff80008f7300 x27: ffffff80003f3c00\n x26: ffffff80000a7880 x25: ffffffc008c26e00 x24: 0000000000000001\n x23: ffffffc000a68114 x22: 0000000000000000 x21: ffffff8004172cc8\n x20: ffffffc00a803748 x19: ffffff8004152020 x18: 0000000000000000\n x17: 00000000000017c0 x16: ffffffc008ef5000 x15: 0000000000000be0\n x14: ffffff8004172e28 x13: ffffff8004172e28 x12: 0000000000000000\n x11: 0000000000000000 x10: ffffff8004172e30 x9 : ffffff8004172e28\n x8 : 0000000000000000 x7 : ffffff8004156020 x6 : 0000000000000000\n x5 : 0000000000000031 x4 : 0000000000000000 x3 : 0000000000000001\n x2 : 0000000000000000 x1 : ffffff80008f7300 x0 : 0000000000000024\n Call trace:\n  mt76_wcid_cleanup+0x84\/0x22c [mt76]\n  __mt76_sta_remove+0x70\/0xbc [mt76]\n  mt76_sta_state+0x8c\/0x1a4 [mt76]\n  mt7915_eeprom_get_power_delta+0x11e4\/0x23a0 [mt7915e]\n  drv_sta_state+0x144\/0x274 [mac80211]\n  sta_info_move_state+0x1cc\/0x2a4 [mac80211]\n  sta_set_sinfo+0xaf8\/0xc24 [mac80211]\n  sta_info_destroy_addr_bss+0x4c\/0x6c [mac80211]\n\n  ieee80211_color_change_finish+0x1c08\/0x1e70 [mac80211]\n  cfg80211_check_station_change+0x1360\/0x4710 [cfg80211]\n  genl_family_rcv_msg_doit+0xb4\/0x110\n  genl_rcv_msg+0xd0\/0x1bc\n  netlink_rcv_skb+0x58\/0x120\n  genl_rcv+0x34\/0x50\n  netlink_unicast+0x1f0\/0x2ec\n  netlink_sendmsg+0x198\/0x3d0\n  ____sys_sendmsg+0x1b0\/0x210\n  ___sys_sendmsg+0x80\/0xf0\n  __sys_sendmsg+0x44\/0xa0\n  __arm64_sys_sendmsg+0x20\/0x30\n  invoke_syscall.constprop.0+0x4c\/0xe0\n  do_el0_svc+0x40\/0xd0\n  el0_svc+0x14\/0x4c\n  el0t_64_sync_handler+0x100\/0x110\n  el0t_64_sync+0x15c\/0x160\n Code: d2800002 910092c0 52800023 f9800011 (885f7c01)\n ---[ end trace 7e42dd9a39ed2281 ]---\n\nFix by using mt76_dev_phy() which will map band_idx to the correct phy\nfor all hardware combinations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7c128f3ff0be5802aef66f332e4bba6afe98735e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/818dd118f4a997f8b4fe9c010b22402d410a2424","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/862bf7cbd772c2bad570ef0c5b5556a1330656dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a94d2bd111b39f0c2c7fcbfbf8276ab98c3b8353","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47716","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:07.943","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9410\/1: vfp: Use asm volatile in fmrx\/fmxr macros\n\nFloating point instructions in userspace can crash some arm kernels\nbuilt with clang\/LLD 17.0.6:\n\n    BUG: unsupported FP instruction in kernel mode\n    FPEXC == 0xc0000780\n    Internal error: Oops - undefined instruction: 0 [#1] ARM\n    CPU: 0 PID: 196 Comm: vfp-reproducer Not tainted 6.10.0 #1\n    Hardware name: BCM2835\n    PC is at vfp_support_entry+0xc8\/0x2cc\n    LR is at do_undefinstr+0xa8\/0x250\n    pc : [<c0101d50>]    lr : [<c010a80c>]    psr: a0000013\n    sp : dc8d1f68  ip : 60000013  fp : bedea19c\n    r10: ec532b17  r9 : 00000010  r8 : 0044766c\n    r7 : c0000780  r6 : ec532b17  r5 : c1c13800  r4 : dc8d1fb0\n    r3 : c10072c4  r2 : c0101c88  r1 : ec532b17  r0 : 0044766c\n    Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\n    Control: 00c5387d  Table: 0251c008  DAC: 00000051\n    Register r0 information: non-paged memory\n    Register r1 information: vmalloc memory\n    Register r2 information: non-slab\/vmalloc memory\n    Register r3 information: non-slab\/vmalloc memory\n    Register r4 information: 2-page vmalloc region\n    Register r5 information: slab kmalloc-cg-2k\n    Register r6 information: vmalloc memory\n    Register r7 information: non-slab\/vmalloc memory\n    Register r8 information: non-paged memory\n    Register r9 information: zero-size pointer\n    Register r10 information: vmalloc memory\n    Register r11 information: non-paged memory\n    Register r12 information: non-paged memory\n    Process vfp-reproducer (pid: 196, stack limit = 0x61aaaf8b)\n    Stack: (0xdc8d1f68 to 0xdc8d2000)\n    1f60:                   0000081f b6f69300 0000000f c10073f4 c10072c4 dc8d1fb0\n    1f80: ec532b17 0c532b17 0044766c b6f9ccd8 00000000 c010a80c 00447670 60000010\n    1fa0: ffffffff c1c13800 00c5387d c0100f10 b6f68af8 00448fc0 00000000 bedea188\n    1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c\n    1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff 00000000 00000000\n    Call trace:\n    [<c0101d50>] (vfp_support_entry) from [<c010a80c>] (do_undefinstr+0xa8\/0x250)\n    [<c010a80c>] (do_undefinstr) from [<c0100f10>] (__und_usr+0x70\/0x80)\n    Exception stack(0xdc8d1fb0 to 0xdc8d1ff8)\n    1fa0:                                     b6f68af8 00448fc0 00000000 bedea188\n    1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c\n    1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff\n    Code: 0a000061 e3877202 e594003c e3a09010 (eef16a10)\n    ---[ end trace 0000000000000000 ]---\n    Kernel panic - not syncing: Fatal exception in interrupt\n    ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---\n\nThis is a minimal userspace reproducer on a Raspberry Pi Zero W:\n\n    #include <stdio.h>\n    #include <math.h>\n\n    int main(void)\n    {\n            double v = 1.0;\n            printf(\"%fn\", NAN + *(volatile double *)&v);\n            return 0;\n    }\n\nAnother way to consistently trigger the oops is:\n\n    calvin@raspberry-pi-zero-w ~$ python -c \"import json\"\n\nThe bug reproduces only when the kernel is built with DYNAMIC_DEBUG=n,\nbecause the pr_debug() calls act as barriers even when not activated.\n\nThis is the output from the same kernel source built with the same\ncompiler and DYNAMIC_DEBUG=y, where the userspace reproducer works as\nexpected:\n\n    VFP: bounce: trigger ec532b17 fpexc c0000780\n    VFP: emulate: INST=0xee377b06 SCR=0x00000000\n    VFP: bounce: trigger eef1fa10 fpexc c0000780\n    VFP: emulate: INST=0xeeb40b40 SCR=0x00000000\n    VFP: raising exceptions 30000000\n\n    calvin@raspberry-pi-zero-w ~$ .\/vfp-reproducer\n    nan\n\nCrudely grepping for vmsr\/vmrs instructions in the otherwise nearly\nidential text for vfp_support_entry() makes the problem obvious:\n\n    vmlinux.llvm.good [0xc0101cb8] <+48>:  vmrs   r7, fpexc\n    vmlinux.llvm.good [0xc0101cd8] <+80>:  vmsr   fpexc, r0\n    vmlinux.llvm.good [0xc0101d20\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39caf610a63786b3b0ef3348ac015edc19827d6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89a906dfa8c3b21b3e5360f73c49234ac1eb885b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fc60f2bdd43e758bdf0305c0fc83221419ddb3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd595d87e5fdd2fc09ea69359aa85e7f12f4b97b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47717","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:08.020","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRISC-V: KVM: Don't zero-out PMU snapshot area before freeing data\n\nWith the latest Linux-6.11-rc3, the below NULL pointer crash is observed\nwhen SBI PMU snapshot is enabled for the guest and the guest is forcefully\npowered-off.\n\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000508\n  Oops [#1]\n  Modules linked in: kvm\n  CPU: 0 UID: 0 PID: 61 Comm: term-poll Not tainted 6.11.0-rc3-00018-g44d7178dd77a #3\n  Hardware name: riscv-virtio,qemu (DT)\n  epc : __kvm_write_guest_page+0x94\/0xa6 [kvm]\n   ra : __kvm_write_guest_page+0x54\/0xa6 [kvm]\n  epc : ffffffff01590e98 ra : ffffffff01590e58 sp : ffff8f80001f39b0\n   gp : ffffffff81512a60 tp : ffffaf80024872c0 t0 : ffffaf800247e000\n   t1 : 00000000000007e0 t2 : 0000000000000000 s0 : ffff8f80001f39f0\n   s1 : 00007fff89ac4000 a0 : ffffffff015dd7e8 a1 : 0000000000000086\n   a2 : 0000000000000000 a3 : ffffaf8000000000 a4 : ffffaf80024882c0\n   a5 : 0000000000000000 a6 : ffffaf800328d780 a7 : 00000000000001cc\n   s2 : ffffaf800197bd00 s3 : 00000000000828c4 s4 : ffffaf800248c000\n   s5 : ffffaf800247d000 s6 : 0000000000001000 s7 : 0000000000001000\n   s8 : 0000000000000000 s9 : 00007fff861fd500 s10: 0000000000000001\n   s11: 0000000000800000 t3 : 00000000000004d3 t4 : 00000000000004d3\n   t5 : ffffffff814126e0 t6 : ffffffff81412700\n  status: 0000000200000120 badaddr: 0000000000000508 cause: 000000000000000d\n  [<ffffffff01590e98>] __kvm_write_guest_page+0x94\/0xa6 [kvm]\n  [<ffffffff015943a6>] kvm_vcpu_write_guest+0x56\/0x90 [kvm]\n  [<ffffffff015a175c>] kvm_pmu_clear_snapshot_area+0x42\/0x7e [kvm]\n  [<ffffffff015a1972>] kvm_riscv_vcpu_pmu_deinit.part.0+0xe0\/0x14e [kvm]\n  [<ffffffff015a2ad0>] kvm_riscv_vcpu_pmu_deinit+0x1a\/0x24 [kvm]\n  [<ffffffff0159b344>] kvm_arch_vcpu_destroy+0x28\/0x4c [kvm]\n  [<ffffffff0158e420>] kvm_destroy_vcpus+0x5a\/0xda [kvm]\n  [<ffffffff0159930c>] kvm_arch_destroy_vm+0x14\/0x28 [kvm]\n  [<ffffffff01593260>] kvm_destroy_vm+0x168\/0x2a0 [kvm]\n  [<ffffffff015933d4>] kvm_put_kvm+0x3c\/0x58 [kvm]\n  [<ffffffff01593412>] kvm_vm_release+0x22\/0x2e [kvm]\n\nClearly, the kvm_vcpu_write_guest() function is crashing because it is\nbeing called from kvm_pmu_clear_snapshot_area() upon guest tear down.\n\nTo address the above issue, simplify the kvm_pmu_clear_snapshot_area() to\nnot zero-out PMU snapshot area from kvm_pmu_clear_snapshot_area() because\nthe guest is anyway being tore down.\n\nThe kvm_pmu_clear_snapshot_area() is also called when guest changes\nPMU snapshot area of a VCPU but even in this case the previous PMU\nsnaphsot area must not be zeroed-out because the guest might have\nreclaimed the pervious PMU snapshot area for some other purpose."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47d40d93292d9cff8dabb735bed83d930fa03950","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d0a5dcfc78bd18f2abb9641f83380135494559b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81aa95fd5bd14ff49617f07fa79a8d1f1cf2ce9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47718","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:08.090","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw88: always wait for both firmware loading attempts\n\nIn 'rtw_wait_firmware_completion()', always wait for both (regular and\nwowlan) firmware loading attempts. Otherwise if 'rtw_usb_intf_init()'\nhas failed in 'rtw_usb_probe()', 'rtw_usb_disconnect()' may issue\n'ieee80211_free_hw()' when one of 'rtw_load_firmware_cb()' (usually\nthe wowlan one) is still in progress, causing UAF detected by KASAN."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e735a4c6137262bcefe45bb52fde7b1f5fc6c4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b8178a2ae272256ea0dc4f940320a81003535e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7887ad11995a4142671cc49146db536f923c8568","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9432185540bafd42b7bfac6e6ef2f0a0fb4be447","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0c1e2da652cf70825739bc12d49ea15805690bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ceaab3fb64d6a5426a3db8f87f3e5757964f2532","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9a78d9417e167410d6fb83c4e908b077ad8ba6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47719","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:08.167","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Protect against overflow of ALIGN() during iova allocation\n\nUserspace can supply an iova and uptr such that the target iova alignment\nbecomes really big and ALIGN() overflows which corrupts the selected area\nrange during allocation. CONFIG_IOMMUFD_TEST can detect this:\n\n   WARNING: CPU: 1 PID: 5092 at drivers\/iommu\/iommufd\/io_pagetable.c:268 iopt_alloc_area_pages drivers\/iommu\/iommufd\/io_pagetable.c:268 [inline]\n   WARNING: CPU: 1 PID: 5092 at drivers\/iommu\/iommufd\/io_pagetable.c:268 iopt_map_pages+0xf95\/0x1050 drivers\/iommu\/iommufd\/io_pagetable.c:352\n   Modules linked in:\n   CPU: 1 PID: 5092 Comm: syz-executor294 Not tainted 6.10.0-rc5-syzkaller-00294-g3ffea9a7a6f7 #0\n   Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 06\/07\/2024\n   RIP: 0010:iopt_alloc_area_pages drivers\/iommu\/iommufd\/io_pagetable.c:268 [inline]\n   RIP: 0010:iopt_map_pages+0xf95\/0x1050 drivers\/iommu\/iommufd\/io_pagetable.c:352\n   Code: fc e9 a4 f3 ff ff e8 1a 8b 4c fc 41 be e4 ff ff ff e9 8a f3 ff ff e8 0a 8b 4c fc 90 0f 0b 90 e9 37 f5 ff ff e8 fc 8a 4c fc 90 <0f> 0b 90 e9 68 f3 ff ff 48 c7 c1 ec 82 ad 8f 80 e1 07 80 c1 03 38\n   RSP: 0018:ffffc90003ebf9e0 EFLAGS: 00010293\n   RAX: ffffffff85499fa4 RBX: 00000000ffffffef RCX: ffff888079b49e00\n   RDX: 0000000000000000 RSI: 00000000ffffffef RDI: 0000000000000000\n   RBP: ffffc90003ebfc50 R08: ffffffff85499b30 R09: ffffffff85499942\n   R10: 0000000000000002 R11: ffff888079b49e00 R12: ffff8880228e0010\n   R13: 0000000000000000 R14: 1ffff920007d7f68 R15: ffffc90003ebfd00\n   FS:  000055557d760380(0000) GS:ffff8880b9500000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 00000000005fdeb8 CR3: 000000007404a000 CR4: 00000000003506f0\n   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n   Call Trace:\n    <TASK>\n    iommufd_ioas_copy+0x610\/0x7b0 drivers\/iommu\/iommufd\/ioas.c:274\n    iommufd_fops_ioctl+0x4d9\/0x5a0 drivers\/iommu\/iommufd\/main.c:421\n    vfs_ioctl fs\/ioctl.c:51 [inline]\n    __do_sys_ioctl fs\/ioctl.c:907 [inline]\n    __se_sys_ioctl+0xfc\/0x170 fs\/ioctl.c:893\n    do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n    do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n    entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nCap the automatic alignment to the huge page size, which is probably a\nbetter idea overall. Huge automatic alignments can fragment and chew up\nthe available IOVA space without any reason."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/72b78287ce92802e8ba678181a34b84ae844a112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f6887349b2f829a4121c518aeb064fc922714e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6e9f9fd14772c0b23c6d1d7002d98f9d27cb1f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd6dd564ae7d99967ef50078216929418160b30e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47720","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:08.240","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for set_output_gamma in dcn30_set_output_transfer_func\n\nThis commit adds a null check for the set_output_gamma function pointer\nin the  dcn30_set_output_transfer_func function. Previously,\nset_output_gamma was being checked for nullity at line 386, but then it\nwas being dereferenced without any nullity check at line 401. This\ncould potentially lead to a null pointer dereference error if\nset_output_gamma is indeed null.\n\nTo fix this, we now ensure that set_output_gamma is not null before\ndereferencing it. We do this by adding a nullity check for\nset_output_gamma before the call to set_output_gamma at line 401. If\nset_output_gamma is null, we log an error message and do not call the\nfunction.\n\nThis fix prevents a potential null pointer dereference error.\n\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn30\/dcn30_hwseq.c:401 dcn30_set_output_transfer_func()\nerror: we previously assumed 'mpc->funcs->set_output_gamma' could be null (see line 386)\n\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn30\/dcn30_hwseq.c\n    373 bool dcn30_set_output_transfer_func(struct dc *dc,\n    374                                 struct pipe_ctx *pipe_ctx,\n    375                                 const struct dc_stream_state *stream)\n    376 {\n    377         int mpcc_id = pipe_ctx->plane_res.hubp->inst;\n    378         struct mpc *mpc = pipe_ctx->stream_res.opp->ctx->dc->res_pool->mpc;\n    379         const struct pwl_params *params = NULL;\n    380         bool ret = false;\n    381\n    382         \/* program OGAM or 3DLUT only for the top pipe*\/\n    383         if (pipe_ctx->top_pipe == NULL) {\n    384                 \/*program rmu shaper and 3dlut in MPC*\/\n    385                 ret = dcn30_set_mpc_shaper_3dlut(pipe_ctx, stream);\n    386                 if (ret == false && mpc->funcs->set_output_gamma) {\n                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ If this is NULL\n\n    387                         if (stream->out_transfer_func.type == TF_TYPE_HWPWL)\n    388                                 params = &stream->out_transfer_func.pwl;\n    389                         else if (pipe_ctx->stream->out_transfer_func.type ==\n    390                                         TF_TYPE_DISTRIBUTED_POINTS &&\n    391                                         cm3_helper_translate_curve_to_hw_format(\n    392                                         &stream->out_transfer_func,\n    393                                         &mpc->blender_params, false))\n    394                                 params = &mpc->blender_params;\n    395                          \/* there are no ROM LUTs in OUTGAM *\/\n    396                         if (stream->out_transfer_func.type == TF_TYPE_PREDEFINED)\n    397                                 BREAK_TO_DEBUGGER();\n    398                 }\n    399         }\n    400\n--> 401         mpc->funcs->set_output_gamma(mpc, mpcc_id, params);\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Then it will crash\n\n    402         return ret;\n    403 }"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08ae395ea22fb3d9b318c8bde28c0dfd2f5fa4d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44948d3cb943602ba4a0b5ed3c91ae0525838fb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64886a4e6f1dce843c0889505cf0673b5211e16a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72ee32d0907364104fbcf4f68dd5ae63cd8eae9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84edd5a3f5fa6aafa4afcaf9f101f46426c620c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf9ff244d704e1903533f7be377615ed34b83e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47721","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T12:15:08.313","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: remove unused C2H event ID RTW89_MAC_C2H_FUNC_READ_WOW_CAM to prevent out-of-bounds reading\n\nThe handler of firmware C2H event RTW89_MAC_C2H_FUNC_READ_WOW_CAM isn't\nimplemented, but driver expects number of handlers is\nNUM_OF_RTW89_MAC_C2H_FUNC_WOW causing out-of-bounds access. Fix it by\nremoving ID.\n\nAddresses-Coverity-ID: 1598775 (\"Out-of-bounds read\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10463308b9454f534d03300cf679bc4b3d078f46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c9c2d1a20916589497a7facbea3e82cabec4ab8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56310ddb50b190b3390fdc974aec455d0a516bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-48231","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T12:15:08.380","lastModified":"2024-10-21T19:35:06.217","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Funadmin 5.0.2 is vulnerable to SQL Injection via the selectFields parameter in the index method of \\backend\\controller\\auth\\Auth.php."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/funadmin\/funadmin\/issues\/29","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-49273","sourceIdentifier":"audit@patchstack.com","published":"2024-10-21T12:15:08.450","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Missing Authorization vulnerability in ProfileGrid User Profiles ProfileGrid.This issue affects ProfileGrid: from n\/a through 5.9.3."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Secondary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/vulnerability\/profilegrid-user-profiles-groups-and-communities\/wordpress-profilegrid-plugin-5-9-3-cross-site-request-forgery-csrf-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2024-49293","sourceIdentifier":"audit@patchstack.com","published":"2024-10-21T12:15:08.683","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Missing Authorization vulnerability in Rextheme WP VR allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects WP VR: from n\/a through 8.5.4."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/vulnerability\/wpvr\/wordpress-wp-vr-plugin-8-5-4-broken-access-control-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2024-49321","sourceIdentifier":"audit@patchstack.com","published":"2024-10-21T12:15:08.893","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"Missing Authorization vulnerability in Colorlib Simple Custom Post Order allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects Simple Custom Post Order: from n\/a through 2.5.7."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/vulnerability\/simple-custom-post-order\/wordpress-simple-custom-post-order-plugin-2-5-7-broken-access-control-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2023-52917","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.230","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntb: intel: Fix the NULL vs IS_ERR() bug for debugfs_create_dir()\n\nThe debugfs_create_dir() function returns error pointers.\nIt never returns NULL. So use IS_ERR() to check it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16e5bed6c1883b19f9fcbdff996aa3381954d5f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cbd6d7fb9ba2be03978809c848e2e50eaeead2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a429158f2e0a7a03eb67fd5e204e1f6735c725aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b66bf833e72a1e23d7ccafc0f8f74e80f8c357b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/babba8595d1e5d57313a6187f3e51aceacc6881a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e229897d373a87ee09ec5cc4ecd4bb2f895fc16b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef7e34237e2612b116a84c9640628a6f7a0d693e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47722","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.360","lastModified":"2024-10-21T13:15:02.360","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2024-47723","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.503","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix out-of-bounds in dbNextAG() and diAlloc()\n\nIn dbNextAG() , there is no check for the case where bmp->db_numag is\ngreater or same than MAXAG due to a polluted image, which causes an\nout-of-bounds. Therefore, a bounds check should be added in dbMount().\n\nAnd in dbNextAG(), a check for the case where agpref is greater than\nbmp->db_numag should be added, so an out-of-bounds exception should be\nprevented.\n\nAdditionally, a check for the case where agno is greater or same than\nMAXAG should be added in diAlloc() to prevent out-of-bounds."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0338e66cba272351ca9d7d03f3628e390e70963b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/128d5cfdcf844cb690c9295a3a1c1114c21fc15a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ce8b6ab44a8b5918c0ee373d4ad19d19017931b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96855f40e152989c9e7c20c4691ace5581098acc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1ba4b8ca799ff1d99d01f37d7ccb7d5ba5533d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e63866a475562810500ea7f784099bfe341e761a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ead82533278502428883085a787d5a00f15e5eb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47724","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.590","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: use work queue to process beacon tx event\n\nCommit 3a415daa3e8b (\"wifi: ath11k: add P2P IE in beacon template\")\nfrom Feb 28, 2024 (linux-next), leads to the following Smatch static\nchecker warning:\n\ndrivers\/net\/wireless\/ath\/ath11k\/wmi.c:1742 ath11k_wmi_p2p_go_bcn_ie()\nwarn: sleeping in atomic context\n\nThe reason is that ath11k_bcn_tx_status_event() will directly call might\nsleep function ath11k_wmi_cmd_send() during RCU read-side critical\nsections. The call trace is like:\n\nath11k_bcn_tx_status_event()\n-> rcu_read_lock()\n-> ath11k_mac_bcn_tx_event()\n\t-> ath11k_mac_setup_bcn_tmpl()\n\t……\n\t\t-> ath11k_wmi_bcn_tmpl()\n\t\t\t-> ath11k_wmi_cmd_send()\n-> rcu_read_unlock()\n\nCommit 886433a98425 (\"ath11k: add support for BSS color change\") added the\nath11k_mac_bcn_tx_event(), commit 01e782c89108 (\"ath11k: fix warning\nof RCU usage for ath11k_mac_get_arvif_by_vdev_id()\") added the RCU lock\nto avoid warning but also introduced this BUG.\n\nUse work queue to avoid directly calling ath11k_mac_bcn_tx_event()\nduring RCU critical sections. No need to worry about the deletion of vif\nbecause cancel_work_sync() will drop the work if it doesn't start or\nblock vif deletion until the running work is done.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/177b49dbf9c1d8f9f25a22ffafa416fc2c8aa6a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6db232905e094e64abff1f18249905d068285e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbd51da69dda1137723b8f66460bf99a9dac8dd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47725","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.673","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm-verity: restart or panic on an I\/O error\n\nMaxim Suhanov reported that dm-verity doesn't crash if an I\/O error\nhappens. In theory, this could be used to subvert security, because an\nattacker can create sectors that return error with the Write Uncorrectable\ncommand. Some programs may misbehave if they have to deal with EIO.\n\nThis commit fixes dm-verity, so that if \"panic_on_corruption\" or\n\"restart_on_corruption\" was specified and an I\/O error happens, the\nmachine will panic or restart.\n\nThis commit also changes kernel_restart to emergency_restart -\nkernel_restart calls reboot notifiers and these reboot notifiers may wait\nfor the bio that failed. emergency_restart doesn't call the notifiers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/338b32a232bbee39e52dd1486cbc0c9f458d4d69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b332bcca59143cfdd000957f8b78c28dd2ac1da4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cada2646b7483cce370eb3b046659df31d9d34d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6a3531dd542cb127c8de32ab1e54a48ae19962b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47726","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.767","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to wait dio completion\n\nIt should wait all existing dio write IOs before block removal,\notherwise, previous direct write IO may overwrite data in the\nblock which may be reused by other inode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/96cfeb0389530ae32ade8a48ae3ae1ac3b6c009d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3db757ff9b7101ae68650ac5f6dd5743b68164e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47727","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.883","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/tdx: Fix \"in-kernel MMIO\" check\n\nTDX only supports kernel-initiated MMIO operations. The handle_mmio()\nfunction checks if the #VE exception occurred in the kernel and rejects\nthe operation if it did not.\n\nHowever, userspace can deceive the kernel into performing MMIO on its\nbehalf. For example, if userspace can point a syscall to an MMIO address,\nsyscall does get_user() or put_user() on it, triggering MMIO #VE. The\nkernel will treat the #VE as in-kernel MMIO.\n\nEnsure that the target MMIO address is within the kernel before decoding\ninstruction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18ecd5b74682839e7cdafb7cd1ec106df7baa18c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25703a3c980e21548774eea8c8a87a75c5c8f58c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c0c5dcb5471de5fc8f0a1c4980e5815339e1cee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bca2e29f7e26ce7c3522f8b324c0bd85612f68e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4fc4d01471528da8a9797a065982e05090e1d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47728","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:02.980","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Zero former ARG_PTR_TO_{LONG,INT} args in case of error\n\nFor all non-tracing helpers which formerly had ARG_PTR_TO_{LONG,INT} as input\narguments, zero the value for the case of an error as otherwise it could leak\nmemory. For tracing, it is not needed given CAP_PERFMON can already read all\nkernel memory anyway hence bpf_get_func_arg() and bpf_get_func_ret() is skipped\nin here.\n\nAlso, the MTU helpers mtu_len pointer value is being written but also read.\nTechnically, the MEM_UNINIT should not be there in order to always force init.\nRemoving MEM_UNINIT needs more verifier rework though: MEM_UNINIT right now\nimplies two things actually: i) write into memory, ii) memory does not have\nto be initialized. If we lift MEM_UNINIT, it then becomes: i) read into memory,\nii) memory must be initialized. This means that for bpf_*_check_mtu() we're\nreadding the issue we're trying to fix, that is, it would then be able to\nwrite back into things like .rodata BPF maps. Follow-up work will rework the\nMEM_UNINIT semantics such that the intent can be better expressed. For now\njust clear the *mtu_len on error path which can be lifted later again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b3786a6c5397dc220b1483d8e2f4867743e966f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/594a9f5a8d2de2573a856e506f77ba7dd2cefc6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/599d15b6d03356a97bff7a76155c5604c42a2962","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8397bf78988f3ae9dbebb0200189a62a57264980","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a634fa8e480ac2423f86311a602f6295df2c8ed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47729","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.070","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe: Use reserved copy engine for user binds on faulting devices\n\nUser binds map to engines with can fault, faults depend on user binds\ncompletion, thus we can deadlock. Avoid this by using reserved copy\nengine for user binds on faulting devices.\n\nWhile we are here, normalize bind queue creation with a helper.\n\nv2:\n - Pass in extensions to bind queue creation (CI)\nv3:\n - s\/resevered\/reserved (Lucas)\n - Fix NULL hwe check (Jonathan)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/439fc1e569c57669dbb842d0a77c7ba0a82a9f5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/852856e3b6f679c694dd5ec41e5a3c11aa46640b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47730","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.160","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: hisilicon\/qm - inject error before stopping queue\n\nThe master ooo cannot be completely closed when the\naccelerator core reports memory error. Therefore, the driver\nneeds to inject the qm error to close the master ooo. Currently,\nthe qm error is injected after stopping queue, memory may be\nreleased immediately after stopping queue, causing the device to\naccess the released memory. Therefore, error is injected to close master\nooo before stopping queue to ensure that the device does not access\nthe released memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/98d3be34c9153eceadb56de50d9f9347e88d86e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa3e0db35a60002fb34ef0e4ad203aa59fd00203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04f06fc0243600665b3b50253869533b7938468","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5f5b813e546f7fe133539c3d7a5086cc8dd2aa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8024f12752e32ffbbf59e1c09d949f977ff743f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47731","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.260","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers\/perf: Fix ali_drw_pmu driver interrupt status clearing\n\nThe alibaba_uncore_pmu driver forgot to clear all interrupt status\nin the interrupt processing function. After the PMU counter overflow\ninterrupt occurred, an interrupt storm occurred, causing the system\nto hang.\n\nTherefore, clear the correct interrupt status in the interrupt handling\nfunction to fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/062b7176e484678b2c9072d28fbecea47846b274","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24f30b34ff76648d26872dd4eaa002f074225058","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b839d4619042b02eecdfc986484ac6e6be6acbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85702fddba70d2b63f5646793d77de2ad4fc3784","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3dd920977dccc453c550260c4b7605b280b79c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47732","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.363","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: iaa - Fix potential use after free bug\n\nThe free_device_compression_mode(iaa_device, device_mode) function frees\n\"device_mode\" but it iss passed to iaa_compression_modes[i]->free() a few\nlines later resulting in a use after free.\n\nThe good news is that, so far as I can tell, nothing implements the\n->free() function and the use after free happens in dead code.  But, with\nthis fix, when something does implement it, we'll be ready.  :)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b5d534b473e2c8d3e4560be2dd6c12a8eb9d61e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c66f0be993ba52410edab06124c54ecf143b05c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d3b845a1b10b7b5abdad7ecc69d45b2aab3209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47733","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.450","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Delete subtree of 'fs\/netfs' when netfs module exits\n\nIn netfs_init() or fscache_proc_init(), we create dentry under 'fs\/netfs',\nbut in netfs_exit(), we only delete the proc entry of 'fs\/netfs' without\ndeleting its subtree. This triggers the following WARNING:\n\n==================================================================\nremove_proc_entry: removing non-empty directory 'fs\/netfs', leaking at least 'requests'\nWARNING: CPU: 4 PID: 566 at fs\/proc\/generic.c:717 remove_proc_entry+0x160\/0x1c0\nModules linked in: netfs(-)\nCPU: 4 UID: 0 PID: 566 Comm: rmmod Not tainted 6.11.0-rc3 #860\nRIP: 0010:remove_proc_entry+0x160\/0x1c0\nCall Trace:\n <TASK>\n netfs_exit+0x12\/0x620 [netfs]\n __do_sys_delete_module.isra.0+0x14c\/0x2e0\n do_syscall_64+0x4b\/0x110\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n==================================================================\n\nTherefore use remove_proc_subtree() instead of remove_proc_entry() to\nfix the above problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c58a9575e02c2b90a3180007d57105ceaa7c246","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/603f95cefbee06a31b03137b777f03e3c2163d72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a9eaf97d56625e55b31a7beb558e1ee185ca461","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47734","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.547","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: Fix unnecessary warnings and logs from bond_xdp_get_xmit_slave()\n\nsyzbot reported a WARNING in bond_xdp_get_xmit_slave. To reproduce\nthis[1], one bond device (bond1) has xdpdrv, which increases\nbpf_master_redirect_enabled_key. Another bond device (bond0) which is\nunsupported by XDP but its slave (veth3) has xdpgeneric that returns\nXDP_TX. This triggers WARN_ON_ONCE() from the xdp_master_redirect().\nTo reduce unnecessary warnings and improve log management, we need to\ndelete the WARN_ON_ONCE() and add ratelimit to the netdev_err().\n\n[1] Steps to reproduce:\n    # Needs tx_xdp with return XDP_TX;\n    ip l add veth0 type veth peer veth1\n    ip l add veth3 type veth peer veth4\n    ip l add bond0 type bond mode 6 # BOND_MODE_ALB, unsupported by XDP\n    ip l add bond1 type bond # BOND_MODE_ROUNDROBIN by default\n    ip l set veth0 master bond1\n    ip l set bond1 up\n    # Increases bpf_master_redirect_enabled_key\n    ip l set dev bond1 xdpdrv object tx_xdp.o section xdp_tx\n    ip l set veth3 master bond0\n    ip l set bond0 up\n    ip l set veth4 up\n    # Triggers WARN_ON_ONCE() from the xdp_master_redirect()\n    ip l set veth3 xdpgeneric object tx_xdp.o section xdp_tx"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cbfd45fbcf0cb26d85c981b91c62fe73cdee01c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57b5fba55c6f8b1d83312a34bd656166fcd95658","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b64197b4bf1a5703a8b105367baf20f1e627a75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72e2c0825a480e19ee999cee9d018850d38c82b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1be35e774f8ed415e01209fddd963c5a74e8e9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd3e6ff05e5236d1b9535f23f3e6622e0bb32b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47735","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.630","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hns: Fix spin_unlock_irqrestore() called with IRQs enabled\n\nFix missuse of spin_lock_irq()\/spin_unlock_irq() when\nspin_lock_irqsave()\/spin_lock_irqrestore() was hold.\n\nThis was discovered through the lock debugging, and the corresponding\nlog is as follows:\n\nraw_local_irq_restore() called with IRQs enabled\nWARNING: CPU: 96 PID: 2074 at kernel\/locking\/irqflag-debug.c:10 warn_bogus_irq_restore+0x30\/0x40\n...\nCall trace:\n warn_bogus_irq_restore+0x30\/0x40\n _raw_spin_unlock_irqrestore+0x84\/0xc8\n add_qp_to_list+0x11c\/0x148 [hns_roce_hw_v2]\n hns_roce_create_qp_common.constprop.0+0x240\/0x780 [hns_roce_hw_v2]\n hns_roce_create_qp+0x98\/0x160 [hns_roce_hw_v2]\n create_qp+0x138\/0x258\n ib_create_qp_kernel+0x50\/0xe8\n create_mad_qp+0xa8\/0x128\n ib_mad_port_open+0x218\/0x448\n ib_mad_init_device+0x70\/0x1f8\n add_client_context+0xfc\/0x220\n enable_device_and_get+0xd0\/0x140\n ib_register_device.part.0+0xf4\/0x1c8\n ib_register_device+0x34\/0x50\n hns_roce_register_device+0x174\/0x3d0 [hns_roce_hw_v2]\n hns_roce_init+0xfc\/0x2c0 [hns_roce_hw_v2]\n __hns_roce_hw_v2_init_instance+0x7c\/0x1d0 [hns_roce_hw_v2]\n hns_roce_hw_v2_init_instance+0x9c\/0x180 [hns_roce_hw_v2]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07f0f643d7e570dbe8ef6f5c3367a43e3086a335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/094a1821903f33fb91de4b71087773ee16aeb3a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2656336a84fcb6802f6e6c233f4661891deea24f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29c0f546d3fd66238b42cf25bcd5f193bb1cf794","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/425589d4af09c49574bd71ac31f811362a5126c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74d315b5af180220d561684d15897730135733a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1a3403bb1826c8ec787f0d60c3e7b54f419129e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47736","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.737","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: handle overlapped pclusters out of crafted images properly\n\nsyzbot reported a task hang issue due to a deadlock case where it is\nwaiting for the folio lock of a cached folio that will be used for\ncache I\/Os.\n\nAfter looking into the crafted fuzzed image, I found it's formed with\nseveral overlapped big pclusters as below:\n\n Ext:   logical offset   |  length :     physical offset    |  length\n   0:        0..   16384 |   16384 :     151552..    167936 |   16384\n   1:    16384..   32768 |   16384 :     155648..    172032 |   16384\n   2:    32768..   49152 |   16384 :  537223168.. 537239552 |   16384\n...\n\nHere, extent 0\/1 are physically overlapped although it's entirely\n_impossible_ for normal filesystem images generated by mkfs.\n\nFirst, managed folios containing compressed data will be marked as\nup-to-date and then unlocked immediately (unlike in-place folios) when\ncompressed I\/Os are complete.  If physical blocks are not submitted in\nthe incremental order, there should be separate BIOs to avoid dependency\nissues.  However, the current code mis-arranges z_erofs_fill_bio_vec()\nand BIO submission which causes unexpected BIO waits.\n\nSecond, managed folios will be connected to their own pclusters for\nefficient inter-queries.  However, this is somewhat hard to implement\neasily if overlapped big pclusters exist.  Again, these only appear in\nfuzzed images so let's simply fall back to temporary short-lived pages\nfor correctness.\n\nAdditionally, it justifies that referenced managed folios cannot be\ntruncated for now and reverts part of commit 2080ca1ed3e4 (\"erofs: tidy\nup `struct z_erofs_bvec`\") for simplicity although it shouldn't be any\ndifference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9cfa199bcbbbba31cbf97b2786f44f4464f3f29a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e2f9d34dd12e6e5b244ec488bcebd0c2d566c50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9b30af0e86ffb485301ecd83b9129c9dfb7ebf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47737","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.833","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: call cache_put if xdr_reserve_space returns NULL\n\nIf not enough buffer space available, but idmap_lookup has triggered\nlookup_fn which calls cache_get and returns successfully. Then we\nmissed to call cache_put here which pairs with cache_get.\n\nReviwed-by: Jeff Layton <jlayton@kernel.org>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/81821617312988096f5deccf0f7da6f888e98056","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d0765f86135e27f0bb5c950c136495719b4c834","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9803ab882d565a8fb2dde5999d98866d1c499dfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f03f0016ff797932551881c7e06ae50e9c39134","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1afbbb5276f943ad7173d0b4c626b8c75a260da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d078cbf5c38de83bc31f83c47dcd2184c04a50c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e32ee6a61041925d1a05c14d10352dcfce9ef029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47738","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:03.920","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: don't use rate mask for offchannel TX either\n\nLike the commit ab9177d83c04 (\"wifi: mac80211: don't use rate mask for\nscanning\"), ignore incorrect settings to avoid no supported rate warning\nreported by syzbot.\n\nThe syzbot did bisect and found cause is commit 9df66d5b9f45 (\"cfg80211:\nfix default HE tx bitrate mask in 2G band\"), which however corrects\nbitmask of HE MCS and recognizes correctly settings of empty legacy rate\nplus HE MCS rate instead of returning -EINVAL.\n\nAs suggestions [1], follow the change of SCAN TX to consider this case of\noffchannel TX as well.\n\n[1] https:\/\/lore.kernel.org\/linux-wireless\/6ab2dc9c3afe753ca6fdcdd1421e7a1f47e87b84.camel@sipsolutions.net\/T\/#m2ac2a6d2be06a37c9c47a3d8a44b4f647ed4f024"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3565ef215101ffadb5fe5394c70b1fca51376b25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43897111481b679508711d3ca881c4c6593e9247","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aafca50e71dc8f3192a5bfb325135a7908f3ef9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d54455a3a965feb547711aff7afd2ca5deadb99c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7a7ef9a0742dbd0818d5b15fba2c5313ace765b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47739","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.017","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npadata: use integer wrap around to prevent deadlock on seq_nr overflow\n\nWhen submitting more than 2^32 padata objects to padata_do_serial, the\ncurrent sorting implementation incorrectly sorts padata objects with\noverflowed seq_nr, causing them to be placed before existing objects in\nthe reorder list. This leads to a deadlock in the serialization process\nas padata_find_next cannot match padata->seq_nr and pd->processed\nbecause the padata instance with overflowed seq_nr will be selected\nnext.\n\nTo fix this, we use an unsigned integer wrap around to correctly sort\npadata objects in scenarios with integer overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b8cf11b3ca593a8802a51802cd0c28c38501428","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bd712de96ad7167fe0d608e706cd60587579f16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46c4079460f4dcaf445860679558eedef4e1bc91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72164d5b648951684b1a593996b37a6083c61d7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a22b2812393d93d84358a760c347c21939029a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e279e6c1f012b82628b89e1b9c65dbefa8ca25a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab205e1c3846326f162180e56825b4ba38ce9c30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47740","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.103","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: Require FMODE_WRITE for atomic write ioctls\n\nThe F2FS ioctls for starting and committing atomic writes check for\ninode_owner_or_capable(), but this does not give LSMs like SELinux or\nLandlock an opportunity to deny the write access - if the caller's FSUID\nmatches the inode's UID, inode_owner_or_capable() immediately returns true.\n\nThere are scenarios where LSMs want to deny a process the ability to write\nparticular files, even files that the FSUID of the process owns; but this\ncan currently partially be bypassed using atomic write ioctls in two ways:\n\n - F2FS_IOC_START_ATOMIC_REPLACE + F2FS_IOC_COMMIT_ATOMIC_WRITE can\n   truncate an inode to size 0\n - F2FS_IOC_START_ATOMIC_WRITE + F2FS_IOC_ABORT_ATOMIC_WRITE can revert\n   changes another process concurrently made to a file\n\nFix it by requiring FMODE_WRITE for these operations, just like for\nF2FS_IOC_MOVE_RANGE. Since any legitimate caller should only be using these\nioctls when intending to write into the file, that seems unlikely to break\nanything."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/000bab8753ae29a259feb339b99ee759795a48ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32f348ecc149e9ca70a1c424ae8fa9b6919d2713","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4583290898c13c2c2e5eb8773886d153c2c5121d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f5a100f87f32cb65d4bb1ad282a08c92f6f591e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e0de753bfe87768ebe6744d869caa92f35e5731","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88ff021e1fea2d9b40b2d5efd9013c89f7be04ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3bfac2cabf5333506b263bc0c8497c95302f32d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47741","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.207","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix race setting file private on concurrent lseek using same fd\n\nWhen doing concurrent lseek(2) system calls against the same file\ndescriptor, using multiple threads belonging to the same process, we have\na short time window where a race happens and can result in a memory leak.\n\nThe race happens like this:\n\n1) A program opens a file descriptor for a file and then spawns two\n   threads (with the pthreads library for example), lets call them\n   task A and task B;\n\n2) Task A calls lseek with SEEK_DATA or SEEK_HOLE and ends up at\n   file.c:find_desired_extent() while holding a read lock on the inode;\n\n3) At the start of find_desired_extent(), it extracts the file's\n   private_data pointer into a local variable named 'private', which has\n   a value of NULL;\n\n4) Task B also calls lseek with SEEK_DATA or SEEK_HOLE, locks the inode\n   in shared mode and enters file.c:find_desired_extent(), where it also\n   extracts file->private_data into its local variable 'private', which\n   has a NULL value;\n\n5) Because it saw a NULL file private, task A allocates a private\n   structure and assigns to the file structure;\n\n6) Task B also saw a NULL file private so it also allocates its own file\n   private and then assigns it to the same file structure, since both\n   tasks are using the same file descriptor.\n\n   At this point we leak the private structure allocated by task A.\n\nBesides the memory leak, there's also the detail that both tasks end up\nusing the same cached state record in the private structure (struct\nbtrfs_file_private::llseek_cached_state), which can result in a\nuse-after-free problem since one task can free it while the other is\nstill using it (only one task took a reference count on it). Also, sharing\nthe cached state is not a good idea since it could result in incorrect\nresults in the future - right now it should not be a problem because it\nend ups being used only in extent-io-tree.c:count_range_bits() where we do\nrange validation before using the cached state.\n\nFix this by protecting the private assignment and check of a file while\nholding the inode's spinlock and keep track of the task that allocated\nthe private, so that it's used only by that task in order to prevent\nuser-after-free issues with the cached state record as well as potentially\nusing it incorrectly in the future."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33d1310d4496e904123dab9c28b2d8d2c1800f97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ee85f5515e86a4e2a2f51969795920733912bad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a412ca489ac27b9d0e603499315b7139c948130d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f56a6d9c267ec7fa558ede7755551c047b1034cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47742","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.297","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware_loader: Block path traversal\n\nMost firmware names are hardcoded strings, or are constructed from fairly\nconstrained format strings where the dynamic parts are just some hex\nnumbers or such.\n\nHowever, there are a couple codepaths in the kernel where firmware file\nnames contain string components that are passed through from a device or\nsemi-privileged userspace; the ones I could find (not counting interfaces\nthat require root privileges) are:\n\n - lpfc_sli4_request_firmware_update() seems to construct the firmware\n   filename from \"ModelName\", a string that was previously parsed out of\n   some descriptor (\"Vital Product Data\") in lpfc_fill_vpd()\n - nfp_net_fw_find() seems to construct a firmware filename from a model\n   name coming from nfp_hwinfo_lookup(pf->hwinfo, \"nffw.partno\"), which I\n   think parses some descriptor that was read from the device.\n   (But this case likely isn't exploitable because the format string looks\n   like \"netronome\/nic_%s\", and there shouldn't be any *folders* starting\n   with \"netronome\/nic_\". The previous case was different because there,\n   the \"%s\" is *at the start* of the format string.)\n - module_flash_fw_schedule() is reachable from the\n   ETHTOOL_MSG_MODULE_FW_FLASH_ACT netlink command, which is marked as\n   GENL_UNS_ADMIN_PERM (meaning CAP_NET_ADMIN inside a user namespace is\n   enough to pass the privilege check), and takes a userspace-provided\n   firmware name.\n   (But I think to reach this case, you need to have CAP_NET_ADMIN over a\n   network namespace that a special kind of ethernet device is mapped into,\n   so I think this is not a viable attack path in practice.)\n\nFix it by rejecting any firmware names containing \"..\" path components.\n\nFor what it's worth, I went looking and haven't found any USB device\ndrivers that use the firmware loader dangerously."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28f1cd94d3f1092728fb775a0fe26c5f1ac2ebeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d2411f4edcb649eaf232160db459bb4770b5251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c4e13fdfcab34811c3143a0a03c05fec4e870ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7420c1bf7fc784e587b87329cc6dfa3dca537aa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a77fc4acfd49fc6076e565445b2bc5fdc3244da4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c30558e6c5c9ad6c86459d9acce1520ceeab9ea6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0e5311aa8022107d63c54e2f03684ec097d1394","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47743","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.393","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKEYS: prevent NULL pointer dereference in find_asymmetric_key()\n\nIn find_asymmetric_key(), if all NULLs are passed in the id_{0,1,2}\narguments, the kernel will first emit WARN but then have an oops\nbecause id_2 gets dereferenced anyway.\n\nAdd the missing id_2 check and move WARN_ON() to the final else branch\nto avoid duplicate NULL checks.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d3b0706ada15c333e6f9faf19590ff715e45d1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13b5b401ead95b5d8266f64904086c55b6024900","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3322fa8f2aa40b0b3651034cd541647a600cc6c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70fd1966c93bf3bfe3fe6d753eb3d83a76597eef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3765b497a4f5224cb2f7a6a2d3357d3066214ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47744","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.480","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Use dedicated mutex to protect kvm_usage_count to avoid deadlock\n\nUse a dedicated mutex to guard kvm_usage_count to fix a potential deadlock\non x86 due to a chain of locks and SRCU synchronizations.  Translating the\nbelow lockdep splat, CPU1 #6 will wait on CPU0 #1, CPU0 #8 will wait on\nCPU2 #3, and CPU2 #7 will wait on CPU1 #4 (if there's a writer, due to the\nfairness of r\/w semaphores).\n\n    CPU0                     CPU1                     CPU2\n1   lock(&kvm->slots_lock);\n2                                                     lock(&vcpu->mutex);\n3                                                     lock(&kvm->srcu);\n4                            lock(cpu_hotplug_lock);\n5                            lock(kvm_lock);\n6                            lock(&kvm->slots_lock);\n7                                                     lock(cpu_hotplug_lock);\n8   sync(&kvm->srcu);\n\nNote, there are likely more potential deadlocks in KVM x86, e.g. the same\npattern of taking cpu_hotplug_lock outside of kvm_lock likely exists with\n__kvmclock_cpufreq_notifier():\n\n  cpuhp_cpufreq_online()\n  |\n  -> cpufreq_online()\n     |\n     -> cpufreq_gov_performance_limits()\n        |\n        -> __cpufreq_driver_target()\n           |\n           -> __target_index()\n              |\n              -> cpufreq_freq_transition_begin()\n                 |\n                 -> cpufreq_notify_transition()\n                    |\n                    -> ... __kvmclock_cpufreq_notifier()\n\nBut, actually triggering such deadlocks is beyond rare due to the\ncombination of dependencies and timings involved.  E.g. the cpufreq\nnotifier is only used on older CPUs without a constant TSC, mucking with\nthe NX hugepage mitigation while VMs are running is very uncommon, and\ndoing so while also onlining\/offlining a CPU (necessary to generate\ncontention on cpu_hotplug_lock) would be even more unusual.\n\nThe most robust solution to the general cpu_hotplug_lock issue is likely\nto switch vm_list to be an RCU-protected list, e.g. so that x86's cpufreq\nnotifier doesn't to take kvm_lock.  For now, settle for fixing the most\nblatant deadlock, as switching to an RCU-protected list is a much more\ninvolved change, but add a comment in locking.rst to call out that care\nneeds to be taken when walking holding kvm_lock and walking vm_list.\n\n  ======================================================\n  WARNING: possible circular locking dependency detected\n  6.10.0-smp--c257535a0c9d-pip #330 Tainted: G S         O\n  ------------------------------------------------------\n  tee\/35048 is trying to acquire lock:\n  ff6a80eced71e0a8 (&kvm->slots_lock){+.+.}-{3:3}, at: set_nx_huge_pages+0x179\/0x1e0 [kvm]\n\n  but task is already holding lock:\n  ffffffffc07abb08 (kvm_lock){+.+.}-{3:3}, at: set_nx_huge_pages+0x14a\/0x1e0 [kvm]\n\n  which lock already depends on the new lock.\n\n   the existing dependency chain (in reverse order) is:\n\n  -> #3 (kvm_lock){+.+.}-{3:3}:\n         __mutex_lock+0x6a\/0xb40\n         mutex_lock_nested+0x1f\/0x30\n         kvm_dev_ioctl+0x4fb\/0xe50 [kvm]\n         __se_sys_ioctl+0x7b\/0xd0\n         __x64_sys_ioctl+0x21\/0x30\n         x64_sys_call+0x15d0\/0x2e60\n         do_syscall_64+0x83\/0x160\n         entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n  -> #2 (cpu_hotplug_lock){++++}-{0:0}:\n         cpus_read_lock+0x2e\/0xb0\n         static_key_slow_inc+0x16\/0x30\n         kvm_lapic_set_base+0x6a\/0x1c0 [kvm]\n         kvm_set_apic_base+0x8f\/0xe0 [kvm]\n         kvm_set_msr_common+0x9ae\/0xf80 [kvm]\n         vmx_set_msr+0xa54\/0xbe0 [kvm_intel]\n         __kvm_set_msr+0xb6\/0x1a0 [kvm]\n         kvm_arch_vcpu_ioctl+0xeca\/0x10c0 [kvm]\n         kvm_vcpu_ioctl+0x485\/0x5b0 [kvm]\n         __se_sys_ioctl+0x7b\/0xd0\n         __x64_sys_ioctl+0x21\/0x30\n         x64_sys_call+0x15d0\/0x2e60\n         do_syscall_64+0x83\/0x160\n         entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n  -> #1 (&kvm->srcu){.+.+}-{0:0}:\n         __synchronize_srcu+0x44\/0x1a0\n      \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44d17459626052a2390457e550a12cb973506b2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4777225ec89f52bb9ca16a33cfb44c189f1b7b47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/760a196e6dcb29580e468b44b5400171dae184d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2764afce521fd9fd7a5ff6ed52ac2095873128a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47745","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.580","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: call the security_mmap_file() LSM hook in remap_file_pages()\n\nThe remap_file_pages syscall handler calls do_mmap() directly, which\ndoesn't contain the LSM security check. And if the process has called\npersonality(READ_IMPLIES_EXEC) before and remap_file_pages() is called for\nRW pages, this will actually result in remapping the pages to RWX,\nbypassing a W^X policy enforced by SELinux.\n\nSo we should check prot by security_mmap_file LSM hook in the\nremap_file_pages syscall handler before do_mmap() is called. Otherwise, it\npotentially permits an attacker to bypass a W^X policy enforced by\nSELinux.\n\nThe bypass is similar to CVE-2016-10044, which bypass the same thing via\nAIO and can be found in [1].\n\nThe PoC:\n\n$ cat > test.c\n\nint main(void) {\n\tsize_t pagesz = sysconf(_SC_PAGE_SIZE);\n\tint mfd = syscall(SYS_memfd_create, \"test\", 0);\n\tconst char *buf = mmap(NULL, 4 * pagesz, PROT_READ | PROT_WRITE,\n\t\tMAP_SHARED, mfd, 0);\n\tunsigned int old = syscall(SYS_personality, 0xffffffff);\n\tsyscall(SYS_personality, READ_IMPLIES_EXEC | old);\n\tsyscall(SYS_remap_file_pages, buf, pagesz, 0, 2, 0);\n\tsyscall(SYS_personality, old);\n\t\/\/ show the RWX page exists even if W^X policy is enforced\n\tint fd = open(\"\/proc\/self\/maps\", O_RDONLY);\n\tunsigned char buf2[1024];\n\twhile (1) {\n\t\tint ret = read(fd, buf2, 1024);\n\t\tif (ret <= 0) break;\n\t\twrite(1, buf2, ret);\n\t}\n\tclose(fd);\n}\n\n$ gcc test.c -o test\n$ .\/test | grep rwx\n7f1836c34000-7f1836c35000 rwxs 00002000 00:01 2050 \/memfd:test (deleted)\n\n[PM: subject line tweaks]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3393fddbfa947c8e1fdcc4509226905ffffd8b89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d3a4ad57c57227c3b0fd6cd4188b2a5ebd6178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce14f38d6ee9e88e37ec28427b4b93a7c33c70d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea7e2d5e49c05e5db1922387b09ca74aa40f46e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47746","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.667","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfuse: use exclusive lock when FUSE_I_CACHE_IO_MODE is set\n\nThis may be a typo. The comment has said shared locks are\nnot allowed when this bit is set. If using shared lock, the\nwait in `fuse_file_cached_io_open` may be forever."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f3d8ff457982f4055fe8f7bf19d3821ba22c376","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e181761ffec67307157a7e8a78d58ee4130cf00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa4890bd8237e5a1e7428acd7328729db2703b23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47747","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.753","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: seeq: Fix use after free vulnerability in ether3 Driver Due to Race Condition\n\nIn the ether3_probe function, a timer is initialized with a callback\nfunction ether3_ledoff, bound to &prev(dev)->timer. Once the timer is\nstarted, there is a risk of a race condition if the module or device\nis removed, triggering the ether3_remove function to perform cleanup.\nThe sequence of operations that may lead to a UAF bug is as follows:\n\nCPU0                                    CPU1\n\n                      |  ether3_ledoff\nether3_remove         |\n  free_netdev(dev);   |\n  put_devic           |\n  kfree(dev);         |\n |  ether3_outw(priv(dev)->regs.config2 |= CFG2_CTRLO, REG_CONFIG2);\n                      | \/\/ use dev\n\nFix it by ensuring that the timer is canceled before proceeding with\nthe cleanup in ether3_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c57d61a43293252ad732007c7070fdb112545fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/338a0582b28e69460df03af50e938b86b4206353","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/516dbc6d16637430808c39568cbb6b841d32b55b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77a77331cef0a219b8dd91361435eeef04cb741c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/822c7bb1f6f8b0331e8d1927151faf8db3b33afd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5109b60ee4fcb2f2bb24f589575e10cc5283ad4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2abc379071881798d20e2ac1d332ad855ae22f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47748","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.857","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvhost_vdpa: assign irq bypass producer token correctly\n\nWe used to call irq_bypass_unregister_producer() in\nvhost_vdpa_setup_vq_irq() which is problematic as we don't know if the\ntoken pointer is still valid or not.\n\nActually, we use the eventfd_ctx as the token so the life cycle of the\ntoken should be bound to the VHOST_SET_VRING_CALL instead of\nvhost_vdpa_setup_vq_irq() which could be called by set_status().\n\nFixing this by setting up irq bypass producer's token when handling\nVHOST_SET_VRING_CALL and un-registering the producer before calling\nvhost_vring_ioctl() to prevent a possible use after free as eventfd\ncould have been released in vhost_vring_ioctl(). And such registering\nand unregistering will only be done if DRIVER_OK is set."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02e9e9366fefe461719da5d173385b6685f70319","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c170b1e918b9afac25e2bbd01eaa2bfc0ece8c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cf2fb51175cafe01df8c43fa15a06194a59c6e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927a2580208e0f9b0b47b08f1c802b7233a7ba3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca64edd7ae93402af2596a952e0d94d545e2b9c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec5f1b54ceb23475049ada6e7a43452cf4df88d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fae9b1776f53aab93ab345bdbf653b991aed717d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47749","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:04.950","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cxgb4: Added NULL check for lookup_atid\n\nThe lookup_atid() function can return NULL if the ATID is\ninvalid or does not exist in the identifier table, which\ncould lead to dereferencing a null pointer without a\ncheck in the `act_establish()` and `act_open_rpl()` functions.\nAdd a NULL check to prevent null pointer dereferencing.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d50ae281a1712b9b2ca72830a96b8f11882358d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39cb9f39913566ec5865581135f3e8123ad1aee1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54aaa3ed40972511e423b604324b881425b9ff1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b11318dc8a1ec565300bb1a9073095af817cc508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9c94c8ba5a713817cffd74c4bacc05187469624","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd598ac57dcae796cb58551074660c39b43fb155","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e766e6a92410ca269161de059fff0843b8ddd65f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47750","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.037","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hns: Fix Use-After-Free of rsv_qp on HIP08\n\nCurrently rsv_qp is freed before ib_unregister_device() is called\non HIP08. During the time interval, users can still dereg MR and\nrsv_qp will be used in this process, leading to a UAF. Move the\nrelease of rsv_qp after calling ib_unregister_device() to fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ccf1c75d39949d8ea043d04a2e92d7100ea723d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60595923371c2ebe7faf82536c47eb0c967e3425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2d9c5127122745da6e887f451dd248cfeffca33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dac2723d8bfa9cf5333f477741e6e5fa1ed34645","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd8489294dd2beefb70f12ec4f6132aeec61a4d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47751","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.123","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: kirin: Fix buffer overflow in kirin_pcie_parse_port()\n\nWithin kirin_pcie_parse_port(), the pcie->num_slots is compared to\npcie->gpio_id_reset size (MAX_PCI_SLOTS) which is correct and would lead\nto an overflow.\n\nThus, fix condition to pcie->num_slots + 1 >= MAX_PCI_SLOTS and move\npcie->num_slots increment below the if-statement to avoid out-of-bounds\narray access.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n[kwilczynski: commit log]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6dcc5b49d6607a741a14122bf3105f3ac50d259e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95248d7497bcbfe7deed4805469c6ff6ddd7f9d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5f795f9412854df28e66679c5e6b68b0b79c229","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeb0335971806e15ac91e838ca471936c8e7efd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c500a86693a126c9393e602741e348f80f1b0fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47752","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.203","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix H264 stateless decoder smatch warning\n\nFix a smatch static checker warning on vdec_h264_req_if.c.\nWhich leads to a kernel crash when fb is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18181b0c1c5bd43846e5e0ae3d61a4a1adceab03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7878d3a385efab560dce793b595447867fb163f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/790d1848fac5ac3b1c474f66162598ab07a20c21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6b9f971b43980de8893610f606d751131fb5d86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47753","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.283","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix VP8 stateless decoder smatch warning\n\nFix a smatch static checker warning on vdec_vp8_req_if.c.\nWhich leads to a kernel crash when fb is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3167aa42941b68405a092df114453ef0f1b09c2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35cc704622b3a9bc02a4755d5ba80238eee3cdc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b113bc7c0e83b32f4dd2d291a2b6c4803e0a2c44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbe5b7373801c261f3ea118145fbb2caac5f9324","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47754","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.377","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix H264 multi stateless decoder smatch warning\n\nFix a smatch static checker warning on vdec_h264_req_multi_if.c.\nWhich leads to a kernel crash when fb is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/301f7778263116388c20521a1a641067647ab31c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47b3b97930913ca74a595cc12bdbb650259afc6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588bcce9e64cc5138858ab562268eb3943c5b06c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9be85491619f1953b8a29590ca630be571941ffa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47755","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.467","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvdimm: Fix devs leaks in scan_labels()\n\nscan_labels() leaks memory when label scanning fails and it falls back\nto just creating a default \"seed\" namespace for userspace to configure.\nRoot can force the kernel to leak memory.\n\nAllocate the minimum resources unconditionally and release them when\nunneeded to avoid the memory leak.\n\nA kmemleak reports:\nunreferenced object 0xffff88800dda1980 (size 16):\n  comm \"kworker\/u10:5\", pid 69, jiffies 4294671781\n  hex dump (first 16 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 0):\n    [<00000000c5dea560>] __kmalloc+0x32c\/0x470\n    [<000000009ed43c83>] nd_region_register_namespaces+0x6fb\/0x1120 [libnvdimm]\n    [<000000000e07a65c>] nd_region_probe+0xfe\/0x210 [libnvdimm]\n    [<000000007b79ce5f>] nvdimm_bus_probe+0x7a\/0x1e0 [libnvdimm]\n    [<00000000a5f3da2e>] really_probe+0xc6\/0x390\n    [<00000000129e2a69>] __driver_probe_device+0x78\/0x150\n    [<000000002dfed28b>] driver_probe_device+0x1e\/0x90\n    [<00000000e7048de2>] __device_attach_driver+0x85\/0x110\n    [<0000000032dca295>] bus_for_each_drv+0x85\/0xe0\n    [<00000000391c5a7d>] __device_attach+0xbe\/0x1e0\n    [<0000000026dabec0>] bus_probe_device+0x94\/0xb0\n    [<00000000c590d936>] device_add+0x656\/0x870\n    [<000000003d69bfaa>] nd_async_device_register+0xe\/0x50 [libnvdimm]\n    [<000000003f4c52a4>] async_run_entry_fn+0x2e\/0x110\n    [<00000000e201f4b0>] process_one_work+0x1ee\/0x600\n    [<000000006d90d5a9>] worker_thread+0x183\/0x350"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18a672c62d735744c6340eb3f5e58934a5d34cf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45db20bdb5695d06478d35e05fb2550441bed890","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62c2aa6b1f565d2fc1ec11a6e9e8336ce37a6426","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/939053737edb49ba5bdc5846acb45f11d15b7ab4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdf0dfb3d183bbe0d0b6a6622c53d105074ad384","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47756","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.550","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: keystone: Fix if-statement expression in ks_pcie_quirk()\n\nThis code accidentally uses && where || was intended.  It potentially\nresults in a NULL dereference.\n\nThus, fix the if-statement expression to use the correct condition.\n\n[kwilczynski: commit log]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2171c5cb2fbc3e03af7e8116cd58736c09328655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23838bef2adb714ec37b2d6141dccf4a3a70bdef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6188a1c762eb9bbd444f47696eda77a5eae6207a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72210e52e19a27f615e0b5273d2bf012d0dc318d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c289903b7a216df5ea6e1850ddf1b958eea9921d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc5aeba07395c8dfa29bb878c8ce4d5180427221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e85ab507882db165c10a858d7f685a0a38f0312e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-47757","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.640","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential oob read in nilfs_btree_check_delete()\n\nThe function nilfs_btree_check_delete(), which checks whether degeneration\nto direct mapping occurs before deleting a b-tree entry, causes memory\naccess outside the block buffer when retrieving the maximum key if the\nroot node has no entries.\n\nThis does not usually happen because b-tree mappings with 0 child nodes\nare never created by mkfs.nilfs2 or nilfs2 itself.  However, it can happen\nif the b-tree root node read from a device is configured that way, so fix\nthis potential issue by adding a check for that case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/257f9e5185eb6de83377caea686c306e22e871f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a33e967b681e088a125b979975c93e3453e686cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8abfda768b9f33630cfbc4af6c4214f1e5681b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4cbcc64bb31e67e02940ce060cc77f7180564cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4f8554996e8ada3be872dfb8f60e93bcf15fb27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d20674f31626e0596ae4c1d9401dfb6739b81b58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9c96351aa6718b42a9f42eaf7adce0356bdb5e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49850","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.797","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: correctly handle malformed BPF_CORE_TYPE_ID_LOCAL relos\n\nIn case of malformed relocation record of kind BPF_CORE_TYPE_ID_LOCAL\nreferencing a non-existing BTF type, function bpf_core_calc_relo_insn\nwould cause a null pointer deference.\n\nFix this by adding a proper check upper in call stack, as malformed\nrelocation records could be passed from user space.\n\nSimplest reproducer is a program:\n\n    r0 = 0\n    exit\n\nWith a single relocation record:\n\n    .insn_off = 0,          \/* patch first instruction *\/\n    .type_id = 100500,      \/* this type id does not exist *\/\n    .access_str_off = 6,    \/* offset of string \"0\" *\/\n    .kind = BPF_CORE_TYPE_ID_LOCAL,\n\nSee the link for original reproducer or next commit for a test case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2288b54b96dcb55bedebcef3572bb8821fc5e708","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d2786d65aaa954ebd3fcc033ada433e10da21c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/584cd3ff792e1edbea20b2a7df55897159b0be3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc7ce14f00bcd50641f2110b7a32aa6552e0780f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e9c5b2dda29067332df2a85b0141a92b41f218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49851","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.883","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: Clean up TPM space after command failure\n\ntpm_dev_transmit prepares the TPM space before attempting command\ntransmission. However if the command fails no rollback of this\npreparation is done. This can result in transient handles being leaked\nif the device is subsequently closed with no further commands performed.\n\nFix this by flushing the space in the event of command transmission\nfailure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c9b228938e9266a1065a3f4fe5c99b7235dc439","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f9f72d843c92fb6f4ff7460d774413cde7f254c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82478cb8a23bd4f97935bbe60d64528c6d9918b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adf4ce162561222338cf2c9a2caa294527f7f721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c84ceb546f30432fccea4891163f7050f5bee5dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3aaebcbb7c6b403416f442d1de70d437ce313a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebc4e1f4492d114f9693950621b3ea42b2f82bec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49852","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:05.977","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: elx: libefc: Fix potential use after free in efc_nport_vport_del()\n\nThe kref_put() function will call nport->release if the refcount drops to\nzero.  The nport->release release function is _efc_nport_free() which frees\n\"nport\".  But then we dereference \"nport\" on the next line which is a use\nafter free.  Re-order these lines to avoid the use after free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16a570f07d870a285b0c0b0d1ca4dff79e8aa5ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e4b02fad094976763af08fec2c620f4f8edd9ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c2908985e4ae0ea1b526b3916de9e5351650908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98752fcd076a8cbc978016eae7125b4971be1eec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abc71e89170ed32ecf0a5a29f31aa711e143e941","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baeb8628ab7f4577740f00e439d3fdf7c876b0ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49853","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.083","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Fix double free in OPTEE transport\n\nChannels can be shared between protocols, avoid freeing the same channel\ndescriptors twice when unloading the stack."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6699567b0bbb378600a4dc0a1f929439a4e84a2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aef6ae124bb3cc12e34430fed91fbb7efd7a444d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7f4fc2bc101e666da649605a9ece2bd42529c7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc9543a4f2a5498a4a12d6d2427492a6f1a28056","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e98dba934b2fc587eafb83f47ad64d9053b18ae0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49854","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.203","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix uaf for accessing waker_bfqq after splitting\n\nAfter commit 42c306ed7233 (\"block, bfq: don't break merge chain in\nbfq_split_bfqq()\"), if the current procress is the last holder of bfqq,\nthe bfqq can be freed after bfq_split_bfqq(). Hence recored the bfqq and\nthen access bfqq->waker_bfqq may trigger UAF. What's more, the waker_bfqq\nmay in the merge chain of bfqq, hence just recored waker_bfqq is still\nnot safe.\n\nFix the problem by adding a helper bfq_waker_bfqq() to check if\nbfqq->waker_bfqq is in the merge chain, and current procress is the only\nholder."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0780451f03bf518bc032a7c584de8f92e2d39d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b8bda0ff17156cd3f60944527c9d8c9f99f1583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ba0403ac6447f2d63914fb760c44a3b19c44eaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63a07379fdb6c72450cb05294461c6016b8b7726","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cae58d19121a70329cf971359e2518c93fec04fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de0456460f2abf921e356ed2bd8da87a376680bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49855","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.270","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix race between timeout and normal completion\n\nIf request timetout is handled by nbd_requeue_cmd(), normal completion\nhas to be stopped for avoiding to complete this requeued request, other\nuse-after-free can be triggered.\n\nFix the race by clearing NBD_CMD_INFLIGHT in nbd_requeue_cmd(), meantime\nmake sure that cmd->lock is grabbed for clearing the flag and the\nrequeue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5236ada8ebbd9e7461f17477357582f5be4f46f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e73b946a379a1dfbb62626af93843bdfb53753d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a74c3e6c0d686c26ba2aab66d15ddb89dc139cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c25faf72d780a9c71081710cd48759d61ff6e9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9ea57c91f03bcad415e1a20113bdb2077bcf990","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49856","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.353","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/sgx: Fix deadlock in SGX NUMA node search\n\nWhen the current node doesn't have an EPC section configured by firmware\nand all other EPC sections are used up, CPU can get stuck inside the\nwhile loop that looks for an available EPC page from remote nodes\nindefinitely, leading to a soft lockup. Note how nid_of_current will\nnever be equal to nid in that while loop because nid_of_current is not\nset in sgx_numa_mask.\n\nAlso worth mentioning is that it's perfectly fine for the firmware not\nto setup an EPC section on a node. While setting up an EPC section on\neach node can enhance performance, it is not a requirement for\nfunctionality.\n\nRework the loop to start and end on *a* node that has SGX memory. This\navoids the deadlock looking for the current SGX-lacking node to show up\nin the loop when it never will."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f89fb4042c08fd143bfc28af08bf6c8a0197eea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20c96d0aaabfe361fc2a11c173968dc67feadbbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40fb64257dab507d86b5f1f2a62f3669ef0c91a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8132510c915815e6b537ab937d94ed66893bc7b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c936844010466535bd46ea4ce4656ef17653644","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb2d057539eda67ec7cfc369bf587e6518a9b99d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49857","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.447","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: set the cipher for secured NDP ranging\n\nThe cipher pointer is not set, but is derefereced trying to set its\ncontent, which leads to a NULL pointer dereference.\nFix it by pointing to the cipher parameter before dereferencing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a949075d4bbf1ca83ccdeaa6ef4ac2ce7526c5f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3322a6d6aa9bc17b395c4b38d3b97578887aa8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49858","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.543","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nefistub\/tpm: Use ACPI reclaim memory for event log to avoid corruption\n\nThe TPM event log table is a Linux specific construct, where the data\nproduced by the GetEventLog() boot service is cached in memory, and\npassed on to the OS using an EFI configuration table.\n\nThe use of EFI_LOADER_DATA here results in the region being left\nunreserved in the E820 memory map constructed by the EFI stub, and this\nis the memory description that is passed on to the incoming kernel by\nkexec, which is therefore unaware that the region should be reserved.\n\nEven though the utility of the TPM2 event log after a kexec is\nquestionable, any corruption might send the parsing code off into the\nweeds and crash the kernel. So let's use EFI_ACPI_RECLAIM_MEMORY\ninstead, which is always treated as reserved by the E820 conversion\nlogic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11690d7e76842f29b60fbb5b35bc97d206ea0e83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19fd2f2c5fb36b61506d3208474bfd8fdf1cada3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e6871a632a99d9b9e2ce3a7847acabe99e5a26e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38d9b07d99b789efb6d8dda21f1aaad636c38993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b22c038fb2757c652642933de5664da471f8cb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77d48d39e99170b528e4f2e9fc5d1d64cdedd386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f76b69ab9cf04358266e3cea5748c0c2791fbb08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49859","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.627","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to check atomic_file in f2fs ioctl interfaces\n\nSome f2fs ioctl interfaces like f2fs_ioc_set_pin_file(),\nf2fs_move_file_range(), and f2fs_defragment_range() missed to\ncheck atomic_write status, which may cause potential race issue,\nfix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10569b682ebe9c75ef06ddd322ae844e9be6374b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26b07bd2e1f124b0e430c8d250023f7205c549c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cb51731f24b216b0b87942f519f2c67a17107ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfe5c02654261bfb8bd9cb174a67f3279ea99e58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6f08c88047accc6127dddb6798a3ff11321539d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49860","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.723","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: sysfs: validate return type of _STR method\n\nOnly buffer objects are valid return values of _STR.\n\nIf something else is returned description_show() will access invalid\nmemory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cdfb9178a3bba843c95c2117c82c15f1a64b9ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b081991c4363e072e1748efed0bbec8a77daba5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bb1e7d027413835b086aed35bc3f0713bc0f72b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c8d007c14aefc3f2ddf71e4c40713733dc827be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0921ecd4ddc14646bb5511f49db4d7d3b0829f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f51e5a88f2e7224858b261546cf6b3037dfb1323","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f51f711d36e61fbb87c67b524fd200e05172668d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49861","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.800","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix helper writes to read-only maps\n\nLonial found an issue that despite user- and BPF-side frozen BPF map\n(like in case of .rodata), it was still possible to write into it from\na BPF program side through specific helpers having ARG_PTR_TO_{LONG,INT}\nas arguments.\n\nIn check_func_arg() when the argument is as mentioned, the meta->raw_mode\nis never set. Later, check_helper_mem_access(), under the case of\nPTR_TO_MAP_VALUE as register base type, it assumes BPF_READ for the\nsubsequent call to check_map_access_type() and given the BPF map is\nread-only it succeeds.\n\nThe helpers really need to be annotated as ARG_PTR_TO_{LONG,INT} | MEM_UNINIT\nwhen results are written into them as opposed to read out of them. The\nlatter indicates that it's okay to pass a pointer to uninitialized memory\nas the memory is written to anyway.\n\nHowever, ARG_PTR_TO_{LONG,INT} is a special case of ARG_PTR_TO_FIXED_SIZE_MEM\njust with additional alignment requirement. So it is better to just get\nrid of the ARG_PTR_TO_{LONG,INT} special cases altogether and reuse the\nfixed size memory types. For this, add MEM_ALIGNED to additionally ensure\nalignment given these helpers write directly into the args via *<ptr> = val.\nThe .arg*_size has been initialized reflecting the actual sizeof(*<ptr>).\n\nMEM_ALIGNED can only be used in combination with MEM_FIXED_SIZE annotated\nargument types, since in !MEM_FIXED_SIZE cases the verifier does not know\nthe buffer size a priori and therefore cannot blindly write *<ptr> = val."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e75d25133158b525e0456876e9bcfd6b2993fd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ed98ee02d1e08afee88f54baec39ea78dc8a23c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32556ce93bc45c730829083cb60f95a2728ea48b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2c8dc7e21803257e762b0bf067fd13e9c995da0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49862","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T13:15:06.893","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Undergoing Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowercap: intel_rapl: Fix off by one in get_rpi()\n\nThe rp->priv->rpi array is either rpi_msr or rpi_tpmi which have\nNR_RAPL_PRIMITIVES number of elements.  Thus the > needs to be >=\nto prevent an off by one access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/288cbc505e2046638c615c36357cb78bc9fee1e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a34f3b0d7f11fb6ed72da315fd2360abd9c0737","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/851e7f7f14a15f4e47b7d0f70d5c4a2b95b824d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f6580352a7225e619551febb83595bcb77ab17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-45309","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T15:15:03.463","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"OneDev is a Git server with CI\/CD, kanban, and packages. A vulnerability in versions prior to 11.0.9 allows unauthenticated users to read arbitrary files accessible by the OneDev server process. This issue has been fixed in version 11.0.9."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":8.7,"baseSeverity":"HIGH"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/github.com\/theonedev\/onedev\/commit\/4637aaac8c70d41aa789b7fce208b75c6a7b711f","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/theonedev\/onedev\/security\/advisories\/GHSA-7wg5-6864-v489","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-6519","sourceIdentifier":"patrick@puiterwijk.org","published":"2024-10-21T15:15:03.727","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A use-after-free vulnerability was found in the QEMU LSI53C895A SCSI Host Bus Adapter emulation. This issue can lead to a crash or VM escape."}],"metrics":{"cvssMetricV31":[{"source":"patrick@puiterwijk.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":8.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.5,"impactScore":6.0}]},"weaknesses":[{"source":"patrick@puiterwijk.org","type":"Secondary","description":[{"lang":"en","value":"CWE-416"}]}],"references":[{"url":"https:\/\/access.redhat.com\/security\/cve\/CVE-2024-6519","source":"patrick@puiterwijk.org"},{"url":"https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=2292089","source":"patrick@puiterwijk.org"},{"url":"https:\/\/www.zerodayinitiative.com\/advisories\/ZDI-24-1382\/","source":"patrick@puiterwijk.org"}]}},{"cve":{"id":"CVE-2024-8305","sourceIdentifier":"cna@mongodb.com","published":"2024-10-21T15:15:04.030","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"prepareUnique index may cause secondaries to crash due to incorrect enforcement of index constraints on secondaries, where in extreme cases may cause multiple secondaries crashing leading to no primaries. This issue affects MongoDB Server v6.0 versions prior to 6.0.17, MongoDB Server v7.0 versions prior to 7.0.13 and MongoDB Server v7.3 versions prior to 7.3.4"}],"metrics":{"cvssMetricV31":[{"source":"cna@mongodb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":6.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"cna@mongodb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-1288"}]}],"references":[{"url":"https:\/\/jira.mongodb.org\/browse\/SERVER-92382","source":"cna@mongodb.com"}]}},{"cve":{"id":"CVE-2024-48930","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T16:15:03.607","lastModified":"2024-10-21T17:09:45.417","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"secp256k1-node is a Node.js binding for an Optimized C library for EC operations on curve secp256k1. In `elliptic`-based version, `loadUncompressedPublicKey` has a check that the public key is on the curve. Prior to versions 5.0.1, 4.0.4, and 3.8.1, however, `loadCompressedPublicKey` is missing that check. That allows the attacker to use public keys on low-cardinality curves to extract enough information to fully restore the private key from as little as 11 ECDH sessions, and very cheaply on compute power. Other operations on public keys are also affected, including e.g. `publicKeyVerify()` incorrectly returning `true` on those invalid keys, and e.g. `publicKeyTweakMul()` also returning predictable outcomes allowing to restore the tweak. Versions 5.0.1, 4.0.4, and 3.8.1 contain a fix for the issue."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":8.7,"baseSeverity":"HIGH"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-354"}]}],"references":[{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/blob\/6d3474b81d073cc9c8cc8cfadb580c84f8df5248\/lib\/elliptic.js#L17-L19","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/blob\/6d3474b81d073cc9c8cc8cfadb580c84f8df5248\/lib\/elliptic.js#L37-L39","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/commit\/8bd6446e000fa59df3cda0ae3e424300747ea5ed","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/commit\/9a15fff274f83a6ec7f675f1121babcc0c42292f","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/commit\/e256905ee649a7caacc251f7c964667195a52221","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/cryptocoinjs\/secp256k1-node\/security\/advisories\/GHSA-584q-6j8j-r5pm","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-40746","sourceIdentifier":"security@joomla.org","published":"2024-10-21T17:15:03.330","lastModified":"2024-10-21T17:15:03.330","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A stored cross-site scripting (XSS) vulnerability in HikaShop Joomla Component < 5.1.1 allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload in the `description` parameter of any product. The `description `parameter is not sanitised in the backend."}],"metrics":{},"weaknesses":[{"source":"security@joomla.org","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.hikashop.com\/","source":"security@joomla.org"}]}},{"cve":{"id":"CVE-2024-49366","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T17:15:03.567","lastModified":"2024-10-21T17:15:03.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Nginx UI is a web user interface for the Nginx web server. Nginx UI v2.0.0-beta.35 and earlier gets the value from the json field without verification, and can construct a value value in the form of `..\/..\/`. Arbitrary files can be written to the server, which may result in loss of permissions. Version 2.0.0-beta.26 fixes the issue."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:H\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"HIGH","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"PROOF-OF-CONCEPT","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":7.7,"baseSeverity":"HIGH"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/releases\/tag\/v2.0.0-beta.36","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/security\/advisories\/GHSA-prv4-rx44-f7jr","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-49367","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T17:15:03.783","lastModified":"2024-10-21T17:15:03.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Nginx UI is a web user interface for the Nginx web server. Prior to version 2.0.0-beta.36, the log path of nginxui is controllable. This issue can be combined with the directory traversal at `\/api\/configs` to read directories and file contents on the server. Version 2.0.0-beta.36 fixes the issue."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"PROOF-OF-CONCEPT","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":5.5,"baseSeverity":"MEDIUM"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/releases\/tag\/v2.0.0-beta.36","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/security\/advisories\/GHSA-gr34-jgw4-7j4m","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-49368","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T17:15:03.960","lastModified":"2024-10-21T17:15:03.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Nginx UI is a web user interface for the Nginx web server. Prior to version 2.0.0-beta.36, when Nginx UI configures logrotate, it does not verify the input and directly passes it to exec.Command, causing arbitrary command execution. Version 2.0.0-beta.36 fixes this issue."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"HIGH","vulnerableSystemAvailability":"HIGH","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"PROOF-OF-CONCEPT","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":8.9,"baseSeverity":"HIGH"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/releases\/tag\/v2.0.0-beta.36","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/0xJacky\/nginx-ui\/security\/advisories\/GHSA-66m6-27r9-77vm","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-49863","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.120","lastModified":"2024-10-21T18:15:06.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvhost\/scsi: null-ptr-dereference in vhost_scsi_get_req()\n\nSince commit 3f8ca2e115e5 (\"vhost\/scsi: Extract common handling code\nfrom control queue handler\") a null pointer dereference bug can be\ntriggered when guest sends an SCSI AN request.\n\nIn vhost_scsi_ctl_handle_vq(), `vc.target` is assigned with\n`&v_req.tmf.lun[1]` within a switch-case block and is then passed to\nvhost_scsi_get_req() which extracts `vc->req` and `tpg`. However, for\na `VIRTIO_SCSI_T_AN_*` request, tpg is not required, so `vc.target` is\nset to NULL in this branch. Later, in vhost_scsi_get_req(),\n`vc->target` is dereferenced without being checked, leading to a null\npointer dereference bug. This bug can be triggered from guest.\n\nWhen this bug occurs, the vhost_worker process is killed while holding\n`vq->mutex` and the corresponding tpg will remain occupied\nindefinitely.\n\nBelow is the KASAN report:\nOops: general protection fault, probably for non-canonical address\n0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 PID: 840 Comm: poc Not tainted 6.10.0+ #1\nHardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS\n1.16.3-debian-1.16.3-2 04\/01\/2014\nRIP: 0010:vhost_scsi_get_req+0x165\/0x3a0\nCode: 00 fc ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 2b 02 00 00\n48 b8 00 00 00 00 00 fc ff df 4d 8b 65 30 4c 89 e2 48 c1 ea 03 <0f> b6\n04 02 4c 89 e2 83 e2 07 38 d0 7f 08 84 c0 0f 85 be 01 00 00\nRSP: 0018:ffff888017affb50 EFLAGS: 00010246\nRAX: dffffc0000000000 RBX: ffff88801b000000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888017affcb8\nRBP: ffff888017affb80 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000\nR13: ffff888017affc88 R14: ffff888017affd1c R15: ffff888017993000\nFS:  000055556e076500(0000) GS:ffff88806b100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000200027c0 CR3: 0000000010ed0004 CR4: 0000000000370ef0\nCall Trace:\n <TASK>\n ? show_regs+0x86\/0xa0\n ? die_addr+0x4b\/0xd0\n ? exc_general_protection+0x163\/0x260\n ? asm_exc_general_protection+0x27\/0x30\n ? vhost_scsi_get_req+0x165\/0x3a0\n vhost_scsi_ctl_handle_vq+0x2a4\/0xca0\n ? __pfx_vhost_scsi_ctl_handle_vq+0x10\/0x10\n ? __switch_to+0x721\/0xeb0\n ? __schedule+0xda5\/0x5710\n ? __kasan_check_write+0x14\/0x30\n ? _raw_spin_lock+0x82\/0xf0\n vhost_scsi_ctl_handle_kick+0x52\/0x90\n vhost_run_work_list+0x134\/0x1b0\n vhost_task_fn+0x121\/0x350\n...\n <\/TASK>\n---[ end trace 0000000000000000 ]---\n\nLet's add a check in vhost_scsi_get_req.\n\n[whitespace fixes]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00fb5b23e1c9cdbe496f5cd6b40367cb895f6c93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/221af82f606d928ccef19a16d35633c63026f1be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25613e6d9841a1f9fb985be90df921fa99f800de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46128370a72c431df733af5ebb065c4d48c9ad39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61517f33e76d2c5247c1e61e668693afe5b67e6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6592347f06e2b19a624270a85ad4b3ae48c3b241","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ace9c778a214da9c98d7b69d904d1b0816f4f681","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49864","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.203","lastModified":"2024-10-21T18:15:06.203","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix a race between socket set up and I\/O thread creation\n\nIn rxrpc_open_socket(), it sets up the socket and then sets up the I\/O\nthread that will handle it.  This is a problem, however, as there's a gap\nbetween the two phases in which a packet may come into rxrpc_encap_rcv()\nfrom the UDP packet but we oops when trying to wake the not-yet created I\/O\nthread.\n\nAs a quick fix, just make rxrpc_encap_rcv() discard the packet if there's\nno I\/O thread yet.\n\nA better, but more intrusive fix would perhaps be to rearrange things such\nthat the socket creation is done by the I\/O thread."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/56e415202b8a17de6496f4023e545fcb66f118ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc212465326e8587325f520a052346f0b57360e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c64f5fc95e9612fdf75587c8e21e494e614c18e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdf4bbbdb956d7426f687f38757ebca2a2759a0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49865","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.270","lastModified":"2024-10-21T18:15:06.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/vm: move xa_alloc to prevent UAF\n\nEvil user can guess the next id of the vm before the ioctl completes and\nthen call vm destroy ioctl to trigger UAF since create ioctl is still\nreferencing the same vm. Move the xa_alloc all the way to the end to\nprevent this.\n\nv2:\n - Rebase\n\n(cherry picked from commit dcfd3971327f3ee92765154baebbaece833d3ca9)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09cf8901fc0225898311b375cfcc67bae37ed5da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74231870cf4976f69e83aa24f48edb16619f652f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49866","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.330","lastModified":"2024-10-21T18:15:06.330","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing\/timerlat: Fix a race during cpuhp processing\n\nThere is another found exception that the \"timerlat\/1\" thread was\nscheduled on CPU0, and lead to timer corruption finally:\n\n```\nODEBUG: init active (active state 0) object: ffff888237c2e108 object type: hrtimer hint: timerlat_irq+0x0\/0x220\nWARNING: CPU: 0 PID: 426 at lib\/debugobjects.c:518 debug_print_object+0x7d\/0xb0\nModules linked in:\nCPU: 0 UID: 0 PID: 426 Comm: timerlat\/1 Not tainted 6.11.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04\/01\/2014\nRIP: 0010:debug_print_object+0x7d\/0xb0\n...\nCall Trace:\n <TASK>\n ? __warn+0x7c\/0x110\n ? debug_print_object+0x7d\/0xb0\n ? report_bug+0xf1\/0x1d0\n ? prb_read_valid+0x17\/0x20\n ? handle_bug+0x3f\/0x70\n ? exc_invalid_op+0x13\/0x60\n ? asm_exc_invalid_op+0x16\/0x20\n ? debug_print_object+0x7d\/0xb0\n ? debug_print_object+0x7d\/0xb0\n ? __pfx_timerlat_irq+0x10\/0x10\n __debug_object_init+0x110\/0x150\n hrtimer_init+0x1d\/0x60\n timerlat_main+0xab\/0x2d0\n ? __pfx_timerlat_main+0x10\/0x10\n kthread+0xb7\/0xe0\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x2d\/0x40\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n```\n\nAfter tracing the scheduling event, it was discovered that the migration\nof the \"timerlat\/1\" thread was performed during thread creation. Further\nanalysis confirmed that it is because the CPU online processing for\nosnoise is implemented through workers, which is asynchronous with the\noffline processing. When the worker was scheduled to create a thread, the\nCPU may has already been removed from the cpu_online_mask during the offline\nprocess, resulting in the inability to select the right CPU:\n\nT1                       | T2\n[CPUHP_ONLINE]           | cpu_device_down()\nosnoise_hotplug_workfn() |\n                         |     cpus_write_lock()\n                         |     takedown_cpu(1)\n                         |     cpus_write_unlock()\n[CPUHP_OFFLINE]          |\n    cpus_read_lock()     |\n    start_kthread(1)     |\n    cpus_read_unlock()   |\n\nTo fix this, skip online processing if the CPU is already offline."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/322920b53dc11f9c2b33397eb3ae5bc6a175b60d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/829e0c9f0855f26b3ae830d17b24aec103f7e915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0d9c0cd5856191e095cf43a2e141b73945b7716","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6e9849063a6c8f4cb2f652a437e44e3ed24356c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce25f33ba89d6eefef64157655d318444580fa14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f72b451dc75578f644a3019c1489e9ae2c14e6c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49867","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.403","lastModified":"2024-10-21T18:15:06.403","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: wait for fixup workers before stopping cleaner kthread during umount\n\nDuring unmount, at close_ctree(), we have the following steps in this order:\n\n1) Park the cleaner kthread - this doesn't destroy the kthread, it basically\n   halts its execution (wake ups against it work but do nothing);\n\n2) We stop the cleaner kthread - this results in freeing the respective\n   struct task_struct;\n\n3) We call btrfs_stop_all_workers() which waits for any jobs running in all\n   the work queues and then free the work queues.\n\nSyzbot reported a case where a fixup worker resulted in a crash when doing\na delayed iput on its inode while attempting to wake up the cleaner at\nbtrfs_add_delayed_iput(), because the task_struct of the cleaner kthread\nwas already freed. This can happen during unmount because we don't wait\nfor any fixup workers still running before we call kthread_stop() against\nthe cleaner kthread, which stops and free all its resources.\n\nFix this by waiting for any fixup workers at close_ctree() before we call\nkthread_stop() against the cleaner and run pending delayed iputs.\n\nThe stack traces reported by syzbot were the following:\n\n  BUG: KASAN: slab-use-after-free in __lock_acquire+0x77\/0x2050 kernel\/locking\/lockdep.c:5065\n  Read of size 8 at addr ffff8880272a8a18 by task kworker\/u8:3\/52\n\n  CPU: 1 UID: 0 PID: 52 Comm: kworker\/u8:3 Not tainted 6.12.0-rc1-syzkaller #0\n  Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\n  Workqueue: btrfs-fixup btrfs_work_helper\n  Call Trace:\n   <TASK>\n   __dump_stack lib\/dump_stack.c:94 [inline]\n   dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n   print_address_description mm\/kasan\/report.c:377 [inline]\n   print_report+0x169\/0x550 mm\/kasan\/report.c:488\n   kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n   __lock_acquire+0x77\/0x2050 kernel\/locking\/lockdep.c:5065\n   lock_acquire+0x1ed\/0x550 kernel\/locking\/lockdep.c:5825\n   __raw_spin_lock_irqsave include\/linux\/spinlock_api_smp.h:110 [inline]\n   _raw_spin_lock_irqsave+0xd5\/0x120 kernel\/locking\/spinlock.c:162\n   class_raw_spinlock_irqsave_constructor include\/linux\/spinlock.h:551 [inline]\n   try_to_wake_up+0xb0\/0x1480 kernel\/sched\/core.c:4154\n   btrfs_writepage_fixup_worker+0xc16\/0xdf0 fs\/btrfs\/inode.c:2842\n   btrfs_work_helper+0x390\/0xc50 fs\/btrfs\/async-thread.c:314\n   process_one_work kernel\/workqueue.c:3229 [inline]\n   process_scheduled_works+0xa63\/0x1850 kernel\/workqueue.c:3310\n   worker_thread+0x870\/0xd30 kernel\/workqueue.c:3391\n   kthread+0x2f0\/0x390 kernel\/kthread.c:389\n   ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n   ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n   <\/TASK>\n\n  Allocated by task 2:\n   kasan_save_stack mm\/kasan\/common.c:47 [inline]\n   kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n   unpoison_slab_object mm\/kasan\/common.c:319 [inline]\n   __kasan_slab_alloc+0x66\/0x80 mm\/kasan\/common.c:345\n   kasan_slab_alloc include\/linux\/kasan.h:247 [inline]\n   slab_post_alloc_hook mm\/slub.c:4086 [inline]\n   slab_alloc_node mm\/slub.c:4135 [inline]\n   kmem_cache_alloc_node_noprof+0x16b\/0x320 mm\/slub.c:4187\n   alloc_task_struct_node kernel\/fork.c:180 [inline]\n   dup_task_struct+0x57\/0x8c0 kernel\/fork.c:1107\n   copy_process+0x5d1\/0x3d50 kernel\/fork.c:2206\n   kernel_clone+0x223\/0x880 kernel\/fork.c:2787\n   kernel_thread+0x1bc\/0x240 kernel\/fork.c:2849\n   create_kthread kernel\/kthread.c:412 [inline]\n   kthreadd+0x60d\/0x810 kernel\/kthread.c:765\n   ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n   ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n\n  Freed by task 61:\n   kasan_save_stack mm\/kasan\/common.c:47 [inline]\n   kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n   kasan_save_free_info+0x40\/0x50 mm\/kasan\/generic.c:579\n   poison_slab_object mm\/kasan\/common.c:247 [inline]\n   __kasan_slab_free+0x59\/0x70 mm\/kasan\/common.c:264\n   kasan_slab_free include\/linux\/kasan.h:230 [inline]\n   slab_free_h\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41fd1e94066a815a7ab0a7025359e9b40e4b3576","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c98fe0dfa2ae83c4631699695506d8941db4bfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65d11eb276836d49003a8060cf31fa2284ad1047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70b60c8d9b42763d6629e44f448aa5d8ae477d61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9da40aea63f8769f28afb91aea0fac4cf6fbbb65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf0de0f9a0544c11f96f93206da04ab87dcea1f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed87190e9d9c80aad220fb6b0b03a84d22e2c95b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49868","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:06.623","lastModified":"2024-10-21T18:15:06.623","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix a NULL pointer dereference when failed to start a new trasacntion\n\n[BUG]\nSyzbot reported a NULL pointer dereference with the following crash:\n\n  FAULT_INJECTION: forcing a failure.\n   start_transaction+0x830\/0x1670 fs\/btrfs\/transaction.c:676\n   prepare_to_relocate+0x31f\/0x4c0 fs\/btrfs\/relocation.c:3642\n   relocate_block_group+0x169\/0xd20 fs\/btrfs\/relocation.c:3678\n  ...\n  BTRFS info (device loop0): balance: ended with status: -12\n  Oops: general protection fault, probably for non-canonical address 0xdffffc00000000cc: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  KASAN: null-ptr-deref in range [0x0000000000000660-0x0000000000000667]\n  RIP: 0010:btrfs_update_reloc_root+0x362\/0xa80 fs\/btrfs\/relocation.c:926\n  Call Trace:\n   <TASK>\n   commit_fs_roots+0x2ee\/0x720 fs\/btrfs\/transaction.c:1496\n   btrfs_commit_transaction+0xfaf\/0x3740 fs\/btrfs\/transaction.c:2430\n   del_balance_item fs\/btrfs\/volumes.c:3678 [inline]\n   reset_balance_state+0x25e\/0x3c0 fs\/btrfs\/volumes.c:3742\n   btrfs_balance+0xead\/0x10c0 fs\/btrfs\/volumes.c:4574\n   btrfs_ioctl_balance+0x493\/0x7c0 fs\/btrfs\/ioctl.c:3673\n   vfs_ioctl fs\/ioctl.c:51 [inline]\n   __do_sys_ioctl fs\/ioctl.c:907 [inline]\n   __se_sys_ioctl+0xf9\/0x170 fs\/ioctl.c:893\n   do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n   do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\n[CAUSE]\nThe allocation failure happens at the start_transaction() inside\nprepare_to_relocate(), and during the error handling we call\nunset_reloc_control(), which makes fs_info->balance_ctl to be NULL.\n\nThen we continue the error path cleanup in btrfs_balance() by calling\nreset_balance_state() which will call del_balance_item() to fully delete\nthe balance item in the root tree.\n\nHowever during the small window between set_reloc_contrl() and\nunset_reloc_control(), we can have a subvolume tree update and created a\nreloc_root for that subvolume.\n\nThen we go into the final btrfs_commit_transaction() of\ndel_balance_item(), and into btrfs_update_reloc_root() inside\ncommit_fs_roots().\n\nThat function checks if fs_info->reloc_ctl is in the merge_reloc_tree\nstage, but since fs_info->reloc_ctl is NULL, it results a NULL pointer\ndereference.\n\n[FIX]\nJust add extra check on fs_info->reloc_ctl inside\nbtrfs_update_reloc_root(), before checking\nfs_info->reloc_ctl->merge_reloc_tree.\n\nThat DEAD_RELOC_TREE handling is to prevent further modification to the\nreloc tree during merge stage, but since there is no reloc_ctl at all,\nwe do not need to bother that."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37fee9c220b92c3b7bf22b51c51dde5364e7590b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39356ec0e319ed07627b3a0f402d0608546509e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ad0c5868f2f0418619089513d95230c66cb7eb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b47f49e83197e8dffd023ec568403bcdbb774b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d13249c0df7aab885acb149695f82c54c0822a70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d73d48acf36f57362df7e4f9d76568168bf5e944","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc02c1440705e3451abd1c2c8114a5c1bb188e9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49869","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.340","lastModified":"2024-10-21T18:15:08.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: send: fix buffer overflow detection when copying path to cache entry\n\nStarting with commit c0247d289e73 (\"btrfs: send: annotate struct\nname_cache_entry with __counted_by()\") we annotated the variable length\narray \"name\" from the name_cache_entry structure with __counted_by() to\nimprove overflow detection. However that alone was not correct, because\nthe length of that array does not match the \"name_len\" field - it matches\nthat plus 1 to include the NUL string terminator, so that makes a\nfortified kernel think there's an overflow and report a splat like this:\n\n  strcpy: detected buffer overflow: 20 byte write of buffer size 19\n  WARNING: CPU: 3 PID: 3310 at __fortify_report+0x45\/0x50\n  CPU: 3 UID: 0 PID: 3310 Comm: btrfs Not tainted 6.11.0-prnet #1\n  Hardware name: CompuLab Ltd.  sbc-ihsw\/Intense-PC2 (IPC2), BIOS IPC2_3.330.7 X64 03\/15\/2018\n  RIP: 0010:__fortify_report+0x45\/0x50\n  Code: 48 8b 34 (...)\n  RSP: 0018:ffff97ebc0d6f650 EFLAGS: 00010246\n  RAX: 7749924ef60fa600 RBX: ffff8bf5446a521a RCX: 0000000000000027\n  RDX: 00000000ffffdfff RSI: ffff97ebc0d6f548 RDI: ffff8bf84e7a1cc8\n  RBP: ffff8bf548574080 R08: ffffffffa8c40e10 R09: 0000000000005ffd\n  R10: 0000000000000004 R11: ffffffffa8c70e10 R12: ffff8bf551eef400\n  R13: 0000000000000000 R14: 0000000000000013 R15: 00000000000003a8\n  FS:  00007fae144de8c0(0000) GS:ffff8bf84e780000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fae14691690 CR3: 00000001027a2003 CR4: 00000000001706f0\n  Call Trace:\n   <TASK>\n   ? __warn+0x12a\/0x1d0\n   ? __fortify_report+0x45\/0x50\n   ? report_bug+0x154\/0x1c0\n   ? handle_bug+0x42\/0x70\n   ? exc_invalid_op+0x1a\/0x50\n   ? asm_exc_invalid_op+0x1a\/0x20\n   ? __fortify_report+0x45\/0x50\n   __fortify_panic+0x9\/0x10\n  __get_cur_name_and_parent+0x3bc\/0x3c0\n   get_cur_path+0x207\/0x3b0\n   send_extent_data+0x709\/0x10d0\n   ? find_parent_nodes+0x22df\/0x25d0\n   ? mas_nomem+0x13\/0x90\n   ? mtree_insert_range+0xa5\/0x110\n   ? btrfs_lru_cache_store+0x5f\/0x1e0\n   ? iterate_extent_inodes+0x52d\/0x5a0\n   process_extent+0xa96\/0x11a0\n   ? __pfx_lookup_backref_cache+0x10\/0x10\n   ? __pfx_store_backref_cache+0x10\/0x10\n   ? __pfx_iterate_backrefs+0x10\/0x10\n   ? __pfx_check_extent_item+0x10\/0x10\n   changed_cb+0x6fa\/0x930\n   ? tree_advance+0x362\/0x390\n   ? memcmp_extent_buffer+0xd7\/0x160\n   send_subvol+0xf0a\/0x1520\n   btrfs_ioctl_send+0x106b\/0x11d0\n   ? __pfx___clone_root_cmp_sort+0x10\/0x10\n   _btrfs_ioctl_send+0x1ac\/0x240\n   btrfs_ioctl+0x75b\/0x850\n   __se_sys_ioctl+0xca\/0x150\n   do_syscall_64+0x85\/0x160\n   ? __count_memcg_events+0x69\/0x100\n   ? handle_mm_fault+0x1327\/0x15c0\n   ? __se_sys_rt_sigprocmask+0xf1\/0x180\n   ? syscall_exit_to_user_mode+0x75\/0xa0\n   ? do_syscall_64+0x91\/0x160\n   ? do_user_addr_fault+0x21d\/0x630\n  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n  RIP: 0033:0x7fae145eeb4f\n  Code: 00 48 89 (...)\n  RSP: 002b:00007ffdf1cb09b0 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n  RAX: ffffffffffffffda RBX: 0000000000000004 RCX: 00007fae145eeb4f\n  RDX: 00007ffdf1cb0ad0 RSI: 0000000040489426 RDI: 0000000000000004\n  RBP: 00000000000078fe R08: 00007fae144006c0 R09: 00007ffdf1cb0927\n  R10: 0000000000000008 R11: 0000000000000246 R12: 00007ffdf1cb1ce8\n  R13: 0000000000000003 R14: 000055c499fab2e0 R15: 0000000000000004\n   <\/TASK>\n\nFix this by not storing the NUL string terminator since we don't actually\nneed it for name cache entries, this way \"name_len\" corresponds to the\nactual size of the \"name\" array. This requires marking the \"name\" array\nfield with __nonstring and using memcpy() instead of strcpy() as\nrecommended by the guidelines at:\n\n   https:\/\/github.com\/KSPP\/linux\/issues\/90"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/843738ede6cb8b959fb22591fcbabe8b456d7216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96c6ca71572a3556ed0c37237305657ff47174b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49870","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.413","lastModified":"2024-10-21T18:15:08.413","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: fix dentry leak in cachefiles_open_file()\n\nA dentry leak may be caused when a lookup cookie and a cull are concurrent:\n\n            P1             |             P2\n-----------------------------------------------------------\ncachefiles_lookup_cookie\n  cachefiles_look_up_object\n    lookup_one_positive_unlocked\n     \/\/ get dentry\n                            cachefiles_cull\n                              inode->i_flags |= S_KERNEL_FILE;\n    cachefiles_open_file\n      cachefiles_mark_inode_in_use\n        __cachefiles_mark_inode_in_use\n          can_use = false\n          if (!(inode->i_flags & S_KERNEL_FILE))\n            can_use = true\n\t  return false\n        return false\n        \/\/ Returns an error but doesn't put dentry\n\nAfter that the following WARNING will be triggered when the backend folder\nis umounted:\n\n==================================================================\nBUG: Dentry 000000008ad87947{i=7a,n=Dx_1_1.img}  still in use (1) [unmount of ext4 sda]\nWARNING: CPU: 4 PID: 359261 at fs\/dcache.c:1767 umount_check+0x5d\/0x70\nCPU: 4 PID: 359261 Comm: umount Not tainted 6.6.0-dirty #25\nRIP: 0010:umount_check+0x5d\/0x70\nCall Trace:\n <TASK>\n d_walk+0xda\/0x2b0\n do_one_tree+0x20\/0x40\n shrink_dcache_for_umount+0x2c\/0x90\n generic_shutdown_super+0x20\/0x160\n kill_block_super+0x1a\/0x40\n ext4_kill_sb+0x22\/0x40\n deactivate_locked_super+0x35\/0x80\n cleanup_mnt+0x104\/0x160\n==================================================================\n\nWhether cachefiles_open_file() returns true or false, the reference count\nobtained by lookup_positive_unlocked() in cachefiles_look_up_object()\nshould be released.\n\nTherefore release that reference count in cachefiles_look_up_object() to\nfix the above issue and simplify the code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa2382f97421978514a419c93054eca69f5247b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7d10fa7d7691558ff967668494672415f5fa151","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d32ff64c872d7e08e893c32ba6a2374583444410","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da6ef2dffe6056aad3435e6cf7c6471c2a62187c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4a28489b310339b2b8187bec0a437709be551c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49871","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.500","lastModified":"2024-10-21T18:15:08.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: adp5589-keys - fix NULL pointer dereference\n\nWe register a devm action to call adp5589_clear_config() and then pass\nthe i2c client as argument so that we can call i2c_get_clientdata() in\norder to get our device object. However, i2c_set_clientdata() is only\nbeing set at the end of the probe function which means that we'll get a\nNULL pointer dereference in case the probe function fails early."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/122b160561f6429701a0559a0f39b0ae309488c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34e304cc53ae5d3c8e3f08b41dd11e0d4f3e01ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4449fedb8a710043fc0925409eba844c192d4337","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c3f04223aaf82489472d614c6decee5a1ce8d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a38791ee79bd17d225c15a6d1479448be127a59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5cc65f973661241e4a2b7390b429aa7b330c69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49872","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.587","lastModified":"2024-10-21T18:15:08.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/gup: fix memfd_pin_folios alloc race panic\n\nIf memfd_pin_folios tries to create a hugetlb page, but someone else\nalready did, then folio gets the value -EEXIST here:\n\n        folio = memfd_alloc_folio(memfd, start_idx);\n        if (IS_ERR(folio)) {\n                ret = PTR_ERR(folio);\n                if (ret != -EEXIST)\n                        goto err;\n\nthen on the next trip through the \"while start_idx\" loop we panic here:\n\n        if (folio) {\n                folio_put(folio);\n\nTo fix, set the folio to NULL on error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ce645b9fdc78ec5d28067286e92871ddae6817d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e28f39b359c0cfdcc011603e51187085a5f1e5e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49873","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.763","lastModified":"2024-10-21T18:15:08.763","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/filemap: fix filemap_get_folios_contig THP panic\n\nPatch series \"memfd-pin huge page fixes\".\n\nFix multiple bugs that occur when using memfd_pin_folios with hugetlb\npages and THP.  The hugetlb bugs only bite when the page is not yet\nfaulted in when memfd_pin_folios is called.  The THP bug bites when the\nstarting offset passed to memfd_pin_folios is not huge page aligned.  See\nthe commit messages for details.\n\n\nThis patch (of 5):\n\nmemfd_pin_folios on memory backed by THP panics if the requested start\noffset is not huge page aligned:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000036\nRIP: 0010:filemap_get_folios_contig+0xdf\/0x290\nRSP: 0018:ffffc9002092fbe8 EFLAGS: 00010202\nRAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000002\n\nThe fault occurs here, because xas_load returns a folio with value 2:\n\n    filemap_get_folios_contig()\n        for (folio = xas_load(&xas); folio && xas.xa_index <= end;\n                        folio = xas_next(&xas)) {\n                ...\n                if (!folio_try_get(folio))   <-- BOOM\n\n\"2\" is an xarray sibling entry.  We get it because memfd_pin_folios does\nnot round the indices passed to filemap_get_folios_contig to huge page\nboundaries for THP, so we load from the middle of a huge page range see a\nsibling.  (It does round for hugetlbfs, at the is_file_hugepages test).\n\nTo fix, if the folio is a sibling, then return the next index as the\nstarting point for the next call to filemap_get_folios_contig."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/570dd14bfecf281fa467c80f8ec92b26370ee36a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c225c4f6056b46a8a5bf2ed35abf17a2d6887691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49874","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:08.983","lastModified":"2024-10-21T18:15:08.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: svc: Fix use after free vulnerability in svc_i3c_master Driver Due to Race Condition\n\nIn the svc_i3c_master_probe function, &master->hj_work is bound with\nsvc_i3c_master_hj_work, &master->ibi_work is bound with\nsvc_i3c_master_ibi_work. And svc_i3c_master_ibi_work  can start the\nhj_work, svc_i3c_master_irq_handler can start the ibi_work.\n\nIf we remove the module which will call svc_i3c_master_remove to\nmake cleanup, it will free master->base through i3c_master_unregister\nwhile the work mentioned above will be used. The sequence of operations\nthat may lead to a UAF bug is as follows:\n\nCPU0                                         CPU1\n\n                                    | svc_i3c_master_hj_work\nsvc_i3c_master_remove               |\ni3c_master_unregister(&master->base)|\ndevice_unregister(&master->dev)     |\ndevice_release                      |\n\/\/free master->base                 |\n                                    | i3c_master_do_daa(&master->base)\n                                    | \/\/use master->base\n\nFix it by ensuring that the work is canceled before proceeding with the\ncleanup in svc_i3c_master_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27b55724d3f781dd6e635e89dc6e2fd78fa81a00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4318998892bf8fe99f97bea18c37ae7b685af75a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ac637122930cc4ab7e2c22e364cf3aaf96b05b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61850725779709369c7e907ae8c7c75dc7cec4f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:09.183","lastModified":"2024-10-21T18:15:09.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: map the EBADMSG to nfserr_io to avoid warning\n\nExt4 will throw -EBADMSG through ext4_readdir when a checksum error\noccurs, resulting in the following WARNING.\n\nFix it by mapping EBADMSG to nfserr_io.\n\nnfsd_buffered_readdir\n iterate_dir \/\/ -EBADMSG -74\n  ext4_readdir \/\/ .iterate_shared\n   ext4_dx_readdir\n    ext4_htree_fill_tree\n     htree_dirblock_to_tree\n      ext4_read_dirblock\n       __ext4_read_dirblock\n        ext4_dirblock_csum_verify\n         warn_no_space_for_csum\n          __warn_no_space_for_csum\n        return ERR_PTR(-EFSBADCRC) \/\/ -EBADMSG -74\n nfserrno \/\/ WARNING\n\n[  161.115610] ------------[ cut here ]------------\n[  161.116465] nfsd: non-standard errno: -74\n[  161.117315] WARNING: CPU: 1 PID: 780 at fs\/nfsd\/nfsproc.c:878 nfserrno+0x9d\/0xd0\n[  161.118596] Modules linked in:\n[  161.119243] CPU: 1 PID: 780 Comm: nfsd Not tainted 5.10.0-00014-g79679361fd5d #138\n[  161.120684] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qe\nmu.org 04\/01\/2014\n[  161.123601] RIP: 0010:nfserrno+0x9d\/0xd0\n[  161.124676] Code: 0f 87 da 30 dd 00 83 e3 01 b8 00 00 00 05 75 d7 44 89 ee 48 c7 c7 c0 57 24 98 89 44 24 04 c6\n 05 ce 2b 61 03 01 e8 99 20 d8 00 <0f> 0b 8b 44 24 04 eb b5 4c 89 e6 48 c7 c7 a0 6d a4 99 e8 cc 15 33\n[  161.127797] RSP: 0018:ffffc90000e2f9c0 EFLAGS: 00010286\n[  161.128794] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n[  161.130089] RDX: 1ffff1103ee16f6d RSI: 0000000000000008 RDI: fffff520001c5f2a\n[  161.131379] RBP: 0000000000000022 R08: 0000000000000001 R09: ffff8881f70c1827\n[  161.132664] R10: ffffed103ee18304 R11: 0000000000000001 R12: 0000000000000021\n[  161.133949] R13: 00000000ffffffb6 R14: ffff8881317c0000 R15: ffffc90000e2fbd8\n[  161.135244] FS:  0000000000000000(0000) GS:ffff8881f7080000(0000) knlGS:0000000000000000\n[  161.136695] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  161.137761] CR2: 00007fcaad70b348 CR3: 0000000144256006 CR4: 0000000000770ee0\n[  161.139041] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  161.140291] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  161.141519] PKRU: 55555554\n[  161.142076] Call Trace:\n[  161.142575]  ? __warn+0x9b\/0x140\n[  161.143229]  ? nfserrno+0x9d\/0xd0\n[  161.143872]  ? report_bug+0x125\/0x150\n[  161.144595]  ? handle_bug+0x41\/0x90\n[  161.145284]  ? exc_invalid_op+0x14\/0x70\n[  161.146009]  ? asm_exc_invalid_op+0x12\/0x20\n[  161.146816]  ? nfserrno+0x9d\/0xd0\n[  161.147487]  nfsd_buffered_readdir+0x28b\/0x2b0\n[  161.148333]  ? nfsd4_encode_dirent_fattr+0x380\/0x380\n[  161.149258]  ? nfsd_buffered_filldir+0xf0\/0xf0\n[  161.150093]  ? wait_for_concurrent_writes+0x170\/0x170\n[  161.151004]  ? generic_file_llseek_size+0x48\/0x160\n[  161.151895]  nfsd_readdir+0x132\/0x190\n[  161.152606]  ? nfsd4_encode_dirent_fattr+0x380\/0x380\n[  161.153516]  ? nfsd_unlink+0x380\/0x380\n[  161.154256]  ? override_creds+0x45\/0x60\n[  161.155006]  nfsd4_encode_readdir+0x21a\/0x3d0\n[  161.155850]  ? nfsd4_encode_readlink+0x210\/0x210\n[  161.156731]  ? write_bytes_to_xdr_buf+0x97\/0xe0\n[  161.157598]  ? __write_bytes_to_xdr_buf+0xd0\/0xd0\n[  161.158494]  ? lock_downgrade+0x90\/0x90\n[  161.159232]  ? nfs4svc_decode_voidarg+0x10\/0x10\n[  161.160092]  nfsd4_encode_operation+0x15a\/0x440\n[  161.160959]  nfsd4_proc_compound+0x718\/0xe90\n[  161.161818]  nfsd_dispatch+0x18e\/0x2c0\n[  161.162586]  svc_process_common+0x786\/0xc50\n[  161.163403]  ? nfsd_svc+0x380\/0x380\n[  161.164137]  ? svc_printk+0x160\/0x160\n[  161.164846]  ? svc_xprt_do_enqueue.part.0+0x365\/0x380\n[  161.165808]  ? nfsd_svc+0x380\/0x380\n[  161.166523]  ? rcu_is_watching+0x23\/0x40\n[  161.167309]  svc_process+0x1a5\/0x200\n[  161.168019]  nfsd+0x1f5\/0x380\n[  161.168663]  ? nfsd_shutdown_threads+0x260\/0x260\n[  161.169554]  kthread+0x1c4\/0x210\n[  161.170224]  ? kthread_insert_work_sanity_check+0x80\/0x80\n[  161.171246]  ret_from_fork+0x1f\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ea4333c679f333e23956de743ad17387819d3f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/340e61e44c1d2a15c42ec72ade9195ad525fd048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fe058502f8864649c3d614b06b2235223798f48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/825789ca94602543101045ad3aad19b2b60c6b2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c76005adfa93d1a027433331252422078750321f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9cfecca22a36b927a440abc6307efb9e138fed5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7d8ee9db94372b8235f5f22bb24381891594c42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:09.450","lastModified":"2024-10-21T18:15:09.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe: fix UAF around queue destruction\n\nWe currently do stuff like queuing the final destruction step on a\nrandom system wq, which will outlive the driver instance. With bad\ntiming we can teardown the driver with one or more work workqueue still\nbeing alive leading to various UAF splats. Add a fini step to ensure\nuser queues are properly torn down. At this point GuC should already be\nnuked so queue itself should no longer be referenced from hw pov.\n\nv2 (Matt B)\n - Looks much safer to use a waitqueue and then just wait for the\n   xa_array to become empty before triggering the drain.\n\n(cherry picked from commit 861108666cc0e999cffeab6aff17b662e68774e3)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/272b0e78874586d6ccae04079d75b27b47705544","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d2be279f1ca9e7288282d4214f16eea8a727cdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/421c74670b0f9d5c007f1276d3647aa58f407fde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49877","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:09.657","lastModified":"2024-10-21T18:15:09.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix possible null-ptr-deref in ocfs2_set_buffer_uptodate\n\nWhen doing cleanup, if flags without OCFS2_BH_READAHEAD, it may trigger\nNULL pointer dereference in the following ocfs2_set_buffer_uptodate() if\nbh is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01cb2e751cc61ade454c9bc1aaa2eac1f8197112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33b525cef4cff49e216e4133cc48452e11c0391e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46b1edf0536a5291a8ad2337f88c926214b209d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4846e72ab5a0726e49ad4188b9d9df091ae78c64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61b84013e560382cbe7dd56758be3154d43a3988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d52c5652e7dcb7a0648bbb8642cc3e617070ab49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df944dc46d06af65a75191183d52be017e6b9dbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49878","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:09.863","lastModified":"2024-10-21T18:15:09.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nresource: fix region_intersects() vs add_memory_driver_managed()\n\nOn a system with CXL memory, the resource tree (\/proc\/iomem) related to\nCXL memory may look like something as follows.\n\n490000000-50fffffff : CXL Window 0\n  490000000-50fffffff : region0\n    490000000-50fffffff : dax0.0\n      490000000-50fffffff : System RAM (kmem)\n\nBecause drivers\/dax\/kmem.c calls add_memory_driver_managed() during\nonlining CXL memory, which makes \"System RAM (kmem)\" a descendant of \"CXL\nWindow X\".  This confuses region_intersects(), which expects all \"System\nRAM\" resources to be at the top level of iomem_resource.  This can lead to\nbugs.\n\nFor example, when the following command line is executed to write some\nmemory in CXL memory range via \/dev\/mem,\n\n $ dd if=data of=\/dev\/mem bs=$((1 << 10)) seek=$((0x490000000 >> 10)) count=1\n dd: error writing '\/dev\/mem': Bad address\n 1+0 records in\n 0+0 records out\n 0 bytes copied, 0.0283507 s, 0.0 kB\/s\n\nthe command fails as expected.  However, the error code is wrong.  It\nshould be \"Operation not permitted\" instead of \"Bad address\".  More\nseriously, the \/dev\/mem permission checking in devmem_is_allowed() passes\nincorrectly.  Although the accessing is prevented later because ioremap()\nisn't allowed to map system RAM, it is a potential security issue.  During\ncommand executing, the following warning is reported in the kernel log for\ncalling ioremap() on system RAM.\n\n ioremap on RAM at 0x0000000490000000 - 0x0000000490000fff\n WARNING: CPU: 2 PID: 416 at arch\/x86\/mm\/ioremap.c:216 __ioremap_caller.constprop.0+0x131\/0x35d\n Call Trace:\n  memremap+0xcb\/0x184\n  xlate_dev_mem_ptr+0x25\/0x2f\n  write_mem+0x94\/0xfb\n  vfs_write+0x128\/0x26d\n  ksys_write+0xac\/0xfe\n  do_syscall_64+0x9a\/0xfd\n  entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n\nThe details of command execution process are as follows.  In the above\nresource tree, \"System RAM\" is a descendant of \"CXL Window 0\" instead of a\ntop level resource.  So, region_intersects() will report no System RAM\nresources in the CXL memory region incorrectly, because it only checks the\ntop level resources.  Consequently, devmem_is_allowed() will return 1\n(allow access via \/dev\/mem) for CXL memory region incorrectly. \nFortunately, ioremap() doesn't allow to map System RAM and reject the\naccess.\n\nSo, region_intersects() needs to be fixed to work correctly with the\nresource tree with \"System RAM\" not at top level as above.  To fix it, if\nwe found a unmatched resource in the top level, we will continue to search\nmatched resources in its descendant resources.  So, we will not miss any\nmatched resources in resource tree anymore.\n\nIn the new implementation, an example resource tree\n\n|------------- \"CXL Window 0\" ------------|\n|-- \"System RAM\" --|\n\nwill behave similar as the following fake resource tree for\nregion_intersects(, IORESOURCE_SYSTEM_RAM, ),\n\n|-- \"System RAM\" --||-- \"CXL Window 0a\" --|\n\nWhere \"CXL Window 0a\" is part of the original \"CXL Window 0\" that\nisn't covered by \"System RAM\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06ff97a20b8c9e9d256b0d2c3e87f78f8ccea3de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d5f85f1b7db79c75c9e07d6571ce2a7bdf725c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/393331e16ce205e036e58b3d8ca4ee2e635f21d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b90d2eb451b357681063ba4552b10b39d7ad885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a6fef7d22a1d952aed68584d3fcc0d018d2bdc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927abc5b7d6d2c2e936bec5a2f71d9512c5e72f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4afe4183ec77f230851ea139d91e5cf2644c68b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49879","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:10.147","lastModified":"2024-10-21T18:15:10.147","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: omapdrm: Add missing check for alloc_ordered_workqueue\n\nAs it may return NULL pointer and cause NULL pointer dereference. Add check\nfor the return value of alloc_ordered_workqueue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d71916694aceb207fefecf62dfa811ec1108bbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bda89735199683b03f55b807bd1e31a3857520b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/334de68eda2b99892ba869c15cb59bc956fd9f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b57b53e8ffcdfda87d954fc4187426a54fe75a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e60b0d3b5aa2e8d934deca9e11215af84e632bc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e794b7b9b92977365c693760a259f8eef940c536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f37a1d9e5e22d5489309c3cd2db476dcdcc6530c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49880","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:10.373","lastModified":"2024-10-21T18:15:10.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix off by one issue in alloc_flex_gd()\n\nWesley reported an issue:\n\n==================================================================\nEXT4-fs (dm-5): resizing filesystem from 7168 to 786432 blocks\n------------[ cut here ]------------\nkernel BUG at fs\/ext4\/resize.c:324!\nCPU: 9 UID: 0 PID: 3576 Comm: resize2fs Not tainted 6.11.0+ #27\nRIP: 0010:ext4_resize_fs+0x1212\/0x12d0\nCall Trace:\n __ext4_ioctl+0x4e0\/0x1800\n ext4_ioctl+0x12\/0x20\n __x64_sys_ioctl+0x99\/0xd0\n x64_sys_call+0x1206\/0x20d0\n do_syscall_64+0x72\/0x110\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n==================================================================\n\nWhile reviewing the patch, Honza found that when adjusting resize_bg in\nalloc_flex_gd(), it was possible for flex_gd->resize_bg to be bigger than\nflexbg_size.\n\nThe reproduction of the problem requires the following:\n\n o_group = flexbg_size * 2 * n;\n o_size = (o_group + 1) * group_size;\n n_group: [o_group + flexbg_size, o_group + flexbg_size * 2)\n o_size = (n_group + 1) * group_size;\n\nTake n=0,flexbg_size=16 as an example:\n\n              last:15\n|o---------------|--------------n-|\no_group:0    resize to      n_group:30\n\nThe corresponding reproducer is:\n\nimg=test.img\nrm -f $img\ntruncate -s 600M $img\nmkfs.ext4 -F $img -b 1024 -G 16 8M\ndev=`losetup -f --show $img`\nmkdir -p \/tmp\/test\nmount $dev \/tmp\/test\nresize2fs $dev 248M\n\nDelete the problematic plus 1 to fix the issue, and add a WARN_ON_ONCE()\nto prevent the issue from happening again.\n\n[ Note: another reproucer which this commit fixes is:\n\n  img=test.img\n  rm -f $img\n  truncate -s 25MiB $img\n  mkfs.ext4 -b 4096 -E nodiscard,lazy_itable_init=0,lazy_journal_init=0 $img\n  truncate -s 3GiB $img\n  dev=`losetup -f --show $img`\n  mkdir -p \/tmp\/test\n  mount $dev \/tmp\/test\n  resize2fs $dev 3G\n  umount $dev\n  losetup -d $dev\n\n  -- TYT ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d80d2b8bf613398baf7185009e35f9d0459ecb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6121258c2b33ceac3d21f6a221452692c465df88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acb559d6826116cc113598640d105094620c2526","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:10.560","lastModified":"2024-10-21T18:15:10.560","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: update orig_path in ext4_find_extent()\n\nIn ext4_find_extent(), if the path is not big enough, we free it and set\n*orig_path to NULL. But after reallocating and successfully initializing\nthe path, we don't update *orig_path, in which case the caller gets a\nvalid path but a NULL ppath, and this may cause a NULL pointer dereference\nor a path memory leak. For example:\n\next4_split_extent\n  path = *ppath = 2000\n  ext4_find_extent\n    if (depth > path[0].p_maxdepth)\n      kfree(path = 2000);\n      *orig_path = path = NULL;\n      path = kcalloc() = 3000\n  ext4_split_extent_at(*ppath = NULL)\n    path = *ppath;\n    ex = path[depth].p_ext;\n    \/\/ NULL pointer dereference!\n\n==================================================================\nBUG: kernel NULL pointer dereference, address: 0000000000000010\nCPU: 6 UID: 0 PID: 576 Comm: fsstress Not tainted 6.11.0-rc2-dirty #847\nRIP: 0010:ext4_split_extent_at+0x6d\/0x560\nCall Trace:\n <TASK>\n ext4_split_extent.isra.0+0xcb\/0x1b0\n ext4_ext_convert_to_initialized+0x168\/0x6c0\n ext4_ext_handle_unwritten_extents+0x325\/0x4d0\n ext4_ext_map_blocks+0x520\/0xdb0\n ext4_map_blocks+0x2b0\/0x690\n ext4_iomap_begin+0x20e\/0x2c0\n[...]\n==================================================================\n\nTherefore, *orig_path is updated when the extent lookup succeeds, so that\nthe caller can safely use path or *ppath."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11b230100d6801c014fab2afabc8bdea304c1b96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4b2dcace35f618fe361a87bae6f0d13af31bc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6766937d0327000ac1b87c97bbecdd28b0dd6599","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6801ed1298204d16a38571091e31178bfdc3c679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9fcb1717d75061d3653ed69365c8d45331815cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b63481b3a388ee2df9e295f97273226140422a42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f55ecc58d07a6c1f6d6d5b5af125c25f8da0bda2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49882","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:10.790","lastModified":"2024-10-21T18:15:10.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix double brelse() the buffer of the extents path\n\nIn ext4_ext_try_to_merge_up(), set path[1].p_bh to NULL after it has been\nreleased, otherwise it may be released twice. An example of what triggers\nthis is as follows:\n\n  split2    map    split1\n|--------|-------|--------|\n\next4_ext_map_blocks\n ext4_ext_handle_unwritten_extents\n  ext4_split_convert_extents\n   \/\/ path->p_depth == 0\n   ext4_split_extent\n     \/\/ 1. do split1\n     ext4_split_extent_at\n       |ext4_ext_insert_extent\n       |  ext4_ext_create_new_leaf\n       |    ext4_ext_grow_indepth\n       |      le16_add_cpu(&neh->eh_depth, 1)\n       |    ext4_find_extent\n       |      \/\/ return -ENOMEM\n       |\/\/ get error and try zeroout\n       |path = ext4_find_extent\n       |  path->p_depth = 1\n       |ext4_ext_try_to_merge\n       |  ext4_ext_try_to_merge_up\n       |    path->p_depth = 0\n       |    brelse(path[1].p_bh)  ---> not set to NULL here\n       |\/\/ zeroout success\n     \/\/ 2. update path\n     ext4_find_extent\n     \/\/ 3. do split2\n     ext4_split_extent_at\n       ext4_ext_insert_extent\n         ext4_ext_create_new_leaf\n           ext4_ext_grow_indepth\n             le16_add_cpu(&neh->eh_depth, 1)\n           ext4_find_extent\n             path[0].p_bh = NULL;\n             path->p_depth = 1\n             read_extent_tree_block  ---> return err\n             \/\/ path[1].p_bh is still the old value\n             ext4_free_ext_path\n               ext4_ext_drop_refs\n                 \/\/ path->p_depth == 1\n                 brelse(path[1].p_bh)  ---> brelse a buffer twice\n\nFinally got the following WARRNING when removing the buffer from lru:\n\n============================================\nVFS: brelse: Trying to free free buffer\nWARNING: CPU: 2 PID: 72 at fs\/buffer.c:1241 __brelse+0x58\/0x90\nCPU: 2 PID: 72 Comm: kworker\/u19:1 Not tainted 6.9.0-dirty #716\nRIP: 0010:__brelse+0x58\/0x90\nCall Trace:\n <TASK>\n __find_get_block+0x6e7\/0x810\n bdev_getblk+0x2b\/0x480\n __ext4_get_inode_loc+0x48a\/0x1240\n ext4_get_inode_loc+0xb2\/0x150\n ext4_reserve_inode_write+0xb7\/0x230\n __ext4_mark_inode_dirty+0x144\/0x6a0\n ext4_ext_insert_extent+0x9c8\/0x3230\n ext4_ext_map_blocks+0xf45\/0x2dc0\n ext4_map_blocks+0x724\/0x1700\n ext4_do_writepages+0x12d6\/0x2a70\n[...]\n============================================"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/230ee0535d01478bad9a3037292043f39b9be10b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32bbb59e3f18facd7201bef110010bf35819b8c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a69cf60660c73990c1875f94a5551600b04775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7633407ca4ab8be2916ab214eb44ccebc6a50e1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78bbc3d15b6f443acb26e94418c445bac940d414","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6c29c8f3d7cb67b505f3b2f6c242d52298d1f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcaa6c31134c0f515600111c38ed7750003e1b9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49883","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.060","lastModified":"2024-10-21T18:15:11.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: aovid use-after-free in ext4_ext_insert_extent()\n\nAs Ojaswin mentioned in Link, in ext4_ext_insert_extent(), if the path is\nreallocated in ext4_ext_create_new_leaf(), we'll use the stale path and\ncause UAF. Below is a sample trace with dummy values:\n\next4_ext_insert_extent\n  path = *ppath = 2000\n  ext4_ext_create_new_leaf(ppath)\n    ext4_find_extent(ppath)\n      path = *ppath = 2000\n      if (depth > path[0].p_maxdepth)\n            kfree(path = 2000);\n            *ppath = path = NULL;\n      path = kcalloc() = 3000\n      *ppath = 3000;\n      return path;\n  \/* here path is still 2000, UAF! *\/\n  eh = path[depth].p_hdr\n\n==================================================================\nBUG: KASAN: slab-use-after-free in ext4_ext_insert_extent+0x26d4\/0x3330\nRead of size 8 at addr ffff8881027bf7d0 by task kworker\/u36:1\/179\nCPU: 3 UID: 0 PID: 179 Comm: kworker\/u6:1 Not tainted 6.11.0-rc2-dirty #866\nCall Trace:\n <TASK>\n ext4_ext_insert_extent+0x26d4\/0x3330\n ext4_ext_map_blocks+0xe22\/0x2d40\n ext4_map_blocks+0x71e\/0x1700\n ext4_do_writepages+0x1290\/0x2800\n[...]\n\nAllocated by task 179:\n ext4_find_extent+0x81c\/0x1f70\n ext4_ext_map_blocks+0x146\/0x2d40\n ext4_map_blocks+0x71e\/0x1700\n ext4_do_writepages+0x1290\/0x2800\n ext4_writepages+0x26d\/0x4e0\n do_writepages+0x175\/0x700\n[...]\n\nFreed by task 179:\n kfree+0xcb\/0x240\n ext4_find_extent+0x7c0\/0x1f70\n ext4_ext_insert_extent+0xa26\/0x3330\n ext4_ext_map_blocks+0xe22\/0x2d40\n ext4_map_blocks+0x71e\/0x1700\n ext4_do_writepages+0x1290\/0x2800\n ext4_writepages+0x26d\/0x4e0\n do_writepages+0x175\/0x700\n[...]\n==================================================================\n\nSo use *ppath to update the path to avoid the above problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/51db04892a993cace63415be99848970a0f15ef2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e811066c5ab709b070659197dccfb80ab650ddd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8162ee5d94b8c0351be0a9321be134872a7654a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9df59009dfc6d9fc1bd9ddf6c5ab6e56d6ed887a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a164f3a432aae62ca23d03e6d926b122ee5b860d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/beb7b66fb489041c50c6473100b383f7a51648fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfed082ce4b1ce6349b05c09a0fa4f3da35ecb1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49884","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.130","lastModified":"2024-10-21T18:15:11.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix slab-use-after-free in ext4_split_extent_at()\n\nWe hit the following use-after-free:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in ext4_split_extent_at+0xba8\/0xcc0\nRead of size 2 at addr ffff88810548ed08 by task kworker\/u20:0\/40\nCPU: 0 PID: 40 Comm: kworker\/u20:0 Not tainted 6.9.0-dirty #724\nCall Trace:\n <TASK>\n kasan_report+0x93\/0xc0\n ext4_split_extent_at+0xba8\/0xcc0\n ext4_split_extent.isra.0+0x18f\/0x500\n ext4_split_convert_extents+0x275\/0x750\n ext4_ext_handle_unwritten_extents+0x73e\/0x1580\n ext4_ext_map_blocks+0xe20\/0x2dc0\n ext4_map_blocks+0x724\/0x1700\n ext4_do_writepages+0x12d6\/0x2a70\n[...]\n\nAllocated by task 40:\n __kmalloc_noprof+0x1ac\/0x480\n ext4_find_extent+0xf3b\/0x1e70\n ext4_ext_map_blocks+0x188\/0x2dc0\n ext4_map_blocks+0x724\/0x1700\n ext4_do_writepages+0x12d6\/0x2a70\n[...]\n\nFreed by task 40:\n kfree+0xf1\/0x2b0\n ext4_find_extent+0xa71\/0x1e70\n ext4_ext_insert_extent+0xa22\/0x3260\n ext4_split_extent_at+0x3ef\/0xcc0\n ext4_split_extent.isra.0+0x18f\/0x500\n ext4_split_convert_extents+0x275\/0x750\n ext4_ext_handle_unwritten_extents+0x73e\/0x1580\n ext4_ext_map_blocks+0xe20\/0x2dc0\n ext4_map_blocks+0x724\/0x1700\n ext4_do_writepages+0x12d6\/0x2a70\n[...]\n==================================================================\n\nThe flow of issue triggering is as follows:\n\next4_split_extent_at\n  path = *ppath\n  ext4_ext_insert_extent(ppath)\n    ext4_ext_create_new_leaf(ppath)\n      ext4_find_extent(orig_path)\n        path = *orig_path\n        read_extent_tree_block\n          \/\/ return -ENOMEM or -EIO\n        ext4_free_ext_path(path)\n          kfree(path)\n        *orig_path = NULL\n  a. If err is -ENOMEM:\n  ext4_ext_dirty(path + path->p_depth)\n  \/\/ path use-after-free !!!\n  b. If err is -EIO and we have EXT_DEBUG defined:\n  ext4_ext_show_leaf(path)\n    eh = path[depth].p_hdr\n    \/\/ path also use-after-free !!!\n\nSo when trying to zeroout or fix the extent length, call ext4_find_extent()\nto update the path.\n\nIn addition we use *ppath directly as an ext4_ext_show_leaf() input to\navoid possible use-after-free when EXT_DEBUG is defined, and to avoid\nunnecessary path updates."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d949ea75bb529ea6342e83465938a3b0ac51238","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fe117790b37c84c651e2bad9efc0e7fda73c0e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/915ac3630488af0ca194dc63b86d99802b4f6e18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5401d4c3e2a3d25643c567d26e6de327774a2c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c26ab35702f8cd0cdc78f96aa5856bfb77be798f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cafcc1bd62934547c76abf46c6d0d54f135006fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e52f933598b781d291b9297e39c463536da0e185","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49885","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.230","lastModified":"2024-10-21T18:15:11.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm, slub: avoid zeroing kmalloc redzone\n\nSince commit 946fa0dbf2d8 (\"mm\/slub: extend redzone check to extra\nallocated kmalloc space than requested\"), setting orig_size treats\nthe wasted space (object_size - orig_size) as a redzone. However with\ninit_on_free=1 we clear the full object->size, including the redzone.\n\nAdditionally we clear the object metadata, including the stored orig_size,\nmaking it zero, which makes check_object() treat the whole object as a\nredzone.\n\nThese issues lead to the following BUG report with \"slub_debug=FUZ\ninit_on_free=1\":\n\n[    0.000000] =============================================================================\n[    0.000000] BUG kmalloc-8 (Not tainted): kmalloc Redzone overwritten\n[    0.000000] -----------------------------------------------------------------------------\n[    0.000000]\n[    0.000000] 0xffff000010032858-0xffff00001003285f @offset=2136. First byte 0x0 instead of 0xcc\n[    0.000000] FIX kmalloc-8: Restoring kmalloc Redzone 0xffff000010032858-0xffff00001003285f=0xcc\n[    0.000000] Slab 0xfffffdffc0400c80 objects=36 used=23 fp=0xffff000010032a18 flags=0x3fffe0000000200(workingset|node=0|zone=0|lastcpupid=0x1ffff)\n[    0.000000] Object 0xffff000010032858 @offset=2136 fp=0xffff0000100328c8\n[    0.000000]\n[    0.000000] Redzone  ffff000010032850: cc cc cc cc cc cc cc cc                          ........\n[    0.000000] Object   ffff000010032858: cc cc cc cc cc cc cc cc                          ........\n[    0.000000] Redzone  ffff000010032860: cc cc cc cc cc cc cc cc                          ........\n[    0.000000] Padding  ffff0000100328b4: 00 00 00 00 00 00 00 00 00 00 00 00              ............\n[    0.000000] CPU: 0 UID: 0 PID: 0 Comm: swapper\/0 Not tainted 6.11.0-rc3-next-20240814-00004-g61844c55c3f4 #144\n[    0.000000] Hardware name: NXP i.MX95 19X19 board (DT)\n[    0.000000] Call trace:\n[    0.000000]  dump_backtrace+0x90\/0xe8\n[    0.000000]  show_stack+0x18\/0x24\n[    0.000000]  dump_stack_lvl+0x74\/0x8c\n[    0.000000]  dump_stack+0x18\/0x24\n[    0.000000]  print_trailer+0x150\/0x218\n[    0.000000]  check_object+0xe4\/0x454\n[    0.000000]  free_to_partial_list+0x2f8\/0x5ec\n\nTo address the issue, use orig_size to clear the used area. And restore\nthe value of orig_size after clear the remaining area.\n\nWhen CONFIG_SLUB_DEBUG not defined, (get_orig_size()' directly returns\ns->object_size. So when using memset to init the area, the size can simply\nbe orig_size, as orig_size returns object_size when CONFIG_SLUB_DEBUG not\nenabled. And orig_size can never be bigger than object_size."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/59090e479ac78ae18facd4c58eb332562a23020e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a2e823a19746d54052c625faecf0d2d6c52ee0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83f0440b2f92227fcce9898118ca7fe7e0d64b1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49886","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.293","lastModified":"2024-10-21T18:15:11.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: ISST: Fix the KASAN report slab-out-of-bounds bug\n\nAttaching SST PCI device to VM causes \"BUG: KASAN: slab-out-of-bounds\".\nkasan report:\n[   19.411889] ==================================================================\n[   19.413702] BUG: KASAN: slab-out-of-bounds in _isst_if_get_pci_dev+0x3d5\/0x400 [isst_if_common]\n[   19.415634] Read of size 8 at addr ffff888829e65200 by task cpuhp\/16\/113\n[   19.417368]\n[   19.418627] CPU: 16 PID: 113 Comm: cpuhp\/16 Tainted: G            E      6.9.0 #10\n[   19.420435] Hardware name: VMware, Inc. VMware20,1\/440BX Desktop Reference Platform, BIOS VMW201.00V.20192059.B64.2207280713 07\/28\/2022\n[   19.422687] Call Trace:\n[   19.424091]  <TASK>\n[   19.425448]  dump_stack_lvl+0x5d\/0x80\n[   19.426963]  ? _isst_if_get_pci_dev+0x3d5\/0x400 [isst_if_common]\n[   19.428694]  print_report+0x19d\/0x52e\n[   19.430206]  ? __pfx__raw_spin_lock_irqsave+0x10\/0x10\n[   19.431837]  ? _isst_if_get_pci_dev+0x3d5\/0x400 [isst_if_common]\n[   19.433539]  kasan_report+0xf0\/0x170\n[   19.435019]  ? _isst_if_get_pci_dev+0x3d5\/0x400 [isst_if_common]\n[   19.436709]  _isst_if_get_pci_dev+0x3d5\/0x400 [isst_if_common]\n[   19.438379]  ? __pfx_sched_clock_cpu+0x10\/0x10\n[   19.439910]  isst_if_cpu_online+0x406\/0x58f [isst_if_common]\n[   19.441573]  ? __pfx_isst_if_cpu_online+0x10\/0x10 [isst_if_common]\n[   19.443263]  ? ttwu_queue_wakelist+0x2c1\/0x360\n[   19.444797]  cpuhp_invoke_callback+0x221\/0xec0\n[   19.446337]  cpuhp_thread_fun+0x21b\/0x610\n[   19.447814]  ? __pfx_cpuhp_thread_fun+0x10\/0x10\n[   19.449354]  smpboot_thread_fn+0x2e7\/0x6e0\n[   19.450859]  ? __pfx_smpboot_thread_fn+0x10\/0x10\n[   19.452405]  kthread+0x29c\/0x350\n[   19.453817]  ? __pfx_kthread+0x10\/0x10\n[   19.455253]  ret_from_fork+0x31\/0x70\n[   19.456685]  ? __pfx_kthread+0x10\/0x10\n[   19.458114]  ret_from_fork_asm+0x1a\/0x30\n[   19.459573]  <\/TASK>\n[   19.460853]\n[   19.462055] Allocated by task 1198:\n[   19.463410]  kasan_save_stack+0x30\/0x50\n[   19.464788]  kasan_save_track+0x14\/0x30\n[   19.466139]  __kasan_kmalloc+0xaa\/0xb0\n[   19.467465]  __kmalloc+0x1cd\/0x470\n[   19.468748]  isst_if_cdev_register+0x1da\/0x350 [isst_if_common]\n[   19.470233]  isst_if_mbox_init+0x108\/0xff0 [isst_if_mbox_msr]\n[   19.471670]  do_one_initcall+0xa4\/0x380\n[   19.472903]  do_init_module+0x238\/0x760\n[   19.474105]  load_module+0x5239\/0x6f00\n[   19.475285]  init_module_from_file+0xd1\/0x130\n[   19.476506]  idempotent_init_module+0x23b\/0x650\n[   19.477725]  __x64_sys_finit_module+0xbe\/0x130\n[   19.476506]  idempotent_init_module+0x23b\/0x650\n[   19.477725]  __x64_sys_finit_module+0xbe\/0x130\n[   19.478920]  do_syscall_64+0x82\/0x160\n[   19.480036]  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[   19.481292]\n[   19.482205] The buggy address belongs to the object at ffff888829e65000\n which belongs to the cache kmalloc-512 of size 512\n[   19.484818] The buggy address is located 0 bytes to the right of\n allocated 512-byte region [ffff888829e65000, ffff888829e65200)\n[   19.487447]\n[   19.488328] The buggy address belongs to the physical page:\n[   19.489569] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888829e60c00 pfn:0x829e60\n[   19.491140] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0\n[   19.492466] anon flags: 0x57ffffc0000840(slab|head|node=1|zone=2|lastcpupid=0x1fffff)\n[   19.493914] page_type: 0xffffffff()\n[   19.494988] raw: 0057ffffc0000840 ffff88810004cc80 0000000000000000 0000000000000001\n[   19.496451] raw: ffff888829e60c00 0000000080200018 00000001ffffffff 0000000000000000\n[   19.497906] head: 0057ffffc0000840 ffff88810004cc80 0000000000000000 0000000000000001\n[   19.499379] head: ffff888829e60c00 0000000080200018 00000001ffffffff 0000000000000000\n[   19.500844] head: 0057ffffc0000003 ffffea0020a79801 ffffea0020a79848 00000000ffffffff\n[   19.502316] head: 0000000800000000 0000000000000000 00000000ffffffff 0000000000000000\n[   19.503784] page dumped because: k\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1973c4d8ee0782a808303d75e3be9c12baaacd97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d59ac07ccb58f8f604f8057db63b8efcebeb3de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8176d4878ed2af5d93ddd0e971e24c412124d38b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afa7f78d9a907cfded6c98c91aae2bf7b3b56e51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdd03afcb6eda3103da5a0948d3db12372f62910","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cebc705b097d5c16469b141a25e840161d1c517a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49887","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.360","lastModified":"2024-10-21T18:15:11.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to don't panic system for no free segment fault injection\n\nf2fs: fix to don't panic system for no free segment fault injection\n\nsyzbot reports a f2fs bug as below:\n\nF2FS-fs (loop0): inject no free segment in get_new_segment of __allocate_new_segment+0x1ce\/0x940 fs\/f2fs\/segment.c:3167\nF2FS-fs (loop0): Stopped filesystem due to reason: 7\n------------[ cut here ]------------\nkernel BUG at fs\/f2fs\/segment.c:2748!\nCPU: 0 UID: 0 PID: 5109 Comm: syz-executor304 Not tainted 6.11.0-rc6-syzkaller-00363-g89f5e14d05b4 #0\nRIP: 0010:get_new_segment fs\/f2fs\/segment.c:2748 [inline]\nRIP: 0010:new_curseg+0x1f61\/0x1f70 fs\/f2fs\/segment.c:2836\nCall Trace:\n __allocate_new_segment+0x1ce\/0x940 fs\/f2fs\/segment.c:3167\n f2fs_allocate_new_section fs\/f2fs\/segment.c:3181 [inline]\n f2fs_allocate_pinning_section+0xfa\/0x4e0 fs\/f2fs\/segment.c:3195\n f2fs_expand_inode_data+0x5d6\/0xbb0 fs\/f2fs\/file.c:1799\n f2fs_fallocate+0x448\/0x960 fs\/f2fs\/file.c:1903\n vfs_fallocate+0x553\/0x6c0 fs\/open.c:334\n do_vfs_ioctl+0x2592\/0x2e50 fs\/ioctl.c:886\n __do_sys_ioctl fs\/ioctl.c:905 [inline]\n __se_sys_ioctl+0x81\/0x170 fs\/ioctl.c:893\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0010:get_new_segment fs\/f2fs\/segment.c:2748 [inline]\nRIP: 0010:new_curseg+0x1f61\/0x1f70 fs\/f2fs\/segment.c:2836\n\nThe root cause is when we inject no free segment fault into f2fs,\nwe should not panic system, fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/645ec43760e86d3079fee2e8b51fde7060a540d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65a6ce4726c27b45600303f06496fef46d00b57f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f6e7a0512a57387d36f5e9e9635d6668cac13dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49888","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.443","lastModified":"2024-10-21T18:15:11.443","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix a sdiv overflow issue\n\nZac Ecob reported a problem where a bpf program may cause kernel crash due\nto the following error:\n  Oops: divide error: 0000 [#1] PREEMPT SMP KASAN PTI\n\nThe failure is due to the below signed divide:\n  LLONG_MIN\/-1 where LLONG_MIN equals to -9,223,372,036,854,775,808.\nLLONG_MIN\/-1 is supposed to give a positive number 9,223,372,036,854,775,808,\nbut it is impossible since for 64-bit system, the maximum positive\nnumber is 9,223,372,036,854,775,807. On x86_64, LLONG_MIN\/-1 will\ncause a kernel exception. On arm64, the result for LLONG_MIN\/-1 is\nLLONG_MIN.\n\nFurther investigation found all the following sdiv\/smod cases may trigger\nan exception when bpf program is running on x86_64 platform:\n  - LLONG_MIN\/-1 for 64bit operation\n  - INT_MIN\/-1 for 32bit operation\n  - LLONG_MIN%-1 for 64bit operation\n  - INT_MIN%-1 for 32bit operation\nwhere -1 can be an immediate or in a register.\n\nOn arm64, there are no exceptions:\n  - LLONG_MIN\/-1 = LLONG_MIN\n  - INT_MIN\/-1 = INT_MIN\n  - LLONG_MIN%-1 = 0\n  - INT_MIN%-1 = 0\nwhere -1 can be an immediate or in a register.\n\nInsn patching is needed to handle the above cases and the patched codes\nproduced results aligned with above arm64 result. The below are pseudo\ncodes to handle sdiv\/smod exceptions including both divisor -1 and divisor 0\nand the divisor is stored in a register.\n\nsdiv:\n      tmp = rX\n      tmp += 1 \/* [-1, 0] -> [0, 1]\n      if tmp >(unsigned) 1 goto L2\n      if tmp == 0 goto L1\n      rY = 0\n  L1:\n      rY = -rY;\n      goto L3\n  L2:\n      rY \/= rX\n  L3:\n\nsmod:\n      tmp = rX\n      tmp += 1 \/* [-1, 0] -> [0, 1]\n      if tmp >(unsigned) 1 goto L1\n      if tmp == 1 (is64 ? goto L2 : goto L3)\n      rY = 0;\n      goto L2\n  L1:\n      rY %= rX\n  L2:\n      goto L4  \/\/ only when !is64\n  L3:\n      wY = wY  \/\/ only when !is64\n  L4:\n\n  [1] https:\/\/lore.kernel.org\/bpf\/tPJLTEh7S_DxFEqAI2Ji5MBSoZVg7_G-Py2iaZpAaWtM961fFTWtsnlzwvTbzBzaUzwQAoNATXKUlt0LZOFgnDcIyKCswAnAGdUF3LBrhGQ=@protonmail.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4902a6a0dc593c82055fc8c9ada371bafe26c9cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dd34d7b7dcf9309fc6224caf4dd5b35bedddcb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d22e45a369afc7c28f11acfa5b5e8e478227ca5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49889","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.513","lastModified":"2024-10-21T18:15:11.513","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid use-after-free in ext4_ext_show_leaf()\n\nIn ext4_find_extent(), path may be freed by error or be reallocated, so\nusing a previously saved *ppath may have been freed and thus may trigger\nuse-after-free, as follows:\n\next4_split_extent\n  path = *ppath;\n  ext4_split_extent_at(ppath)\n  path = ext4_find_extent(ppath)\n  ext4_split_extent_at(ppath)\n    \/\/ ext4_find_extent fails to free path\n    \/\/ but zeroout succeeds\n  ext4_ext_show_leaf(inode, path)\n    eh = path[depth].p_hdr\n    \/\/ path use-after-free !!!\n\nSimilar to ext4_split_extent_at(), we use *ppath directly as an input to\next4_ext_show_leaf(). Fix a spelling error by the way.\n\nSame problem in ext4_ext_handle_unwritten_extents(). Since 'path' is only\nused in ext4_ext_show_leaf(), remove 'path' and use *ppath directly.\n\nThis issue is triggered only when EXT_DEBUG is defined and therefore does\nnot affect functionality."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2eba3b0cc5b8de624918d21f32b5b8db59a90b39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34b2096380ba475771971a778a478661a791aa15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4999fed877bb64e3e7f9ab9996de2ca983c41928","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e2524ba2ca5f54bdbb9e5153bea00421ef653f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b114f2cc7dd5d36729d040b68432fbd0f0a8868","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0cb4561fc4284d04e69c8a66c8504928ab2484e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d483c7cc1796bd6a80e7b3a8fd494996260f6b67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49890","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.580","lastModified":"2024-10-21T18:15:11.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: ensure the fw_info is not null before using it\n\nThis resolves the dereference null return value warning\nreported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/016bf0294b401246471c6710c6bf9251616228b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/186fb12e7a7b038c2710ceb2fb74068f1b5d55a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29f388945770bd0a6c82711436b2bc98b0dfac92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8adf4408d482faa51b2c14e60bfd9946ec1911a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9550d8d6f19fac7623f044ae8d9503825b325497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b511474f49588cdca355ebfce54e7eddbf7b75a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd5f4ac1a986f0e7e9fa019201b5890554f87bcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49891","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.657","lastModified":"2024-10-21T18:15:11.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Validate hdwq pointers before dereferencing in reset\/errata paths\n\nWhen the HBA is undergoing a reset or is handling an errata event, NULL ptr\ndereference crashes may occur in routines such as\nlpfc_sli_flush_io_rings(), lpfc_dev_loss_tmo_callbk(), or\nlpfc_abort_handler().\n\nAdd NULL ptr checks before dereferencing hdwq pointers that may have been\nfreed due to operations colliding with a reset or errata event handler."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2be1d4f11944cd6283cb97268b3e17c4424945ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99a801e2fca39a6f31e543fc3383058a8955896f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd665c8dbdb19548965b0ae80c490de00e906366","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49892","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.757","lastModified":"2024-10-21T18:15:11.757","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Initialize get_bytes_per_element's default to 1\n\nVariables, used as denominators and maybe not assigned to other values,\nshould not be 0. bytes_per_element_y & bytes_per_element_c are\ninitialized by get_bytes_per_element() which should never return 0.\n\nThis fixes 10 DIVIDE_BY_ZERO issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f9f8186e239222f1c8d3dd73bf3bc6ae86c5e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3334ab72cbba55a632f24579cd47c4a4e5e69cda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4067f4fa0423a89fb19a30b57231b384d77d2610","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a23d6029e730f8a151b1a34afb169baac1274583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc00d211da4ffad5314a2043b50bdc8ff8a33724","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7630935d9a4986e8c0ed91658a781b7a77d73f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f921335123f6620c3dce5c96fbb95f18524a021c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49893","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.850","lastModified":"2024-10-21T18:15:11.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check stream_status before it is used\n\n[WHAT & HOW]\ndc_state_get_stream_status can return null, and therefore null must be\nchecked before stream_status is used.\n\nThis fixes 1 NULL_RETURNS issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4914c8bfee1843fae046a12970b6f178e6642659","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58a8ee96f84d2c21abb85ad8c22d2bbdf59bd7a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49894","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.913","lastModified":"2024-10-21T18:15:11.913","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix index out of bounds in degamma hardware format translation\n\nFixes index out of bounds issue in\n`cm_helper_translate_curve_to_degamma_hw_format` function. The issue\ncould occur when the index 'i' exceeds the number of transfer function\npoints (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds the function returns\nfalse to indicate an error.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn10\/dcn10_cm_common.c:594 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn10\/dcn10_cm_common.c:595 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn10\/dcn10_cm_common.c:596 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07078fa5d589a7fbce8f81ea8acf7aa0021ab38e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/122e3a7a8c7bcbe3aacddd6103f67f9f36bed473","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2495c8e272d84685403506833a664fad932e453a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f5da549535be8ccd2ab7c9abac8562ad370b181","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7e99058eb2e86aabd7a10761e76cae33d22b49f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c130a3c09e3746c1a09ce26c20d21d449d039b1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6979719012a90e5b8e3bc31725fbfdd0b9b2b79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49895","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:11.990","lastModified":"2024-10-21T18:15:11.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix index out of bounds in DCN30 degamma hardware format translation\n\nThis commit addresses a potential index out of bounds issue in the\n`cm3_helper_translate_curve_to_degamma_hw_format` function in the DCN30\ncolor  management module. The issue could occur when the index 'i'\nexceeds the  number of transfer function points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, the function returns\nfalse to indicate an error.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:338 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:339 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:340 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d38a0751143afc03faef02d55d31f70374ff843","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad89f83343a501890cf082c8a584e96b59fe4015","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc50b614d59990747dd5aeced9ec22f9258991ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4fdc2d6fea129684b82bab90bb52fbace494a58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de6ee4f9e6b1c36b4fdc7c345c1a6de9e246093e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3ccd855b4395ce65f10dd37847167f52e122b70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5c3d306de91a4b69cfe3eedb72b42d452593e42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49896","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.067","lastModified":"2024-10-21T18:15:12.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check stream before comparing them\n\n[WHAT & HOW]\namdgpu_dm can pass a null stream to dc_is_stream_unchanged. It is\nnecessary to check for null before dereferencing them.\n\nThis fixes 1 FORWARD_NULL issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0167d570f6a0b38689c4a0e50bf79c518d827500","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14db8692afe1aa2143b673856bb603713d8ea93f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35ff747c86767937ee1e0ca987545b7eed7a0810","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42d31a33643813cce55ee1ebbad3a2d0d24a08e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4b13e678b15975055f4ff1ce4cf0ce4c19b6c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e41a291e1bef1153bba091b6580ecc7affc53c82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8da54b7f8a17e44e67ea6d1037f35450af28115","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49897","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.133","lastModified":"2024-10-21T18:15:12.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check phantom_stream before it is used\n\ndcn32_enable_phantom_stream can return null, so returned value\nmust be checked before used.\n\nThis fixes 1 NULL_RETURNS issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1decf695ce08e23d9ded6ce83d121b2282ce9899","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3718a619a8c0a53152e76bb6769b6c414e1e83f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ba1219e299ab5462b5cb374c2fa2a67af0ea190","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49898","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.190","lastModified":"2024-10-21T18:15:12.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null-initialized variables\n\n[WHAT & HOW]\ndrr_timing and subvp_pipe are initialized to null and they are not\nalways assigned new values. It is necessary to check for null before\ndereferencing.\n\nThis fixes 2 FORWARD_NULL issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/115b1a3b0944b4d8ef0b4b0c5a625bdd9474131f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/367cd9ceba1933b63bc1d87d967baf6d9fd241d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fc70ae048fe0936761b73b50700a810ff61e853","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49899","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.253","lastModified":"2024-10-21T18:15:12.253","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Initialize denominators' default to 1\n\n[WHAT & HOW]\nVariables used as denominators and maybe not assigned to other values,\nshould not be 0. Change their default to 1 so they are never 0.\n\nThis fixes 10 DIVIDE_BY_ZERO issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7f8e93b862aba08d540f1e9e03e0ceb4d0cfd5fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b995c0a6de6c74656a0c39cd57a0626351b13e3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49900","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.320","lastModified":"2024-10-21T18:15:12.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix uninit-value access of new_ea in ea_buffer\n\nsyzbot reports that lzo1x_1_do_compress is using uninit-value:\n\n=====================================================\nBUG: KMSAN: uninit-value in lzo1x_1_do_compress+0x19f9\/0x2510 lib\/lzo\/lzo1x_compress.c:178\n\n...\n\nUninit was stored to memory at:\n ea_put fs\/jfs\/xattr.c:639 [inline]\n\n...\n\nLocal variable ea_buf created at:\n __jfs_setxattr+0x5d\/0x1ae0 fs\/jfs\/xattr.c:662\n __jfs_xattr_set+0xe6\/0x1f0 fs\/jfs\/xattr.c:934\n\n=====================================================\n\nThe reason is ea_buf->new_ea is not initialized properly.\n\nFix this by using memset to empty its content at the beginning\nin ea_get()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b59ffad47db1c46af25ccad157bb3b25147c35c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6041536d18c5f51a84bc37cd568cbab61870031e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c244d5b48284a770d96ff703df2dfeadf804a73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ad8b531de79c348bcb8133e7f5e827b884226af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b1dcf25c26d42e4a68c4725ce52a0543c7878cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c076b3746224982eebdba5c9e4b1467e146c0d64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7444f91a9f93eaa48827087ed0f3381c194181d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49901","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.480","lastModified":"2024-10-21T18:15:12.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/adreno: Assign msm_gpu->pdev earlier to avoid nullptrs\n\nThere are some cases, such as the one uncovered by Commit 46d4efcccc68\n(\"drm\/msm\/a6xx: Avoid a nullptr dereference when speedbin setting fails\")\nwhere\n\nmsm_gpu_cleanup() : platform_set_drvdata(gpu->pdev, NULL);\n\nis called on gpu->pdev == NULL, as the GPU device has not been fully\ninitialized yet.\n\nTurns out that there's more than just the aforementioned path that\ncauses this to happen (e.g. the case when there's speedbin data in the\ncatalog, but opp-supported-hw is missing in DT).\n\nAssigning msm_gpu->pdev earlier seems like the least painful solution\nto this, therefore do so.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/602742\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16007768551d5bfe53426645401435ca8d2ef54f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9288a9676c529ad9c856096db68fad812499bc4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9773737375b20070ea935203fd66cb9fa17c5acb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8ac2060597a5768e4699bb61d604b4c09927b85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49902","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.700","lastModified":"2024-10-21T18:15:12.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: check if leafidx greater than num leaves per dmap tree\n\nsyzbot report a out of bounds in dbSplit, it because dmt_leafidx greater\nthan num leaves per dmap tree, add a checking for dmt_leafidx in dbFindLeaf.\n\nShaggy:\nModified sanity check to apply to control pages as well as leaf pages."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/058aa89b3318be3d66a103ba7c68d717561e1dc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2451e5917c56be45d4add786e2a059dd9c2c37c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25d2a3ff02f22e215ce53355619df10cc5faa7ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a7bf6a01fb441009a6698179a739957efd88e38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fff9a9f866e99931cf6fa260288e55d01626582","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb0eb10558802764f07de1dc439c4609e27cb4f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d64ff0d2306713ff084d4b09f84ed1a8c75ecc32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49903","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.873","lastModified":"2024-10-21T18:15:12.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix uaf in dbFreeBits\n\n[syzbot reported]\n==================================================================\nBUG: KASAN: slab-use-after-free in __mutex_lock_common kernel\/locking\/mutex.c:587 [inline]\nBUG: KASAN: slab-use-after-free in __mutex_lock+0xfe\/0xd70 kernel\/locking\/mutex.c:752\nRead of size 8 at addr ffff8880229254b0 by task syz-executor357\/5216\n\nCPU: 0 UID: 0 PID: 5216 Comm: syz-executor357 Not tainted 6.11.0-rc3-syzkaller-00156-gd7a5aa4b3c00 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 06\/27\/2024\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:93 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:119\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n __mutex_lock_common kernel\/locking\/mutex.c:587 [inline]\n __mutex_lock+0xfe\/0xd70 kernel\/locking\/mutex.c:752\n dbFreeBits+0x7ea\/0xd90 fs\/jfs\/jfs_dmap.c:2390\n dbFreeDmap fs\/jfs\/jfs_dmap.c:2089 [inline]\n dbFree+0x35b\/0x680 fs\/jfs\/jfs_dmap.c:409\n dbDiscardAG+0x8a9\/0xa20 fs\/jfs\/jfs_dmap.c:1650\n jfs_ioc_trim+0x433\/0x670 fs\/jfs\/jfs_discard.c:100\n jfs_ioctl+0x2d0\/0x3e0 fs\/jfs\/ioctl.c:131\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:907 [inline]\n __se_sys_ioctl+0xfc\/0x170 fs\/ioctl.c:893\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n\nFreed by task 5218:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n kasan_save_free_info+0x40\/0x50 mm\/kasan\/generic.c:579\n poison_slab_object+0xe0\/0x150 mm\/kasan\/common.c:240\n __kasan_slab_free+0x37\/0x60 mm\/kasan\/common.c:256\n kasan_slab_free include\/linux\/kasan.h:184 [inline]\n slab_free_hook mm\/slub.c:2252 [inline]\n slab_free mm\/slub.c:4473 [inline]\n kfree+0x149\/0x360 mm\/slub.c:4594\n dbUnmount+0x11d\/0x190 fs\/jfs\/jfs_dmap.c:278\n jfs_mount_rw+0x4ac\/0x6a0 fs\/jfs\/jfs_mount.c:247\n jfs_remount+0x3d1\/0x6b0 fs\/jfs\/super.c:454\n reconfigure_super+0x445\/0x880 fs\/super.c:1083\n vfs_cmd_reconfigure fs\/fsopen.c:263 [inline]\n vfs_fsconfig_locked fs\/fsopen.c:292 [inline]\n __do_sys_fsconfig fs\/fsopen.c:473 [inline]\n __se_sys_fsconfig+0xb6e\/0xf80 fs\/fsopen.c:345\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\n[Analysis]\nThere are two paths (dbUnmount and jfs_ioc_trim) that generate race\ncondition when accessing bmap, which leads to the occurrence of uaf.\n\nUse the lock s_umount to synchronize them, in order to avoid uaf caused\nby race condition."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c238da83f56bb895cab1e5851d034ac45b158d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4218b31ecc7af7e191768d32e32ed4386d8f9b76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95accb7183badca387f7a8d19a2475cf3089f148","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9603a6f75df2fd8125cd208c98cfaa0fe3f7505","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6c1b3599b2feb5c7291f5ac3a36e5fa7cedb234","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7ae14f7ee76c6ef5a48aebab1a278ad78f42619","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd026b6b6758d5569705c02540b40f3bbf822b9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49904","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:12.960","lastModified":"2024-10-21T18:15:12.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: add list empty check to avoid null pointer issue\n\nAdd list empty check to avoid null pointer issues in some corner cases.\n- list_for_each_entry_safe()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4416377ae1fdc41a90b665943152ccd7ff61d3c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ec731ef47f1dba34daad3e51a93de793f9319ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e87763946f708063d7e5303339598abbb8c5aac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49905","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.033","lastModified":"2024-10-21T18:15:13.033","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for 'afb' in amdgpu_dm_plane_handle_cursor_update (v2)\n\nThis commit adds a null check for the 'afb' variable in the\namdgpu_dm_plane_handle_cursor_update function. Previously, 'afb' was\nassumed to be null, but was used later in the code without a null check.\nThis could potentially lead to a null pointer dereference.\n\nChanges since v1:\n- Moved the null check for 'afb' to the line where 'afb' is used. (Alex)\n\nFixes the below:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/amdgpu_dm\/amdgpu_dm_plane.c:1298 amdgpu_dm_plane_handle_cursor_update() error: we previously assumed 'afb' could be null (see line 1252)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/75839e2365b666ff4e1b9047e442cab138eac4f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9132882eaae4d21d2fc5843b3308379a481ebdf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd0e24e5e608ccb9fdda300bb974496d6d8cf57d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd9e9e0852d501f169aa3bb34e4b413d2eb48c37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4e26cbe34d7c1c1db5fb7b3101573c29866439f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49906","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.120","lastModified":"2024-10-21T18:15:13.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointer before try to access it\n\n[why & how]\nChange the order of the pipe_ctx->plane_state check to ensure that\nplane_state is not null before accessing it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b686053c06ffb9f4524b288110cf2a831ff7a25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2002ccb93004e76a471b180560accb2c1f850f35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49907","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.210","lastModified":"2024-10-21T18:15:13.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointers before using dc->clk_mgr\n\n[WHY & HOW]\ndc->clk_mgr is null checked previously in the same function, indicating\nit might be null.\n\nPassing \"dc\" to \"dc->hwss.apply_idle_power_optimizations\", which\ndereferences null \"dc->clk_mgr\". (The function pointer resolves to\n\"dcn35_apply_idle_power_optimizations\".)\n\nThis fixes 1 FORWARD_NULL issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f7e533c10db3d0158709a99e2129ff63add6bcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ba3fbf75b243b2863a8be9e7c393e003d3b88f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d54001f8dccd56146973f23f3ab2ba037a21251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95d9e0803e51d5a24276b7643b244c7477daf463","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9641bc4adf8446034e490ed543ae7e9833cfbdf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2773e0a4b79e7a6463abdffaf8cc4f24428ba18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a545a9403e04c6e17fdc04a26a61d9feebbba106","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49908","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.290","lastModified":"2024-10-21T18:15:13.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for 'afb' in amdgpu_dm_update_cursor (v2)\n\nThis commit adds a null check for the 'afb' variable in the\namdgpu_dm_update_cursor function. Previously, 'afb' was assumed to be\nnull at line 8388, but was used later in the code without a null check.\nThis could potentially lead to a null pointer dereference.\n\nChanges since v1:\n- Moved the null check for 'afb' to the line where 'afb' is used. (Alex)\n\nFixes the below:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/amdgpu_dm\/amdgpu_dm.c:8433 amdgpu_dm_update_cursor()\n\terror: we previously assumed 'afb' could be null (see line 8388)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fe20258b4989b9112b5e9470df33a0939403fd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a742168b6a39ead257da53bcbe472384d6e14a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49909","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.357","lastModified":"2024-10-21T18:15:13.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for function pointer in dcn32_set_output_transfer_func\n\nThis commit adds a null check for the set_output_gamma function pointer\nin the dcn32_set_output_transfer_func function. Previously,\nset_output_gamma was being checked for null, but then it was being\ndereferenced without any null check. This could lead to a null pointer\ndereference if set_output_gamma is null.\n\nTo fix this, we now ensure that set_output_gamma is not null before\ndereferencing it. We do this by adding a null check for set_output_gamma\nbefore the call to set_output_gamma."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28574b08c70e56d34d6f6379326a860b96749051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/496486950c3d2aebf46a3be300296ac091da7a2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5298270bdabe97be5b8236e544c9e936415fe1f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49910","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.433","lastModified":"2024-10-21T18:15:13.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for function pointer in dcn401_set_output_transfer_func\n\nThis commit adds a null check for the set_output_gamma function pointer\nin the dcn401_set_output_transfer_func function. Previously,\nset_output_gamma was being checked for null, but then it was being\ndereferenced without any null check. This could lead to a null pointer\ndereference if set_output_gamma is null.\n\nTo fix this, we now ensure that set_output_gamma is not null before\ndereferencing it. We do this by adding a null check for set_output_gamma\nbefore the call to set_output_gamma."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d8ee900b92b6526cf84275b49a473155ad75c70e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd340acd42c24a3f28dd22fae6bf38662334264c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49911","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.507","lastModified":"2024-10-21T18:15:13.507","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for function pointer in dcn20_set_output_transfer_func\n\nThis commit adds a null check for the set_output_gamma function pointer\nin the dcn20_set_output_transfer_func function. Previously,\nset_output_gamma was being checked for null at line 1030, but then it\nwas being dereferenced without any null check at line 1048. This could\npotentially lead to a null pointer dereference error if set_output_gamma\nis null.\n\nTo fix this, we now ensure that set_output_gamma is not null before\ndereferencing it. We do this by adding a null check for set_output_gamma\nbefore the call to set_output_gamma at line 1048."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02411e9359297512946705b1cd8cf5e6b0806fa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62ed6f0f198da04e884062264df308277628004f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/827380b114f83c30b3e56d1a675980b6d65f7c88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49912","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.593","lastModified":"2024-10-21T18:15:13.593","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Handle null 'stream_status' in 'planes_changed_for_existing_stream'\n\nThis commit adds a null check for 'stream_status' in the function\n'planes_changed_for_existing_stream'. Previously, the code assumed\n'stream_status' could be null, but did not handle the case where it was\nactually null. This could lead to a null pointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/core\/dc_resource.c:3784 planes_changed_for_existing_stream() error: we previously assumed 'stream_status' could be null (see line 3774)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ffd9fb03bbc99ed1eb5dc989d5c7da2faac0659","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4778982c73d6c9f3fdbdbc6b6c8aa18df98251af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8141f21b941710ecebe49220b69822cab3abd23d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4b699b93496c423b0e5b584d4eb4ab849313bcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec6c32b58e6c4e87760e797c525e99a460c82bcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49913","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.657","lastModified":"2024-10-21T18:15:13.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for top_pipe_to_program in commit_planes_for_stream\n\nThis commit addresses a null pointer dereference issue in the\n`commit_planes_for_stream` function at line 4140. The issue could occur\nwhen `top_pipe_to_program` is null.\n\nThe fix adds a check to ensure `top_pipe_to_program` is not null before\naccessing its stream_res. This prevents a null pointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/core\/dc.c:4140 commit_planes_for_stream() error: we previously assumed 'top_pipe_to_program' could be null (see line 3906)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ebfa6663807c144be8c8b6727375012409d2356","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3929e382e4758aff42da0102a60d13337c99d3b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40193ff73630adf76bc0d82398f7d90fb576dba4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66d71a72539e173a9b00ca0b1852cbaa5f5bf1ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73efd2a611b62fee71a7b7f27d9d08bb60da8a72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ab59527852a6f7780aad6185729550ca0569122","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e47e563c6f0db7d792a559301862c19ead0dfc2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49914","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.723","lastModified":"2024-10-21T18:15:13.723","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for pipe_ctx->plane_state in dcn20_program_pipe\n\nThis commit addresses a null pointer dereference issue in the\n`dcn20_program_pipe` function. The issue could occur when\n`pipe_ctx->plane_state` is null.\n\nThe fix adds a check to ensure `pipe_ctx->plane_state` is not null\nbefore accessing. This prevents a null pointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn20\/dcn20_hwseq.c:1925 dcn20_program_pipe() error: we previously assumed 'pipe_ctx->plane_state' could be null (see line 1877)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/65a6fee22d5cfa645cb05489892dc9cd3d142fc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e4ed3cf1642df0c4456443d865cff61a9598aa8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49915","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.787","lastModified":"2024-10-21T18:15:13.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for clk_mgr in dcn32_init_hw\n\nThis commit addresses a potential null pointer dereference issue in the\n`dcn32_init_hw` function. The issue could occur when `dc->clk_mgr` is\nnull.\n\nThe fix adds a check to ensure `dc->clk_mgr` is not null before\naccessing its functions. This prevents a potential null pointer\ndereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn32\/dcn32_hwseq.c:961 dcn32_init_hw() error: we previously assumed 'dc->clk_mgr' could be null (see line 782)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7d1854c86d02cea8f8a0c0ca05f4ab14292baf3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c395fd47d1565bd67671f45cca281b3acc2c31ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0454b3cb0584a6bf275aeb49be61a760fd546a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49916","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.877","lastModified":"2024-10-21T18:15:13.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for clk_mgr and clk_mgr->funcs in dcn401_init_hw\n\nThis commit addresses a potential null pointer dereference issue in the\n`dcn401_init_hw` function. The issue could occur when `dc->clk_mgr` or\n`dc->clk_mgr->funcs` is null.\n\nThe fix adds a check to ensure `dc->clk_mgr` and `dc->clk_mgr->funcs` is\nnot null before accessing its functions. This prevents a potential null\npointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn401\/dcn401_hwseq.c:416 dcn401_init_hw() error: we previously assumed 'dc->clk_mgr' could be null (see line 225)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b6377f0e96085cbec96eb7f0b282430ccdd3d75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac1c41e318074d8a9ea925787e366be15d7645e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49917","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:13.937","lastModified":"2024-10-21T18:15:13.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add NULL check for clk_mgr and clk_mgr->funcs in dcn30_init_hw\n\nThis commit addresses a potential null pointer dereference issue in the\n`dcn30_init_hw` function. The issue could occur when `dc->clk_mgr` or\n`dc->clk_mgr->funcs` is null.\n\nThe fix adds a check to ensure `dc->clk_mgr` and `dc->clk_mgr->funcs` is\nnot null before accessing its functions. This prevents a potential null\npointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/hwss\/dcn30\/dcn30_hwseq.c:789 dcn30_init_hw() error: we previously assumed 'dc->clk_mgr' could be null (see line 628)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5443c83eb8fd2f88c71ced38848fbf744d6206a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56c326577971adc3a230f29dfd3aa3abdd505f5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cba7fec864172dadd953daefdd26e01742b71a6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49918","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.030","lastModified":"2024-10-21T18:15:14.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for head_pipe in dcn32_acquire_idle_pipe_for_head_pipe_in_layer\n\nThis commit addresses a potential null pointer dereference issue in the\n`dcn32_acquire_idle_pipe_for_head_pipe_in_layer` function. The issue\ncould occur when `head_pipe` is null.\n\nThe fix adds a check to ensure `head_pipe` is not null before asserting\nit. If `head_pipe` is null, the function returns NULL to prevent a\npotential null pointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/resource\/dcn32\/dcn32_resource.c:2690 dcn32_acquire_idle_pipe_for_head_pipe_in_layer() error: we previously assumed 'head_pipe' could be null (see line 2681)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f47292f488fa7041284dca1f1244116c18721f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96d4c2ee18d732a248d053aae8c4a27cb1d68d1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac2140449184a26eac99585b7f69814bd3ba8f2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49919","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.117","lastModified":"2024-10-21T18:15:14.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Add null check for head_pipe in dcn201_acquire_free_pipe_for_layer\n\nThis commit addresses a potential null pointer dereference issue in the\n`dcn201_acquire_free_pipe_for_layer` function. The issue could occur\nwhen `head_pipe` is null.\n\nThe fix adds a check to ensure `head_pipe` is not null before asserting\nit. If `head_pipe` is null, the function returns NULL to prevent a\npotential null pointer dereference.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/resource\/dcn201\/dcn201_resource.c:1016 dcn201_acquire_free_pipe_for_layer() error: we previously assumed 'head_pipe' could be null (see line 1010)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/390d757621f5f35d11a63ed7d9d3262ead240064","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a1b1655a490a492a5a6987254c935ecce4eb9de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f22f4754aaa47d8c59f166ba3042182859e5dff7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49920","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.180","lastModified":"2024-10-21T18:15:14.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointers before multiple uses\n\n[WHAT & HOW]\nPoniters, such as stream_enc and dc->bw_vbios, are null checked previously\nin the same function, so Coverity warns \"implies that stream_enc and\ndc->bw_vbios might be null\". They are used multiple times in the\nsubsequent code and need to be checked.\n\nThis fixes 10 FORWARD_NULL issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26787fb6c2b2ee0d1a7e1574b36f4711ae40fe27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdd5ecbbff751c3b9061d8ebb08e5c96119915b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49921","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.260","lastModified":"2024-10-21T18:15:14.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointers before used\n\n[WHAT & HOW]\nPoniters, such as dc->clk_mgr, are null checked previously in the same\nfunction, so Coverity warns \"implies that \"dc->clk_mgr\" might be null\".\nAs a result, these pointers need to be checked when used again.\n\nThis fixes 10 FORWARD_NULL issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b35bf1a82eb29841b67ff5643ba83762250fc24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be1fb44389ca3038ad2430dac4234669bc177ee3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49922","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.327","lastModified":"2024-10-21T18:15:14.327","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointers before using them\n\n[WHAT & HOW]\nThese pointers are null checked previously in the same function,\nindicating they might be null as reported by Coverity. As a result,\nthey need to be checked when used again.\n\nThis fixes 3 FORWARD_NULL issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ff12bcd7deaeed25efb5120433c6a45dd5504a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e9386baa3033c369564d55de4bab62423e8a1d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65e1d2c291553ef3f433a0b7109cc3002a5f40ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49923","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.390","lastModified":"2024-10-21T18:15:14.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Pass non-null to dcn20_validate_apply_pipe_split_flags\n\n[WHAT & HOW]\n\"dcn20_validate_apply_pipe_split_flags\" dereferences merge, and thus it\ncannot be a null pointer. Let's pass a valid pointer to avoid null\ndereference.\n\nThis fixes 2 FORWARD_NULL issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5559598742fb4538e4c51c48ef70563c49c2af23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85aa996ecfaa95d1e922867390502d23ce21b905","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a05270869f40c89f8d184fe2d37cb86e0d7e5f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49924","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.450","lastModified":"2024-10-21T18:15:14.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: pxafb: Fix possible use after free in pxafb_task()\n\nIn the pxafb_probe function, it calls the pxafb_init_fbinfo function,\nafter which &fbi->task is associated with pxafb_task. Moreover,\nwithin this pxafb_init_fbinfo function, the pxafb_blank function\nwithin the &pxafb_ops struct is capable of scheduling work.\n\nIf we remove the module which will call pxafb_remove to make cleanup,\nit will call unregister_framebuffer function which can call\ndo_unregister_framebuffer to free fbi->fb through\nput_fb_info(fb_info), while the work mentioned above will be used.\nThe sequence of operations that may lead to a UAF bug is as follows:\n\nCPU0                                                CPU1\n\n                                   | pxafb_task\npxafb_remove                       |\nunregister_framebuffer(info)       |\ndo_unregister_framebuffer(fb_info) |\nput_fb_info(fb_info)               |\n\/\/ free fbi->fb                    | set_ctrlr_state(fbi, state)\n                                   | __pxafb_lcd_power(fbi, 0)\n                                   | fbi->lcd_power(on, &fbi->fb.var)\n                                   | \/\/use fbi->fb\n\nFix it by ensuring that the work is canceled before proceeding\nwith the cleanup in pxafb_remove.\n\nNote that only root user can remove the driver at runtime."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c0d416eb4bef705f699213cee94bf54b6acdacd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a6921095eb04a900e0000da83d9475eb958e61e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cda484e584be34d55ee17436ebf7ad11922b97a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3a855764dbacbdb1cc51e15dc588f2d21c93e0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaadc0cb05c999ccd8898a03298b7e5c31509b08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6897e299f57b103e999e62010b88e363b3eebae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdda354f60a576d52dcf90351254714681df4370","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49925","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.540","lastModified":"2024-10-21T18:15:14.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: efifb: Register sysfs groups through driver core\n\nThe driver core can register and cleanup sysfs groups already.\nMake use of that functionality to simplify the error handling and\ncleanup.\n\nAlso avoid a UAF race during unregistering where the sysctl attributes\nwere usable after the info struct was freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36bfefb6baaa8e46de44f4fd919ce4347337620f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4684d69b9670a83992189f6271dc0fcdec4ed0d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/872cd2d029d2c970a8a1eea88b48dab2b3f2e93a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95cdd538e0e5677efbdf8aade04ec098ab98f457","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49926","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.623","lastModified":"2024-10-21T18:15:14.623","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu-tasks: Fix access non-existent percpu rtpcp variable in rcu_tasks_need_gpcb()\n\nFor kernels built with CONFIG_FORCE_NR_CPUS=y, the nr_cpu_ids is\ndefined as NR_CPUS instead of the number of possible cpus, this\nwill cause the following system panic:\n\nsmpboot: Allowing 4 CPUs, 0 hotplug CPUs\n...\nsetup_percpu: NR_CPUS:512 nr_cpumask_bits:512 nr_cpu_ids:512 nr_node_ids:1\n...\nBUG: unable to handle page fault for address: ffffffff9911c8c8\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 0 PID: 15 Comm: rcu_tasks_trace Tainted: G W\n6.6.21 #1 5dc7acf91a5e8e9ac9dcfc35bee0245691283ea6\nRIP: 0010:rcu_tasks_need_gpcb+0x25d\/0x2c0\nRSP: 0018:ffffa371c00a3e60 EFLAGS: 00010082\nCR2: ffffffff9911c8c8 CR3: 000000040fa20005 CR4: 00000000001706f0\nCall Trace:\n<TASK>\n? __die+0x23\/0x80\n? page_fault_oops+0xa4\/0x180\n? exc_page_fault+0x152\/0x180\n? asm_exc_page_fault+0x26\/0x40\n? rcu_tasks_need_gpcb+0x25d\/0x2c0\n? __pfx_rcu_tasks_kthread+0x40\/0x40\nrcu_tasks_one_gp+0x69\/0x180\nrcu_tasks_kthread+0x94\/0xc0\nkthread+0xe8\/0x140\n? __pfx_kthread+0x40\/0x40\nret_from_fork+0x34\/0x80\n? __pfx_kthread+0x40\/0x40\nret_from_fork_asm+0x1b\/0x80\n<\/TASK>\n\nConsidering that there may be holes in the CPU numbers, use the\nmaximum possible cpu number, instead of nr_cpu_ids, for configuring\nenqueue and dequeue limits.\n\n[ neeraj.upadhyay: Fix htmldocs build error reported by Stephen Rothwell ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05095271a4fb0f6497121a057f9a2edf386d5d96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3104bddc666ff64b90491868bbc4c7ebdd90aedf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd70e9f1d85f5323096ad313ba73f5fe3d15ea41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49927","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.737","lastModified":"2024-10-21T18:15:14.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/ioapic: Handle allocation failures gracefully\n\nBreno observed panics when using failslab under certain conditions during\nruntime:\n\n   can not alloc irq_pin_list (-1,0,20)\n   Kernel panic - not syncing: IO-APIC: failed to add irq-pin. Can not proceed\n\n   panic+0x4e9\/0x590\n   mp_irqdomain_alloc+0x9ab\/0xa80\n   irq_domain_alloc_irqs_locked+0x25d\/0x8d0\n   __irq_domain_alloc_irqs+0x80\/0x110\n   mp_map_pin_to_irq+0x645\/0x890\n   acpi_register_gsi_ioapic+0xe6\/0x150\n   hpet_open+0x313\/0x480\n\nThat's a pointless panic which is a leftover of the historic IO\/APIC code\nwhich panic'ed during early boot when the interrupt allocation failed.\n\nThe only place which might justify panic is the PIT\/HPET timer_check() code\nwhich tries to figure out whether the timer interrupt is delivered through\nthe IO\/APIC. But that code does not require to handle interrupt allocation\nfailures. If the interrupt cannot be allocated then timer delivery fails\nand it either panics due to that or falls back to legacy mode.\n\nCure this by removing the panic wrapper around __add_pin_to_irq_node() and\nmaking mp_irqdomain_alloc() aware of the failure condition and handle it as\nany other failure in this function gracefully."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/077e1b7cd521163ded545987bbbd389519aeed71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/649a5c2ffae797ce792023a70e84c7fe4b6fb8e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/830802a0fea8fb39d3dc9fb7d6b5581e1343eb1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e479cb835feeb2abff97f25766e23b96a6eabe28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec862cd843faa6f0e84a7a07362f2786446bf697","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f17efbeb2922327ea01a9efa8829fea9a30e547d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49928","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.813","lastModified":"2024-10-21T18:15:14.813","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: avoid reading out of bounds when loading TX power FW elements\n\nBecause the loop-expression will do one more time before getting false from\ncond-expression, the original code copied one more entry size beyond valid\nregion.\n\nFix it by moving the entry copy to loop-body."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4007c3d2da31d0c755ea3fcf55e395118e5d5621","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83c84cdb75572048b67d6a3916283aeac865996e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed2e4bb17a4884cf29c3347353d8aabb7265b46c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49929","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.907","lastModified":"2024-10-21T18:15:14.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: avoid NULL pointer dereference\n\niwl_mvm_tx_skb_sta() and iwl_mvm_tx_mpdu() verify that the mvmvsta\npointer is not NULL.\nIt retrieves this pointer using iwl_mvm_sta_from_mac80211, which is\ndereferencing the ieee80211_sta pointer.\nIf sta is NULL, iwl_mvm_sta_from_mac80211 will dereference a NULL\npointer.\nFix this by checking the sta pointer before retrieving the mvmsta\nfrom it. If sta is not NULL, then mvmsta isn't either."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/557a6cd847645e667f3b362560bd7e7c09aac284","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dcadb2ed3b76623ab96e3e7fbeda1a374d01c28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0b4f5d94934c290479180868a32c15ba36a6d9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdbf51bfa4b0411820806777da36d93d49bc49a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49930","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:14.990","lastModified":"2024-10-21T18:15:14.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix array out-of-bound access in SoC stats\n\nCurrently, the ath11k_soc_dp_stats::hal_reo_error array is defined with a\nmaximum size of DP_REO_DST_RING_MAX. However, the ath11k_dp_process_rx()\nfunction access ath11k_soc_dp_stats::hal_reo_error using the REO\ndestination SRNG ring ID, which is incorrect. SRNG ring ID differ from\nnormal ring ID, and this usage leads to out-of-bounds array access. To fix\nthis issue, modify ath11k_dp_process_rx() to use the normal ring ID\ndirectly instead of the SRNG ring ID to avoid out-of-bounds array access.\n\nTested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b77f5ee11c89754fb836af8f76799d3b72ae2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f26f26944035ec67546a944f182cbad6577a9c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4dd732893bd38cec51f887244314e2b47f0d658f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6045ef5b4b00fee3629689f791992900a1c94009","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69f253e46af98af17e3efa3e5dfa72fcb7d1983d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73e235728e515faccc104b0153b47d0f263b3344","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a552bc2f3efe2aaf77a85cb34cdf4a63d81a1a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49931","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.080","lastModified":"2024-10-21T18:15:15.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix array out-of-bound access in SoC stats\n\nCurrently, the ath12k_soc_dp_stats::hal_reo_error array is defined with a\nmaximum size of DP_REO_DST_RING_MAX. However, the ath12k_dp_rx_process()\nfunction access ath12k_soc_dp_stats::hal_reo_error using the REO\ndestination SRNG ring ID, which is incorrect. SRNG ring ID differ from\nnormal ring ID, and this usage leads to out-of-bounds array access. To\nfix this issue, modify ath12k_dp_rx_process() to use the normal ring ID\ndirectly instead of the SRNG ring ID to avoid out-of-bounds array access.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a4aef827a41cdaf6201bbaf773c1eae4e20e967b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad791e3ec60cb66c1e4dc121ffbf872df312427d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0e4274d9dc9f8409d56d622cd3ecf7b6fd49e2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e106b7ad13c1d246adaa57df73edb8f8b8acb240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49932","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.140","lastModified":"2024-10-21T18:15:15.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't readahead the relocation inode on RST\n\nOn relocation we're doing readahead on the relocation inode, but if the\nfilesystem is backed by a RAID stripe tree we can get ENOENT (e.g. due to\npreallocated extents not being mapped in the RST) from the lookup.\n\nBut readahead doesn't handle the error and submits invalid reads to the\ndevice, causing an assertion in the scatter-gather list code:\n\n  BTRFS info (device nvme1n1): balance: start -d -m -s\n  BTRFS info (device nvme1n1): relocating block group 6480920576 flags data|raid0\n  BTRFS error (device nvme1n1): cannot find raid-stripe for logical [6481928192, 6481969152] devid 2, profile raid0\n  ------------[ cut here ]------------\n  kernel BUG at include\/linux\/scatterlist.h:115!\n  Oops: invalid opcode: 0000 [#1] PREEMPT SMP PTI\n  CPU: 0 PID: 1012 Comm: btrfs Not tainted 6.10.0-rc7+ #567\n  RIP: 0010:__blk_rq_map_sg+0x339\/0x4a0\n  RSP: 0018:ffffc90001a43820 EFLAGS: 00010202\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffea00045d4802\n  RDX: 0000000117520000 RSI: 0000000000000000 RDI: ffff8881027d1000\n  RBP: 0000000000003000 R08: ffffea00045d4902 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000001000 R12: ffff8881003d10b8\n  R13: ffffc90001a438f0 R14: 0000000000000000 R15: 0000000000003000\n  FS:  00007fcc048a6900(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 000000002cd11000 CR3: 00000001109ea001 CR4: 0000000000370eb0\n  Call Trace:\n   <TASK>\n   ? __die_body.cold+0x14\/0x25\n   ? die+0x2e\/0x50\n   ? do_trap+0xca\/0x110\n   ? do_error_trap+0x65\/0x80\n   ? __blk_rq_map_sg+0x339\/0x4a0\n   ? exc_invalid_op+0x50\/0x70\n   ? __blk_rq_map_sg+0x339\/0x4a0\n   ? asm_exc_invalid_op+0x1a\/0x20\n   ? __blk_rq_map_sg+0x339\/0x4a0\n   nvme_prep_rq.part.0+0x9d\/0x770\n   nvme_queue_rq+0x7d\/0x1e0\n   __blk_mq_issue_directly+0x2a\/0x90\n   ? blk_mq_get_budget_and_tag+0x61\/0x90\n   blk_mq_try_issue_list_directly+0x56\/0xf0\n   blk_mq_flush_plug_list.part.0+0x52b\/0x5d0\n   __blk_flush_plug+0xc6\/0x110\n   blk_finish_plug+0x28\/0x40\n   read_pages+0x160\/0x1c0\n   page_cache_ra_unbounded+0x109\/0x180\n   relocate_file_extent_cluster+0x611\/0x6a0\n   ? btrfs_search_slot+0xba4\/0xd20\n   ? balance_dirty_pages_ratelimited_flags+0x26\/0xb00\n   relocate_data_extent.constprop.0+0x134\/0x160\n   relocate_block_group+0x3f2\/0x500\n   btrfs_relocate_block_group+0x250\/0x430\n   btrfs_relocate_chunk+0x3f\/0x130\n   btrfs_balance+0x71b\/0xef0\n   ? kmalloc_trace_noprof+0x13b\/0x280\n   btrfs_ioctl+0x2c2e\/0x3030\n   ? kvfree_call_rcu+0x1e6\/0x340\n   ? list_lru_add_obj+0x66\/0x80\n   ? mntput_no_expire+0x3a\/0x220\n   __x64_sys_ioctl+0x96\/0xc0\n   do_syscall_64+0x54\/0x110\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n  RIP: 0033:0x7fcc04514f9b\n  Code: Unable to access opcode bytes at 0x7fcc04514f71.\n  RSP: 002b:00007ffeba923370 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n  RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fcc04514f9b\n  RDX: 00007ffeba923460 RSI: 00000000c4009420 RDI: 0000000000000003\n  RBP: 0000000000000000 R08: 0000000000000013 R09: 0000000000000001\n  R10: 00007fcc043fbba8 R11: 0000000000000246 R12: 00007ffeba924fc5\n  R13: 00007ffeba923460 R14: 0000000000000002 R15: 00000000004d4bb0\n   <\/TASK>\n  Modules linked in:\n  ---[ end trace 0000000000000000 ]---\n  RIP: 0010:__blk_rq_map_sg+0x339\/0x4a0\n  RSP: 0018:ffffc90001a43820 EFLAGS: 00010202\n  RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffea00045d4802\n  RDX: 0000000117520000 RSI: 0000000000000000 RDI: ffff8881027d1000\n  RBP: 0000000000003000 R08: ffffea00045d4902 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000001000 R12: ffff8881003d10b8\n  R13: ffffc90001a438f0 R14: 0000000000000000 R15: 0000000000003000\n  FS:  00007fcc048a6900(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007fcc04514f71 CR3: 00000001109ea001 CR4: 0000000000370eb0\n  Kernel p\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04915240e2c3a018e4c7f23418478d27226c8957","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7a1218a983ab98aba140dc20b25f60b39ee4033","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49933","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.210","lastModified":"2024-10-21T18:15:15.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk_iocost: fix more out of bound shifts\n\nRecently running UBSAN caught few out of bound shifts in the\nioc_forgive_debts() function:\n\nUBSAN: shift-out-of-bounds in block\/blk-iocost.c:2142:38\nshift exponent 80 is too large for 64-bit type 'u64' (aka 'unsigned long\nlong')\n...\nUBSAN: shift-out-of-bounds in block\/blk-iocost.c:2144:30\nshift exponent 80 is too large for 64-bit type 'u64' (aka 'unsigned long\nlong')\n...\nCall Trace:\n<IRQ>\ndump_stack_lvl+0xca\/0x130\n__ubsan_handle_shift_out_of_bounds+0x22c\/0x280\n? __lock_acquire+0x6441\/0x7c10\nioc_timer_fn+0x6cec\/0x7750\n? blk_iocost_init+0x720\/0x720\n? call_timer_fn+0x5d\/0x470\ncall_timer_fn+0xfa\/0x470\n? blk_iocost_init+0x720\/0x720\n__run_timer_base+0x519\/0x700\n...\n\nActual impact of this issue was not identified but I propose to fix the\nundefined behaviour.\nThe proposed fix to prevent those out of bound shifts consist of\nprecalculating exponent before using it the shift operations by taking\nmin value from the actual exponent and maximum possible number of bits."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ab2cfe19700fb3dde4c7dfec392acff34db3120","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b120f151871eb47ce9f283c007af3f8ae1d990e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f61d509257d6a05763d05bf37943b35306522b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/364022095bdd4108efdaaa68576afa4712a5d085","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59121bb38fdc01434ea3fe361ee02b59f036227f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bce8005ec0dcb23a58300e8522fe4a31da606fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4ef9bef023d5c543cb0f3194ecacfd47ef590ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49934","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.273","lastModified":"2024-10-21T18:15:15.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/inode: Prevent dump_mapping() accessing invalid dentry.d_name.name\n\nIt's observed that a crash occurs during hot-remove a memory device,\nin which user is accessing the hugetlb. See calltrace as following:\n\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 14045 at arch\/x86\/mm\/fault.c:1278 do_user_addr_fault+0x2a0\/0x790\nModules linked in: kmem device_dax cxl_mem cxl_pmem cxl_port cxl_pci dax_hmem dax_pmem nd_pmem cxl_acpi nd_btt cxl_core crc32c_intel nvme virtiofs fuse nvme_core nfit libnvdimm dm_multipath scsi_dh_rdac scsi_dh_emc s\nmirror dm_region_hash dm_log dm_mod\nCPU: 1 PID: 14045 Comm: daxctl Not tainted 6.10.0-rc2-lizhijian+ #492\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:do_user_addr_fault+0x2a0\/0x790\nCode: 48 8b 00 a8 04 0f 84 b5 fe ff ff e9 1c ff ff ff 4c 89 e9 4c 89 e2 be 01 00 00 00 bf 02 00 00 00 e8 b5 ef 24 00 e9 42 fe ff ff <0f> 0b 48 83 c4 08 4c 89 ea 48 89 ee 4c 89 e7 5b 5d 41 5c 41 5d 41\nRSP: 0000:ffffc90000a575f0 EFLAGS: 00010046\nRAX: ffff88800c303600 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000001000 RSI: ffffffff82504162 RDI: ffffffff824b2c36\nRBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: ffffc90000a57658\nR13: 0000000000001000 R14: ffff88800bc2e040 R15: 0000000000000000\nFS:  00007f51cb57d880(0000) GS:ffff88807fd00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000001000 CR3: 00000000072e2004 CR4: 00000000001706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ? __warn+0x8d\/0x190\n ? do_user_addr_fault+0x2a0\/0x790\n ? report_bug+0x1c3\/0x1d0\n ? handle_bug+0x3c\/0x70\n ? exc_invalid_op+0x14\/0x70\n ? asm_exc_invalid_op+0x16\/0x20\n ? do_user_addr_fault+0x2a0\/0x790\n ? exc_page_fault+0x31\/0x200\n exc_page_fault+0x68\/0x200\n<...snip...>\nBUG: unable to handle page fault for address: 0000000000001000\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 800000000ad92067 P4D 800000000ad92067 PUD 7677067 PMD 0\n Oops: Oops: 0000 [#1] PREEMPT SMP PTI\n ---[ end trace 0000000000000000 ]---\n BUG: unable to handle page fault for address: 0000000000001000\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 800000000ad92067 P4D 800000000ad92067 PUD 7677067 PMD 0\n Oops: Oops: 0000 [#1] PREEMPT SMP PTI\n CPU: 1 PID: 14045 Comm: daxctl Kdump: loaded Tainted: G        W          6.10.0-rc2-lizhijian+ #492\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04\/01\/2014\n RIP: 0010:dentry_name+0x1f4\/0x440\n<...snip...>\n? dentry_name+0x2fa\/0x440\nvsnprintf+0x1f3\/0x4f0\nvprintk_store+0x23a\/0x540\nvprintk_emit+0x6d\/0x330\n_printk+0x58\/0x80\ndump_mapping+0x10b\/0x1a0\n? __pfx_free_object_rcu+0x10\/0x10\n__dump_page+0x26b\/0x3e0\n? vprintk_emit+0xe0\/0x330\n? _printk+0x58\/0x80\n? dump_page+0x17\/0x50\ndump_page+0x17\/0x50\ndo_migrate_range+0x2f7\/0x7f0\n? do_migrate_range+0x42\/0x7f0\n? offline_pages+0x2f4\/0x8c0\noffline_pages+0x60a\/0x8c0\nmemory_subsys_offline+0x9f\/0x1c0\n? lockdep_hardirqs_on+0x77\/0x100\n? _raw_spin_unlock_irqrestore+0x38\/0x60\ndevice_offline+0xe3\/0x110\nstate_store+0x6e\/0xc0\nkernfs_fop_write_iter+0x143\/0x200\nvfs_write+0x39f\/0x560\nksys_write+0x65\/0xf0\ndo_syscall_64+0x62\/0x130\n\nPreviously, some sanity check have been done in dump_mapping() before\nthe print facility parsing '%pd' though, it's still possible to run into\nan invalid dentry.d_name.name.\n\nSince dump_mapping() only needs to dump the filename only, retrieve it\nby itself in a safer way to prevent an unnecessary crash.\n\nNote that either retrieving the filename with '%pd' or\nstrncpy_from_kernel_nofault(), the filename could be unreliable."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7f7b850689ac06a62befe26e1fd1806799e7f152","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef921bc72328b577cb45772ff7921cba4773b74a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f92b8829c6e75632de4e2b9f70e7a7e6c5c2ba98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49935","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.350","lastModified":"2024-10-21T18:15:15.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: PAD: fix crash in exit_round_robin()\n\nThe kernel occasionally crashes in cpumask_clear_cpu(), which is called\nwithin exit_round_robin(), because when executing clear_bit(nr, addr) with\nnr set to 0xffffffff, the address calculation may cause misalignment within\nthe memory, leading to access to an invalid memory address.\n\n----------\nBUG: unable to handle kernel paging request at ffffffffe0740618\n        ...\nCPU: 3 PID: 2919323 Comm: acpi_pad\/14 Kdump: loaded Tainted: G           OE  X --------- -  - 4.18.0-425.19.2.el8_7.x86_64 #1\n        ...\nRIP: 0010:power_saving_thread+0x313\/0x411 [acpi_pad]\nCode: 89 cd 48 89 d3 eb d1 48 c7 c7 55 70 72 c0 e8 64 86 b0 e4 c6 05 0d a1 02 00 01 e9 bc fd ff ff 45 89 e4 42 8b 04 a5 20 82 72 c0 <f0> 48 0f b3 05 f4 9c 01 00 42 c7 04 a5 20 82 72 c0 ff ff ff ff 31\nRSP: 0018:ff72a5d51fa77ec8 EFLAGS: 00010202\nRAX: 00000000ffffffff RBX: ff462981e5d8cb80 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246\nRBP: ff46297556959d80 R08: 0000000000000382 R09: ff46297c8d0f38d8\nR10: 0000000000000000 R11: 0000000000000001 R12: 000000000000000e\nR13: 0000000000000000 R14: ffffffffffffffff R15: 000000000000000e\nFS:  0000000000000000(0000) GS:ff46297a800c0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffffe0740618 CR3: 0000007e20410004 CR4: 0000000000771ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? acpi_pad_add+0x120\/0x120 [acpi_pad]\n kthread+0x10b\/0x130\n ? set_kthread_struct+0x50\/0x50\n ret_from_fork+0x1f\/0x40\n        ...\nCR2: ffffffffe0740618\n\ncrash> dis -lr ffffffffc0726923\n        ...\n\/usr\/src\/debug\/kernel-4.18.0-425.19.2.el8_7\/linux-4.18.0-425.19.2.el8_7.x86_64\/.\/include\/linux\/cpumask.h: 114\n0xffffffffc0726918 <power_saving_thread+776>:\tmov    %r12d,%r12d\n\/usr\/src\/debug\/kernel-4.18.0-425.19.2.el8_7\/linux-4.18.0-425.19.2.el8_7.x86_64\/.\/include\/linux\/cpumask.h: 325\n0xffffffffc072691b <power_saving_thread+779>:\tmov    -0x3f8d7de0(,%r12,4),%eax\n\/usr\/src\/debug\/kernel-4.18.0-425.19.2.el8_7\/linux-4.18.0-425.19.2.el8_7.x86_64\/.\/arch\/x86\/include\/asm\/bitops.h: 80\n0xffffffffc0726923 <power_saving_thread+787>:\tlock btr %rax,0x19cf4(%rip)        # 0xffffffffc0740620 <pad_busy_cpus_bits>\n\ncrash> px tsk_in_cpu[14]\n$66 = 0xffffffff\n\ncrash> px 0xffffffffc072692c+0x19cf4\n$99 = 0xffffffffc0740620\n\ncrash> sym 0xffffffffc0740620\nffffffffc0740620 (b) pad_busy_cpus_bits [acpi_pad]\n\ncrash> px pad_busy_cpus_bits[0]\n$42 = 0xfffc0\n----------\n\nTo fix this, ensure that tsk_in_cpu[tsk_index] != -1 before calling\ncpumask_clear_cpu() in exit_round_robin(), just as it is done in\nround_robin_cpu().\n\n[ rjw: Subject edit, avoid updates to the same value ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03593dbb0b272ef7b0358b099841e65735422aca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a2ed70a549e61c5181bad5db418d223b68ae932","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27c045f868f0e5052c6b532868a65e0cd250c8fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a599da16ebad442ce295d8d2d5c488e3992822","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a8e45743d6a120f863fb14b72dc59616597019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92e5661b7d0727ab912b76625a88b33fdb9b609a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49936","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.413","lastModified":"2024-10-21T18:15:15.413","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/xen-netback: prevent UAF in xenvif_flush_hash()\n\nDuring the list_for_each_entry_rcu iteration call of xenvif_flush_hash,\nkfree_rcu does not exist inside the rcu read critical section, so if\nkfree_rcu is called when the rcu grace period ends during the iteration,\nUAF occurs when accessing head->next after the entry becomes free.\n\nTherefore, to solve this, you need to change it to list_for_each_entry_safe."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fa5e94a1811d68fbffa0725efe6d4ca62c03d12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/143edf098b80669d05245b2f2367dd156a83a2c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54d8639af5568fc41c0e274fc3ec9cf86c59fcbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0465723b8581cad27164c9073fd780904cd22d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7f0073fcd12ed7de185ef2c0af9d0fa1ddef22c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d408889d4b54f5501e4becc4dbbb9065143fbf4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efcff6ce7467f01f0753609f420333f3f2ceceda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49937","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.477","lastModified":"2024-10-21T18:15:15.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: Set correct chandef when starting CAC\n\nWhen starting CAC in a mode other than AP mode, it return a\n\"WARNING: CPU: 0 PID: 63 at cfg80211_chandef_dfs_usable+0x20\/0xaf [cfg80211]\"\ncaused by the chandef.chan being null at the end of CAC.\n\nSolution: Ensure the channel definition is set for the different modes\nwhen starting CAC to avoid getting a NULL 'chan' at the end of CAC.\n\n Call Trace:\n  ? show_regs.part.0+0x14\/0x16\n  ? __warn+0x67\/0xc0\n  ? cfg80211_chandef_dfs_usable+0x20\/0xaf [cfg80211]\n  ? report_bug+0xa7\/0x130\n  ? exc_overflow+0x30\/0x30\n  ? handle_bug+0x27\/0x50\n  ? exc_invalid_op+0x18\/0x60\n  ? handle_exception+0xf6\/0xf6\n  ? exc_overflow+0x30\/0x30\n  ? cfg80211_chandef_dfs_usable+0x20\/0xaf [cfg80211]\n  ? exc_overflow+0x30\/0x30\n  ? cfg80211_chandef_dfs_usable+0x20\/0xaf [cfg80211]\n  ? regulatory_propagate_dfs_state.cold+0x1b\/0x4c [cfg80211]\n  ? cfg80211_propagate_cac_done_wk+0x1a\/0x30 [cfg80211]\n  ? process_one_work+0x165\/0x280\n  ? worker_thread+0x120\/0x3f0\n  ? kthread+0xc2\/0xf0\n  ? process_one_work+0x280\/0x280\n  ? kthread_complete_and_exit+0x20\/0x20\n  ? ret_from_fork+0x19\/0x24\n\n[shorten subject, remove OCB, reorder cases to match previous list]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04053e55dd50741cf6c59b9bbaa4238218c05c70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20361712880396e44ce80aaeec2d93d182035651","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f32191e50b75e0f75fae1bb925cdf51d8df0a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c628026563f4ea9e0413dd4b69429e4a1db240b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4dbfda159e43d49b43003cc3c2914751939035f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49938","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.547","lastModified":"2024-10-21T18:15:15.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath9k_htc: Use __skb_set_length() for resetting urb before resubmit\n\nSyzbot points out that skb_trim() has a sanity check on the existing length of\nthe skb, which can be uninitialised in some error paths. The intent here is\nclearly just to reset the length to zero before resubmitting, so switch to\ncalling __skb_set_length(skb, 0) directly. In addition, __skb_set_length()\nalready contains a call to skb_reset_tail_pointer(), so remove the redundant\ncall.\n\nThe syzbot report came from ath9k_hif_usb_reg_in_cb(), but there's a similar\nusage of skb_trim() in ath9k_hif_usb_rx_cb(), change both while we're at it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/012ae530afa0785102360de452745d33c99a321b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c230210ec0ae6ed08306ac70dc21c24b817bb95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a875220670475d9247e576c15dc29823100a4e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94745807f3ebd379f23865e6dab196f220664179","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9f4e28e8adaf0715bd4e01462af0a52ee46b01f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b02eb7c86ff2ef1411c3095ec8a52b13f68db04f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e37e348835032d6940ec89308cc8996ded691d2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49939","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.620","lastModified":"2024-10-21T18:15:15.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: avoid to add interface to list twice when SER\n\nIf SER L2 occurs during the WoWLAN resume flow, the add interface flow\nis triggered by ieee80211_reconfig(). However, due to\nrtw89_wow_resume() return failure, it will cause the add interface flow\nto be executed again, resulting in a double add list and causing a kernel\npanic. Therefore, we have added a check to prevent double adding of the\nlist.\n\nlist_add double add: new=ffff99d6992e2010, prev=ffff99d6992e2010, next=ffff99d695302628.\n------------[ cut here ]------------\nkernel BUG at lib\/list_debug.c:37!\ninvalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 9 Comm: kworker\/0:1 Tainted: G        W  O       6.6.30-02659-gc18865c4dfbd #1 770df2933251a0e3c888ba69d1053a817a6376a7\nHardware name: HP Grunt\/Grunt, BIOS Google_Grunt.11031.169.0 06\/24\/2021\nWorkqueue: events_freezable ieee80211_restart_work [mac80211]\nRIP: 0010:__list_add_valid_or_report+0x5e\/0xb0\nCode: c7 74 18 48 39 ce 74 13 b0 01 59 5a 5e 5f 41 58 41 59 41 5a 5d e9 e2 d6 03 00 cc 48 c7 c7 8d 4f 17 83 48 89 c2 e8 02 c0 00 00 <0f> 0b 48 c7 c7 aa 8c 1c 83 e8 f4 bf 00 00 0f 0b 48 c7 c7 c8 bc 12\nRSP: 0018:ffffa91b8007bc50 EFLAGS: 00010246\nRAX: 0000000000000058 RBX: ffff99d6992e0900 RCX: a014d76c70ef3900\nRDX: ffffa91b8007bae8 RSI: 00000000ffffdfff RDI: 0000000000000001\nRBP: ffffa91b8007bc88 R08: 0000000000000000 R09: ffffa91b8007bae0\nR10: 00000000ffffdfff R11: ffffffff83a79800 R12: ffff99d695302060\nR13: ffff99d695300900 R14: ffff99d6992e1be0 R15: ffff99d6992e2010\nFS:  0000000000000000(0000) GS:ffff99d6aac00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000078fbdba43480 CR3: 000000010e464000 CR4: 00000000001506f0\nCall Trace:\n <TASK>\n ? __die_body+0x1f\/0x70\n ? die+0x3d\/0x60\n ? do_trap+0xa4\/0x110\n ? __list_add_valid_or_report+0x5e\/0xb0\n ? do_error_trap+0x6d\/0x90\n ? __list_add_valid_or_report+0x5e\/0xb0\n ? handle_invalid_op+0x30\/0x40\n ? __list_add_valid_or_report+0x5e\/0xb0\n ? exc_invalid_op+0x3c\/0x50\n ? asm_exc_invalid_op+0x16\/0x20\n ? __list_add_valid_or_report+0x5e\/0xb0\n rtw89_ops_add_interface+0x309\/0x310 [rtw89_core 7c32b1ee6854761c0321027c8a58c5160e41f48f]\n drv_add_interface+0x5c\/0x130 [mac80211 83e989e6e616bd5b4b8a2b0a9f9352a2c385a3bc]\n ieee80211_reconfig+0x241\/0x13d0 [mac80211 83e989e6e616bd5b4b8a2b0a9f9352a2c385a3bc]\n ? finish_wait+0x3e\/0x90\n ? synchronize_rcu_expedited+0x174\/0x260\n ? sync_rcu_exp_done_unlocked+0x50\/0x50\n ? wake_bit_function+0x40\/0x40\n ieee80211_restart_work+0xf0\/0x140 [mac80211 83e989e6e616bd5b4b8a2b0a9f9352a2c385a3bc]\n process_scheduled_works+0x1e5\/0x480\n worker_thread+0xea\/0x1e0\n kthread+0xdb\/0x110\n ? move_linked_works+0x90\/0x90\n ? kthread_associate_blkcg+0xa0\/0xa0\n ret_from_fork+0x3b\/0x50\n ? kthread_associate_blkcg+0xa0\/0xa0\n ret_from_fork_asm+0x11\/0x20\n <\/TASK>\nModules linked in: dm_integrity async_xor xor async_tx lz4 lz4_compress zstd zstd_compress zram zsmalloc rfcomm cmac uinput algif_hash algif_skcipher af_alg btusb btrtl iio_trig_hrtimer industrialio_sw_trigger btmtk industrialio_configfs btbcm btintel uvcvideo videobuf2_vmalloc iio_trig_sysfs videobuf2_memops videobuf2_v4l2 videobuf2_common uvc snd_hda_codec_hdmi veth snd_hda_intel snd_intel_dspcfg acpi_als snd_hda_codec industrialio_triggered_buffer kfifo_buf snd_hwdep industrialio i2c_piix4 snd_hda_core designware_i2s ip6table_nat snd_soc_max98357a xt_MASQUERADE xt_cgroup snd_soc_acp_rt5682_mach fuse rtw89_8922ae(O) rtw89_8922a(O) rtw89_pci(O) rtw89_core(O) 8021q mac80211(O) bluetooth ecdh_generic ecc cfg80211 r8152 mii joydev\ngsmi: Log Shutdown Reason 0x03\n---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37c319503023de49a4c87301c8998c8d928112cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/490eddc836b2a6ec286e5df14bed4c7cf5e1f475","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dd5d2514a8ea58f12096e888b0bd050d7eae20a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdc73f2cfbe897f4733156df211d79ced649b23c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49940","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.703","lastModified":"2024-10-21T18:15:15.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nl2tp: prevent possible tunnel refcount underflow\n\nWhen a session is created, it sets a backpointer to its tunnel. When\nthe session refcount drops to 0, l2tp_session_free drops the tunnel\nrefcount if session->tunnel is non-NULL. However, session->tunnel is\nset in l2tp_session_create, before the tunnel refcount is incremented\nby l2tp_session_register, which leaves a small window where\nsession->tunnel is non-NULL when the tunnel refcount hasn't been\nbumped.\n\nMoving the assignment to l2tp_session_register is trivial but\nl2tp_session_create calls l2tp_session_set_header_len which uses\nsession->tunnel to get the tunnel's encap. Add an encap arg to\nl2tp_session_set_header_len to avoid using session->tunnel.\n\nIf l2tpv3 sessions have colliding IDs, it is possible for\nl2tp_v3_session_get to race with l2tp_session_register and fetch a\nsession which doesn't yet have session->tunnel set. Add a check for\nthis case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24256415d18695b46da06c93135f5b51c548b950","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7415e60c25a6108cd7955a20b2e66b6251ffe02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49941","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.780","lastModified":"2024-10-21T18:15:15.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: Fix potential NULL pointer dereference in gpiod_get_label()\n\nIn `gpiod_get_label()`, it is possible that `srcu_dereference_check()` may\nreturn a NULL pointer, leading to a scenario where `label->str` is accessed\nwithout verifying if `label` itself is NULL.\n\nThis patch adds a proper NULL check for `label` before accessing\n`label->str`. The check for `label->str != NULL` is removed because\n`label->str` can never be NULL if `label` is not NULL.\n\nThis fixes the issue where the label name was being printed as `(efault)`\nwhen dumping the sysfs GPIO file when `label == NULL`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7b99b5ab885993bff010ebcd93be5e511c56e28a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ee4b907d7a5d7a53b4ff7727c371ff3d44ccbbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49942","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.843","lastModified":"2024-10-21T18:15:15.843","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe: Prevent null pointer access in xe_migrate_copy\n\nxe_migrate_copy designed to copy content of TTM resources. When source\nresource is null, it will trigger a NULL pointer dereference in\nxe_migrate_copy. To avoid this situation, update lacks source flag to\ntrue for this case, the flag will trigger xe_migrate_clear rather than\nxe_migrate_copy.\n\nIssue trace:\n<7> [317.089847] xe 0000:00:02.0: [drm:xe_migrate_copy [xe]] Pass 14,\n sizes: 4194304 & 4194304\n<7> [317.089945] xe 0000:00:02.0: [drm:xe_migrate_copy [xe]] Pass 15,\n sizes: 4194304 & 4194304\n<1> [317.128055] BUG: kernel NULL pointer dereference, address:\n 0000000000000010\n<1> [317.128064] #PF: supervisor read access in kernel mode\n<1> [317.128066] #PF: error_code(0x0000) - not-present page\n<6> [317.128069] PGD 0 P4D 0\n<4> [317.128071] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n<4> [317.128074] CPU: 1 UID: 0 PID: 1440 Comm: kunit_try_catch Tainted:\n G     U           N 6.11.0-rc7-xe #1\n<4> [317.128078] Tainted: [U]=USER, [N]=TEST\n<4> [317.128080] Hardware name: Intel Corporation Lunar Lake Client\n Platform\/LNL-M LP5 RVP1, BIOS LNLMFWI1.R00.3221.D80.2407291239 07\/29\/2024\n<4> [317.128082] RIP: 0010:xe_migrate_copy+0x66\/0x13e0 [xe]\n<4> [317.128158] Code: 00 00 48 89 8d e0 fe ff ff 48 8b 40 10 4c 89 85 c8\n fe ff ff 44 88 8d bd fe ff ff 65 48 8b 3c 25 28 00 00 00 48 89 7d d0 31\n ff <8b> 79 10 48 89 85 a0 fe ff ff 48 8b 00 48 89 b5 d8 fe ff ff 83 ff\n<4> [317.128162] RSP: 0018:ffffc9000167f9f0 EFLAGS: 00010246\n<4> [317.128164] RAX: ffff8881120d8028 RBX: ffff88814d070428 RCX:\n 0000000000000000\n<4> [317.128166] RDX: ffff88813cb99c00 RSI: 0000000004000000 RDI:\n 0000000000000000\n<4> [317.128168] RBP: ffffc9000167fbb8 R08: ffff88814e7b1f08 R09:\n 0000000000000001\n<4> [317.128170] R10: 0000000000000001 R11: 0000000000000001 R12:\n ffff88814e7b1f08\n<4> [317.128172] R13: ffff88814e7b1f08 R14: ffff88813cb99c00 R15:\n 0000000000000001\n<4> [317.128174] FS:  0000000000000000(0000) GS:ffff88846f280000(0000)\n knlGS:0000000000000000\n<4> [317.128176] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4> [317.128178] CR2: 0000000000000010 CR3: 000000011f676004 CR4:\n 0000000000770ef0\n<4> [317.128180] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n 0000000000000000\n<4> [317.128182] DR3: 0000000000000000 DR6: 00000000ffff07f0 DR7:\n 0000000000000400\n<4> [317.128184] PKRU: 55555554\n<4> [317.128185] Call Trace:\n<4> [317.128187]  <TASK>\n<4> [317.128189]  ? show_regs+0x67\/0x70\n<4> [317.128194]  ? __die_body+0x20\/0x70\n<4> [317.128196]  ? __die+0x2b\/0x40\n<4> [317.128198]  ? page_fault_oops+0x15f\/0x4e0\n<4> [317.128203]  ? do_user_addr_fault+0x3fb\/0x970\n<4> [317.128205]  ? lock_acquire+0xc7\/0x2e0\n<4> [317.128209]  ? exc_page_fault+0x87\/0x2b0\n<4> [317.128212]  ? asm_exc_page_fault+0x27\/0x30\n<4> [317.128216]  ? xe_migrate_copy+0x66\/0x13e0 [xe]\n<4> [317.128263]  ? __lock_acquire+0xb9d\/0x26f0\n<4> [317.128265]  ? __lock_acquire+0xb9d\/0x26f0\n<4> [317.128267]  ? sg_free_append_table+0x20\/0x80\n<4> [317.128271]  ? lock_acquire+0xc7\/0x2e0\n<4> [317.128273]  ? mark_held_locks+0x4d\/0x80\n<4> [317.128275]  ? trace_hardirqs_on+0x1e\/0xd0\n<4> [317.128278]  ? _raw_spin_unlock_irqrestore+0x31\/0x60\n<4> [317.128281]  ? __pm_runtime_resume+0x60\/0xa0\n<4> [317.128284]  xe_bo_move+0x682\/0xc50 [xe]\n<4> [317.128315]  ? lock_is_held_type+0xaa\/0x120\n<4> [317.128318]  ttm_bo_handle_move_mem+0xe5\/0x1a0 [ttm]\n<4> [317.128324]  ttm_bo_validate+0xd1\/0x1a0 [ttm]\n<4> [317.128328]  shrink_test_run_device+0x721\/0xc10 [xe]\n<4> [317.128360]  ? find_held_lock+0x31\/0x90\n<4> [317.128363]  ? lock_release+0xd1\/0x2a0\n<4> [317.128365]  ? __pfx_kunit_generic_run_threadfn_adapter+0x10\/0x10\n [kunit]\n<4> [317.128370]  xe_bo_shrink_kunit+0x11\/0x20 [xe]\n<4> [317.128397]  kunit_try_run_case+0x6e\/0x150 [kunit]\n<4> [317.128400]  ? trace_hardirqs_on+0x1e\/0xd0\n<4> [317.128402]  ? _raw_spin_unlock_irqrestore+0x31\/0x60\n<4> [317.128404]  kunit_generic_run_threadfn_adapter+0x1e\/0x40 [ku\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16e0267db156f8a4ea16bfb3ac3f5743c9698df3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7257d9c9a3c6cfe26c428e9b7ae21d61f2f55a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5199b6971f0717c2d31685953971fa2e1b9e1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49943","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.920","lastModified":"2024-10-21T18:15:15.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/guc_submit: add missing locking in wedged_fini\n\nAny non-wedged queue can have a zero refcount here and can be running\nconcurrently with an async queue destroy, therefore dereferencing the\nqueue ptr to check wedge status after the lookup can trigger UAF if\nqueue is not wedged.  Fix this by keeping the submission_state lock held\naround the check to postpone the free and make the check safe, before\ndropping again around the put() to avoid the deadlock.\n\n(cherry picked from commit d28af0b6b9580b9f90c265a7da0315b0ad20bbfd)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/790533e44bfc7af929842fccd9674c9f424d4627","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d88f9bab7e62dd0dbe983fa70cf040042a60cc84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49944","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:15.993","lastModified":"2024-10-21T18:15:15.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: set sk_state back to CLOSED if autobind fails in sctp_listen_start\n\nIn sctp_listen_start() invoked by sctp_inet_listen(), it should set the\nsk_state back to CLOSED if sctp_autobind() fails due to whatever reason.\n\nOtherwise, next time when calling sctp_inet_listen(), if sctp_sk(sk)->reuse\nis already set via setsockopt(SCTP_REUSE_PORT), sctp_sk(sk)->bind_hash will\nbe dereferenced as sk_state is LISTENING, which causes a crash as bind_hash\nis NULL.\n\n  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n  RIP: 0010:sctp_inet_listen+0x7f0\/0xa20 net\/sctp\/socket.c:8617\n  Call Trace:\n   <TASK>\n   __sys_listen_socket net\/socket.c:1883 [inline]\n   __sys_listen+0x1b7\/0x230 net\/socket.c:1894\n   __do_sys_listen net\/socket.c:1902 [inline]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7f64cb5b4d8c872296eda0fdce3bcf099eec7aa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8beee4d8dee76b67c75dc91fd8185d91e845c160","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9230a59eda0878d7ecaa901d876aec76f57bd455","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd70c8a89ef99c3d53127fe19e51ef47c3f860fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7a8442195e8ebd97df467ce4742980ab57edcce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e914bf68dab88815a7ae7b7a3a5e8913c8ff14a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f032e1dac30b3376c7d6026fb01a8c403c47a80d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49945","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.073","lastModified":"2024-10-21T18:15:16.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/ncsi: Disable the ncsi work before freeing the associated structure\n\nThe work function can run after the ncsi device is freed, resulting\nin use-after-free bugs or kernel panic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a0ffa68c70b367358b2672cdab6fa5bc4c40de2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd41dab62f32d9e9e0669af8459d12a93834b238","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6ca58696749268181f43150b3553f2bafd71e42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49946","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.133","lastModified":"2024-10-21T18:15:16.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nppp: do not assume bh is held in ppp_channel_bridge_input()\n\nNetworking receive path is usually handled from BH handler.\nHowever, some protocols need to acquire the socket lock, and\npackets might be stored in the socket backlog is the socket was\nowned by a user process.\n\nIn this case, release_sock(), __release_sock(), and sk_backlog_rcv()\nmight call the sk->sk_backlog_rcv() handler in process context.\n\nsybot caught ppp was not considering this case in\nppp_channel_bridge_input() :\n\nWARNING: inconsistent lock state\n6.11.0-rc7-syzkaller-g5f5673607153 #0 Not tainted\n--------------------------------\ninconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.\nksoftirqd\/1\/24 [HC0[0]:SC1[1]:HE1:SE0] takes:\n ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: spin_lock include\/linux\/spinlock.h:351 [inline]\n ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: ppp_channel_bridge_input drivers\/net\/ppp\/ppp_generic.c:2272 [inline]\n ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: ppp_input+0x16c\/0x854 drivers\/net\/ppp\/ppp_generic.c:2304\n{SOFTIRQ-ON-W} state was registered at:\n   lock_acquire+0x240\/0x728 kernel\/locking\/lockdep.c:5759\n   __raw_spin_lock include\/linux\/spinlock_api_smp.h:133 [inline]\n   _raw_spin_lock+0x48\/0x60 kernel\/locking\/spinlock.c:154\n   spin_lock include\/linux\/spinlock.h:351 [inline]\n   ppp_channel_bridge_input drivers\/net\/ppp\/ppp_generic.c:2272 [inline]\n   ppp_input+0x16c\/0x854 drivers\/net\/ppp\/ppp_generic.c:2304\n   pppoe_rcv_core+0xfc\/0x314 drivers\/net\/ppp\/pppoe.c:379\n   sk_backlog_rcv include\/net\/sock.h:1111 [inline]\n   __release_sock+0x1a8\/0x3d8 net\/core\/sock.c:3004\n   release_sock+0x68\/0x1b8 net\/core\/sock.c:3558\n   pppoe_sendmsg+0xc8\/0x5d8 drivers\/net\/ppp\/pppoe.c:903\n   sock_sendmsg_nosec net\/socket.c:730 [inline]\n   __sock_sendmsg net\/socket.c:745 [inline]\n   __sys_sendto+0x374\/0x4f4 net\/socket.c:2204\n   __do_sys_sendto net\/socket.c:2216 [inline]\n   __se_sys_sendto net\/socket.c:2212 [inline]\n   __arm64_sys_sendto+0xd8\/0xf8 net\/socket.c:2212\n   __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\n   invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49\n   el0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132\n   do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151\n   el0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:712\n   el0t_64_sync_handler+0x84\/0xfc arch\/arm64\/kernel\/entry-common.c:730\n   el0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:598\nirq event stamp: 282914\n hardirqs last  enabled at (282914): [<ffff80008b42e30c>] __raw_spin_unlock_irqrestore include\/linux\/spinlock_api_smp.h:151 [inline]\n hardirqs last  enabled at (282914): [<ffff80008b42e30c>] _raw_spin_unlock_irqrestore+0x38\/0x98 kernel\/locking\/spinlock.c:194\n hardirqs last disabled at (282913): [<ffff80008b42e13c>] __raw_spin_lock_irqsave include\/linux\/spinlock_api_smp.h:108 [inline]\n hardirqs last disabled at (282913): [<ffff80008b42e13c>] _raw_spin_lock_irqsave+0x2c\/0x7c kernel\/locking\/spinlock.c:162\n softirqs last  enabled at (282904): [<ffff8000801f8e88>] softirq_handle_end kernel\/softirq.c:400 [inline]\n softirqs last  enabled at (282904): [<ffff8000801f8e88>] handle_softirqs+0xa3c\/0xbfc kernel\/softirq.c:582\n softirqs last disabled at (282909): [<ffff8000801fbdf8>] run_ksoftirqd+0x70\/0x158 kernel\/softirq.c:928\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n  lock(&pch->downl);\n  <Interrupt>\n    lock(&pch->downl);\n\n *** DEADLOCK ***\n\n1 lock held by ksoftirqd\/1\/24:\n  #0: ffff80008f74dfa0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire+0x10\/0x4c include\/linux\/rcupdate.h:325\n\nstack backtrace:\nCPU: 1 UID: 0 PID: 24 Comm: ksoftirqd\/1 Not tainted 6.11.0-rc7-syzkaller-g5f5673607153 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nCall trace:\n  dump_backtrace+0x1b8\/0x1e4 arch\/arm64\/kernel\/stacktrace.c:319\n  show_stack+0x2c\/0x3c arch\/arm64\/kernel\/stacktrace.c:326\n  __dump_sta\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/176dd41e8c2bd997ed3d66568a3362e69ecce99b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/635deca1800a68624f185dc1e04a8495b48cf185","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aec7291003df78cb71fd461d7b672912bde55807","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c837f8583535f094a39386308c2ccfd92c8596cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efe9cc0f7c0279216a5522271ec675b8288602e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9620e2a665aa642625bd2501282bbddff556bd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49947","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.207","lastModified":"2024-10-21T18:15:16.207","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: test for not too small csum_start in virtio_net_hdr_to_skb()\n\nsyzbot was able to trigger this warning [1], after injecting a\nmalicious packet through af_packet, setting skb->csum_start and thus\nthe transport header to an incorrect value.\n\nWe can at least make sure the transport header is after\nthe end of the network header (with a estimated minimal size).\n\n[1]\n[   67.873027] skb len=4096 headroom=16 headlen=14 tailroom=0\nmac=(-1,-1) mac_len=0 net=(16,-6) trans=10\nshinfo(txflags=0 nr_frags=1 gso(size=0 type=0 segs=0))\ncsum(0xa start=10 offset=0 ip_summed=3 complete_sw=0 valid=0 level=0)\nhash(0x0 sw=0 l4=0) proto=0x0800 pkttype=0 iif=0\npriority=0x0 mark=0x0 alloc_cpu=10 vlan_all=0x0\nencapsulation=0 inner(proto=0x0000, mac=0, net=0, trans=0)\n[   67.877172] dev name=veth0_vlan feat=0x000061164fdd09e9\n[   67.877764] sk family=17 type=3 proto=0\n[   67.878279] skb linear:   00000000: 00 00 10 00 00 00 00 00 0f 00 00 00 08 00\n[   67.879128] skb frag:     00000000: 0e 00 07 00 00 00 28 00 08 80 1c 00 04 00 00 02\n[   67.879877] skb frag:     00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.880647] skb frag:     00000020: 00 00 02 00 00 00 08 00 1b 00 00 00 00 00 00 00\n[   67.881156] skb frag:     00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.881753] skb frag:     00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.882173] skb frag:     00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.882790] skb frag:     00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.883171] skb frag:     00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.883733] skb frag:     00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.884206] skb frag:     00000090: 00 00 00 00 00 00 00 00 00 00 69 70 76 6c 61 6e\n[   67.884704] skb frag:     000000a0: 31 00 00 00 00 00 00 00 00 00 2b 00 00 00 00 00\n[   67.885139] skb frag:     000000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.885677] skb frag:     000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.886042] skb frag:     000000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.886408] skb frag:     000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.887020] skb frag:     000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   67.887384] skb frag:     00000100: 00 00\n[   67.887878] ------------[ cut here ]------------\n[   67.887908] offset (-6) >= skb_headlen() (14)\n[   67.888445] WARNING: CPU: 10 PID: 2088 at net\/core\/dev.c:3332 skb_checksum_help (net\/core\/dev.c:3332 (discriminator 2))\n[   67.889353] Modules linked in: macsec macvtap macvlan hsr wireguard curve25519_x86_64 libcurve25519_generic libchacha20poly1305 chacha_x86_64 libchacha poly1305_x86_64 dummy bridge sr_mod cdrom evdev pcspkr i2c_piix4 9pnet_virtio 9p 9pnet netfs\n[   67.890111] CPU: 10 UID: 0 PID: 2088 Comm: b363492833 Not tainted 6.11.0-virtme #1011\n[   67.890183] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04\/01\/2014\n[   67.890309] RIP: 0010:skb_checksum_help (net\/core\/dev.c:3332 (discriminator 2))\n[   67.891043] Call Trace:\n[   67.891173]  <TASK>\n[   67.891274] ? __warn (kernel\/panic.c:741)\n[   67.891320] ? skb_checksum_help (net\/core\/dev.c:3332 (discriminator 2))\n[   67.891333] ? report_bug (lib\/bug.c:180 lib\/bug.c:219)\n[   67.891348] ? handle_bug (arch\/x86\/kernel\/traps.c:239)\n[   67.891363] ? exc_invalid_op (arch\/x86\/kernel\/traps.c:260 (discriminator 1))\n[   67.891372] ? asm_exc_invalid_op (.\/arch\/x86\/include\/asm\/idtentry.h:621)\n[   67.891388] ? skb_checksum_help (net\/core\/dev.c:3332 (discriminator 2))\n[   67.891399] ? skb_checksum_help (net\/core\/dev.c:3332 (discriminator 2))\n[   67.891416] ip_do_fragment (net\/ipv4\/ip_output.c:777 (discriminator 1))\n[   67.891448] ? __ip_local_out (.\/include\/linux\/skbuff.h:1146 .\/include\/net\/l3mdev.h:196 .\/include\/net\/l3mdev.h:213 ne\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/49d14b54a527289d09a9480f214b8c586322310a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cc0648e9e3240496835dc698ace1d046d8d57ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7711c419a915ee0dd91c125d2b967bbf2a72e9ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9dfd41e32ccc5198033ddd1ff1516822dfefa5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49948","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.260","lastModified":"2024-10-21T18:15:16.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: add more sanity checks to qdisc_pkt_len_init()\n\nOne path takes care of SKB_GSO_DODGY, assuming\nskb->len is bigger than hdr_len.\n\nvirtio_net_hdr_to_skb() does not fully dissect TCP headers,\nit only make sure it is at least 20 bytes.\n\nIt is possible for an user to provide a malicious 'GSO' packet,\ntotal length of 80 bytes.\n\n- 20 bytes of IPv4 header\n- 60 bytes TCP header\n- a small gso_size like 8\n\nvirtio_net_hdr_to_skb() would declare this packet as a normal\nGSO packet, because it would see 40 bytes of payload,\nbigger than gso_size.\n\nWe need to make detect this case to not underflow\nqdisc_skb_cb(skb)->pkt_len."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1eebe602a8d8264a12e35e39d0645fa88dbbacdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2415f465730e48b6e38da1c7c097317bf5dd2d20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27a8fabc54d2f960d47bdfbebf2bdc6e8a92a4c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/566a931a1436d0e0ad13708ea55479b95426213c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b0ee571d20a238a22722126abdfde61f1b2bdd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab9a9a9e9647392a19e7a885b08000e89c86b535","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff1c3cadcf405ab37dd91418a62a7acecf3bc5e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49949","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.323","lastModified":"2024-10-21T18:15:16.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: avoid potential underflow in qdisc_pkt_len_init() with UFO\n\nAfter commit 7c6d2ecbda83 (\"net: be more gentle about silly gso\nrequests coming from user\") virtio_net_hdr_to_skb() had sanity check\nto detect malicious attempts from user space to cook a bad GSO packet.\n\nThen commit cf9acc90c80ec (\"net: virtio_net_hdr_to_skb: count\ntransport header in UFO\") while fixing one issue, allowed user space\nto cook a GSO packet with the following characteristic :\n\nIPv4 SKB_GSO_UDP, gso_size=3, skb->len = 28.\n\nWhen this packet arrives in qdisc_pkt_len_init(), we end up\nwith hdr_len = 28 (IPv4 header + UDP header), matching skb->len\n\nThen the following sets gso_segs to 0 :\n\ngso_segs = DIV_ROUND_UP(skb->len - hdr_len,\n                        shinfo->gso_size);\n\nThen later we set qdisc_skb_cb(skb)->pkt_len to back to zero :\/\n\nqdisc_skb_cb(skb)->pkt_len += (gso_segs - 1) * hdr_len;\n\nThis leads to the following crash in fq_codel [1]\n\nqdisc_pkt_len_init() is best effort, we only want an estimation\nof the bytes sent on the wire, not crashing the kernel.\n\nThis patch is fixing this particular issue, a following one\nadds more sanity checks for another potential bug.\n\n[1]\n[   70.724101] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[   70.724561] #PF: supervisor read access in kernel mode\n[   70.724561] #PF: error_code(0x0000) - not-present page\n[   70.724561] PGD 10ac61067 P4D 10ac61067 PUD 107ee2067 PMD 0\n[   70.724561] Oops: Oops: 0000 [#1] SMP NOPTI\n[   70.724561] CPU: 11 UID: 0 PID: 2163 Comm: b358537762 Not tainted 6.11.0-virtme #991\n[   70.724561] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04\/01\/2014\n[   70.724561] RIP: 0010:fq_codel_enqueue (net\/sched\/sch_fq_codel.c:120 net\/sched\/sch_fq_codel.c:168 net\/sched\/sch_fq_codel.c:230) sch_fq_codel\n[ 70.724561] Code: 24 08 49 c1 e1 06 44 89 7c 24 18 45 31 ed 45 31 c0 31 ff 89 44 24 14 4c 03 8b 90 01 00 00 eb 04 39 ca 73 37 4d 8b 39 83 c7 01 <49> 8b 17 49 89 11 41 8b 57 28 45 8b 5f 34 49 c7 07 00 00 00 00 49\nAll code\n========\n   0:\t24 08                \tand    $0x8,%al\n   2:\t49 c1 e1 06          \tshl    $0x6,%r9\n   6:\t44 89 7c 24 18       \tmov    %r15d,0x18(%rsp)\n   b:\t45 31 ed             \txor    %r13d,%r13d\n   e:\t45 31 c0             \txor    %r8d,%r8d\n  11:\t31 ff                \txor    %edi,%edi\n  13:\t89 44 24 14          \tmov    %eax,0x14(%rsp)\n  17:\t4c 03 8b 90 01 00 00 \tadd    0x190(%rbx),%r9\n  1e:\teb 04                \tjmp    0x24\n  20:\t39 ca                \tcmp    %ecx,%edx\n  22:\t73 37                \tjae    0x5b\n  24:\t4d 8b 39             \tmov    (%r9),%r15\n  27:\t83 c7 01             \tadd    $0x1,%edi\n  2a:*\t49 8b 17             \tmov    (%r15),%rdx\t\t<-- trapping instruction\n  2d:\t49 89 11             \tmov    %rdx,(%r9)\n  30:\t41 8b 57 28          \tmov    0x28(%r15),%edx\n  34:\t45 8b 5f 34          \tmov    0x34(%r15),%r11d\n  38:\t49 c7 07 00 00 00 00 \tmovq   $0x0,(%r15)\n  3f:\t49                   \trex.WB\n\nCode starting with the faulting instruction\n===========================================\n   0:\t49 8b 17             \tmov    (%r15),%rdx\n   3:\t49 89 11             \tmov    %rdx,(%r9)\n   6:\t41 8b 57 28          \tmov    0x28(%r15),%edx\n   a:\t45 8b 5f 34          \tmov    0x34(%r15),%r11d\n   e:\t49 c7 07 00 00 00 00 \tmovq   $0x0,(%r15)\n  15:\t49                   \trex.WB\n[   70.724561] RSP: 0018:ffff95ae85e6fb90 EFLAGS: 00000202\n[   70.724561] RAX: 0000000002000000 RBX: ffff95ae841de000 RCX: 0000000000000000\n[   70.724561] RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001\n[   70.724561] RBP: ffff95ae85e6fbf8 R08: 0000000000000000 R09: ffff95b710a30000\n[   70.724561] R10: 0000000000000000 R11: bdf289445ce31881 R12: ffff95ae85e6fc58\n[   70.724561] R13: 0000000000000000 R14: 0000000000000040 R15: 0000000000000000\n[   70.724561] FS:  000000002c5c1380(0000) GS:ffff95bd7fcc0000(0000) knlGS:0000000000000000\n[   70.724561] CS:  0010 DS: 0000 ES: 0000 C\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25ab0b87dbd89cecef8a9c60a02bb97832e471d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81fd007dcd47c34471766249853e4d4bce8eea4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/939c88cbdc668dadd8cfa7a35d9066331239041c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba26060a29d3ca1bfc737aa79f7125128f35147c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c20029db28399ecc50e556964eaba75c43b1e2f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6114993e0a89fde84a60a60a8329a571580b174","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f959cce8a2a04ce776aa8b78e83ce339e0d7fbac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49950","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.417","lastModified":"2024-10-21T18:15:16.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix uaf in l2cap_connect\n\n[Syzbot reported]\nBUG: KASAN: slab-use-after-free in l2cap_connect.constprop.0+0x10d8\/0x1270 net\/bluetooth\/l2cap_core.c:3949\nRead of size 8 at addr ffff8880241e9800 by task kworker\/u9:0\/54\n\nCPU: 0 UID: 0 PID: 54 Comm: kworker\/u9:0 Not tainted 6.11.0-rc6-syzkaller-00268-g788220eee30d #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nWorkqueue: hci2 hci_rx_work\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:93 [inline]\n dump_stack_lvl+0x116\/0x1f0 lib\/dump_stack.c:119\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0xc3\/0x620 mm\/kasan\/report.c:488\n kasan_report+0xd9\/0x110 mm\/kasan\/report.c:601\n l2cap_connect.constprop.0+0x10d8\/0x1270 net\/bluetooth\/l2cap_core.c:3949\n l2cap_connect_req net\/bluetooth\/l2cap_core.c:4080 [inline]\n l2cap_bredr_sig_cmd net\/bluetooth\/l2cap_core.c:4772 [inline]\n l2cap_sig_channel net\/bluetooth\/l2cap_core.c:5543 [inline]\n l2cap_recv_frame+0xf0b\/0x8eb0 net\/bluetooth\/l2cap_core.c:6825\n l2cap_recv_acldata+0x9b4\/0xb70 net\/bluetooth\/l2cap_core.c:7514\n hci_acldata_packet net\/bluetooth\/hci_core.c:3791 [inline]\n hci_rx_work+0xaab\/0x1610 net\/bluetooth\/hci_core.c:4028\n process_one_work+0x9c5\/0x1b40 kernel\/workqueue.c:3231\n process_scheduled_works kernel\/workqueue.c:3312 [inline]\n worker_thread+0x6c8\/0xed0 kernel\/workqueue.c:3389\n kthread+0x2c1\/0x3a0 kernel\/kthread.c:389\n ret_from_fork+0x45\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n...\n\nFreed by task 5245:\n kasan_save_stack+0x33\/0x60 mm\/kasan\/common.c:47\n kasan_save_track+0x14\/0x30 mm\/kasan\/common.c:68\n kasan_save_free_info+0x3b\/0x60 mm\/kasan\/generic.c:579\n poison_slab_object+0xf7\/0x160 mm\/kasan\/common.c:240\n __kasan_slab_free+0x32\/0x50 mm\/kasan\/common.c:256\n kasan_slab_free include\/linux\/kasan.h:184 [inline]\n slab_free_hook mm\/slub.c:2256 [inline]\n slab_free mm\/slub.c:4477 [inline]\n kfree+0x12a\/0x3b0 mm\/slub.c:4598\n l2cap_conn_free net\/bluetooth\/l2cap_core.c:1810 [inline]\n kref_put include\/linux\/kref.h:65 [inline]\n l2cap_conn_put net\/bluetooth\/l2cap_core.c:1822 [inline]\n l2cap_conn_del+0x59d\/0x730 net\/bluetooth\/l2cap_core.c:1802\n l2cap_connect_cfm+0x9e6\/0xf80 net\/bluetooth\/l2cap_core.c:7241\n hci_connect_cfm include\/net\/bluetooth\/hci_core.h:1960 [inline]\n hci_conn_failed+0x1c3\/0x370 net\/bluetooth\/hci_conn.c:1265\n hci_abort_conn_sync+0x75a\/0xb50 net\/bluetooth\/hci_sync.c:5583\n abort_conn_sync+0x197\/0x360 net\/bluetooth\/hci_conn.c:2917\n hci_cmd_sync_work+0x1a4\/0x410 net\/bluetooth\/hci_sync.c:328\n process_one_work+0x9c5\/0x1b40 kernel\/workqueue.c:3231\n process_scheduled_works kernel\/workqueue.c:3312 [inline]\n worker_thread+0x6c8\/0xed0 kernel\/workqueue.c:3389\n kthread+0x2c1\/0x3a0 kernel\/kthread.c:389\n ret_from_fork+0x45\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/333b4fd11e89b29c84c269123f871883a30be586","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78d30ce16fdf9c301bcd8b83ce613cea079cea83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1c6174e23df10b8e5770e82d63bc6e2118a3dc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b90907696c30172b809aa3dd2f0caffae761e4c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49951","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.500","lastModified":"2024-10-21T18:15:16.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix possible crash on mgmt_index_removed\n\nIf mgmt_index_removed is called while there are commands queued on\ncmd_sync it could lead to crashes like the bellow trace:\n\n0x0000053D: __list_del_entry_valid_or_report+0x98\/0xdc\n0x0000053D: mgmt_pending_remove+0x18\/0x58 [bluetooth]\n0x0000053E: mgmt_remove_adv_monitor_complete+0x80\/0x108 [bluetooth]\n0x0000053E: hci_cmd_sync_work+0xbc\/0x164 [bluetooth]\n\nSo while handling mgmt_index_removed this attempts to dequeue\ncommands passed as user_data to cmd_sync."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cc47233af35fb5f10b5e6a027cb4ccd480caf9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4883296505aa7e4863c6869b689afb6005633b23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c3f7943a29145d8a2d8e24893762f7673323eae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f53e1c9c726d83092167f2226f32bd3b73f26c21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49952","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.590","lastModified":"2024-10-21T18:15:16.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: prevent nf_skb_duplicated corruption\n\nsyzbot found that nf_dup_ipv4() or nf_dup_ipv6() could write\nper-cpu variable nf_skb_duplicated in an unsafe way [1].\n\nDisabling preemption as hinted by the splat is not enough,\nwe have to disable soft interrupts as well.\n\n[1]\nBUG: using __this_cpu_write() in preemptible [00000000] code: syz.4.282\/6316\n caller is nf_dup_ipv4+0x651\/0x8f0 net\/ipv4\/netfilter\/nf_dup_ipv4.c:87\nCPU: 0 UID: 0 PID: 6316 Comm: syz.4.282 Not tainted 6.11.0-rc7-syzkaller-00104-g7052622fccb1 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nCall Trace:\n <TASK>\n  __dump_stack lib\/dump_stack.c:93 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:119\n  check_preemption_disabled+0x10e\/0x120 lib\/smp_processor_id.c:49\n  nf_dup_ipv4+0x651\/0x8f0 net\/ipv4\/netfilter\/nf_dup_ipv4.c:87\n  nft_dup_ipv4_eval+0x1db\/0x300 net\/ipv4\/netfilter\/nft_dup_ipv4.c:30\n  expr_call_ops_eval net\/netfilter\/nf_tables_core.c:240 [inline]\n  nft_do_chain+0x4ad\/0x1da0 net\/netfilter\/nf_tables_core.c:288\n  nft_do_chain_ipv4+0x202\/0x320 net\/netfilter\/nft_chain_filter.c:23\n  nf_hook_entry_hookfn include\/linux\/netfilter.h:154 [inline]\n  nf_hook_slow+0xc3\/0x220 net\/netfilter\/core.c:626\n  nf_hook+0x2c4\/0x450 include\/linux\/netfilter.h:269\n  NF_HOOK_COND include\/linux\/netfilter.h:302 [inline]\n  ip_output+0x185\/0x230 net\/ipv4\/ip_output.c:433\n  ip_local_out net\/ipv4\/ip_output.c:129 [inline]\n  ip_send_skb+0x74\/0x100 net\/ipv4\/ip_output.c:1495\n  udp_send_skb+0xacf\/0x1650 net\/ipv4\/udp.c:981\n  udp_sendmsg+0x1c21\/0x2a60 net\/ipv4\/udp.c:1269\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x1a6\/0x270 net\/socket.c:745\n  ____sys_sendmsg+0x525\/0x7d0 net\/socket.c:2597\n  ___sys_sendmsg net\/socket.c:2651 [inline]\n  __sys_sendmmsg+0x3b2\/0x740 net\/socket.c:2737\n  __do_sys_sendmmsg net\/socket.c:2766 [inline]\n  __se_sys_sendmmsg net\/socket.c:2763 [inline]\n  __x64_sys_sendmmsg+0xa0\/0xb0 net\/socket.c:2763\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f4ce4f7def9\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f4ce5d4a038 EFLAGS: 00000246 ORIG_RAX: 0000000000000133\nRAX: ffffffffffffffda RBX: 00007f4ce5135f80 RCX: 00007f4ce4f7def9\nRDX: 0000000000000001 RSI: 0000000020005d40 RDI: 0000000000000006\nRBP: 00007f4ce4ff0b76 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007f4ce5135f80 R15: 00007ffd4cbc6d68\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38e3fd0c4a2616052eb3c8f4e6f32d1ff47cd663","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e3542f40f3a94efa59ea328e307c50601ed7065","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/531754952f5dfc4b141523088147071d6e6112c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/752e1924604254f1708f3e3700283a86ebdd325d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92ceba94de6fb4cee2bf40b485979c342f44a492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b40b027a0c0cc1cb9471a13f9730bb2fff12a15b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f839c5cd348201fec440d987cbca9b979bdb4fa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.673","lastModified":"2024-10-21T18:15:16.673","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix crash caused by calling __xfrm_state_delete() twice\n\nThe km.state is not checked in driver's delayed work. When\nxfrm_state_check_expire() is called, the state can be reset to\nXFRM_STATE_EXPIRED, even if it is XFRM_STATE_DEAD already. This\nhappens when xfrm state is deleted, but not freed yet. As\n__xfrm_state_delete() is called again in xfrm timer, the following\ncrash occurs.\n\nTo fix this issue, skip xfrm_state_check_expire() if km.state is not\nXFRM_STATE_VALID.\n\n Oops: general protection fault, probably for non-canonical address 0xdead000000000108: 0000 [#1] SMP\n CPU: 5 UID: 0 PID: 7448 Comm: kworker\/u102:2 Not tainted 6.11.0-rc2+ #1\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n Workqueue: mlx5e_ipsec: eth%d mlx5e_ipsec_handle_sw_limits [mlx5_core]\n RIP: 0010:__xfrm_state_delete+0x3d\/0x1b0\n Code: 0f 84 8b 01 00 00 48 89 fd c6 87 c8 00 00 00 05 48 8d bb 40 10 00 00 e8 11 04 1a 00 48 8b 95 b8 00 00 00 48 8b 85 c0 00 00 00 <48> 89 42 08 48 89 10 48 8b 55 10 48 b8 00 01 00 00 00 00 ad de 48\n RSP: 0018:ffff88885f945ec8 EFLAGS: 00010246\n RAX: dead000000000122 RBX: ffffffff82afa940 RCX: 0000000000000036\n RDX: dead000000000100 RSI: 0000000000000000 RDI: ffffffff82afb980\n RBP: ffff888109a20340 R08: ffff88885f945ea0 R09: 0000000000000000\n R10: 0000000000000000 R11: ffff88885f945ff8 R12: 0000000000000246\n R13: ffff888109a20340 R14: ffff88885f95f420 R15: ffff88885f95f400\n FS:  0000000000000000(0000) GS:ffff88885f940000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f2163102430 CR3: 00000001128d6001 CR4: 0000000000370eb0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  <IRQ>\n  ? die_addr+0x33\/0x90\n  ? exc_general_protection+0x1a2\/0x390\n  ? asm_exc_general_protection+0x22\/0x30\n  ? __xfrm_state_delete+0x3d\/0x1b0\n  ? __xfrm_state_delete+0x2f\/0x1b0\n  xfrm_timer_handler+0x174\/0x350\n  ? __xfrm_state_delete+0x1b0\/0x1b0\n  __hrtimer_run_queues+0x121\/0x270\n  hrtimer_run_softirq+0x88\/0xd0\n  handle_softirqs+0xcc\/0x270\n  do_softirq+0x3c\/0x50\n  <\/IRQ>\n  <TASK>\n  __local_bh_enable_ip+0x47\/0x50\n  mlx5e_ipsec_handle_sw_limits+0x7d\/0x90 [mlx5_core]\n  process_one_work+0x137\/0x2d0\n  worker_thread+0x28d\/0x3a0\n  ? rescuer_thread+0x480\/0x480\n  kthread+0xb8\/0xe0\n  ? kthread_park+0x80\/0x80\n  ret_from_fork+0x2d\/0x50\n  ? kthread_park+0x80\/0x80\n  ret_from_fork_asm+0x11\/0x20\n  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b1672834634df9ac9cedf856db9fc36d92c50ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/151e7dead1f5399a73c19c4b50307ea48aff1dc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b124695db40d5c9c5295a94ae928a8d67a01c3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fab615ac9fcb8589222303099975d464d8857527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49954","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.753","lastModified":"2024-10-21T18:15:16.753","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstatic_call: Replace pointless WARN_ON() in static_call_module_notify()\n\nstatic_call_module_notify() triggers a WARN_ON(), when memory allocation\nfails in __static_call_add_module().\n\nThat's not really justified, because the failure case must be correctly\nhandled by the well known call chain and the error code is passed\nthrough to the initiating userspace application.\n\nA memory allocation fail is not a fatal problem, but the WARN_ON() takes\nthe machine out when panic_on_warn is set.\n\nReplace it with a pr_warn()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/85a104aaef1f56623acc10ba4c42d5f046ba65b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b83bef74c121a3311240fc4002d23486b85355e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc9356513d56b688775497b7ac6f2b967f46a80c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e67534bd31d79952b50e791e92adf0b3e6c13b8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea2cdf4da093d0482f0ef36ba971e2e0c7673425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe513c2ef0a172a58f158e2e70465c4317f0a9a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49955","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.833","lastModified":"2024-10-21T18:15:16.833","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: battery: Fix possible crash when unregistering a battery hook\n\nWhen a battery hook returns an error when adding a new battery, then\nthe battery hook is automatically unregistered.\nHowever the battery hook provider cannot know that, so it will later\ncall battery_hook_unregister() on the already unregistered battery\nhook, resulting in a crash.\n\nFix this by using the list head to mark already unregistered battery\nhooks as already being unregistered so that they can be ignored by\nbattery_hook_unregister()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07b98400cb0285a6348188aa8c5ec6a2ae0551f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76959aff14a0012ad6b984ec7686d163deccdc16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f469ef1c79dac7f9ac1518643a33703918f7e13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca1fb7942a287b40659cc79551a1de54a2c2e7d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca26e8eed9c1c6651f51f7fa38fe444f8573cd1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce31847f109c3a5b2abdd19d7bcaafaacfde53de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da964de4c18199e14b961b5b2e5e6570552a313c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49956","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.893","lastModified":"2024-10-21T18:15:16.893","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: fix double destroy_workqueue error\n\nWhen gfs2_fill_super() fails, destroy_workqueue() is called within\ngfs2_gl_hash_clear(), and the subsequent code path calls\ndestroy_workqueue() on the same work queue again.\n\nThis issue can be fixed by setting the work queue pointer to NULL after\nthe first destroy_workqueue() call and checking for a NULL pointer\nbefore attempting to destroy the work queue again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6cb9df81a2c462b89d2f9611009ab43ae8717841","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5336035728d77efd76306940d742a6f23debe68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49957","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:16.950","lastModified":"2024-10-21T18:15:16.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix null-ptr-deref when journal load failed.\n\nDuring the mounting process, if journal_reset() fails because of too short\njournal, then lead to jbd2_journal_load() fails with NULL j_sb_buffer. \nSubsequently, ocfs2_journal_shutdown() calls\njbd2_journal_flush()->jbd2_cleanup_journal_tail()->\n__jbd2_update_log_tail()->jbd2_journal_update_sb_log_tail()\n->lock_buffer(journal->j_sb_buffer), resulting in a null-pointer\ndereference error.\n\nTo resolve this issue, we should check the JBD2_LOADED flag to ensure the\njournal was properly loaded.  Additionally, use journal instead of\nosb->journal directly to simplify the code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/387bf565cc03e2e8c720b8b4798efea4aacb6962","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5784d9fcfd43bd853654bb80c87ef293b9e8e80a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82dfdd1e31e774578f76ce6dc90c834f96403a0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86a89e75e9e4dfa768b97db466ad6bedf2e7ea5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf605ae98dab5c15c5b631d4d7f88898cb41b649","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f60e94a83db799bde625ac8671a5b4a6354e7120","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff55291fb36779819211b596da703389135f5b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49958","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.050","lastModified":"2024-10-21T18:15:17.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: reserve space for inline xattr before attaching reflink tree\n\nOne of our customers reported a crash and a corrupted ocfs2 filesystem. \nThe crash was due to the detection of corruption.  Upon troubleshooting,\nthe fsck -fn output showed the below corruption\n\n[EXTENT_LIST_FREE] Extent list in owner 33080590 claims 230 as the next free chain record,\nbut fsck believes the largest valid value is 227.  Clamp the next record value? n\n\nThe stat output from the debugfs.ocfs2 showed the following corruption\nwhere the \"Next Free Rec:\" had overshot the \"Count:\" in the root metadata\nblock.\n\n        Inode: 33080590   Mode: 0640   Generation: 2619713622 (0x9c25a856)\n        FS Generation: 904309833 (0x35e6ac49)\n        CRC32: 00000000   ECC: 0000\n        Type: Regular   Attr: 0x0   Flags: Valid\n        Dynamic Features: (0x16) HasXattr InlineXattr Refcounted\n        Extended Attributes Block: 0  Extended Attributes Inline Size: 256\n        User: 0 (root)   Group: 0 (root)   Size: 281320357888\n        Links: 1   Clusters: 141738\n        ctime: 0x66911b56 0x316edcb8 -- Fri Jul 12 06:02:30.829349048 2024\n        atime: 0x66911d6b 0x7f7a28d -- Fri Jul 12 06:11:23.133669517 2024\n        mtime: 0x66911b56 0x12ed75d7 -- Fri Jul 12 06:02:30.317552087 2024\n        dtime: 0x0 -- Wed Dec 31 17:00:00 1969\n        Refcount Block: 2777346\n        Last Extblk: 2886943   Orphan Slot: 0\n        Sub Alloc Slot: 0   Sub Alloc Bit: 14\n        Tree Depth: 1   Count: 227   Next Free Rec: 230\n        ## Offset        Clusters       Block#\n        0  0             2310           2776351\n        1  2310          2139           2777375\n        2  4449          1221           2778399\n        3  5670          731            2779423\n        4  6401          566            2780447\n        .......          ....           .......\n        .......          ....           .......\n\nThe issue was in the reflink workfow while reserving space for inline\nxattr.  The problematic function is ocfs2_reflink_xattr_inline().  By the\ntime this function is called the reflink tree is already recreated at the\ndestination inode from the source inode.  At this point, this function\nreserves space for inline xattrs at the destination inode without even\nchecking if there is space at the root metadata block.  It simply reduces\nthe l_count from 243 to 227 thereby making space of 256 bytes for inline\nxattr whereas the inode already has extents beyond this index (in this\ncase up to 230), thereby causing corruption.\n\nThe fix for this is to reserve space for inline metadata at the destination\ninode before the reflink tree gets recreated. The customer has verified the\nfix."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/020f5c53c17f66c0a8f2d37dad27ace301b8d8a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c2072f02c0d75802ec28ec703b7d43a0dd008b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ca60b86f57a4d9648f68418a725b3a7de2816b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/637c00e06564a945e9d0edb3d78d362d64935f9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96ce4c3537114d1698be635f5e36c62dc49df7a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f9a8f3ac65b4147f1a7b6c05fad5192c0e3c3d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aac31d654a0a31cb0d2fa36ae694f4e164a52707","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49959","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.123","lastModified":"2024-10-21T18:15:17.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njbd2: stop waiting for space when jbd2_cleanup_journal_tail() returns error\n\nIn __jbd2_log_wait_for_space(), we might call jbd2_cleanup_journal_tail()\nto recover some journal space. But if an error occurs while executing\njbd2_cleanup_journal_tail() (e.g., an EIO), we don't stop waiting for free\nspace right away, we try other branches, and if j_committing_transaction\nis NULL (i.e., the tid is 0), we will get the following complain:\n\n============================================\nJBD2: I\/O error when updating journal superblock for sdd-8.\n__jbd2_log_wait_for_space: needed 256 blocks and only had 217 space available\n__jbd2_log_wait_for_space: no way to get more journal space in sdd-8\n------------[ cut here ]------------\nWARNING: CPU: 2 PID: 139804 at fs\/jbd2\/checkpoint.c:109 __jbd2_log_wait_for_space+0x251\/0x2e0\nModules linked in:\nCPU: 2 PID: 139804 Comm: kworker\/u8:3 Not tainted 6.6.0+ #1\nRIP: 0010:__jbd2_log_wait_for_space+0x251\/0x2e0\nCall Trace:\n <TASK>\n add_transaction_credits+0x5d1\/0x5e0\n start_this_handle+0x1ef\/0x6a0\n jbd2__journal_start+0x18b\/0x340\n ext4_dirty_inode+0x5d\/0xb0\n __mark_inode_dirty+0xe4\/0x5d0\n generic_update_time+0x60\/0x70\n[...]\n============================================\n\nSo only if jbd2_cleanup_journal_tail() returns 1, i.e., there is nothing to\nclean up at the moment, continue to try to reclaim free space in other ways.\n\nNote that this fix relies on commit 6f6a6fda2945 (\"jbd2: fix ocfs2 corrupt\nwhen updating journal superblock fails\") to make jbd2_cleanup_journal_tail\nreturn the correct error code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c62dc0d82c62f0dc8fcdc4843208e522acccaf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ced0fe6c0eff032733ea8b38778b34707270138","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/481e8f18a290e39e04ddb7feb2bb2a2cc3b213ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70bae48377a2c4296fd3caf4caf8f11079111019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6bf043b210eac67d35a114e345c4e5585672913","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec7f8337c98ad281020ad1f11ba492462d80737a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5cacdc6f2bb2a9bf214469dd7112b43dd2dd68a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49960","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.187","lastModified":"2024-10-21T18:15:17.187","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix timer use-after-free on failed mount\n\nSyzbot has found an ODEBUG bug in ext4_fill_super\n\nThe del_timer_sync function cancels the s_err_report timer,\nwhich reminds about filesystem errors daily. We should\nguarantee the timer is no longer active before kfree(sbi).\n\nWhen filesystem mounting fails, the flow goes to failed_mount3,\nwhere an error occurs when ext4_stop_mmpd is called, causing\na read I\/O failure. This triggers the ext4_handle_error function\nthat ultimately re-arms the timer,\nleaving the s_err_report timer active before kfree(sbi) is called.\n\nFix the issue by canceling the s_err_report timer after calling ext4_stop_mmpd."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ce160c5bdb67081a62293028dc85758a8efb22a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9203817ba46ebba7c865c8de2aba399537b6e891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b85569585d0154d4db1e4f9e3e6a4731d407feb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa78fb51d396f4f2f80f8e96a3b1516f394258be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49961","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.267","lastModified":"2024-10-21T18:15:17.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: ar0521: Use cansleep version of gpiod_set_value()\n\nIf we use GPIO reset from I2C port expander, we must use *_cansleep()\nvariant of GPIO functions.\nThis was not done in ar0521_power_on()\/ar0521_power_off() functions.\nLet's fix that.\n\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 11 at drivers\/gpio\/gpiolib.c:3496 gpiod_set_value+0x74\/0x7c\nModules linked in:\nCPU: 0 PID: 11 Comm: kworker\/u16:0 Not tainted 6.10.0 #53\nHardware name: Diasom DS-RK3568-SOM-EVB (DT)\nWorkqueue: events_unbound deferred_probe_work_func\npstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : gpiod_set_value+0x74\/0x7c\nlr : ar0521_power_on+0xcc\/0x290\nsp : ffffff8001d7ab70\nx29: ffffff8001d7ab70 x28: ffffff80027dcc90 x27: ffffff8003c82000\nx26: ffffff8003ca9250 x25: ffffffc080a39c60 x24: ffffff8003ca9088\nx23: ffffff8002402720 x22: ffffff8003ca9080 x21: ffffff8003ca9088\nx20: 0000000000000000 x19: ffffff8001eb2a00 x18: ffffff80efeeac80\nx17: 756d2d6332692f30 x16: 0000000000000000 x15: 0000000000000000\nx14: ffffff8001d91d40 x13: 0000000000000016 x12: ffffffc080e98930\nx11: ffffff8001eb2880 x10: 0000000000000890 x9 : ffffff8001d7a9f0\nx8 : ffffff8001d92570 x7 : ffffff80efeeac80 x6 : 000000003fc6e780\nx5 : ffffff8001d91c80 x4 : 0000000000000002 x3 : 0000000000000000\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000001\nCall trace:\n gpiod_set_value+0x74\/0x7c\n ar0521_power_on+0xcc\/0x290\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2423b60a2d6d27e5f66c5021b494463aef2db212","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cf00ecfbf11ee8e6afff306a5bdcff4bf95d2cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/625a77b68c96349c16fcc1faa42784313e0b1a85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f08876d766755a92f1b9543ae3ee21bfc596fb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bee1aed819a8cda47927436685d216906ed17f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49962","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.353","lastModified":"2024-10-21T18:15:17.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPICA: check null return of ACPI_ALLOCATE_ZEROED() in acpi_db_convert_to_package()\n\nACPICA commit 4d4547cf13cca820ff7e0f859ba83e1a610b9fd0\n\nACPI_ALLOCATE_ZEROED() may fail, elements might be NULL and will cause\nNULL pointer dereference later.\n\n[ rjw: Subject and changelog edits ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c9b8775062f8d854a80caf186af57fc617d454c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4588ea78d3904bebb613b0bb025669e75800f546","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5242874488eba2b9062985bf13743c029821330","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a907c113a8b66972f15f084d7dff960207b1f71d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae5d4c7e76ba393d20366dfea1f39f24560ffb1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbb67e245dacd02b5e1d82733892647df1523982","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f282db38953ad71dd4f3f8877a4e1d37e580e30a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49963","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.447","lastModified":"2024-10-21T18:15:17.447","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmailbox: bcm2835: Fix timeout during suspend mode\n\nDuring noirq suspend phase the Raspberry Pi power driver suffer of\nfirmware property timeouts. The reason is that the IRQ of the underlying\nBCM2835 mailbox is disabled and rpi_firmware_property_list() will always\nrun into a timeout [1].\n\nSince the VideoCore side isn't consider as a wakeup source, set the\nIRQF_NO_SUSPEND flag for the mailbox IRQ in order to keep it enabled\nduring suspend-resume cycle.\n\n[1]\nPM: late suspend of devices complete after 1.754 msecs\nWARNING: CPU: 0 PID: 438 at drivers\/firmware\/raspberrypi.c:128\n rpi_firmware_property_list+0x204\/0x22c\nFirmware transaction 0x00028001 timeout\nModules linked in:\nCPU: 0 PID: 438 Comm: bash Tainted: G         C         6.9.3-dirty #17\nHardware name: BCM2835\nCall trace:\nunwind_backtrace from show_stack+0x18\/0x1c\nshow_stack from dump_stack_lvl+0x34\/0x44\ndump_stack_lvl from __warn+0x88\/0xec\n__warn from warn_slowpath_fmt+0x7c\/0xb0\nwarn_slowpath_fmt from rpi_firmware_property_list+0x204\/0x22c\nrpi_firmware_property_list from rpi_firmware_property+0x68\/0x8c\nrpi_firmware_property from rpi_firmware_set_power+0x54\/0xc0\nrpi_firmware_set_power from _genpd_power_off+0xe4\/0x148\n_genpd_power_off from genpd_sync_power_off+0x7c\/0x11c\ngenpd_sync_power_off from genpd_finish_suspend+0xcc\/0xe0\ngenpd_finish_suspend from dpm_run_callback+0x78\/0xd0\ndpm_run_callback from device_suspend_noirq+0xc0\/0x238\ndevice_suspend_noirq from dpm_suspend_noirq+0xb0\/0x168\ndpm_suspend_noirq from suspend_devices_and_enter+0x1b8\/0x5ac\nsuspend_devices_and_enter from pm_suspend+0x254\/0x2e4\npm_suspend from state_store+0xa8\/0xd4\nstate_store from kernfs_fop_write_iter+0x154\/0x1a0\nkernfs_fop_write_iter from vfs_write+0x12c\/0x184\nvfs_write from ksys_write+0x78\/0xc0\nksys_write from ret_fast_syscall+0x0\/0x54\nException stack(0xcc93dfa8 to 0xcc93dff0)\n[...]\nPM: noirq suspend of devices complete after 3095.584 msecs"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10a58555e0bb5cc4673c8bb73b8afc5fa651f0ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32ee78823dea2d54adaf6e05f86622eba359e091","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90320cfc07b7d6e7a58fd8168f6380ec52ff0251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc09f007caed3b2f6a3b6bd7e13777557ae22bfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df293ea78740a41384d648041f38f645700288e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfeb67b2194ecc55ef8065468c5adda3cdf59114","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e65a9af05a0b59ebeba28e5e82265a233db7bc27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49964","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.510","lastModified":"2024-10-21T18:15:17.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/hugetlb: fix memfd_pin_folios free_huge_pages leak\n\nmemfd_pin_folios followed by unpin_folios fails to restore free_huge_pages\nif the pages were not already faulted in, because the folio refcount for\npages created by memfd_alloc_folio never goes to 0.  memfd_pin_folios\nneeds another folio_put to undo the folio_try_get below:\n\nmemfd_alloc_folio()\n  alloc_hugetlb_folio_nodemask()\n    dequeue_hugetlb_folio_nodemask()\n      dequeue_hugetlb_folio_node_exact()\n        folio_ref_unfreeze(folio, 1);    ; adds 1 refcount\n  folio_try_get()                        ; adds 1 refcount\n  hugetlb_add_to_page_cache()            ; adds 512 refcount (on x86)\n\nWith the fix, after memfd_pin_folios + unpin_folios, the refcount for the\n(unfaulted) page is 512, which is correct, as the refcount for a faulted\nunpinned page is 513."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/59e081ff2e91bbf19b8c1ecb75b031f778858383","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c56b6f3d801d7ec8965993342bdd9e2972b6cb8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49965","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.593","lastModified":"2024-10-21T18:15:17.593","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: remove unreasonable unlock in ocfs2_read_blocks\n\nPatch series \"Misc fixes for ocfs2_read_blocks\", v5.\n\nThis series contains 2 fixes for ocfs2_read_blocks().  The first patch fix\nthe issue reported by syzbot, which detects bad unlock balance in\nocfs2_read_blocks().  The second patch fixes an issue reported by Heming\nZhao when reviewing above fix.\n\n\nThis patch (of 2):\n\nThere was a lock release before exiting, so remove the unreasonable unlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39a88623af3f1c686bf6db1e677ed865ffe6fccc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f1ca6ba5452d53c598a45d21267a2c0c221eef3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81aba693b129e82e11bb54f569504d943d018de9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84543da867c967edffd5065fa910ebf56aaae49d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c03a82b4a0c935774afa01fd6d128b444fd930a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df4f20fc3673cee11abf2c571987a95733cb638d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f55a33fe0fb5274ef185fd61947cf142138958af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49966","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.683","lastModified":"2024-10-21T18:15:17.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: cancel dqi_sync_work before freeing oinfo\n\nocfs2_global_read_info() will initialize and schedule dqi_sync_work at the\nend, if error occurs after successfully reading global quota, it will\ntrigger the following warning with CONFIG_DEBUG_OBJECTS_* enabled:\n\nODEBUG: free active (active state 0) object: 00000000d8b0ce28 object type: timer_list hint: qsync_work_fn+0x0\/0x16c\n\nThis reports that there is an active delayed work when freeing oinfo in\nerror handling, so cancel dqi_sync_work first.  BTW, return status instead\nof -1 when .read_file_info fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d707a33c84b371cb66120e198eed3374726ddd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14114d8148db07e7946fb06b56a50cfa425e26c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35fccce29feb3706f649726d410122dd81b92c18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4173d1277c00baeedaaca76783e98b8fd0e3c08d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4346c04d055bf7e184c18a73dbd23b6a9811118","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbf41277df8b33fbedf4750a9300c147e8f104eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef768020366f47d23f39c4f57bcb03af6d1e24b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49967","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.767","lastModified":"2024-10-21T18:15:17.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: no need to continue when the number of entries is 1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/133ff0d78f1b160de011647bb65807195ca5d1ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a00a393d6a7fb1e745a41edd09019bd6a0ad64c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d64e7dada22ab589d1ac216a3661074d027f25e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d4b2e4c36bb88d57018c1cbc8b6a0c4b44a7f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a02d7f5b24193aed451ac67aad3453472e79dc78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aca593e6070e21979430c344e9cb0b272a9e7e10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe192515d2937b8ed2d21921b558a06dd2031d21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49968","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.833","lastModified":"2024-10-21T18:15:17.833","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: filesystems without casefold feature cannot be mounted with siphash\n\nWhen mounting the ext4 filesystem, if the default hash version is set to\nDX_HASH_SIPHASH but the casefold feature is not set, exit the mounting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/985b67cd86392310d9e9326de941c22fc9340eec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1373903db6c4ac994de0d18076280ad88e12dee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49969","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.910","lastModified":"2024-10-21T18:15:17.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix index out of bounds in DCN30 color transformation\n\nThis commit addresses a potential index out of bounds issue in the\n`cm3_helper_translate_curve_to_hw_format` function in the DCN30 color\nmanagement module. The issue could occur when the index 'i' exceeds the\nnumber of transfer function points (TRANSFER_FUNC_POINTS).\n\nThe fix adds a check to ensure 'i' is within bounds before accessing the\ntransfer function points. If 'i' is out of bounds, the function returns\nfalse to indicate an error.\n\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:180 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:181 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/dcn30\/dcn30_cm_common.c:182 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f1e222a4b41d77c442901d166fbdca967af0d86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/578422ddae3d13362b64e77ef9bab98780641631","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ab69af56a23859b647dee69fa1052c689343621","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/929506d5671419cffd8d01e9a7f5eae53682a838","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9d8b94ec7e67f0cae228c054f77b73967c389a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c13f9c62015c56a938304cef6d507227ea3e0039","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d81873f9e715b72d4f8d391c8eb243946f784dfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49970","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:17.973","lastModified":"2024-10-21T18:15:17.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Implement bounds check for stream encoder creation in DCN401\n\n'stream_enc_regs' array is an array of dcn10_stream_enc_registers\nstructures. The array is initialized with four elements, corresponding\nto the four calls to stream_enc_regs() in the array initializer. This\nmeans that valid indices for this array are 0, 1, 2, and 3.\n\nThe error message 'stream_enc_regs' 4 <= 5 below, is indicating that\nthere is an attempt to access this array with an index of 5, which is\nout of bounds. This could lead to undefined behavior\n\nHere, eng_id is used as an index to access the stream_enc_regs array. If\neng_id is 5, this would result in an out-of-bounds access on the\nstream_enc_regs array.\n\nThus fixing Buffer overflow error in dcn401_stream_encoder_create\n\nFound by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/resource\/dcn401\/dcn401_resource.c:1209 dcn401_stream_encoder_create() error: buffer overflow 'stream_enc_regs' 4 <= 5"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b219b46ad42df1dea9258788bcfea37181f3ccb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdf606810210e8e07a0cdf1af3c467291363b295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49971","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.050","lastModified":"2024-10-21T18:15:18.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Increase array size of dummy_boolean\n\n[WHY]\ndml2_core_shared_mode_support and dml_core_mode_support access the third\nelement of dummy_boolean, i.e. hw_debug5 = &s->dummy_boolean[2], when\ndummy_boolean has size of 2. Any assignment to hw_debug5 causes an\nOVERRUN.\n\n[HOW]\nIncrease dummy_boolean's array size to 3.\n\nThis fixes 2 OVERRUN issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6d64d39486197083497a01b39e23f2f8474b35d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9e48b7bb9cf3b78f0305ef0144aaf61da0a83d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49972","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.103","lastModified":"2024-10-21T18:15:18.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Deallocate DML memory if allocation fails\n\n[Why]\nWhen DC state create DML memory allocation fails, memory is not\ndeallocated subsequently, resulting in uninitialized structure\nthat is not NULL.\n\n[How]\nDeallocate memory if DML memory allocation fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/80345daa5746184195f2d383a2f1bad058f0f94c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/892abca6877a96c9123bb1c010cafccdf8ca1b75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49973","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.163","lastModified":"2024-10-21T18:15:18.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nr8169: add tally counter fields added with RTL8125\n\nRTL8125 added fields to the tally counter, what may result in the chip\ndma'ing these new fields to unallocated memory. Therefore make sure\nthat the allocated memory area is big enough to hold all of the\ntally counter values, even if we use only parts of it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c723d785adb711496bc64c24240f952f4faaabf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21950321ad33d7613b1453f4c503d7b1871deb61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/585c048d15ed559f20cb94c8fa2f30077efa4fbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92bc8647b4d65f4d4bf8afdb206321c1bc55a486","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/991e8b0bab669b7d06927c3e442b3352532e8581","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ced8e8b8f40accfcce4a2bbd8b150aa76d5eff9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe44b3bfbf0c74df5712f44458689d0eccccf47d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49974","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.227","lastModified":"2024-10-21T18:15:18.227","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Limit the number of concurrent async COPY operations\n\nNothing appears to limit the number of concurrent async COPY\noperations that clients can start. In addition, AFAICT each async\nCOPY can copy an unlimited number of 4MB chunks, so can run for a\nlong time. Thus IMO async COPY can become a DoS vector.\n\nAdd a restriction mechanism that bounds the number of concurrent\nbackground COPY operations. Start simple and try to be fair -- this\npatch implements a per-namespace limit.\n\nAn async COPY request that occurs while this limit is exceeded gets\nNFS4ERR_DELAY. The requesting client can choose to send the request\nagain after a delay or fall back to a traditional read\/write style\ncopy.\n\nIf there is need to make the mechanism more sophisticated, we can\nvisit that in future patches."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6a488ad7745b8f64625c6d3a24ce7e448e83f11b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aadc3bbea163b6caaaebfdd2b6c4667fbc726752","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4e21431a0db4854b5023cd5af001be557e6c3db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49975","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.287","lastModified":"2024-10-21T18:15:18.287","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nuprobes: fix kernel info leak via \"[uprobes]\" vma\n\nxol_add_vma() maps the uninitialized page allocated by __create_xol_area()\ninto userspace. On some architectures (x86) this memory is readable even\nwithout VM_READ, VM_EXEC results in the same pgprot_t as VM_EXEC|VM_READ,\nalthough this doesn't really matter, debugger can read this memory anyway."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21cb47db1ec9765f91304763a24565ddc22d2492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24141df5a8615790950deedd926a44ddf1dfd6d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2aa45f43709ba2082917bd2973d02687075b6eee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34820304cc2cd1804ee1f8f3504ec77813d29c8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b981d8335e18aef7908a068529a3287258ff6d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9634e8dc964a4adafa7e1535147abd7ec29441a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f561b48d633ac2e7d0d667020fc634a96ade33a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49976","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.353","lastModified":"2024-10-21T18:15:18.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing\/timerlat: Drop interface_lock in stop_kthread()\n\nstop_kthread() is the offline callback for \"trace\/osnoise:online\", since\ncommit 5bfbcd1ee57b (\"tracing\/timerlat: Add interface_lock around clearing\nof kthread in stop_kthread()\"), the following ABBA deadlock scenario is\nintroduced:\n\nT1                            | T2 [BP]               | T3 [AP]\nosnoise_hotplug_workfn()      | work_for_cpu_fn()     | cpuhp_thread_fun()\n                              |   _cpu_down()         |   osnoise_cpu_die()\n  mutex_lock(&interface_lock) |                       |     stop_kthread()\n                              |     cpus_write_lock() |       mutex_lock(&interface_lock)\n  cpus_read_lock()            |     cpuhp_kick_ap()   |\n\nAs the interface_lock here in just for protecting the \"kthread\" field of\nthe osn_var, use xchg() instead to fix this issue. Also use\nfor_each_online_cpu() back in stop_per_cpu_kthreads() as it can take\ncpu_read_lock() again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09cb44cc3d3df7ade2cebc939d6257a2fa8afc7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4a05ceffe8fad68b45de38fe2311bda619e76e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b484a02c9cedf8703eff8f0756f94618004bd165","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db8571a9a098086608c11a15856ff585789e67e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49977","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.417","lastModified":"2024-10-21T18:15:18.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: Fix zero-division error when disabling tc cbs\n\nThe commit b8c43360f6e4 (\"net: stmmac: No need to calculate speed divider\nwhen offload is disabled\") allows the \"port_transmit_rate_kbps\" to be\nset to a value of 0, which is then passed to the \"div_s64\" function when\ntc-cbs is disabled. This leads to a zero-division error.\n\nWhen tc-cbs is disabled, the idleslope, sendslope, and credit values the\ncredit values are not required to be configured. Therefore, adding a return\nstatement after setting the txQ mode to DCB when tc-cbs is disabled would\nprevent a zero-division error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03582f4752427f60817d896f1a827aff772bd31e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d43e1ad4567d67af2b42d3ab7c14152ffed25c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/675faf5a14c14a2be0b870db30a70764df81e2df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/837d9df9c0792902710149d1a5e0991520af0f93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0da9504a528f05f97d926b4db74ff21917a33e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e297a2bf56d12fd7f91a0c209eb6ea84361f3368","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e33fe25b1efe4f2e6a5858786dbc82ae4c44ed4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49978","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.483","lastModified":"2024-10-21T18:15:18.483","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngso: fix udp gso fraglist segmentation after pull from frag_list\n\nDetect gso fraglist skbs with corrupted geometry (see below) and\npass these to skb_segment instead of skb_segment_list, as the first\ncan segment them correctly.\n\nValid SKB_GSO_FRAGLIST skbs\n- consist of two or more segments\n- the head_skb holds the protocol headers plus first gso_size\n- one or more frag_list skbs hold exactly one segment\n- all but the last must be gso_size\n\nOptional datapath hooks such as NAT and BPF (bpf_skb_pull_data) can\nmodify these skbs, breaking these invariants.\n\nIn extreme cases they pull all data into skb linear. For UDP, this\ncauses a NULL ptr deref in __udpv4_gso_segment_list_csum at\nudp_hdr(seg->next)->dest.\n\nDetect invalid geometry due to pull, by checking head_skb size.\nDon't just drop, as this may blackhole a destination. Convert to be\nable to pass to regular skb_segment."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/080e6c9a3908de193a48f646c5ce1bfb15676ffc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33e28acf42ee863f332a958bfc2f1a284a3659df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cd00d2e3655fad3bda96dc1ebf17b6495f86fea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1e40ac5b5e9077fe1f7ae0eb88034db0f9ae1ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af3122f5fdc0d00581d6e598a668df6bf54c9daa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49979","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.550","lastModified":"2024-10-21T18:15:18.550","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: gso: fix tcp fraglist segmentation after pull from frag_list\n\nDetect tcp gso fraglist skbs with corrupted geometry (see below) and\npass these to skb_segment instead of skb_segment_list, as the first\ncan segment them correctly.\n\nValid SKB_GSO_FRAGLIST skbs\n- consist of two or more segments\n- the head_skb holds the protocol headers plus first gso_size\n- one or more frag_list skbs hold exactly one segment\n- all but the last must be gso_size\n\nOptional datapath hooks such as NAT and BPF (bpf_skb_pull_data) can\nmodify these skbs, breaking these invariants.\n\nIn extreme cases they pull all data into skb linear. For TCP, this\ncauses a NULL ptr deref in __tcpv4_gso_segment_list_csum at\ntcp_hdr(seg->next).\n\nDetect invalid geometry due to pull, by checking head_skb size.\nDon't just drop, as this may blackhole a destination. Convert to be\nable to pass to regular skb_segment.\n\nApproach and description based on a patch by Willem de Bruijn."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17bd3bd82f9f79f3feba15476c2b2c95a9b11ff8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d4a83a44428de45bfe9dccb0192a3711d1097e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fdd8c83e83fa5e82f1b5585245c51e0355c9f46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49980","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.613","lastModified":"2024-10-21T18:15:18.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvrf: revert \"vrf: Remove unnecessary RCU-bh critical section\"\n\nThis reverts commit 504fc6f4f7f681d2a03aa5f68aad549d90eab853.\n\ndev_queue_xmit_nit is expected to be called with BH disabled.\n__dev_queue_xmit has the following:\n\n        \/* Disable soft irqs for various locks below. Also\n         * stops preemption for RCU.\n         *\/\n        rcu_read_lock_bh();\n\nVRF must follow this invariant. The referenced commit removed this\nprotection. Which triggered a lockdep warning:\n\n\t================================\n\tWARNING: inconsistent lock state\n\t6.11.0 #1 Tainted: G        W\n\t--------------------------------\n\tinconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-W} usage.\n\tbtserver\/134819 [HC0[0]:SC0[0]:HE1:SE1] takes:\n\tffff8882da30c118 (rlock-AF_PACKET){+.?.}-{2:2}, at: tpacket_rcv+0x863\/0x3b30\n\t{IN-SOFTIRQ-W} state was registered at:\n\t  lock_acquire+0x19a\/0x4f0\n\t  _raw_spin_lock+0x27\/0x40\n\t  packet_rcv+0xa33\/0x1320\n\t  __netif_receive_skb_core.constprop.0+0xcb0\/0x3a90\n\t  __netif_receive_skb_list_core+0x2c9\/0x890\n\t  netif_receive_skb_list_internal+0x610\/0xcc0\n          [...]\n\n\tother info that might help us debug this:\n\t Possible unsafe locking scenario:\n\n\t       CPU0\n\t       ----\n\t  lock(rlock-AF_PACKET);\n\t  <Interrupt>\n\t    lock(rlock-AF_PACKET);\n\n\t *** DEADLOCK ***\n\n\tCall Trace:\n\t <TASK>\n\t dump_stack_lvl+0x73\/0xa0\n\t mark_lock+0x102e\/0x16b0\n\t __lock_acquire+0x9ae\/0x6170\n\t lock_acquire+0x19a\/0x4f0\n\t _raw_spin_lock+0x27\/0x40\n\t tpacket_rcv+0x863\/0x3b30\n\t dev_queue_xmit_nit+0x709\/0xa40\n\t vrf_finish_direct+0x26e\/0x340 [vrf]\n\t vrf_l3_out+0x5f4\/0xe80 [vrf]\n\t __ip_local_out+0x51e\/0x7a0\n          [...]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/718a752bd746b3f4dd62516bb437baf73d548415","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c9381b3138246d46536db93ed696832abd70204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04c4d9eb4f25b950b33218e33b04c94e7445e51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e61f8c4d179b2ffc0d3b7f821c3734be738643d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49981","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.670","lastModified":"2024-10-21T18:15:18.670","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: fix use after free bug in venus_remove due to race condition\n\nin venus_probe, core->work is bound with venus_sys_error_handler, which is\nused to handle error. The code use core->sys_err_done to make sync work.\nThe core->work is started in venus_event_notify.\n\nIf we call venus_remove, there might be an unfished work. The possible\nsequence is as follows:\n\nCPU0                  CPU1\n\n                     |venus_sys_error_handler\nvenus_remove         |\nhfi_destroy\t \t\t |\nvenus_hfi_destroy\t |\nkfree(hdev);\t     |\n                     |hfi_reinit\n\t\t\t\t\t |venus_hfi_queues_reinit\n                     |\/\/use hdev\n\nFix it by canceling the work in venus_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10941d4f99a5a34999121b314afcd9c0a1c14f15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a541fcc0bd2b05a458e9613376df1289ec11621","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60b6968341a6dd5353554f3e72db554693a128a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0686aedc5f1343442d044bd64eeac7e7a391f4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf6be32e2d39f6301ff1831e249d32a8744ab28a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5a85ed88e043474161bbfe54002c89c1cb50ee2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d925e9f7fb5a2dbefd1a73fc01061f38c7becd4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49982","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.733","lastModified":"2024-10-21T18:15:18.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naoe: fix the potential use-after-free problem in more places\n\nFor fixing CVE-2023-6270, f98364e92662 (\"aoe: fix the potential\nuse-after-free problem in aoecmd_cfg_pkts\") makes tx() calling dev_put()\ninstead of doing in aoecmd_cfg_pkts(). It avoids that the tx() runs\ninto use-after-free.\n\nThen Nicolai Stange found more places in aoe have potential use-after-free\nproblem with tx(). e.g. revalidate(), aoecmd_ata_rw(), resend(), probe()\nand aoecmd_cfg_rsp(). Those functions also use aoenet_xmit() to push\npacket to tx queue. So they should also use dev_hold() to increase the\nrefcnt of skb->dev.\n\nOn the other hand, moving dev_put() to tx() causes that the refcnt of\nskb->dev be reduced to a negative value, because corresponding\ndev_hold() are not called in revalidate(), aoecmd_ata_rw(), resend(),\nprobe(), and aoecmd_cfg_rsp(). This patch fixed this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07b418d50ccbbca7e5d87a3a0d41d436cefebf79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d6e54fc71ad1ab0a87047fd9c211e75d86084a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8253a60c89ec35c8f36fb2cc08cdf854c7a3eb58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89d9a69ae0c667e4d9d028028e2dcc837bae626f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acc5103a0a8c200a52af7d732c36a8477436a3d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc2cbf7525ac288e07d465f5a1d8cb8fb9599254","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f63461af2c1a86af4217910e47a5c46e3372e645","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49983","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.797","lastModified":"2024-10-21T18:15:18.797","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: drop ppath from ext4_ext_replay_update_ex() to avoid double-free\n\nWhen calling ext4_force_split_extent_at() in ext4_ext_replay_update_ex(),\nthe 'ppath' is updated but it is the 'path' that is freed, thus potentially\ntriggering a double-free in the following process:\n\next4_ext_replay_update_ex\n  ppath = path\n  ext4_force_split_extent_at(&ppath)\n    ext4_split_extent_at\n      ext4_ext_insert_extent\n        ext4_ext_create_new_leaf\n          ext4_ext_grow_indepth\n            ext4_find_extent\n              if (depth > path[0].p_maxdepth)\n                kfree(path)                 ---> path First freed\n                *orig_path = path = NULL    ---> null ppath\n  kfree(path)                               ---> path double-free !!!\n\nSo drop the unnecessary ppath and use path directly to avoid this problem.\nAnd use ext4_find_extent() directly to update path, avoiding unnecessary\nmemory allocation and freeing. Also, propagate the error returned by\next4_find_extent() instead of using strange error codes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b558006d98b7b0b730027be0ee98973dd10ee0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ff710662e8d86a63a39b334e9ca0cb10e5c14b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c0f4cc84d3a601c99bc5e6e6eb1cbda542cce95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6367d3f04c69e2b8770b8137bd800e0784b0abbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63adc9016917e6970fb0104ee5fd6770f02b2d80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c26d9e53e5fbacda0732a577e97c5a5b7882aaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a34bed978364114390162c27e50fca50791c568d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49984","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.873","lastModified":"2024-10-21T18:15:18.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/v3d: Prevent out of bounds access in performance query extensions\n\nCheck that the number of perfmons userspace is passing in the copy and\nreset extensions is not greater than the internal kernel storage where\nthe ids will be copied into."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3e50d72abe50204c7b19784a66e86da29dde32c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73ad583bd4938bf37d2709fc36901eb6f22f2722","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9536f16be3970c170571efa707c13cd089c774e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f32b5128d2c440368b5bf3a7a356823e235caabb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49985","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:18.950","lastModified":"2024-10-21T18:15:18.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: stm32f7: Do not prepare\/unprepare clock during runtime suspend\/resume\n\nIn case there is any sort of clock controller attached to this I2C bus\ncontroller, for example Versaclock or even an AIC32x4 I2C codec, then\nan I2C transfer triggered from the clock controller clk_ops .prepare\ncallback may trigger a deadlock on drivers\/clk\/clk.c prepare_lock mutex.\n\nThis is because the clock controller first grabs the prepare_lock mutex\nand then performs the prepare operation, including its I2C access. The\nI2C access resumes this I2C bus controller via .runtime_resume callback,\nwhich calls clk_prepare_enable(), which attempts to grab the prepare_lock\nmutex again and deadlocks.\n\nSince the clock are already prepared since probe() and unprepared in\nremove(), use simple clk_enable()\/clk_disable() calls to enable and\ndisable the clock on runtime suspend and resume, to avoid hitting the\nprepare_lock mutex."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/048bbbdbf85e5e00258dfb12f5e368f908801d7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1883cad2cc629ded4a3556c0bbb8b42533ad8764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22a1f8a5b56ba93d3e8b7a1dafa24e01c8bb48ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/894cd5f5fd9061983445bbd1fa3d81be43095344","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b8bc33ad64192f54142396470cc34ce539a8940","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2024b1a583ab9176c797ea1e5f57baf8d5e2682","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fac3c9f7784e8184c0338e9f0877b81e55d3ef1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49986","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.020","lastModified":"2024-10-21T18:15:19.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: x86-android-tablets: Fix use after free on platform_device_register() errors\n\nx86_android_tablet_remove() frees the pdevs[] array, so it should not\nbe used after calling x86_android_tablet_remove().\n\nWhen platform_device_register() fails, store the pdevs[x] PTR_ERR() value\ninto the local ret variable before calling x86_android_tablet_remove()\nto avoid using pdevs[] after it has been freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fae3129c0c08e72b1fe93e61fd8fd203252094a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73a98cf79e4dbfa3d0c363e826c65aae089b313c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aac871e493fc8809e60209d9899b1af07e9dbfc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f08adc5177bd4343df09033f62ab562c09ba7f7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49987","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.087","lastModified":"2024-10-21T18:15:19.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpftool: Fix undefined behavior in qsort(NULL, 0, ...)\n\nWhen netfilter has no entry to display, qsort is called with\nqsort(NULL, 0, ...). This results in undefined behavior, as UBSan\nreports:\n\nnet.c:827:2: runtime error: null pointer passed as argument 1, which is declared to never be null\n\nAlthough the C standard does not explicitly state whether calling qsort\nwith a NULL pointer when the size is 0 constitutes undefined behavior,\nSection 7.1.4 of the C standard (Use of library functions) mentions:\n\n\"Each of the following statements applies unless explicitly stated\notherwise in the detailed descriptions that follow: If an argument to a\nfunction has an invalid value (such as a value outside the domain of\nthe function, or a pointer outside the address space of the program, or\na null pointer, or a pointer to non-modifiable storage when the\ncorresponding parameter is not const-qualified) or a type (after\npromotion) not expected by a function with variable number of\narguments, the behavior is undefined.\"\n\nTo avoid this, add an early return when nf_link_info is NULL to prevent\ncalling qsort with a NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e0f6f33f2aa87493b365a38a8fd87b8854b7734","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c208b02827eb642758cef65641995fd3f38c89af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2d9f9a7837ab29ccae0c42252f17d436bf0a501","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f04e2ad394e2755d0bb2d858ecb5598718bf00d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49988","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.147","lastModified":"2024-10-21T18:15:19.147","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: add refcnt to ksmbd_conn struct\n\nWhen sending an oplock break request, opinfo->conn is used,\nBut freed ->conn can be used on multichannel.\nThis patch add a reference count to the ksmbd_conn struct\nso that it can be freed when it is no longer used."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18f06bacc197d4ac9b518ad1c69999bc3d83e7aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fd3cde4628bcd3549ab95061f2bab74d2ed4f3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9dac92f4482a382e8c0fe1bc243da5fc3526b0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee426bfb9d09b29987369b897fe9b6485ac2be27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49989","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.207","lastModified":"2024-10-21T18:15:19.207","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: fix double free issue during amdgpu module unload\n\nFlexible endpoints use DIGs from available inflexible endpoints,\nso only the encoders of inflexible links need to be freed.\nOtherwise, a double free issue may occur when unloading the\namdgpu module.\n\n[  279.190523] RIP: 0010:__slab_free+0x152\/0x2f0\n[  279.190577] Call Trace:\n[  279.190580]  <TASK>\n[  279.190582]  ? show_regs+0x69\/0x80\n[  279.190590]  ? die+0x3b\/0x90\n[  279.190595]  ? do_trap+0xc8\/0xe0\n[  279.190601]  ? do_error_trap+0x73\/0xa0\n[  279.190605]  ? __slab_free+0x152\/0x2f0\n[  279.190609]  ? exc_invalid_op+0x56\/0x70\n[  279.190616]  ? __slab_free+0x152\/0x2f0\n[  279.190642]  ? asm_exc_invalid_op+0x1f\/0x30\n[  279.190648]  ? dcn10_link_encoder_destroy+0x19\/0x30 [amdgpu]\n[  279.191096]  ? __slab_free+0x152\/0x2f0\n[  279.191102]  ? dcn10_link_encoder_destroy+0x19\/0x30 [amdgpu]\n[  279.191469]  kfree+0x260\/0x2b0\n[  279.191474]  dcn10_link_encoder_destroy+0x19\/0x30 [amdgpu]\n[  279.191821]  link_destroy+0xd7\/0x130 [amdgpu]\n[  279.192248]  dc_destruct+0x90\/0x270 [amdgpu]\n[  279.192666]  dc_destroy+0x19\/0x40 [amdgpu]\n[  279.193020]  amdgpu_dm_fini+0x16e\/0x200 [amdgpu]\n[  279.193432]  dm_hw_fini+0x26\/0x40 [amdgpu]\n[  279.193795]  amdgpu_device_fini_hw+0x24c\/0x400 [amdgpu]\n[  279.194108]  amdgpu_driver_unload_kms+0x4f\/0x70 [amdgpu]\n[  279.194436]  amdgpu_pci_remove+0x40\/0x80 [amdgpu]\n[  279.194632]  pci_device_remove+0x3a\/0xa0\n[  279.194638]  device_remove+0x40\/0x70\n[  279.194642]  device_release_driver_internal+0x1ad\/0x210\n[  279.194647]  driver_detach+0x4e\/0xa0\n[  279.194650]  bus_remove_driver+0x6f\/0xf0\n[  279.194653]  driver_unregister+0x33\/0x60\n[  279.194657]  pci_unregister_driver+0x44\/0x90\n[  279.194662]  amdgpu_exit+0x19\/0x1f0 [amdgpu]\n[  279.194939]  __do_sys_delete_module.isra.0+0x198\/0x2f0\n[  279.194946]  __x64_sys_delete_module+0x16\/0x20\n[  279.194950]  do_syscall_64+0x58\/0x120\n[  279.194954]  entry_SYSCALL_64_after_hwframe+0x6e\/0x76\n[  279.194980]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20b5a8f9f4670a8503aa9fa95ca632e77c6bf55d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c0ff4de45ce2c5f7997a1ffa6eefee4b79e6b58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7af9e6fa63dbd43a61d4ecc8f59426596a75e507","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf6f3ebd6312d465fee096d1f58089b177c7c67f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49990","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.270","lastModified":"2024-10-21T18:15:19.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/hdcp: Check GSC structure validity\n\nSometimes xe_gsc is not initialized when checked at HDCP capability\ncheck. Add gsc structure check to avoid null pointer error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7266a424b1e502745170322e3c27f697d12de627","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4224f6bae3801d589f815672ec62800a1501b0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c940627857eedca8407b84b40ceb4252b100d291","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49991","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.330","lastModified":"2024-10-21T18:15:19.330","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: amdkfd_free_gtt_mem clear the correct pointer\n\nPass pointer reference to amdgpu_bo_unref to clear the correct pointer,\notherwise amdgpu_bo_unref clear the local variable, the original pointer\nnot set to NULL, this could cause use-after-free bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30ceb873cc2e97348d9da2265b2d1ddf07f682e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c9289806591807e4e3be9a23df8ee2069180055","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71f3240f82987f0f070ea5bed559033de7d4c0e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c86ad39140bbcb9dc75a10046c2221f657e8083b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49992","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.387","lastModified":"2024-10-21T18:15:19.387","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/stm: Avoid use-after-free issues with crtc and plane\n\nltdc_load() calls functions drm_crtc_init_with_planes(),\ndrm_universal_plane_init() and drm_encoder_init(). These functions\nshould not be called with parameters allocated with devm_kzalloc()\nto avoid use-after-free issues [1].\n\nUse allocations managed by the DRM framework.\n\nFound by Linux Verification Center (linuxtesting.org).\n\n[1]\nhttps:\/\/lore.kernel.org\/lkml\/u366i76e3qhh3ra5oxrtngjtm2u5lterkekcz6y2jkndhuxzli@diujon4h7qwb\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a1741d10da29aa84955ef89ae9a03c4b6038657","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19dd9780b7ac673be95bf6fd6892a184c9db611f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/454e5d7e671946698af0f201e48469e5ddb42851","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b22eec4b57d04befa90e8554ede34e6c67257606","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d02611ff001454358be6910cb926799e2d818716","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49993","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.477","lastModified":"2024-10-21T18:15:19.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix potential lockup if qi_submit_sync called with 0 count\n\nIf qi_submit_sync() is invoked with 0 invalidation descriptors (for\ninstance, for DMA draining purposes), we can run into a bug where a\nsubmitting thread fails to detect the completion of invalidation_wait.\nSubsequently, this led to a soft lockup. Currently, there is no impact\nby this bug on the existing users because no callers are submitting\ninvalidations with 0 descriptors. This fix will enable future users\n(such as DMA drain) calling qi_submit_sync() with 0 count.\n\nSuppose thread T1 invokes qi_submit_sync() with non-zero descriptors, while\nconcurrently, thread T2 calls qi_submit_sync() with zero descriptors. Both\nthreads then enter a while loop, waiting for their respective descriptors\nto complete. T1 detects its completion (i.e., T1's invalidation_wait status\nchanges to QI_DONE by HW) and proceeds to call reclaim_free_desc() to\nreclaim all descriptors, potentially including adjacent ones of other\nthreads that are also marked as QI_DONE.\n\nDuring this time, while T2 is waiting to acquire the qi->q_lock, the IOMMU\nhardware may complete the invalidation for T2, setting its status to\nQI_DONE. However, if T1's execution of reclaim_free_desc() frees T2's\ninvalidation_wait descriptor and changes its status to QI_FREE, T2 will\nnot observe the QI_DONE status for its invalidation_wait and will\nindefinitely remain stuck.\n\nThis soft lockup does not occur when only non-zero descriptors are\nsubmitted.In such cases, invalidation descriptors are interspersed among\nwait descriptors with the status QI_IN_USE, acting as barriers. These\nbarriers prevent the reclaim code from mistakenly freeing descriptors\nbelonging to other submitters.\n\nConsidered the following example timeline:\n\tT1\t\t\tT2\n========================================\n\tID1\n\tWD1\n\twhile(WD1!=QI_DONE)\n\tunlock\n\t\t\t\tlock\n\tWD1=QI_DONE*\t\tWD2\n\t\t\t\twhile(WD2!=QI_DONE)\n\t\t\t\tunlock\n\tlock\n\tWD1==QI_DONE?\n\tID1=QI_DONE\t\tWD2=DONE*\n\treclaim()\n\tID1=FREE\n\tWD1=FREE\n\tWD2=FREE\n\tunlock\n\t\t\t\tsoft lockup! T2 never sees QI_DONE in WD2\n\nWhere:\nID = invalidation descriptor\nWD = wait descriptor\n* Written by hardware\n\nThe root of the problem is that the descriptor status QI_DONE flag is used\nfor two conflicting purposes:\n1. signal a descriptor is ready for reclaim (to be freed)\n2. signal by the hardware that a wait descriptor is complete\n\nThe solution (in this patch) is state separation by using QI_FREE flag\nfor #1.\n\nOnce a thread's invalidation descriptors are complete, their status would\nbe set to QI_FREE. The reclaim_free_desc() function would then only\nfree descriptors marked as QI_FREE instead of those marked as\nQI_DONE. This change ensures that T2 (from the previous example) will\ncorrectly observe the completion of its invalidation_wait (marked as\nQI_DONE)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07e4e92f84b7d3018b7064ef8d8438aeb54a2ca5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cf74230c139f208b7fb313ae0054386eee31a81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8840dc73ac9e1028291458ef1429ec3c2524ffec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92ba5b014d5435dd7a1ee02a2c7f2a0e8fe06c36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de9e7f68762585f7532de8a06de9485bf39dbd38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfdbc5ba10fb792c9d6d12ba8cb6e465f97365ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e03f00aa4a6c0c49c17857a4048f586636abdc32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49994","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.557","lastModified":"2024-10-21T18:15:19.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix integer overflow in BLKSECDISCARD\n\nI independently rediscovered\n\n\tcommit 22d24a544b0d49bbcbd61c8c0eaf77d3c9297155\n\tblock: fix overflow in blk_ioctl_discard()\n\nbut for secure erase.\n\nSame problem:\n\n\tuint64_t r[2] = {512, 18446744073709551104ULL};\n\tioctl(fd, BLKSECDISCARD, r);\n\nwill enter near infinite loop inside blkdev_issue_secure_erase():\n\n\ta.out: attempt to access beyond end of device\n\tloop0: rw=5, sector=3399043073, nr_sectors = 1024 limit=2048\n\tbio_check_eod: 3286214 callbacks suppressed"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0842ddd83939eb4db940b9af7d39e79722bc41aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/697ba0b6ec4ae04afb67d3911799b5e2043b4455","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c9915fa9410cbb9bd75ee283c03120046c56d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49995","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.660","lastModified":"2024-10-21T18:15:19.660","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: guard against string buffer overrun\n\nSmatch reports that copying media_name and if_name to name_parts may\noverwrite the destination.\n\n ...\/bearer.c:166 bearer_name_validate() error: strcpy() 'media_name' too large for 'name_parts->media_name' (32 vs 16)\n ...\/bearer.c:167 bearer_name_validate() error: strcpy() 'if_name' too large for 'name_parts->if_name' (1010102 vs 16)\n\nThis does seem to be the case so guard against this possibility by using\nstrscpy() and failing if truncation occurs.\n\nIntroduced by commit b97bf3fd8f6a (\"[TIPC] Initial merge\")\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12d26aa7fd3cbdbc5149b6e516563478d575026e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ed7f42dfd3edb387034128ca5b0f639836d4ddd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54dae0e9063ed23c9acf8d5ab9b18d3426a8ac18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6555a2a9212be6983d2319d65276484f7c5f431a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80c0be7bcf940ce9308311575c3aff8983c9b97a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a18c7b239d02aafb791ae2c45226f6bb40641792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2b2558971e02ca33eb637a8350d68a48b3e8e46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49996","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.760","lastModified":"2024-10-21T18:15:19.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix buffer overflow when parsing NFS reparse points\n\nReparseDataLength is sum of the InodeType size and DataBuffer size.\nSo to get DataBuffer size it is needed to subtract InodeType's size from\nReparseDataLength.\n\nFunction cifs_strndup_from_utf16() is currentlly accessing buf->DataBuffer\nat position after the end of the buffer because it does not subtract\nInodeType size from the length. Fix this problem and correctly subtract\nvariable len.\n\nMember InodeType is present only when reparse buffer is large enough. Check\nfor ReparseDataLength before accessing InodeType to prevent another invalid\nmemory access.\n\nMajor and minor rdev values are present also only when reparse buffer is\nlarge enough. Check for reparse buffer size before calling reparse_mkdev()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/803b3a39cb096d8718c0aebc03fd19f11c7dc919","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c173d47b69f07cd7ca08efb4e458adbd4725d8e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6db81c550cea0c73bd72ef55f579991e0e4ba07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2a8910af01653c1c268984855629d71fb81f404","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49997","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.837","lastModified":"2024-10-21T18:15:19.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: lantiq_etop: fix memory disclosure\n\nWhen applying padding, the buffer is not zeroed, which results in memory\ndisclosure. The mentioned data is observed on the wire. This patch uses\nskb_put_padto() to pad Ethernet frames properly. The mentioned function\nzeroes the expanded buffer.\n\nIn case the packet cannot be padded it is silently dropped. Statistics\nare also not incremented. This driver does not support statistics in the\nold 32-bit format or the new 64-bit format. These will be added in the\nfuture. In its current form, the patch should be easily backported to\nstable versions.\n\nEthernet MACs on Amazon-SE and Danube cannot do padding of the packets\nin hardware, so software padding must be applied."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1097bf16501ed5e35358d848b0a94ad2830b0f65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/185df159843d30fb71f821e7ea4368c2a3bfcd36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bf4c101d7c99483b8b15a0c8f881e3f399f7e18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/431b122933b197820d319eb3987a67d04346ce9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45c0de18ff2dc9af01236380404bbd6a46502c69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/469856f76f4802c5d7e3d20e343185188de1e2db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e66e38d07b31e177ca430758ed97fbc79f27d966","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49998","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.907","lastModified":"2024-10-21T18:15:19.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: improve shutdown sequence\n\nAlexander Sverdlin presents 2 problems during shutdown with the\nlan9303 driver. One is specific to lan9303 and the other just happens\nto reproduce there.\n\nThe first problem is that lan9303 is unique among DSA drivers in that it\ncalls dev_get_drvdata() at \"arbitrary runtime\" (not probe, not shutdown,\nnot remove):\n\nphy_state_machine()\n-> ...\n   -> dsa_user_phy_read()\n      -> ds->ops->phy_read()\n         -> lan9303_phy_read()\n            -> chip->ops->phy_read()\n               -> lan9303_mdio_phy_read()\n                  -> dev_get_drvdata()\n\nBut we never stop the phy_state_machine(), so it may continue to run\nafter dsa_switch_shutdown(). Our common pattern in all DSA drivers is\nto set drvdata to NULL to suppress the remove() method that may come\nafterwards. But in this case it will result in an NPD.\n\nThe second problem is that the way in which we set\ndp->conduit->dsa_ptr = NULL; is concurrent with receive packet\nprocessing. dsa_switch_rcv() checks once whether dev->dsa_ptr is NULL,\nbut afterwards, rather than continuing to use that non-NULL value,\ndev->dsa_ptr is dereferenced again and again without NULL checks:\ndsa_conduit_find_user() and many other places. In between dereferences,\nthere is no locking to ensure that what was valid once continues to be\nvalid.\n\nBoth problems have the common aspect that closing the conduit interface\nsolves them.\n\nIn the first case, dev_close(conduit) triggers the NETDEV_GOING_DOWN\nevent in dsa_user_netdevice_event() which closes user ports as well.\ndsa_port_disable_rt() calls phylink_stop(), which synchronously stops\nthe phylink state machine, and ds->ops->phy_read() will thus no longer\ncall into the driver after this point.\n\nIn the second case, dev_close(conduit) should do this, as per\nDocumentation\/networking\/driver.rst:\n\n| Quiescence\n| ----------\n|\n| After the ndo_stop routine has been called, the hardware must\n| not receive or transmit any data.  All in flight packets must\n| be aborted. If necessary, poll or wait for completion of\n| any reset commands.\n\nSo it should be sufficient to ensure that later, when we zeroize\nconduit->dsa_ptr, there will be no concurrent dsa_switch_rcv() call\non this conduit.\n\nThe addition of the netif_device_detach() function is to ensure that\nioctls, rtnetlinks and ethtool requests on the user ports no longer\npropagate down to the driver - we're no longer prepared to handle them.\n\nThe race condition actually did not exist when commit 0650bf52b31f\n(\"net: dsa: be compatible with masters which unregister on shutdown\")\nfirst introduced dsa_switch_shutdown(). It was created later, when we\nstopped unregistering the user interfaces from a bad spot, and we just\nreplaced that sequence with a racy zeroization of conduit->dsa_ptr\n(one which doesn't ensure that the interfaces aren't up)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6c24a03a61a245fe34d47582898331fa034b6ccd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab5d3420a1120950703dbdc33698b28a6ebc3d23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4a65d479213fe84ecb14e328271251eebe69492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49999","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:19.973","lastModified":"2024-10-21T18:15:19.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix the setting of the server responding flag\n\nIn afs_wait_for_operation(), we set transcribe the call responded flag to\nthe server record that we used after doing the fileserver iteration loop -\nbut it's possible to exit the loop having had a response from the server\nthat we've discarded (e.g. it returned an abort or we started receiving\ndata, but the call didn't complete).\n\nThis means that op->server might be NULL, but we don't check that before\nattempting to set the server flag."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d51ab44123f35dd1d646d99a15ebef10f55e263","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97c953572d98080c5f1486155350bb688041747a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff98751bae40faed1ba9c6a7287e84430f7dec64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50000","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:20.063","lastModified":"2024-10-21T18:15:20.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix NULL deref in mlx5e_tir_builder_alloc()\n\nIn mlx5e_tir_builder_alloc() kvzalloc() may return NULL\nwhich is dereferenced on the next line in a reference\nto the modify field.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0168ab6fbd9e50d20b97486168b604b2ab28a2ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bcc86cc721bea68980098f51f102aa2c2b9d932","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4655456a64a0f936098c8432bac64e7176bd2aff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d80dde26d7bab1320210279483ac854dcb274b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b48ee5bb25c02ca2b81e0d16bf8af17ab6ed3f8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f25389e779500cf4a59ef9804534237841bce536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50001","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:20.130","lastModified":"2024-10-21T18:15:20.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Fix error path in multi-packet WQE transmit\n\nRemove the erroneous unmap in case no DMA mapping was established\n\nThe multi-packet WQE transmit code attempts to obtain a DMA mapping for\nthe skb. This could fail, e.g. under memory pressure, when the IOMMU\ndriver just can't allocate more memory for page tables. While the code\ntries to handle this in the path below the err_unmap label it erroneously\nunmaps one entry from the sq's FIFO list of active mappings. Since the\ncurrent map attempt failed this unmap is removing some random DMA mapping\nthat might still be required. If the PCI function now presents that IOVA,\nthe IOMMU may assumes a rogue DMA access and e.g. on s390 puts the PCI\nfunction in error state.\n\nThe erroneous behavior was seen in a stress-test environment that created\nmemory pressure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26fad69b34fcba80d5c7d9e651f628e6ac927754","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bcae12c795f32ddfbf8c80d1b5f1d3286341c32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bb8c12fb5e2b1f03d603d493c92941676f109b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca36d6c1a49b6965c86dd528a73f38bc62d9c625","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce828b347cf1b3c1b12b091d02463c35ce5097f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecf310aaf256acbc8182189fe0aa1021c3ddef72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc357e78176945ca7bcacf92ab794b9ccd41b4f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50002","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T18:15:20.200","lastModified":"2024-10-21T18:15:20.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstatic_call: Handle module init failure correctly in static_call_del_module()\n\nModule insertion invokes static_call_add_module() to initialize the static\ncalls in a module. static_call_add_module() invokes __static_call_init(),\nwhich allocates a struct static_call_mod to either encapsulate the built-in\nstatic call sites of the associated key into it so further modules can be\nadded or to append the module to the module chain.\n\nIf that allocation fails the function returns with an error code and the\nmodule core invokes static_call_del_module() to clean up eventually added\nstatic_call_mod entries.\n\nThis works correctly, when all keys used by the module were converted over\nto a module chain before the failure. If not then static_call_del_module()\ncauses a #GP as it blindly assumes that key::mods points to a valid struct\nstatic_call_mod.\n\nThe problem is that key::mods is not a individual struct member of struct\nstatic_call_key, it's part of a union to save space:\n\n        union {\n                \/* bit 0: 0 = mods, 1 = sites *\/\n                unsigned long type;\n                struct static_call_mod *mods;\n                struct static_call_site *sites;\n\t};\n\nkey::sites is a pointer to the list of built-in usage sites of the static\ncall. The type of the pointer is differentiated by bit 0. A mods pointer\nhas the bit clear, the sites pointer has the bit set.\n\nAs static_call_del_module() blidly assumes that the pointer is a valid\nstatic_call_mod type, it fails to check for this failure case and\ndereferences the pointer to the list of built-in call sites, which is\nobviously bogus.\n\nCure it by checking whether the key has a sites or a mods pointer.\n\nIf it's a sites pointer then the key is not to be touched. As the sites are\nwalked in the same order as in __static_call_init() the site walk can be\nterminated because all subsequent sites have not been touched by the init\ncode due to the error exit.\n\nIf it was converted before the allocation fail, then the inner loop which\nsearches for a module match will find nothing.\n\nA fail in the second allocation in __static_call_init() is harmless and\ndoes not require special treatment. The first allocation succeeded and\nconverted the key to a module chain. That first entry has mod::mod == NULL\nand mod::next == NULL, so the inner loop of static_call_del_module() will\nneither find a module match nor a module chain. The next site in the walk\nwas either already converted, but can't match the module, or it will exit\nthe outer loop because it has a static_call_site pointer and not a\nstatic_call_mod pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b494471797bff3d257e99dc0a7abb0c5ff3b4cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b30051c4864234ec57290c3d142db7c88f10d8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c48c2b53191bf991361998f5bb97b8f2fc5a89c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b566c7d8a2de403ccc9d8a06195e19bbb386d0e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0abbbe8c98c077292221ec7e2baa667c9f0974c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed4c8ce0f307f2ab8778aeb40a8866d171e8f128","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-46236","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T19:15:03.207","lastModified":"2024-10-21T19:35:03.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"CodeAstro Membership Management System v1.0 is vulnerable to Cross Site Scripting (XSS) via the address parameter in add_members.php and edit_member.php."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":5.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/anoncoder01\/PHP_CodeAstro_Stored_XSS\/blob\/master\/vulnerabilities\/XSS_1.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-46238","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T19:15:03.363","lastModified":"2024-10-21T21:35:03.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Multiple Cross Site Scripting (XSS) vulnerabilities exist in PHPGurukul Hospital Management System 4.0 via the docname parameter in \/admin\/add-doctor.php and \/admin\/edit-doctor.php"}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":5.9,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.7,"impactScore":3.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/anoncoder01\/PHP_Gurukul_Hospital_Management_System_XSS\/blob\/master\/vulnerabilities\/XSS2.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-46239","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T19:15:03.413","lastModified":"2024-10-21T21:35:04.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Multiple cross-site scripting vulnerabilities exist in PHPGurukul Hospital Management System 4.0 via the docname parameter in \/doctor\/edit-profile.php and adminremark parameter in \/admin\/query-details.php."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":5.9,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.7,"impactScore":3.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/anoncoder01\/PHP_Gurukul_Hospital_Management_System_XSS\/blob\/master\/vulnerabilities\/XSS3.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-47825","sourceIdentifier":"security-advisories@github.com","published":"2024-10-21T19:15:03.500","lastModified":"2024-10-21T19:15:03.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Cilium is a networking, observability, and security solution with an eBPF-based dataplane. Starting in version 1.14.0 and prior to versions 1.14.16 and 1.15.10, a policy rule denying a prefix that is broader than `\/32` may be ignored if there is a policy rule referencing a more narrow prefix (`CIDRSet` or `toFQDN`) and this narrower policy rule specifies either `enableDefaultDeny: false` or `- toEntities: all`. Note that a rule specifying `toEntities: world` or `toEntities: 0.0.0.0\/0` is insufficient, it must be to entity `all`.This issue has been patched in Cilium v1.14.16 and v1.15.10. As this issue only affects policies using `enableDefaultDeny: false` or that set `toEntities` to `all`, some workarounds are available. For users with policies using `enableDefaultDeny: false`, remove this configuration option and explicitly define any allow rules required. For users with egress policies that explicitly specify `toEntities: all`, use `toEntities: world`."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:L\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.0,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.2,"impactScore":1.4}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-276"}]}],"references":[{"url":"https:\/\/github.com\/cilium\/cilium\/security\/advisories\/GHSA-3wwx-63fv-pfq6","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-48709","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T19:15:03.817","lastModified":"2024-10-21T19:35:07.443","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"CodeAstro Membership Management System v1.0 is vulnerable to Cross Site Scripting (XSS) via the membershipType parameter in edit_type.php"}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":5.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.3,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/anoncoder01\/PHP_CodeAstro_Stored_XSS\/blob\/master\/vulnerabilities\/XSS_2.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50003","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.020","lastModified":"2024-10-21T19:15:04.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix system hang while resume with TBT monitor\n\n[Why]\nConnected with a Thunderbolt monitor and do the suspend and the system\nmay hang while resume.\n\nThe TBT monitor HPD will be triggered during the resume procedure\nand call the drm_client_modeset_probe() while\nstruct drm_connector connector->dev->master is NULL.\n\nIt will mess up the pipe topology after resume.\n\n[How]\nSkip the TBT monitor HPD during the resume procedure because we\ncurrently will probe the connectors after resume by default.\n\n(cherry picked from commit 453f86a26945207a16b8f66aaed5962dc2b95b85)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52d4e3fb3d340447dcdac0e14ff21a764f326907","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68d603f467a75618eeae5bfe8af32cda47097010","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/722d2d8fc423108597b97efbf165187d16d9aa1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73e441be033d3ed0bdff09b575da3e7d4606ffc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2356296f546326f9f06c109e201d42201e1e783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb9329cd882aa274e92bdb1003bc088433fdee86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50004","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.083","lastModified":"2024-10-21T19:15:04.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: update DML2 policy EnhancedPrefetchScheduleAccelerationFinal DCN35\n\n[WHY & HOW]\nMismatch in DCN35 DML2 cause bw validation failed to acquire unexpected DPP pipe to cause\ngrey screen and system hang. Remove EnhancedPrefetchScheduleAccelerationFinal value override\nto match HW spec.\n\n(cherry picked from commit 9dad21f910fcea2bdcff4af46159101d7f9cd8ba)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d5e5e8a0aa49ea2163abf128da3b509a6c58286","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4010efc8516899981cc3b57be2d4a2d5d9e50228","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/945dc25eda88b5d6e30c9686dc619ab981c22d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50005","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.143","lastModified":"2024-10-21T19:15:04.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac802154: Fix potential RCU dereference issue in mac802154_scan_worker\n\nIn the `mac802154_scan_worker` function, the `scan_req->type` field was\naccessed after the RCU read-side critical section was unlocked. According\nto RCU usage rules, this is illegal and can lead to unpredictable\nbehavior, such as accessing memory that has been updated or causing\nuse-after-free issues.\n\nThis possible bug was identified using a static analysis tool developed\nby myself, specifically designed to detect RCU-related issues.\n\nTo address this, the `scan_req->type` value is now stored in a local\nvariable `scan_req_type` while still within the RCU read-side critical\nsection. The `scan_req_type` is then used after the RCU lock is released,\nensuring that the type value is safely accessed without violating RCU\nrules."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/540138377b22f601f06f55ebfa3ca171dcab471a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bff1709b3980bd7f80be6786f64cc9a9ee9e56da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d18f669461811dfe2915d5554ab2a9834f810013","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e676e4ea76bbe7f1156d8c326b9b6753849481c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50006","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.223","lastModified":"2024-10-21T19:15:04.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix i_data_sem unlock order in ext4_ind_migrate()\n\nFuzzing reports a possible deadlock in jbd2_log_wait_commit.\n\nThis issue is triggered when an EXT4_IOC_MIGRATE ioctl is set to require\nsynchronous updates because the file descriptor is opened with O_SYNC.\nThis can lead to the jbd2_journal_stop() function calling\njbd2_might_wait_for_commit(), potentially causing a deadlock if the\nEXT4_IOC_MIGRATE call races with a write(2) system call.\n\nThis problem only arises when CONFIG_PROVE_LOCKING is enabled. In this\ncase, the jbd2_might_wait_for_commit macro locks jbd2_handle in the\njbd2_journal_stop function while i_data_sem is locked. This triggers\nlockdep because the jbd2_journal_start function might also lock the same\njbd2_handle simultaneously.\n\nFound by Linux Verification Center (linuxtesting.org) with syzkaller.\n\nRule: add"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/53b1999cfd2c7addf2e581a32865fe8835467b44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6252cb6bde7fc76cb8dcb49d1def7c326b190820","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fedf51ab8cf7b69bff08f37fe0989fec7f5d870","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc749e61c011c255d81b192a822db650c68b313f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d43776b907659affef1de888525847d64b244194","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d58a00e981d3118b91d503da263e640b7cde6729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef05572da0c0eb89614ed01cc17d3c882bdbd1ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50007","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.300","lastModified":"2024-10-21T19:15:04.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: asihpi: Fix potential OOB array access\n\nASIHPI driver stores some values in the static array upon a response\nfrom the driver, and its index depends on the firmware.  We shouldn't\ntrust it blindly.\n\nThis patch adds a sanity check of the array index to fit in the array\nsize."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/219587bca2678e31700ef09ecec178ba1f735674","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36ee4021bcc37b834996e79740d095d6f8dd948f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a55740996701f7b2bc46dc988b60ef2e416a747","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b986c7430a6bb68d523dac7bfc74cbd5b44ef96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/876d04bf5a8ac1d6af5afd258cd37ab83ab2cf3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad7248a5e92587b9266c62db8bcc4e58de53e372","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e658227d9d4f4e122d81690fdbc0d438b10288f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50008","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.367","lastModified":"2024-10-21T19:15:04.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_cmd_802_11_scan_ext()\n\nReplace one-element array with a flexible-array member in\n`struct host_cmd_ds_802_11_scan_ext`.\n\nWith this, fix the following warning:\n\nelo 16 17:51:58 surfacebook kernel: ------------[ cut here ]------------\nelo 16 17:51:58 surfacebook kernel: memcpy: detected field-spanning write (size 243) of single field \"ext_scan->tlv_buffer\" at drivers\/net\/wireless\/marvell\/mwifiex\/scan.c:2239 (size 1)\nelo 16 17:51:58 surfacebook kernel: WARNING: CPU: 0 PID: 498 at drivers\/net\/wireless\/marvell\/mwifiex\/scan.c:2239 mwifiex_cmd_802_11_scan_ext+0x83\/0x90 [mwifiex]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17199b69a84798efffc475040fbef44374ef1de1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1756918f51e9ab247a0f4782cc28853c2bb457c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/498365e52bebcbc36a93279fe7e9d6aec8479cee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71267bd4e8c752d7af6c6b96bb83984a6a95273d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3a12c30f9510f3753286fadbc6cdb7dad78c1d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e59bdb1ba594104cd0ee0af3ee9e4435d842a8fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fef7b51f22cf2049b0ca6740adeb0ba6f2e671dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50009","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.437","lastModified":"2024-10-21T19:15:04.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: amd-pstate: add check for cpufreq_cpu_get's return value\n\ncpufreq_cpu_get may return NULL. To avoid NULL-dereference check it\nand return in case of error.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5493f9714e4cdaf0ee7cec15899a231400cb1a9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f250d44b8191d612355dd97b89b37bbc1b5d2cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50010","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.523","lastModified":"2024-10-21T19:15:04.523","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nexec: don't WARN for racy path_noexec check\n\nBoth i_mode and noexec checks wrapped in WARN_ON stem from an artifact\nof the previous implementation. They used to legitimately check for the\ncondition, but that got moved up in two commits:\n633fb6ac3980 (\"exec: move S_ISREG() check earlier\")\n0fd338b2d2cd (\"exec: move path_noexec() check earlier\")\n\nInstead of being removed said checks are WARN_ON'ed instead, which\nhas some debug value.\n\nHowever, the spurious path_noexec check is racy, resulting in\nunwarranted warnings should someone race with setting the noexec flag.\n\nOne can note there is more to perm-checking whether execve is allowed\nand none of the conditions are guaranteed to still hold after they were\ntested for.\n\nAdditionally this does not validate whether the code path did any perm\nchecking to begin with -- it will pass if the inode happens to be\nregular.\n\nKeep the redundant path_noexec() check even though it's mindless\nnonsense checking for guarantee that isn't given so drop the WARN.\n\nReword the commentary and do small tidy ups while here.\n\n[brauner: keep redundant path_noexec() check]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d196e7589cefe207d5d41f37a0a28a1fdeeb7c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d62ba2a5536df83473a2ac15ab302258e3845251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50011","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.613","lastModified":"2024-10-21T19:15:04.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: soc-acpi-intel-rpl-match: add missing empty item\n\nThere is no links_num in struct snd_soc_acpi_mach {}, and we test\n!link->num_adr as a condition to end the loop in hda_sdw_machine_select().\nSo an empty item in struct snd_soc_acpi_link_adr array is required."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5afc29ba44fdd1bcbad4e07246c395d946301580","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa3109ee91fe09e696274e6ac44813df8d13678f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50012","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.683","lastModified":"2024-10-21T19:15:04.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: Avoid a bad reference count on CPU node\n\nIn the parse_perf_domain function, if the call to\nof_parse_phandle_with_args returns an error, then the reference to the\nCPU device node that was acquired at the start of the function would not\nbe properly decremented.\n\nAddress this by declaring the variable with the __free(device_node)\ncleanup attribute."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f41f383b5a61a2bf6429a449ebba7fb08179d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47cb1d9278f179df8250304ec41009e3e836a926","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77f88b17387a017416babf1e6488fa17682287e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0f02536fffbbec71aced36d52a765f8c4493dc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50013","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.767","lastModified":"2024-10-21T19:15:04.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: fix memory leak in exfat_load_bitmap()\n\nIf the first directory entry in the root directory is not a bitmap\ndirectory entry, 'bh' will not be released and reassigned, which\nwill cause a memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e1813e52f86eb8db0c6c9570251f2fcbc571f5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89081e8407e637463db5880d168e3652fb9f4330","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf0b3b35259475d1fe377bcaa565488e26684f7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2b537b3e533f28e0d97293fe9293161fe8cd137","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dca359db1eb37f334267ebd7e3cab9a66d191d5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf704c2ce3b73f38d2dd8cf1bb0f7ec038bdf63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f692160d3e1e5450605071b8df8f7d08d9b09a83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50014","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.830","lastModified":"2024-10-21T19:15:04.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix access to uninitialised lock in fc replay path\n\nThe following kernel trace can be triggered with fstest generic\/629 when\nexecuted against a filesystem with fast-commit feature enabled:\n\nINFO: trying to register non-static key.\nThe code is fine but needs lockdep annotation, or maybe\nyou didn't initialize this object before use?\nturning off the locking correctness validator.\nCPU: 0 PID: 866 Comm: mount Not tainted 6.10.0+ #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x66\/0x90\n register_lock_class+0x759\/0x7d0\n __lock_acquire+0x85\/0x2630\n ? __find_get_block+0xb4\/0x380\n lock_acquire+0xd1\/0x2d0\n ? __ext4_journal_get_write_access+0xd5\/0x160\n _raw_spin_lock+0x33\/0x40\n ? __ext4_journal_get_write_access+0xd5\/0x160\n __ext4_journal_get_write_access+0xd5\/0x160\n ext4_reserve_inode_write+0x61\/0xb0\n __ext4_mark_inode_dirty+0x79\/0x270\n ? ext4_ext_replay_set_iblocks+0x2f8\/0x450\n ext4_ext_replay_set_iblocks+0x330\/0x450\n ext4_fc_replay+0x14c8\/0x1540\n ? jread+0x88\/0x2e0\n ? rcu_is_watching+0x11\/0x40\n do_one_pass+0x447\/0xd00\n jbd2_journal_recover+0x139\/0x1b0\n jbd2_journal_load+0x96\/0x390\n ext4_load_and_init_journal+0x253\/0xd40\n ext4_fill_super+0x2cc6\/0x3180\n...\n\nIn the replay path there's an attempt to lock sbi->s_bdev_wb_lock in\nfunction ext4_check_bdev_write_error().  Unfortunately, at this point this\nspinlock has not been initialized yet.  Moving it's initialization to an\nearlier point in __ext4_fill_super() fixes this splat."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23dfdb56581ad92a9967bcd720c8c23356af74c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b002031d585a14eed511117dda8c6452a804d508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d157fc20ca5239fd56965a5a8aa1a0e25919891a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50015","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.890","lastModified":"2024-10-21T19:15:04.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: dax: fix overflowing extents beyond inode size when partially writing\n\nThe dax_iomap_rw() does two things in each iteration: map written blocks\nand copy user data to blocks. If the process is killed by user(See signal\nhandling in dax_iomap_iter()), the copied data will be returned and added\non inode size, which means that the length of written extents may exceed\nthe inode size, then fsck will fail. An example is given as:\n\ndd if=\/dev\/urandom of=file bs=4M count=1\n dax_iomap_rw\n  iomap_iter \/\/ round 1\n   ext4_iomap_begin\n    ext4_iomap_alloc \/\/ allocate 0~2M extents(written flag)\n  dax_iomap_iter \/\/ copy 2M data\n  iomap_iter \/\/ round 2\n   iomap_iter_advance\n    iter->pos += iter->processed \/\/ iter->pos = 2M\n   ext4_iomap_begin\n    ext4_iomap_alloc \/\/ allocate 2~4M extents(written flag)\n  dax_iomap_iter\n   fatal_signal_pending\n  done = iter->pos - iocb->ki_pos \/\/ done = 2M\n ext4_handle_inode_extension\n  ext4_update_inode_size \/\/ inode size = 2M\n\nfsck reports: Inode 13, i_size is 2097152, should be 4194304.  Fix?\n\nFix the problem by truncating extents if the written length is smaller\nthan expected."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5efccdee4a7d507a483f20f880b809cc4eaef14d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c30a9a8610c314554997f86370140746aa35661","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9f331f51515bdb3ebc8d0963131af367ef468f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abfaa876b948baaea4d14f21a1963789845c8b4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dda898d7ffe85931f9cca6d702a51f33717c501e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec0dd451e236c46e4858d53e9e82bae7797a7af5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8a7c342326f6ad1dfdb30a18dd013c70f5e9669","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50016","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:04.970","lastModified":"2024-10-21T19:15:04.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Avoid overflow assignment in link_dp_cts\n\nsampling_rate is an uint8_t but is assigned an unsigned int, and thus it\ncan overflow. As a result, sampling_rate is changed to uint32_t.\n\nSimilarly, LINK_QUAL_PATTERN_SET has a size of 2 bits, and it should\nonly be assigned to a value less or equal than 4.\n\nThis fixes 2 INTEGER_OVERFLOW issues reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26ced9d86240868f5b41708ceee02e6ec2924498","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1495acc6234fa79b775599d3f49009afd53299f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a15268787b79fd183dd526cc16bec9af4f4e49a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adeed800bc30ef718478b28c08f79231e5980e3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50017","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:05.043","lastModified":"2024-10-21T19:15:05.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/mm\/ident_map: Use gbpages only where full GB page should be mapped.\n\nWhen ident_pud_init() uses only GB pages to create identity maps, large\nranges of addresses not actually requested can be included in the resulting\ntable; a 4K request will map a full GB.  This can include a lot of extra\naddress space past that requested, including areas marked reserved by the\nBIOS.  That allows processor speculation into reserved regions, that on UV\nsystems can cause system halts.\n\nOnly use GB pages when map creation requests include the full GB page of\nspace.  Fall back to using smaller 2M pages when only portions of a GB page\nare included in the request.\n\nNo attempt is made to coalesce mapping requests. If a request requires a\nmap entry at the 2M (pmd) level, subsequent mapping requests within the\nsame 1G region will also be at the pmd level, even if adjacent or\noverlapping such requests could have been combined to map a full GB page.\nExisting usage starts with larger regions and then adds smaller regions, so\nthis should not have any great consequence."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a23823098ab2c277c14fc110b97d8d5c83597195","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc31744a294584a36bf764a0ffa3255a8e69f036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d80a99892f7a992d103138fa4636b2c33abd6740","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50018","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T19:15:05.123","lastModified":"2024-10-21T19:15:05.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: napi: Prevent overflow of napi_defer_hard_irqs\n\nIn commit 6f8b12d661d0 (\"net: napi: add hard irqs deferral feature\")\nnapi_defer_irqs was added to net_device and napi_defer_irqs_count was\nadded to napi_struct, both as type int.\n\nThis value never goes below zero, so there is not reason for it to be a\nsigned int. Change the type for both from int to u32, and add an\noverflow check to sysfs to limit the value to S32_MAX.\n\nThe limit of S32_MAX was chosen because the practical limit before this\npatch was S32_MAX (anything larger was an overflow) and thus there are\nno behavioral changes introduced. If the extra bit is needed in the\nfuture, the limit can be raised.\n\nBefore this patch:\n\n$ sudo bash -c 'echo 2147483649 > \/sys\/class\/net\/eth4\/napi_defer_hard_irqs'\n$ cat \/sys\/class\/net\/eth4\/napi_defer_hard_irqs\n-2147483647\n\nAfter this patch:\n\n$ sudo bash -c 'echo 2147483649 > \/sys\/class\/net\/eth4\/napi_defer_hard_irqs'\nbash: line 0: echo: write error: Numerical result out of range\n\nSimilarly, \/sys\/class\/net\/XXXXX\/tx_queue_len is defined as unsigned:\n\ninclude\/linux\/netdevice.h:      unsigned int            tx_queue_len;\n\nAnd has an overflow check:\n\ndev_change_tx_queue_len(..., unsigned long new_len):\n\n  if (new_len != (unsigned int)new_len)\n          return -ERANGE;"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08062af0a52107a243f7608fd972edb54ca5b7f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e753b743d3b38a3e10be666c32c5434423d0093","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d694ad8b7e5004df86ecd415cb2320d543723672","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48946","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.020","lastModified":"2024-10-21T20:15:06.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix preallocation discarding at indirect extent boundary\n\nWhen preallocation extent is the first one in the extent block, the\ncode would corrupt extent tree header instead. Fix the problem and use\nudf_delete_aext() for deleting extent to avoid some code duplication."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12a88f572d6d94b5c0b72e2d1782cc2e96ac06cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a075f4a549481ce6e8518d8379f193ccec6b746","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d835efd561dfb9bf5409f11f4ecd428d5d29226","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63dbbd8f1499b0a161e701a04aa50148d60bd1f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72f651c96c8aadf087fd782d551bf7db648a8c2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7665857f88557c372da35534165721156756f77f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae56d9a017724f130cf1a263dd82a78d2a6e3852","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8b6fa4511a7900db9fb0353b630d4d2ed1ba99c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfe4c1b25dd6d2f056afc00b7c98bcb3dd0b1fc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48947","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.150","lastModified":"2024-10-21T20:15:06.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix u8 overflow\n\nBy keep sending L2CAP_CONF_REQ packets, chan->num_conf_rsp increases\nmultiple times and eventually it will wrap around the maximum number\n(i.e., 255).\nThis patch prevents this by adding a boundary check with\nL2CAP_MAX_CONF_RSP\n\nBtmon log:\nBluetooth monitor ver 5.64\n= Note: Linux version 6.1.0-rc2 (x86_64)                               0.264594\n= Note: Bluetooth subsystem version 2.22                               0.264636\n@ MGMT Open: btmon (privileged) version 1.22                  {0x0001} 0.272191\n= New Index: 00:00:00:00:00:00 (Primary,Virtual,hci0)          [hci0] 13.877604\n@ RAW Open: 9496 (privileged) version 2.22                   {0x0002} 13.890741\n= Open Index: 00:00:00:00:00:00                                [hci0] 13.900426\n(...)\n> ACL Data RX: Handle 200 flags 0x00 dlen 1033             #32 [hci0] 14.273106\n        invalid packet size (12 != 1033)\n        08 00 01 00 02 01 04 00 01 10 ff ff              ............\n> ACL Data RX: Handle 200 flags 0x00 dlen 1547             #33 [hci0] 14.273561\n        invalid packet size (14 != 1547)\n        0a 00 01 00 04 01 06 00 40 00 00 00 00 00        ........@.....\n> ACL Data RX: Handle 200 flags 0x00 dlen 2061             #34 [hci0] 14.274390\n        invalid packet size (16 != 2061)\n        0c 00 01 00 04 01 08 00 40 00 00 00 00 00 00 04  ........@.......\n> ACL Data RX: Handle 200 flags 0x00 dlen 2061             #35 [hci0] 14.274932\n        invalid packet size (16 != 2061)\n        0c 00 01 00 04 01 08 00 40 00 00 00 07 00 03 00  ........@.......\n= bluetoothd: Bluetooth daemon 5.43                                   14.401828\n> ACL Data RX: Handle 200 flags 0x00 dlen 1033             #36 [hci0] 14.275753\n        invalid packet size (12 != 1033)\n        08 00 01 00 04 01 04 00 40 00 00 00              ........@..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19a78143961a197de8502f4f29c453b913dc3c29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d5867819ab7c744852b45509e8469839c07e0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5550bbf709c323194881737fd290c4bada9e6ead","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f1847a361c7b4bf7d74c06ecb6968455082c1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fdc79b571434af7bc742da40a3405f038b637a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad528fde0702903208d0a79d88d5a42ae3fc235b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcd70260ef56e0aee8a4fc6cd214a419900b0765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3fe6817156a2ad4b06f01afab04638a34d7c9a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48948","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.230","lastModified":"2024-10-21T20:15:06.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: uvc: Prevent buffer overflow in setup handler\n\nSetup function uvc_function_setup permits control transfer\nrequests with up to 64 bytes of payload (UVC_MAX_REQUEST_SIZE),\ndata stage handler for OUT transfer uses memcpy to copy req->actual\nbytes to uvc_event->data.data array of size 60. This may result\nin an overflow of 4 bytes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06fd17ee92c8f1704c7e54ec0fd50ae0542a49a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4972e3528b968665b596b5434764ff8fd9446d35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c92670b16727365699fe4b19ed32013bab2c107","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b41a35b41f77821db24f2d8f66794b390a585c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b1f773277a72f9756d47a41b94e43506cce1954","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8fb1cba934ea122b50f13a4f9d6fc4fdc43d2be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc8380fe5768c564f921f7b4eaba932e330b9e4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c79538f32df12887f110dcd6b9c825b482905f24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1a92bb8d697f170d93fe922da763d7d156b8841","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48949","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.337","lastModified":"2024-10-21T20:15:06.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Initialize mailbox message for VF reset\n\nWhen a MAC address is not assigned to the VF, that portion of the message\nsent to the VF is not set. The memory, however, is allocated from the\nstack meaning that information may be leaked to the VM. Initialize the\nmessage buffer to 0 so that no information is passed to the VM in this\ncase."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/367e1e3399dbc56fc669740c4ab60e35da632b0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51fd5ede7ed42f272682a0c33d6f0767b3484a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6629659af3f5c6a91e3914ea62554c975ab77f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c383c7c35c7bc15e07a04eefa060a8a80cbeae29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c581439a977545d61849a72e8ed631cfc8a2a3c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de5dc44370fbd6b46bd7f1a1e00369be54a041c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1d739dd1f362aec081278ff92f943c31eb177a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2479c3daaabccbac6c343a737615d0c595c6dc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48950","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.440","lastModified":"2024-10-21T20:15:06.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix perf_pending_task() UaF\n\nPer syzbot it is possible for perf_pending_task() to run after the\nevent is free()'d. There are two related but distinct cases:\n\n - the task_work was already queued before destroying the event;\n - destroying the event itself queues the task_work.\n\nThe first cannot be solved using task_work_cancel() since\nperf_release() itself might be called from a task_work (____fput),\nwhich means the current->task_works list is already empty and\ntask_work_cancel() won't be able to find the perf_pending_task()\nentry.\n\nThe simplest alternative is extending the perf_event lifetime to cover\nthe task_work.\n\nThe second is just silly, queueing a task_work while you know the\nevent is going away makes no sense and is easily avoided by\nre-arranging how the event is marked STATE_DEAD and ensuring it goes\nthrough STATE_OFF on the way down."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/517e6a301f34613bff24a8e35b5455884f2d83d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78e1317a174edbfd1182599bf76c092a2877672c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bffa95ac19ff27c8261904f89d36c7fcf215d59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48951","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.530","lastModified":"2024-10-21T20:15:06.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()\n\nThe bounds checks in snd_soc_put_volsw_sx() are only being applied to the\nfirst channel, meaning it is possible to write out of bounds values to the\nsecond channel in stereo controls. Add appropriate checks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1798b62d642e7b3d4ea3403914c3caf4e438465d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18a168d85eadcfd45f015b5ecd2a97801b959e43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50b5f6d4d9d2d69a7498c44fd8b26e13d73d3d98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56288987843c3cb343e81e5fa51549cbaf541bd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9796d07c753164b7e6b0d7ef23fb4482840a9ef8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97eea946b93961fffd29448dcda7398d0d51c4b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf1c225f1927891ae388562b78ced7840c3723b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf611d786796ec33da09d8c83d7d7f4e557b27de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48952","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.617","lastModified":"2024-10-21T20:15:06.617","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: mt7621: Add sentinel to quirks table\n\nCurrent driver is missing a sentinel in the struct soc_device_attribute\narray, which causes an oops when assessed by the\nsoc_device_match(mt7621_pcie_quirks_match) call.\n\nThis was only exposed once the CONFIG_SOC_MT7621 mt7621 soc_dev_attr\nwas fixed to register the SOC as a device, in:\n\ncommit 7c18b64bba3b (\"mips: ralink: mt7621: do not use kzalloc too early\")\n\nFix it by adding the required sentinel."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19098934f910b4d47cb30251dd39ffa57bef9523","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e9c395ef2d52975b2c2894d2da09d6db2958bc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4997bae1b5b012c8a6e2643e26578a7bc2cae36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb7323ece786f243f6d6ccf2e5b2b27b736bdc04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.700","lastModified":"2024-10-21T20:15:06.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: cmos: Fix event handler registration ordering issue\n\nBecause acpi_install_fixed_event_handler() enables the event\nautomatically on success, it is incorrect to call it before the\nhandler routine passed to it is ready to handle events.\n\nUnfortunately, the rtc-cmos driver does exactly the incorrect thing\nby calling cmos_wake_setup(), which passes rtc_handler() to\nacpi_install_fixed_event_handler(), before cmos_do_probe(), because\nrtc_handler() uses dev_get_drvdata() to get to the cmos object\npointer and the driver data pointer is only populated in\ncmos_do_probe().\n\nThis leads to a NULL pointer dereference in rtc_handler() on boot\nif the RTC fixed event happens to be active at the init time.\n\nTo address this issue, change the initialization ordering of the\ndriver so that cmos_wake_setup() is always called after a successful\ncmos_do_probe() call.\n\nWhile at it, change cmos_pnp_probe() to call cmos_do_probe() after\nthe initial if () statement used for computing the IRQ argument to\nbe passed to cmos_do_probe() which is cleaner than calling it in\neach branch of that if () (local variable \"irq\" can be of type int,\nbecause it is passed to that function as an argument of type int).\n\nNote that commit 6492fed7d8c9 (\"rtc: rtc-cmos: Do not check\nACPI_FADT_LOW_POWER_S0\") caused this issue to affect a larger number\nof systems, because previously it only affected systems with\nACPI_FADT_LOW_POWER_S0 set, but it is present regardless of that\ncommit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bcfccb48696aba475f046c2021f0733659ce0ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ba745fce13d19775100eece30b0bfb8b8b10ea6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4919d3eb2ec0ee364f7e3cf2d99646c1b224fae8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60c6e563a843032cf6ff84b2fb732cd8754fc10d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48954","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.783","lastModified":"2024-10-21T20:15:06.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/qeth: fix use-after-free in hsci\n\nKASAN found that addr was dereferenced after br2dev_event_work was freed.\n\n==================================================================\nBUG: KASAN: use-after-free in qeth_l2_br2dev_worker+0x5ba\/0x6b0\nRead of size 1 at addr 00000000fdcea440 by task kworker\/u760:4\/540\nCPU: 17 PID: 540 Comm: kworker\/u760:4 Tainted: G            E      6.1.0-20221128.rc7.git1.5aa3bed4ce83.300.fc36.s390x+kasan #1\nHardware name: IBM 8561 T01 703 (LPAR)\nWorkqueue: 0.0.8000_event qeth_l2_br2dev_worker\nCall Trace:\n [<000000016944d4ce>] dump_stack_lvl+0xc6\/0xf8\n [<000000016942cd9c>] print_address_description.constprop.0+0x34\/0x2a0\n [<000000016942d118>] print_report+0x110\/0x1f8\n [<0000000167a7bd04>] kasan_report+0xfc\/0x128\n [<000000016938d79a>] qeth_l2_br2dev_worker+0x5ba\/0x6b0\n [<00000001673edd1e>] process_one_work+0x76e\/0x1128\n [<00000001673ee85c>] worker_thread+0x184\/0x1098\n [<000000016740718a>] kthread+0x26a\/0x310\n [<00000001672c606a>] __ret_from_fork+0x8a\/0xe8\n [<00000001694711da>] ret_from_fork+0xa\/0x40\nAllocated by task 108338:\n kasan_save_stack+0x40\/0x68\n kasan_set_track+0x36\/0x48\n __kasan_kmalloc+0xa0\/0xc0\n qeth_l2_switchdev_event+0x25a\/0x738\n atomic_notifier_call_chain+0x9c\/0xf8\n br_switchdev_fdb_notify+0xf4\/0x110\n fdb_notify+0x122\/0x180\n fdb_add_entry.constprop.0.isra.0+0x312\/0x558\n br_fdb_add+0x59e\/0x858\n rtnl_fdb_add+0x58a\/0x928\n rtnetlink_rcv_msg+0x5f8\/0x8d8\n netlink_rcv_skb+0x1f2\/0x408\n netlink_unicast+0x570\/0x790\n netlink_sendmsg+0x752\/0xbe0\n sock_sendmsg+0xca\/0x110\n ____sys_sendmsg+0x510\/0x6a8\n ___sys_sendmsg+0x12a\/0x180\n __sys_sendmsg+0xe6\/0x168\n __do_sys_socketcall+0x3c8\/0x468\n do_syscall+0x22c\/0x328\n __do_syscall+0x94\/0xf0\n system_call+0x82\/0xb0\nFreed by task 540:\n kasan_save_stack+0x40\/0x68\n kasan_set_track+0x36\/0x48\n kasan_save_free_info+0x4c\/0x68\n ____kasan_slab_free+0x14e\/0x1a8\n __kasan_slab_free+0x24\/0x30\n __kmem_cache_free+0x168\/0x338\n qeth_l2_br2dev_worker+0x154\/0x6b0\n process_one_work+0x76e\/0x1128\n worker_thread+0x184\/0x1098\n kthread+0x26a\/0x310\n __ret_from_fork+0x8a\/0xe8\n ret_from_fork+0xa\/0x40\nLast potentially related work creation:\n kasan_save_stack+0x40\/0x68\n __kasan_record_aux_stack+0xbe\/0xd0\n insert_work+0x56\/0x2e8\n __queue_work+0x4ce\/0xd10\n queue_work_on+0xf4\/0x100\n qeth_l2_switchdev_event+0x520\/0x738\n atomic_notifier_call_chain+0x9c\/0xf8\n br_switchdev_fdb_notify+0xf4\/0x110\n fdb_notify+0x122\/0x180\n fdb_add_entry.constprop.0.isra.0+0x312\/0x558\n br_fdb_add+0x59e\/0x858\n rtnl_fdb_add+0x58a\/0x928\n rtnetlink_rcv_msg+0x5f8\/0x8d8\n netlink_rcv_skb+0x1f2\/0x408\n netlink_unicast+0x570\/0x790\n netlink_sendmsg+0x752\/0xbe0\n sock_sendmsg+0xca\/0x110\n ____sys_sendmsg+0x510\/0x6a8\n ___sys_sendmsg+0x12a\/0x180\n __sys_sendmsg+0xe6\/0x168\n __do_sys_socketcall+0x3c8\/0x468\n do_syscall+0x22c\/0x328\n __do_syscall+0x94\/0xf0\n system_call+0x82\/0xb0\nSecond to last potentially related work creation:\n kasan_save_stack+0x40\/0x68\n __kasan_record_aux_stack+0xbe\/0xd0\n kvfree_call_rcu+0xb2\/0x760\n kernfs_unlink_open_file+0x348\/0x430\n kernfs_fop_release+0xc2\/0x320\n __fput+0x1ae\/0x768\n task_work_run+0x1bc\/0x298\n exit_to_user_mode_prepare+0x1a0\/0x1a8\n __do_syscall+0x94\/0xf0\n system_call+0x82\/0xb0\nThe buggy address belongs to the object at 00000000fdcea400\n which belongs to the cache kmalloc-96 of size 96\nThe buggy address is located 64 bytes inside of\n 96-byte region [00000000fdcea400, 00000000fdcea460)\nThe buggy address belongs to the physical page:\npage:000000005a9c26e8 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0xfdcea\nflags: 0x3ffff00000000200(slab|node=0|zone=1|lastcpupid=0x1ffff)\nraw: 3ffff00000000200 0000000000000000 0000000100000122 000000008008cc00\nraw: 0000000000000000 0020004100000000 ffffffff00000001 0000000000000000\npage dumped because: kasan: bad access detected\nMemory state around the buggy address:\n 00000000fdcea300: fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n 00000000fdcea380: fb fb fb fb fb fb f\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bde0dfc7c4569406a6ddeec363d04a1df7b3073f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db6343a5b0d9661f2dd76f653c6d274d38234d2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebaaadc332cd21e9df4dcf9ce12552d9354bbbe4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48955","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.870","lastModified":"2024-10-21T20:15:06.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: thunderbolt: fix memory leak in tbnet_open()\n\nWhen tb_ring_alloc_rx() failed in tbnet_open(), ida that allocated in\ntb_xdomain_alloc_out_hopid() is not released. Add\ntb_xdomain_release_out_hopid() to the error path to release ida."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b9274dbe399952a8175db2e1ee148b7c9ba2b538","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed14e5903638f6eb868e3e2b4e610985e6a6c876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed6e955f3b7e0e622c080f4bcb5427a5e1af4c2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48956","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:06.973","lastModified":"2024-10-21T20:15:06.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: avoid use-after-free in ip6_fragment()\n\nBlamed commit claimed rcu_read_lock() was held by ip6_fragment() callers.\n\nIt seems to not be always true, at least for UDP stack.\n\nsyzbot reported:\n\nBUG: KASAN: use-after-free in ip6_dst_idev include\/net\/ip6_fib.h:245 [inline]\nBUG: KASAN: use-after-free in ip6_fragment+0x2724\/0x2770 net\/ipv6\/ip6_output.c:951\nRead of size 8 at addr ffff88801d403e80 by task syz-executor.3\/7618\n\nCPU: 1 PID: 7618 Comm: syz-executor.3 Not tainted 6.1.0-rc6-syzkaller-00012-g4312098baf37 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd1\/0x138 lib\/dump_stack.c:106\n print_address_description mm\/kasan\/report.c:284 [inline]\n print_report+0x15e\/0x45d mm\/kasan\/report.c:395\n kasan_report+0xbf\/0x1f0 mm\/kasan\/report.c:495\n ip6_dst_idev include\/net\/ip6_fib.h:245 [inline]\n ip6_fragment+0x2724\/0x2770 net\/ipv6\/ip6_output.c:951\n __ip6_finish_output net\/ipv6\/ip6_output.c:193 [inline]\n ip6_finish_output+0x9a3\/0x1170 net\/ipv6\/ip6_output.c:206\n NF_HOOK_COND include\/linux\/netfilter.h:291 [inline]\n ip6_output+0x1f1\/0x540 net\/ipv6\/ip6_output.c:227\n dst_output include\/net\/dst.h:445 [inline]\n ip6_local_out+0xb3\/0x1a0 net\/ipv6\/output_core.c:161\n ip6_send_skb+0xbb\/0x340 net\/ipv6\/ip6_output.c:1966\n udp_v6_send_skb+0x82a\/0x18a0 net\/ipv6\/udp.c:1286\n udp_v6_push_pending_frames+0x140\/0x200 net\/ipv6\/udp.c:1313\n udpv6_sendmsg+0x18da\/0x2c80 net\/ipv6\/udp.c:1606\n inet6_sendmsg+0x9d\/0xe0 net\/ipv6\/af_inet6.c:665\n sock_sendmsg_nosec net\/socket.c:714 [inline]\n sock_sendmsg+0xd3\/0x120 net\/socket.c:734\n sock_write_iter+0x295\/0x3d0 net\/socket.c:1108\n call_write_iter include\/linux\/fs.h:2191 [inline]\n new_sync_write fs\/read_write.c:491 [inline]\n vfs_write+0x9ed\/0xdd0 fs\/read_write.c:584\n ksys_write+0x1ec\/0x250 fs\/read_write.c:637\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x39\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x7fde3588c0d9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fde365b6168 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 00007fde359ac050 RCX: 00007fde3588c0d9\nRDX: 000000000000ffdc RSI: 00000000200000c0 RDI: 000000000000000a\nRBP: 00007fde358e7ae9 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007fde35acfb1f R14: 00007fde365b6300 R15: 0000000000022000\n <\/TASK>\n\nAllocated by task 7618:\n kasan_save_stack+0x22\/0x40 mm\/kasan\/common.c:45\n kasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\n __kasan_slab_alloc+0x82\/0x90 mm\/kasan\/common.c:325\n kasan_slab_alloc include\/linux\/kasan.h:201 [inline]\n slab_post_alloc_hook mm\/slab.h:737 [inline]\n slab_alloc_node mm\/slub.c:3398 [inline]\n slab_alloc mm\/slub.c:3406 [inline]\n __kmem_cache_alloc_lru mm\/slub.c:3413 [inline]\n kmem_cache_alloc+0x2b4\/0x3d0 mm\/slub.c:3422\n dst_alloc+0x14a\/0x1f0 net\/core\/dst.c:92\n ip6_dst_alloc+0x32\/0xa0 net\/ipv6\/route.c:344\n ip6_rt_pcpu_alloc net\/ipv6\/route.c:1369 [inline]\n rt6_make_pcpu_route net\/ipv6\/route.c:1417 [inline]\n ip6_pol_route+0x901\/0x1190 net\/ipv6\/route.c:2254\n pol_lookup_func include\/net\/ip6_fib.h:582 [inline]\n fib6_rule_lookup+0x52e\/0x6f0 net\/ipv6\/fib6_rules.c:121\n ip6_route_output_flags_noref+0x2e6\/0x380 net\/ipv6\/route.c:2625\n ip6_route_output_flags+0x76\/0x320 net\/ipv6\/route.c:2638\n ip6_route_output include\/net\/ip6_route.h:98 [inline]\n ip6_dst_lookup_tail+0x5ab\/0x1620 net\/ipv6\/ip6_output.c:1092\n ip6_dst_lookup_flow+0x90\/0x1d0 net\/ipv6\/ip6_output.c:1222\n ip6_sk_dst_lookup_flow+0x553\/0x980 net\/ipv6\/ip6_output.c:1260\n udpv6_sendmsg+0x151d\/0x2c80 net\/ipv6\/udp.c:1554\n inet6_sendmsg+0x9d\/0xe0 net\/ipv6\/af_inet6.c:665\n sock_sendmsg_nosec n\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b6d3be3661bff2746cab26147bd629aa034e094","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7390c70bd431cbfa6951477e2c80a301643e284b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e0dcd5f3ade221a6126278aca60c8ab4cc3bce9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/803e84867de59a1e5d126666d25eb4860cfd2ebe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8208d7e56b1e579320b9ff3712739ad2e63e1f86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b1a468a455d8319041528778d0e684a4c062792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3d7ff8c04a83279fb7641fc4d5aa82a602df7c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48957","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:07.090","lastModified":"2024-10-21T20:15:07.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndpaa2-switch: Fix memory leak in dpaa2_switch_acl_entry_add() and dpaa2_switch_acl_entry_remove()\n\nThe cmd_buff needs to be freed when error happened in\ndpaa2_switch_acl_entry_add() and dpaa2_switch_acl_entry_remove()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4fad22a1281c500f15b172c9d261eff347ca634b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54d830e24247fa8361b016dd2069362866f45cb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/785ee7a82297e1512d9061aae91699212ed65796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48958","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:07.270","lastModified":"2024-10-21T20:15:07.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nethernet: aeroflex: fix potential skb leak in greth_init_rings()\n\nThe greth_init_rings() function won't free the newly allocated skb when\ndma_mapping_error() returns error, so add dev_kfree_skb() to fix it.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/063a932b64db3317ec020c94466fe52923a15f60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/223654e2e2c8d05347cd8e300f8d1ec6023103dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87277bdf2c370ab2d07cfe77dfa9b37f82bbe1e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99669d94ce145389f1d6f197e6e18ed50d43fb76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfaa8f6c5b84b295dd73b0138b57c5555ca12b1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7adcbd0fd3fde1b19150c3e955fb4a30c5bd9b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb1e293f858e5e1152b8791047ed4bdaaf392189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd62867a6383f78f75f07039394aac25924a3307","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48959","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:07.460","lastModified":"2024-10-21T20:15:07.460","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: sja1105: fix memory leak in sja1105_setup_devlink_regions()\n\nWhen dsa_devlink_region_create failed in sja1105_setup_devlink_regions(),\npriv->regions is not released."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4be43e46c3f945fc7dd9e23c73a7a66927a3b814","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78a9ea43fc1a7c06a420b132d2d47cbf4344a5df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5e59629654b8826f0167dae480d0e3fa0f8f038","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3b5dda26cd0535aac09ed09c5d83f19b979ec9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48960","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:07.663","lastModified":"2024-10-21T20:15:07.663","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hisilicon: Fix potential use-after-free in hix5hd2_rx()\n\nThe skb is delivered to napi_gro_receive() which may free it, after\ncalling this, dereferencing skb may trigger use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/179499e7a240b2ef590f05eb379c810c26bbc8a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b6360a093ab8969c91a30bb58b753282e2ced4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a4eddd1cb023a71df4152fcc76092953e6fe95a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/433c07a13f59856e4585e89e86b7d4cc59348fab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8067cd244cea2c332f8326842fd10158fa2cb64f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93aaa4bb72e388f6a4887541fd3d18b84f1b5ddc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6307f7a2fc1c5407b6176f2af34a95214a8c262","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8ce0e6f9f88a6bb49d291498377e61ea27a5387","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48961","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:07.887","lastModified":"2024-10-21T20:15:07.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdio: fix unbalanced fwnode reference count in mdio_device_release()\n\nThere is warning report about of_node refcount leak\nwhile probing mdio device:\n\nOF: ERROR: memory leak, expected refcount 1 instead of 2,\nof_node_get()\/of_node_put() unbalanced - destroy cset entry:\nattach overlay node \/spi\/soc@0\/mdio@710700c0\/ethernet@4\n\nIn of_mdiobus_register_device(), we increase fwnode refcount\nby fwnode_handle_get() before associating the of_node with\nmdio device, but it has never been decreased in normal path.\nSince that, in mdio_device_release(), it needs to call\nfwnode_handle_put() in addition instead of calling kfree()\ndirectly.\n\nAfter above, just calling mdio_device_free() in the error handle\npath of of_mdiobus_register_device() is enough to keep the\nrefcount balanced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16854177745a5648f8ec322353b432e18460f43a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5c6de1a6656b8cc6bce7cb3d9874dd7df4968c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb37617687f2bfa5b675df7779f869147c9002bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48962","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.117","lastModified":"2024-10-21T20:15:08.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hisilicon: Fix potential use-after-free in hisi_femac_rx()\n\nThe skb is delivered to napi_gro_receive() which may free it, after\ncalling this, dereferencing skb may trigger use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/196e12671cb629d9f3b77b4d8bec854fc445533a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/296a50aa8b2982117520713edc1375777a9f8506","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3501da8eb6d0f5f114a09ec953c54423f6f35885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4640177049549de1a43e9bc49265f0cdfce08cfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f4798ac9c9e98f41553c4f5e6c832c8860a6942","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8595a2db8eb0ffcbb466eb9f4a7507a5ba06ebb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aceec8ab752428d8e151321479e82cc1a40fee2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e71a46cc8c9ad75f3bb0e4b361e81f79c0214cca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48963","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.273","lastModified":"2024-10-21T20:15:08.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: iosm: fix memory leak in ipc_mux_init()\n\nWhen failed to alloc ipc_mux->ul_adb.pp_qlt in ipc_mux_init(), ipc_mux\nis not released."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23353efc26e98b61b925274ecbb8f0610f69a8aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e21478d0054f63eec7ce833296cf9788764a0ec7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48964","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.377","lastModified":"2024-10-21T20:15:08.377","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nravb: Fix potential use-after-free in ravb_rx_gbeth()\n\nThe skb is delivered to napi_gro_receive() which may free it, after calling this,\ndereferencing skb may trigger use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a5a3e564de6a8db987410c5c2f4748d50ea82b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e63c681494dcc0527c625a0a4f59bf10259f5ee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48965","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.470","lastModified":"2024-10-21T20:15:08.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio\/rockchip: fix refcount leak in rockchip_gpiolib_register()\n\nThe node returned by of_get_parent() with refcount incremented,\nof_node_put() needs be called when finish using it. So add it in the\nend of of_pinctrl_get()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/033c79b7ee8a7bf1c1a13ac3addc91184425cbae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cb8f1a784fd6115be58282fe15105572319d8be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63ff545af73f759d1bd04198af8ed8577fb739fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48966","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.573","lastModified":"2024-10-21T20:15:08.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvneta: Prevent out of bounds read in mvneta_config_rss()\n\nThe pp->indir[0] value comes from the user.  It is passed to:\n\n\tif (cpu_online(pp->rxq_def))\n\ninside the mvneta_percpu_elect() function.  It needs bounds checkeding\nto ensure that it is not beyond the end of the cpu bitmap."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/146ebee8fcdb349d7ec0e49915e6cdafb92544ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ceffb8f410b93553fb16fe7e84aa0d35b3ba79b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47a1a2f6cd5ec3a4f8a2d9bfa1e0605347cdb92c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a142486a0db6b0b85031f22d69acd0cdcf8f72b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ca0a506dddc3e1d636935eef339576b263bf3d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6b30598fec84f8809f5417cde73071ca43e8471","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8b4fc13900b8e8be48debffd0dfd391772501f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eec1fc21edc2bb99c9e66cf66f0b5d4d643fbb50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48967","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.757","lastModified":"2024-10-21T20:15:08.757","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: Bounds check struct nfc_target arrays\n\nWhile running under CONFIG_FORTIFY_SOURCE=y, syzkaller reported:\n\n  memcpy: detected field-spanning write (size 129) of single field \"target->sensf_res\" at net\/nfc\/nci\/ntf.c:260 (size 18)\n\nThis appears to be a legitimate lack of bounds checking in\nnci_add_new_protocol(). Add the missing checks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27eb2d7a1b9987b6d0429b7716b1ff3b82c4ffc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6778434706940b8fad7ef35f410d2b9929f256d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b37f0dc0638d13a006f2f24d2f6ca61e83bc714","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/908b2da426fe9c3ce74cf541ba40e7a4251db191","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cff35329070b96b4484d23f9f48a5ca2c947e750","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbdcfb9f6748218a149f62468d6297ce3f014e9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e329e71013c9b5a4535b099208493c7826ee4a64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f41547546db9af99da2c34e3368664d7a79cefae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48968","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:08.897","lastModified":"2024-10-21T20:15:08.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix potential memory leak in otx2_init_tc()\n\nIn otx2_init_tc(), if rhashtable_init() failed, it does not free\ntc->tc_entries_bitmap which is allocated in otx2_tc_alloc_ent_bitmap()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/db5ec358cf4ef0ab382ee733d05f018e8bef9462","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eefd8953a74822cb72006632b9ee9dd95f92c146","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbf33f5ac76f2cdb47ad9763f620026d5cfa57ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48969","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.037","lastModified":"2024-10-21T20:15:09.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxen-netfront: Fix NULL sring after live migration\n\nA NAPI is setup for each network sring to poll data to kernel\nThe sring with source host is destroyed before live migration and\nnew sring with target host is setup after live migration.\nThe NAPI for the old sring is not deleted until setup new sring\nwith target host after migration. With busy_poll\/busy_read enabled,\nthe NAPI can be polled before got deleted when resume VM.\n\nBUG: unable to handle kernel NULL pointer dereference at\n0000000000000008\nIP: xennet_poll+0xae\/0xd20\nPGD 0 P4D 0\nOops: 0000 [#1] SMP PTI\nCall Trace:\n finish_task_switch+0x71\/0x230\n timerqueue_del+0x1d\/0x40\n hrtimer_try_to_cancel+0xb5\/0x110\n xennet_alloc_rx_buffers+0x2a0\/0x2a0\n napi_busy_loop+0xdb\/0x270\n sock_poll+0x87\/0x90\n do_sys_poll+0x26f\/0x580\n tracing_map_insert+0x1d4\/0x2f0\n event_hist_trigger+0x14a\/0x260\n\n finish_task_switch+0x71\/0x230\n __schedule+0x256\/0x890\n recalc_sigpending+0x1b\/0x50\n xen_sched_clock+0x15\/0x20\n __rb_reserve_next+0x12d\/0x140\n ring_buffer_lock_reserve+0x123\/0x3d0\n event_triggers_call+0x87\/0xb0\n trace_event_buffer_commit+0x1c4\/0x210\n xen_clocksource_get_cycles+0x15\/0x20\n ktime_get_ts64+0x51\/0xf0\n SyS_ppoll+0x160\/0x1a0\n SyS_ppoll+0x160\/0x1a0\n do_syscall_64+0x73\/0x130\n entry_SYSCALL_64_after_hwframe+0x41\/0xa6\n...\nRIP: xennet_poll+0xae\/0xd20 RSP: ffffb4f041933900\nCR2: 0000000000000008\n---[ end trace f8601785b354351c ]---\n\nxen frontend should remove the NAPIs for the old srings before live\nmigration as the bond srings are destroyed\n\nThere is a tiny window between the srings are set to NULL and\nthe NAPIs are disabled, It is safe as the NAPI threads are still\nfrozen at that time"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/99859947517e446058ad7243ee81d2f9801fa3dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d50b7914fae04d840ce36491d22133070b18cca9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6860c889f4ad50b6ab696f5ea154295d72cf27a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6e897d4fe2f89c0bd94600a40bedf5e6e75e050","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed773dd798bf720756d20021b8d8a4a3d7184bda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2dd60fd3fe98bd36a91b0c6e10bfe9d66258f84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48970","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.177","lastModified":"2024-10-21T20:15:09.177","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Get user_ns from in_skb in unix_diag_get_exact().\n\nWei Chen reported a NULL deref in sk_user_ns() [0][1], and Paolo diagnosed\nthe root cause: in unix_diag_get_exact(), the newly allocated skb does not\nhave sk. [2]\n\nWe must get the user_ns from the NETLINK_CB(in_skb).sk and pass it to\nsk_diag_fill().\n\n[0]:\nBUG: kernel NULL pointer dereference, address: 0000000000000270\n#PF: supervisor read access in kernel mode\n#PF: error_code(0x0000) - not-present page\nPGD 12bbce067 P4D 12bbce067 PUD 12bc40067 PMD 0\nOops: 0000 [#1] PREEMPT SMP\nCPU: 0 PID: 27942 Comm: syz-executor.0 Not tainted 6.1.0-rc5-next-20221118 #2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.13.0-48-gd9c812dda519-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:sk_user_ns include\/net\/sock.h:920 [inline]\nRIP: 0010:sk_diag_dump_uid net\/unix\/diag.c:119 [inline]\nRIP: 0010:sk_diag_fill+0x77d\/0x890 net\/unix\/diag.c:170\nCode: 89 ef e8 66 d4 2d fd c7 44 24 40 00 00 00 00 49 8d 7c 24 18 e8\n54 d7 2d fd 49 8b 5c 24 18 48 8d bb 70 02 00 00 e8 43 d7 2d fd <48> 8b\n9b 70 02 00 00 48 8d 7b 10 e8 33 d7 2d fd 48 8b 5b 10 48 8d\nRSP: 0018:ffffc90000d67968 EFLAGS: 00010246\nRAX: ffff88812badaa48 RBX: 0000000000000000 RCX: ffffffff840d481d\nRDX: 0000000000000465 RSI: 0000000000000000 RDI: 0000000000000270\nRBP: ffffc90000d679a8 R08: 0000000000000277 R09: 0000000000000000\nR10: 0001ffffffffffff R11: 0001c90000d679a8 R12: ffff88812ac03800\nR13: ffff88812c87c400 R14: ffff88812ae42210 R15: ffff888103026940\nFS:  00007f08b4e6f700(0000) GS:ffff88813bc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000270 CR3: 000000012c58b000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n unix_diag_get_exact net\/unix\/diag.c:285 [inline]\n unix_diag_handler_dump+0x3f9\/0x500 net\/unix\/diag.c:317\n __sock_diag_cmd net\/core\/sock_diag.c:235 [inline]\n sock_diag_rcv_msg+0x237\/0x250 net\/core\/sock_diag.c:266\n netlink_rcv_skb+0x13e\/0x250 net\/netlink\/af_netlink.c:2564\n sock_diag_rcv+0x24\/0x40 net\/core\/sock_diag.c:277\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1330 [inline]\n netlink_unicast+0x5e9\/0x6b0 net\/netlink\/af_netlink.c:1356\n netlink_sendmsg+0x739\/0x860 net\/netlink\/af_netlink.c:1932\n sock_sendmsg_nosec net\/socket.c:714 [inline]\n sock_sendmsg net\/socket.c:734 [inline]\n ____sys_sendmsg+0x38f\/0x500 net\/socket.c:2476\n ___sys_sendmsg net\/socket.c:2530 [inline]\n __sys_sendmsg+0x197\/0x230 net\/socket.c:2559\n __do_sys_sendmsg net\/socket.c:2568 [inline]\n __se_sys_sendmsg net\/socket.c:2566 [inline]\n __x64_sys_sendmsg+0x42\/0x50 net\/socket.c:2566\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x2b\/0x70 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\nRIP: 0033:0x4697f9\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48\n89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d\n01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f08b4e6ec48 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 000000000077bf80 RCX: 00000000004697f9\nRDX: 0000000000000000 RSI: 00000000200001c0 RDI: 0000000000000003\nRBP: 00000000004d29e9 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000077bf80\nR13: 0000000000000000 R14: 000000000077bf80 R15: 00007ffdb36bc6c0\n <\/TASK>\nModules linked in:\nCR2: 0000000000000270\n\n[1]: https:\/\/lore.kernel.org\/netdev\/CAO4mrfdvyjFpokhNsiwZiP-wpdSD0AStcJwfKcKQdAALQ9_2Qw@mail.gmail.com\/\n[2]: https:\/\/lore.kernel.org\/netdev\/e04315e7c90d9a75613f3993c2baf2d344eef7eb.camel@redhat.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/575a6266f63dbb3b8eb1da03671451f0d81b8034","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c014eb0ed6c8c57f483e94cc6e90f34ce426d91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c1d6f79a2c7b8221dcec27defc6dc461052ead4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3abe42e94900bdd045c472f9c9be620ba5ce553","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c66d78aee55dab72c92020ebfbebc464d4f5dd2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48971","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.260","lastModified":"2024-10-21T20:15:09.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix not cleanup led when bt_init fails\n\nbt_init() calls bt_leds_init() to register led, but if it fails later,\nbt_leds_cleanup() is not called to unregister it.\n\nThis can cause panic if the argument \"bluetooth-power\" in text is freed\nand then another led_trigger_register() tries to access it:\n\nBUG: unable to handle page fault for address: ffffffffc06d3bc0\nRIP: 0010:strcmp+0xc\/0x30\n  Call Trace:\n    <TASK>\n    led_trigger_register+0x10d\/0x4f0\n    led_trigger_register_simple+0x7d\/0x100\n    bt_init+0x39\/0xf7 [bluetooth]\n    do_one_initcall+0xd0\/0x4e0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c6cf0afc3856359e620e96edd952457d258e16c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f3957c7eb4e07df944169a3e50a4d6790e1c744","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ecf7cd6fde5e72c87122084cf00d63e35d8dd9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a66c3a94285552f6a8e45d73b34ebbad11d388b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7b950458156d410509a08c41930b75e72985938","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edf7284a98296369dd0891a0457eec37df244873","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48972","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.343","lastModified":"2024-10-21T20:15:09.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac802154: fix missing INIT_LIST_HEAD in ieee802154_if_add()\n\nKernel fault injection test reports null-ptr-deref as follows:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nRIP: 0010:cfg802154_netdev_notifier_call+0x120\/0x310 include\/linux\/list.h:114\nCall Trace:\n <TASK>\n raw_notifier_call_chain+0x6d\/0xa0 kernel\/notifier.c:87\n call_netdevice_notifiers_info+0x6e\/0xc0 net\/core\/dev.c:1944\n unregister_netdevice_many_notify+0x60d\/0xcb0 net\/core\/dev.c:1982\n unregister_netdevice_queue+0x154\/0x1a0 net\/core\/dev.c:10879\n register_netdevice+0x9a8\/0xb90 net\/core\/dev.c:10083\n ieee802154_if_add+0x6ed\/0x7e0 net\/mac802154\/iface.c:659\n ieee802154_register_hw+0x29c\/0x330 net\/mac802154\/main.c:229\n mcr20a_probe+0xaaa\/0xcb1 drivers\/net\/ieee802154\/mcr20a.c:1316\n\nieee802154_if_add() allocates wpan_dev as netdev's private data, but not\ninit the list in struct wpan_dev. cfg802154_netdev_notifier_call() manage\nthe list when device register\/unregister, and may lead to null-ptr-deref.\n\nUse INIT_LIST_HEAD() on it to initialize it correctly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1831d4540406708e48239cf38fd9c3b7ea98e08f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42c319635c0cf7eb36eccac6cda76532f47b61a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/623918f40fa68e3bb21312a3fafb90f491bf5358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7410f4d1221bb182510b7778ab6eefa8b9b7102d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9980a3ea20de40c83817877106c909cb032692d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a110287ef4a423980309490df632e1c1e73b3dc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3d72d3135d2ef68296c1ee174436efd65386f04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f00c84fb1635c27ba24ec5df65d5bd7d7dc00008","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48973","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.430","lastModified":"2024-10-21T20:15:09.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: amd8111: Fix PCI device reference count leak\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() after the 'out' label. Since pci_dev_put() can handle NULL\ninput parameter, there is no problem for the 'Device not found' branch.\nFor the normal path, add pci_dev_put() in amd_gpio_exit()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4271515f189bd5fe2ec86b4089dab7cb804625d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45fecdb9f658d9c82960c98240bc0770ade19aca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4749c5cc147c9860b96db1e71cc36d1de1bd3f59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48bd5d3801f6b67cc144449d434abbd5043a6d37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee6413d3dd972930af787b2c0c7aaeb379fa521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71d591ef873f9ebb86cd8d053b3caee785b2de6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2bc053ebbba57a06fa655db5ea796de2edce445","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e364ce04d8f840478b09eee57b614de7cf1e743e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48974","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.517","lastModified":"2024-10-21T20:15:09.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: fix using __this_cpu_add in preemptible\n\nCurrently in nf_conntrack_hash_check_insert(), when it fails in\nnf_ct_ext_valid_pre\/post(), NF_CT_STAT_INC() will be called in the\npreemptible context, a call trace can be triggered:\n\n   BUG: using __this_cpu_add() in preemptible [00000000] code: conntrack\/1636\n   caller is nf_conntrack_hash_check_insert+0x45\/0x430 [nf_conntrack]\n   Call Trace:\n    <TASK>\n    dump_stack_lvl+0x33\/0x46\n    check_preemption_disabled+0xc3\/0xf0\n    nf_conntrack_hash_check_insert+0x45\/0x430 [nf_conntrack]\n    ctnetlink_create_conntrack+0x3cd\/0x4e0 [nf_conntrack_netlink]\n    ctnetlink_new_conntrack+0x1c0\/0x450 [nf_conntrack_netlink]\n    nfnetlink_rcv_msg+0x277\/0x2f0 [nfnetlink]\n    netlink_rcv_skb+0x50\/0x100\n    nfnetlink_rcv+0x65\/0x144 [nfnetlink]\n    netlink_unicast+0x1ae\/0x290\n    netlink_sendmsg+0x257\/0x4f0\n    sock_sendmsg+0x5f\/0x70\n\nThis patch is to fix it by changing to use NF_CT_STAT_INC_ATOMIC() for\nnf_ct_ext_valid_pre\/post() check in nf_conntrack_hash_check_insert(),\nas well as nf_ct_ext_valid_post() in __nf_conntrack_confirm().\n\nNote that nf_ct_ext_valid_pre() check in __nf_conntrack_confirm() is\nsafe to use NF_CT_STAT_INC(), as it's under local_bh_disable()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9464d0b68f11a9bc768370c3260ec02b3550447b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9bf1138a5db419db13bd9fcd3a7178d6bb20f7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48975","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.597","lastModified":"2024-10-21T20:15:09.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: fix memory leak in gpiochip_setup_dev()\n\nHere is a backtrace report about memory leak detected in\ngpiochip_setup_dev():\n\nunreferenced object 0xffff88810b406400 (size 512):\n  comm \"python3\", pid 1682, jiffies 4295346908 (age 24.090s)\n  backtrace:\n    kmalloc_trace\n    device_add\t\tdevice_private_init at drivers\/base\/core.c:3361\n\t\t\t(inlined by) device_add at drivers\/base\/core.c:3411\n    cdev_device_add\n    gpiolib_cdev_register\n    gpiochip_setup_dev\n    gpiochip_add_data_with_key\n\ngcdev_register() & gcdev_unregister() would call device_add() &\ndevice_del() (no matter CONFIG_GPIO_CDEV is enabled or not) to\nregister\/unregister device.\n\nHowever, if device_add() succeeds, some resource (like\nstruct device_private allocated by device_private_init())\nis not released by device_del().\n\nTherefore, after device_add() succeeds by gcdev_register(), it\nneeds to call put_device() to release resource in the error handle\npath.\n\nHere we move forward the register of release function, and let it\nrelease every piece of resource by put_device() instead of kfree().\n\nWhile at it, fix another subtle issue, i.e. when gc->ngpio is equal\nto 0, we still call kcalloc() and, in case of further error, kfree()\non the ZERO_PTR pointer, which is not NULL. It's not a bug per se,\nbut rather waste of the resources and potentially wrong expectation\nabout contents of the gdev->descs variable."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/371363716398ed718e389bea8c5e9843a79dde4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6daaa84b621485fe28c401be18debf92ae8ef04a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec851b23084b3a0af8bf0f5e51d33a8d678bdc49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48976","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.680","lastModified":"2024-10-21T20:15:09.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: flowtable_offload: fix using __this_cpu_add in preemptible\n\nflow_offload_queue_work() can be called in workqueue without\nbh disabled, like the call trace showed in my act_ct testing,\ncalling NF_FLOW_TABLE_STAT_INC() there would cause a call\ntrace:\n\n  BUG: using __this_cpu_add() in preemptible [00000000] code: kworker\/u4:0\/138560\n  caller is flow_offload_queue_work+0xec\/0x1b0 [nf_flow_table]\n  Workqueue: act_ct_workqueue tcf_ct_flow_table_cleanup_work [act_ct]\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x33\/0x46\n   check_preemption_disabled+0xc3\/0xf0\n   flow_offload_queue_work+0xec\/0x1b0 [nf_flow_table]\n   nf_flow_table_iterate+0x138\/0x170 [nf_flow_table]\n   nf_flow_table_free+0x140\/0x1a0 [nf_flow_table]\n   tcf_ct_flow_table_cleanup_work+0x2f\/0x2b0 [act_ct]\n   process_one_work+0x6a3\/0x1030\n   worker_thread+0x8a\/0xdf0\n\nThis patch fixes it by using NF_FLOW_TABLE_STAT_INC_ATOMIC()\ninstead in flow_offload_queue_work().\n\nNote that for FLOW_CLS_REPLACE branch in flow_offload_queue_work(),\nit may not be called in preemptible path, but it's good to use\nNF_FLOW_TABLE_STAT_INC_ATOMIC() for all cases in\nflow_offload_queue_work()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a220a11fda012fba506b35929672374c2723ae6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a81047154e7ce4eb8769d5d21adcbc9693542a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48977","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.763","lastModified":"2024-10-21T20:15:09.763","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: af_can: fix NULL pointer dereference in can_rcv_filter\n\nAnalogue to commit 8aa59e355949 (\"can: af_can: fix NULL pointer\ndereference in can_rx_register()\") we need to check for a missing\ninitialization of ml_priv in the receive path of CAN frames.\n\nSince commit 4e096a18867a (\"net: introduce CAN specific pointer in the\nstruct net_device\") the check for dev->type to be ARPHRD_CAN is not\nsufficient anymore since bonding or tun netdevices claim to be CAN\ndevices but do not initialize ml_priv accordingly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0acc442309a0a1b01bcdaa135e56e6398a49439c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3982652957e8d79ac32efcb725450580650a8644","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c142cba37de29f740a3852f01f59876af8ae462a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c42221efb1159d6a3c89e96685ee38acdce86b6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcc63f2f7ee3038d53216edd0d8291e57c752557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48978","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.850","lastModified":"2024-10-21T20:15:09.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: fix shift-out-of-bounds in hid_report_raw_event\n\nSyzbot reported shift-out-of-bounds in hid_report_raw_event.\n\nmicrosoft 0003:045E:07DA.0001: hid_field_extract() called with n (128) >\n32! (swapper\/0)\n======================================================================\nUBSAN: shift-out-of-bounds in drivers\/hid\/hid-core.c:1323:20\nshift exponent 127 is too large for 32-bit type 'int'\nCPU: 0 PID: 0 Comm: swapper\/0 Not tainted\n6.1.0-rc4-syzkaller-00159-g4bbf3422df78 #0\nHardware name: Google Compute Engine\/Google Compute Engine, BIOS\nGoogle 10\/26\/2022\nCall Trace:\n <IRQ>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0x1e3\/0x2cb lib\/dump_stack.c:106\n ubsan_epilogue lib\/ubsan.c:151 [inline]\n __ubsan_handle_shift_out_of_bounds+0x3a6\/0x420 lib\/ubsan.c:322\n snto32 drivers\/hid\/hid-core.c:1323 [inline]\n hid_input_fetch_field drivers\/hid\/hid-core.c:1572 [inline]\n hid_process_report drivers\/hid\/hid-core.c:1665 [inline]\n hid_report_raw_event+0xd56\/0x18b0 drivers\/hid\/hid-core.c:1998\n hid_input_report+0x408\/0x4f0 drivers\/hid\/hid-core.c:2066\n hid_irq_in+0x459\/0x690 drivers\/hid\/usbhid\/hid-core.c:284\n __usb_hcd_giveback_urb+0x369\/0x530 drivers\/usb\/core\/hcd.c:1671\n dummy_timer+0x86b\/0x3110 drivers\/usb\/gadget\/udc\/dummy_hcd.c:1988\n call_timer_fn+0xf5\/0x210 kernel\/time\/timer.c:1474\n expire_timers kernel\/time\/timer.c:1519 [inline]\n __run_timers+0x76a\/0x980 kernel\/time\/timer.c:1790\n run_timer_softirq+0x63\/0xf0 kernel\/time\/timer.c:1803\n __do_softirq+0x277\/0x75b kernel\/softirq.c:571\n __irq_exit_rcu+0xec\/0x170 kernel\/softirq.c:650\n irq_exit_rcu+0x5\/0x20 kernel\/softirq.c:662\n sysvec_apic_timer_interrupt+0x91\/0xb0 arch\/x86\/kernel\/apic\/apic.c:1107\n======================================================================\n\nIf the size of the integer (unsigned n) is bigger than 32 in snto32(),\nshift exponent will be too large for 32-bit type 'int', resulting in a\nshift-out-of-bounds bug.\nFix this by adding a check on the size of the integer (unsigned n) in\nsnto32(). To add support for n greater than 32 bits, set n to 32, if n\nis greater than 32."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/151493fe5a6ed1a88decc929a7368a3f2a246914","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b3b4d7aadaa1b6b58d0f34823bf86cfe8a31b4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/809783f8b4b600c7fb3bccb10fefef822601ea3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e14f20e12224ee2429f75a5c9418a700e26a8d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc03f809da78fc79e4aee132d4e5c6a2b3aeec73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db1ed1b3fb4ec0d19080a102956255769bc45c79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec61b41918587be530398b0d1c9a0d16619397e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f755d11c55b29049b77da5cd9ab2faae96eb33c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48979","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:09.947","lastModified":"2024-10-21T20:15:09.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: fix array index out of bound error in DCN32 DML\n\n[Why&How]\nLinkCapacitySupport array is indexed with the number of voltage states and\nnot the number of max DPPs. Fix the error by changing the array\ndeclaration to use the correct (larger) array size of total number of\nvoltage states."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d8a298b2e83b98042e6ec726e934f535b23e6aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeffc8fb2174f017a10df114bc312f899904dc68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48980","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.037","lastModified":"2024-10-21T20:15:10.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: sja1105: avoid out of bounds access in sja1105_init_l2_policing()\n\nThe SJA1105 family has 45 L2 policing table entries\n(SJA1105_MAX_L2_POLICING_COUNT) and SJA1110 has 110\n(SJA1110_MAX_L2_POLICING_COUNT). Keeping the table structure but\naccounting for the difference in port count (5 in SJA1105 vs 10 in\nSJA1110) does not fully explain the difference. Rather, the SJA1110 also\nhas L2 ingress policers for multicast traffic. If a packet is classified\nas multicast, it will be processed by the policer index 99 + SRCPORT.\n\nThe sja1105_init_l2_policing() function initializes all L2 policers such\nthat they don't interfere with normal packet reception by default. To have\na common code between SJA1105 and SJA1110, the index of the multicast\npolicer for the port is calculated because it's an index that is out of\nbounds for SJA1105 but in bounds for SJA1110, and a bounds check is\nperformed.\n\nThe code fails to do the proper thing when determining what to do with the\nmulticast policer of port 0 on SJA1105 (ds->num_ports = 5). The \"mcast\"\nindex will be equal to 45, which is also equal to\ntable->ops->max_entry_count (SJA1105_MAX_L2_POLICING_COUNT). So it passes\nthrough the check. But at the same time, SJA1105 doesn't have multicast\npolicers. So the code programs the SHARINDX field of an out-of-bounds\nelement in the L2 Policing table of the static config.\n\nThe comparison between index 45 and 45 entries should have determined the\ncode to not access this policer index on SJA1105, since its memory wasn't\neven allocated.\n\nWith enough bad luck, the out-of-bounds write could even overwrite other\nvalid kernel data, but in this case, the issue was detected using KASAN.\n\nKernel log:\n\nsja1105 spi5.0: Probed switch chip: SJA1105Q\n==================================================================\nBUG: KASAN: slab-out-of-bounds in sja1105_setup+0x1cbc\/0x2340\nWrite of size 8 at addr ffffff880bd57708 by task kworker\/u8:0\/8\n...\nWorkqueue: events_unbound deferred_probe_work_func\nCall trace:\n...\nsja1105_setup+0x1cbc\/0x2340\ndsa_register_switch+0x1284\/0x18d0\nsja1105_probe+0x748\/0x840\n...\nAllocated by task 8:\n...\nsja1105_setup+0x1bcc\/0x2340\ndsa_register_switch+0x1284\/0x18d0\nsja1105_probe+0x748\/0x840\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/147f3e3d84054117ae6b9bf317ec4fda9f991192","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e88c6f4aaa70c542e59e5a9d2244bcc99cd245d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8bac7f9fdb0017b32157957ffffd490f95faa07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48981","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.130","lastModified":"2024-10-21T20:15:10.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/shmem-helper: Remove errant put in error path\n\ndrm_gem_shmem_mmap() doesn't own this reference, resulting in the GEM\nobject getting prematurely freed leading to a later use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24013314be6ee4ee456114a671e9fa3461323de8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/585a07b820059462e0c93b76c7de2cd946b26b40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/586847b98e20ab02212ca5c1fc46680384e68a28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a4da05acd062ae7774b6b19cef2b7d922902d36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83e3da8bb92fcfa7a1d232cf55f9e6c49bb84942","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48982","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.210","lastModified":"2024-10-21T20:15:10.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix crash when replugging CSR fake controllers\n\nIt seems fake CSR 5.0 clones can cause the suspend notifier to be\nregistered twice causing the following kernel panic:\n\n[   71.986122] Call Trace:\n[   71.986124]  <TASK>\n[   71.986125]  blocking_notifier_chain_register+0x33\/0x60\n[   71.986130]  hci_register_dev+0x316\/0x3d0 [bluetooth 99b5497ea3d09708fa1366c1dc03288bf3cca8da]\n[   71.986154]  btusb_probe+0x979\/0xd85 [btusb e1e0605a4f4c01984a4b9c8ac58c3666ae287477]\n[   71.986159]  ? __pm_runtime_set_status+0x1a9\/0x300\n[   71.986162]  ? ktime_get_mono_fast_ns+0x3e\/0x90\n[   71.986167]  usb_probe_interface+0xe3\/0x2b0\n[   71.986171]  really_probe+0xdb\/0x380\n[   71.986174]  ? pm_runtime_barrier+0x54\/0x90\n[   71.986177]  __driver_probe_device+0x78\/0x170\n[   71.986180]  driver_probe_device+0x1f\/0x90\n[   71.986183]  __device_attach_driver+0x89\/0x110\n[   71.986186]  ? driver_allows_async_probing+0x70\/0x70\n[   71.986189]  bus_for_each_drv+0x8c\/0xe0\n[   71.986192]  __device_attach+0xb2\/0x1e0\n[   71.986195]  bus_probe_device+0x92\/0xb0\n[   71.986198]  device_add+0x422\/0x9a0\n[   71.986201]  ? sysfs_merge_group+0xd4\/0x110\n[   71.986205]  usb_set_configuration+0x57a\/0x820\n[   71.986208]  usb_generic_driver_probe+0x4f\/0x70\n[   71.986211]  usb_probe_device+0x3a\/0x110\n[   71.986213]  really_probe+0xdb\/0x380\n[   71.986216]  ? pm_runtime_barrier+0x54\/0x90\n[   71.986219]  __driver_probe_device+0x78\/0x170\n[   71.986221]  driver_probe_device+0x1f\/0x90\n[   71.986224]  __device_attach_driver+0x89\/0x110\n[   71.986227]  ? driver_allows_async_probing+0x70\/0x70\n[   71.986230]  bus_for_each_drv+0x8c\/0xe0\n[   71.986232]  __device_attach+0xb2\/0x1e0\n[   71.986235]  bus_probe_device+0x92\/0xb0\n[   71.986237]  device_add+0x422\/0x9a0\n[   71.986239]  ? _dev_info+0x7d\/0x98\n[   71.986242]  ? blake2s_update+0x4c\/0xc0\n[   71.986246]  usb_new_device.cold+0x148\/0x36d\n[   71.986250]  hub_event+0xa8a\/0x1910\n[   71.986255]  process_one_work+0x1c4\/0x380\n[   71.986259]  worker_thread+0x51\/0x390\n[   71.986262]  ? rescuer_thread+0x3b0\/0x3b0\n[   71.986264]  kthread+0xdb\/0x110\n[   71.986266]  ? kthread_complete_and_exit+0x20\/0x20\n[   71.986268]  ret_from_fork+0x1f\/0x30\n[   71.986273]  <\/TASK>\n[   71.986274] ---[ end trace 0000000000000000 ]---\n[   71.986284] btusb: probe of 2-1.6:1.0 failed with error -17"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/549b46f8130effccf168293270bb3b1d5da529cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a49894a5ac3656f1a4f0f6b110460060e8026bf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5ca338751ad4783ec8d37b5d99c3e37b7813e59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc8fa6570deadb70c3fb74d7cd8ce38849feaed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48983","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.283","lastModified":"2024-10-21T20:15:10.283","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: Fix a null-ptr-deref in io_tctx_exit_cb()\n\nSyzkaller reports a NULL deref bug as follows:\n\n BUG: KASAN: null-ptr-deref in io_tctx_exit_cb+0x53\/0xd3\n Read of size 4 at addr 0000000000000138 by task file1\/1955\n\n CPU: 1 PID: 1955 Comm: file1 Not tainted 6.1.0-rc7-00103-gef4d3ea40565 #75\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04\/01\/2014\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0xcd\/0x134\n  ? io_tctx_exit_cb+0x53\/0xd3\n  kasan_report+0xbb\/0x1f0\n  ? io_tctx_exit_cb+0x53\/0xd3\n  kasan_check_range+0x140\/0x190\n  io_tctx_exit_cb+0x53\/0xd3\n  task_work_run+0x164\/0x250\n  ? task_work_cancel+0x30\/0x30\n  get_signal+0x1c3\/0x2440\n  ? lock_downgrade+0x6e0\/0x6e0\n  ? lock_downgrade+0x6e0\/0x6e0\n  ? exit_signals+0x8b0\/0x8b0\n  ? do_raw_read_unlock+0x3b\/0x70\n  ? do_raw_spin_unlock+0x50\/0x230\n  arch_do_signal_or_restart+0x82\/0x2470\n  ? kmem_cache_free+0x260\/0x4b0\n  ? putname+0xfe\/0x140\n  ? get_sigframe_size+0x10\/0x10\n  ? do_execveat_common.isra.0+0x226\/0x710\n  ? lockdep_hardirqs_on+0x79\/0x100\n  ? putname+0xfe\/0x140\n  ? do_execveat_common.isra.0+0x238\/0x710\n  exit_to_user_mode_prepare+0x15f\/0x250\n  syscall_exit_to_user_mode+0x19\/0x50\n  do_syscall_64+0x42\/0xb0\n  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n RIP: 0023:0x0\n Code: Unable to access opcode bytes at 0xffffffffffffffd6.\n RSP: 002b:00000000fffb7790 EFLAGS: 00000200 ORIG_RAX: 000000000000000b\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\n R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000\n R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n  <\/TASK>\n Kernel panic - not syncing: panic_on_warn set ...\n\nThis happens because the adding of task_work from io_ring_exit_work()\nisn't synchronized with canceling all work items from eg exec. The\nexecution of the two are ordered in that they are both run by the task\nitself, but if io_tctx_exit_cb() is queued while we're canceling all\nwork items off exec AND gets executed when the task exits to userspace\nrather than in the main loop in io_uring_cancel_generic(), then we can\nfind current->io_uring == NULL and hit the above crash.\n\nIt's safe to add this NULL check here, because the execution of the two\npaths are done by the task itself.\n\n[axboe: add code comment and also put an explanation in the commit msg]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/998b30c3948e4d0b1097e639918c5cff332acac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d91edca1943453aaaba4f380f6f364346222e5cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f895511de9d27fff71dad2c234ad53b4afd2b06c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48984","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.360","lastModified":"2024-10-21T20:15:10.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: slcan: fix freed work crash\n\nThe LTP test pty03 is causing a crash in slcan:\n  BUG: kernel NULL pointer dereference, address: 0000000000000008\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 0 PID: 348 Comm: kworker\/0:3 Not tainted 6.0.8-1-default #1 openSUSE Tumbleweed 9d20364b934f5aab0a9bdf84e8f45cfdfae39dab\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04\/01\/2014\n  Workqueue:  0x0 (events)\n  RIP: 0010:process_one_work (\/home\/rich\/kernel\/linux\/kernel\/workqueue.c:706 \/home\/rich\/kernel\/linux\/kernel\/workqueue.c:2185)\n  Code: 49 89 ff 41 56 41 55 41 54 55 53 48 89 f3 48 83 ec 10 48 8b 06 48 8b 6f 48 49 89 c4 45 30 e4 a8 04 b8 00 00 00 00 4c 0f 44 e0 <49> 8b 44 24 08 44 8b a8 00 01 00 00 41 83 e5 20 f6 45 10 04 75 0e\n  RSP: 0018:ffffaf7b40f47e98 EFLAGS: 00010046\n  RAX: 0000000000000000 RBX: ffff9d644e1b8b48 RCX: ffff9d649e439968\n  RDX: 00000000ffff8455 RSI: ffff9d644e1b8b48 RDI: ffff9d64764aa6c0\n  RBP: ffff9d649e4335c0 R08: 0000000000000c00 R09: ffff9d64764aa734\n  R10: 0000000000000007 R11: 0000000000000001 R12: 0000000000000000\n  R13: ffff9d649e4335e8 R14: ffff9d64490da780 R15: ffff9d64764aa6c0\n  FS:  0000000000000000(0000) GS:ffff9d649e400000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000000000008 CR3: 0000000036424000 CR4: 00000000000006f0\n  Call Trace:\n   <TASK>\n  worker_thread (\/home\/rich\/kernel\/linux\/kernel\/workqueue.c:2436)\n  kthread (\/home\/rich\/kernel\/linux\/kernel\/kthread.c:376)\n  ret_from_fork (\/home\/rich\/kernel\/linux\/arch\/x86\/entry\/entry_64.S:312)\n\nApparently, the slcan's tx_work is freed while being scheduled. While\nslcan_netdev_close() (netdev side) calls flush_work(&sl->tx_work),\nslcan_close() (tty side) does not. So when the netdev is never set UP,\nbut the tty is stuffed with bytes and forced to wakeup write, the work\nis scheduled, but never flushed.\n\nSo add an additional flush_work() to slcan_close() to be sure the work\nis flushed under all circumstances.\n\nThe Fixes commit below moved flush_work() from slcan_close() to\nslcan_netdev_close(). What was the rationale behind it? Maybe we can\ndrop the one in slcan_netdev_close()?\n\nI see the same pattern in can327. So it perhaps needs the very same fix."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9e2709d58a14a10eb00d919acd7dec071c33f8c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb855e9f3b6b42c72af3f1eb0b288998fe0d5ebb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48985","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.463","lastModified":"2024-10-21T20:15:10.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix race on per-CQ variable napi work_done\n\nAfter calling napi_complete_done(), the NAPIF_STATE_SCHED bit may be\ncleared, and another CPU can start napi thread and access per-CQ variable,\ncq->work_done. If the other thread (for example, from busy_poll) sets\nit to a value >= budget, this thread will continue to run when it should\nstop, and cause memory corruption and panic.\n\nTo fix this issue, save the per-CQ work_done variable in a local variable\nbefore napi_complete_done(), so it won't be corrupted by a possible\nconcurrent thread after napi_complete_done().\n\nAlso, add a flag bit to advertise to the NIC firmware: the NAPI work_done\nvariable race is fixed, so the driver is able to reliably support features\nlike busy_poll."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18010ff776fa42340efc428b3ea6d19b3e7c7b21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6740d8572ccd1bca50d8a1ca2bedc333f50ed5f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe50a9bbeb1f042e756c5cfa7708112c944368de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48986","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.527","lastModified":"2024-10-21T20:15:10.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/gup: fix gup_pud_range() for dax\n\nFor dax pud, pud_huge() returns true on x86. So the function works as long\nas hugetlb is configured. However, dax doesn't depend on hugetlb.\nCommit 414fd080d125 (\"mm\/gup: fix gup_pmd_range() for dax\") fixed\ndevmap-backed huge PMDs, but missed devmap-backed huge PUDs. Fix this as\nwell.\n\nThis fixes the below kernel panic:\n\ngeneral protection fault, probably for non-canonical address 0x69e7c000cc478: 0000 [#1] SMP\n\t< snip >\nCall Trace:\n<TASK>\nget_user_pages_fast+0x1f\/0x40\niov_iter_get_pages+0xc6\/0x3b0\n? mempool_alloc+0x5d\/0x170\nbio_iov_iter_get_pages+0x82\/0x4e0\n? bvec_alloc+0x91\/0xc0\n? bio_alloc_bioset+0x19a\/0x2a0\nblkdev_direct_IO+0x282\/0x480\n? __io_complete_rw_common+0xc0\/0xc0\n? filemap_range_has_page+0x82\/0xc0\ngeneric_file_direct_write+0x9d\/0x1a0\n? inode_update_time+0x24\/0x30\n__generic_file_write_iter+0xbd\/0x1e0\nblkdev_write_iter+0xb4\/0x150\n? io_import_iovec+0x8d\/0x340\nio_write+0xf9\/0x300\nio_issue_sqe+0x3c3\/0x1d30\n? sysvec_reschedule_ipi+0x6c\/0x80\n__io_queue_sqe+0x33\/0x240\n? fget+0x76\/0xa0\nio_submit_sqes+0xe6a\/0x18d0\n? __fget_light+0xd1\/0x100\n__x64_sys_io_uring_enter+0x199\/0x880\n? __context_tracking_enter+0x1f\/0x70\n? irqentry_exit_to_user_mode+0x24\/0x30\n? irqentry_exit+0x1d\/0x30\n? __context_tracking_exit+0xe\/0x70\ndo_syscall_64+0x3b\/0x90\nentry_SYSCALL_64_after_hwframe+0x61\/0xcb\nRIP: 0033:0x7fc97c11a7be\n\t< snip >\n<\/TASK>\n---[ end trace 48b2e0e67debcaeb ]---\nRIP: 0010:internal_get_user_pages_fast+0x340\/0x990\n\t< snip >\nKernel panic - not syncing: Fatal exception\nKernel Offset: disabled"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04edfa3dc06ecfc6133a33bc7271298782dee875","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ac29732a2ffa64c7de13a072b0f2848b9c11037","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e06d13c36ded750c72521b600293befebb4e56c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1cf856123ceb766c49967ec79b841030fa1741f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcd0ccd836ffad73d98a66f6fea7b16f735ea920","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48987","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.617","lastModified":"2024-10-21T20:15:10.617","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-dv-timings.c: fix too strict blanking sanity checks\n\nSanity checks were added to verify the v4l2_bt_timings blanking fields\nin order to avoid integer overflows when userspace passes weird values.\n\nBut that assumed that userspace would correctly fill in the front porch,\nbackporch and sync values, but sometimes all you know is the total\nblanking, which is then assigned to just one of these fields.\n\nAnd that can fail with these checks.\n\nSo instead set a maximum for the total horizontal and vertical\nblanking and check that each field remains below that.\n\nThat is still sufficient to avoid integer overflows, but it also\nallows for more flexibility in how userspace fills in these fields."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d73b49c4037199472b29574ae21c21aef493971","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2572ab14b73aa45b6ae7e4c089ccf119fed5cf89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32f01f0306a98629508f84d7ef0d1d037bc274a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4afc77068e36cee45b39d4fdc7513de26980f72c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eef2141776da02772c44ec406d6871a790761ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fb8bc29bfa80707994a63cc97e2f9920e0b0608","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b56627c0d13009e02f6f2c0206c0451ed19a0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3d14cdf1c7ae2caa3e999bae95ba99e955fb7c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48988","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.710","lastModified":"2024-10-21T20:15:10.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg: fix possible use-after-free in memcg_write_event_control()\n\nmemcg_write_event_control() accesses the dentry->d_name of the specified\ncontrol fd to route the write call.  As a cgroup interface file can't be\nrenamed, it's safe to access d_name as long as the specified file is a\nregular cgroup file.  Also, as these cgroup interface files can't be\nremoved before the directory, it's safe to access the parent too.\n\nPrior to 347c4a874710 (\"memcg: remove cgroup_event->cft\"), there was a\ncall to __file_cft() which verified that the specified file is a regular\ncgroupfs file before further accesses.  The cftype pointer returned from\n__file_cft() was no longer necessary and the commit inadvertently dropped\nthe file type check with it allowing any file to slip through.  With the\ninvarients broken, the d_name and parent accesses can now race against\nrenames and removals of arbitrary files and cause use-after-free's.\n\nFix the bug by resurrecting the file type check in __file_cft().  Now that\ncgroupfs is implemented through kernfs, checking the file operations needs\nto go through a layer of indirection.  Instead, let's check the superblock\nand dentry type."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ed074317b835caa6c03bcfa8f133365324673dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35963b31821920908e397146502066f6b032c917","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a7ba45b1a435e7097ca0f79a847d0949d0eb088","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aad8bbd17a1d586005feb9226c2e9cfce1432e13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b77600e26fd48727a95ffd50ba1e937efb548125","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1ae97624ecf400ea56c238bff23e5cd139df0b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1f7f36cf682fa59db15e2089039a2eeb58ff2ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48989","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.820","lastModified":"2024-10-21T20:15:10.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfscache: Fix oops due to race with cookie_lru and use_cookie\n\nIf a cookie expires from the LRU and the LRU_DISCARD flag is set, but\nthe state machine has not run yet, it's possible another thread can call\nfscache_use_cookie and begin to use it.\n\nWhen the cookie_worker finally runs, it will see the LRU_DISCARD flag\nset, transition the cookie->state to LRU_DISCARDING, which will then\nwithdraw the cookie.  Once the cookie is withdrawn the object is removed\nthe below oops will occur because the object associated with the cookie\nis now NULL.\n\nFix the oops by clearing the LRU_DISCARD bit if another thread uses the\ncookie before the cookie_worker runs.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000008\n  ...\n  CPU: 31 PID: 44773 Comm: kworker\/u130:1 Tainted: G     E    6.0.0-5.dneg.x86_64 #1\n  Hardware name: Google Compute Engine\/Google Compute Engine, BIOS Google 08\/26\/2022\n  Workqueue: events_unbound netfs_rreq_write_to_cache_work [netfs]\n  RIP: 0010:cachefiles_prepare_write+0x28\/0x90 [cachefiles]\n  ...\n  Call Trace:\n    netfs_rreq_write_to_cache_work+0x11c\/0x320 [netfs]\n    process_one_work+0x217\/0x3e0\n    worker_thread+0x4a\/0x3b0\n    kthread+0xd6\/0x100"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37f0b459c9b67e14fe4dcc3a15d286c4436ed01d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5b52de3214a29911f949459a79f6640969b5487","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48990","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:10.910","lastModified":"2024-10-21T20:15:10.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: fix use-after-free during gpu recovery\n\n[Why]\n    [  754.862560] refcount_t: underflow; use-after-free.\n    [  754.862898] Call Trace:\n    [  754.862903]  <TASK>\n    [  754.862913]  amdgpu_job_free_cb+0xc2\/0xe1 [amdgpu]\n    [  754.863543]  drm_sched_main.cold+0x34\/0x39 [amd_sched]\n\n[How]\n    The fw_fence may be not init, check whether dma_fence_init\n    is performed before job free"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cb93f390453cde4d6afda1587aaa00e75e09617","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2a89cd942edd50c1e652004fd64019be78b0a96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48991","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.000","lastModified":"2024-10-21T20:15:11.000","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/khugepaged: invoke MMU notifiers in shmem\/file collapse paths\n\nAny codepath that zaps page table entries must invoke MMU notifiers to\nensure that secondary MMUs (like KVM) don't keep accessing pages which\naren't mapped anymore.  Secondary MMUs don't hold their own references to\npages that are mirrored over, so failing to notify them can lead to page\nuse-after-free.\n\nI'm marking this as addressing an issue introduced in commit f3f0e1d2150b\n(\"khugepaged: add support of collapse for tmpfs\/shmem pages\"), but most of\nthe security impact of this only came in commit 27e1f8273113 (\"khugepaged:\nenable collapse pmd for pte-mapped THP\"), which actually omitted flushes\nfor the removal of present PTEs, not just for the removal of empty page\ntables."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a3f8c6cd29d9078cc81b29d39d0e9ae1d6a03c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/275c626c131cfe141beeb6c575e31fa53d32da19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5450535901d89a5dcca5fbbc59a24fe89caeb465","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ffc2a75534d9d74d49760f983f8eb675fa63d69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f445ca2e0e59c7971d0b7b853465e50844ab596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c23105673228c349739e958fa33955ed8faddcaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f268f6cf875f3220afc77bdd0bf1bb136eb54db9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff2a1a6f869650aec99e9d070b5ab625bfbc5bc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48992","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.067","lastModified":"2024-10-21T20:15:11.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: soc-pcm: Add NULL check in BE reparenting\n\nAdd NULL check in dpcm_be_reparent API, to handle\nkernel NULL pointer dereference error.\nThe issue occurred in fuzzing test."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0760acc2e6598ad4f7bd3662db2d907ef0838139","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34a9796bf0684bfd54e96a142560d560c21c983b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f74b9aa8d58c18927bb9b65dd5ba70a5fd61615","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4dd21a79dbb862d2ebcf9ed90e646416009ff0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db8f91d424fe0ea6db337aca8bc05908bbce1498","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7166d6821c15f3516bcac8ae3f155924da1908c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2ba66d8738584d124aff4e760ed1337f5f6dfb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6f45e538328df9ce66aa61bafee1a5717c4b700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48993","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.163","lastModified":"2024-10-21T20:15:11.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbcon: Use kzalloc() in fbcon_prepare_logo()\n\nA kernel built with syzbot's config file reported that\n\n  scr_memcpyw(q, save, array3_size(logo_lines, new_cols, 2))\n\ncauses uninitialized \"save\" to be copied.\n\n  ----------\n  [drm] Initialized vgem 1.0.0 20120112 for vgem on minor 0\n  [drm] Initialized vkms 1.0.0 20180514 for vkms on minor 1\n  Console: switching to colour frame buffer device 128x48\n  =====================================================\n  BUG: KMSAN: uninit-value in do_update_region+0x4b8\/0xba0\n   do_update_region+0x4b8\/0xba0\n   update_region+0x40d\/0x840\n   fbcon_switch+0x3364\/0x35e0\n   redraw_screen+0xae3\/0x18a0\n   do_bind_con_driver+0x1cb3\/0x1df0\n   do_take_over_console+0x11cb\/0x13f0\n   fbcon_fb_registered+0xacc\/0xfd0\n   register_framebuffer+0x1179\/0x1320\n   __drm_fb_helper_initial_config_and_unlock+0x23ad\/0x2b40\n   drm_fbdev_client_hotplug+0xbea\/0xda0\n   drm_fbdev_generic_setup+0x65e\/0x9d0\n   vkms_init+0x9f3\/0xc76\n   (...snipped...)\n\n  Uninit was stored to memory at:\n   fbcon_prepare_logo+0x143b\/0x1940\n   fbcon_init+0x2c1b\/0x31c0\n   visual_init+0x3e7\/0x820\n   do_bind_con_driver+0x14a4\/0x1df0\n   do_take_over_console+0x11cb\/0x13f0\n   fbcon_fb_registered+0xacc\/0xfd0\n   register_framebuffer+0x1179\/0x1320\n   __drm_fb_helper_initial_config_and_unlock+0x23ad\/0x2b40\n   drm_fbdev_client_hotplug+0xbea\/0xda0\n   drm_fbdev_generic_setup+0x65e\/0x9d0\n   vkms_init+0x9f3\/0xc76\n   (...snipped...)\n\n  Uninit was created at:\n   __kmem_cache_alloc_node+0xb69\/0x1020\n   __kmalloc+0x379\/0x680\n   fbcon_prepare_logo+0x704\/0x1940\n   fbcon_init+0x2c1b\/0x31c0\n   visual_init+0x3e7\/0x820\n   do_bind_con_driver+0x14a4\/0x1df0\n   do_take_over_console+0x11cb\/0x13f0\n   fbcon_fb_registered+0xacc\/0xfd0\n   register_framebuffer+0x1179\/0x1320\n   __drm_fb_helper_initial_config_and_unlock+0x23ad\/0x2b40\n   drm_fbdev_client_hotplug+0xbea\/0xda0\n   drm_fbdev_generic_setup+0x65e\/0x9d0\n   vkms_init+0x9f3\/0xc76\n   (...snipped...)\n\n  CPU: 2 PID: 1 Comm: swapper\/0 Not tainted 6.1.0-rc4-00356-g8f2975c2bb4c #924\n  Hardware name: innotek GmbH VirtualBox\/VirtualBox, BIOS VirtualBox 12\/01\/2006\n  ----------"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20e78b7d1c1019789d9754ad9246192916f1a3b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bbebc6aba72ece39a200c8141f44e68ba883877","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d5126b574c9177ed9ca925e36f85a1e6ce80bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6a00d7e8ffd78d1cdb7a43f1278f081038c638f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9b53caf0191cee24afd05ca6c83ed873199b52d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e70a5724400a841c9857ee3d08dae4d6c53ee40d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48994","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.257","lastModified":"2024-10-21T20:15:11.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: Fix function prototype mismatch in snd_seq_expand_var_event\n\nWith clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),\nindirect call targets are validated against the expected function\npointer prototype to make sure the call target is valid to help mitigate\nROP attacks. If they are not identical, there is a failure at run time,\nwhich manifests as either a kernel panic or thread getting killed.\n\nseq_copy_in_user() and seq_copy_in_kernel() did not have prototypes\nmatching snd_seq_dump_func_t. Adjust this and remove the casts. There\nare not resulting binary output differences.\n\nThis was found as a result of Clang's new -Wcast-function-type-strict\nflag, which is more sensitive than the simpler -Wcast-function-type,\nwhich only checks for type width mismatches."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05530ef7cf7c7d700f6753f058999b1b5099a026","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13ee8fb5410b740c8dd2867d3557c7662f7dda2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/15c42ab8d43acb73e2eba361ad05822c0af0ecfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f46e95bf344abc4e74f8158901d32a869e0adb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63badfed200219ca656968725f1a43df293ac936","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b38486e82ecb9f3046e0184205f6b61408fc40c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e385360705a0b346bdb57ce938249175d0613b8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fccd454129f6a0739651f7f58307cdb631fd6e89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48995","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.343","lastModified":"2024-10-21T20:15:11.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: raydium_ts_i2c - fix memory leak in raydium_i2c_send()\n\nThere is a kmemleak when test the raydium_i2c_ts with bpf mock device:\n\n  unreferenced object 0xffff88812d3675a0 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741067 (age 95.695s)\n    hex dump (first 8 bytes):\n      11 0e 10 c0 01 00 04 00                          ........\n    backtrace:\n      [<0000000068427125>] __kmalloc+0x46\/0x1b0\n      [<0000000090180f91>] raydium_i2c_send+0xd4\/0x2bf [raydium_i2c_ts]\n      [<000000006e631aee>] raydium_i2c_initialize.cold+0xbc\/0x3e4 [raydium_i2c_ts]\n      [<00000000dc6fcf38>] raydium_i2c_probe+0x3cd\/0x6bc [raydium_i2c_ts]\n      [<00000000a310de16>] i2c_device_probe+0x651\/0x680\n      [<00000000f5a96bf3>] really_probe+0x17c\/0x3f0\n      [<00000000096ba499>] __driver_probe_device+0xe3\/0x170\n      [<00000000c5acb4d9>] driver_probe_device+0x49\/0x120\n      [<00000000264fe082>] __device_attach_driver+0xf7\/0x150\n      [<00000000f919423c>] bus_for_each_drv+0x114\/0x180\n      [<00000000e067feca>] __device_attach+0x1e5\/0x2d0\n      [<0000000054301fc2>] bus_probe_device+0x126\/0x140\n      [<00000000aad93b22>] device_add+0x810\/0x1130\n      [<00000000c086a53f>] i2c_new_client_device+0x352\/0x4e0\n      [<000000003c2c248c>] of_i2c_register_device+0xf1\/0x110\n      [<00000000ffec4177>] of_i2c_notify+0x100\/0x160\n  unreferenced object 0xffff88812d3675c8 (size 8):\n    comm \"python3\", pid 349, jiffies 4294741070 (age 95.692s)\n    hex dump (first 8 bytes):\n      22 00 36 2d 81 88 ff ff                          \".6-....\n    backtrace:\n      [<0000000068427125>] __kmalloc+0x46\/0x1b0\n      [<0000000090180f91>] raydium_i2c_send+0xd4\/0x2bf [raydium_i2c_ts]\n      [<000000001d5c9620>] raydium_i2c_initialize.cold+0x223\/0x3e4 [raydium_i2c_ts]\n      [<00000000dc6fcf38>] raydium_i2c_probe+0x3cd\/0x6bc [raydium_i2c_ts]\n      [<00000000a310de16>] i2c_device_probe+0x651\/0x680\n      [<00000000f5a96bf3>] really_probe+0x17c\/0x3f0\n      [<00000000096ba499>] __driver_probe_device+0xe3\/0x170\n      [<00000000c5acb4d9>] driver_probe_device+0x49\/0x120\n      [<00000000264fe082>] __device_attach_driver+0xf7\/0x150\n      [<00000000f919423c>] bus_for_each_drv+0x114\/0x180\n      [<00000000e067feca>] __device_attach+0x1e5\/0x2d0\n      [<0000000054301fc2>] bus_probe_device+0x126\/0x140\n      [<00000000aad93b22>] device_add+0x810\/0x1130\n      [<00000000c086a53f>] i2c_new_client_device+0x352\/0x4e0\n      [<000000003c2c248c>] of_i2c_register_device+0xf1\/0x110\n      [<00000000ffec4177>] of_i2c_notify+0x100\/0x160\n\nAfter BANK_SWITCH command from i2c BUS, no matter success or error\nhappened, the tx_buf should be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/097c1c7a28e3da8f2811ba532be6e81faab15aab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53b9b1201e34ccc895971218559123625c56fbcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c9a59939deb4bfafdc451100c03d1e848b4169b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a82869ac52f3d9db4b2cf8fd41edc2dee7a75a61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48996","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.423","lastModified":"2024-10-21T20:15:11.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/damon\/sysfs: fix wrong empty schemes assumption under online tuning in damon_sysfs_set_schemes()\n\nCommit da87878010e5 (\"mm\/damon\/sysfs: support online inputs update\") made\n'damon_sysfs_set_schemes()' to be called for running DAMON context, which\ncould have schemes.  In the case, DAMON sysfs interface is supposed to\nupdate, remove, or add schemes to reflect the sysfs files.  However, the\ncode is assuming the DAMON context wouldn't have schemes at all, and\ntherefore creates and adds new schemes.  As a result, the code doesn't\nwork as intended for online schemes tuning and could have more than\nexpected memory footprint.  The schemes are all in the DAMON context, so\nit doesn't leak the memory, though.\n\nRemove the wrong asssumption (the DAMON context wouldn't have schemes) in\n'damon_sysfs_set_schemes()' to fix the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/95bc35f9bee5220dad4e8567654ab3288a181639","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f98d1f2a36ad7ab48fb4cf73ca14e7b19482fd4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48997","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.503","lastModified":"2024-10-21T20:15:11.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nchar: tpm: Protect tpm_pm_suspend with locks\n\nCurrently tpm transactions are executed unconditionally in\ntpm_pm_suspend() function, which may lead to races with other tpm\naccessors in the system.\n\nSpecifically, the hw_random tpm driver makes use of tpm_get_random(),\nand this function is called in a loop from a kthread, which means it's\nnot frozen alongside userspace, and so can race with the work done\nduring system suspend:\n\n  tpm tpm0: tpm_transmit: tpm_recv: error -52\n  tpm tpm0: invalid TPM_STS.x 0xff, dumping stack for forensics\n  CPU: 0 PID: 1 Comm: init Not tainted 6.1.0-rc5+ #135\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04\/01\/2014\n  Call Trace:\n   tpm_tis_status.cold+0x19\/0x20\n   tpm_transmit+0x13b\/0x390\n   tpm_transmit_cmd+0x20\/0x80\n   tpm1_pm_suspend+0xa6\/0x110\n   tpm_pm_suspend+0x53\/0x80\n   __pnp_bus_suspend+0x35\/0xe0\n   __device_suspend+0x10f\/0x350\n\nFix this by calling tpm_try_get_ops(), which itself is a wrapper around\ntpm_chip_start(), but takes the appropriate mutex.\n\n[Jason: reworked commit message, added metadata]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23393c6461422df5bf8084a086ada9a7e17dc2ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25b78bf98b07ff5aceb9b1e24f72ec0236c5c053","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e0d6c687c925e27fd4bc78a2721d10acf5614d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/571b6bbbf54d835ea6120f65575cb55cd767e603","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d699373ac5f3545243d3c73a1ccab77fdef8cec6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48998","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.570","lastModified":"2024-10-21T20:15:11.570","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/bpf\/32: Fix Oops on tail call tests\n\ntest_bpf tail call tests end up as:\n\n  test_bpf: #0 Tail call leaf jited:1 85 PASS\n  test_bpf: #1 Tail call 2 jited:1 111 PASS\n  test_bpf: #2 Tail call 3 jited:1 145 PASS\n  test_bpf: #3 Tail call 4 jited:1 170 PASS\n  test_bpf: #4 Tail call load\/store leaf jited:1 190 PASS\n  test_bpf: #5 Tail call load\/store jited:1\n  BUG: Unable to handle kernel data access on write at 0xf1b4e000\n  Faulting instruction address: 0xbe86b710\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  BE PAGE_SIZE=4K MMU=Hash PowerMac\n  Modules linked in: test_bpf(+)\n  CPU: 0 PID: 97 Comm: insmod Not tainted 6.1.0-rc4+ #195\n  Hardware name: PowerMac3,1 750CL 0x87210 PowerMac\n  NIP:  be86b710 LR: be857e88 CTR: be86b704\n  REGS: f1b4df20 TRAP: 0300   Not tainted  (6.1.0-rc4+)\n  MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 28008242  XER: 00000000\n  DAR: f1b4e000 DSISR: 42000000\n  GPR00: 00000001 f1b4dfe0 c11d2280 00000000 00000000 00000000 00000002 00000000\n  GPR08: f1b4e000 be86b704 f1b4e000 00000000 00000000 100d816a f2440000 fe73baa8\n  GPR16: f2458000 00000000 c1941ae4 f1fe2248 00000045 c0de0000 f2458030 00000000\n  GPR24: 000003e8 0000000f f2458000 f1b4dc90 3e584b46 00000000 f24466a0 c1941a00\n  NIP [be86b710] 0xbe86b710\n  LR [be857e88] __run_one+0xec\/0x264 [test_bpf]\n  Call Trace:\n  [f1b4dfe0] [00000002] 0x2 (unreliable)\n  Instruction dump:\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  ---[ end trace 0000000000000000 ]---\n\nThis is a tentative to write above the stack. The problem is encoutered\nwith tests added by commit 38608ee7b690 (\"bpf, tests: Add load store\ntest case for tail call\")\n\nThis happens because tail call is done to a BPF prog with a different\nstack_depth. At the time being, the stack is kept as is when the caller\ntail calls its callee. But at exit, the callee restores the stack based\non its own properties. Therefore here, at each run, r1 is erroneously\nincreased by 32 - 16 = 16 bytes.\n\nThis was done that way in order to pass the tail call count from caller\nto callee through the stack. As powerpc32 doesn't have a red zone in\nthe stack, it was necessary the maintain the stack as is for the tail\ncall. But it was not anticipated that the BPF frame size could be\ndifferent.\n\nLet's take a new approach. Use register r4 to carry the tail call count\nduring the tail call, and save it into the stack at function entry if\nrequired. This means the input parameter must be in r3, which is more\ncorrect as it is a 32 bits parameter, then tail call better match with\nnormal BPF function entry, the down side being that we move that input\nparameter back and forth between r3 and r4. That can be optimised later.\n\nDoing that also has the advantage of maximising the common parts between\ntail calls and a normal function exit.\n\nWith the fix, tail call tests are now successfull:\n\n  test_bpf: #0 Tail call leaf jited:1 53 PASS\n  test_bpf: #1 Tail call 2 jited:1 115 PASS\n  test_bpf: #2 Tail call 3 jited:1 154 PASS\n  test_bpf: #3 Tail call 4 jited:1 165 PASS\n  test_bpf: #4 Tail call load\/store leaf jited:1 101 PASS\n  test_bpf: #5 Tail call load\/store jited:1 141 PASS\n  test_bpf: #6 Tail call error path, max count reached jited:1 994 PASS\n  test_bpf: #7 Tail call count preserved across function calls jited:1 140975 PASS\n  test_bpf: #8 Tail call error path, NULL target jited:1 110 PASS\n  test_bpf: #9 Tail call error path, index out of range jited:1 69 PASS\n  test_bpf: test_tail_calls: Summary: 10 PASSED, 0 FAILED, [10\/10 JIT'ed]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/747a6e547240baaaf41874d27333b87b87cfd24c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89d21e259a94f7d5582ec675aa445f5a79f347e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48999","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.630","lastModified":"2024-10-21T20:15:11.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: Handle attempt to delete multipath route when fib_info contains an nh reference\n\nGwangun Jung reported a slab-out-of-bounds access in fib_nh_match:\n    fib_nh_match+0xf98\/0x1130 linux-6.0-rc7\/net\/ipv4\/fib_semantics.c:961\n    fib_table_delete+0x5f3\/0xa40 linux-6.0-rc7\/net\/ipv4\/fib_trie.c:1753\n    inet_rtm_delroute+0x2b3\/0x380 linux-6.0-rc7\/net\/ipv4\/fib_frontend.c:874\n\nSeparate nexthop objects are mutually exclusive with the legacy\nmultipath spec. Fix fib_nh_match to return if the config for the\nto be deleted route contains a multipath spec while the fib_info\nis using a nexthop object."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b5394229ebae09afc07aabccb5ffd705ffd250e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25174d91e4a32a24204060d283bd5fa6d0ddf133","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61b91eb33a69c3be11b259c5ea484505cd79f883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb20a2ae241be846bc3c11ea4b3a3c69e41d51f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc3cd130ecfb8b0ae52e235e487bae3f16a24a32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49000","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.710","lastModified":"2024-10-21T20:15:11.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix PCI device refcount leak in has_external_pci()\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() before 'return true' to avoid reference count leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10ed7655a17f6a3eaecd1293830488259ccd5723","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17f67414718e6aba123335a33b7d15aa594fff34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afca9e19cc720bfafc75dc5ce429c185ca93f31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6eea8b2e858a20ad58ac62dc2de90fea2413f94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49001","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.773","lastModified":"2024-10-21T20:15:11.773","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: fix race when vmap stack overflow\n\nCurrently, when detecting vmap stack overflow, riscv firstly switches\nto the so called shadow stack, then use this shadow stack to call the\nget_overflow_stack() to get the overflow stack. However, there's\na race here if two or more harts use the same shadow stack at the same\ntime.\n\nTo solve this race, we introduce spin_shadow_stack atomic var, which\nwill be swap between its own address and 0 in atomic way, when the\nvar is set, it means the shadow_stack is being used; when the var\nis cleared, it means the shadow_stack isn't being used.\n\n[Palmer: Add AQ to the swap, and also some comments.]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e1864332fbc1b993659eab7974da9fe8bf8c128","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/879fabc5a95401d9bce357e4b1d24ae4a360a81f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac00301adb19df54f2eae1efc4bad7447c0156ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49002","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.853","lastModified":"2024-10-21T20:15:11.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix PCI device refcount leak in dmar_dev_scope_init()\n\nfor_each_pci_dev() is implemented by pci_get_device(). The comment of\npci_get_device() says that it will increase the reference count for the\nreturned pci_dev and also decrease the reference count for the input\npci_dev @from if it is not NULL.\n\nIf we break for_each_pci_dev() loop with pdev not NULL, we need to call\npci_dev_put() to decrease the reference count. Add the missing\npci_dev_put() for the error path to avoid reference count leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a8f7b90681472948de172dbbf5a54cd342870aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bedbbd782ebbe7287231fea862c158d4f08a9e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71c4a621985fc051ab86d3a86c749069a993fcb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/876d7bfb89273997056220029ff12b1c2cc4691d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5c65cd56aed027f8a97fda8b691caaeb66d115e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdb613ef179ad4bb9d56a2533e9b30e434f1dfb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbdd83bd2fd67142b03ce9dbdd1eab322ff7321f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d47bc9d7bcdbb9adc9703513d964b514fee5b0bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49003","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.920","lastModified":"2024-10-21T20:15:11.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: fix SRCU protection of nvme_ns_head list\n\nWalking the nvme_ns_head siblings list is protected by the head's srcu\nin nvme_ns_head_submit_bio() but not nvme_mpath_revalidate_paths().\nRemoving namespaces from the list also fails to synchronize the srcu.\nConcurrent scan work can therefore cause use-after-frees.\n\nHold the head's srcu lock in nvme_mpath_revalidate_paths() and\nsynchronize with the srcu, not the global RCU, in nvme_ns_remove().\n\nObserved the following panic when making NVMe\/RDMA connections\nwith native multipath on the Rocky Linux 8.6 kernel\n(it seems the upstream kernel has the same race condition).\nDisassembly shows the faulting instruction is cmp 0x50(%rdx),%rcx;\ncomputing capacity != get_capacity(ns->disk).\nAddress 0x50 is dereferenced because ns->disk is NULL.\nThe NULL disk appears to be the result of concurrent scan work\nfreeing the namespace (note the log line in the middle of the panic).\n\n[37314.206036] BUG: unable to handle kernel NULL pointer dereference at 0000000000000050\n[37314.206036] nvme0n3: detected capacity change from 0 to 11811160064\n[37314.299753] PGD 0 P4D 0\n[37314.299756] Oops: 0000 [#1] SMP PTI\n[37314.299759] CPU: 29 PID: 322046 Comm: kworker\/u98:3 Kdump: loaded Tainted: G        W      X --------- -  - 4.18.0-372.32.1.el8test86.x86_64 #1\n[37314.299762] Hardware name: Dell Inc. PowerEdge R720\/0JP31P, BIOS 2.7.0 05\/23\/2018\n[37314.299763] Workqueue: nvme-wq nvme_scan_work [nvme_core]\n[37314.299783] RIP: 0010:nvme_mpath_revalidate_paths+0x26\/0xb0 [nvme_core]\n[37314.299790] Code: 1f 44 00 00 66 66 66 66 90 55 53 48 8b 5f 50 48 8b 83 c8 c9 00 00 48 8b 13 48 8b 48 50 48 39 d3 74 20 48 8d 42 d0 48 8b 50 20 <48> 3b 4a 50 74 05 f0 80 60 70 ef 48 8b 50 30 48 8d 42 d0 48 39 d3\n[37315.058803] RSP: 0018:ffffabe28f913d10 EFLAGS: 00010202\n[37315.121316] RAX: ffff927a077da800 RBX: ffff92991dd70000 RCX: 0000000001600000\n[37315.206704] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff92991b719800\n[37315.292106] RBP: ffff929a6b70c000 R08: 000000010234cd4a R09: c0000000ffff7fff\n[37315.377501] R10: 0000000000000001 R11: ffffabe28f913a30 R12: 0000000000000000\n[37315.462889] R13: ffff92992716600c R14: ffff929964e6e030 R15: ffff92991dd70000\n[37315.548286] FS:  0000000000000000(0000) GS:ffff92b87fb80000(0000) knlGS:0000000000000000\n[37315.645111] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[37315.713871] CR2: 0000000000000050 CR3: 0000002208810006 CR4: 00000000000606e0\n[37315.799267] Call Trace:\n[37315.828515]  nvme_update_ns_info+0x1ac\/0x250 [nvme_core]\n[37315.892075]  nvme_validate_or_alloc_ns+0x2ff\/0xa00 [nvme_core]\n[37315.961871]  ? __blk_mq_free_request+0x6b\/0x90\n[37316.015021]  nvme_scan_work+0x151\/0x240 [nvme_core]\n[37316.073371]  process_one_work+0x1a7\/0x360\n[37316.121318]  ? create_worker+0x1a0\/0x1a0\n[37316.168227]  worker_thread+0x30\/0x390\n[37316.212024]  ? create_worker+0x1a0\/0x1a0\n[37316.258939]  kthread+0x10a\/0x120\n[37316.297557]  ? set_kthread_struct+0x50\/0x50\n[37316.347590]  ret_from_fork+0x35\/0x40\n[37316.390360] Modules linked in: nvme_rdma nvme_tcp(X) nvme_fabrics nvme_core netconsole iscsi_tcp libiscsi_tcp dm_queue_length dm_service_time nf_conntrack_netlink br_netfilter bridge stp llc overlay nft_chain_nat ipt_MASQUERADE nf_nat xt_addrtype xt_CT nft_counter xt_state xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xt_comment xt_multiport nft_compat nf_tables libcrc32c nfnetlink dm_multipath tg3 rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_core_mod ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm ib_ipoib iw_cm ib_cm intel_rapl_msr iTCO_wdt iTCO_vendor_support dcdbas intel_rapl_common sb_edac x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel ipmi_ssif kvm irqbypass crct10dif_pclmul crc32_pclmul mlx5_ib ghash_clmulni_intel ib_uverbs rapl intel_cstate intel_uncore ib_core ipmi_si joydev mei_me pcspkr ipmi_devintf mei lpc_ich wmi ipmi_msghandler acpi_power_meter ex\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b566d09ab1b975566a53f9c5466ee260d087582","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/787d81d4eb150e443e5d1276c6e8f03cfecc2302","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/899d2a05dc14733cfba6224083c6b0dd5a738590","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49004","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:11.990","lastModified":"2024-10-21T20:15:11.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Sync efi page table's kernel mappings before switching\n\nThe EFI page table is initially created as a copy of the kernel page table.\nWith VMAP_STACK enabled, kernel stacks are allocated in the vmalloc area:\nif the stack is allocated in a new PGD (one that was not present at the\nmoment of the efi page table creation or not synced in a previous vmalloc\nfault), the kernel will take a trap when switching to the efi page table\nwhen the vmalloc kernel stack is accessed, resulting in a kernel panic.\n\nFix that by updating the efi kernel mappings before switching to the efi\npage table."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f105a742725a1b78766a55169f1d827732e62b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96f479383d92944406d4b3f2bc03c2f640def9f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa7a7d185ef380546b4b1fed6f84f31dbae8cec7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49005","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.040","lastModified":"2024-10-21T20:15:12.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ops: Fix bounds check for _sx controls\n\nFor _sx controls the semantics of the max field is not the usual one, max\nis the number of steps rather than the maximum value. This means that our\ncheck in snd_soc_put_volsw_sx() needs to just check against the maximum\nvalue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/325d94d16e3131b54bdf07356e4cd855e0d853fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46bab25cc0230df60d1c02b651cc5640a14b08df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a95a49f26308782b4056401989ecd7768fda8fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/698813ba8c580efb356ace8dbf55f61dac6063a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73dce3c1d48c4662bdf3ccbde1492c2cb4bfd8ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98b15c706644bebc19d2e77ccc360cc51444f6d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b50c9641897274c3faef5f95ac852f54b94be2e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e46adadf19248d59af3aa6bc52e09115bf479bf7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49006","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.103","lastModified":"2024-10-21T20:15:12.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Free buffers when a used dynamic event is removed\n\nAfter 65536 dynamic events have been added and removed, the \"type\" field\nof the event then uses the first type number that is available (not\ncurrently used by other events). A type number is the identifier of the\nbinary blobs in the tracing ring buffer (known as events) to map them to\nlogic that can parse the binary blob.\n\nThe issue is that if a dynamic event (like a kprobe event) is traced and\nis in the ring buffer, and then that event is removed (because it is\ndynamic, which means it can be created and destroyed), if another dynamic\nevent is created that has the same number that new event's logic on\nparsing the binary blob will be used.\n\nTo show how this can be an issue, the following can crash the kernel:\n\n # cd \/sys\/kernel\/tracing\n # for i in `seq 65536`; do\n     echo 'p:kprobes\/foo do_sys_openat2 $arg1:u32' > kprobe_events\n # done\n\nFor every iteration of the above, the writing to the kprobe_events will\nremove the old event and create a new one (with the same format) and\nincrease the type number to the next available on until the type number\nreaches over 65535 which is the max number for the 16 bit type. After it\nreaches that number, the logic to allocate a new number simply looks for\nthe next available number. When an dynamic event is removed, that number\nis then available to be reused by the next dynamic event created. That is,\nonce the above reaches the max number, the number assigned to the event in\nthat loop will remain the same.\n\nNow that means deleting one dynamic event and created another will reuse\nthe previous events type number. This is where bad things can happen.\nAfter the above loop finishes, the kprobes\/foo event which reads the\ndo_sys_openat2 function call's first parameter as an integer.\n\n # echo 1 > kprobes\/foo\/enable\n # cat \/etc\/passwd > \/dev\/null\n # cat trace\n             cat-2211    [005] ....  2007.849603: foo: (do_sys_openat2+0x0\/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849620: foo: (do_sys_openat2+0x0\/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849838: foo: (do_sys_openat2+0x0\/0x130) arg1=4294967196\n             cat-2211    [005] ....  2007.849880: foo: (do_sys_openat2+0x0\/0x130) arg1=4294967196\n # echo 0 > kprobes\/foo\/enable\n\nNow if we delete the kprobe and create a new one that reads a string:\n\n # echo 'p:kprobes\/foo do_sys_openat2 +0($arg2):string' > kprobe_events\n\nAnd now we can the trace:\n\n # cat trace\n        sendmail-1942    [002] .....   530.136320: foo: (do_sys_openat2+0x0\/0x240) arg1=             cat-2046    [004] .....   530.930817: foo: (do_sys_openat2+0x0\/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.930961: foo: (do_sys_openat2+0x0\/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.934278: foo: (do_sys_openat2+0x0\/0x240) arg1=\"������������������������������������������������������������������������������������������������\"\n             cat-2046    [004] .....   530.934563: foo: (do_sys_openat2+0x0\/0x240) arg1=\"���������������������������������������\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1603feac154ff38514e8354e3079a455eb4801e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/417d5ea6e735e5d88ffb6c436cf2938f3f476dd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4313e5a613049dfc1819a6dfb5f94cf2caff9452","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be111ebd8868d4b7c041cb3c6102e1ae27d6dc1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c52d0c8c4f38f7580cff61c4dfe1034c580cedfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49007","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.197","lastModified":"2024-10-21T20:15:12.197","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix NULL pointer dereference in nilfs_palloc_commit_free_entry()\n\nSyzbot reported a null-ptr-deref bug:\n\n NILFS (loop0): segctord starting. Construction interval = 5 seconds, CP\n frequency < 30 seconds\n general protection fault, probably for non-canonical address\n 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN\n KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n CPU: 1 PID: 3603 Comm: segctord Not tainted\n 6.1.0-rc2-syzkaller-00105-gb229b6ca5abb #0\n Hardware name: Google Compute Engine\/Google Compute Engine, BIOS Google\n 10\/11\/2022\n RIP: 0010:nilfs_palloc_commit_free_entry+0xe5\/0x6b0\n fs\/nilfs2\/alloc.c:608\n Code: 00 00 00 00 fc ff df 80 3c 02 00 0f 85 cd 05 00 00 48 b8 00 00 00\n 00 00 fc ff df 4c 8b 73 08 49 8d 7e 10 48 89 fa 48 c1 ea 03 <80> 3c 02\n 00 0f 85 26 05 00 00 49 8b 46 10 be a6 00 00 00 48 c7 c7\n RSP: 0018:ffffc90003dff830 EFLAGS: 00010212\n RAX: dffffc0000000000 RBX: ffff88802594e218 RCX: 000000000000000d\n RDX: 0000000000000002 RSI: 0000000000002000 RDI: 0000000000000010\n RBP: ffff888071880222 R08: 0000000000000005 R09: 000000000000003f\n R10: 000000000000000d R11: 0000000000000000 R12: ffff888071880158\n R13: ffff88802594e220 R14: 0000000000000000 R15: 0000000000000004\n FS:  0000000000000000(0000) GS:ffff8880b9b00000(0000)\n knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007fb1c08316a8 CR3: 0000000018560000 CR4: 0000000000350ee0\n Call Trace:\n  <TASK>\n  nilfs_dat_commit_free fs\/nilfs2\/dat.c:114 [inline]\n  nilfs_dat_commit_end+0x464\/0x5f0 fs\/nilfs2\/dat.c:193\n  nilfs_dat_commit_update+0x26\/0x40 fs\/nilfs2\/dat.c:236\n  nilfs_btree_commit_update_v+0x87\/0x4a0 fs\/nilfs2\/btree.c:1940\n  nilfs_btree_commit_propagate_v fs\/nilfs2\/btree.c:2016 [inline]\n  nilfs_btree_propagate_v fs\/nilfs2\/btree.c:2046 [inline]\n  nilfs_btree_propagate+0xa00\/0xd60 fs\/nilfs2\/btree.c:2088\n  nilfs_bmap_propagate+0x73\/0x170 fs\/nilfs2\/bmap.c:337\n  nilfs_collect_file_data+0x45\/0xd0 fs\/nilfs2\/segment.c:568\n  nilfs_segctor_apply_buffers+0x14a\/0x470 fs\/nilfs2\/segment.c:1018\n  nilfs_segctor_scan_file+0x3f4\/0x6f0 fs\/nilfs2\/segment.c:1067\n  nilfs_segctor_collect_blocks fs\/nilfs2\/segment.c:1197 [inline]\n  nilfs_segctor_collect fs\/nilfs2\/segment.c:1503 [inline]\n  nilfs_segctor_do_construct+0x12fc\/0x6af0 fs\/nilfs2\/segment.c:2045\n  nilfs_segctor_construct+0x8e3\/0xb30 fs\/nilfs2\/segment.c:2379\n  nilfs_segctor_thread_construct fs\/nilfs2\/segment.c:2487 [inline]\n  nilfs_segctor_thread+0x3c3\/0xf30 fs\/nilfs2\/segment.c:2570\n  kthread+0x2e4\/0x3a0 kernel\/kthread.c:376\n  ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:306\n  <\/TASK>\n ...\n\nIf DAT metadata file is corrupted on disk, there is a case where\nreq->pr_desc_bh is NULL and blocknr is 0 at nilfs_dat_commit_end() during\na b-tree operation that cascadingly updates ancestor nodes of the b-tree,\nbecause nilfs_dat_commit_alloc() for a lower level block can initialize\nthe blocknr on the same DAT entry between nilfs_dat_prepare_end() and\nnilfs_dat_commit_end().\n\nIf this happens, nilfs_dat_commit_end() calls nilfs_dat_commit_free()\nwithout valid buffer heads in req->pr_desc_bh and req->pr_bitmap_bh, and\ncauses the NULL pointer dereference above in\nnilfs_palloc_commit_free_entry() function, which leads to a crash.\n\nFix this by adding a NULL check on req->pr_desc_bh and req->pr_bitmap_bh\nbefore nilfs_palloc_commit_free_entry() in nilfs_dat_commit_free().\n\nThis also calls nilfs_error() in that case to notify that there is a fatal\nflaw in the filesystem metadata and prevent further operations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/165c7a3b27a3857ebf57f626b9f38b48b6792e68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f2c59506ae39496588ceb8b88bdbdbaed895d63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33021419fd81efd3d729a7f19341ba4b98fe66ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/381b84f60e549ea98cec4666c6c728b1b3318756","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a130b72e6bd1fb07fc3cde839dc6fb53da76f07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc3fd3293887b4cf84a9109700faeb82de533c89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e858917ab785afe83c14f5ac141301216ccda847","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0a0ccda18d6fd826d7c7e7ad48a6ed61c20f8b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49008","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.290","lastModified":"2024-10-21T20:15:12.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: can327: can327_feed_frame_to_netdev(): fix potential skb leak when netdev is down\n\nIn can327_feed_frame_to_netdev(), it did not free the skb when netdev\nis down, and all callers of can327_feed_frame_to_netdev() did not free\nallocated skb too. That would trigger skb leak.\n\nFix it by adding kfree_skb() in can327_feed_frame_to_netdev() when netdev\nis down. Not tested, just compiled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/797b1d9fc0e1f4351e4ad49b078c1a3cdc0d4a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fa452cfafed521aaf5a18c71003fe24b1ee6141","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49009","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.373","lastModified":"2024-10-21T20:15:12.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (asus-ec-sensors) Add checks for devm_kcalloc\n\nAs the devm_kcalloc may return NULL, the return value needs to be checked\nto avoid NULL poineter dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9bdc112be727cf1ba65be79541147f960c3349d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a41ec58ac352fd176d5808af847663dc890f6053","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49010","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.433","lastModified":"2024-10-21T20:15:12.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (coretemp) Check for null before removing sysfs attrs\n\nIf coretemp_add_core() gets an error then pdata->core_data[indx]\nis already NULL and has been kfreed. Don't pass that to\nsysfs_remove_group() as that will crash in sysfs_remove_group().\n\n[Shortened for readability]\n[91854.020159] sysfs: cannot create duplicate filename '\/devices\/platform\/coretemp.0\/hwmon\/hwmon2\/temp20_label'\n<cpu offline>\n[91855.126115] BUG: kernel NULL pointer dereference, address: 0000000000000188\n[91855.165103] #PF: supervisor read access in kernel mode\n[91855.194506] #PF: error_code(0x0000) - not-present page\n[91855.224445] PGD 0 P4D 0\n[91855.238508] Oops: 0000 [#1] PREEMPT SMP PTI\n...\n[91855.342716] RIP: 0010:sysfs_remove_group+0xc\/0x80\n...\n[91855.796571] Call Trace:\n[91855.810524]  coretemp_cpu_offline+0x12b\/0x1dd [coretemp]\n[91855.841738]  ? coretemp_cpu_online+0x180\/0x180 [coretemp]\n[91855.871107]  cpuhp_invoke_callback+0x105\/0x4b0\n[91855.893432]  cpuhp_thread_fun+0x8e\/0x150\n...\n\nFix this by checking for NULL first."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/070d5ea4a0592a37ad96ce7f7b6b024f90bb009f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/280110db1a7d62ad635b103bafc3ae96e8bef75c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7692700ac818866d138a8de555130a6e70e6ac16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89eecabe6a47403237f45aafd7d24f93cb973653","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a89ff5f5cc64b9fe7a992cf56988fd36f56ca82a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae6c8b6e5d5628df1c475c0a8fca1465e205c95b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f06e0cd01eab954bd5f2190c9faa79bb5357e05b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb503d077ff7b43913503eaf72995d1239028b99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49011","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.500","lastModified":"2024-10-21T20:15:12.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (coretemp) fix pci device refcount leak in nv1a_ram_new()\n\nAs comment of pci_get_domain_bus_and_slot() says, it returns\na pci device with refcount increment, when finish using it,\nthe caller must decrement the reference count by calling\npci_dev_put(). So call it after using to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd1da5a15eeecb2fe4cf131b3216fb455af783c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f74cffc7c85f770b1b1833dccb03b8cde3be102","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e035d5a2a6b907cfce9a80c5f442c2e459cd34e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dec14537c5906b8bf40fd6fd6d9c3850f8df11d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb75a0d1223d43f97089841aecb28a9b4de687a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c40db1e5f316792b557d2be37e447c20d9ac4635","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea5844f946b1ec5c0b7c115cd7684f34fd48021b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f598da27acbeee414679cacd14294db3e273e3d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49012","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.573","lastModified":"2024-10-21T20:15:12.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix server->active leak in afs_put_server\n\nThe atomic_read was accidentally replaced with atomic_inc_return,\nwhich prevents the server from getting cleaned up and causes rmmod\nto hang with a warning:\n\n    Can't purge s=00000001"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c5078548c29c735f71b05053659c0cb294e738ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef4d3ea40565a781c25847e9cb96c1bd9f462bc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49013","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.637","lastModified":"2024-10-21T20:15:12.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: fix memory leak in sctp_stream_outq_migrate()\n\nWhen sctp_stream_outq_migrate() is called to release stream out resources,\nthe memory pointed to by prio_head in stream out is not released.\n\nThe memory leak information is as follows:\n unreferenced object 0xffff88801fe79f80 (size 64):\n   comm \"sctp_repo\", pid 7957, jiffies 4294951704 (age 36.480s)\n   hex dump (first 32 bytes):\n     80 9f e7 1f 80 88 ff ff 80 9f e7 1f 80 88 ff ff  ................\n     90 9f e7 1f 80 88 ff ff 90 9f e7 1f 80 88 ff ff  ................\n   backtrace:\n     [<ffffffff81b215c6>] kmalloc_trace+0x26\/0x60\n     [<ffffffff88ae517c>] sctp_sched_prio_set+0x4cc\/0x770\n     [<ffffffff88ad64f2>] sctp_stream_init_ext+0xd2\/0x1b0\n     [<ffffffff88aa2604>] sctp_sendmsg_to_asoc+0x1614\/0x1a30\n     [<ffffffff88ab7ff1>] sctp_sendmsg+0xda1\/0x1ef0\n     [<ffffffff87f765ed>] inet_sendmsg+0x9d\/0xe0\n     [<ffffffff8754b5b3>] sock_sendmsg+0xd3\/0x120\n     [<ffffffff8755446a>] __sys_sendto+0x23a\/0x340\n     [<ffffffff87554651>] __x64_sys_sendto+0xe1\/0x1b0\n     [<ffffffff89978b49>] do_syscall_64+0x39\/0xb0\n     [<ffffffff89a0008b>] entry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dfb9a566327182387c90100ea54d8426cee8c67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/176ee6c673ccd118e9392fd2dbb165423bdb99ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ed7bfc79542119ac0a9e1ce8a2a5285e43433e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7555681e50bdebed2c40ff7404ee73c2e932993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa20f88271259d42ebe66f0a8c4c20199e888c99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49014","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.707","lastModified":"2024-10-21T20:15:12.707","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: Fix use-after-free in tun_detach()\n\nsyzbot reported use-after-free in tun_detach() [1].  This causes call\ntrace like below:\n\n==================================================================\nBUG: KASAN: use-after-free in notifier_call_chain+0x1ee\/0x200 kernel\/notifier.c:75\nRead of size 8 at addr ffff88807324e2a8 by task syz-executor.0\/3673\n\nCPU: 0 PID: 3673 Comm: syz-executor.0 Not tainted 6.1.0-rc5-syzkaller-00044-gcc675d22e422 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/26\/2022\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd1\/0x138 lib\/dump_stack.c:106\n print_address_description mm\/kasan\/report.c:284 [inline]\n print_report+0x15e\/0x461 mm\/kasan\/report.c:395\n kasan_report+0xbf\/0x1f0 mm\/kasan\/report.c:495\n notifier_call_chain+0x1ee\/0x200 kernel\/notifier.c:75\n call_netdevice_notifiers_info+0x86\/0x130 net\/core\/dev.c:1942\n call_netdevice_notifiers_extack net\/core\/dev.c:1983 [inline]\n call_netdevice_notifiers net\/core\/dev.c:1997 [inline]\n netdev_wait_allrefs_any net\/core\/dev.c:10237 [inline]\n netdev_run_todo+0xbc6\/0x1100 net\/core\/dev.c:10351\n tun_detach drivers\/net\/tun.c:704 [inline]\n tun_chr_close+0xe4\/0x190 drivers\/net\/tun.c:3467\n __fput+0x27c\/0xa90 fs\/file_table.c:320\n task_work_run+0x16f\/0x270 kernel\/task_work.c:179\n exit_task_work include\/linux\/task_work.h:38 [inline]\n do_exit+0xb3d\/0x2a30 kernel\/exit.c:820\n do_group_exit+0xd4\/0x2a0 kernel\/exit.c:950\n get_signal+0x21b1\/0x2440 kernel\/signal.c:2858\n arch_do_signal_or_restart+0x86\/0x2300 arch\/x86\/kernel\/signal.c:869\n exit_to_user_mode_loop kernel\/entry\/common.c:168 [inline]\n exit_to_user_mode_prepare+0x15f\/0x250 kernel\/entry\/common.c:203\n __syscall_exit_to_user_mode_work kernel\/entry\/common.c:285 [inline]\n syscall_exit_to_user_mode+0x1d\/0x50 kernel\/entry\/common.c:296\n do_syscall_64+0x46\/0xb0 arch\/x86\/entry\/common.c:86\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe cause of the issue is that sock_put() from __tun_detach() drops\nlast reference count for struct net, and then notifier_call_chain()\nfrom netdev_state_change() accesses that struct net.\n\nThis patch fixes the issue by calling sock_put() from tun_detach()\nafter all necessary accesses for the struct net has done."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04b995e963229501401810dab89dc73e7f12d054","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16c244bc65d1175775325ec0489a5a5c830e02c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f23f1890d91812c35d32eab1b49621b6d32dc7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cde8da2d814a3b7b176db81922d4ddaad7c0f0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5daadc86f27ea4d691e2131c04310d0418c6cd12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f442e1d403e0496bacb74a58e2be7f500695e6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49015","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.787","lastModified":"2024-10-21T20:15:12.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hsr: Fix potential use-after-free\n\nThe skb is delivered to netif_rx() which may free it, after calling this,\ndereferencing skb may trigger use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b351609af4fdbc23f79ab2b12748f4403ea9af4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53a62c5efe91665f7a41fad0f888a96f94dc59eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ca81a161e406834a1fdc405fc83a572bd14b8d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e177d32442b7ed08a9fa61b61724abc548cb248","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8393ce5040803666bfa26a3a7bf41e44fab0ace9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b35d899854d5d5d58eb7d7e7c0f61afc60d3a9e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dca370e575d9b6c983f5015e8dc035e23e219ee6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3add2b8cf620966de3ebfa07679ca12d33ec26f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49016","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.840","lastModified":"2024-10-21T20:15:12.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdiobus: fix unbalanced node reference count\n\nI got the following report while doing device(mscc-miim) load test\nwith CONFIG_OF_UNITTEST and CONFIG_OF_DYNAMIC enabled:\n\n  OF: ERROR: memory leak, expected refcount 1 instead of 2,\n  of_node_get()\/of_node_put() unbalanced - destroy cset entry:\n  attach overlay node \/spi\/soc@0\/mdio@7107009c\/ethernet-phy@0\n\nIf the 'fwnode' is not an acpi node, the refcount is get in\nfwnode_mdiobus_phy_device_register(), but it has never been\nput when the device is freed in the normal path. So call\nfwnode_handle_put() in phy_device_release() to avoid leak.\n\nIf it's an acpi node, it has never been get, but it's put\nin the error path, so call fwnode_handle_get() before\nphy_device_register() to keep get\/put operation balanced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2708b357440427d6a9fee667eb7b8307f4625adc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/543d917f691ab06885ee779c862065899eaa4251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdde1560118f82498fc9e9a7c1ef7f0ef7755891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49017","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.910","lastModified":"2024-10-21T20:15:12.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: re-fetch skb cb after tipc_msg_validate\n\nAs the call trace shows, the original skb was freed in tipc_msg_validate(),\nand dereferencing the old skb cb would cause an use-after-free crash.\n\n  BUG: KASAN: use-after-free in tipc_crypto_rcv_complete+0x1835\/0x2240 [tipc]\n  Call Trace:\n   <IRQ>\n   tipc_crypto_rcv_complete+0x1835\/0x2240 [tipc]\n   tipc_crypto_rcv+0xd32\/0x1ec0 [tipc]\n   tipc_rcv+0x744\/0x1150 [tipc]\n  ...\n  Allocated by task 47078:\n   kmem_cache_alloc_node+0x158\/0x4d0\n   __alloc_skb+0x1c1\/0x270\n   tipc_buf_acquire+0x1e\/0xe0 [tipc]\n   tipc_msg_create+0x33\/0x1c0 [tipc]\n   tipc_link_build_proto_msg+0x38a\/0x2100 [tipc]\n   tipc_link_timeout+0x8b8\/0xef0 [tipc]\n   tipc_node_timeout+0x2a1\/0x960 [tipc]\n   call_timer_fn+0x2d\/0x1c0\n  ...\n  Freed by task 47078:\n   tipc_msg_validate+0x7b\/0x440 [tipc]\n   tipc_crypto_rcv_complete+0x4b5\/0x2240 [tipc]\n   tipc_crypto_rcv+0xd32\/0x1ec0 [tipc]\n   tipc_rcv+0x744\/0x1150 [tipc]\n\nThis patch fixes it by re-fetching the skb cb from the new allocated skb\nafter calling tipc_msg_validate()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1daec0815655e110c6f206c5e777a4af8168ff58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3067bc61fcfe3081bf4807ce65560f499e895e77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1ba595e35aa3afbe417ff0af353afb9f65559c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e128190adb2edfd5042105b5d1ed4553f295f5ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49018","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:12.973","lastModified":"2024-10-21T20:15:12.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix sleep in atomic at close time\n\nMatt reported a splat at msk close time:\n\n    BUG: sleeping function called from invalid context at net\/mptcp\/protocol.c:2877\n    in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 155, name: packetdrill\n    preempt_count: 201, expected: 0\n    RCU nest depth: 0, expected: 0\n    4 locks held by packetdrill\/155:\n    #0: ffff888001536990 (&sb->s_type->i_mutex_key#6){+.+.}-{3:3}, at: __sock_release (net\/socket.c:650)\n    #1: ffff88800b498130 (sk_lock-AF_INET){+.+.}-{0:0}, at: mptcp_close (net\/mptcp\/protocol.c:2973)\n    #2: ffff88800b49a130 (sk_lock-AF_INET\/1){+.+.}-{0:0}, at: __mptcp_close_ssk (net\/mptcp\/protocol.c:2363)\n    #3: ffff88800b49a0b0 (slock-AF_INET){+...}-{2:2}, at: __lock_sock_fast (include\/net\/sock.h:1820)\n    Preemption disabled at:\n    0x0\n    CPU: 1 PID: 155 Comm: packetdrill Not tainted 6.1.0-rc5 #365\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n    Call Trace:\n    <TASK>\n    dump_stack_lvl (lib\/dump_stack.c:107 (discriminator 4))\n    __might_resched.cold (kernel\/sched\/core.c:9891)\n    __mptcp_destroy_sock (include\/linux\/kernel.h:110)\n    __mptcp_close (net\/mptcp\/protocol.c:2959)\n    mptcp_subflow_queue_clean (include\/net\/sock.h:1777)\n    __mptcp_close_ssk (net\/mptcp\/protocol.c:2363)\n    mptcp_destroy_common (net\/mptcp\/protocol.c:3170)\n    mptcp_destroy (include\/net\/sock.h:1495)\n    __mptcp_destroy_sock (net\/mptcp\/protocol.c:2886)\n    __mptcp_close (net\/mptcp\/protocol.c:2959)\n    mptcp_close (net\/mptcp\/protocol.c:2974)\n    inet_release (net\/ipv4\/af_inet.c:432)\n    __sock_release (net\/socket.c:651)\n    sock_close (net\/socket.c:1367)\n    __fput (fs\/file_table.c:320)\n    task_work_run (kernel\/task_work.c:181 (discriminator 1))\n    exit_to_user_mode_prepare (include\/linux\/resume_user_mode.h:49)\n    syscall_exit_to_user_mode (kernel\/entry\/common.c:130)\n    do_syscall_64 (arch\/x86\/entry\/common.c:87)\n    entry_SYSCALL_64_after_hwframe (arch\/x86\/entry\/entry_64.S:120)\n\nWe can't call mptcp_close under the 'fast' socket lock variant, replace\nit with a sock_lock_nested() as the relevant code is already under the\nlistening msk socket lock protection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f166651d03b5484fa179817ba8ad4899a5a6ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8e6c5500dbf0f3e87aace90d4beba6ae928e866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49019","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.040","lastModified":"2024-10-21T20:15:13.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: nixge: fix NULL dereference\n\nIn function nixge_hw_dma_bd_release() dereference of NULL pointer\npriv->rx_bd_v is possible for the case of its allocation failure in\nnixge_hw_dma_bd_init().\n\nMove for() loop with priv->rx_bd_v dereference under the check for\nits validity.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45752af0247589e6d3dede577415bfe117b4392c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80e82f7b440b65cf131dce10f487dc73a7046e6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/910c0264b64ef2dad8887714a7c56c93e39a0ed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9256db4e45e8b497b0e993cc3ed4ad08eb2389b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c584d6d9cfb935dce8fc81a4c26debac0a3049b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49020","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.100","lastModified":"2024-10-21T20:15:13.100","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/9p: Fix a potential socket leak in p9_socket_open\n\nBoth p9_fd_create_tcp() and p9_fd_create_unix() will call\np9_socket_open(). If the creation of p9_trans_fd fails,\np9_fd_create_tcp() and p9_fd_create_unix() will return an\nerror directly instead of releasing the cscoket, which will\nresult in a socket leak.\n\nThis patch adds sock_release() to fix the leak issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0396227f4daf4792a6a8aaa3b7771dc25c4cd443","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d24d91b9f44620824fc37b766f7cae00ca32748","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8782b32ef867de7981bbe9e86ecb90e92e8780bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b14bd0b500aec1458b51cb621c8e5fab3304260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa08323fe18cb7cf95317ffa2d54ca1de8e74ebd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcc14cfd7debe11b825cb077e75d91d2575b4cb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ded893965b895b2dccd3d1436d8d3daffa23ea64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e01c1542379fb395e7da53706df598f38905dfbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49021","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.163","lastModified":"2024-10-21T20:15:13.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: fix null-ptr-deref while probe() failed\n\nI got a null-ptr-deref report as following when doing fault injection test:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000058\nOops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 1 PID: 253 Comm: 507-spi-dm9051 Tainted: G    B            N 6.1.0-rc3+\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04\/01\/2014\nRIP: 0010:klist_put+0x2d\/0xd0\nCall Trace:\n <TASK>\n klist_remove+0xf1\/0x1c0\n device_release_driver_internal+0x23e\/0x2d0\n bus_remove_device+0x1bd\/0x240\n device_del+0x357\/0x770\n phy_device_remove+0x11\/0x30\n mdiobus_unregister+0xa5\/0x140\n release_nodes+0x6a\/0xa0\n devres_release_all+0xf8\/0x150\n device_unbind_cleanup+0x19\/0xd0\n\n\/\/probe path:\nphy_device_register()\n  device_add()\n\nphy_connect\n  phy_attach_direct() \/\/set device driver\n    probe() \/\/it's failed, driver is not bound\n    device_bind_driver() \/\/ probe failed, it's not called\n\n\/\/remove path:\nphy_device_remove()\n  device_del()\n    device_release_driver_internal()\n      __device_release_driver() \/\/dev->drv is not NULL\n        klist_remove() <- knode_driver is not added yet, cause null-ptr-deref\n\nIn phy_attach_direct(), after setting the 'dev->driver', probe() fails,\ndevice_bind_driver() is not called, so the knode_driver->n_klist is not\nset, then it causes null-ptr-deref in __device_release_driver() while\ndeleting device. Fix this by setting dev->driver to NULL in the error\npath in phy_attach_direct()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0744c7be4de564db03e24527b2e096b7e0e20972","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/369eb2c9f1f72adbe91e0ea8efb130f0a2ba11a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e21f85d87c836462bb52ef2078ea561260935c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51d7f6b20fae8bae64ad1136f1e30d1fd5ba78f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7730904f50c7187dd16c76949efb56b5fb55cd57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aaafe0f71314f46a066382a047ba8bb3840d273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaa5722549ac2604ffa56c2e946acc83226f130c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe6bc99c27c21348f548966118867ed26a9a372c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49022","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.233","lastModified":"2024-10-21T20:15:13.233","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac8021: fix possible oob access in ieee80211_get_rate_duration\n\nFix possible out-of-bound access in ieee80211_get_rate_duration routine\nas reported by the following UBSAN report:\n\nUBSAN: array-index-out-of-bounds in net\/mac80211\/airtime.c:455:47\nindex 15 is out of range for type 'u16 [12]'\nCPU: 2 PID: 217 Comm: kworker\/u32:10 Not tainted 6.1.0-060100rc3-generic\nHardware name: Acer Aspire TC-281\/Aspire TC-281, BIOS R01-A2 07\/18\/2017\nWorkqueue: mt76 mt76u_tx_status_data [mt76_usb]\nCall Trace:\n <TASK>\n show_stack+0x4e\/0x61\n dump_stack_lvl+0x4a\/0x6f\n dump_stack+0x10\/0x18\n ubsan_epilogue+0x9\/0x43\n __ubsan_handle_out_of_bounds.cold+0x42\/0x47\nieee80211_get_rate_duration.constprop.0+0x22f\/0x2a0 [mac80211]\n ? ieee80211_tx_status_ext+0x32e\/0x640 [mac80211]\n ieee80211_calc_rx_airtime+0xda\/0x120 [mac80211]\n ieee80211_calc_tx_airtime+0xb4\/0x100 [mac80211]\n mt76x02_send_tx_status+0x266\/0x480 [mt76x02_lib]\n mt76x02_tx_status_data+0x52\/0x80 [mt76x02_lib]\n mt76u_tx_status_data+0x67\/0xd0 [mt76_usb]\n process_one_work+0x225\/0x400\n worker_thread+0x50\/0x3e0\n ? process_one_work+0x400\/0x400\n kthread+0xe9\/0x110\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x22\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0184ede0ec61b9cd075babfaa45081b1bf322234","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e8f7abcc3473bc9603323803aeaed4ffcc3a2ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59b54f0563b6546c94bdb6823d3b382c75407019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0fcad4c7201ecfaa17357f4ce0c50b4708df22d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49023","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.290","lastModified":"2024-10-21T20:15:13.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix buffer overflow in elem comparison\n\nFor vendor elements, the code here assumes that 5 octets\nare present without checking. Since the element itself is\nalready checked to fit, we only need to check the length."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/391cb872553627bdcf236c03ee7d5adb275e37e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88a6fe3707888bd1893e9741157a7035c4159ab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e6b79a3cd17620d467311b30d56f2648f6880aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f16b5c82a025cd4c864737409234ddc44fb166a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5c2ec288a865dbe3706b09bed12302e9f6d696b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49024","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.367","lastModified":"2024-10-21T20:15:13.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: pci: add missing m_can_class_free_dev() in probe\/remove methods\n\nIn m_can_pci_remove() and error handling path of m_can_pci_probe(),\nm_can_class_free_dev() should be called to free resource allocated by\nm_can_class_allocate_dev(), otherwise there will be memleak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bbb88651ef6b7fbb1bf75ec7ba69add632e834b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1eca1d4cc21b6d0fc5f9a390339804c0afce9439","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea8dc27bb044e19868155e500ce397007be98656","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49025","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.427","lastModified":"2024-10-21T20:15:13.427","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix use-after-free when reverting termination table\n\nWhen having multiple dests with termination tables and second one\nor afterwards fails the driver reverts usage of term tables but\ndoesn't reset the assignment in attr->dests[num_vport_dests].termtbl\nwhich case a use-after-free when releasing the rule.\nFix by resetting the assignment of termtbl to null."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a2d73a77060c3cbdc6e801cd5d979d674cd404b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0d2f9d95d9fbe993f3c4bafb87d59897b0325aff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/372eb550faa0757349040fd43f59483cbfdb2c0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52c795af04441d76f565c4634f893e5b553df2ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6d2d26a49c3a9cd46b232975e45236304810904","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49026","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.490","lastModified":"2024-10-21T20:15:13.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ne100: Fix possible use after free in e100_xmit_prepare\n\nIn e100_xmit_prepare(), if we can't map the skb, then return -ENOMEM, so\ne100_xmit_frame() will return NETDEV_TX_BUSY and the upper layer will\nresend the skb. But the skb is already freed, which will cause UAF bug\nwhen the upper layer resends the skb.\n\nRemove the harmful free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45605c75c52c7ae7bfe902214343aabcfe5ba0ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fc27d22cdb9b1fcd754599d216a8992fed280cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b46f6144ab89d3d757ead940759c505091626a7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b775f37d943966f6f77dca402f5a9dedce502c25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49027","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.563","lastModified":"2024-10-21T20:15:13.563","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix error handling in iavf_init_module()\n\nThe iavf_init_module() won't destroy workqueue when pci_register_driver()\nfailed. Call destroy_workqueue() when pci_register_driver() failed to\nprevent the resource leak.\n\nSimilar to the handling of u132_hcd_init in commit f276e002793c\n(\"usb: u132-hcd: fix resource leak\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d9f5bd54b913018031c5b964fc1f9a31f5f6cb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/227d8d2f7f2278b8468c5531b0cd0f2a905b4486","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/971c55f0763b480e63ceb7a22beb19be2509e5ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd477b891a4fa084561234eed4afacb3001dd359","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49028","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.627","lastModified":"2024-10-21T20:15:13.627","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nixgbevf: Fix resource leak in ixgbevf_init_module()\n\nixgbevf_init_module() won't destroy the workqueue created by\ncreate_singlethread_workqueue() when pci_register_driver() failed. Add\ndestroy_workqueue() in fail path to prevent the resource leak.\n\nSimilar to the handling of u132_hcd_init in commit f276e002793c\n(\"usb: u132-hcd: fix resource leak\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7109e941099244cc876a4b3cb7a3ec79f104374a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cfa238a48f34038464b99d0b4825238c2687181","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c99671d4699dcf90d6939923c8fe8a8918e140b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f166c62cad798c53300b4b327e44300c73ec492d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49029","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.690","lastModified":"2024-10-21T20:15:13.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (ibmpex) Fix possible UAF when ibmpex_register_bmc() fails\n\nSmatch report warning as follows:\n\ndrivers\/hwmon\/ibmpex.c:509 ibmpex_register_bmc() warn:\n  '&data->list' not removed from list\n\nIf ibmpex_find_sensors() fails in ibmpex_register_bmc(), data will\nbe freed, but data->list will not be removed from driver_data.bmc_data,\nthen list traversal may cause UAF.\n\nFix by removeing it from driver_data.bmc_data before free()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24b9633f7db7f4809be7053df1d2e117e7c2de10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f6e81863747c0d7bc6a95ec51129900e71467a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/798198273bf86673b970b51acdb35e57f42b3fcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b2b67fe1339389e0bf3c37c7a677a004ac0e4e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90907cd4d11351ff76c9a447bcb5db0e264c47cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2a87785aab0dac190ac89be6a9ba955e2c634f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e65cfd1f9cd27d9c27ee5cb88128a9f79f25d863","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2a13196ad41c6c2ab058279dffe6c97292e753a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49030","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.747","lastModified":"2024-10-21T20:15:13.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlibbpf: Handle size overflow for ringbuf mmap\n\nThe maximum size of ringbuf is 2GB on x86-64 host, so 2 * max_entries\nwill overflow u32 when mapping producer page and data pages. Only\ncasting max_entries to size_t is not enough, because for 32-bits\napplication on 64-bits kernel the size of read-only mmap region\nalso could overflow size_t.\n\nSo fixing it by casting the size of read-only mmap region into a __u64\nand checking whether or not there will be overflow during mmap."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0140e079a42064680394fff1199a7b5483688dec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/535a25ab4f9a45f74ba38ab71de95e97474922ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a549ab6724520aa3c07f47e0eba820293551490","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927cbb478adf917e0a142b94baa37f06279cc466","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49031","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.807","lastModified":"2024-10-21T20:15:13.807","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: health: afe4403: Fix oob read in afe4403_read_raw\n\nKASAN report out-of-bounds read as follows:\n\nBUG: KASAN: global-out-of-bounds in afe4403_read_raw+0x42e\/0x4c0\nRead of size 4 at addr ffffffffc02ac638 by task cat\/279\n\nCall Trace:\n afe4403_read_raw\n iio_read_channel_info\n dev_attr_show\n\nThe buggy address belongs to the variable:\n afe4403_channel_leds+0x18\/0xffffffffffffe9e0\n\nThis issue can be reproduced by singe command:\n\n $ cat \/sys\/bus\/spi\/devices\/spi0.0\/iio\\:device0\/in_intensity6_raw\n\nThe array size of afe4403_channel_leds is less than channels, so access\nwith chan->address cause OOB read in afe4403_read_raw. Fix it by moving\naccess before use it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06c6ce21cec77dfa860d57e7a006000a57812efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d6a437064ffbe685c67ddb16dfc0946074c6c3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58143c1ed5882c138a3cd2251a336fc8755f23d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/726fa3e4ab97dcff1c745bdc4fb137366cb8d3df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98afcb5f3be645d330c74c5194ba0d80e26f95e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1756af172fb80a3edc143772d49e166ec691b6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9268df36818ee4eaaaeadc80009b442a5ca69c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e76a77aabef8989cbc0a8417af1aa040620867","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49032","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.877","lastModified":"2024-10-21T20:15:13.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: health: afe4404: Fix oob read in afe4404_[read|write]_raw\n\nKASAN report out-of-bounds read as follows:\n\nBUG: KASAN: global-out-of-bounds in afe4404_read_raw+0x2ce\/0x380\nRead of size 4 at addr ffffffffc00e4658 by task cat\/278\n\nCall Trace:\n afe4404_read_raw\n iio_read_channel_info\n dev_attr_show\n\nThe buggy address belongs to the variable:\n afe4404_channel_leds+0x18\/0xffffffffffffe9c0\n\nThis issue can be reproduce by singe command:\n\n $ cat \/sys\/bus\/i2c\/devices\/0-0058\/iio\\:device0\/in_intensity6_raw\n\nThe array size of afe4404_channel_leds and afe4404_channel_offdacs\nare less than channels, so access with chan->address cause OOB read\nin afe4404_[read|write]_raw. Fix it by moving access before use them."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/113c08030a89aaf406f8a1d4549d758a67c2afba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f566b626029ca8598d48e5074e56bb37399ca1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eb114f55b37dbc0487aa9c1913b81bb7837f1c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68de7da092f38395dde523f2e5db26eba6c23e28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d45d9f45e7b1365fd0d9bf14680d6d5082a590d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5575041ec15310bdc50c42b8b22118cc900226e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7419fc42afc035f6b29ce713e17dcd2000c833f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc92d9e3de0b2d30a3ccc08048a5fad533e4672b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49033","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:13.943","lastModified":"2024-10-21T20:15:13.943","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix sleep from invalid context bug in btrfs_qgroup_inherit()\n\nSyzkaller reported BUG as follows:\n\n  BUG: sleeping function called from invalid context at\n       include\/linux\/sched\/mm.h:274\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0xcd\/0x134\n   __might_resched.cold+0x222\/0x26b\n   kmem_cache_alloc+0x2e7\/0x3c0\n   update_qgroup_limit_item+0xe1\/0x390\n   btrfs_qgroup_inherit+0x147b\/0x1ee0\n   create_subvol+0x4eb\/0x1710\n   btrfs_mksubvol+0xfe5\/0x13f0\n   __btrfs_ioctl_snap_create+0x2b0\/0x430\n   btrfs_ioctl_snap_create_v2+0x25a\/0x520\n   btrfs_ioctl+0x2a1c\/0x5ce0\n   __x64_sys_ioctl+0x193\/0x200\n   do_syscall_64+0x35\/0x80\n\nFix this by calling qgroup_dirty() on @dstqgroup, and update limit item in\nbtrfs_run_qgroups() later outside of the spinlock context."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01d7c41eac9129fba80d8aed0060caab4a7dbe09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/044da1a371a0da579e805e89c96865f62d8f6f69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c98e91be6aea4c7acf09da6eb0c107ea9186bb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588ae4fdd8b11788a797776b10d6c44ae12bc133","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89840b12c8fad7200eb6478525c13261512c01be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8eb912af525042a7365295eb62f6d5270c2a6462","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4b930a1602b05e77fee31f9616599b25e910a86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7e942b5bb35d8e3af54053d19a6bf04143a3955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-31007","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.400","lastModified":"2024-10-21T21:35:02.513","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Buffer Overflow vulnerability in IrfanView 32bit v.4.66 allows a local attacker to cause a denial of service via a crafted file. Affected component is IrfanView 32bit 4.66 with plugin formats.dll."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:N\/A:H","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":5.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.8,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/kirito999\/IrfanViewBug","source":"cve@mitre.org"},{"url":"https:\/\/mediaside.net\/irfanview-italia\/2024\/04\/12\/4-67-data-di-rilascio-5-aprile-2024\/","source":"cve@mitre.org"},{"url":"https:\/\/www.fosshub.com\/IrfanView.html?dwl=iview466_plugins.zip","source":"cve@mitre.org"},{"url":"https:\/\/www.fosshub.com\/IrfanView.html?dwl=iview466_setup.exe","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-46326","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.637","lastModified":"2024-10-21T20:15:14.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Public Knowledge Project pkp-lib 3.4.0-7 and earlier is vulnerable to Open redirect due to a lack of input sanitization in the logout function."}],"metrics":{},"references":[{"url":"https:\/\/drive.google.com\/file\/d\/1AVVw1aibDPBHakU8eTpCA6hna5Ecg2UJ\/view","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/beraoudabdelkhalek\/research\/blob\/main\/CVEs\/CVE-2024-46326\/README.md","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/pkp\/pkp-lib\/issues\/10478","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-47189","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.697","lastModified":"2024-10-21T20:15:14.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The API Interface of the AWV (Audio, Web and Video Conferencing) component of Mitel MiCollab through 9.8 SP1 FP2 (9.8.1.201) could allow an unauthenticated attacker to conduct SQL injection due to insufficient sanitization of user input. A successful exploit could allow an attacker with knowledge of specific details to access non-sensitive user provisioning information and execute arbitrary SQL database commands."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-misa-2024-0026","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-47223","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.770","lastModified":"2024-10-21T20:15:14.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the AWV (Audio, Web and Video Conferencing) component of Mitel MiCollab through 9.8 SP1 FP2 (9.8.1.201) could allow an unauthenticated attacker to conduct a SQL injection attack due to insufficient sanitization of user input. A successful exploit could allow an attacker to access non-sensitive user provisioning information and execute arbitrary SQL database commands."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-misa-2024-0028","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-47912","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.877","lastModified":"2024-10-21T20:15:14.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the AWV (Audio, Web, and Video) Conferencing component of Mitel MiCollab through 9.8 SP1 FP2 (9.8.1.201) could allow an unauthenticated attacker to perform unauthorized data-access attacks due to missing authentication mechanisms. A successful exploit could allow an attacker to access and delete sensitive information."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-misa-2024-0027","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48509","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:14.943","lastModified":"2024-10-21T20:35:11.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Learning with Texts (LWT) 2.0.3 is vulnerable to SQL Injection. This occurs when the application fails to properly sanitize user inputs, allowing attackers to manipulate SQL queries by injecting malicious SQL statements into URL parameters. By exploiting this vulnerability, an attacker could gain unauthorized access to the database, retrieve sensitive information, modify or delete data, and execute arbitrary commands."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/medium.com\/%40ChadSecurity\/the-cve-2024-48509-vulnerability-overview-df58a6be6864","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48597","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:15.010","lastModified":"2024-10-21T20:35:13.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Online Clinic Management System v1.0 was discovered to contain a SQL injection vulnerability via the id parameter at \/success\/editp.php?action=edit."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/h1-wh0areu\/bug_report\/blob\/main\/online-clinic-management-system\/SQLi-1.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48645","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:15.070","lastModified":"2024-10-21T21:35:05.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In Minecraft mod \"Command Block IDE\" up to and including version 0.4.9, a missing authorization (CWE-862) allows any user to modify \"function\" files used by the game when installed on a dedicated server."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/gist.github.com\/apple502j\/f083fbe21a7cfe018036c73a0e5fff9a","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/arm32x\/command-block-ide\/commit\/42e09840168d9c2fe2ee07f4472d296000b2a416","source":"cve@mitre.org"},{"url":"https:\/\/modrinth.com\/mod\/command-block-ide\/version\/0.4.10","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-48659","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T20:15:15.260","lastModified":"2024-10-21T20:15:15.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue in DCME-320-L <=9.3.2.114 allows a remote attacker to execute arbitrary code via the log_u_umount.php component."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/CLan-nad\/a879f7696a58656b384c46bf4ba74e80","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50019","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.510","lastModified":"2024-10-21T20:15:15.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkthread: unpark only parked kthread\n\nCalling into kthread unparking unconditionally is mostly harmless when\nthe kthread is already unparked. The wake up is then simply ignored\nbecause the target is not in TASK_PARKED state.\n\nHowever if the kthread is per CPU, the wake up is preceded by a call\nto kthread_bind() which expects the task to be inactive and in\nTASK_PARKED state, which obviously isn't the case if it is unparked.\n\nAs a result, calling kthread_stop() on an unparked per-cpu kthread\ntriggers such a warning:\n\n\tWARNING: CPU: 0 PID: 11 at kernel\/kthread.c:525 __kthread_bind_mask kernel\/kthread.c:525\n\t <TASK>\n\t kthread_stop+0x17a\/0x630 kernel\/kthread.c:707\n\t destroy_workqueue+0x136\/0xc40 kernel\/workqueue.c:5810\n\t wg_destruct+0x1e2\/0x2e0 drivers\/net\/wireguard\/device.c:257\n\t netdev_run_todo+0xe1a\/0x1000 net\/core\/dev.c:10693\n\t default_device_exit_batch+0xa14\/0xa90 net\/core\/dev.c:11769\n\t ops_exit_list net\/core\/net_namespace.c:178 [inline]\n\t cleanup_net+0x89d\/0xcc0 net\/core\/net_namespace.c:640\n\t process_one_work kernel\/workqueue.c:3231 [inline]\n\t process_scheduled_works+0xa2c\/0x1830 kernel\/workqueue.c:3312\n\t worker_thread+0x86d\/0xd70 kernel\/workqueue.c:3393\n\t kthread+0x2f0\/0x390 kernel\/kthread.c:389\n\t ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n\t ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n\t <\/TASK>\n\nFix this with skipping unecessary unparking while stopping a kthread."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19a5029981c87c2ad0845e713837faa88f5d8e2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/214e01ad4ed7158cab66498810094fac5d09b218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40a6e660d2a3a7a5cb99f0b8ff4fb41bad039f68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8608196a155cb6cfae04d96b10a2652d0327e33f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cda5423c1a1c906062ef235c940f249b97d9d135","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50020","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.573","lastModified":"2024-10-21T20:15:15.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix improper handling of refcount in ice_sriov_set_msix_vec_count()\n\nThis patch addresses an issue with improper reference count handling in the\nice_sriov_set_msix_vec_count() function.\n\nFirst, the function calls ice_get_vf_by_id(), which increments the\nreference count of the vf pointer. If the subsequent call to\nice_get_vf_vsi() fails, the function currently returns an error without\ndecrementing the reference count of the vf pointer, leading to a reference\ncount leak. The correct behavior, as implemented in this patch, is to\ndecrement the reference count using ice_put_vf(vf) before returning an\nerror when vsi is NULL.\n\nSecond, the function calls ice_sriov_get_irqs(), which sets\nvf->first_vector_idx. If this call returns a negative value, indicating an\nerror, the function returns an error without decrementing the reference\ncount of the vf pointer, resulting in another reference count leak. The\npatch addresses this by adding a call to ice_put_vf(vf) before returning\nan error when vf->first_vector_idx < 0.\n\nThis bug was identified by an experimental static analysis tool developed\nby our team. The tool specializes in analyzing reference count operations\nand identifying potential mismanagement of reference counts. In this case,\nthe tool flagged the missing decrement operation as a potential issue,\nleading to this patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/416dbb815ca69684de148328990ba0ec53e6dbc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d517cf89874c6039e6294b18d66f40988e62502a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50021","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.630","lastModified":"2024-10-21T20:15:15.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix improper handling of refcount in ice_dpll_init_rclk_pins()\n\nThis patch addresses a reference count handling issue in the\nice_dpll_init_rclk_pins() function. The function calls ice_dpll_get_pins(),\nwhich increments the reference count of the relevant resources. However,\nif the condition WARN_ON((!vsi || !vsi->netdev)) is met, the function\ncurrently returns an error without properly releasing the resources\nacquired by ice_dpll_get_pins(), leading to a reference count leak.\n\nTo resolve this, the check has been moved to the top of the function. This\nensures that the function verifies the state before any resources are\nacquired, avoiding the need for additional resource management in the\nerror path.\n\nThis bug was identified by an experimental static analysis tool developed\nby our team. The tool specializes in analyzing reference count operations\nand detecting potential issues where resources are not properly managed.\nIn this case, the tool flagged the missing release operation as a\npotential problem, which led to the development of this patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aefecead9d08f4a35ab6f51ba2e408d2cef4e31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccca30a18e36a742e606d5bf0630e75be7711d0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50022","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.690","lastModified":"2024-10-21T20:15:15.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndevice-dax: correct pgoff align in dax_set_mapping()\n\npgoff should be aligned using ALIGN_DOWN() instead of ALIGN().  Otherwise,\nvmf->address not aligned to fault_size will be aligned to the next\nalignment, that can result in memory failure getting the wrong address.\n\nIt's a subtle situation that only can be observed in\npage_mapped_in_vma() after the page is page fault handled by\ndev_dax_huge_fault.  Generally, there is little chance to perform\npage_mapped_in_vma in dev-dax's page unless in specific error injection\nto the dax device to trigger an MCE - memory-failure.  In that case,\npage_mapped_in_vma() will be triggered to determine which task is\naccessing the failure address and kill that task in the end.\n\n\nWe used self-developed dax device (which is 2M aligned mapping) , to\nperform error injection to random address.  It turned out that error\ninjected to non-2M-aligned address was causing endless MCE until panic.\nBecause page_mapped_in_vma() kept resulting wrong address and the task\naccessing the failure address was never killed properly:\n\n\n[ 3783.719419] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3784.049006] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3784.049190] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3784.448042] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3784.448186] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3784.792026] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3784.792179] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3785.162502] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3785.162633] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3785.461116] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3785.461247] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3785.764730] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3785.764859] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3786.042128] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3786.042259] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3786.464293] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3786.464423] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3786.818090] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3786.818217] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n[ 3787.085297] mce: Uncorrected hardware memory error in user-access at \n200c9742380\n[ 3787.085424] Memory failure: 0x200c9742: recovery action for dax page: \nRecovered\n\nIt took us several weeks to pinpoint this problem,  but we eventually\nused bpftrace to trace the page fault and mce address and successfully\nidentified the issue.\n\n\nJoao added:\n\n; Likely we never reproduce in production because we always pin\n: device-dax regions in the region align they provide (Qemu does\n: similarly with prealloc in hugetlb\/file backed memory).  I think this\n: bug requires that we touch *unpinned* device-dax regions unaligned to\n: the device-dax selected alignment (page size i.e.  4K\/2M\/1G)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7fcbd9785d4c17ea533c42f20a9083a83f301fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c4198dfdca818c5ce19c764d90eabd156bbc6da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b822007e8db341d6f175c645ed79866db501ad86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e877427d218159ac29c9326100920d24330c9ee6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50023","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.763","lastModified":"2024-10-21T20:15:15.763","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: Remove LED entry from LEDs list on unregister\n\nCommit c938ab4da0eb (\"net: phy: Manual remove LEDs to ensure correct\nordering\") correctly fixed a problem with using devm_ but missed\nremoving the LED entry from the LEDs list.\n\nThis cause kernel panic on specific scenario where the port for the PHY\nis torn down and up and the kmod for the PHY is removed.\n\nOn setting the port down the first time, the assosiacted LEDs are\ncorrectly unregistered. The associated kmod for the PHY is now removed.\nThe kmod is now added again and the port is now put up, the associated LED\nare registered again.\nOn putting the port down again for the second time after these step, the\nLED list now have 4 elements. With the first 2 already unregistered\npreviously and the 2 new one registered again.\n\nThis cause a kernel panic as the first 2 element should have been\nremoved.\n\nFix this by correctly removing the element when LED is unregistered."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/143ffa7878e2d9d9c3836ee8304ce4930f7852a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f50b5d74c68e551667e265123659b187a30fe3a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fba363f4d244269a0ba7abb8df953a244c6749af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50024","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.850","lastModified":"2024-10-21T20:15:15.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Fix an unsafe loop on the list\n\nThe kernel may crash when deleting a genetlink family if there are still\nlisteners for that family:\n\nOops: Kernel access of bad area, sig: 11 [#1]\n  ...\n  NIP [c000000000c080bc] netlink_update_socket_mc+0x3c\/0xc0\n  LR [c000000000c0f764] __netlink_clear_multicast_users+0x74\/0xc0\n  Call Trace:\n__netlink_clear_multicast_users+0x74\/0xc0\ngenl_unregister_family+0xd4\/0x2d0\n\nChange the unsafe loop on the list to a safe one, because inside the\nloop there is an element removal from this list."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1cdec792b2450105b1314c5123a9a0452cb2c2f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dae9f1187189bc09ff6d25ca97ead711f7e26f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3be342e0332a7c83eb26fbb22bf156fdca467a5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49f9b726bf2bf3dd2caf0d27cadf4bc1ccf7a7dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f03a7f601f33cda1f710611625235dc86fd8a9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68ad5da6ca630a276f0a5c924179e57724d00013","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50025","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.930","lastModified":"2024-10-21T20:15:15.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: fnic: Move flush_work initialization out of if block\n\nAfter commit 379a58caa199 (\"scsi: fnic: Move fnic_fnic_flush_tx() to a\nwork queue\"), it can happen that a work item is sent to an uninitialized\nwork queue.  This may has the effect that the item being queued is never\nactually queued, and any further actions depending on it will not\nproceed.\n\nThe following warning is observed while the fnic driver is loaded:\n\nkernel: WARNING: CPU: 11 PID: 0 at ..\/kernel\/workqueue.c:1524 __queue_work+0x373\/0x410\nkernel:  <IRQ>\nkernel:  queue_work_on+0x3a\/0x50\nkernel:  fnic_wq_copy_cmpl_handler+0x54a\/0x730 [fnic 62fbff0c42e7fb825c60a55cde2fb91facb2ed24]\nkernel:  fnic_isr_msix_wq_copy+0x2d\/0x60 [fnic 62fbff0c42e7fb825c60a55cde2fb91facb2ed24]\nkernel:  __handle_irq_event_percpu+0x36\/0x1a0\nkernel:  handle_irq_event_percpu+0x30\/0x70\nkernel:  handle_irq_event+0x34\/0x60\nkernel:  handle_edge_irq+0x7e\/0x1a0\nkernel:  __common_interrupt+0x3b\/0xb0\nkernel:  common_interrupt+0x58\/0xa0\nkernel:  <\/IRQ>\n\nIt has been observed that this may break the rediscovery of Fibre\nChannel devices after a temporary fabric failure.\n\nThis patch fixes it by moving the work queue initialization out of\nan if block in fnic_probe()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b7836b80061bf1accc5d78b12bc086aed252388","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f30e5f77d2f205ac14d09dec40fd4bb76712f13d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50026","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:15.993","lastModified":"2024-10-21T20:15:15.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: wd33c93: Don't use stale scsi_pointer value\n\nA regression was introduced with commit dbb2da557a6a (\"scsi: wd33c93:\nMove the SCSI pointer to private command data\") which results in an oops\nin wd33c93_intr(). That commit added the scsi_pointer variable and\ninitialized it from hostdata->connected. However, during selection,\nhostdata->connected is not yet valid. Fix this by getting the current\nscsi_pointer from hostdata->selecting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3afeceda855dea9b85cddd96307d4d17c8742005","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9023ed8d91eb1fcc93e64dc4962f7412b1c4cbec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b60ff1a95c7c386cdd6153de3d7d85edaeabd800","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e04642a207f1d2ae28a08624c04c67f5681f3451","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50027","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.093","lastModified":"2024-10-21T20:15:16.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: core: Free tzp copy along with the thermal zone\n\nThe object pointed to by tz->tzp may still be accessed after being\nfreed in thermal_zone_device_unregister(), so move the freeing of it\nto the point after the removal completion has been completed at which\nit cannot be accessed any more."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/827a07525c099f54d3b15110408824541ec66b3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdb0d40507c85bee33c2a71fde7b2e857346f112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50028","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.163","lastModified":"2024-10-21T20:15:16.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: core: Reference count the zone in thermal_zone_get_by_id()\n\nThere are places in the thermal netlink code where nothing prevents\nthe thermal zone object from going away while being accessed after it\nhas been returned by thermal_zone_get_by_id().\n\nTo address this, make thermal_zone_get_by_id() get a reference on the\nthermal zone device object to be returned with the help of get_device(),\nunder thermal_list_lock, and adjust all of its callers to this change\nwith the help of the cleanup.h infrastructure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a42a5839f400e929c489bb1b58f54596c4535167","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c95538b286efc6109c987e97a051bc7844ede802","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50029","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.227","lastModified":"2024-10-21T20:15:16.227","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_conn: Fix UAF in hci_enhanced_setup_sync\n\nThis checks if the ACL connection remains valid as it could be destroyed\nwhile hci_enhanced_setup_sync is pending on cmd_sync leading to the\nfollowing trace:\n\nBUG: KASAN: slab-use-after-free in hci_enhanced_setup_sync+0x91b\/0xa60\nRead of size 1 at addr ffff888002328ffd by task kworker\/u5:2\/37\n\nCPU: 0 UID: 0 PID: 37 Comm: kworker\/u5:2 Not tainted 6.11.0-rc6-01300-g810be445d8d6 #7099\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-2.fc40 04\/01\/2014\nWorkqueue: hci0 hci_cmd_sync_work\nCall Trace:\n <TASK>\n dump_stack_lvl+0x5d\/0x80\n ? hci_enhanced_setup_sync+0x91b\/0xa60\n print_report+0x152\/0x4c0\n ? hci_enhanced_setup_sync+0x91b\/0xa60\n ? __virt_addr_valid+0x1fa\/0x420\n ? hci_enhanced_setup_sync+0x91b\/0xa60\n kasan_report+0xda\/0x1b0\n ? hci_enhanced_setup_sync+0x91b\/0xa60\n hci_enhanced_setup_sync+0x91b\/0xa60\n ? __pfx_hci_enhanced_setup_sync+0x10\/0x10\n ? __pfx___mutex_lock+0x10\/0x10\n hci_cmd_sync_work+0x1c2\/0x330\n process_one_work+0x7d9\/0x1360\n ? __pfx_lock_acquire+0x10\/0x10\n ? __pfx_process_one_work+0x10\/0x10\n ? assign_work+0x167\/0x240\n worker_thread+0x5b7\/0xf60\n ? __kthread_parkme+0xac\/0x1c0\n ? __pfx_worker_thread+0x10\/0x10\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0x293\/0x360\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x2f\/0x70\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nAllocated by task 34:\n kasan_save_stack+0x30\/0x50\n kasan_save_track+0x14\/0x30\n __kasan_kmalloc+0x8f\/0xa0\n __hci_conn_add+0x187\/0x17d0\n hci_connect_sco+0x2e1\/0xb90\n sco_sock_connect+0x2a2\/0xb80\n __sys_connect+0x227\/0x2a0\n __x64_sys_connect+0x6d\/0xb0\n do_syscall_64+0x71\/0x140\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFreed by task 37:\n kasan_save_stack+0x30\/0x50\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3b\/0x60\n __kasan_slab_free+0x101\/0x160\n kfree+0xd0\/0x250\n device_release+0x9a\/0x210\n kobject_put+0x151\/0x280\n hci_conn_del+0x448\/0xbf0\n hci_abort_conn_sync+0x46f\/0x980\n hci_cmd_sync_work+0x1c2\/0x330\n process_one_work+0x7d9\/0x1360\n worker_thread+0x5b7\/0xf60\n kthread+0x293\/0x360\n ret_from_fork+0x2f\/0x70\n ret_from_fork_asm+0x1a\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18fd04ad856df07733f5bb07e7f7168e7443d393","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/867639300759e3e1c5b1e1a5ff89231f263a32a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98ccd44002d88cbf4edfc4480df532a3da5a013e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50030","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.290","lastModified":"2024-10-21T20:15:16.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/ct: prevent UAF in send_recv()\n\nEnsure we serialize with completion side to prevent UAF with fence going\nout of scope on the stack, since we have no clue if it will fire after\nthe timeout before we can erase from the xa. Also we have some dependent\nloads and stores for which we need the correct ordering, and we lack the\nneeded barriers. Fix this by grabbing the ct->lock after the wait, which\nis also held by the completion side.\n\nv2 (Badal):\n - Also print done after acquiring the lock and seeing timeout.\n\n(cherry picked from commit 52789ce35c55ccd30c4b67b9cc5b2af55e0122ea)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ed7dd4c55e4fb21531a9645aeb66a30eaf43a46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db7f92af626178ba59dbbcdd5dee9ec24a987a88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50031","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.350","lastModified":"2024-10-21T20:15:16.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/v3d: Stop the active perfmon before being destroyed\n\nWhen running `kmscube` with one or more performance monitors enabled\nvia `GALLIUM_HUD`, the following kernel panic can occur:\n\n[   55.008324] Unable to handle kernel paging request at virtual address 00000000052004a4\n[   55.008368] Mem abort info:\n[   55.008377]   ESR = 0x0000000096000005\n[   55.008387]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   55.008402]   SET = 0, FnV = 0\n[   55.008412]   EA = 0, S1PTW = 0\n[   55.008421]   FSC = 0x05: level 1 translation fault\n[   55.008434] Data abort info:\n[   55.008442]   ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000\n[   55.008455]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[   55.008467]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[   55.008481] user pgtable: 4k pages, 39-bit VAs, pgdp=00000001046c6000\n[   55.008497] [00000000052004a4] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000\n[   55.008525] Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP\n[   55.008542] Modules linked in: rfcomm [...] vc4 v3d snd_soc_hdmi_codec drm_display_helper\ngpu_sched drm_shmem_helper cec drm_dma_helper drm_kms_helper i2c_brcmstb\ndrm drm_panel_orientation_quirks snd_soc_core snd_compress snd_pcm_dmaengine snd_pcm snd_timer snd backlight\n[   55.008799] CPU: 2 PID: 166 Comm: v3d_bin Tainted: G         C         6.6.47+rpt-rpi-v8 #1  Debian 1:6.6.47-1+rpt1\n[   55.008824] Hardware name: Raspberry Pi 4 Model B Rev 1.5 (DT)\n[   55.008838] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   55.008855] pc : __mutex_lock.constprop.0+0x90\/0x608\n[   55.008879] lr : __mutex_lock.constprop.0+0x58\/0x608\n[   55.008895] sp : ffffffc080673cf0\n[   55.008904] x29: ffffffc080673cf0 x28: 0000000000000000 x27: ffffff8106188a28\n[   55.008926] x26: ffffff8101e78040 x25: ffffff8101baa6c0 x24: ffffffd9d989f148\n[   55.008947] x23: ffffffda1c2a4008 x22: 0000000000000002 x21: ffffffc080673d38\n[   55.008968] x20: ffffff8101238000 x19: ffffff8104f83188 x18: 0000000000000000\n[   55.008988] x17: 0000000000000000 x16: ffffffda1bd04d18 x15: 00000055bb08bc90\n[   55.009715] x14: 0000000000000000 x13: 0000000000000000 x12: ffffffda1bd4cbb0\n[   55.010433] x11: 00000000fa83b2da x10: 0000000000001a40 x9 : ffffffda1bd04d04\n[   55.011162] x8 : ffffff8102097b80 x7 : 0000000000000000 x6 : 00000000030a5857\n[   55.011880] x5 : 00ffffffffffffff x4 : 0300000005200470 x3 : 0300000005200470\n[   55.012598] x2 : ffffff8101238000 x1 : 0000000000000021 x0 : 0300000005200470\n[   55.013292] Call trace:\n[   55.013959]  __mutex_lock.constprop.0+0x90\/0x608\n[   55.014646]  __mutex_lock_slowpath+0x1c\/0x30\n[   55.015317]  mutex_lock+0x50\/0x68\n[   55.015961]  v3d_perfmon_stop+0x40\/0xe0 [v3d]\n[   55.016627]  v3d_bin_job_run+0x10c\/0x2d8 [v3d]\n[   55.017282]  drm_sched_main+0x178\/0x3f8 [gpu_sched]\n[   55.017921]  kthread+0x11c\/0x128\n[   55.018554]  ret_from_fork+0x10\/0x20\n[   55.019168] Code: f9400260 f1001c1f 54001ea9 927df000 (b9403401)\n[   55.019776] ---[ end trace 0000000000000000 ]---\n[   55.020411] note: v3d_bin[166] exited with preempt_count 1\n\nThis issue arises because, upon closing the file descriptor (which happens\nwhen we interrupt `kmscube`), the active performance monitor is not\nstopped. Although all perfmons are destroyed in `v3d_perfmon_close_file()`,\nthe active performance monitor's pointer (`v3d->active_perfmon`) is still\nretained.\n\nIf `kmscube` is run again, the driver will attempt to stop the active\nperformance monitor using the stale pointer in `v3d->active_perfmon`.\nHowever, this pointer is no longer valid because the previous process has\nalready terminated, and all performance monitors associated with it have\nbeen destroyed and freed.\n\nTo fix this, when the active performance monitor belongs to a given\nprocess, explicitly stop it before destroying and freeing it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07c51108d9e278831c16191d1223ee49986e7890","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c9e9a3a4873705740b19300cadc6599170646ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24ab54a066d2ef671b03eb909ca2114c0c9ac1e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/333767cbce6ac20ec794c76eec82ed0ef55022db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d1fd3638ee3a9f9bca4785fffb638ca19120718","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50032","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.417","lastModified":"2024-10-21T20:15:16.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu\/nocb: Fix rcuog wake-up from offline softirq\n\nAfter a CPU has set itself offline and before it eventually calls\nrcutree_report_cpu_dead(), there are still opportunities for callbacks\nto be enqueued, for example from a softirq. When that happens on NOCB,\nthe rcuog wake-up is deferred through an IPI to an online CPU in order\nnot to call into the scheduler and risk arming the RT-bandwidth after\nhrtimers have been migrated out and disabled.\n\nBut performing a synchronized IPI from a softirq is buggy as reported in\nthe following scenario:\n\n        WARNING: CPU: 1 PID: 26 at kernel\/smp.c:633 smp_call_function_single\n        Modules linked in: rcutorture torture\n        CPU: 1 UID: 0 PID: 26 Comm: migration\/1 Not tainted 6.11.0-rc1-00012-g9139f93209d1 #1\n        Stopper: multi_cpu_stop+0x0\/0x320 <- __stop_cpus+0xd0\/0x120\n        RIP: 0010:smp_call_function_single\n        <IRQ>\n        swake_up_one_online\n        __call_rcu_nocb_wake\n        __call_rcu_common\n        ? rcu_torture_one_read\n        call_timer_fn\n        __run_timers\n        run_timer_softirq\n        handle_softirqs\n        irq_exit_rcu\n        ? tick_handle_periodic\n        sysvec_apic_timer_interrupt\n        <\/IRQ>\n\nFix this with forcing deferred rcuog wake up through the NOCB timer when\nthe CPU is offline. The actual wake up will happen from\nrcutree_report_cpu_dead()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84a5feebba10354c683983f5f1372a144225e4c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e66b1e01f2eb3209d08122572f41f7838b79540d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7345ccc62a4b880cf76458db5f320725f28e400","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50033","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.477","lastModified":"2024-10-21T20:15:16.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nslip: make slhc_remember() more robust against malicious packets\n\nsyzbot found that slhc_remember() was missing checks against\nmalicious packets [1].\n\nslhc_remember() only checked the size of the packet was at least 20,\nwhich is not good enough.\n\nWe need to make sure the packet includes the IPv4 and TCP header\nthat are supposed to be carried.\n\nAdd iph and th pointers to make the code more readable.\n\n[1]\n\nBUG: KMSAN: uninit-value in slhc_remember+0x2e8\/0x7b0 drivers\/net\/slip\/slhc.c:666\n  slhc_remember+0x2e8\/0x7b0 drivers\/net\/slip\/slhc.c:666\n  ppp_receive_nonmp_frame+0xe45\/0x35e0 drivers\/net\/ppp\/ppp_generic.c:2455\n  ppp_receive_frame drivers\/net\/ppp\/ppp_generic.c:2372 [inline]\n  ppp_do_recv+0x65f\/0x40d0 drivers\/net\/ppp\/ppp_generic.c:2212\n  ppp_input+0x7dc\/0xe60 drivers\/net\/ppp\/ppp_generic.c:2327\n  pppoe_rcv_core+0x1d3\/0x720 drivers\/net\/ppp\/pppoe.c:379\n  sk_backlog_rcv+0x13b\/0x420 include\/net\/sock.h:1113\n  __release_sock+0x1da\/0x330 net\/core\/sock.c:3072\n  release_sock+0x6b\/0x250 net\/core\/sock.c:3626\n  pppoe_sendmsg+0x2b8\/0xb90 drivers\/net\/ppp\/pppoe.c:903\n  sock_sendmsg_nosec net\/socket.c:729 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:744\n  ____sys_sendmsg+0x903\/0xb60 net\/socket.c:2602\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2656\n  __sys_sendmmsg+0x3c1\/0x960 net\/socket.c:2742\n  __do_sys_sendmmsg net\/socket.c:2771 [inline]\n  __se_sys_sendmmsg net\/socket.c:2768 [inline]\n  __x64_sys_sendmmsg+0xbc\/0x120 net\/socket.c:2768\n  x64_sys_call+0xb6e\/0x3ba0 arch\/x86\/include\/generated\/asm\/syscalls_64.h:308\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:4091 [inline]\n  slab_alloc_node mm\/slub.c:4134 [inline]\n  kmem_cache_alloc_node_noprof+0x6bf\/0xb80 mm\/slub.c:4186\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:587\n  __alloc_skb+0x363\/0x7b0 net\/core\/skbuff.c:678\n  alloc_skb include\/linux\/skbuff.h:1322 [inline]\n  sock_wmalloc+0xfe\/0x1a0 net\/core\/sock.c:2732\n  pppoe_sendmsg+0x3a7\/0xb90 drivers\/net\/ppp\/pppoe.c:867\n  sock_sendmsg_nosec net\/socket.c:729 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:744\n  ____sys_sendmsg+0x903\/0xb60 net\/socket.c:2602\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2656\n  __sys_sendmmsg+0x3c1\/0x960 net\/socket.c:2742\n  __do_sys_sendmmsg net\/socket.c:2771 [inline]\n  __se_sys_sendmmsg net\/socket.c:2768 [inline]\n  __x64_sys_sendmmsg+0xbc\/0x120 net\/socket.c:2768\n  x64_sys_call+0xb6e\/0x3ba0 arch\/x86\/include\/generated\/asm\/syscalls_64.h:308\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nCPU: 0 UID: 0 PID: 5460 Comm: syz.2.33 Not tainted 6.12.0-rc2-syzkaller-00006-g87d6aab2389e #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29e8d96d44f51cf89a62dd042be35d052833b95c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36b054324d18e51cf466134e13b6fbe3c91f52af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e336384cc9b608e0551f99c3d87316ca3b0e51a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d3fce8cbe3a70a1c7c06c9b53696be5d5d8dd5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bb79eb1db85a10865f0d4dd15b013def3f2d246","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff5e0f895315706e4ca5a19df15be6866cee4f5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50034","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.553","lastModified":"2024-10-21T20:15:16.553","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: fix lacks of icsk_syn_mss with IPPROTO_SMC\n\nEric report a panic on IPPROTO_SMC, and give the facts\nthat when INET_PROTOSW_ICSK was set, icsk->icsk_sync_mss must be set too.\n\nBug: Unable to handle kernel NULL pointer dereference at virtual address\n0000000000000000\nMem abort info:\nESR = 0x0000000086000005\nEC = 0x21: IABT (current EL), IL = 32 bits\nSET = 0, FnV = 0\nEA = 0, S1PTW = 0\nFSC = 0x05: level 1 translation fault\nuser pgtable: 4k pages, 48-bit VAs, pgdp=00000001195d1000\n[0000000000000000] pgd=0800000109c46003, p4d=0800000109c46003,\npud=0000000000000000\nInternal error: Oops: 0000000086000005 [#1] PREEMPT SMP\nModules linked in:\nCPU: 1 UID: 0 PID: 8037 Comm: syz.3.265 Not tainted\n6.11.0-rc7-syzkaller-g5f5673607153 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine,\nBIOS Google 08\/06\/2024\npstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : 0x0\nlr : cipso_v4_sock_setattr+0x2a8\/0x3c0 net\/ipv4\/cipso_ipv4.c:1910\nsp : ffff80009b887a90\nx29: ffff80009b887aa0 x28: ffff80008db94050 x27: 0000000000000000\nx26: 1fffe0001aa6f5b3 x25: dfff800000000000 x24: ffff0000db75da00\nx23: 0000000000000000 x22: ffff0000d8b78518 x21: 0000000000000000\nx20: ffff0000d537ad80 x19: ffff0000d8b78000 x18: 1fffe000366d79ee\nx17: ffff8000800614a8 x16: ffff800080569b84 x15: 0000000000000001\nx14: 000000008b336894 x13: 00000000cd96feaa x12: 0000000000000003\nx11: 0000000000040000 x10: 00000000000020a3 x9 : 1fffe0001b16f0f1\nx8 : 0000000000000000 x7 : 0000000000000000 x6 : 000000000000003f\nx5 : 0000000000000040 x4 : 0000000000000001 x3 : 0000000000000000\nx2 : 0000000000000002 x1 : 0000000000000000 x0 : ffff0000d8b78000\nCall trace:\n0x0\nnetlbl_sock_setattr+0x2e4\/0x338 net\/netlabel\/netlabel_kapi.c:1000\nsmack_netlbl_add+0xa4\/0x154 security\/smack\/smack_lsm.c:2593\nsmack_socket_post_create+0xa8\/0x14c security\/smack\/smack_lsm.c:2973\nsecurity_socket_post_create+0x94\/0xd4 security\/security.c:4425\n__sock_create+0x4c8\/0x884 net\/socket.c:1587\nsock_create net\/socket.c:1622 [inline]\n__sys_socket_create net\/socket.c:1659 [inline]\n__sys_socket+0x134\/0x340 net\/socket.c:1706\n__do_sys_socket net\/socket.c:1720 [inline]\n__se_sys_socket net\/socket.c:1718 [inline]\n__arm64_sys_socket+0x7c\/0x94 net\/socket.c:1718\n__invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\ninvoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49\nel0_svc_common+0x130\/0x23c arch\/arm64\/kernel\/syscall.c:132\ndo_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151\nel0_svc+0x54\/0x168 arch\/arm64\/kernel\/entry-common.c:712\nel0t_64_sync_handler+0x84\/0xfc arch\/arm64\/kernel\/entry-common.c:730\nel0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:598\nCode: ???????? ???????? ???????? ???????? (????????)\n---[ end trace 0000000000000000 ]---\n\nThis patch add a toy implementation that performs a simple return to\nprevent such panic. This is because MSS can be set in sock_create_kern\nor smc_setsockopt, similar to how it's done in AF_SMC. However, for\nAF_SMC, there is currently no way to synchronize MSS within\n__sys_connect_file. This toy implementation lays the groundwork for us\nto support such feature for IPPROTO_SMC in the future."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44dc50df15f5bd4221d8f708885a9d49cda7f57e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fd27ea183c208e478129a85e11d880fc70040f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50035","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.640","lastModified":"2024-10-21T20:15:16.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nppp: fix ppp_async_encode() illegal access\n\nsyzbot reported an issue in ppp_async_encode() [1]\n\nIn this case, pppoe_sendmsg() is called with a zero size.\nThen ppp_async_encode() is called with an empty skb.\n\nBUG: KMSAN: uninit-value in ppp_async_encode drivers\/net\/ppp\/ppp_async.c:545 [inline]\n BUG: KMSAN: uninit-value in ppp_async_push+0xb4f\/0x2660 drivers\/net\/ppp\/ppp_async.c:675\n  ppp_async_encode drivers\/net\/ppp\/ppp_async.c:545 [inline]\n  ppp_async_push+0xb4f\/0x2660 drivers\/net\/ppp\/ppp_async.c:675\n  ppp_async_send+0x130\/0x1b0 drivers\/net\/ppp\/ppp_async.c:634\n  ppp_channel_bridge_input drivers\/net\/ppp\/ppp_generic.c:2280 [inline]\n  ppp_input+0x1f1\/0xe60 drivers\/net\/ppp\/ppp_generic.c:2304\n  pppoe_rcv_core+0x1d3\/0x720 drivers\/net\/ppp\/pppoe.c:379\n  sk_backlog_rcv+0x13b\/0x420 include\/net\/sock.h:1113\n  __release_sock+0x1da\/0x330 net\/core\/sock.c:3072\n  release_sock+0x6b\/0x250 net\/core\/sock.c:3626\n  pppoe_sendmsg+0x2b8\/0xb90 drivers\/net\/ppp\/pppoe.c:903\n  sock_sendmsg_nosec net\/socket.c:729 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:744\n  ____sys_sendmsg+0x903\/0xb60 net\/socket.c:2602\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2656\n  __sys_sendmmsg+0x3c1\/0x960 net\/socket.c:2742\n  __do_sys_sendmmsg net\/socket.c:2771 [inline]\n  __se_sys_sendmmsg net\/socket.c:2768 [inline]\n  __x64_sys_sendmmsg+0xbc\/0x120 net\/socket.c:2768\n  x64_sys_call+0xb6e\/0x3ba0 arch\/x86\/include\/generated\/asm\/syscalls_64.h:308\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:4092 [inline]\n  slab_alloc_node mm\/slub.c:4135 [inline]\n  kmem_cache_alloc_node_noprof+0x6bf\/0xb80 mm\/slub.c:4187\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:587\n  __alloc_skb+0x363\/0x7b0 net\/core\/skbuff.c:678\n  alloc_skb include\/linux\/skbuff.h:1322 [inline]\n  sock_wmalloc+0xfe\/0x1a0 net\/core\/sock.c:2732\n  pppoe_sendmsg+0x3a7\/0xb90 drivers\/net\/ppp\/pppoe.c:867\n  sock_sendmsg_nosec net\/socket.c:729 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:744\n  ____sys_sendmsg+0x903\/0xb60 net\/socket.c:2602\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2656\n  __sys_sendmmsg+0x3c1\/0x960 net\/socket.c:2742\n  __do_sys_sendmmsg net\/socket.c:2771 [inline]\n  __se_sys_sendmmsg net\/socket.c:2768 [inline]\n  __x64_sys_sendmmsg+0xbc\/0x120 net\/socket.c:2768\n  x64_sys_call+0xb6e\/0x3ba0 arch\/x86\/include\/generated\/asm\/syscalls_64.h:308\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nCPU: 1 UID: 0 PID: 5411 Comm: syz.1.14 Not tainted 6.12.0-rc1-syzkaller-00165-g360c1f1f24c6 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30d91a478d58cbae3dbaa8224d17d0d839f0d71b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40dddd4b8bd08a69471efd96107a4e1c73fabefc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fe992ff3df493d1949922ca234419f3ede08dff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c007a14797240607038bd3464501109f408940e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce249a4c68d0ce27a8c5d853338d502e2711a314","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fadf8fdb3110d3138e05c3765f645535434f8d76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50036","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.717","lastModified":"2024-10-21T20:15:16.717","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: do not delay dst_entries_add() in dst_release()\n\ndst_entries_add() uses per-cpu data that might be freed at netns\ndismantle from ip6_route_net_exit() calling dst_entries_destroy()\n\nBefore ip6_route_net_exit() can be called, we release all\nthe dsts associated with this netns, via calls to dst_release(),\nwhich waits an rcu grace period before calling dst_destroy()\n\ndst_entries_add() use in dst_destroy() is racy, because\ndst_entries_destroy() could have been called already.\n\nDecrementing the number of dsts must happen sooner.\n\nNotes:\n\n1) in CONFIG_XFRM case, dst_destroy() can call\n   dst_release_immediate(child), this might also cause UAF\n   if the child does not have DST_NOCOUNT set.\n   IPSEC maintainers might take a look and see how to address this.\n\n2) There is also discussion about removing this count of dst,\n   which might happen in future kernels."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c7c918ec0aa3555372c5a57f18780b7a96c5cfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac888d58869bb99753e7652be19a151df9ecb35d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eae7435b48ffc8e9be0ff9cfeae40af479a609dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50037","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.790","lastModified":"2024-10-21T20:15:16.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/fbdev-dma: Only cleanup deferred I\/O if necessary\n\nCommit 5a498d4d06d6 (\"drm\/fbdev-dma: Only install deferred I\/O if\nnecessary\") initializes deferred I\/O only if it is used.\ndrm_fbdev_dma_fb_destroy() however calls fb_deferred_io_cleanup()\nunconditionally with struct fb_info.fbdefio == NULL. KASAN with the\nout-of-tree Apple silicon display driver posts following warning from\n__flush_work() of a random struct work_struct instead of the expected\nNULL pointer derefs.\n\n[   22.053799] ------------[ cut here ]------------\n[   22.054832] WARNING: CPU: 2 PID: 1 at kernel\/workqueue.c:4177 __flush_work+0x4d8\/0x580\n[   22.056597] Modules linked in: uhid bnep uinput nls_ascii ip6_tables ip_tables i2c_dev loop fuse dm_multipath nfnetlink zram hid_magicmouse btrfs xor xor_neon brcmfmac_wcc raid6_pq hci_bcm4377 bluetooth brcmfmac hid_apple brcmutil nvmem_spmi_mfd simple_mfd_spmi dockchannel_hid cfg80211 joydev regmap_spmi nvme_apple ecdh_generic ecc macsmc_hid rfkill dwc3 appledrm snd_soc_macaudio macsmc_power nvme_core apple_isp phy_apple_atc apple_sart apple_rtkit_helper apple_dockchannel tps6598x macsmc_hwmon snd_soc_cs42l84 videobuf2_v4l2 spmi_apple_controller nvmem_apple_efuses videobuf2_dma_sg apple_z2 videobuf2_memops spi_nor panel_summit videobuf2_common asahi videodev pwm_apple apple_dcp snd_soc_apple_mca apple_admac spi_apple clk_apple_nco i2c_pasemi_platform snd_pcm_dmaengine mc i2c_pasemi_core mux_core ofpart adpdrm drm_dma_helper apple_dart apple_soc_cpufreq leds_pwm phram\n[   22.073768] CPU: 2 UID: 0 PID: 1 Comm: systemd-shutdow Not tainted 6.11.2-asahi+ #asahi-dev\n[   22.075612] Hardware name: Apple MacBook Pro (13-inch, M2, 2022) (DT)\n[   22.077032] pstate: 01400005 (nzcv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)\n[   22.078567] pc : __flush_work+0x4d8\/0x580\n[   22.079471] lr : __flush_work+0x54\/0x580\n[   22.080345] sp : ffffc000836ef820\n[   22.081089] x29: ffffc000836ef880 x28: 0000000000000000 x27: ffff80002ddb7128\n[   22.082678] x26: dfffc00000000000 x25: 1ffff000096f0c57 x24: ffffc00082d3e358\n[   22.084263] x23: ffff80004b7862b8 x22: dfffc00000000000 x21: ffff80005aa1d470\n[   22.085855] x20: ffff80004b786000 x19: ffff80004b7862a0 x18: 0000000000000000\n[   22.087439] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000005\n[   22.089030] x14: 1ffff800106ddf0a x13: 0000000000000000 x12: 0000000000000000\n[   22.090618] x11: ffffb800106ddf0f x10: dfffc00000000000 x9 : 1ffff800106ddf0e\n[   22.092206] x8 : 0000000000000000 x7 : aaaaaaaaaaaaaaaa x6 : 0000000000000001\n[   22.093790] x5 : ffffc000836ef728 x4 : 0000000000000000 x3 : 0000000000000020\n[   22.095368] x2 : 0000000000000008 x1 : 00000000000000aa x0 : 0000000000000000\n[   22.096955] Call trace:\n[   22.097505]  __flush_work+0x4d8\/0x580\n[   22.098330]  flush_delayed_work+0x80\/0xb8\n[   22.099231]  fb_deferred_io_cleanup+0x3c\/0x130\n[   22.100217]  drm_fbdev_dma_fb_destroy+0x6c\/0xe0 [drm_dma_helper]\n[   22.101559]  unregister_framebuffer+0x210\/0x2f0\n[   22.102575]  drm_fb_helper_unregister_info+0x48\/0x60\n[   22.103683]  drm_fbdev_dma_client_unregister+0x4c\/0x80 [drm_dma_helper]\n[   22.105147]  drm_client_dev_unregister+0x1cc\/0x230\n[   22.106217]  drm_dev_unregister+0x58\/0x570\n[   22.107125]  apple_drm_unbind+0x50\/0x98 [appledrm]\n[   22.108199]  component_del+0x1f8\/0x3a8\n[   22.109042]  dcp_platform_shutdown+0x24\/0x38 [apple_dcp]\n[   22.110357]  platform_shutdown+0x70\/0x90\n[   22.111219]  device_shutdown+0x368\/0x4d8\n[   22.112095]  kernel_restart+0x6c\/0x1d0\n[   22.112946]  __arm64_sys_reboot+0x1c8\/0x328\n[   22.113868]  invoke_syscall+0x78\/0x1a8\n[   22.114703]  do_el0_svc+0x124\/0x1a0\n[   22.115498]  el0_svc+0x3c\/0xe0\n[   22.116181]  el0t_64_sync_handler+0x70\/0xc0\n[   22.117110]  el0t_64_sync+0x190\/0x198\n[   22.117931] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a4a8ea14c54c651ec532a480bd560d0c6e52f3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcddc71ec7ecf15b4df3c41288c9cf0b8e886111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50038","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.877","lastModified":"2024-10-21T20:15:16.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: xtables: avoid NFPROTO_UNSPEC where needed\n\nsyzbot managed to call xt_cluster match via ebtables:\n\n WARNING: CPU: 0 PID: 11 at net\/netfilter\/xt_cluster.c:72 xt_cluster_mt+0x196\/0x780\n [..]\n ebt_do_table+0x174b\/0x2a40\n\nModule registers to NFPROTO_UNSPEC, but it assumes ipv4\/ipv6 packet\nprocessing.  As this is only useful to restrict locally terminating\nTCP\/UDP traffic, register this for ipv4 and ipv6 family only.\n\nPablo points out that this is a general issue, direct users of the\nset\/getsockopt interface can call into targets\/matches that were only\nintended for use with ip(6)tables.\n\nCheck all UNSPEC matches and targets for similar issues:\n\n- matches and targets are fine except if they assume skb_network_header()\n  is valid -- this is only true when called from inet layer: ip(6) stack\n  pulls the ip\/ipv6 header into linear data area.\n- targets that return XT_CONTINUE or other xtables verdicts must be\n  restricted too, they are incompatbile with the ebtables traverser, e.g.\n  EBT_CONTINUE is a completely different value than XT_CONTINUE.\n\nMost matches\/targets are changed to register for NFPROTO_IPV4\/IPV6, as\nthey are provided for use by ip(6)tables.\n\nThe MARK target is also used by arptables, so register for NFPROTO_ARP too.\n\nWhile at it, bail out if connbytes fails to enable the corresponding\nconntrack family.\n\nThis change passes the selftests in iptables.git."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bfcb7b71e735560077a42847f69597ec7dcc326","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cdc55ec6222bb195995cc58f7cb46e4d8907056","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85ff9a0f793ca52c527e75cd40a69c948627ebde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f482bb7e27b37f1f734bb9a8eeb28b23d59d189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/997f67d813ce0cf5eb3cdb8f124da68141e91b6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50039","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:16.957","lastModified":"2024-10-21T20:15:16.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: accept TCA_STAB only for root qdisc\n\nMost qdiscs maintain their backlog using qdisc_pkt_len(skb)\non the assumption it is invariant between the enqueue()\nand dequeue() handlers.\n\nUnfortunately syzbot can crash a host rather easily using\na TBF + SFQ combination, with an STAB on SFQ [1]\n\nWe can't support TCA_STAB on arbitrary level, this would\nrequire to maintain per-qdisc storage.\n\n[1]\n[   88.796496] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[   88.798611] #PF: supervisor read access in kernel mode\n[   88.799014] #PF: error_code(0x0000) - not-present page\n[   88.799506] PGD 0 P4D 0\n[   88.799829] Oops: Oops: 0000 [#1] SMP NOPTI\n[   88.800569] CPU: 14 UID: 0 PID: 2053 Comm: b371744477 Not tainted 6.12.0-rc1-virtme #1117\n[   88.801107] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04\/01\/2014\n[   88.801779] RIP: 0010:sfq_dequeue (net\/sched\/sch_sfq.c:272 net\/sched\/sch_sfq.c:499) sch_sfq\n[ 88.802544] Code: 0f b7 50 12 48 8d 04 d5 00 00 00 00 48 89 d6 48 29 d0 48 8b 91 c0 01 00 00 48 c1 e0 03 48 01 c2 66 83 7a 1a 00 7e c0 48 8b 3a <4c> 8b 07 4c 89 02 49 89 50 08 48 c7 47 08 00 00 00 00 48 c7 07 00\nAll code\n========\n   0:\t0f b7 50 12          \tmovzwl 0x12(%rax),%edx\n   4:\t48 8d 04 d5 00 00 00 \tlea    0x0(,%rdx,8),%rax\n   b:\t00\n   c:\t48 89 d6             \tmov    %rdx,%rsi\n   f:\t48 29 d0             \tsub    %rdx,%rax\n  12:\t48 8b 91 c0 01 00 00 \tmov    0x1c0(%rcx),%rdx\n  19:\t48 c1 e0 03          \tshl    $0x3,%rax\n  1d:\t48 01 c2             \tadd    %rax,%rdx\n  20:\t66 83 7a 1a 00       \tcmpw   $0x0,0x1a(%rdx)\n  25:\t7e c0                \tjle    0xffffffffffffffe7\n  27:\t48 8b 3a             \tmov    (%rdx),%rdi\n  2a:*\t4c 8b 07             \tmov    (%rdi),%r8\t\t<-- trapping instruction\n  2d:\t4c 89 02             \tmov    %r8,(%rdx)\n  30:\t49 89 50 08          \tmov    %rdx,0x8(%r8)\n  34:\t48 c7 47 08 00 00 00 \tmovq   $0x0,0x8(%rdi)\n  3b:\t00\n  3c:\t48                   \trex.W\n  3d:\tc7                   \t.byte 0xc7\n  3e:\t07                   \t(bad)\n\t...\n\nCode starting with the faulting instruction\n===========================================\n   0:\t4c 8b 07             \tmov    (%rdi),%r8\n   3:\t4c 89 02             \tmov    %r8,(%rdx)\n   6:\t49 89 50 08          \tmov    %rdx,0x8(%r8)\n   a:\t48 c7 47 08 00 00 00 \tmovq   $0x0,0x8(%rdi)\n  11:\t00\n  12:\t48                   \trex.W\n  13:\tc7                   \t.byte 0xc7\n  14:\t07                   \t(bad)\n\t...\n[   88.803721] RSP: 0018:ffff9a1f892b7d58 EFLAGS: 00000206\n[   88.804032] RAX: 0000000000000000 RBX: ffff9a1f8420c800 RCX: ffff9a1f8420c800\n[   88.804560] RDX: ffff9a1f81bc1440 RSI: 0000000000000000 RDI: 0000000000000000\n[   88.805056] RBP: ffffffffc04bb0e0 R08: 0000000000000001 R09: 00000000ff7f9a1f\n[   88.805473] R10: 000000000001001b R11: 0000000000009a1f R12: 0000000000000140\n[   88.806194] R13: 0000000000000001 R14: ffff9a1f886df400 R15: ffff9a1f886df4ac\n[   88.806734] FS:  00007f445601a740(0000) GS:ffff9a2e7fd80000(0000) knlGS:0000000000000000\n[   88.807225] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   88.807672] CR2: 0000000000000000 CR3: 000000050cc46000 CR4: 00000000000006f0\n[   88.808165] Call Trace:\n[   88.808459]  <TASK>\n[   88.808710] ? __die (arch\/x86\/kernel\/dumpstack.c:421 arch\/x86\/kernel\/dumpstack.c:434)\n[   88.809261] ? page_fault_oops (arch\/x86\/mm\/fault.c:715)\n[   88.809561] ? exc_page_fault (.\/arch\/x86\/include\/asm\/irqflags.h:26 .\/arch\/x86\/include\/asm\/irqflags.h:87 .\/arch\/x86\/include\/asm\/irqflags.h:147 arch\/x86\/mm\/fault.c:1489 arch\/x86\/mm\/fault.c:1539)\n[   88.809806] ? asm_exc_page_fault (.\/arch\/x86\/include\/asm\/idtentry.h:623)\n[   88.810074] ? sfq_dequeue (net\/sched\/sch_sfq.c:272 net\/sched\/sch_sfq.c:499) sch_sfq\n[   88.810411] sfq_reset (net\/sched\/sch_sfq.c:525) sch_sfq\n[   88.810671] qdisc_reset (.\/include\/linux\/skbuff.h:2135 .\/include\/linux\/skbuff.h:2441 .\/include\/linux\/skbuff.h:3304 .\/include\/linux\/skbuff.h:3310 net\/sched\/sch_g\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1edf039ee01788ffc25625fe58a903ae2efa213e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cb7cf1540ddff5473d6baeb530228d19bc97b8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dc6ee96473cc2962c6db4297d4631f261be150f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76feedc74b90270390fbfdf74a2e944e96872363","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb6503592d39065316f45d267c5527b4e7cd995","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adbc3eef43fc94c7c8436da832691ae02333a972","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50040","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.050","lastModified":"2024-10-21T20:15:17.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Do not bring the device up after non-fatal error\n\nCommit 004d25060c78 (\"igb: Fix igb_down hung on surprise removal\")\nchanged igb_io_error_detected() to ignore non-fatal pcie errors in order\nto avoid hung task that can happen when igb_down() is called multiple\ntimes. This caused an issue when processing transient non-fatal errors.\nigb_io_resume(), which is called after igb_io_error_detected(), assumes\nthat device is brought down by igb_io_error_detected() if the interface\nis up. This resulted in panic with stacktrace below.\n\n[ T3256] igb 0000:09:00.0 haeth0: igb: haeth0 NIC Link is Down\n[  T292] pcieport 0000:00:1c.5: AER: Uncorrected (Non-Fatal) error received: 0000:09:00.0\n[  T292] igb 0000:09:00.0: PCIe Bus Error: severity=Uncorrected (Non-Fatal), type=Transaction Layer, (Requester ID)\n[  T292] igb 0000:09:00.0:   device [8086:1537] error status\/mask=00004000\/00000000\n[  T292] igb 0000:09:00.0:    [14] CmpltTO [  200.105524,009][  T292] igb 0000:09:00.0: AER:   TLP Header: 00000000 00000000 00000000 00000000\n[  T292] pcieport 0000:00:1c.5: AER: broadcast error_detected message\n[  T292] igb 0000:09:00.0: Non-correctable non-fatal error reported.\n[  T292] pcieport 0000:00:1c.5: AER: broadcast mmio_enabled message\n[  T292] pcieport 0000:00:1c.5: AER: broadcast resume message\n[  T292] ------------[ cut here ]------------\n[  T292] kernel BUG at net\/core\/dev.c:6539!\n[  T292] invalid opcode: 0000 [#1] PREEMPT SMP\n[  T292] RIP: 0010:napi_enable+0x37\/0x40\n[  T292] Call Trace:\n[  T292]  <TASK>\n[  T292]  ? die+0x33\/0x90\n[  T292]  ? do_trap+0xdc\/0x110\n[  T292]  ? napi_enable+0x37\/0x40\n[  T292]  ? do_error_trap+0x70\/0xb0\n[  T292]  ? napi_enable+0x37\/0x40\n[  T292]  ? napi_enable+0x37\/0x40\n[  T292]  ? exc_invalid_op+0x4e\/0x70\n[  T292]  ? napi_enable+0x37\/0x40\n[  T292]  ? asm_exc_invalid_op+0x16\/0x20\n[  T292]  ? napi_enable+0x37\/0x40\n[  T292]  igb_up+0x41\/0x150\n[  T292]  igb_io_resume+0x25\/0x70\n[  T292]  report_resume+0x54\/0x70\n[  T292]  ? report_frozen_detected+0x20\/0x20\n[  T292]  pci_walk_bus+0x6c\/0x90\n[  T292]  ? aer_print_port_info+0xa0\/0xa0\n[  T292]  pcie_do_recovery+0x22f\/0x380\n[  T292]  aer_process_err_devices+0x110\/0x160\n[  T292]  aer_isr+0x1c1\/0x1e0\n[  T292]  ? disable_irq_nosync+0x10\/0x10\n[  T292]  irq_thread_fn+0x1a\/0x60\n[  T292]  irq_thread+0xe3\/0x1a0\n[  T292]  ? irq_set_affinity_notifier+0x120\/0x120\n[  T292]  ? irq_affinity_notify+0x100\/0x100\n[  T292]  kthread+0xe2\/0x110\n[  T292]  ? kthread_complete_and_exit+0x20\/0x20\n[  T292]  ret_from_fork+0x2d\/0x50\n[  T292]  ? kthread_complete_and_exit+0x20\/0x20\n[  T292]  ret_from_fork_asm+0x11\/0x20\n[  T292]  <\/TASK>\n\nTo fix this issue igb_io_resume() checks if the interface is running and\nthe device is not down this means igb_io_error_detected() did not bring\nthe device down and there is no need to bring it up."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a94079e3841d00ea5abb05e3233d019a86745f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/330a699ecbfc9c26ec92c6310686da1230b4e7eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/500be93c5d53b7e2c5314292012185f0207bad0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57c5053eaa5f9a8a99e34732e37a86615318e464","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a39c8f5c8aae74c5ab2ba466791f59ffaab0178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d79af3af2f49c6aae9add3d492c04d60c1b85ce4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50041","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.133","lastModified":"2024-10-21T20:15:17.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix macvlan leak by synchronizing access to mac_filter_hash\n\nThis patch addresses a macvlan leak issue in the i40e driver caused by\nconcurrent access to vsi->mac_filter_hash. The leak occurs when multiple\nthreads attempt to modify the mac_filter_hash simultaneously, leading to\ninconsistent state and potential memory leaks.\n\nTo fix this, we now wrap the calls to i40e_del_mac_filter() and zeroing\nvf->default_lan_addr.addr with spin_lock\/unlock_bh(&vsi->mac_filter_hash_lock),\nensuring atomic operations and preventing concurrent access.\n\nAdditionally, we add lockdep_assert_held(&vsi->mac_filter_hash_lock) in\ni40e_add_mac_filter() to help catch similar issues in the future.\n\nReproduction steps:\n1. Spawn VFs and configure port vlan on them.\n2. Trigger concurrent macvlan operations (e.g., adding and deleting\n\tportvlan and\/or mac filters).\n3. Observe the potential memory leak and inconsistent state in the\n\tmac_filter_hash.\n\nThis synchronization ensures the integrity of the mac_filter_hash and prevents\nthe described leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/703c4d820b31bcadf465288d5746c53445f02a55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8831abff1bd5b6bc8224f0c0671f46fbd702b5b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a9747288ba0a9ad4f5c9877f18dd245770ad64e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9db6ce9e2738b05a3672aff4d42169cf3bb5a3e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dac6c7b3d33756d6ce09f00a96ea2ecd79fae9fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50042","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.200","lastModified":"2024-10-21T20:15:17.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix increasing MSI-X on VF\n\nIncreasing MSI-X value on a VF leads to invalid memory operations. This\nis caused by not reallocating some arrays.\n\nReproducer:\n  modprobe ice\n  echo 0 > \/sys\/bus\/pci\/devices\/$PF_PCI\/sriov_drivers_autoprobe\n  echo 1 > \/sys\/bus\/pci\/devices\/$PF_PCI\/sriov_numvfs\n  echo 17 > \/sys\/bus\/pci\/devices\/$VF0_PCI\/sriov_vf_msix_count\n\nDefault MSI-X is 16, so 17 and above triggers this issue.\n\nKASAN reports:\n\n  BUG: KASAN: slab-out-of-bounds in ice_vsi_alloc_ring_stats+0x38d\/0x4b0 [ice]\n  Read of size 8 at addr ffff8888b937d180 by task bash\/28433\n  (...)\n\n  Call Trace:\n   (...)\n   ? ice_vsi_alloc_ring_stats+0x38d\/0x4b0 [ice]\n   kasan_report+0xed\/0x120\n   ? ice_vsi_alloc_ring_stats+0x38d\/0x4b0 [ice]\n   ice_vsi_alloc_ring_stats+0x38d\/0x4b0 [ice]\n   ice_vsi_cfg_def+0x3360\/0x4770 [ice]\n   ? mutex_unlock+0x83\/0xd0\n   ? __pfx_ice_vsi_cfg_def+0x10\/0x10 [ice]\n   ? __pfx_ice_remove_vsi_lkup_fltr+0x10\/0x10 [ice]\n   ice_vsi_cfg+0x7f\/0x3b0 [ice]\n   ice_vf_reconfig_vsi+0x114\/0x210 [ice]\n   ice_sriov_set_msix_vec_count+0x3d0\/0x960 [ice]\n   sriov_vf_msix_count_store+0x21c\/0x300\n   (...)\n\n  Allocated by task 28201:\n   (...)\n   ice_vsi_cfg_def+0x1c8e\/0x4770 [ice]\n   ice_vsi_cfg+0x7f\/0x3b0 [ice]\n   ice_vsi_setup+0x179\/0xa30 [ice]\n   ice_sriov_configure+0xcaa\/0x1520 [ice]\n   sriov_numvfs_store+0x212\/0x390\n   (...)\n\nTo fix it, use ice_vsi_rebuild() instead of ice_vf_reconfig_vsi(). This\ncauses the required arrays to be reallocated taking the new queue count\ninto account (ice_vsi_realloc_stat_arrays()). Set req_txq and req_rxq\nbefore ice_vsi_rebuild(), so that realloc uses the newly set queue\ncount.\n\nAdditionally, ice_vsi_rebuild() does not remove VSI filters\n(ice_fltr_remove_all()), so ice_vf_init_host_cfg() is no longer\nnecessary."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/bce9af1b030bf59d51bbabf909a3ef164787e44e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbda6197929418fabf0e45ecf9b7a76360944c70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50043","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.263","lastModified":"2024-10-21T20:15:17.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix possible badness in FREE_STATEID\n\nWhen multiple FREE_STATEIDs are sent for the same delegation stateid,\nit can lead to a possible either use-after-free or counter refcount\nunderflow errors.\n\nIn nfsd4_free_stateid() under the client lock we find a delegation\nstateid, however the code drops the lock before calling nfs4_put_stid(),\nthat allows another FREE_STATE to find the stateid again. The first one\nwill proceed to then free the stateid which leads to either\nuse-after-free or decrementing already zeroed counter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7ca9e472ce5c67daa3188a348ece8c02a0765039","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c88c150a467fcb670a1608e2272beeee3e86df6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50044","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.313","lastModified":"2024-10-21T20:15:17.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: FIX possible deadlock in rfcomm_sk_state_change\n\nrfcomm_sk_state_change attempts to use sock_lock so it must never be\ncalled with it locked but rfcomm_sock_ioctl always attempt to lock it\ncausing the following trace:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-syzkaller-08951-gfe46a7dd189e #0 Not tainted\n------------------------------------------------------\nsyz-executor386\/5093 is trying to acquire lock:\nffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: lock_sock include\/net\/sock.h:1671 [inline]\nffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: rfcomm_sk_state_change+0x5b\/0x310 net\/bluetooth\/rfcomm\/sock.c:73\n\nbut task is already holding lock:\nffff88807badfd28 (&d->lock){+.+.}-{3:3}, at: __rfcomm_dlc_close+0x226\/0x6a0 net\/bluetooth\/rfcomm\/core.c:491"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d1914293dae38350b8088980e59fbc699a72fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38b2d5a57d125e1c17661b8308c0240c4a43b534","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/496b2ab0fd10f205e08909a125485fdc98843dbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cb9807c9b53bf1e5560420d26f319f528b50268","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ced98072d3511b232ae1d3347945f35f30c0e303","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef44274dae9b0a90d1a97ce8b242a3b8243a7745","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50045","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.373","lastModified":"2024-10-21T20:15:17.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: br_netfilter: fix panic with metadata_dst skb\n\nFix a kernel panic in the br_netfilter module when sending untagged\ntraffic via a VxLAN device.\nThis happens during the check for fragmentation in br_nf_dev_queue_xmit.\n\nIt is dependent on:\n1) the br_netfilter module being loaded;\n2) net.bridge.bridge-nf-call-iptables set to 1;\n3) a bridge with a VxLAN (single-vxlan-device) netdevice as a bridge port;\n4) untagged frames with size higher than the VxLAN MTU forwarded\/flooded\n\nWhen forwarding the untagged packet to the VxLAN bridge port, before\nthe netfilter hooks are called, br_handle_egress_vlan_tunnel is called and\nchanges the skb_dst to the tunnel dst. The tunnel_dst is a metadata type\nof dst, i.e., skb_valid_dst(skb) is false, and metadata->dst.dev is NULL.\n\nThen in the br_netfilter hooks, in br_nf_dev_queue_xmit, there's a check\nfor frames that needs to be fragmented: frames with higher MTU than the\nVxLAN device end up calling br_nf_ip_fragment, which in turns call\nip_skb_dst_mtu.\n\nThe ip_dst_mtu tries to use the skb_dst(skb) as if it was a valid dst\nwith valid dst->dev, thus the crash.\n\nThis case was never supported in the first place, so drop the packet\ninstead.\n\nPING 10.0.0.2 (10.0.0.2) from 0.0.0.0 h1-eth0: 2000(2028) bytes of data.\n[  176.291791] Unable to handle kernel NULL pointer dereference at\nvirtual address 0000000000000110\n[  176.292101] Mem abort info:\n[  176.292184]   ESR = 0x0000000096000004\n[  176.292322]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  176.292530]   SET = 0, FnV = 0\n[  176.292709]   EA = 0, S1PTW = 0\n[  176.292862]   FSC = 0x04: level 0 translation fault\n[  176.293013] Data abort info:\n[  176.293104]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n[  176.293488]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[  176.293787]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[  176.293995] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000043ef5000\n[  176.294166] [0000000000000110] pgd=0000000000000000,\np4d=0000000000000000\n[  176.294827] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[  176.295252] Modules linked in: vxlan ip6_udp_tunnel udp_tunnel veth\nbr_netfilter bridge stp llc ipv6 crct10dif_ce\n[  176.295923] CPU: 0 PID: 188 Comm: ping Not tainted\n6.8.0-rc3-g5b3fbd61b9d1 #2\n[  176.296314] Hardware name: linux,dummy-virt (DT)\n[  176.296535] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS\nBTYPE=--)\n[  176.296808] pc : br_nf_dev_queue_xmit+0x390\/0x4ec [br_netfilter]\n[  176.297382] lr : br_nf_dev_queue_xmit+0x2ac\/0x4ec [br_netfilter]\n[  176.297636] sp : ffff800080003630\n[  176.297743] x29: ffff800080003630 x28: 0000000000000008 x27:\nffff6828c49ad9f8\n[  176.298093] x26: ffff6828c49ad000 x25: 0000000000000000 x24:\n00000000000003e8\n[  176.298430] x23: 0000000000000000 x22: ffff6828c4960b40 x21:\nffff6828c3b16d28\n[  176.298652] x20: ffff6828c3167048 x19: ffff6828c3b16d00 x18:\n0000000000000014\n[  176.298926] x17: ffffb0476322f000 x16: ffffb7e164023730 x15:\n0000000095744632\n[  176.299296] x14: ffff6828c3f1c880 x13: 0000000000000002 x12:\nffffb7e137926a70\n[  176.299574] x11: 0000000000000001 x10: ffff6828c3f1c898 x9 :\n0000000000000000\n[  176.300049] x8 : ffff6828c49bf070 x7 : 0008460f18d5f20e x6 :\nf20e0100bebafeca\n[  176.300302] x5 : ffff6828c7f918fe x4 : ffff6828c49bf070 x3 :\n0000000000000000\n[  176.300586] x2 : 0000000000000000 x1 : ffff6828c3c7ad00 x0 :\nffff6828c7f918f0\n[  176.300889] Call trace:\n[  176.301123]  br_nf_dev_queue_xmit+0x390\/0x4ec [br_netfilter]\n[  176.301411]  br_nf_post_routing+0x2a8\/0x3e4 [br_netfilter]\n[  176.301703]  nf_hook_slow+0x48\/0x124\n[  176.302060]  br_forward_finish+0xc8\/0xe8 [bridge]\n[  176.302371]  br_nf_hook_thresh+0x124\/0x134 [br_netfilter]\n[  176.302605]  br_nf_forward_finish+0x118\/0x22c [br_netfilter]\n[  176.302824]  br_nf_forward_ip.part.0+0x264\/0x290 [br_netfilter]\n[  176.303136]  br_nf_forward+0x2b8\/0x4e0 [br_netfilter]\n[  176.303359]  nf_hook_slow+0x48\/0x124\n[  176.303\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3453f5839420bfbb85c86c61e49f49ffd0f041c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78ed917133b118661e1fe62d4a85d5d428ee9568","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/915717e0bb9837cc5c101bc545af487bd787239e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95c0cff5a1a5d28bf623b92eb5d1a8f56ed30803","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cce8419b8168f6e7eb637103a47f916f3de8bc81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9ff7665cd128012868098bbd07e28993e314fdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50046","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.437","lastModified":"2024-10-21T20:15:17.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Prevent NULL-pointer dereference in nfs42_complete_copies()\n\nOn the node of an NFS client, some files saved in the mountpoint of the\nNFS server were copied to another location of the same NFS server.\nAccidentally, the nfs42_complete_copies() got a NULL-pointer dereference\ncrash with the following syslog:\n\n[232064.838881] NFSv4: state recovery failed for open file nfs\/pvc-12b5200d-cd0f-46a3-b9f0-af8f4fe0ef64.qcow2, error = -116\n[232064.839360] NFSv4: state recovery failed for open file nfs\/pvc-12b5200d-cd0f-46a3-b9f0-af8f4fe0ef64.qcow2, error = -116\n[232066.588183] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000058\n[232066.588586] Mem abort info:\n[232066.588701]   ESR = 0x0000000096000007\n[232066.588862]   EC = 0x25: DABT (current EL), IL = 32 bits\n[232066.589084]   SET = 0, FnV = 0\n[232066.589216]   EA = 0, S1PTW = 0\n[232066.589340]   FSC = 0x07: level 3 translation fault\n[232066.589559] Data abort info:\n[232066.589683]   ISV = 0, ISS = 0x00000007\n[232066.589842]   CM = 0, WnR = 0\n[232066.589967] user pgtable: 64k pages, 48-bit VAs, pgdp=00002000956ff400\n[232066.590231] [0000000000000058] pgd=08001100ae100003, p4d=08001100ae100003, pud=08001100ae100003, pmd=08001100b3c00003, pte=0000000000000000\n[232066.590757] Internal error: Oops: 96000007 [#1] SMP\n[232066.590958] Modules linked in: rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm vhost_net vhost vhost_iotlb tap tun ipt_rpfilter xt_multiport ip_set_hash_ip ip_set_hash_net xfrm_interface xfrm6_tunnel tunnel4 tunnel6 esp4 ah4 wireguard libcurve25519_generic veth xt_addrtype xt_set nf_conntrack_netlink ip_set_hash_ipportnet ip_set_hash_ipportip ip_set_bitmap_port ip_set_hash_ipport dummy ip_set ip_vs_sh ip_vs_wrr ip_vs_rr ip_vs iptable_filter sch_ingress nfnetlink_cttimeout vport_gre ip_gre ip_tunnel gre vport_geneve geneve vport_vxlan vxlan ip6_udp_tunnel udp_tunnel openvswitch nf_conncount dm_round_robin dm_service_time dm_multipath xt_nat xt_MASQUERADE nft_chain_nat nf_nat xt_mark xt_conntrack xt_comment nft_compat nft_counter nf_tables nfnetlink ocfs2 ocfs2_nodemanager ocfs2_stackglue iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi ipmi_ssif nbd overlay 8021q garp mrp bonding tls rfkill sunrpc ext4 mbcache jbd2\n[232066.591052]  vfat fat cas_cache cas_disk ses enclosure scsi_transport_sas sg acpi_ipmi ipmi_si ipmi_devintf ipmi_msghandler ip_tables vfio_pci vfio_pci_core vfio_virqfd vfio_iommu_type1 vfio dm_mirror dm_region_hash dm_log dm_mod nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 br_netfilter bridge stp llc fuse xfs libcrc32c ast drm_vram_helper qla2xxx drm_kms_helper syscopyarea crct10dif_ce sysfillrect ghash_ce sysimgblt sha2_ce fb_sys_fops cec sha256_arm64 sha1_ce drm_ttm_helper ttm nvme_fc igb sbsa_gwdt nvme_fabrics drm nvme_core i2c_algo_bit i40e scsi_transport_fc megaraid_sas aes_neon_bs\n[232066.596953] CPU: 6 PID: 4124696 Comm: 10.253.166.125- Kdump: loaded Not tainted 5.15.131-9.cl9_ocfs2.aarch64 #1\n[232066.597356] Hardware name: Great Wall .\\x93\\x8e...RF6260 V5\/GWMSSE2GL1T, BIOS T656FBE_V3.0.18 2024-01-06\n[232066.597721] pstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[232066.598034] pc : nfs4_reclaim_open_state+0x220\/0x800 [nfsv4]\n[232066.598327] lr : nfs4_reclaim_open_state+0x12c\/0x800 [nfsv4]\n[232066.598595] sp : ffff8000f568fc70\n[232066.598731] x29: ffff8000f568fc70 x28: 0000000000001000 x27: ffff21003db33000\n[232066.599030] x26: ffff800005521ae0 x25: ffff0100f98fa3f0 x24: 0000000000000001\n[232066.599319] x23: ffff800009920008 x22: ffff21003db33040 x21: ffff21003db33050\n[232066.599628] x20: ffff410172fe9e40 x19: ffff410172fe9e00 x18: 0000000000000000\n[232066.599914] x17: 0000000000000000 x16: 0000000000000004 x15: 0000000000000000\n[232066.600195] x14: 0000000000000000 x13: ffff800008e685a8 x12: 00000000eac0c6e6\n[232066.600498] x11: 00000000000000\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/584c019baedddec3fd634053e8fb2d8836108d38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/632344b9efa064ca737bfcdaaaced59fd5f18ae9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a848c29e3486189aaabd5663bc11aea50c5bd144","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef9189bb15dcbe7ed3f3515aaa6fc8bf7483960d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f892165c564e3aab272948dbb556cc20e290c55a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fca41e5fa4914d12b2136c25f9dad69520b52683","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50047","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.507","lastModified":"2024-10-21T20:15:17.507","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in async decryption\n\nDoing an async decryption (large read) crashes with a\nslab-use-after-free way down in the crypto API.\n\nReproducer:\n    # mount.cifs -o ...,seal,esize=1 \/\/srv\/share \/mnt\n    # dd if=\/mnt\/largefile of=\/dev\/null\n    ...\n    [  194.196391] ==================================================================\n    [  194.196844] BUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xc1\/0x110\n    [  194.197269] Read of size 8 at addr ffff888112bd0448 by task kworker\/u77:2\/899\n    [  194.197707]\n    [  194.197818] CPU: 12 UID: 0 PID: 899 Comm: kworker\/u77:2 Not tainted 6.11.0-lku-00028-gfca3ca14a17a-dirty #43\n    [  194.198400] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04\/01\/2014\n    [  194.199046] Workqueue: smb3decryptd smb2_decrypt_offload [cifs]\n    [  194.200032] Call Trace:\n    [  194.200191]  <TASK>\n    [  194.200327]  dump_stack_lvl+0x4e\/0x70\n    [  194.200558]  ? gf128mul_4k_lle+0xc1\/0x110\n    [  194.200809]  print_report+0x174\/0x505\n    [  194.201040]  ? __pfx__raw_spin_lock_irqsave+0x10\/0x10\n    [  194.201352]  ? srso_return_thunk+0x5\/0x5f\n    [  194.201604]  ? __virt_addr_valid+0xdf\/0x1c0\n    [  194.201868]  ? gf128mul_4k_lle+0xc1\/0x110\n    [  194.202128]  kasan_report+0xc8\/0x150\n    [  194.202361]  ? gf128mul_4k_lle+0xc1\/0x110\n    [  194.202616]  gf128mul_4k_lle+0xc1\/0x110\n    [  194.202863]  ghash_update+0x184\/0x210\n    [  194.203103]  shash_ahash_update+0x184\/0x2a0\n    [  194.203377]  ? __pfx_shash_ahash_update+0x10\/0x10\n    [  194.203651]  ? srso_return_thunk+0x5\/0x5f\n    [  194.203877]  ? crypto_gcm_init_common+0x1ba\/0x340\n    [  194.204142]  gcm_hash_assoc_remain_continue+0x10a\/0x140\n    [  194.204434]  crypt_message+0xec1\/0x10a0 [cifs]\n    [  194.206489]  ? __pfx_crypt_message+0x10\/0x10 [cifs]\n    [  194.208507]  ? srso_return_thunk+0x5\/0x5f\n    [  194.209205]  ? srso_return_thunk+0x5\/0x5f\n    [  194.209925]  ? srso_return_thunk+0x5\/0x5f\n    [  194.210443]  ? srso_return_thunk+0x5\/0x5f\n    [  194.211037]  decrypt_raw_data+0x15f\/0x250 [cifs]\n    [  194.212906]  ? __pfx_decrypt_raw_data+0x10\/0x10 [cifs]\n    [  194.214670]  ? srso_return_thunk+0x5\/0x5f\n    [  194.215193]  smb2_decrypt_offload+0x12a\/0x6c0 [cifs]\n\nThis is because TFM is being used in parallel.\n\nFix this by allocating a new AEAD TFM for async decryption, but keep\nthe existing one for synchronous READ cases (similar to what is done\nin smb3_calc_signature()).\n\nAlso remove the calls to aead_request_set_callback() and\ncrypto_wait_req() since it's always going to be a synchronous operation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0809fb86ad13b29e1d6d491364fc7ea4fb545995","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/538c26d9bf70c90edc460d18c81008a4e555925a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0abcd65ec545701b8793e12bc27dc98042b151a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50048","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.580","lastModified":"2024-10-21T20:15:17.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbcon: Fix a NULL pointer dereference issue in fbcon_putcs\n\nsyzbot has found a NULL pointer dereference bug in fbcon.\nHere is the simplified C reproducer:\n\nstruct param {\n\tuint8_t type;\n\tstruct tiocl_selection ts;\n};\n\nint main()\n{\n\tstruct fb_con2fbmap con2fb;\n\tstruct param param;\n\n\tint fd = open(\"\/dev\/fb1\", 0, 0);\n\n\tcon2fb.console = 0x19;\n\tcon2fb.framebuffer = 0;\n\tioctl(fd, FBIOPUT_CON2FBMAP, &con2fb);\n\n\tparam.type = 2;\n\tparam.ts.xs = 0; param.ts.ys = 0;\n\tparam.ts.xe = 0; param.ts.ye = 0;\n\tparam.ts.sel_mode = 0;\n\n\tint fd1 = open(\"\/dev\/tty1\", O_RDWR, 0);\n\tioctl(fd1, TIOCLINUX, &param);\n\n\tcon2fb.console = 1;\n\tcon2fb.framebuffer = 0;\n\tioctl(fd, FBIOPUT_CON2FBMAP, &con2fb);\n\n\treturn 0;\n}\n\nAfter calling ioctl(fd1, TIOCLINUX, &param), the subsequent ioctl(fd, FBIOPUT_CON2FBMAP, &con2fb)\ncauses the kernel to follow a different execution path:\n\n set_con2fb_map\n  -> con2fb_init_display\n   -> fbcon_set_disp\n    -> redraw_screen\n     -> hide_cursor\n      -> clear_selection\n       -> highlight\n        -> invert_screen\n         -> do_update_region\n          -> fbcon_putcs\n           -> ops->putcs\n\nSince ops->putcs is a NULL pointer, this leads to a kernel panic.\nTo prevent this, we need to call set_blitting_type() within set_con2fb_map()\nto properly initialize ops->putcs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b97eebcce1b4f3f07a71f635d6aa3af96c236e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8266ae6eafdcd5a3136592445ff4038bbc7ee80e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5c2dba62996a3a6eeb34bd248b90fc69c5a6a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7fb5dda555344529ce584ff7a28b109528d2f1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50049","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.687","lastModified":"2024-10-21T20:15:17.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check null pointer before dereferencing se\n\n[WHAT & HOW]\nse is null checked previously in the same function, indicating\nit might be null; therefore, it must be checked when used again.\n\nThis fixes 1 FORWARD_NULL issue reported by Coverity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/65b2d49e55fe13ae56da3a7685bdccadca31134a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97a79933fb08a002ba9400d1a7a5df707ecdb896","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9b4fd1946678fa0e069e442f3c5a7d3fa446fac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c643ef59390e49f1dfab35e8ea65f5db5e527d64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4149eec960110ffd5bcb161075dd9f1d7773075","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff599ef6970ee000fa5bc38d02fa5ff5f3fc7575","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50055","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.770","lastModified":"2024-10-21T20:15:17.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: bus: Fix double free in driver API bus_register()\n\nFor bus_register(), any error which happens after kset_register() will\ncause that @priv are freed twice, fixed by setting @priv with NULL after\nthe first free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9ce15f68abedfae7ae0a35e95895aeddfd0f0c6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfa54a793ba77ef696755b66f3ac4ed00c7d1248","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d885c464c25018b81a6b58f5d548fc2e3ef87dd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50056","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.853","lastModified":"2024-10-21T20:15:17.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: uvc: Fix ERR_PTR dereference in uvc_v4l2.c\n\nFix potential dereferencing of ERR_PTR() in find_format_by_pix()\nand uvc_v4l2_enum_format().\n\nFix the following smatch errors:\n\ndrivers\/usb\/gadget\/function\/uvc_v4l2.c:124 find_format_by_pix()\nerror: 'fmtdesc' dereferencing possible ERR_PTR()\n\ndrivers\/usb\/gadget\/function\/uvc_v4l2.c:392 uvc_v4l2_enum_format()\nerror: 'fmtdesc' dereferencing possible ERR_PTR()\n\nAlso, fix similar issue in uvc_v4l2_try_format() for potential\ndereferencing of ERR_PTR()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a7bb96b18864225a694e3887ac2733159489e4b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cedeb36c3ff4acd0f3d09918dfd8ed1df05efdd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50057","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.933","lastModified":"2024-10-21T20:15:17.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tipd: Free IRQ only if it was requested before\n\nIn polling mode, if no IRQ was requested there is no need to free it.\nCall devm_free_irq() only if client->irq is set. This fixes the warning\ncaused by the tps6598x module removal:\n\nWARNING: CPU: 2 PID: 333 at kernel\/irq\/devres.c:144 devm_free_irq+0x80\/0x8c\n...\n...\nCall trace:\n  devm_free_irq+0x80\/0x8c\n  tps6598x_remove+0x28\/0x88 [tps6598x]\n  i2c_device_remove+0x2c\/0x9c\n  device_remove+0x4c\/0x80\n  device_release_driver_internal+0x1cc\/0x228\n  driver_detach+0x50\/0x98\n  bus_remove_driver+0x6c\/0xbc\n  driver_unregister+0x30\/0x60\n  i2c_del_driver+0x54\/0x64\n  tps6598x_i2c_driver_exit+0x18\/0xc3c [tps6598x]\n  __arm64_sys_delete_module+0x184\/0x264\n  invoke_syscall+0x48\/0x110\n  el0_svc_common.constprop.0+0xc8\/0xe8\n  do_el0_svc+0x20\/0x2c\n  el0_svc+0x28\/0x98\n  el0t_64_sync_handler+0x13c\/0x158\n  el0t_64_sync+0x190\/0x194"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d4b23c119542fbaed2a16794d3801cb4806ea02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b72bf5cade51ba4055c8a8998d275e72e6b521ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db63d9868f7f310de44ba7bea584e2454f8b4ed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50058","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:17.993","lastModified":"2024-10-21T20:15:17.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nserial: protect uart_port_dtr_rts() in uart_shutdown() too\n\nCommit af224ca2df29 (serial: core: Prevent unsafe uart port access, part\n3) added few uport == NULL checks. It added one to uart_shutdown(), so\nthe commit assumes, uport can be NULL in there. But right after that\nprotection, there is an unprotected \"uart_port_dtr_rts(uport, false);\"\ncall. That is invoked only if HUPCL is set, so I assume that is the\nreason why we do not see lots of these reports.\n\nOr it cannot be NULL at this point at all for some reason :P.\n\nUntil the above is investigated, stay on the safe side and move this\ndereference to the if too.\n\nI got this inconsistency from Coverity under CID 1585130. Thanks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/602babaa84d627923713acaf5f7e9a4369e77473","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76ed24a34223bb2c6b6162e1d8389ec4e602a290","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e418d91195d29d5f9c9685ff309b92b04b41dc40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50059","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.057","lastModified":"2024-10-21T20:15:18.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntb: ntb_hw_switchtec: Fix use after free vulnerability in switchtec_ntb_remove due to race condition\n\nIn the switchtec_ntb_add function, it can call switchtec_ntb_init_sndev\nfunction, then &sndev->check_link_status_work is bound with\ncheck_link_status_work. switchtec_ntb_link_notification may be called\nto start the work.\n\nIf we remove the module which will call switchtec_ntb_remove to make\ncleanup, it will free sndev through kfree(sndev), while the work\nmentioned above will be used. The sequence of operations that may lead\nto a UAF bug is as follows:\n\nCPU0                                 CPU1\n\n                        | check_link_status_work\nswitchtec_ntb_remove    |\nkfree(sndev);           |\n                        | if (sndev->link_force_down)\n                        | \/\/ use sndev\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in switchtec_ntb_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/177925d9c8715a897bb79eca62628862213ba956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ae45be8492460a35b5aebf6acac1f1d32708946","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92728fceefdaa2a0a3aae675f86193b006eeaa43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b650189687822b705711f0567a65a164a314d8df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e51aded92d42784313ba16c12f4f88cc4f973bbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa840ba4bd9f3bad7f104e5b32028ee73af8b3dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50060","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.117","lastModified":"2024-10-21T20:15:18.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: check if we need to reschedule during overflow flush\n\nIn terms of normal application usage, this list will always be empty.\nAnd if an application does overflow a bit, it'll have a few entries.\nHowever, nothing obviously prevents syzbot from running a test case\nthat generates a ton of overflow entries, and then flushing them can\ntake quite a while.\n\nCheck for needing to reschedule while flushing, and drop our locks and\ndo so if necessary. There's no state to maintain here as overflows\nalways prune from head-of-list, hence it's fine to drop and reacquire\nthe locks at the end of the loop."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a2493904e95ce94bbec819d8f7f03b99976eb25c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2eadeafce2d385b3f6d26a7f31fee5aba2bbbb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eac2ca2d682f94f46b1973bdf5e77d85d77b8e53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4ce3b5d26ce149e77e6b8e8f2058aa80e5b034e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50061","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.210","lastModified":"2024-10-21T20:15:18.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: cdns: Fix use after free vulnerability in cdns_i3c_master Driver Due to Race Condition\n\nIn the cdns_i3c_master_probe function, &master->hj_work is bound with\ncdns_i3c_master_hj. And cdns_i3c_master_interrupt can call\ncnds_i3c_master_demux_ibis function to start the work.\n\nIf we remove the module which will call cdns_i3c_master_remove to\nmake cleanup, it will free master->base through i3c_master_unregister\nwhile the work mentioned above will be used. The sequence of operations\nthat may lead to a UAF bug is as follows:\n\nCPU0                                      CPU1\n\n                                     | cdns_i3c_master_hj\ncdns_i3c_master_remove               |\ni3c_master_unregister(&master->base) |\ndevice_unregister(&master->dev)      |\ndevice_release                       |\n\/\/free master->base                  |\n                                     | i3c_master_do_daa(&master->base)\n                                     | \/\/use master->base\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in cdns_i3c_master_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/609366e7a06d035990df78f1562291c3bf0d4a12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/687016d6a1efbfacdd2af913e2108de6b75a28d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea0256e393e0072e8c80fd941547807f0c28108b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50062","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.280","lastModified":"2024-10-21T20:15:18.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/rtrs-srv: Avoid null pointer deref during path establishment\n\nFor RTRS path establishment, RTRS client initiates and completes con_num\nof connections. After establishing all its connections, the information\nis exchanged between the client and server through the info_req message.\nDuring this exchange, it is essential that all connections have been\nestablished, and the state of the RTRS srv path is CONNECTED.\n\nSo add these sanity checks, to make sure we detect and abort process in\nerror scenarios to avoid null pointer deref."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/394b2f4d5e014820455af3eb5859eb328eaafcfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5d4076664465487a9a3d226756995b12fb73d71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b720792d7e8515bc695752e0ed5884e2ea34d12a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccb8e44ae3e2391235f80ffc6be59bec6b889ead","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0e62bf7b575fbfe591f6f570e7595dd60a2f5eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50063","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.360","lastModified":"2024-10-21T20:15:18.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Prevent tail call between progs attached to different hooks\n\nbpf progs can be attached to kernel functions, and the attached functions\ncan take different parameters or return different return values. If\nprog attached to one kernel function tail calls prog attached to another\nkernel function, the ctx access or return value verification could be\nbypassed.\n\nFor example, if prog1 is attached to func1 which takes only 1 parameter\nand prog2 is attached to func2 which takes two parameters. Since verifier\nassumes the bpf ctx passed to prog2 is constructed based on func2's\nprototype, verifier allows prog2 to access the second parameter from\nthe bpf ctx passed to it. The problem is that verifier does not prevent\nprog1 from passing its bpf ctx to prog2 via tail call. In this case,\nthe bpf ctx passed to prog2 is constructed from func1 instead of func2,\nthat is, the assumption for ctx access verification is bypassed.\n\nAnother example, if BPF LSM prog1 is attached to hook file_alloc_security,\nand BPF LSM prog2 is attached to hook bpf_lsm_audit_rule_known. Verifier\nknows the return value rules for these two hooks, e.g. it is legal for\nbpf_lsm_audit_rule_known to return positive number 1, and it is illegal\nfor file_alloc_security to return positive number. So verifier allows\nprog2 to return positive number 1, but does not allow prog1 to return\npositive number. The problem is that verifier does not prevent prog1\nfrom calling prog2 via tail call. In this case, prog2's return value 1\nwill be used as the return value for prog1's hook file_alloc_security.\nThat is, the return value rule is bypassed.\n\nThis patch adds restriction for tail call to prevent such bypasses."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28ead3eaabc16ecc907cfb71876da028080f6356","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d5e3b4cbe8ee16b7bf96fd73a421c92a9da3ca1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88c2a10e6c176c2860cd0659f4c0e9d20b3f64d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50064","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.440","lastModified":"2024-10-21T20:15:18.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nzram: free secondary algorithms names\n\nWe need to kfree() secondary algorithms names when reset zram device that\nhad multi-streams, otherwise we leak memory.\n\n[senozhatsky@chromium.org: kfree(NULL) is legal]\n  Link: https:\/\/lkml.kernel.org\/r\/20240917013021.868769-1-senozhatsky@chromium.org"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6272936fd242ca1f784c3e21596dfb3859dff276","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/684826f8271ad97580b138b9ffd462005e470b99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef35cc0d15b89dd013e1bb829fe97db7b1ab79eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-50065","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-10-21T20:15:18.520","lastModified":"2024-10-21T20:15:18.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntfs3: Change to non-blocking allocation in ntfs_d_hash\n\nd_hash is done while under \"rcu-walk\" and should not sleep.\n__get_name() allocates using GFP_KERNEL, having the possibility\nto sleep when under memory pressure. Change the allocation to\nGFP_NOWAIT."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/589996bf8c459deb5bbc9747d8f1c51658608103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c556e72cea2a1131ae418be017dd6fc76fffe2fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0c710372e238510db08ea01e7b8bd81ed995dd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-30157","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:04.620","lastModified":"2024-10-21T21:15:04.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Suite Applications Services component of Mitel MiCollab through 9.7.1.110 could allow an authenticated attacker with administrative privileges to conduct a SQL Injection attack due to insufficient validation of user input. A successful exploit could allow an attacker to execute arbitrary database and management operations."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0004","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-30158","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:04.860","lastModified":"2024-10-21T21:15:04.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the web conferencing component of Mitel MiCollab through 9.7.1.110 could allow an authenticated attacker with administrative privileges to conduct a SQL Injection attack due to insufficient validation of user input. A successful exploit could allow an attacker to execute arbitrary database and management operations."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0004","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-30159","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.073","lastModified":"2024-10-21T21:15:05.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the web conferencing component of Mitel MiCollab through 9.7.1.110 could allow an authenticated attacker with administrative privileges to conduct a Stored Cross-Site Scripting (XSS) attack due to insufficient validation of user input. A successful exploit could allow an attacker to execute arbitrary scripts."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0005","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-30160","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.190","lastModified":"2024-10-21T21:15:05.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Suite Applications Services component of Mitel MiCollab through 9.7.1.110 could allow an authenticated attacker with administrative privileges to conduct a Stored Cross-Site Scripting (XSS) attack due to insufficient validation of user input. A successful exploit could allow an attacker to execute arbitrary scripts."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0005","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35285","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.307","lastModified":"2024-10-21T21:15:05.307","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in NuPoint Messenger (NPM) of Mitel MiCollab through 9.8.0.33 allows an unauthenticated attacker to conduct a command injection attack due to insufficient parameter sanitization."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0013","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35286","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.367","lastModified":"2024-10-21T21:15:05.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in NuPoint Messenger (NPM) of Mitel MiCollab through 9.8.0.33 allows an unauthenticated attacker to conduct a SQL injection attack due to insufficient sanitization of user input. A successful exploit could allow an attacker to access sensitive information and execute arbitrary database and management operations."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0014","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35287","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.450","lastModified":"2024-10-21T21:15:05.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the NuPoint Messenger (NPM) component of Mitel MiCollab through version 9.8 SP1 (9.8.1.5) could allow an authenticated attacker with administrative privilege to conduct a privilege escalation attack due to the execution of a resource with unnecessary privileges. A successful exploit could allow an attacker to execute arbitrary commands with elevated privileges."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0023","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35314","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.533","lastModified":"2024-10-21T21:15:05.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Desktop Client of Mitel MiCollab through 9.7.1.110, and MiVoice Business Solution Virtual Instance (MiVB SVI) 1.0.0.25, could allow an unauthenticated attacker to conduct a command injection attack due to insufficient parameter sanitization. A successful exploit could allow an attacker to execute arbitrary scripts."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0015","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35315","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.613","lastModified":"2024-10-21T21:15:05.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Desktop Client of Mitel MiCollab through 9.7.1.110, and MiVoice Business Solution Virtual Instance (MiVB SVI) 1.0.0.25, could allow an authenticated attacker to conduct a privilege escalation attack due to improper file validation. A successful exploit could allow an attacker to run arbitrary code with elevated privileges."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0016","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40083","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.703","lastModified":"2024-10-21T21:15:05.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Buffer Overflow vulnerabilty in the local_app_set_router_token function of Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, unauthenticated attackers to execute arbitrary code via sscanf reading the token and timezone JSON fields into a fixed-length buffer."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40083.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40084","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.770","lastModified":"2024-10-21T21:15:05.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Buffer Overflow in the Boa webserver of Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, unauthenticated attackers to execute arbitrary code via exceptionally long HTTP methods or paths."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40084.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40085","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.853","lastModified":"2024-10-21T21:15:05.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Buffer Overflow vulnerability in the local_app_set_router_wan function of Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, unauthenticated attackers to execute arbitrary code via pppoe_username and pppoe_password fields being larger than 128 bytes in length."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40085.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40086","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:05.923","lastModified":"2024-10-21T21:15:05.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Buffer Overflow vulnerability in the local_app_set_router_wifi_SSID_PWD function of Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, unauthenticated attackers to execute arbitrary code via a password field larger than 64 bytes in length."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40086.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40087","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.003","lastModified":"2024-10-21T21:15:06.003","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vilo 5 Mesh WiFi System <= 5.16.1.33 is vulnerable to Insecure Permissions. Lack of authentication in the custom TCP service on port 5432 allows remote, unauthenticated attackers to gain administrative access over the router."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40087.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40088","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.080","lastModified":"2024-10-21T21:15:06.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Directory Traversal vulnerability in the Boa webserver of Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, unauthenticated attackers to enumerate the existence and length of any file in the filesystem by placing malicious payloads in the path of any HTTP request."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40088.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40089","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.150","lastModified":"2024-10-21T21:15:06.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Command Injection vulnerability in Vilo 5 Mesh WiFi System <= 5.16.1.33 allows remote, authenticated attackers to execute arbitrary code by injecting shell commands into the name of the Vilo device."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40089.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40090","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.223","lastModified":"2024-10-21T21:15:06.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vilo 5 Mesh WiFi System <= 5.16.1.33 is vulnerable to Information Disclosure. An information leak in the Boa webserver allows remote, unauthenticated attackers to leak memory addresses of uClibc and the stack via sending a GET request to the index page."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40090.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-40091","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.313","lastModified":"2024-10-21T21:15:06.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Vilo 5 Mesh WiFi System <= 5.16.1.33 lacks authentication in the Boa webserver, which allows remote, unauthenticated attackers to retrieve logs with sensitive system."}],"metrics":{},"references":[{"url":"http:\/\/vilo.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/byu-cybersecurity-research\/vilo\/blob\/main\/vulns\/CVE-2024-40091.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-41712","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.387","lastModified":"2024-10-21T21:15:06.387","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Web Conferencing Component of Mitel MiCollab through 9.8.1.5 could allow an authenticated attacker to conduct a command injection attack, due to insufficient validation of user input. A successful exploit could allow an attacker to execute arbitrary commands on the system within the context of the user."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0022","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-41713","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.470","lastModified":"2024-10-21T21:15:06.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the NuPoint Unified Messaging (NPM) component of Mitel MiCollab through 9.8 SP1 FP2 (9.8.1.201) could allow an unauthenticated attacker to conduct a path traversal attack, due to insufficient input validation. A successful exploit could allow unauthorized access, enabling the attacker to view, corrupt, or delete users' data and system configurations."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-misa-2024-0029","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-41714","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.547","lastModified":"2024-10-21T21:15:06.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the Web Interface component of Mitel MiCollab through 9.8 SP1 (9.8.1.5) and MiVoice Business Solution Virtual Instance (MiVB SVI) through 1.0.0.27 could allow an authenticated attacker to conduct a command injection attack, due to insufficient parameter sanitization. A successful exploit could allow an attacker to execute arbitrary commands with elevated privileges within the context of the system."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-24-0021","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-47224","sourceIdentifier":"cve@mitre.org","published":"2024-10-21T21:15:06.650","lastModified":"2024-10-21T21:15:06.650","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the AWV (Audio, Web and Video Conferencing) component of Mitel MiCollab through 9.8 SP1 FP2 (9.8.1.201) could allow an unauthenticated attacker to conduct a CRLF injection attack due to inadequate encoding of user input in URLs. A successful exploit could allow an attacker to perform a phishing attack."}],"metrics":{},"references":[{"url":"https:\/\/www.mitel.com\/support\/security-advisories\/mitel-product-security-advisory-misa-2024-0025","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-10125","sourceIdentifier":"ff89ba41-3aa1-4d27-914a-91399e9639e5","published":"2024-10-22T00:15:02.457","lastModified":"2024-10-22T00:15:02.457","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The  Amazon.ApplicationLoadBalancer.Identity.AspNetCore repo https:\/\/github.com\/awslabs\/aws-alb-identity-aspnetcore#validatetokensignature  contains Middleware that can be used in conjunction with the Application Load Balancer (ALB) OpenId Connect integration and can be used in any  ASP.NET http:\/\/asp.net\/  Core deployment scenario, including Fargate, EKS, ECS, EC2, and Lambda. In the JWT handling code, it performs signature validation but fails to validate the JWT issuer and signer identity. The signer omission, if combined with a scenario where the infrastructure owner allows internet traffic to the ALB targets (not a recommended configuration), can allow for JWT signing by an untrusted entity and an actor may be able to mimic valid OIDC-federated sessions to the ALB targets."}],"metrics":{"cvssMetricV40":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:P\/PR:N\/UI:N\/VC:N\/VI:N\/VA:N\/SC:H\/SI:L\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"PRESENT","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"HIGH","subsequentSystemIntegrity":"LOW","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":6.9,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:H\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":2.2,"impactScore":4.7}]},"weaknesses":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","description":[{"lang":"en","value":"CWE-290"}]}],"references":[{"url":"https:\/\/aws.amazon.com\/security\/security-bulletins\/AWS-2024-012\/","source":"ff89ba41-3aa1-4d27-914a-91399e9639e5"},{"url":"https:\/\/github.com\/awslabs\/aws-alb-identity-aspnetcore\/security\/advisories\/GHSA-5gh5-cc5m-q244","source":"ff89ba41-3aa1-4d27-914a-91399e9639e5"}]}},{"cve":{"id":"CVE-2024-8901","sourceIdentifier":"ff89ba41-3aa1-4d27-914a-91399e9639e5","published":"2024-10-22T00:15:03.667","lastModified":"2024-10-22T00:15:03.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The  AWS ALB Route Directive Adapter For Istio repo https:\/\/github.com\/awslabs\/aws-alb-route-directive-adapter-for-istio\/tree\/master  provides an OIDC authentication mechanism that was integrated into the open source Kubeflow project. The adapter uses JWT for authentication, but lacks proper signer and issuer validation. In uncommon deployments of ALB, wherein endpoints are exposed to internet traffic, an actor can provide a JWT signed by an untrusted entity in order to spoof OIDC-federated sessions and successfully bypass authentication."}],"metrics":{"cvssMetricV40":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:P\/PR:N\/UI:N\/VC:N\/VI:N\/VA:N\/SC:H\/SI:L\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"PRESENT","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"HIGH","subsequentSystemIntegrity":"LOW","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED","baseScore":6.9,"baseSeverity":"MEDIUM"}}],"cvssMetricV31":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:C\/C:H\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":2.2,"impactScore":4.7}]},"weaknesses":[{"source":"ff89ba41-3aa1-4d27-914a-91399e9639e5","type":"Secondary","description":[{"lang":"en","value":"CWE-290"}]}],"references":[{"url":"https:\/\/aws.amazon.com\/security\/security-bulletins\/AWS-2024-011\/","source":"ff89ba41-3aa1-4d27-914a-91399e9639e5"},{"url":"https:\/\/github.com\/awslabs\/aws-alb-route-directive-adapter-for-istio\/security\/advisories\/GHSA-789x-wph8-m68r","source":"ff89ba41-3aa1-4d27-914a-91399e9639e5"}]}},{"cve":{"id":"CVE-2024-9677","sourceIdentifier":"security@zyxel.com.tw","published":"2024-10-22T02:15:04.380","lastModified":"2024-10-22T02:15:04.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The insufficiently protected credentials vulnerability in the CLI command of the USG FLEX H series uOS firmware version V1.21 and earlier versions could allow an authenticated local attacker to gain privilege escalation by stealing the authentication token of a login administrator. Note that this attack could be successful only if the administrator has not logged out."}],"metrics":{"cvssMetricV31":[{"source":"security@zyxel.com.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":5.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.8,"impactScore":3.6}]},"weaknesses":[{"source":"security@zyxel.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-522"}]}],"references":[{"url":"https:\/\/www.zyxel.com\/global\/en\/support\/security-advisories\/zyxel-security-advisory-for-insufficiently-protected-credentials-vulnerability-in-firewalls-10-22-2024","source":"security@zyxel.com.tw"}]}}]}