{"resultsPerPage":206,"startIndex":0,"totalResults":206,"format":"NVD_CVE","version":"2.0","timestamp":"2024-05-20T18:12:59.340","vulnerabilities":[{"cve":{"id":"CVE-2024-5095","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T02:15:48.120","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in Victor Zsviot Camera 8.26.31. This affects an unknown part of the component MQTT Packet Handler. The manipulation leads to denial of service. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265077 was assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":6.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.6}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:M\/Au:S\/C:N\/I:N\/A:C","accessVector":"NETWORK","accessComplexity":"MEDIUM","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"COMPLETE","baseScore":6.3},"baseSeverity":"MEDIUM","exploitabilityScore":6.8,"impactScore":6.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-404"}]}],"references":[{"url":"https:\/\/github.com\/kzLiu2017\/Tuya_Cam_CVE_Doc\/blob\/main\/zsviot%20camera.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265077","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265077","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.332461","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5096","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T02:15:49.483","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic was found in Hipcam Device up to 20240511. This vulnerability affects unknown code of the file \/log\/wifi.mac of the component MAC Address Handler. The manipulation leads to information disclosure. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265078 is the identifier assigned to this vulnerability. NOTE: The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":5.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:N\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":5.0},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/netsecfish.notion.site\/Unauthorized-Access-to-MAC-Address-in-Hipcam-Device-a9a8daeeda954e83af847eb27805dc99?pvs=4","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265078","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265078","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.332785","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5097","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T03:15:06.433","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as problematic, was found in SourceCodester Simple Inventory System 1.0. Affected is an unknown function of the file \/tableedit.php#page=editprice. The manipulation of the argument itemnumber leads to cross-site request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265080."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":5.0},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/github.com\/rockersiyuan\/CVE\/blob\/main\/SourceCodester%20Simple%20Inventory%20System%20CSRF.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265080","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265080","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.337055","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5098","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T06:15:06.320","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability has been found in SourceCodester Simple Inventory System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file login.php. The manipulation of the argument username leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-265081 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":5.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.1,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:A\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"ADJACENT_NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":5.2},"baseSeverity":"MEDIUM","exploitabilityScore":5.1,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/rockersiyuan\/CVE\/blob\/main\/SourceCodester%20Simple%20Inventory%20System%20Sql%20Inject-1.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265081","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265081","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.337056","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5099","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T08:15:06.367","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Simple Inventory System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file updateprice.php. The manipulation of the argument ITEM leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-265082 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/rockersiyuan\/CVE\/blob\/main\/SourceCodester%20Simple%20Inventory%20System%20Sql%20Inject-2.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265082","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265082","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.337057","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-35860","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:07.603","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: support deferring bpf_link dealloc to after RCU grace period\n\nBPF link for some program types is passed as a \"context\" which can be\nused by those BPF programs to look up additional information. E.g., for\nmulti-kprobes and multi-uprobes, link is used to fetch BPF cookie values.\n\nBecause of this runtime dependency, when bpf_link refcnt drops to zero\nthere could still be active BPF programs running accessing link data.\n\nThis patch adds generic support to defer bpf_link dealloc callback to\nafter RCU GP, if requested. This is done by exposing two different\ndeallocation callbacks, one synchronous and one deferred. If deferred\none is provided, bpf_link_free() will schedule dealloc_deferred()\ncallback to happen after RCU GP.\n\nBPF is using two flavors of RCU: \"classic\" non-sleepable one and RCU\ntasks trace one. The latter is used when sleepable BPF programs are\nused. bpf_link_free() accommodates that by checking underlying BPF\nprogram's sleepable flag, and goes either through normal RCU GP only for\nnon-sleepable, or through RCU tasks trace GP *and* then normal RCU GP\n(taking into account rcu_trace_implies_rcu_gp() optimization), if BPF\nprogram is sleepable.\n\nWe use this for multi-kprobe and multi-uprobe links, which dereference\nlink during program run. We also preventively switch raw_tp link to use\ndeferred dealloc callback, as upcoming changes in bpf-next tree expose\nraw_tp link data (specifically, cookie value) to BPF program at runtime\nas well."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d8d447777564b35f67000e7838e7ccb64d525c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/876941f533e7b47fc69977fc4551c02f2d18af97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35861","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:07.717","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_signal_cifsd_for_reconnect()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cfff21732132e363b4cc275d63ea98f1af726c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e8360ac8774e19b0b25f44fff84a105bb2417e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0e50401cc3921c9eaf1b0e667db174519ea939f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9a96a7ad1e8d25dc6662bc7552e0752de74a20d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35862","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:07.797","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_network_name_deleted()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/63981561ffd2d4987807df4126f96a11e18b0c1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa582b33f94453fdeaff1e7d0aa252c505975e01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d919b6ea15ffa56fbafef4a1d92f47aeda9af645","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9414004798d9742c1af23a1d839fe6a9503751c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35863","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:07.880","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a15ba88a32fa7a516aff7ffd27befed5334dff2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16d58c6a7db5050b9638669084b63fc05f951825","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/494c91e1e9413b407d12166a61b84200d4d54fac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69ccf040acddf33a3a85ec0f6b45ef84b0f7ec29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35864","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:07.957","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_lease_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/705c76fbf726c7a2f6ff9143d4013b18daaaebf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8344e2b69bde63f713b0aa796d70dbeadffddfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c868cabdf6fdd61bea54532271f4708254e57fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f92739fdd4522c4291277136399353d7c341fae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35865","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.033","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in smb2_is_valid_oplock_break()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21fed37d2bdcde33453faf61d3d4d96c355f04bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22863485a4626ec6ecf297f4cc0aef709bc862e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dba0e5276f131e36d6d8043191d856f49238628","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84488466b7a69570bdbf76dd9576847ab97d54e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35866","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.123","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_dump_full_key()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10e17ca4000ec34737bde002a13435c38ace2682","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3103163ccd3be4adcfa37e15608fb497be044113","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58acd1f497162e7d282077f816faa519487be045","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35867","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.197","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_show()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0865ffefea197b437ba78b5dd8d8e256253efd65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16b7d785775eb03929766819415055e367398f49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e12f0d5c66f07c934041621351973a116fa13c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3cf8b74c57924c0985e49a1fdf02d3395111f39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35868","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.267","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential UAF in cifs_stats_proc_write()\n\nSkip sessions that are being teared down (status == SES_EXITING) to\navoid UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b5475ce69f02ecc1b13ea23106e5b89c690429b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fefd166fcb368c5fcf48238e3f7c8af829e0a72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf03020c56d3ed28c4942280957a007b5e9544f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3da25c5ac84430f89875ca7485a3828150a7e0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35869","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.340","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: guarantee refcounted children from parent session\n\nAvoid potential use-after-free bugs when walking DFS referrals,\nmounting and performing DFS failover by ensuring that all children\nfrom parent @tcon->ses are also refcounted.  They're all needed across\nthe entire DFS mount.  Get rid of @tcon->dfs_ses_list while we're at\nit, too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/062a7f0ff46eb57aff526897bd2bebfdb1d3046a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/645f332c6b63499cc76197f9b6bffcc659ba64cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1db9ae87b7148c021daee1fcc4bc71b2ac58a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35870","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.427","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in smb2_reconnect_server()\n\nThe UAF bug is due to smb2_reconnect_server() accessing a session that\nis already being teared down by another thread that is executing\n__cifs_put_smb_ses().  This can happen when (a) the client has\nconnection to the server but no session or (b) another thread ends up\nsetting @ses->ses_status again to something different than\nSES_EXITING.\n\nTo fix this, we need to make sure to unconditionally set\n@ses->ses_status to SES_EXITING and prevent any other threads from\nsetting a new status while we're still tearing it down.\n\nThe following can be reproduced by adding some delay to right after\nthe ipc is freed in __cifs_put_smb_ses() - which will give\nsmb2_reconnect_server() worker a chance to run and then accessing\n@ses->ipc:\n\nkinit ...\nmount.cifs \/\/srv\/share \/mnt\/1 -o sec=krb5,nohandlecache,echo_interval=10\n[disconnect srv]\nls \/mnt\/1 &>\/dev\/null\nsleep 30\nkdestroy\n[reconnect srv]\nsleep 10\numount \/mnt\/1\n...\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\nCIFS: VFS: Verify user has a krb5 ticket and keyutils is installed\nCIFS: VFS: \\\\srv Send error in SessSetup = -126\ngeneral protection fault, probably for non-canonical address\n0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 3 PID: 50 Comm: kworker\/3:1 Not tainted 6.9.0-rc2 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-1.fc39\n04\/01\/2014\nWorkqueue: cifsiod smb2_reconnect_server [cifs]\nRIP: 0010:__list_del_entry_valid_or_report+0x33\/0xf0\nCode: 4f 08 48 85 d2 74 42 48 85 c9 74 59 48 b8 00 01 00 00 00 00 ad\nde 48 39 c2 74 61 48 b8 22 01 00 00 00 00 74 69 <48> 8b 01 48 39 f8 75\n7b 48 8b 72 08 48 39 c6 0f 85 88 00 00 00 b8\nRSP: 0018:ffffc900001bfd70 EFLAGS: 00010a83\nRAX: dead000000000122 RBX: ffff88810da53838 RCX: 6b6b6b6b6b6b6b6b\nRDX: 6b6b6b6b6b6b6b6b RSI: ffffffffc02f6878 RDI: ffff88810da53800\nRBP: ffff88810da53800 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: ffff88810c064000\nR13: 0000000000000001 R14: ffff88810c064000 R15: ffff8881039cc000\nFS: 0000000000000000(0000) GS:ffff888157c00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fe3728b1000 CR3: 000000010caa4000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? die_addr+0x36\/0x90\n ? exc_general_protection+0x1c1\/0x3f0\n ? asm_exc_general_protection+0x26\/0x30\n ? __list_del_entry_valid_or_report+0x33\/0xf0\n __cifs_put_smb_ses+0x1ae\/0x500 [cifs]\n smb2_reconnect_server+0x4ed\/0x710 [cifs]\n process_one_work+0x205\/0x6b0\n worker_thread+0x191\/0x360\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0xe2\/0x110\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x34\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24a9799aa8efecd0eb55a75e35f9d8e6400063aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f2beda1f1bc3d962ec07db1ccc3197c25499a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6202996a1c1887e83d0b3b0fcd86d0e5e6910ea0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35871","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.507","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: process: Fix kernel gp leakage\n\nchildregs represents the registers which are active for the new thread\nin user context. For a kernel thread, childregs->gp is never used since\nthe kernel gp is not touched by switch_to. For a user mode helper, the\ngp value can be observed in user space after execve or possibly by other\nmeans.\n\n[From the email thread]\n\nThe \/* Kernel thread *\/ comment is somewhat inaccurate in that it is also used\nfor user_mode_helper threads, which exec a user process, e.g. \/sbin\/init or\nwhen \/proc\/sys\/kernel\/core_pattern is a pipe. Such threads do not have\nPF_KTHREAD set and are valid targets for ptrace etc. even before they exec.\n\nchildregs is the *user* context during syscall execution and it is observable\nfrom userspace in at least five ways:\n\n1. kernel_execve does not currently clear integer registers, so the starting\n   register state for PID 1 and other user processes started by the kernel has\n   sp = user stack, gp = kernel __global_pointer$, all other integer registers\n   zeroed by the memset in the patch comment.\n\n   This is a bug in its own right, but I'm unwilling to bet that it is the only\n   way to exploit the issue addressed by this patch.\n\n2. ptrace(PTRACE_GETREGSET): you can PTRACE_ATTACH to a user_mode_helper thread\n   before it execs, but ptrace requires SIGSTOP to be delivered which can only\n   happen at user\/kernel boundaries.\n\n3. \/proc\/*\/task\/*\/syscall: this is perfectly happy to read pt_regs for\n   user_mode_helpers before the exec completes, but gp is not one of the\n   registers it returns.\n\n4. PERF_SAMPLE_REGS_USER: LOCKDOWN_PERF normally prevents access to kernel\n   addresses via PERF_SAMPLE_REGS_INTR, but due to this bug kernel addresses\n   are also exposed via PERF_SAMPLE_REGS_USER which is permitted under\n   LOCKDOWN_PERF. I have not attempted to write exploit code.\n\n5. Much of the tracing infrastructure allows access to user registers. I have\n   not attempted to determine which forms of tracing allow access to user\n   registers without already allowing access to kernel registers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00effef72c98294edb1efa87ffa0f6cfb61b36a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9abc3e6f1116adb7a2d4fbb8ce20c37916976bf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d14fa1fcf69db9d070e75f1c4425211fa619dfc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8dcba0691b8e42bddb61aab201e4d918a08e5d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dff6072124f6df77bfd36951fbd88565746980ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6583444d7e78dae750798552b65a2519ff3ca84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35872","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.600","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/secretmem: fix GUP-fast succeeding on secretmem folios\n\nfolio_is_secretmem() currently relies on secretmem folios being LRU\nfolios, to save some cycles.\n\nHowever, folios might reside in a folio batch without the LRU flag set, or\ntemporarily have their LRU flag cleared.  Consequently, the LRU flag is\nunreliable for this purpose.\n\nIn particular, this is the case when secretmem_fault() allocates a fresh\npage and calls filemap_add_folio()->folio_add_lru().  The folio might be\nadded to the per-cpu folio batch and won't get the LRU flag set until the\nbatch was drained using e.g., lru_add_drain().\n\nConsequently, folio_is_secretmem() might not detect secretmem folios and\nGUP-fast can succeed in grabbing a secretmem folio, crashing the kernel\nwhen we would later try reading\/writing to the folio, because the folio\nhas been unmapped from the directmap.\n\nFix it by removing that unreliable check."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/201e4aaf405dfd1308da54448654053004c579b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43fad1d0284de30159661d0badfc3cbaf7e6f8f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65291dcfcf8936e1b23cfd7718fdfde7cfaf7706","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6564b014af92b677c1f07c44d7f5b595d589cf6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c2b4b657739ecda38e3b383354a29566955ac48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35873","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.687","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix vector state restore in rt_sigreturn()\n\nThe RISC-V Vector specification states in \"Appendix D: Calling\nConvention for Vector State\" [1] that \"Executing a system call causes\nall caller-saved vector registers (v0-v31, vl, vtype) and vstart to\nbecome unspecified.\". In the RISC-V kernel this is called \"discarding\nthe vstate\".\n\nReturning from a signal handler via the rt_sigreturn() syscall, vector\ndiscard is also performed. However, this is not an issue since the\nvector state should be restored from the sigcontext, and therefore not\ncare about the vector discard.\n\nThe \"live state\" is the actual vector register in the running context,\nand the \"vstate\" is the vector state of the task. A dirty live state,\nmeans that the vstate and live state are not in synch.\n\nWhen vectorized user_from_copy() was introduced, an bug sneaked in at\nthe restoration code, related to the discard of the live state.\n\nAn example when this go wrong:\n\n  1. A userland application is executing vector code\n  2. The application receives a signal, and the signal handler is\n     entered.\n  3. The application returns from the signal handler, using the\n     rt_sigreturn() syscall.\n  4. The live vector state is discarded upon entering the\n     rt_sigreturn(), and the live state is marked as \"dirty\", indicating\n     that the live state need to be synchronized with the current\n     vstate.\n  5. rt_sigreturn() restores the vstate, except the Vector registers,\n     from the sigcontext\n  6. rt_sigreturn() restores the Vector registers, from the sigcontext,\n     and now the vectorized user_from_copy() is used. The dirty live\n     state from the discard is saved to the vstate, making the vstate\n     corrupt.\n  7. rt_sigreturn() returns to the application, which crashes due to\n     corrupted vstate.\n\nNote that the vectorized user_from_copy() is invoked depending on the\nvalue of CONFIG_RISCV_ISA_V_UCOPY_THRESHOLD. Default is 768, which\nmeans that vlen has to be larger than 128b for this bug to trigger.\n\nThe fix is simply to mark the live state as non-dirty\/clean prior\nperforming the vstate restore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b16d904e910183181b9d90efa957c787a8ac91b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c27fa53b858b4ee6552a719aa599c250cf98a586","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35874","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.767","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naio: Fix null ptr deref in aio_complete() wakeup\n\nlist_del_init_careful() needs to be the last access to the wait queue\nentry - it effectively unlocks access.\n\nPreviously, finish_wait() would see the empty list head and skip taking\nthe lock, and then we'd return - but the completion path would still\nattempt to do the wakeup after the task_struct pointer had been\noverwritten."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9678bcc6234d83759fe091c197f5017a32b468da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/caeb4b0a11b3393e43f7fa8e0a5a18462acc66bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.833","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/coco: Require seeding RNG with RDRAND on CoCo systems\n\nThere are few uses of CoCo that don't rely on working cryptography and\nhence a working RNG. Unfortunately, the CoCo threat model means that the\nVM host cannot be trusted and may actively work against guests to\nextract secrets or manipulate computation. Since a malicious host can\nmodify or observe nearly all inputs to guests, the only remaining source\nof entropy for CoCo guests is RDRAND.\n\nIf RDRAND is broken -- due to CPU hardware fault -- the RNG as a whole\nis meant to gracefully continue on gathering entropy from other sources,\nbut since there aren't other sources on CoCo, this is catastrophic.\nThis is mostly a concern at boot time when initially seeding the RNG, as\nafter that the consequences of a broken RDRAND are much more\ntheoretical.\n\nSo, try at boot to seed the RNG using 256 bits of RDRAND output. If this\nfails, panic(). This will also trigger if the system is booted without\nRDRAND, as RDRAND is essential for a safe CoCo boot.\n\nAdd this deliberately to be \"just a CoCo x86 driver feature\" and not\npart of the RNG itself. Many device drivers and platforms have some\ndesire to contribute something to the RNG, and add_device_randomness()\nis specifically meant for this purpose.\n\nAny driver can call it with seed data of any quality, or even garbage\nquality, and it can only possibly make the quality of the RNG better or\nhave no effect, but can never make it worse.\n\nRather than trying to build something into the core of the RNG, consider\nthe particular CoCo issue just a CoCo issue, and therefore separate it\nall out into driver (well, arch\/platform) code.\n\n  [ bp: Massage commit message. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08044b08b37528b82f70a87576c692b4e4b7716e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22943e4fe4b3a2dcbadc3d38d5bf840bbdbfe374","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/453b5f2dec276c1bb4ea078bf8c0da57ee4627e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99485c4c026f024e7cb82da84c7951dbe3deb584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.900","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/mce: Make sure to grab mce_sysfs_mutex in set_bank()\n\nModifying a MCA bank's MCA_CTL bits which control which error types to\nbe reported is done over\n\n  \/sys\/devices\/system\/machinecheck\/\n  ??? machinecheck0\n  ?   ??? bank0\n  ?   ??? bank1\n  ?   ??? bank10\n  ?   ??? bank11\n  ...\n\nsysfs nodes by writing the new bit mask of events to enable.\n\nWhen the write is accepted, the kernel deletes all current timers and\nreinits all banks.\n\nDoing that in parallel can lead to initializing a timer which is already\narmed and in the timer wheel, i.e., in use already:\n\n  ODEBUG: init active (active state 0) object: ffff888063a28000 object\n  type: timer_list hint: mce_timer_fn+0x0\/0x240 arch\/x86\/kernel\/cpu\/mce\/core.c:2642\n  WARNING: CPU: 0 PID: 8120 at lib\/debugobjects.c:514\n  debug_print_object+0x1a0\/0x2a0 lib\/debugobjects.c:514\n\nFix that by grabbing the sysfs mutex as the rest of the MCA sysfs code\ndoes.\n\nReported by: Yue Sun <samsun1006219@gmail.com>\nReported by: xingwei lee <xrivendell7@gmail.com>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20a915154ccb88da08986ab6c9fc4c1cf6259de2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32223b0b60d53f49567fc501f91ca076ae96be6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ddf944b32f88741c303f0b21459dbb3872b8bc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a02df3e92470efd589712925b5c722e730276a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/976b1b2680fb4c01aaf05a0623288d87619a6c93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5e65b782f3e07324b9a8fa3cdaee422f057c758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f860595512ff5c05a29fa4d64169c3fd1186b8cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35877","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:08.990","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/mm\/pat: fix VM_PAT handling in COW mappings\n\nPAT handling won't do the right thing in COW mappings: the first PTE (or,\nin fact, all PTEs) can be replaced during write faults to point at anon\nfolios.  Reliably recovering the correct PFN and cachemode using\nfollow_phys() from PTEs will not work in COW mappings.\n\nUsing follow_phys(), we might just get the address+protection of the anon\nfolio (which is very wrong), or fail on swap\/nonswap entries, failing\nfollow_phys() and triggering a WARN_ON_ONCE() in untrack_pfn() and\ntrack_pfn_copy(), not properly calling free_pfn_range().\n\nIn free_pfn_range(), we either wouldn't call memtype_free() or would call\nit with the wrong range, possibly leaking memory.\n\nTo fix that, let's update follow_phys() to refuse returning anon folios,\nand fallback to using the stored PFN inside vma->vm_pgoff for COW mappings\nif we run into that.\n\nWe will now properly handle untrack_pfn() with COW mappings, where we\ndon't need the cachemode.  We'll have to fail fork()->track_pfn_copy() if\nthe first page was replaced by an anon folio, though: we'd have to store\nthe cachemode in the VMA to make this work, likely growing the VMA size.\n\nFor now, lets keep it simple and let track_pfn_copy() just fail in that\ncase: it would have failed in the past with swap\/nonswap entries already,\nand it would have done the wrong thing with anon folios.\n\nSimple reproducer to trigger the WARN_ON_ONCE() in untrack_pfn():\n\n<--- C reproducer --->\n #include <stdio.h>\n #include <sys\/mman.h>\n #include <unistd.h>\n #include <liburing.h>\n\n int main(void)\n {\n         struct io_uring_params p = {};\n         int ring_fd;\n         size_t size;\n         char *map;\n\n         ring_fd = io_uring_setup(1, &p);\n         if (ring_fd < 0) {\n                 perror(\"io_uring_setup\");\n                 return 1;\n         }\n         size = p.sq_off.array + p.sq_entries * sizeof(unsigned);\n\n         \/* Map the submission queue ring MAP_PRIVATE *\/\n         map = mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE,\n                    ring_fd, IORING_OFF_SQ_RING);\n         if (map == MAP_FAILED) {\n                 perror(\"mmap\");\n                 return 1;\n         }\n\n         \/* We have at least one page. Let's COW it. *\/\n         *map = 0;\n         pause();\n         return 0;\n }\n<--- C reproducer --->\n\nOn a system with 16 GiB RAM and swap configured:\n # .\/iouring &\n # memhog 16G\n # killall iouring\n[  301.552930] ------------[ cut here ]------------\n[  301.553285] WARNING: CPU: 7 PID: 1402 at arch\/x86\/mm\/pat\/memtype.c:1060 untrack_pfn+0xf4\/0x100\n[  301.553989] Modules linked in: binfmt_misc nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_g\n[  301.558232] CPU: 7 PID: 1402 Comm: iouring Not tainted 6.7.5-100.fc38.x86_64 #1\n[  301.558772] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebu4\n[  301.559569] RIP: 0010:untrack_pfn+0xf4\/0x100\n[  301.559893] Code: 75 c4 eb cf 48 8b 43 10 8b a8 e8 00 00 00 3b 6b 28 74 b8 48 8b 7b 30 e8 ea 1a f7 000\n[  301.561189] RSP: 0018:ffffba2c0377fab8 EFLAGS: 00010282\n[  301.561590] RAX: 00000000ffffffea RBX: ffff9208c8ce9cc0 RCX: 000000010455e047\n[  301.562105] RDX: 07fffffff0eb1e0a RSI: 0000000000000000 RDI: ffff9208c391d200\n[  301.562628] RBP: 0000000000000000 R08: ffffba2c0377fab8 R09: 0000000000000000\n[  301.563145] R10: ffff9208d2292d50 R11: 0000000000000002 R12: 00007fea890e0000\n[  301.563669] R13: 0000000000000000 R14: ffffba2c0377fc08 R15: 0000000000000000\n[  301.564186] FS:  0000000000000000(0000) GS:ffff920c2fbc0000(0000) knlGS:0000000000000000\n[  301.564773] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  301.565197] CR2: 00007fea88ee8a20 CR3: 00000001033a8000 CR4: 0000000000750ef0\n[  301.565725] PKRU: 55555554\n[  301.565944] Call Trace:\n[  301.566148]  <TASK>\n[  301.566325]  ? untrack_pfn+0xf4\/0x100\n[  301.566618]  ? __warn+0x81\/0x130\n[  301.566876]  ? untrack_pfn+0xf4\/0x100\n[  3\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04c35ab3bdae7fefbd7c7a7355f29fa03a035221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09e6bb53217bf388a0d2fd7fb21e74ab9dffc173","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1341e4b32e1fb1b0acd002ccd56f07bd32f2abc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51b7841f3fe84606ec0bd8da859d22e05e5419ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cfee26d1950250b14c5cb0a37b142f3fcc6396a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97e93367e82752e475a33839a80b33bdbef1209f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2b2430b48f3c9eaccd2c3d2ad75bb540d4952f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f18681daaec9665a15c5e7e0f591aad5d0ac622b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35878","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.090","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nof: module: prevent NULL pointer dereference in vsnprintf()\n\nIn of_modalias(), we can get passed the str and len parameters which would\ncause a kernel oops in vsnprintf() since it only allows passing a NULL ptr\nwhen the length is also 0. Also, we need to filter out the negative values\nof the len parameter as these will result in a really huge buffer since\nsnprintf() takes size_t parameter while ours is ssize_t...\n\nFound by Linux Verification Center (linuxtesting.org) with the Svace static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/544561dc56f7e69a053c25e11e6170f48bb97898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1aa5390cc912934fee76ce80af5f940452fa987","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4a449368a2ce6d57a775d0ead27fc07f5a86e5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35879","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.173","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nof: dynamic: Synchronize of_changeset_destroy() with the devlink removals\n\nIn the following sequence:\n  1) of_platform_depopulate()\n  2) of_overlay_remove()\n\nDuring the step 1, devices are destroyed and devlinks are removed.\nDuring the step 2, OF nodes are destroyed but\n__of_changeset_entry_destroy() can raise warnings related to missing\nof_node_put():\n  ERROR: memory leak, expected refcount 1 instead of 2 ...\n\nIndeed, during the devlink removals performed at step 1, the removal\nitself releasing the device (and the attached of_node) is done by a job\nqueued in a workqueue and so, it is done asynchronously with respect to\nfunction calls.\nWhen the warning is present, of_node_put() will be called but wrongly\ntoo late from the workqueue job.\n\nIn order to be sure that any ongoing devlink removals are done before\nthe of_node destruction, synchronize the of_changeset_destroy() with the\ndevlink removals."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3127b2ee50c424a96eb3559fbb7b43cf0b111c7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ee2424107546d882e1ddd75333ca9c32879908c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b6df050c45a1ea158fd50bc32a8e1447dd1e951","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/801c8b8ec5bfb3519566dff16a5ecd48302fca82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8917e7385346bd6584890ed362985c219fe6ae84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae6d76e4f06c37a623e357e79d49b17411db6f5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35880","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.283","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring\/kbuf: hold io_buffer_list reference over mmap\n\nIf we look up the kbuf, ensure that it doesn't get unregistered until\nafter we're done with it. Since we're inside mmap, we cannot safely use\nthe io_uring lock. Rely on the fact that we can lookup the buffer list\nunder RCU now and grab a reference to it, preventing it from being\nunregistered until we're done with it. The lookup returns the\nio_buffer_list directly with it referenced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/561e4f9451d65fc2f7eef564e0064373e3019793","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fd8e2359498043e0b5329a05f02d10a9eb91eb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65938e81df2197203bda4b9a0c477e7987218d66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35881","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.363","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"drm\/amd\/display: Send DTBCLK disable message on first commit\"\n\nThis reverts commit f341055b10bd8be55c3c995dff5f770b236b8ca9.\n\nSystem hang observed, this commit is thought to be the\nregression point."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dab75b433ed2480d57ae4f8f725186a46223e42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a6a32b31a111f6e66526fb2d3cb13a876465076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35882","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.447","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix a slow server-side memory leak with RPC-over-TCP\n\nJan Schunk reports that his small NFS servers suffer from memory\nexhaustion after just a few days. A bisect shows that commit\ne18e157bb5c8 (\"SUNRPC: Send RPC message on TCP with a single\nsock_sendmsg() call\") is the first bad commit.\n\nThat commit assumed that sock_sendmsg() releases all the pages in\nthe underlying bio_vec array, but the reality is that it doesn't.\nsvc_xprt_release() releases the rqst's response pages, but the\nrecord marker page fragment isn't one of those, so it is never\nreleased.\n\nThis is a narrow fix that can be applied to stable kernels. A\nmore extensive fix is in the works."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05258a0a69b3c5d2c003f818702c0a52b6fea861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ba1291172f935e6b6fe703161a948f3347400b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2ebedf7bcd17a1194a0a18122c885eb578ee882","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35883","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.527","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: mchp-pci1xxx: Fix a possible null pointer dereference in pci1xxx_spi_probe\n\nIn function pci1xxxx_spi_probe, there is a potential null pointer that\nmay be caused by a failed memory allocation by the function devm_kzalloc.\nHence, a null pointer check needs to be added to prevent null pointer\ndereferencing later in the code.\n\nTo fix this issue, spi_bus->spi_int[iter] should be checked. The memory\nallocated by devm_kzalloc will be automatically released, so just directly\nreturn -ENOMEM without worrying about memory leaks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f886a7bfb3faf4c1021e73f045538008ce7634e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b31a226097cf8cc3c9de5e855d97757fdb2bf06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95e5d9eb26705a9a76d2ef8bcba9ee2e195d653d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35884","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.603","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudp: do not accept non-tunnel GSO skbs landing in a tunnel\n\nWhen rx-udp-gro-forwarding is enabled UDP packets might be GROed when\nbeing forwarded. If such packets might land in a tunnel this can cause\nvarious issues and udp_gro_receive makes sure this isn't the case by\nlooking for a matching socket. This is performed in\nudp4\/6_gro_lookup_skb but only in the current netns. This is an issue\nwith tunneled packets when the endpoint is in another netns. In such\ncases the packets will be GROed at the UDP level, which leads to various\nissues later on. The same thing can happen with rx-gro-list.\n\nWe saw this with geneve packets being GROed at the UDP level. In such\ncase gso_size is set; later the packet goes through the geneve rx path,\nthe geneve header is pulled, the offset are adjusted and frag_list skbs\nare not adjusted with regard to geneve. When those skbs hit\nskb_fragment, it will misbehave. Different outcomes are possible\ndepending on what the GROed skbs look like; from corrupted packets to\nkernel crashes.\n\nOne example is a BUG_ON[1] triggered in skb_segment while processing the\nfrag_list. Because gso_size is wrong (geneve header was pulled)\nskb_segment thinks there is \"geneve header size\" of data in frag_list,\nalthough it's in fact the next packet. The BUG_ON itself has nothing to\ndo with the issue. This is only one of the potential issues.\n\nLooking up for a matching socket in udp_gro_receive is fragile: the\nlookup could be extended to all netns (not speaking about performances)\nbut nothing prevents those packets from being modified in between and we\ncould still not find a matching socket. It's OK to keep the current\nlogic there as it should cover most cases but we also need to make sure\nwe handle tunnel packets being GROed too early.\n\nThis is done by extending the checks in udp_unexpected_gso: GSO packets\nlacking the SKB_GSO_UDP_TUNNEL\/_CSUM bits and landing in a tunnel must\nbe segmented.\n\n[1] kernel BUG at net\/core\/skbuff.c:4408!\n    RIP: 0010:skb_segment+0xd2a\/0xf70\n    __udp_gso_segment+0xaa\/0x560"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3001e7aa43d6691db2a878b0745b854bf12ddd19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3391b157780bbedf8ef9f202cbf10ee90bf6b0f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35fe0e0b5c00bef7dde74842a2564c43856fbce4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d010c8031e39f5fa1e8b13ada77e0321091011f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d12245080cb259d82b34699f6cd4ec11bdb688bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d49ae15a5767d4e9ef8bbb79e42df1bfebc94670","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35885","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.683","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxbf_gige: stop interface during shutdown\n\nThe mlxbf_gige driver intermittantly encounters a NULL pointer\nexception while the system is shutting down via \"reboot\" command.\nThe mlxbf_driver will experience an exception right after executing\nits shutdown() method.  One example of this exception is:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000070\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=000000011d373000\n[0000000000000070] pgd=0000000000000000, p4d=0000000000000000\nInternal error: Oops: 96000004 [#1] SMP\nCPU: 0 PID: 13 Comm: ksoftirqd\/0 Tainted: G S         OE     5.15.0-bf.6.gef6992a #1\nHardware name: https:\/\/www.mellanox.com BlueField SoC\/BlueField SoC, BIOS 4.0.2.12669 Apr 21 2023\npstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : mlxbf_gige_handle_tx_complete+0xc8\/0x170 [mlxbf_gige]\nlr : mlxbf_gige_poll+0x54\/0x160 [mlxbf_gige]\nsp : ffff8000080d3c10\nx29: ffff8000080d3c10 x28: ffffcce72cbb7000 x27: ffff8000080d3d58\nx26: ffff0000814e7340 x25: ffff331cd1a05000 x24: ffffcce72c4ea008\nx23: ffff0000814e4b40 x22: ffff0000814e4d10 x21: ffff0000814e4128\nx20: 0000000000000000 x19: ffff0000814e4a80 x18: ffffffffffffffff\nx17: 000000000000001c x16: ffffcce72b4553f4 x15: ffff80008805b8a7\nx14: 0000000000000000 x13: 0000000000000030 x12: 0101010101010101\nx11: 7f7f7f7f7f7f7f7f x10: c2ac898b17576267 x9 : ffffcce720fa5404\nx8 : ffff000080812138 x7 : 0000000000002e9a x6 : 0000000000000080\nx5 : ffff00008de3b000 x4 : 0000000000000000 x3 : 0000000000000001\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\nCall trace:\n mlxbf_gige_handle_tx_complete+0xc8\/0x170 [mlxbf_gige]\n mlxbf_gige_poll+0x54\/0x160 [mlxbf_gige]\n __napi_poll+0x40\/0x1c8\n net_rx_action+0x314\/0x3a0\n __do_softirq+0x128\/0x334\n run_ksoftirqd+0x54\/0x6c\n smpboot_thread_fn+0x14c\/0x190\n kthread+0x10c\/0x110\n ret_from_fork+0x10\/0x20\nCode: 8b070000 f9000ea0 f95056c0 f86178a1 (b9407002)\n---[ end trace 7cc3941aa0d8e6a4 ]---\nKernel panic - not syncing: Oops: Fatal exception in interrupt\nKernel Offset: 0x4ce722520000 from 0xffff800008000000\nPHYS_OFFSET: 0x80000000\nCPU features: 0x000005c1,a3330e5a\nMemory Limit: none\n---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---\n\nDuring system shutdown, the mlxbf_gige driver's shutdown() is always executed.\nHowever, the driver's stop() method will only execute if networking interface\nconfiguration logic within the Linux distribution has been setup to do so.\n\nIf shutdown() executes but stop() does not execute, NAPI remains enabled\nand this can lead to an exception if NAPI is scheduled while the hardware\ninterface has only been partially deinitialized.\n\nThe networking interface managed by the mlxbf_gige driver must be properly\nstopped during system shutdown so that IFF_UP is cleared, the hardware\ninterface is put into a clean state, and NAPI is fully deinitialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09ba28e1cd3cf715daab1fca6e1623e22fd754a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36a1cb0371aa6f0698910ee70cb4ed3c349f4fa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63a10b530e22cc923008b5925821c26872f37971","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80247e0eca14ff177d565f58ecd3010f6b7910a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9783b3b0e71d704949214a8f76468f591a31f3f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35886","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.757","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix infinite recursion in fib6_dump_done().\n\nsyzkaller reported infinite recursive calls of fib6_dump_done() during\nnetlink socket destruction.  [1]\n\nFrom the log, syzkaller sent an AF_UNSPEC RTM_GETROUTE message, and then\nthe response was generated.  The following recvmmsg() resumed the dump\nfor IPv6, but the first call of inet6_dump_fib() failed at kzalloc() due\nto the fault injection.  [0]\n\n  12:01:34 executing program 3:\n  r0 = socket$nl_route(0x10, 0x3, 0x0)\n  sendmsg$nl_route(r0, ... snip ...)\n  recvmmsg(r0, ... snip ...) (fail_nth: 8)\n\nHere, fib6_dump_done() was set to nlk_sk(sk)->cb.done, and the next call\nof inet6_dump_fib() set it to nlk_sk(sk)->cb.args[3].  syzkaller stopped\nreceiving the response halfway through, and finally netlink_sock_destruct()\ncalled nlk_sk(sk)->cb.done().\n\nfib6_dump_done() calls fib6_dump_end() and nlk_sk(sk)->cb.done() if it\nis still not NULL.  fib6_dump_end() rewrites nlk_sk(sk)->cb.done() by\nnlk_sk(sk)->cb.args[3], but it has the same function, not NULL, calling\nitself recursively and hitting the stack guard page.\n\nTo avoid the issue, let's set the destructor after kzalloc().\n\n[0]:\nFAULT_INJECTION: forcing a failure.\nname failslab, interval 1, probability 0, space 0, times 0\nCPU: 1 PID: 432110 Comm: syz-executor.3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl (lib\/dump_stack.c:117)\n should_fail_ex (lib\/fault-inject.c:52 lib\/fault-inject.c:153)\n should_failslab (mm\/slub.c:3733)\n kmalloc_trace (mm\/slub.c:3748 mm\/slub.c:3827 mm\/slub.c:3992)\n inet6_dump_fib (.\/include\/linux\/slab.h:628 .\/include\/linux\/slab.h:749 net\/ipv6\/ip6_fib.c:662)\n rtnl_dump_all (net\/core\/rtnetlink.c:4029)\n netlink_dump (net\/netlink\/af_netlink.c:2269)\n netlink_recvmsg (net\/netlink\/af_netlink.c:1988)\n ____sys_recvmsg (net\/socket.c:1046 net\/socket.c:2801)\n ___sys_recvmsg (net\/socket.c:2846)\n do_recvmmsg (net\/socket.c:2943)\n __x64_sys_recvmmsg (net\/socket.c:3041 net\/socket.c:3034 net\/socket.c:3034)\n\n[1]:\nBUG: TASK stack guard page was hit at 00000000f2fa9af1 (stack is 00000000b7912430..000000009a436beb)\nstack guard page: 0000 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 223719 Comm: kworker\/1:3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04\/01\/2014\nWorkqueue: events netlink_sock_destruct_work\nRIP: 0010:fib6_dump_done (net\/ipv6\/ip6_fib.c:570)\nCode: 3c 24 e8 f3 e9 51 fd e9 28 fd ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 41 57 41 56 41 55 41 54 55 48 89 fd <53> 48 8d 5d 60 e8 b6 4d 07 fd 48 89 da 48 b8 00 00 00 00 00 fc ff\nRSP: 0018:ffffc9000d980000 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: ffffffff84405990 RCX: ffffffff844059d3\nRDX: ffff8881028e0000 RSI: ffffffff84405ac2 RDI: ffff88810c02f358\nRBP: ffff88810c02f358 R08: 0000000000000007 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000224 R12: 0000000000000000\nR13: ffff888007c82c78 R14: ffff888007c82c68 R15: ffff888007c82c68\nFS:  0000000000000000(0000) GS:ffff88811b100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000d97fff8 CR3: 0000000102309002 CR4: 0000000000770ef0\nPKRU: 55555554\nCall Trace:\n <#DF>\n <\/#DF>\n <TASK>\n fib6_dump_done (net\/ipv6\/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net\/ipv6\/ip6_fib.c:572 (discriminator 1))\n ...\n fib6_dump_done (net\/ipv6\/ip6_fib.c:572 (discriminator 1))\n fib6_dump_done (net\/ipv6\/ip6_fib.c:572 (discriminator 1))\n netlink_sock_destruct (net\/netlink\/af_netlink.c:401)\n __sk_destruct (net\/core\/sock.c:2177 (discriminator 2))\n sk_destruct (net\/core\/sock.c:2224)\n __sk_free (net\/core\/sock.c:2235)\n sk_free (net\/core\/sock.c:2246)\n process_one_work (kernel\/workqueue.c:3259)\n worker_thread (kernel\/workqueue.c:3329 kernel\/workqueue.\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/167d4b47a9bdcb01541dfa29e9f3cbb8edd3dfd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40a344b2ddc06c1a2caa7208a43911f39c662778","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a7c465a5dcd657d59d25bf4815e19ac05c13061","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9472d07cd095cbd3294ac54c42f304a38fbe9bfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c5258196182c25b55c33167cd72fdd9bbf08985","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d21d40605bca7bd5fc23ef03d4c1ca1f48bc2cae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2dd75e57285f49e34af1a5b6cd8945c08243776","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd307f2d91d40fa7bc55df3e2cd1253fabf8a2d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35887","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.837","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nax25: fix use-after-free bugs caused by ax25_ds_del_timer\n\nWhen the ax25 device is detaching, the ax25_dev_device_down()\ncalls ax25_ds_del_timer() to cleanup the slave_timer. When\nthe timer handler is running, the ax25_ds_del_timer() that\ncalls del_timer() in it will return directly. As a result,\nthe use-after-free bugs could happen, one of the scenarios\nis shown below:\n\n      (Thread 1)          |      (Thread 2)\n                          | ax25_ds_timeout()\nax25_dev_device_down()    |\n  ax25_ds_del_timer()     |\n    del_timer()           |\n  ax25_dev_put() \/\/FREE   |\n                          |  ax25_dev-> \/\/USE\n\nIn order to mitigate bugs, when the device is detaching, use\ntimer_shutdown_sync() to stop the timer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/74204bf9050f7627aead9875fe4e07ba125cb19b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6a368f9c7af4c14b14d390c2543af8001c9bdb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd819ad3ecf6f3c232a06b27423ce9ed8c20da89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35888","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.910","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerspan: make sure erspan_base_hdr is present in skb->head\n\nsyzbot reported a problem in ip6erspan_rcv() [1]\n\nIssue is that ip6erspan_rcv() (and erspan_rcv()) no longer make\nsure erspan_base_hdr is present in skb linear part (skb->head)\nbefore getting @ver field from it.\n\nAdd the missing pskb_may_pull() calls.\n\nv2: Reload iph pointer in erspan_rcv() after pskb_may_pull()\n    because skb->head might have changed.\n\n[1]\n\n BUG: KMSAN: uninit-value in pskb_may_pull_reason include\/linux\/skbuff.h:2742 [inline]\n BUG: KMSAN: uninit-value in pskb_may_pull include\/linux\/skbuff.h:2756 [inline]\n BUG: KMSAN: uninit-value in ip6erspan_rcv net\/ipv6\/ip6_gre.c:541 [inline]\n BUG: KMSAN: uninit-value in gre_rcv+0x11f8\/0x1930 net\/ipv6\/ip6_gre.c:610\n  pskb_may_pull_reason include\/linux\/skbuff.h:2742 [inline]\n  pskb_may_pull include\/linux\/skbuff.h:2756 [inline]\n  ip6erspan_rcv net\/ipv6\/ip6_gre.c:541 [inline]\n  gre_rcv+0x11f8\/0x1930 net\/ipv6\/ip6_gre.c:610\n  ip6_protocol_deliver_rcu+0x1d4c\/0x2ca0 net\/ipv6\/ip6_input.c:438\n  ip6_input_finish net\/ipv6\/ip6_input.c:483 [inline]\n  NF_HOOK include\/linux\/netfilter.h:314 [inline]\n  ip6_input+0x15d\/0x430 net\/ipv6\/ip6_input.c:492\n  ip6_mc_input+0xa7e\/0xc80 net\/ipv6\/ip6_input.c:586\n  dst_input include\/net\/dst.h:460 [inline]\n  ip6_rcv_finish+0x955\/0x970 net\/ipv6\/ip6_input.c:79\n  NF_HOOK include\/linux\/netfilter.h:314 [inline]\n  ipv6_rcv+0xde\/0x390 net\/ipv6\/ip6_input.c:310\n  __netif_receive_skb_one_core net\/core\/dev.c:5538 [inline]\n  __netif_receive_skb+0x1da\/0xa00 net\/core\/dev.c:5652\n  netif_receive_skb_internal net\/core\/dev.c:5738 [inline]\n  netif_receive_skb+0x58\/0x660 net\/core\/dev.c:5798\n  tun_rx_batched+0x3ee\/0x980 drivers\/net\/tun.c:1549\n  tun_get_user+0x5566\/0x69e0 drivers\/net\/tun.c:2002\n  tun_chr_write_iter+0x3af\/0x5d0 drivers\/net\/tun.c:2048\n  call_write_iter include\/linux\/fs.h:2108 [inline]\n  new_sync_write fs\/read_write.c:497 [inline]\n  vfs_write+0xb63\/0x1520 fs\/read_write.c:590\n  ksys_write+0x20f\/0x4c0 fs\/read_write.c:643\n  __do_sys_write fs\/read_write.c:655 [inline]\n  __se_sys_write fs\/read_write.c:652 [inline]\n  __x64_sys_write+0x93\/0xe0 fs\/read_write.c:652\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:3804 [inline]\n  slab_alloc_node mm\/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613\/0xc50 mm\/slub.c:3888\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:577\n  __alloc_skb+0x35b\/0x7a0 net\/core\/skbuff.c:668\n  alloc_skb include\/linux\/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8\/0xbf0 net\/core\/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81\/0xbf0 net\/core\/sock.c:2795\n  tun_alloc_skb drivers\/net\/tun.c:1525 [inline]\n  tun_get_user+0x209a\/0x69e0 drivers\/net\/tun.c:1846\n  tun_chr_write_iter+0x3af\/0x5d0 drivers\/net\/tun.c:2048\n  call_write_iter include\/linux\/fs.h:2108 [inline]\n  new_sync_write fs\/read_write.c:497 [inline]\n  vfs_write+0xb63\/0x1520 fs\/read_write.c:590\n  ksys_write+0x20f\/0x4c0 fs\/read_write.c:643\n  __do_sys_write fs\/read_write.c:655 [inline]\n  __se_sys_write fs\/read_write.c:652 [inline]\n  __x64_sys_write+0x93\/0xe0 fs\/read_write.c:652\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nCPU: 1 PID: 5045 Comm: syz-executor114 Not tainted 6.9.0-rc1-syzkaller-00021-g962490525cff #0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06a939f72a24a7d8251f84cf4c042df86c6666ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ac328a5a4138a6c03dfc3f46017bd5c19167446","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17af420545a750f763025149fa7b833a4fc8b8f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1db7fcb2b290c47c202b79528824f119fa28937d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e3fdeecec5707678b0d1f18c259dadb97262e9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b14b9f9503ec823ca75be766dcaeff4f0bfeca85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e54a0c79cdc2548729dd7e2e468b08c5af4d0df5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee0088101beee10fa809716d6245d915b09c37c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35889","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:09.997","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix kernel panic on unknown packet types\n\nIn the very rare case where a packet type is unknown to the driver,\nidpf_rx_process_skb_fields would return early without calling\neth_type_trans to set the skb protocol \/ the network layer handler.\nThis is especially problematic if tcpdump is running when such a\npacket is received, i.e. it would cause a kernel panic.\n\nInstead, call eth_type_trans for every single packet, even when\nthe packet type is unknown."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b4d28f7fa4dd531cf503a4fe1ca7008960cc5832","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd19e827d63ac60debf117676d1126bff884bdb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35890","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.077","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngro: fix ownership transfer\n\nIf packets are GROed with fraglist they might be segmented later on and\ncontinue their journey in the stack. In skb_segment_list those skbs can\nbe reused as-is. This is an issue as their destructor was removed in\nskb_gro_receive_list but not the reference to their socket, and then\nthey can't be orphaned. Fix this by also removing the reference to the\nsocket.\n\nFor example this could be observed,\n\n  kernel BUG at include\/linux\/skbuff.h:3131!  (skb_orphan)\n  RIP: 0010:ip6_rcv_core+0x11bc\/0x19a0\n  Call Trace:\n   ipv6_list_rcv+0x250\/0x3f0\n   __netif_receive_skb_list_core+0x49d\/0x8f0\n   netif_receive_skb_list_internal+0x634\/0xd40\n   napi_complete_done+0x1d2\/0x7d0\n   gro_cell_poll+0x118\/0x1f0\n\nA similar construction is found in skb_gro_receive, apply the same\nchange there."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2eeab8c47c3c0276e0746bc382f405c9a236a5ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b3b67f731296027cceb3efad881ae281213f86f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d225b0ac96dc40d7e8ae2bc227eb2c56e130975f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed4cccef64c1d0d5b91e69f7a8a6697c3a865486","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc126c1d51e9552eacd2d717b9ffe9262a8a4cd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35891","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.157","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: micrel: Fix potential null pointer dereference\n\nIn lan8814_get_sig_rx() and lan8814_get_sig_tx() ptp_parse_header() may\nreturn NULL as ptp_header due to abnormal packet type or corrupted packet.\nFix this bug by adding ptp_header check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10608161696c2768f53426642f78a42bcaaa53e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49767b0df276f12e3e7184601e09ee7430e252dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95c1016a2d92c4c28a9d1b6d09859c00b19c0ea4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96c155943a703f0655c0c4cab540f67055960e91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35892","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.230","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: fix lockdep splat in qdisc_tree_reduce_backlog()\n\nqdisc_tree_reduce_backlog() is called with the qdisc lock held,\nnot RTNL.\n\nWe must use qdisc_lookup_rcu() instead of qdisc_lookup()\n\nsyzbot reported:\n\nWARNING: suspicious RCU usage\n6.1.74-syzkaller #0 Not tainted\n-----------------------------\nnet\/sched\/sch_api.c:305 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n3 locks held by udevd\/1142:\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire include\/linux\/rcupdate.h:306 [inline]\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_read_lock include\/linux\/rcupdate.h:747 [inline]\n  #0: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: net_tx_action+0x64a\/0x970 net\/core\/dev.c:5282\n  #1: ffff888171861108 (&sch->q.lock){+.-.}-{2:2}, at: spin_lock include\/linux\/spinlock.h:350 [inline]\n  #1: ffff888171861108 (&sch->q.lock){+.-.}-{2:2}, at: net_tx_action+0x754\/0x970 net\/core\/dev.c:5297\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire include\/linux\/rcupdate.h:306 [inline]\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: rcu_read_lock include\/linux\/rcupdate.h:747 [inline]\n  #2: ffffffff87c729a0 (rcu_read_lock){....}-{1:2}, at: qdisc_tree_reduce_backlog+0x84\/0x580 net\/sched\/sch_api.c:792\n\nstack backtrace:\nCPU: 1 PID: 1142 Comm: udevd Not tainted 6.1.74-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/25\/2024\nCall Trace:\n <TASK>\n  [<ffffffff85b85f14>] __dump_stack lib\/dump_stack.c:88 [inline]\n  [<ffffffff85b85f14>] dump_stack_lvl+0x1b1\/0x28f lib\/dump_stack.c:106\n  [<ffffffff85b86007>] dump_stack+0x15\/0x1e lib\/dump_stack.c:113\n  [<ffffffff81802299>] lockdep_rcu_suspicious+0x1b9\/0x260 kernel\/locking\/lockdep.c:6592\n  [<ffffffff84f0054c>] qdisc_lookup+0xac\/0x6f0 net\/sched\/sch_api.c:305\n  [<ffffffff84f037c3>] qdisc_tree_reduce_backlog+0x243\/0x580 net\/sched\/sch_api.c:811\n  [<ffffffff84f5b78c>] pfifo_tail_enqueue+0x32c\/0x4b0 net\/sched\/sch_fifo.c:51\n  [<ffffffff84fbcf63>] qdisc_enqueue include\/net\/sch_generic.h:833 [inline]\n  [<ffffffff84fbcf63>] netem_dequeue+0xeb3\/0x15d0 net\/sched\/sch_netem.c:723\n  [<ffffffff84eecab9>] dequeue_skb net\/sched\/sch_generic.c:292 [inline]\n  [<ffffffff84eecab9>] qdisc_restart net\/sched\/sch_generic.c:397 [inline]\n  [<ffffffff84eecab9>] __qdisc_run+0x249\/0x1e60 net\/sched\/sch_generic.c:415\n  [<ffffffff84d7aa96>] qdisc_run+0xd6\/0x260 include\/net\/pkt_sched.h:125\n  [<ffffffff84d85d29>] net_tx_action+0x7c9\/0x970 net\/core\/dev.c:5313\n  [<ffffffff85e002bd>] __do_softirq+0x2bd\/0x9bd kernel\/softirq.c:616\n  [<ffffffff81568bca>] invoke_softirq kernel\/softirq.c:447 [inline]\n  [<ffffffff81568bca>] __irq_exit_rcu+0xca\/0x230 kernel\/softirq.c:700\n  [<ffffffff81568ae9>] irq_exit_rcu+0x9\/0x20 kernel\/softirq.c:712\n  [<ffffffff85b89f52>] sysvec_apic_timer_interrupt+0x42\/0x90 arch\/x86\/kernel\/apic\/apic.c:1107\n  [<ffffffff85c00ccb>] asm_sysvec_apic_timer_interrupt+0x1b\/0x20 arch\/x86\/include\/asm\/idtentry.h:656"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07696415526bee0607e495017369c7303a4792e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7eb322360b0266481e560d1807ee79e0cef5742b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7d1ce2cc7192e8a037faa3f5d3ba72c25976460","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c040b99461a5bfc14c2d0cbb1780fcc3a4706c7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35893","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.307","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: act_skbmod: prevent kernel-infoleak\n\nsyzbot found that tcf_skbmod_dump() was copying four bytes\nfrom kernel stack to user space [1].\n\nThe issue here is that 'struct tc_skbmod' has a four bytes hole.\n\nWe need to clear the structure before filling fields.\n\n[1]\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include\/linux\/instrumented.h:114 [inline]\n BUG: KMSAN: kernel-infoleak in copy_to_user_iter lib\/iov_iter.c:24 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_ubuf include\/linux\/iov_iter.h:29 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance2 include\/linux\/iov_iter.h:245 [inline]\n BUG: KMSAN: kernel-infoleak in iterate_and_advance include\/linux\/iov_iter.h:271 [inline]\n BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x366\/0x2520 lib\/iov_iter.c:185\n  instrument_copy_to_user include\/linux\/instrumented.h:114 [inline]\n  copy_to_user_iter lib\/iov_iter.c:24 [inline]\n  iterate_ubuf include\/linux\/iov_iter.h:29 [inline]\n  iterate_and_advance2 include\/linux\/iov_iter.h:245 [inline]\n  iterate_and_advance include\/linux\/iov_iter.h:271 [inline]\n  _copy_to_iter+0x366\/0x2520 lib\/iov_iter.c:185\n  copy_to_iter include\/linux\/uio.h:196 [inline]\n  simple_copy_to_iter net\/core\/datagram.c:532 [inline]\n  __skb_datagram_iter+0x185\/0x1000 net\/core\/datagram.c:420\n  skb_copy_datagram_iter+0x5c\/0x200 net\/core\/datagram.c:546\n  skb_copy_datagram_msg include\/linux\/skbuff.h:4050 [inline]\n  netlink_recvmsg+0x432\/0x1610 net\/netlink\/af_netlink.c:1962\n  sock_recvmsg_nosec net\/socket.c:1046 [inline]\n  sock_recvmsg+0x2c4\/0x340 net\/socket.c:1068\n  __sys_recvfrom+0x35a\/0x5f0 net\/socket.c:2242\n  __do_sys_recvfrom net\/socket.c:2260 [inline]\n  __se_sys_recvfrom net\/socket.c:2256 [inline]\n  __x64_sys_recvfrom+0x126\/0x1d0 net\/socket.c:2256\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nUninit was stored to memory at:\n  pskb_expand_head+0x30f\/0x19d0 net\/core\/skbuff.c:2253\n  netlink_trim+0x2c2\/0x330 net\/netlink\/af_netlink.c:1317\n  netlink_unicast+0x9f\/0x1260 net\/netlink\/af_netlink.c:1351\n  nlmsg_unicast include\/net\/netlink.h:1144 [inline]\n  nlmsg_notify+0x21d\/0x2f0 net\/netlink\/af_netlink.c:2610\n  rtnetlink_send+0x73\/0x90 net\/core\/rtnetlink.c:741\n  rtnetlink_maybe_send include\/linux\/rtnetlink.h:17 [inline]\n  tcf_add_notify net\/sched\/act_api.c:2048 [inline]\n  tcf_action_add net\/sched\/act_api.c:2071 [inline]\n  tc_ctl_action+0x146e\/0x19d0 net\/sched\/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737\/0x1900 net\/core\/rtnetlink.c:6595\n  netlink_rcv_skb+0x375\/0x650 net\/netlink\/af_netlink.c:2559\n  rtnetlink_rcv+0x34\/0x40 net\/core\/rtnetlink.c:6613\n  netlink_unicast_kernel net\/netlink\/af_netlink.c:1335 [inline]\n  netlink_unicast+0xf4c\/0x1260 net\/netlink\/af_netlink.c:1361\n  netlink_sendmsg+0x10df\/0x11f0 net\/netlink\/af_netlink.c:1905\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:745\n  ____sys_sendmsg+0x877\/0xb60 net\/socket.c:2584\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2638\n  __sys_sendmsg net\/socket.c:2667 [inline]\n  __do_sys_sendmsg net\/socket.c:2676 [inline]\n  __se_sys_sendmsg net\/socket.c:2674 [inline]\n  __x64_sys_sendmsg+0x307\/0x4a0 net\/socket.c:2674\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nUninit was stored to memory at:\n  __nla_put lib\/nlattr.c:1041 [inline]\n  nla_put+0x1c6\/0x230 lib\/nlattr.c:1099\n  tcf_skbmod_dump+0x23f\/0xc20 net\/sched\/act_skbmod.c:256\n  tcf_action_dump_old net\/sched\/act_api.c:1191 [inline]\n  tcf_action_dump_1+0x85e\/0x970 net\/sched\/act_api.c:1227\n  tcf_action_dump+0x1fd\/0x460 net\/sched\/act_api.c:1251\n  tca_get_fill+0x519\/0x7a0 net\/sched\/act_api.c:1628\n  tcf_add_notify_msg net\/sched\/act_api.c:2023 [inline]\n  tcf_add_notify net\/sched\/act_api.c:2042 [inline]\n  tcf_action_add net\/sched\/act_api.c:2071 [inline]\n  tc_ctl_action+0x1365\/0x19d0 net\/sched\/act_api.c:2119\n  rtnetlink_rcv_msg+0x1737\/0x1900 net\/core\/rtnetlink.c:6595\n  netlink_rcv_skb+0x375\/0x650 net\/netlink\/af_netli\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55d3fe7b2b7bc354e7cbc1f7b8f98a29ccd5a366","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e45dc4408857305f4685abfd7a528a1e58b51b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/729ad2ac2a2cdc9f4a4bdfd40bfd276e6bc33924","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bb2c7103d8c13b06a57bf997b8cdbe93cd7283c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a097fc199ab5f4b5392c5144034c0d2148b55a14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d313eb8b77557a6d5855f42d2234bd592c7b50dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f190a4aa03cbd518bd9c62a66e1233984f5fd2ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f356eb2fb567e0931143ac1769ac802d3b3e2077","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35894","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.397","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: prevent BPF accessing lowat from a subflow socket.\n\nAlexei reported the following splat:\n\n WARNING: CPU: 32 PID: 3276 at net\/mptcp\/subflow.c:1430 subflow_data_ready+0x147\/0x1c0\n Modules linked in: dummy bpf_testmod(O) [last unloaded: bpf_test_no_cfi(O)]\n CPU: 32 PID: 3276 Comm: test_progs Tainted: GO       6.8.0-12873-g2c43c33bfd23\n Call Trace:\n  <TASK>\n  mptcp_set_rcvlowat+0x79\/0x1d0\n  sk_setsockopt+0x6c0\/0x1540\n  __bpf_setsockopt+0x6f\/0x90\n  bpf_sock_ops_setsockopt+0x3c\/0x90\n  bpf_prog_509ce5db2c7f9981_bpf_test_sockopt_int+0xb4\/0x11b\n  bpf_prog_dce07e362d941d2b_bpf_test_socket_sockopt+0x12b\/0x132\n  bpf_prog_348c9b5faaf10092_skops_sockopt+0x954\/0xe86\n  __cgroup_bpf_run_filter_sock_ops+0xbc\/0x250\n  tcp_connect+0x879\/0x1160\n  tcp_v6_connect+0x50c\/0x870\n  mptcp_connect+0x129\/0x280\n  __inet_stream_connect+0xce\/0x370\n  inet_stream_connect+0x36\/0x50\n  bpf_trampoline_6442491565+0x49\/0xef\n  inet_stream_connect+0x5\/0x50\n  __sys_connect+0x63\/0x90\n  __x64_sys_connect+0x14\/0x20\n\nThe root cause of the issue is that bpf allows accessing mptcp-level\nproto_ops from a tcp subflow scope.\n\nFix the issue detecting the problematic call and preventing any action."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ffb1ab698376f09cc33101c07c1be229389fe29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcf4692fa39e86a590c14a4af2de704e1d20a3b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35895","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.477","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Prevent lock inversion deadlock in map delete elem\n\nsyzkaller started using corpuses where a BPF tracing program deletes\nelements from a sockmap\/sockhash map. Because BPF tracing programs can be\ninvoked from any interrupt context, locks taken during a map_delete_elem\noperation must be hardirq-safe. Otherwise a deadlock due to lock inversion\nis possible, as reported by lockdep:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&htab->buckets[i].lock);\n                               local_irq_disable();\n                               lock(&host->lock);\n                               lock(&htab->buckets[i].lock);\n  <Interrupt>\n    lock(&host->lock);\n\nLocks in sockmap are hardirq-unsafe by design. We expects elements to be\ndeleted from sockmap\/sockhash only in task (normal) context with interrupts\nenabled, or in softirq context.\n\nDetect when map_delete_elem operation is invoked from a context which is\n_not_ hardirq-unsafe, that is interrupts are disabled, and bail out with an\nerror.\n\nNote that map updates are not affected by this issue. BPF verifier does not\nallow updating sockmap\/sockhash from a BPF tracing program today."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/668b3074aa14829e2ac2759799537a93b60fef86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6af057ccdd8e7619960aca1f0428339f213b31cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a44770fed86515eedb5a7c00b787f847ebb134a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1e73fb19a4c872d7a399ad3c66e8ca30e0875ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd54b48db0c822ae7b520bc80751f0a0a173ef75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7990498b05ac41f7d6a190dc0418ef1d21bf058","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff91059932401894e6c86341915615c5eb0eca48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35896","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.557","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: validate user input for expected length\n\nI got multiple syzbot reports showing old bugs exposed\nby BPF after commit 20f2505fb436 (\"bpf: Try to avoid kzalloc\nin cgroup\/{s,g}etsockopt\")\n\nsetsockopt() @optlen argument should be taken into account\nbefore copying data.\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in do_replace net\/ipv4\/netfilter\/ip_tables.c:1111 [inline]\n BUG: KASAN: slab-out-of-bounds in do_ipt_set_ctl+0x902\/0x3dd0 net\/ipv4\/netfilter\/ip_tables.c:1627\nRead of size 96 at addr ffff88802cd73da0 by task syz-executor.4\/7238\n\nCPU: 1 PID: 7238 Comm: syz-executor.4 Not tainted 6.9.0-rc2-next-20240403-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 03\/27\/2024\nCall Trace:\n <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:114\n  print_address_description mm\/kasan\/report.c:377 [inline]\n  print_report+0x169\/0x550 mm\/kasan\/report.c:488\n  kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n  kasan_check_range+0x282\/0x290 mm\/kasan\/generic.c:189\n  __asan_memcpy+0x29\/0x70 mm\/kasan\/shadow.c:105\n  copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n  copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n  do_replace net\/ipv4\/netfilter\/ip_tables.c:1111 [inline]\n  do_ipt_set_ctl+0x902\/0x3dd0 net\/ipv4\/netfilter\/ip_tables.c:1627\n  nf_setsockopt+0x295\/0x2c0 net\/netfilter\/nf_sockopt.c:101\n  do_sock_setsockopt+0x3af\/0x720 net\/socket.c:2311\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x72\/0x7a\nRIP: 0033:0x7fd22067dde9\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fd21f9ff0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fd2207abf80 RCX: 00007fd22067dde9\nRDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000003\nRBP: 00007fd2206ca47a R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000020000880 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fd2207abf80 R15: 00007ffd2d0170d8\n <\/TASK>\n\nAllocated by task 7238:\n  kasan_save_stack mm\/kasan\/common.c:47 [inline]\n  kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n  poison_kmalloc_redzone mm\/kasan\/common.c:370 [inline]\n  __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:387\n  kasan_kmalloc include\/linux\/kasan.h:211 [inline]\n  __do_kmalloc_node mm\/slub.c:4069 [inline]\n  __kmalloc_noprof+0x200\/0x410 mm\/slub.c:4082\n  kmalloc_noprof include\/linux\/slab.h:664 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd47\/0x1050 kernel\/bpf\/cgroup.c:1869\n  do_sock_setsockopt+0x6b4\/0x720 net\/socket.c:2293\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x72\/0x7a\n\nThe buggy address belongs to the object at ffff88802cd73da0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 0 bytes inside of\n allocated 1-byte region [ffff88802cd73da0, ffff88802cd73da1)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88802cd73020 pfn:0x2cd73\nflags: 0xfff80000000000(node=0|zone=1|lastcpupid=0xfff)\npage_type: 0xffffefff(slab)\nraw: 00fff80000000000 ffff888015041280 dead000000000100 dead000000000122\nraw: ffff88802cd73020 000000008080007f 00000001ffffefff 00\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c83842df40f86e529db6842231154772c20edcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f038242b77ddfc505bf4163d4904c1abd2e74d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18aae2cb87e5faa9c5bd865260ceadac60d5a6c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/440e948cf0eff32cfe322dcbca3f2525354b159b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58f2bfb789e6bd3bc24a2c9c1580f3c67aec3018","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81d51b9b7c95e791ba3c1a2dd77920a9d3b3f525","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35897","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.640","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: discard table flag update with pending basechain deletion\n\nHook unregistration is deferred to the commit phase, same occurs with\nhook updates triggered by the table dormant flag. When both commands are\ncombined, this results in deleting a basechain while leaving its hook\nstill registered in the core."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bc83a019bbe268be3526406245ec28c2458a518","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2aeb805a1bcd5f27c8c0d1a9d4d653f16d1506f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cbbe1ba76ee7e674a86abd43009b083a45838cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f609f630951b624348373cef99991ce08831927","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9627fd0c6ea1c446741a33e67bc5709c59923827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a3b90904d8a072287480eed4c3ece4b99d64f78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b58d0ac35f6d75ec1db8650a29dfd6f292c11362","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35898","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.723","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix potential data-race in __nft_flowtable_type_get()\n\nnft_unregister_flowtable_type() within nf_flow_inet_module_exit() can\nconcurrent with __nft_flowtable_type_get() within nf_tables_newflowtable().\nAnd thhere is not any protection when iterate over nf_tables_flowtables\nlist in __nft_flowtable_type_get(). Therefore, there is pertential\ndata-race of nf_tables_flowtables list entry.\n\nUse list_for_each_entry_rcu() to iterate over nf_tables_flowtables list\nin __nft_flowtable_type_get(), and use rcu_read_lock() in the caller\nnft_flowtable_type_get() to protect the entire type query process."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24225011d81b471acc0e1e315b7d9905459a6304","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2485bcfe05ee3cf9ca8923a94fa2e456924c79c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69d1fe14a680042ec913f22196b58e2c8ff1b007","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b891153b2e4dc0ca9d9dab8f619d49c740813df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/940d41caa71f0d3a52df2fde5fada524a993e331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b5b7708ec2be21dd7ef8ca0e3abe4ae9f3b083b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a347bc8e6251eaee4b619da28020641eb5b0dd77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e684b1674fd1ca4361812a491242ae871d6b2859","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35899","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.807","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: flush pending destroy work before exit_net release\n\nSimilar to 2c9f0293280e (\"netfilter: nf_tables: flush pending destroy\nwork before netlink notifier\") to address a race between exit_net and\nthe destroy workqueue.\n\nThe trace below shows an element to be released via destroy workqueue\nwhile exit_net path (triggered via module removal) has already released\nthe set that is used in such transaction.\n\n[ 1360.547789] BUG: KASAN: slab-use-after-free in nf_tables_trans_destroy_work+0x3f5\/0x590 [nf_tables]\n[ 1360.547861] Read of size 8 at addr ffff888140500cc0 by task kworker\/4:1\/152465\n[ 1360.547870] CPU: 4 PID: 152465 Comm: kworker\/4:1 Not tainted 6.8.0+ #359\n[ 1360.547882] Workqueue: events nf_tables_trans_destroy_work [nf_tables]\n[ 1360.547984] Call Trace:\n[ 1360.547991]  <TASK>\n[ 1360.547998]  dump_stack_lvl+0x53\/0x70\n[ 1360.548014]  print_report+0xc4\/0x610\n[ 1360.548026]  ? __virt_addr_valid+0xba\/0x160\n[ 1360.548040]  ? __pfx__raw_spin_lock_irqsave+0x10\/0x10\n[ 1360.548054]  ? nf_tables_trans_destroy_work+0x3f5\/0x590 [nf_tables]\n[ 1360.548176]  kasan_report+0xae\/0xe0\n[ 1360.548189]  ? nf_tables_trans_destroy_work+0x3f5\/0x590 [nf_tables]\n[ 1360.548312]  nf_tables_trans_destroy_work+0x3f5\/0x590 [nf_tables]\n[ 1360.548447]  ? __pfx_nf_tables_trans_destroy_work+0x10\/0x10 [nf_tables]\n[ 1360.548577]  ? _raw_spin_unlock_irq+0x18\/0x30\n[ 1360.548591]  process_one_work+0x2f1\/0x670\n[ 1360.548610]  worker_thread+0x4d3\/0x760\n[ 1360.548627]  ? __pfx_worker_thread+0x10\/0x10\n[ 1360.548640]  kthread+0x16b\/0x1b0\n[ 1360.548653]  ? __pfx_kthread+0x10\/0x10\n[ 1360.548665]  ret_from_fork+0x2f\/0x50\n[ 1360.548679]  ? __pfx_kthread+0x10\/0x10\n[ 1360.548690]  ret_from_fork_asm+0x1a\/0x30\n[ 1360.548707]  <\/TASK>\n\n[ 1360.548719] Allocated by task 192061:\n[ 1360.548726]  kasan_save_stack+0x20\/0x40\n[ 1360.548739]  kasan_save_track+0x14\/0x30\n[ 1360.548750]  __kasan_kmalloc+0x8f\/0xa0\n[ 1360.548760]  __kmalloc_node+0x1f1\/0x450\n[ 1360.548771]  nf_tables_newset+0x10c7\/0x1b50 [nf_tables]\n[ 1360.548883]  nfnetlink_rcv_batch+0xbc4\/0xdc0 [nfnetlink]\n[ 1360.548909]  nfnetlink_rcv+0x1a8\/0x1e0 [nfnetlink]\n[ 1360.548927]  netlink_unicast+0x367\/0x4f0\n[ 1360.548935]  netlink_sendmsg+0x34b\/0x610\n[ 1360.548944]  ____sys_sendmsg+0x4d4\/0x510\n[ 1360.548953]  ___sys_sendmsg+0xc9\/0x120\n[ 1360.548961]  __sys_sendmsg+0xbe\/0x140\n[ 1360.548971]  do_syscall_64+0x55\/0x120\n[ 1360.548982]  entry_SYSCALL_64_after_hwframe+0x55\/0x5d\n\n[ 1360.548994] Freed by task 192222:\n[ 1360.548999]  kasan_save_stack+0x20\/0x40\n[ 1360.549009]  kasan_save_track+0x14\/0x30\n[ 1360.549019]  kasan_save_free_info+0x3b\/0x60\n[ 1360.549028]  poison_slab_object+0x100\/0x180\n[ 1360.549036]  __kasan_slab_free+0x14\/0x30\n[ 1360.549042]  kfree+0xb6\/0x260\n[ 1360.549049]  __nft_release_table+0x473\/0x6a0 [nf_tables]\n[ 1360.549131]  nf_tables_exit_net+0x170\/0x240 [nf_tables]\n[ 1360.549221]  ops_exit_list+0x50\/0xa0\n[ 1360.549229]  free_exit_list+0x101\/0x140\n[ 1360.549236]  unregister_pernet_operations+0x107\/0x160\n[ 1360.549245]  unregister_pernet_subsys+0x1c\/0x30\n[ 1360.549254]  nf_tables_module_exit+0x43\/0x80 [nf_tables]\n[ 1360.549345]  __do_sys_delete_module+0x253\/0x370\n[ 1360.549352]  do_syscall_64+0x55\/0x120\n[ 1360.549360]  entry_SYSCALL_64_after_hwframe+0x55\/0x5d\n\n(gdb) list *__nft_release_table+0x473\n0x1e033 is in __nft_release_table (net\/netfilter\/nf_tables_api.c:11354).\n11349           list_for_each_entry_safe(flowtable, nf, &table->flowtables, list) {\n11350                   list_del(&flowtable->list);\n11351                   nft_use_dec(&table->use);\n11352                   nf_tables_flowtable_destroy(flowtable);\n11353           }\n11354           list_for_each_entry_safe(set, ns, &table->sets, list) {\n11355                   list_del(&set->list);\n11356                   nft_use_dec(&table->use);\n11357                   if (set->flags & (NFT_SET_MAP | NFT_SET_OBJECT))\n11358                           nft_map_deactivat\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24cea9677025e0de419989ecb692acd4bb34cac2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/333b5085522cf1898d5a0d92616046b414f631a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46c4481938e2ca62343b16ea83ab28f4c1733d31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e8447a9a3d367b5065a0b7abe101da6e0037b6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2c9eb19fc3b11caebafde4c30a76a49203d18a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4e14695fe805eb0f0cb36e0ad6a560b9f985e86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7e3c88cc2a977c2b9a8aa52c1ce689e7b394e49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35900","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.887","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: reject new basechain after table flag update\n\nWhen dormant flag is toggled, hooks are disabled in the commit phase by\niterating over current chains in table (existing and new).\n\nThe following configuration allows for an inconsistent state:\n\n  add table x\n  add chain x y { type filter hook input priority 0; }\n  add table x { flags dormant; }\n  add chain x w { type filter hook input priority 1; }\n\nwhich triggers the following warning when trying to unregister chain w\nwhich is already unregistered.\n\n[  127.322252] WARNING: CPU: 7 PID: 1211 at net\/netfilter\/core.c:50                                                                     1 __nf_unregister_net_hook+0x21a\/0x260\n[...]\n[  127.322519] Call Trace:\n[  127.322521]  <TASK>\n[  127.322524]  ? __warn+0x9f\/0x1a0\n[  127.322531]  ? __nf_unregister_net_hook+0x21a\/0x260\n[  127.322537]  ? report_bug+0x1b1\/0x1e0\n[  127.322545]  ? handle_bug+0x3c\/0x70\n[  127.322552]  ? exc_invalid_op+0x17\/0x40\n[  127.322556]  ? asm_exc_invalid_op+0x1a\/0x20\n[  127.322563]  ? kasan_save_free_info+0x3b\/0x60\n[  127.322570]  ? __nf_unregister_net_hook+0x6a\/0x260\n[  127.322577]  ? __nf_unregister_net_hook+0x21a\/0x260\n[  127.322583]  ? __nf_unregister_net_hook+0x6a\/0x260\n[  127.322590]  ? __nf_tables_unregister_hook+0x8a\/0xe0 [nf_tables]\n[  127.322655]  nft_table_disable+0x75\/0xf0 [nf_tables]\n[  127.322717]  nf_tables_commit+0x2571\/0x2620 [nf_tables]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41bad13c0e8a5a2b47a7472cced922555372daab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/420132bee3d0136b7fba253a597b098fe15493a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/745cf6a843896cdac8766c74379300ed73c78830","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b6fba6918714afee3e17796113ccab636255c7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ba81dca416adf82fc5a2a23abc1a8cc02ad32fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/994209ddf4f430946f6247616b2e33d179243769","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e95bb4cba94c018be24b11f017d1c55dd6cda31a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35901","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:10.967","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix Rx DMA datasize and skb_over_panic\n\nmana_get_rxbuf_cfg() aligns the RX buffer's DMA datasize to be\nmultiple of 64. So a packet slightly bigger than mtu+14, say 1536,\ncan be received and cause skb_over_panic.\n\nSample dmesg:\n[ 5325.237162] skbuff: skb_over_panic: text:ffffffffc043277a len:1536 put:1536 head:ff1100018b517000 data:ff1100018b517100 tail:0x700 end:0x6ea dev:<NULL>\n[ 5325.243689] ------------[ cut here ]------------\n[ 5325.245748] kernel BUG at net\/core\/skbuff.c:192!\n[ 5325.247838] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[ 5325.258374] RIP: 0010:skb_panic+0x4f\/0x60\n[ 5325.302941] Call Trace:\n[ 5325.304389]  <IRQ>\n[ 5325.315794]  ? skb_panic+0x4f\/0x60\n[ 5325.317457]  ? asm_exc_invalid_op+0x1f\/0x30\n[ 5325.319490]  ? skb_panic+0x4f\/0x60\n[ 5325.321161]  skb_put+0x4e\/0x50\n[ 5325.322670]  mana_poll+0x6fa\/0xb50 [mana]\n[ 5325.324578]  __napi_poll+0x33\/0x1e0\n[ 5325.326328]  net_rx_action+0x12e\/0x280\n\nAs discussed internally, this alignment is not necessary. To fix\nthis bug, remove it from the code. So oversized packets will be\nmarked as CQE_RX_TRUNCATED by NIC, and dropped."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05cb7c41fa1a7a7b2c2a6b81bbe7c67f5c11932b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0de6ab920aafb56feab56058e46b688e694a246","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca58927b00385005f488b6a9905ced7a4f719aad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35902","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.037","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/rds: fix possible cp null dereference\n\ncp might be null, calling cp->cp_conn would produce null dereference\n\n[Simon Horman adds:]\n\nAnalysis:\n\n* cp is a parameter of __rds_rdma_map and is not reassigned.\n\n* The following call-sites pass a NULL cp argument to __rds_rdma_map()\n\n  - rds_get_mr()\n  - rds_get_mr_for_dest\n\n* Prior to the code above, the following assumes that cp may be NULL\n  (which is indicative, but could itself be unnecessary)\n\n\ttrans_private = rs->rs_transport->get_mr(\n\t\tsg, nents, rs, &mr->r_key, cp ? cp->cp_conn : NULL,\n\t\targs->vec.addr, args->vec.bytes,\n\t\tneed_odp ? ODP_ZEROBASED : ODP_NOT_NEEDED);\n\n* The code modified by this patch is guarded by IS_ERR(trans_private),\n  where trans_private is assigned as per the previous point in this analysis.\n\n  The only implementation of get_mr that I could locate is rds_ib_get_mr()\n  which can return an ERR_PTR if the conn (4th) argument is NULL.\n\n* ret is set to PTR_ERR(trans_private).\n  rds_ib_get_mr can return ERR_PTR(-ENODEV) if the conn (4th) argument is NULL.\n  Thus ret may be -ENODEV in which case the code in question will execute.\n\nConclusion:\n* cp may be NULL at the point where this patch adds a check;\n  this patch does seem to address a possible bug"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/62fc3357e079a07a22465b9b6ef71bb6ea75ee4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6794090c742008c53b344b35b021d4a3093dc50a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92309bed3c5fbe2ccd4c45056efd42edbd06162d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcd46782e2ec3825d10c1552fcb674d491cc09f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbaac2e5488ed54833897264a5ffb2a341a9f196","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfb786b03b03c5ff38882bee38525eb9987e4d14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d275de8ea7be3a453629fddae41d4156762e814c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d49fac38479bfdaec52b3ea274d290c47a294029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35903","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.117","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/bpf: Fix IP after emitting call depth accounting\n\nAdjust the IP passed to `emit_patch` so it calculates the correct offset\nfor the CALL instruction if `x86_call_depth_emit_accounting` emits code.\nOtherwise we will skip some instructions and most likely crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f9d57c771656bfd651e22edcfdb5f60e62542d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81166178cf0a0062a22b1b3b5368183d39577028","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d98aa088386aee3db1b7b60b800c0fde0654a4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35904","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.190","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nselinux: avoid dereference of garbage after mount failure\n\nIn case kern_mount() fails and returns an error pointer return in the\nerror branch instead of continuing and dereferencing the error pointer.\n\nWhile on it drop the never read static variable selinuxfs_mount."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37801a36b4d68892ce807264f784d818f8d0d39b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/477ed6789eb9f3f4d3568bb977f90c863c12724e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68784a5d01b8868ff85a7926676b6729715fff3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35905","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.260","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Protect against int overflow for stack access size\n\nThis patch re-introduces protection against the size of access to stack\nmemory being negative; the access size can appear negative as a result\nof overflowing its signed int representation. This should not actually\nhappen, as there are other protections along the way, but we should\nprotect against it anyway. One code path was missing such protections\n(fixed in the previous patch in the series), causing out-of-bounds array\naccesses in check_stack_range_initialized(). This patch causes the\nverification of a program with such a non-sensical access size to fail.\n\nThis check used to exist in a more indirect way, but was inadvertendly\nremoved in a833a17aeac7."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/203a68151e8eeb331d4a64ab78303f3a15faf103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37dc1718dc0c4392dbfcb9adec22a776e745dd69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f0784b2f1eb9147973d8c43ba085c5fdf44ff69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98cdac206b112bec63852e94802791e316acc2c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9970e059af471478455f9534e8c3db82f8c5496d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecc6a2101840177e57c925c102d2d29f260d37c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35906","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.337","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Send DTBCLK disable message on first commit\n\n[Why]\nPrevious patch to allow DTBCLK disable didn't address boot case. Driver\nthinks DTBCLK is disabled by default, so we don't send disable message to\nPMFW. DTBCLK is then enabled at idle desktop on boot, burning power.\n\n[How]\nSet dtbclk_en to true on boot so that disable message is sent during first\ncommit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dab75b433ed2480d57ae4f8f725186a46223e42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f341055b10bd8be55c3c995dff5f770b236b8ca9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35907","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.400","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxbf_gige: call request_irq() after NAPI initialized\n\nThe mlxbf_gige driver encounters a NULL pointer exception in\nmlxbf_gige_open() when kdump is enabled.  The sequence to reproduce\nthe exception is as follows:\na) enable kdump\nb) trigger kdump via \"echo c > \/proc\/sysrq-trigger\"\nc) kdump kernel executes\nd) kdump kernel loads mlxbf_gige module\ne) the mlxbf_gige module runs its open() as the\n   the \"oob_net0\" interface is brought up\nf) mlxbf_gige module will experience an exception\n   during its open(), something like:\n\n     Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n     Mem abort info:\n       ESR = 0x0000000086000004\n       EC = 0x21: IABT (current EL), IL = 32 bits\n       SET = 0, FnV = 0\n       EA = 0, S1PTW = 0\n       FSC = 0x04: level 0 translation fault\n     user pgtable: 4k pages, 48-bit VAs, pgdp=00000000e29a4000\n     [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n     Internal error: Oops: 0000000086000004 [#1] SMP\n     CPU: 0 PID: 812 Comm: NetworkManager Tainted: G           OE     5.15.0-1035-bluefield #37-Ubuntu\n     Hardware name: https:\/\/www.mellanox.com BlueField-3 SmartNIC Main Card\/BlueField-3 SmartNIC Main Card, BIOS 4.6.0.13024 Jan 19 2024\n     pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n     pc : 0x0\n     lr : __napi_poll+0x40\/0x230\n     sp : ffff800008003e00\n     x29: ffff800008003e00 x28: 0000000000000000 x27: 00000000ffffffff\n     x26: ffff000066027238 x25: ffff00007cedec00 x24: ffff800008003ec8\n     x23: 000000000000012c x22: ffff800008003eb7 x21: 0000000000000000\n     x20: 0000000000000001 x19: ffff000066027238 x18: 0000000000000000\n     x17: ffff578fcb450000 x16: ffffa870b083c7c0 x15: 0000aaab010441d0\n     x14: 0000000000000001 x13: 00726f7272655f65 x12: 6769675f6662786c\n     x11: 0000000000000000 x10: 0000000000000000 x9 : ffffa870b0842398\n     x8 : 0000000000000004 x7 : fe5a48b9069706ea x6 : 17fdb11fc84ae0d2\n     x5 : d94a82549d594f35 x4 : 0000000000000000 x3 : 0000000000400100\n     x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000066027238\n     Call trace:\n      0x0\n      net_rx_action+0x178\/0x360\n      __do_softirq+0x15c\/0x428\n      __irq_exit_rcu+0xac\/0xec\n      irq_exit+0x18\/0x2c\n      handle_domain_irq+0x6c\/0xa0\n      gic_handle_irq+0xec\/0x1b0\n      call_on_irq_stack+0x20\/0x2c\n      do_interrupt_handler+0x5c\/0x70\n      el1_interrupt+0x30\/0x50\n      el1h_64_irq_handler+0x18\/0x2c\n      el1h_64_irq+0x7c\/0x80\n      __setup_irq+0x4c0\/0x950\n      request_threaded_irq+0xf4\/0x1bc\n      mlxbf_gige_request_irqs+0x68\/0x110 [mlxbf_gige]\n      mlxbf_gige_open+0x5c\/0x170 [mlxbf_gige]\n      __dev_open+0x100\/0x220\n      __dev_change_flags+0x16c\/0x1f0\n      dev_change_flags+0x2c\/0x70\n      do_setlink+0x220\/0xa40\n      __rtnl_newlink+0x56c\/0x8a0\n      rtnl_newlink+0x58\/0x84\n      rtnetlink_rcv_msg+0x138\/0x3c4\n      netlink_rcv_skb+0x64\/0x130\n      rtnetlink_rcv+0x20\/0x30\n      netlink_unicast+0x2ec\/0x360\n      netlink_sendmsg+0x278\/0x490\n      __sock_sendmsg+0x5c\/0x6c\n      ____sys_sendmsg+0x290\/0x2d4\n      ___sys_sendmsg+0x84\/0xd0\n      __sys_sendmsg+0x70\/0xd0\n      __arm64_sys_sendmsg+0x2c\/0x40\n      invoke_syscall+0x78\/0x100\n      el0_svc_common.constprop.0+0x54\/0x184\n      do_el0_svc+0x30\/0xac\n      el0_svc+0x48\/0x160\n      el0t_64_sync_handler+0xa4\/0x12c\n      el0t_64_sync+0x1a4\/0x1a8\n     Code: bad PC value\n     ---[ end trace 7d1c3f3bf9d81885 ]---\n     Kernel panic - not syncing: Oops: Fatal exception in interrupt\n     Kernel Offset: 0x2870a7a00000 from 0xffff800008000000\n     PHYS_OFFSET: 0x80000000\n     CPU features: 0x0,000005c1,a3332a5a\n     Memory Limit: none\n     ---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---\n\nThe exception happens because there is a pending RX interrupt before the\ncall to request_irq(RX IRQ) executes.  Then, the RX IRQ handler fires\nimmediately after this request_irq() completes. The\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24444af5ddf729376b90db0f135fa19973cb5dab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/867a2f598af6a645c865d1101b58c5e070c6dd9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8feb1652afe9c5d019059a55c90f70690dce0f52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a583117668ddb86e98f2e11c7caa3db0e6df52a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7442a634ac06b953fc1f7418f307b25acd4cfbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35908","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.477","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntls: get psock ref after taking rxlock to avoid leak\n\nAt the start of tls_sw_recvmsg, we take a reference on the psock, and\nthen call tls_rx_reader_lock. If that fails, we return directly\nwithout releasing the reference.\n\nInstead of adding a new label, just take the reference after locking\nhas succeeded, since we don't need it before."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30fabe50a7ace3e9d57cf7f9288f33ea408491c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/417e91e856099e9b8a42a2520e2255e6afe024be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b565d294e3d5aa809566a4d819835da11997d8b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1b7f14130d782433bc98c1e1e41ce6b4d4c3096","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35909","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.540","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wwan: t7xx: Split 64bit accesses to fix alignment issues\n\nSome of the registers are aligned on a 32bit boundary, causing\nalignment faults on 64bit platforms.\n\n Unable to handle kernel paging request at virtual address ffffffc084a1d004\n Mem abort info:\n ESR = 0x0000000096000061\n EC = 0x25: DABT (current EL), IL = 32 bits\n SET = 0, FnV = 0\n EA = 0, S1PTW = 0\n FSC = 0x21: alignment fault\n Data abort info:\n ISV = 0, ISS = 0x00000061, ISS2 = 0x00000000\n CM = 0, WnR = 1, TnD = 0, TagAccess = 0\n GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000046ad6000\n [ffffffc084a1d004] pgd=100000013ffff003, p4d=100000013ffff003, pud=100000013ffff003, pmd=0068000020a00711\n Internal error: Oops: 0000000096000061 [#1] SMP\n Modules linked in: mtk_t7xx(+) qcserial pppoe ppp_async option nft_fib_inet nf_flow_table_inet mt7921u(O) mt7921s(O) mt7921e(O) mt7921_common(O) iwlmvm(O) iwldvm(O) usb_wwan rndis_host qmi_wwan pppox ppp_generic nft_reject_ipv6 nft_reject_ipv4 nft_reject_inet nft_reject nft_redir nft_quota nft_numgen nft_nat nft_masq nft_log nft_limit nft_hash nft_flow_offload nft_fib_ipv6 nft_fib_ipv4 nft_fib nft_ct nft_chain_nat nf_tables nf_nat nf_flow_table nf_conntrack mt7996e(O) mt792x_usb(O) mt792x_lib(O) mt7915e(O) mt76_usb(O) mt76_sdio(O) mt76_connac_lib(O) mt76(O) mac80211(O) iwlwifi(O) huawei_cdc_ncm cfg80211(O) cdc_ncm cdc_ether wwan usbserial usbnet slhc sfp rtc_pcf8563 nfnetlink nf_reject_ipv6 nf_reject_ipv4 nf_log_syslog nf_defrag_ipv6 nf_defrag_ipv4 mt6577_auxadc mdio_i2c libcrc32c compat(O) cdc_wdm cdc_acm at24 crypto_safexcel pwm_fan i2c_gpio i2c_smbus industrialio i2c_algo_bit i2c_mux_reg i2c_mux_pca954x i2c_mux_pca9541 i2c_mux_gpio i2c_mux dummy oid_registry tun sha512_arm64 sha1_ce sha1_generic seqiv\n md5 geniv des_generic libdes cbc authencesn authenc leds_gpio xhci_plat_hcd xhci_pci xhci_mtk_hcd xhci_hcd nvme nvme_core gpio_button_hotplug(O) dm_mirror dm_region_hash dm_log dm_crypt dm_mod dax usbcore usb_common ptp aquantia pps_core mii tpm encrypted_keys trusted\n CPU: 3 PID: 5266 Comm: kworker\/u9:1 Tainted: G O 6.6.22 #0\n Hardware name: Bananapi BPI-R4 (DT)\n Workqueue: md_hk_wq t7xx_fsm_uninit [mtk_t7xx]\n pstate: 804000c5 (Nzcv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : t7xx_cldma_hw_set_start_addr+0x1c\/0x3c [mtk_t7xx]\n lr : t7xx_cldma_start+0xac\/0x13c [mtk_t7xx]\n sp : ffffffc085d63d30\n x29: ffffffc085d63d30 x28: 0000000000000000 x27: 0000000000000000\n x26: 0000000000000000 x25: ffffff80c804f2c0 x24: ffffff80ca196c05\n x23: 0000000000000000 x22: ffffff80c814b9b8 x21: ffffff80c814b128\n x20: 0000000000000001 x19: ffffff80c814b080 x18: 0000000000000014\n x17: 0000000055c9806b x16: 000000007c5296d0 x15: 000000000f6bca68\n x14: 00000000dbdbdce4 x13: 000000001aeaf72a x12: 0000000000000001\n x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n x8 : ffffff80ca1ef6b4 x7 : ffffff80c814b818 x6 : 0000000000000018\n x5 : 0000000000000870 x4 : 0000000000000000 x3 : 0000000000000000\n x2 : 000000010a947000 x1 : ffffffc084a1d004 x0 : ffffffc084a1d004\n Call trace:\n t7xx_cldma_hw_set_start_addr+0x1c\/0x3c [mtk_t7xx]\n t7xx_fsm_uninit+0x578\/0x5ec [mtk_t7xx]\n process_one_work+0x154\/0x2a0\n worker_thread+0x2ac\/0x488\n kthread+0xe0\/0xec\n ret_from_fork+0x10\/0x20\n Code: f9400800 91001000 8b214001 d50332bf (f9000022)\n ---[ end trace 0000000000000000 ]---\n\nThe inclusion of io-64-nonatomic-lo-hi.h indicates that all 64bit\naccesses can be replaced by pairs of nonatomic 32bit access.  Fix\nalignment by forcing all accesses to be 32bit on 64bit platforms."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e22c9cb618716b8e557fe17c3d4958171288082","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d5a7dd5a35876f0ecc286f3602a88887a788217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4fdb3c197e35f655b2d9b6759ce29440eacdfda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/beaf0e7996b79e06ccc2bdcb4442fbaeccc31200","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35910","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.617","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: properly terminate timers for kernel sockets\n\nWe had various syzbot reports about tcp timers firing after\nthe corresponding netns has been dismantled.\n\nFortunately Josef Bacik could trigger the issue more often,\nand could test a patch I wrote two years ago.\n\nWhen TCP sockets are closed, we call inet_csk_clear_xmit_timers()\nto 'stop' the timers.\n\ninet_csk_clear_xmit_timers() can be called from any context,\nincluding when socket lock is held.\nThis is the reason it uses sk_stop_timer(), aka del_timer().\nThis means that ongoing timers might finish much later.\n\nFor user sockets, this is fine because each running timer\nholds a reference on the socket, and the user socket holds\na reference on the netns.\n\nFor kernel sockets, we risk that the netns is freed before\ntimer can complete, because kernel sockets do not hold\nreference on the netns.\n\nThis patch adds inet_csk_clear_xmit_timers_sync() function\nthat using sk_stop_timer_sync() to make sure all timers\nare terminated before the kernel socket is released.\nModules using kernel sockets close them in their netns exit()\nhandler.\n\nAlso add sock_not_owned_by_me() helper to get LOCKDEP\nsupport : inet_csk_clear_xmit_timers_sync() must not be called\nwhile socket lock is held.\n\nIt is very possible we can revert in the future commit\n3a58f13a881e (\"net: rds: acquire refcount on TCP sockets\")\nwhich attempted to solve the issue in rds only.\n(net\/smc\/af_smc.c and net\/mptcp\/subflow.c have similar code)\n\nWe probably can remove the check_net() tests from\ntcp_out_of_resources() and __tcp_close() in the future."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/151c9c724d05d5b0dd8acd3e11cb69ef1f2dbada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e43d8eba6edd1cf05a3a20fdd77688fa7ec16a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44e62f5d35678686734afd47c6a421ad30772e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/899265c1389fe022802aae73dbf13ee08837a35a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91b243de910a9ac8476d40238ab3dbfeedd5b7de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93f0133b9d589cc6e865f254ad9be3e9d8133f50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1ae4d1e76eacddaacb958b67cd942082f800c87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3e27d2b446deb1f643758a0c4731f5c22492810","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35911","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.690","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix memory corruption bug with suspend and rebuild\n\nThe ice driver would previously panic after suspend. This is caused\nfrom the driver *only* calling the ice_vsi_free_q_vectors() function by\nitself, when it is suspending. Since commit b3e7b3a6ee92 (\"ice: prevent\nNULL pointer deref during reload\") the driver has zeroed out\nnum_q_vectors, and only restored it in ice_vsi_cfg_def().\n\nThis further causes the ice_rebuild() function to allocate a zero length\nbuffer, after which num_q_vectors is updated, and then the new value of\nnum_q_vectors is used to index into the zero length buffer, which\ncorrupts memory.\n\nThe fix entails making sure all the code referencing num_q_vectors only\ndoes so after it has been reset via ice_vsi_cfg_def().\n\nI didn't perform a full bisect, but I was able to test against 6.1.77\nkernel and that ice driver works fine for suspend\/resume with no panic,\nso sometime since then, this problem was introduced.\n\nAlso clean up an un-needed init of a local variable in the function\nbeing modified.\n\nPANIC from 6.8.0-rc1:\n\n[1026674.915596] PM: suspend exit\n[1026675.664697] ice 0000:17:00.1: PTP reset successful\n[1026675.664707] ice 0000:17:00.1: 2755 msecs passed between update to cached PHC time\n[1026675.667660] ice 0000:b1:00.0: PTP reset successful\n[1026675.675944] ice 0000:b1:00.0: 2832 msecs passed between update to cached PHC time\n[1026677.137733] ixgbe 0000:31:00.0 ens787: NIC Link is Up 1 Gbps, Flow Control: None\n[1026677.190201] BUG: kernel NULL pointer dereference, address: 0000000000000010\n[1026677.192753] ice 0000:17:00.0: PTP reset successful\n[1026677.192764] ice 0000:17:00.0: 4548 msecs passed between update to cached PHC time\n[1026677.197928] #PF: supervisor read access in kernel mode\n[1026677.197933] #PF: error_code(0x0000) - not-present page\n[1026677.197937] PGD 1557a7067 P4D 0\n[1026677.212133] ice 0000:b1:00.1: PTP reset successful\n[1026677.212143] ice 0000:b1:00.1: 4344 msecs passed between update to cached PHC time\n[1026677.212575]\n[1026677.243142] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[1026677.247918] CPU: 23 PID: 42790 Comm: kworker\/23:0 Kdump: loaded Tainted: G        W          6.8.0-rc1+ #1\n[1026677.257989] Hardware name: Intel Corporation M50CYP2SBSTD\/M50CYP2SBSTD, BIOS SE5C620.86B.01.01.0005.2202160810 02\/16\/2022\n[1026677.269367] Workqueue: ice ice_service_task [ice]\n[1026677.274592] RIP: 0010:ice_vsi_rebuild_set_coalesce+0x130\/0x1e0 [ice]\n[1026677.281421] Code: 0f 84 3a ff ff ff 41 0f b7 74 ec 02 66 89 b0 22 02 00 00 81 e6 ff 1f 00 00 e8 ec fd ff ff e9 35 ff ff ff 48 8b 43 30 49 63 ed <41> 0f b7 34 24 41 83 c5 01 48 8b 3c e8 66 89 b7 aa 02 00 00 81 e6\n[1026677.300877] RSP: 0018:ff3be62a6399bcc0 EFLAGS: 00010202\n[1026677.306556] RAX: ff28691e28980828 RBX: ff28691e41099828 RCX: 0000000000188000\n[1026677.314148] RDX: 0000000000000000 RSI: 0000000000000010 RDI: ff28691e41099828\n[1026677.321730] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\n[1026677.329311] R10: 0000000000000007 R11: ffffffffffffffc0 R12: 0000000000000010\n[1026677.336896] R13: 0000000000000000 R14: 0000000000000000 R15: ff28691e0eaa81a0\n[1026677.344472] FS:  0000000000000000(0000) GS:ff28693cbffc0000(0000) knlGS:0000000000000000\n[1026677.353000] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[1026677.359195] CR2: 0000000000000010 CR3: 0000000128df4001 CR4: 0000000000771ef0\n[1026677.366779] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[1026677.374369] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[1026677.381952] PKRU: 55555554\n[1026677.385116] Call Trace:\n[1026677.388023]  <TASK>\n[1026677.390589]  ? __die+0x20\/0x70\n[1026677.394105]  ? page_fault_oops+0x82\/0x160\n[1026677.398576]  ? do_user_addr_fault+0x65\/0x6a0\n[1026677.403307]  ? exc_page_fault+0x6a\/0x150\n[1026677.407694]  ? asm_exc_page_fault+0x22\/0x30\n[1026677.412349]  ? ice_vsi_rebuild_set_coalesce+0x130\/0x1e0 [ice]\n[1026677.4186\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11ff8392943e08a35cb0aa19d638b02db745f170","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1cb7fdb1dfde1aab66780b4ba44dba6402172111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e40a02f06ceb0e0b0183e0b973ac5dbf8f75edec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35912","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.770","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: rfi: fix potential response leaks\n\nIf the rx payload length check fails, or if kmemdup() fails,\nwe still need to free the command response. Fix that."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06a093807eb7b5c5b29b6cff49f8174a4e702341","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28db0ae86cb91a4ab0e855cff779daead936b7d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99a75d75007421d8e08ba139e24f77395cd08f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0a40f2f8eba07416f695ffe2011bf3f8b0b6dc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7f0e784894dfcb265f0f9fa499103b0ca7eabde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35913","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.837","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: mvm: pick the version of SESSION_PROTECTION_NOTIF\n\nWhen we want to know whether we should look for the mac_id or the\nlink_id in struct iwl_mvm_session_prot_notif, we should look at the\nversion of SESSION_PROTECTION_NOTIF.\n\nThis causes WARNINGs:\n\nWARNING: CPU: 0 PID: 11403 at drivers\/net\/wireless\/intel\/iwlwifi\/mvm\/time-event.c:959 iwl_mvm_rx_session_protect_notif+0x333\/0x340 [iwlmvm]\nRIP: 0010:iwl_mvm_rx_session_protect_notif+0x333\/0x340 [iwlmvm]\nCode: 00 49 c7 84 24 48 07 00 00 00 00 00 00 41 c6 84 24 78 07 00 00 ff 4c 89 f7 e8 e9 71 54 d9 e9 7d fd ff ff 0f 0b e9 23 fe ff ff <0f> 0b e9 1c fe ff ff 66 0f 1f 44 00 00 90 90 90 90 90 90 90 90 90\nRSP: 0018:ffffb4bb00003d40 EFLAGS: 00010202\nRAX: 0000000000000000 RBX: ffff9ae63a361000 RCX: ffff9ae4a98b60d4\nRDX: ffff9ae4588499c0 RSI: 0000000000000305 RDI: ffff9ae4a98b6358\nRBP: ffffb4bb00003d68 R08: 0000000000000003 R09: 0000000000000010\nR10: ffffb4bb00003d00 R11: 000000000000000f R12: ffff9ae441399050\nR13: ffff9ae4761329e8 R14: 0000000000000001 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff9ae7af400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055fb75680018 CR3: 00000003dae32006 CR4: 0000000000f70ef0\nPKRU: 55555554\nCall Trace:\n <IRQ>\n ? show_regs+0x69\/0x80\n ? __warn+0x8d\/0x150\n ? iwl_mvm_rx_session_protect_notif+0x333\/0x340 [iwlmvm]\n ? report_bug+0x196\/0x1c0\n ? handle_bug+0x45\/0x80\n ? exc_invalid_op+0x1c\/0xb0\n ? asm_exc_invalid_op+0x1f\/0x30\n ? iwl_mvm_rx_session_protect_notif+0x333\/0x340 [iwlmvm]\n iwl_mvm_rx_common+0x115\/0x340 [iwlmvm]\n iwl_mvm_rx_mq+0xa6\/0x100 [iwlmvm]\n iwl_pcie_rx_handle+0x263\/0xa10 [iwlwifi]\n iwl_pcie_napi_poll_msix+0x32\/0xd0 [iwlwifi]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/222abd95f503e28c0404e596291fe472fe90929c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbe806c294c9c4cd1221140d96e5f367673e393a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35914","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.910","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: Fix error cleanup path in nfsd_rename()\n\nCommit a8b0026847b8 (\"rename(): avoid a deadlock in the case of parents\nhaving no common ancestor\") added an error bail out path. However this\npath does not drop the remount protection that has been acquired. Fix\nthe cleanup path to properly drop the remount protection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/331e125e02c08ffaecc1074af78a988a278039bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fe6e9e7b58944037714442384075c17cfde1c56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35915","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:11.987","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: Fix uninit-value in nci_dev_up and nci_ntf_packet\n\nsyzbot reported the following uninit-value access issue [1][2]:\n\nnci_rx_work() parses and processes received packet. When the payload\nlength is zero, each message type handler reads uninitialized payload\nand KMSAN detects this issue. The receipt of a packet with a zero-size\npayload is considered unexpected, and therefore, such packets should be\nsilently discarded.\n\nThis patch resolved this issue by checking payload size before calling\neach message type handler codes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03fe259649a551d336a7f20919b641ea100e3fff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/11387b2effbb55f58dc2111ef4b4b896f2756240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/755e53bbc61bc1aff90eafa64c8c2464fd3dfa3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8948e30de81faee87eeee01ef42a1f6008f5a83a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a946ebee45b09294c8b0b0e77410b763c4d2817a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac68d9fa09e410fa3ed20fb721d56aa558695e16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b51ec7fc9f877ef869c01d3ea6f18f6a64e831a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d24b03535e5eb82e025219c2f632b485409c898f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35916","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:12.063","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf: Fix NULL pointer dereference in sanitycheck()\n\nIf due to a memory allocation failure mock_chain() returns NULL, it is\npassed to dma_fence_enable_sw_signaling() resulting in NULL pointer\ndereference there.\n\nCall dma_fence_enable_sw_signaling() only if mock_chain() succeeds.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0336995512cdab0c65e99e4cdd47c4606debe14e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/156c226cbbdcf5f3bce7b2408a33b59fab7fae2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2295bd846765c766701e666ed2e4b35396be25e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eabf131cba1db12005a68378305f13b9090a7a6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35917","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T09:15:12.150","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/bpf: Fix bpf_plt pointer arithmetic\n\nKui-Feng Lee reported a crash on s390x triggered by the\ndummy_st_ops\/dummy_init_ptr_arg test [1]:\n\n  [<0000000000000002>] 0x2\n  [<00000000009d5cde>] bpf_struct_ops_test_run+0x156\/0x250\n  [<000000000033145a>] __sys_bpf+0xa1a\/0xd00\n  [<00000000003319dc>] __s390x_sys_bpf+0x44\/0x50\n  [<0000000000c4382c>] __do_syscall+0x244\/0x300\n  [<0000000000c59a40>] system_call+0x70\/0x98\n\nThis is caused by GCC moving memcpy() after assignments in\nbpf_jit_plt(), resulting in NULL pointers being written instead of\nthe return and the target addresses.\n\nLooking at the GCC internals, the reordering is allowed because the\nalias analysis thinks that the memcpy() destination and the assignments'\nleft-hand-sides are based on different objects: new_plt and\nbpf_plt_ret\/bpf_plt_target respectively, and therefore they cannot\nalias.\n\nThis is in turn due to a violation of the C standard:\n\n  When two pointers are subtracted, both shall point to elements of the\n  same array object, or one past the last element of the array object\n  ...\n\nFrom the C's perspective, bpf_plt_ret and bpf_plt are distinct objects\nand cannot be subtracted. In the practical terms, doing so confuses the\nGCC's alias analysis.\n\nThe code was written this way in order to let the C side know a few\noffsets defined in the assembly. While nice, this is by no means\nnecessary. Fix the noncompliance by hardcoding these offsets.\n\n[1] https:\/\/lore.kernel.org\/bpf\/c9923c1d-971d-4022-8dc8-1364e929d34c@gmail.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7ded842b356d151ece8ac4985940438e6d3998bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3062bdb859b6e2567e7f5c8cde20c0250bb130f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3d74e45a060d218fe4b0c9174f0a77517509d8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52699","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:47.507","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsysv: don't call sb_bread() with pointers_lock held\n\nsyzbot is reporting sleep in atomic context in SysV filesystem [1], for\nsb_bread() is called with rw_spinlock held.\n\nA \"write_lock(&pointers_lock) => read_lock(&pointers_lock) deadlock\" bug\nand a \"sb_bread() with write_lock(&pointers_lock)\" bug were introduced by\n\"Replace BKL for chain locking with sysvfs-private rwlock\" in Linux 2.5.12.\n\nThen, \"[PATCH] err1-40: sysvfs locking fix\" in Linux 2.6.8 fixed the\nformer bug by moving pointers_lock lock to the callers, but instead\nintroduced a \"sb_bread() with read_lock(&pointers_lock)\" bug (which made\nthis problem easier to hit).\n\nAl Viro suggested that why not to do like get_branch()\/get_block()\/\nfind_shared() in Minix filesystem does. And doing like that is almost a\nrevert of \"[PATCH] err1-40: sysvfs locking fix\" except that get_branch()\n from with find_shared() is called without write_lock(&pointers_lock)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13b33feb2ebddc2b1aa607f553566b18a4af1d76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b4fe801b5bedec2b622ddb18e5c9bf26c63d79f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53cb1e52c9db618c08335984d1ca80db220ccf09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/674c1c4229e743070e09db63a23442950ff000d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89e8524135a3902e7563a5a59b7b5ec1bf4904ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a69224223746ab96d43e5db9d22d136827b7e2d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f123dc86388cb669c3d6322702dc441abc35c31e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd203d2c671bdee9ab77090ff394d3b71b627927","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35918","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.223","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrandomize_kstack: Improve entropy diffusion\n\nThe kstack_offset variable was really only ever using the low bits for\nkernel stack offset entropy. Add a ror32() to increase bit diffusion."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/300a2b9c2b28282974ee300bb5d5025cbbb1f64c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6be74b1e21f8de4c48af772c2f658b464bfe6145","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c573cd313433f6c1f7236fe64b9b743500c1628","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfb2ce952143de60dd756ed666901236c76cb3fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e80b4980af2688d8ff69c157ffa773dd1f1eb02c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35919","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.303","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: adding lock to protect encoder context list\n\nAdd a lock for the ctx_list, to avoid accessing a NULL pointer\nwithin the 'vpu_enc_ipi_handler' function when the ctx_list has\nbeen deleted due to an unexpected behavior on the SCP IP block."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41671f0c0182b2bae74ca7e3b0f155559e3e2fc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51c84a8aac6e3b59af2b0e92ba63cabe2e641a2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afaaf3a0f647a24a7bf6a2145d8ade37baaf75ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35920","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.373","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: adding lock to protect decoder context list\n\nAdd a lock for the ctx_list, to avoid accessing a NULL pointer\nwithin the 'vpu_dec_ipi_handler' function when the ctx_list has\nbeen deleted due to an unexpected behavior on the SCP IP block.\n\nHardware name: Google juniper sku16 board (DT)\npstate: 20400005 (nzCv daif +PAN -UAO -TCO BTYPE=--)\npc : vpu_dec_ipi_handler+0x58\/0x1f8 [mtk_vcodec_dec]\nlr : scp_ipi_handler+0xd0\/0x194 [mtk_scp]\nsp : ffffffc0131dbbd0\nx29: ffffffc0131dbbd0 x28: 0000000000000000\nx27: ffffff9bb277f348 x26: ffffff9bb242ad00\nx25: ffffffd2d440d3b8 x24: ffffffd2a13ff1d4\nx23: ffffff9bb7fe85a0 x22: ffffffc0133fbdb0\nx21: 0000000000000010 x20: ffffff9b050ea328\nx19: ffffffc0131dbc08 x18: 0000000000001000\nx17: 0000000000000000 x16: ffffffd2d461c6e0\nx15: 0000000000000242 x14: 000000000000018f\nx13: 000000000000004d x12: 0000000000000000\nx11: 0000000000000001 x10: fffffffffffffff0\nx9 : ffffff9bb6e793a8 x8 : 0000000000000000\nx7 : 0000000000000000 x6 : 000000000000003f\nx5 : 0000000000000040 x4 : fffffffffffffff0\nx3 : 0000000000000020 x2 : ffffff9bb6e79080\nx1 : 0000000000000010 x0 : ffffffc0131dbc08\nCall trace:\nvpu_dec_ipi_handler+0x58\/0x1f8 [mtk_vcodec_dec (HASH:6c3f 2)]\nscp_ipi_handler+0xd0\/0x194 [mtk_scp (HASH:7046 3)]\nmt8183_scp_irq_handler+0x44\/0x88 [mtk_scp (HASH:7046 3)]\nscp_irq_handler+0x48\/0x90 [mtk_scp (HASH:7046 3)]\nirq_thread_fn+0x38\/0x94\nirq_thread+0x100\/0x1c0\nkthread+0x140\/0x1fc\nret_from_fork+0x10\/0x30\nCode: 54000088 f94ca50a eb14015f 54000060 (f9400108)\n---[ end trace ace43ce36cbd5c93 ]---\nKernel panic - not syncing: Oops: Fatal exception\nSMP: stopping secondary CPUs\nKernel Offset: 0x12c4000000 from 0xffffffc010000000\nPHYS_OFFSET: 0xffffffe580000000\nCPU features: 0x08240002,2188200c\nMemory Limit: none"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a2dc707aa42214f9c4827bd57e344e29a0841d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23aaf824121055ba81b55f75444355bd83c8eb38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6467cda18c9f9b5f2f9a0aa1e2861c653e41f382","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35921","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.443","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix oops when HEVC init fails\n\nThe stateless HEVC decoder saves the instance pointer in the context\nregardless if the initialization worked or not. This caused a use after\nfree, when the pointer is freed in case of a failure in the deinit\nfunction.\nOnly store the instance pointer when the initialization was successful,\nto solve this issue.\n\n Hardware name: Acer Tomato (rev3 - 4) board (DT)\n pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : vcodec_vpu_send_msg+0x4c\/0x190 [mtk_vcodec_dec]\n lr : vcodec_send_ap_ipi+0x78\/0x170 [mtk_vcodec_dec]\n sp : ffff80008750bc20\n x29: ffff80008750bc20 x28: ffff1299f6d70000 x27: 0000000000000000\n x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n x23: ffff80008750bc98 x22: 000000000000a003 x21: ffffd45c4cfae000\n x20: 0000000000000010 x19: ffff1299fd668310 x18: 000000000000001a\n x17: 000000040044ffff x16: ffffd45cb15dc648 x15: 0000000000000000\n x14: ffff1299c08da1c0 x13: ffffd45cb1f87a10 x12: ffffd45cb2f5fe80\n x11: 0000000000000001 x10: 0000000000001b30 x9 : ffffd45c4d12b488\n x8 : 1fffe25339380d81 x7 : 0000000000000001 x6 : ffff1299c9c06c00\n x5 : 0000000000000132 x4 : 0000000000000000 x3 : 0000000000000000\n x2 : 0000000000000010 x1 : ffff80008750bc98 x0 : 0000000000000000\n Call trace:\n  vcodec_vpu_send_msg+0x4c\/0x190 [mtk_vcodec_dec]\n  vcodec_send_ap_ipi+0x78\/0x170 [mtk_vcodec_dec]\n  vpu_dec_deinit+0x1c\/0x30 [mtk_vcodec_dec]\n  vdec_hevc_slice_deinit+0x30\/0x98 [mtk_vcodec_dec]\n  vdec_if_deinit+0x38\/0x68 [mtk_vcodec_dec]\n  mtk_vcodec_dec_release+0x20\/0x40 [mtk_vcodec_dec]\n  fops_vcodec_release+0x64\/0x118 [mtk_vcodec_dec]\n  v4l2_release+0x7c\/0x100\n  __fput+0x80\/0x2d8\n  __fput_sync+0x58\/0x70\n  __arm64_sys_close+0x40\/0x90\n  invoke_syscall+0x50\/0x128\n  el0_svc_common.constprop.0+0x48\/0xf0\n  do_el0_svc+0x24\/0x38\n  el0_svc+0x38\/0xd8\n  el0t_64_sync_handler+0xc0\/0xc8\n  el0t_64_sync+0x1a8\/0x1b0\n Code: d503201f f9401660 b900127f b900227f (f9400400)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/521ce0ea7418298d754494fe53263c23c4c78a8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97c75ee5de060d271d80109b0c47cb6008439e5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec25fc3c2c1e8958a51abcfed614f81446d918c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35922","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.513","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbmon: prevent division by zero in fb_videomode_from_videomode()\n\nThe expression htotal * vtotal can have a zero value on\noverflow. It is necessary to prevent division by zero like in\nfb_var_to_videomode().\n\nFound by Linux Verification Center (linuxtesting.org) with Svace."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b107d637fed68a787da77a3514ad06e57abd0b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1fb52bc1de55e9e0bdf71fe078efd4da0889710f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d4b909704bf2114f64f87363fa22b5ef8ac4a33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48d6bcfc31751ca2e753d901a2d82f27edf8a029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/664206ff8b019bcd1e55b10b2eea3add8761b971","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72d091b7515e0532ee015e144c906f3bcfdd6270","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/951838fee462aa01fa2a6a91d56f9a495082e7f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2d953276b8b27459baed1277a4fdd5dd9bd4126","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35923","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.587","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: clear opcode specific data for an early failure\n\nIf failure happens before the opcode prep handler is called, ensure that\nwe clear the opcode specific area of the request, which holds data\nspecific to that request type. This prevents errors where opcode\nhandlers either don't get to clear per-request private data since prep\nisn't even called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21162ad2de7446438cbd6224b3794a375bcb24df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5245a6da27ef79f8dba98dad5542ebe56d311837","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb1cd176e0b431644653a7fa8691a1aaf7be98da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e21e1c45e1fe2e31732f40256b49c04e76a17cee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35924","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.653","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: Limit read size on v1.2\n\nBetween UCSI 1.2 and UCSI 2.0, the size of the MESSAGE_IN region was\nincreased from 16 to 256. In order to avoid overflowing reads for older\nsystems, add a mechanism to use the read UCSI version to truncate read\nsizes on UCSI v1.2."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0defcaa09d3b21e8387829ee3a652c43fa91e13f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/266f403ec47573046dee4bcebda82777ce702c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3db266fb031fba88c423d4bb8983a73a3db6527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35925","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.720","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: prevent division by zero in blk_rq_stat_sum()\n\nThe expression dst->nr_samples + src->nr_samples may\nhave zero value on overflow. It is necessary to add\na check to avoid division by zero.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21e7d72d0cfcbae6042d498ea2e6f395311767f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/512a01da7134bac8f8b373506011e8aaa3283854","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f7fd6aa4c4877d77133ea86c14cf256f390b2fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a55dab4ac956deb23690eedd74e70b892a378e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93f52fbeaf4b676b21acfe42a5152620e6770d02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98ddf2604ade2d954bf5ec193600d5274a43fd68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0cb5564c3e8e0ee0a2d28c86fa7f02e82d64c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edd073c78d2bf48c5b8bf435bbc3d61d6e7c6c14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35926","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.793","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: iaa - Fix async_disable descriptor leak\n\nThe disable_async paths of iaa_compress\/decompress() don't free idxd\ndescriptors in the async_disable case. Currently this only happens in\nthe testcases where req->dst is set to null. Add a test to free them\nin those paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/262534ddc88dfea7474ed18adfecf856e4fbe054","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d994f7d77aaded05dc05af58a2720fd4f4b72a83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35927","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.860","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Check output polling initialized before disabling\n\nIn drm_kms_helper_poll_disable() check if output polling\nsupport is initialized before disabling polling. If not flag\nthis as a warning.\nAdditionally in drm_mode_config_helper_suspend() and\ndrm_mode_config_helper_resume() calls, that re the callers of these\nfunctions, avoid invoking them if polling is not initialized.\nFor drivers like hyperv-drm, that do not initialize connector\npolling, if suspend is called without this check, it leads to\nsuspend failure with following stack\n[  770.719392] Freezing remaining freezable tasks ... (elapsed 0.001 seconds) done.\n[  770.720592] printk: Suspending console(s) (use no_console_suspend to debug)\n[  770.948823] ------------[ cut here ]------------\n[  770.948824] WARNING: CPU: 1 PID: 17197 at kernel\/workqueue.c:3162 __flush_work.isra.0+0x212\/0x230\n[  770.948831] Modules linked in: rfkill nft_counter xt_conntrack xt_owner udf nft_compat crc_itu_t nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables nfnetlink vfat fat mlx5_ib ib_uverbs ib_core mlx5_core intel_rapl_msr intel_rapl_common kvm_amd ccp mlxfw kvm psample hyperv_drm tls drm_shmem_helper drm_kms_helper irqbypass pcspkr syscopyarea sysfillrect sysimgblt hv_balloon hv_utils joydev drm fuse xfs libcrc32c pci_hyperv pci_hyperv_intf sr_mod sd_mod cdrom t10_pi sg hv_storvsc scsi_transport_fc hv_netvsc serio_raw hyperv_keyboard hid_hyperv crct10dif_pclmul crc32_pclmul crc32c_intel hv_vmbus ghash_clmulni_intel dm_mirror dm_region_hash dm_log dm_mod\n[  770.948863] CPU: 1 PID: 17197 Comm: systemd-sleep Not tainted 5.14.0-362.2.1.el9_3.x86_64 #1\n[  770.948865] Hardware name: Microsoft Corporation Virtual Machine\/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 05\/09\/2022\n[  770.948866] RIP: 0010:__flush_work.isra.0+0x212\/0x230\n[  770.948869] Code: 8b 4d 00 4c 8b 45 08 89 ca 48 c1 e9 04 83 e2 08 83 e1 0f 83 ca 02 89 c8 48 0f ba 6d 00 03 e9 25 ff ff ff 0f 0b e9 4e ff ff ff <0f> 0b 45 31 ed e9 44 ff ff ff e8 8f 89 b2 00 66 66 2e 0f 1f 84 00\n[  770.948870] RSP: 0018:ffffaf4ac213fb10 EFLAGS: 00010246\n[  770.948871] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff8c992857\n[  770.948872] RDX: 0000000000000001 RSI: 0000000000000001 RDI: ffff9aad82b00330\n[  770.948873] RBP: ffff9aad82b00330 R08: 0000000000000000 R09: ffff9aad87ee3d10\n[  770.948874] R10: 0000000000000200 R11: 0000000000000000 R12: ffff9aad82b00330\n[  770.948874] R13: 0000000000000001 R14: 0000000000000000 R15: 0000000000000001\n[  770.948875] FS:  00007ff1b2f6bb40(0000) GS:ffff9aaf37d00000(0000) knlGS:0000000000000000\n[  770.948878] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  770.948878] CR2: 0000555f345cb666 CR3: 00000001462dc005 CR4: 0000000000370ee0\n[  770.948879] Call Trace:\n[  770.948880]  <TASK>\n[  770.948881]  ? show_trace_log_lvl+0x1c4\/0x2df\n[  770.948884]  ? show_trace_log_lvl+0x1c4\/0x2df\n[  770.948886]  ? __cancel_work_timer+0x103\/0x190\n[  770.948887]  ? __flush_work.isra.0+0x212\/0x230\n[  770.948889]  ? __warn+0x81\/0x110\n[  770.948891]  ? __flush_work.isra.0+0x212\/0x230\n[  770.948892]  ? report_bug+0x10a\/0x140\n[  770.948895]  ? handle_bug+0x3c\/0x70\n[  770.948898]  ? exc_invalid_op+0x14\/0x70\n[  770.948899]  ? asm_exc_invalid_op+0x16\/0x20\n[  770.948903]  ? __flush_work.isra.0+0x212\/0x230\n[  770.948905]  __cancel_work_timer+0x103\/0x190\n[  770.948907]  ? _raw_spin_unlock_irqrestore+0xa\/0x30\n[  770.948910]  drm_kms_helper_poll_disable+0x1e\/0x40 [drm_kms_helper]\n[  770.948923]  drm_mode_config_helper_suspend+0x1c\/0x80 [drm_kms_helper]\n[  770.948933]  ? __pfx_vmbus_suspend+0x10\/0x10 [hv_vmbus]\n[  770.948942]  hyperv_vmbus_suspend+0x17\/0x40 [hyperv_drm]\n[  770.948944]  ? __pfx_vmbus_suspend+0x10\/0x10 [hv_vmbus]\n[  770.948951]  dpm_run_callback+0x4c\/0x140\n[  770.948954]  __device_suspend_noir\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18451798f4a4e7418b9fad7e7dd313fe84b1f545","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d1b47e3a935abd4f258a945db87e7267ff4079c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5abffb66d12bcac84bf7b66389c571b8bb6e82bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35928","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.930","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/amdgpu: Fix potential ioremap() memory leaks in amdgpu_device_init()\n\nThis ensures that the memory mapped by ioremap for adev->rmmio, is\nproperly handled in amdgpu_device_init(). If the function exits early\ndue to an error, the memory is unmapped. If the function completes\nsuccessfully, the memory remains mapped.\n\nReported by smatch:\ndrivers\/gpu\/drm\/amd\/amdgpu\/amdgpu_device.c:4337 amdgpu_device_init() warn: 'adev->rmmio' from ioremap() not released on lines: 4035,4045,4051,4058,4068,4337"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14ac934db851642ea8cd1bd4121c788a8899ef69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa665c3a2aca2ffe31b9645bda278e96dfc3b55c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5f9fe2c1e5023fa096189a8bfba6420aa035587","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb4f139888f636614dab3bcce97ff61cefc4b3a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35929","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:48.993","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu\/nocb: Fix WARN_ON_ONCE() in the rcu_nocb_bypass_lock()\n\nFor the kernels built with CONFIG_RCU_NOCB_CPU_DEFAULT_ALL=y and\nCONFIG_RCU_LAZY=y, the following scenarios will trigger WARN_ON_ONCE()\nin the rcu_nocb_bypass_lock() and rcu_nocb_wait_contended() functions:\n\n        CPU2                                               CPU11\nkthread\nrcu_nocb_cb_kthread                                       ksys_write\nrcu_do_batch                                              vfs_write\nrcu_torture_timer_cb                                      proc_sys_write\n__kmem_cache_free                                         proc_sys_call_handler\nkmemleak_free                                             drop_caches_sysctl_handler\ndelete_object_full                                        drop_slab\n__delete_object                                           shrink_slab\nput_object                                                lazy_rcu_shrink_scan\ncall_rcu                                                  rcu_nocb_flush_bypass\n__call_rcu_commn                                            rcu_nocb_bypass_lock\n                                                            raw_spin_trylock(&rdp->nocb_bypass_lock) fail\n                                                            atomic_inc(&rdp->nocb_lock_contended);\nrcu_nocb_wait_contended                                     WARN_ON_ONCE(smp_processor_id() != rdp->cpu);\n WARN_ON_ONCE(atomic_read(&rdp->nocb_lock_contended))                                          |\n                            |_ _ _ _ _ _ _ _ _ _same rdp and rdp->cpu != 11_ _ _ _ _ _ _ _ _ __|\n\nReproduce this bug with \"echo 3 > \/proc\/sys\/vm\/drop_caches\".\n\nThis commit therefore uses rcu_nocb_try_flush_bypass() instead of\nrcu_nocb_flush_bypass() in lazy_rcu_shrink_scan().  If the nocb_bypass\nqueue is being flushed, then rcu_nocb_try_flush_bypass will return\ndirectly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d58c9fb45c70e62c19e8be3f3605889c47601bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927d1f4f77e4784ab3944a9df86ab14d1cd3185a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dda98810b552fc6bf650f4270edeebdc2f28bd3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35930","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.057","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix possible memory leak in lpfc_rcv_padisc()\n\nThe call to lpfc_sli4_resume_rpi() in lpfc_rcv_padisc() may return an\nunsuccessful status.  In such cases, the elsiocb is not issued, the\ncompletion is not called, and thus the elsiocb resource is leaked.\n\nCheck return value after calling lpfc_sli4_resume_rpi() and conditionally\nrelease the elsiocb resource."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07a2aa674fca679316b8ac51440adb895b53a7cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ae917d4bcab80ab304b774d492e2fcd6c52c06b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3320126ed3afbc11934502319b340f91a4d61c8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7849e6f8410da96384e3d1f6b6d730f095142dc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c473288f27d15014447de5a891bdf22a0695847a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2cd32435b1dff3d63759476a3abc878e02fb6c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edf82aa7e9eb864a09229392054d131b34a5c9e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee0b5f96b6d66a1e6698228dcb41df11ec7f352f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35931","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.133","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Skip do PCI error slot reset during RAS recovery\n\nWhy:\n    The PCI error slot reset maybe triggered after inject ue to UMC multi times, this\n    caused system hang.\n    [  557.371857] amdgpu 0000:af:00.0: amdgpu: GPU reset succeeded, trying to resume\n    [  557.373718] [drm] PCIE GART of 512M enabled.\n    [  557.373722] [drm] PTB located at 0x0000031FED700000\n    [  557.373788] [drm] VRAM is lost due to GPU reset!\n    [  557.373789] [drm] PSP is resuming...\n    [  557.547012] mlx5_core 0000:55:00.0: mlx5_pci_err_detected Device state = 1 pci_status: 0. Exit, result = 3, need reset\n    [  557.547067] [drm] PCI error: detected callback, state(1)!!\n    [  557.547069] [drm] No support for XGMI hive yet...\n    [  557.548125] mlx5_core 0000:55:00.0: mlx5_pci_slot_reset Device state = 1 pci_status: 0. Enter\n    [  557.607763] mlx5_core 0000:55:00.0: wait vital counter value 0x16b5b after 1 iterations\n    [  557.607777] mlx5_core 0000:55:00.0: mlx5_pci_slot_reset Device state = 1 pci_status: 1. Exit, err = 0, result = 5, recovered\n    [  557.610492] [drm] PCI error: slot reset callback!!\n    ...\n    [  560.689382] amdgpu 0000:3f:00.0: amdgpu: GPU reset(2) succeeded!\n    [  560.689546] amdgpu 0000:5a:00.0: amdgpu: GPU reset(2) succeeded!\n    [  560.689562] general protection fault, probably for non-canonical address 0x5f080b54534f611f: 0000 [#1] SMP NOPTI\n    [  560.701008] CPU: 16 PID: 2361 Comm: kworker\/u448:9 Tainted: G           OE     5.15.0-91-generic #101-Ubuntu\n    [  560.712057] Hardware name: Microsoft C278A\/C278A, BIOS C2789.5.BS.1C11.AG.1 11\/08\/2023\n    [  560.720959] Workqueue: amdgpu-reset-hive amdgpu_ras_do_recovery [amdgpu]\n    [  560.728887] RIP: 0010:amdgpu_device_gpu_recover.cold+0xbf1\/0xcf5 [amdgpu]\n    [  560.736891] Code: ff 41 89 c6 e9 1b ff ff ff 44 0f b6 45 b0 e9 4f ff ff ff be 01 00 00 00 4c 89 e7 e8 76 c9 8b ff 44 0f b6 45 b0 e9 3c fd ff ff <48> 83 ba 18 02 00 00 00 0f 84 6a f8 ff ff 48 8d 7a 78 be 01 00 00\n    [  560.757967] RSP: 0018:ffa0000032e53d80 EFLAGS: 00010202\n    [  560.763848] RAX: ffa00000001dfd10 RBX: ffa0000000197090 RCX: ffa0000032e53db0\n    [  560.771856] RDX: 5f080b54534f5f07 RSI: 0000000000000000 RDI: ff11000128100010\n    [  560.779867] RBP: ffa0000032e53df0 R08: 0000000000000000 R09: ffffffffffe77f08\n    [  560.787879] R10: 0000000000ffff0a R11: 0000000000000001 R12: 0000000000000000\n    [  560.795889] R13: ffa0000032e53e00 R14: 0000000000000000 R15: 0000000000000000\n    [  560.803889] FS:  0000000000000000(0000) GS:ff11007e7e800000(0000) knlGS:0000000000000000\n    [  560.812973] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    [  560.819422] CR2: 000055a04c118e68 CR3: 0000000007410005 CR4: 0000000000771ee0\n    [  560.827433] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    [  560.835433] DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\n    [  560.843444] PKRU: 55555554\n    [  560.846480] Call Trace:\n    [  560.849225]  <TASK>\n    [  560.851580]  ? show_trace_log_lvl+0x1d6\/0x2ea\n    [  560.856488]  ? show_trace_log_lvl+0x1d6\/0x2ea\n    [  560.861379]  ? amdgpu_ras_do_recovery+0x1b2\/0x210 [amdgpu]\n    [  560.867778]  ? show_regs.part.0+0x23\/0x29\n    [  560.872293]  ? __die_body.cold+0x8\/0xd\n    [  560.876502]  ? die_addr+0x3e\/0x60\n    [  560.880238]  ? exc_general_protection+0x1c5\/0x410\n    [  560.885532]  ? asm_exc_general_protection+0x27\/0x30\n    [  560.891025]  ? amdgpu_device_gpu_recover.cold+0xbf1\/0xcf5 [amdgpu]\n    [  560.898323]  amdgpu_ras_do_recovery+0x1b2\/0x210 [amdgpu]\n    [  560.904520]  process_one_work+0x228\/0x3d0\nHow:\n    In RAS recovery, mode-1 reset is issued from RAS fatal error handling and expected\n    all the nodes in a hive to be reset. no need to issue another mode-1 during this procedure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/395ca1031acf89d8ecb26127c544a71688d96f35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/601429cca96b4af3be44172c3b64e4228515dbe1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35932","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.203","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/vc4: don't check if plane->state->fb == state->fb\n\nCurrently, when using non-blocking commits, we can see the following\nkernel warning:\n\n[  110.908514] ------------[ cut here ]------------\n[  110.908529] refcount_t: underflow; use-after-free.\n[  110.908620] WARNING: CPU: 0 PID: 1866 at lib\/refcount.c:87 refcount_dec_not_one+0xb8\/0xc0\n[  110.908664] Modules linked in: rfcomm snd_seq_dummy snd_hrtimer snd_seq snd_seq_device cmac algif_hash aes_arm64 aes_generic algif_skcipher af_alg bnep hid_logitech_hidpp vc4 brcmfmac hci_uart btbcm brcmutil bluetooth snd_soc_hdmi_codec cfg80211 cec drm_display_helper drm_dma_helper drm_kms_helper snd_soc_core snd_compress snd_pcm_dmaengine fb_sys_fops sysimgblt syscopyarea sysfillrect raspberrypi_hwmon ecdh_generic ecc rfkill libaes i2c_bcm2835 binfmt_misc joydev snd_bcm2835(C) bcm2835_codec(C) bcm2835_isp(C) v4l2_mem2mem videobuf2_dma_contig snd_pcm bcm2835_v4l2(C) raspberrypi_gpiomem bcm2835_mmal_vchiq(C) videobuf2_v4l2 snd_timer videobuf2_vmalloc videobuf2_memops videobuf2_common snd videodev vc_sm_cma(C) mc hid_logitech_dj uio_pdrv_genirq uio i2c_dev drm fuse dm_mod drm_panel_orientation_quirks backlight ip_tables x_tables ipv6\n[  110.909086] CPU: 0 PID: 1866 Comm: kodi.bin Tainted: G         C         6.1.66-v8+ #32\n[  110.909104] Hardware name: Raspberry Pi 3 Model B Rev 1.2 (DT)\n[  110.909114] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  110.909132] pc : refcount_dec_not_one+0xb8\/0xc0\n[  110.909152] lr : refcount_dec_not_one+0xb4\/0xc0\n[  110.909170] sp : ffffffc00913b9c0\n[  110.909177] x29: ffffffc00913b9c0 x28: 000000556969bbb0 x27: 000000556990df60\n[  110.909205] x26: 0000000000000002 x25: 0000000000000004 x24: ffffff8004448480\n[  110.909230] x23: ffffff800570b500 x22: ffffff802e03a7bc x21: ffffffecfca68c78\n[  110.909257] x20: ffffff8002b42000 x19: ffffff802e03a600 x18: 0000000000000000\n[  110.909283] x17: 0000000000000011 x16: ffffffffffffffff x15: 0000000000000004\n[  110.909308] x14: 0000000000000fff x13: ffffffed577e47e0 x12: 0000000000000003\n[  110.909333] x11: 0000000000000000 x10: 0000000000000027 x9 : c912d0d083728c00\n[  110.909359] x8 : c912d0d083728c00 x7 : 65646e75203a745f x6 : 746e756f63666572\n[  110.909384] x5 : ffffffed579f62ee x4 : ffffffed579eb01e x3 : 0000000000000000\n[  110.909409] x2 : 0000000000000000 x1 : ffffffc00913b750 x0 : 0000000000000001\n[  110.909434] Call trace:\n[  110.909441]  refcount_dec_not_one+0xb8\/0xc0\n[  110.909461]  vc4_bo_dec_usecnt+0x4c\/0x1b0 [vc4]\n[  110.909903]  vc4_cleanup_fb+0x44\/0x50 [vc4]\n[  110.910315]  drm_atomic_helper_cleanup_planes+0x88\/0xa4 [drm_kms_helper]\n[  110.910669]  vc4_atomic_commit_tail+0x390\/0x9dc [vc4]\n[  110.911079]  commit_tail+0xb0\/0x164 [drm_kms_helper]\n[  110.911397]  drm_atomic_helper_commit+0x1d0\/0x1f0 [drm_kms_helper]\n[  110.911716]  drm_atomic_commit+0xb0\/0xdc [drm]\n[  110.912569]  drm_mode_atomic_ioctl+0x348\/0x4b8 [drm]\n[  110.913330]  drm_ioctl_kernel+0xec\/0x15c [drm]\n[  110.914091]  drm_ioctl+0x24c\/0x3b0 [drm]\n[  110.914850]  __arm64_sys_ioctl+0x9c\/0xd4\n[  110.914873]  invoke_syscall+0x4c\/0x114\n[  110.914897]  el0_svc_common+0xd0\/0x118\n[  110.914917]  do_el0_svc+0x38\/0xd0\n[  110.914936]  el0_svc+0x30\/0x8c\n[  110.914958]  el0t_64_sync_handler+0x84\/0xf0\n[  110.914979]  el0t_64_sync+0x18c\/0x190\n[  110.914996] ---[ end trace 0000000000000000 ]---\n\nThis happens because, although `prepare_fb` and `cleanup_fb` are\nperfectly balanced, we cannot guarantee consistency in the check\nplane->state->fb == state->fb. This means that sometimes we can increase\nthe refcount in `prepare_fb` and don't decrease it in `cleanup_fb`. The\nopposite can also be true.\n\nIn fact, the struct drm_plane .state shouldn't be accessed directly\nbut instead, the `drm_atomic_get_new_plane_state()` helper function should\nbe used. So, we could stick to this check, but using\n`drm_atomic_get_new_plane_state()`. But actually, this check is not re\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/48bfb4b03c5ff6e1fa1dc73fb915e150b0968c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5343f724c912c77541029123f47ecd3d2ea63bdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee0d47dcf33efd8950b347dcf4d20bab12a3fa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6b2fe2db1d0927b2d7df5c763eba55d0e1def3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35933","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.270","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btintel: Fix null ptr deref in btintel_read_version\n\nIf hci_cmd_sync_complete() is triggered and skb is NULL, then\nhdev->req_skb is NULL, which will cause this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/006936ecb4edfc3102464044f75858c714e34d28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22d3053ef05f0b5045e45bd91e7473846261d65e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a69bb2ecafaacdb998a87783068fb51736f43b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86e9b47e8a75c74b1bd83a479979b425c5dc8bd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b19fe5eea619d54eea59bb8a37c0f8d00ef0e912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b79e040910101b020931ba0c9a6b77e81ab7f645","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec2049fb2b8be3e108fe2ef1f1040f91e72c9990","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffdca0a62abaf8c41d8d9ea132000fd808de329b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35934","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.343","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: reduce rtnl pressure in smc_pnet_create_pnetids_list()\n\nMany syzbot reports show extreme rtnl pressure, and many of them hint\nthat smc acquires rtnl in netns creation for no good reason [1]\n\nThis patch returns early from smc_pnet_net_init()\nif there is no netdevice yet.\n\nI am not even sure why smc_pnet_create_pnetids_list() even exists,\nbecause smc_pnet_netdev_event() is also calling\nsmc_pnet_add_base_pnetid() when handling NETDEV_UP event.\n\n[1] extract of typical syzbot reports\n\n2 locks held by syz-executor.3\/12252:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.4\/12253:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.1\/12257:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.2\/12261:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.0\/12265:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.3\/12268:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.4\/12271:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.1\/12274:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878\n2 locks held by syz-executor.2\/12280:\n  #0: ffffffff8f369610 (pernet_ops_rwsem){++++}-{3:3}, at: copy_net_ns+0x4c7\/0x7b0 net\/core\/net_namespace.c:491\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_create_pnetids_list net\/smc\/smc_pnet.c:809 [inline]\n  #1: ffffffff8f375b88 (rtnl_mutex){+.+.}-{3:3}, at: smc_pnet_net_init+0x10a\/0x1e0 net\/smc\/smc_pnet.c:878"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00af2aa93b76b1bade471ad0d0525d4d29ca5cc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e920422e7104928f760fc0e12b6d65ab097a2e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2e6bffc0388526ed10406040279a693d62b36ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9117dc783c0ab0a3866812f70e07bf2ea071ac4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc4d1ebca11b4f194e262326bd45938e857c59d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7ee3bf0caf599c14db0bf4af7aacd6206ef8a23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35935","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.413","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: send: handle path ref underflow in header iterate_inode_ref()\n\nChange BUG_ON to proper error handling if building the path buffer\nfails. The pointers are not printed so we don't accidentally leak kernel\naddresses."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/024529c27c8b4b273325a169e078337c8279e229","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/03938619a1e718b6168ae4528e1b0f979293f1a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f6174fd4ccf403b42b3d5f0d1b6b496a0e5330a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c6ee34c6f9cd12802326da26631232a61743501","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4720d590c4cb5d9ffa0060b89743651cc7e995f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ae356c627b493323e1433dcb27a26917668c07c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be2b6bcc936ae17f42fff6494106a5660b35d8d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1363ed8867b81ea169fba2ccc14af96a85ed183","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35936","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.480","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle chunk tree lookup error in btrfs_relocate_sys_chunks()\n\nThe unhandled case in btrfs_relocate_sys_chunks() loop is a corruption,\nas it could be caused only by two impossible conditions:\n\n- at first the search key is set up to look for a chunk tree item, with\n  offset -1, this is an inexact search and the key->offset will contain\n  the correct offset upon a successful search, a valid chunk tree item\n  cannot have an offset -1\n\n- after first successful search, the found_key corresponds to a chunk\n  item, the offset is decremented by 1 before the next loop, it's\n  impossible to find a chunk item there due to alignment and size\n  constraints"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d23b34c68c46cd225b55868bc8a269e3134816d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f9212cdbd005bc55f2b7422e7b560d9c02bd1da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36c2a2863bc3896243eb724dc3fd4cf9aea633f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/576164bd01bd795f8b09fb194b493103506b33c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7411055db5ce64f836aaffd422396af0075fdc99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87299cdaae757f3f41212146cfb5b3af416b8385","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bebd9e0ff90034875c5dfe4bd514fd7055fc7a89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1ffa4ae2d591fdd40471074e79954ec45f147f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35937","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.553","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: check A-MSDU format more carefully\n\nIf it looks like there's another subframe in the A-MSDU\nbut the header isn't fully there, we can end up reading\ndata out of bounds, only to discard later. Make this a\nbit more careful and check if the subframe header can\neven be present."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16da1e1dac23be45ef6e23c41b1508c400e6c544","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d7a8585fbb31e88fb2a0f581b70667d3300d1e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ad7974856926129f190ffbe3beea78460b3b7cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35938","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.620","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: decrease MHI channel buffer length to 8KB\n\nCurrently buf_len field of ath11k_mhi_config_qca6390 is assigned\nwith 0, making MHI use a default size, 64KB, to allocate channel\nbuffers. This is likely to fail in some scenarios where system\nmemory is highly fragmented and memory compaction or reclaim is\nnot allowed.\n\nThere is a fail report which is caused by it:\nkworker\/u32:45: page allocation failure: order:4, mode:0x40c00(GFP_NOIO|__GFP_COMP), nodemask=(null),cpuset=\/,mems_allowed=0\nCPU: 0 PID: 19318 Comm: kworker\/u32:45 Not tainted 6.8.0-rc3-1.gae4495f-default #1 openSUSE Tumbleweed (unreleased) 493b6d5b382c603654d7a81fc3c144d59a1dfceb\nWorkqueue: events_unbound async_run_entry_fn\nCall Trace:\n <TASK>\n dump_stack_lvl+0x47\/0x60\n warn_alloc+0x13a\/0x1b0\n ? srso_alias_return_thunk+0x5\/0xfbef5\n ? __alloc_pages_direct_compact+0xab\/0x210\n __alloc_pages_slowpath.constprop.0+0xd3e\/0xda0\n __alloc_pages+0x32d\/0x350\n ? mhi_prepare_channel+0x127\/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n __kmalloc_large_node+0x72\/0x110\n __kmalloc+0x37c\/0x480\n ? mhi_map_single_no_bb+0x77\/0xf0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n ? mhi_prepare_channel+0x127\/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n mhi_prepare_channel+0x127\/0x2d0 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n __mhi_prepare_for_transfer+0x44\/0x80 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n ? __pfx_____mhi_prepare_for_transfer+0x10\/0x10 [mhi 40df44e07c05479f7a6e7b90fba9f0e0031a7814]\n device_for_each_child+0x5c\/0xa0\n ? __pfx_pci_pm_resume+0x10\/0x10\n ath11k_core_resume+0x65\/0x100 [ath11k a5094e22d7223135c40d93c8f5321cf09fd85e4e]\n ? srso_alias_return_thunk+0x5\/0xfbef5\n ath11k_pci_pm_resume+0x32\/0x60 [ath11k_pci 830b7bfc3ea80ebef32e563cafe2cb55e9cc73ec]\n ? srso_alias_return_thunk+0x5\/0xfbef5\n dpm_run_callback+0x8c\/0x1e0\n device_resume+0x104\/0x340\n ? __pfx_dpm_watchdog_handler+0x10\/0x10\n async_resume+0x1d\/0x30\n async_run_entry_fn+0x32\/0x120\n process_one_work+0x168\/0x330\n worker_thread+0x2f5\/0x410\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0xe8\/0x120\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x34\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nActually those buffers are used only by QMI target -> host communication.\nAnd for WCN6855 and QCA6390, the largest packet size for that is less\nthan 6KB. So change buf_len field to 8KB, which results in order 1\nallocation if page size is 4KB. In this way, we can at least save some\nmemory, and as well as decrease the possibility of allocation failure\nin those scenarios.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/138fdeac75fb7512a7f9f1c3b236cd2e754af793","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1cca1bddf9ef080503c15378cecf4877f7510015","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6597a6687af54e2cb58371cf8f6ee4dd85c537de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/805a1cdde82fec00c7471a393f4bb437b2741559","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae5876b3b7b2243d874e2afa099e7926122087a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35939","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.690","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-direct: Leak pages on dma_set_decrypted() failure\n\nOn TDX it is possible for the untrusted host to cause\nset_memory_encrypted() or set_memory_decrypted() to fail such that an\nerror is returned and the resulting memory is shared. Callers need to\ntake care to handle these errors to avoid returning decrypted (shared)\nmemory to the page allocator, which could lead to functional or security\nissues.\n\nDMA could free decrypted\/shared pages if dma_set_decrypted() fails. This\nshould be a rare case. Just leak the pages in this case instead of\nfreeing them."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4031b72ca747a1e6e9ae4fa729e765b43363d66a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e0cfb25d49da2e6261ad582f58ffa5b5dd8c8e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b57326c96b7bc7638aa8c44e12afa2defe0c934c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9fa16949d18e06bdf728a560f5c8af56d2bdcaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35940","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.757","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npstore\/zone: Add a null pointer check to the psz_kmsg_read\n\nkasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ff96ec22a84d80a18d7ae8ca7eb111c34ee33bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/635594cca59f9d7a8e96187600c34facb8bc0682","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f9f2e498eae7897ba5d3e33908917f68ff4abcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98bc7e26e14fbb26a6abf97603d59532475e97f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98e2b97acb875d65bdfc75fc408e67975cef3041","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec7256887d072f98c42cdbef4dcc80ddf84c7a70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35941","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.823","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: skbuff: add overflow debug check to pull\/push helpers\n\nsyzbot managed to trigger following splat:\nBUG: KASAN: use-after-free in __skb_flow_dissect+0x4a3b\/0x5e50\nRead of size 1 at addr ffff888208a4000e by task a.out\/2313\n[..]\n  __skb_flow_dissect+0x4a3b\/0x5e50\n  __skb_get_hash+0xb4\/0x400\n  ip_tunnel_xmit+0x77e\/0x26f0\n  ipip_tunnel_xmit+0x298\/0x410\n  ..\n\nAnalysis shows that the skb has a valid ->head, but bogus ->data\npointer.\n\nskb->data gets its bogus value via the neigh layer, which does:\n\n1556    __skb_pull(skb, skb_network_offset(skb));\n\n... and the skb was already dodgy at this point:\n\nskb_network_offset(skb) returns a negative value due to an\nearlier overflow of skb->network_header (u16).  __skb_pull thus\n\"adjusts\" skb->data by a huge offset, pointing outside skb->head\narea.\n\nAllow debug builds to splat when we try to pull\/push more than\nINT_MAX bytes.\n\nAfter this, the syzkaller reproducer yields a more precise splat\nbefore the flow dissector attempts to read off skb->data memory:\n\nWARNING: CPU: 5 PID: 2313 at include\/linux\/skbuff.h:2653 neigh_connected_output+0x28e\/0x400\n  ip_finish_output2+0xb25\/0xed0\n  iptunnel_xmit+0x4ff\/0x870\n  ipgre_xmit+0x78e\/0xbb0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b2b26595bb09febf14c5444c873ac4ec90a5a77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/219eee9c0d16f1b754a8b85275854ab17df0850a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8af60bb2b215f478b886f1d6d302fefa7f0b917d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fff05b2b004d9a8a2416d08647f3dc9068e357c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35942","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.890","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npmdomain: imx8mp-blk-ctrl: imx8mp_blk: Add fdcc clock to hdmimix domain\n\nAccording to i.MX8MP RM and HDMI ADD, the fdcc clock is part of\nhdmi rx verification IP that should not enable for HDMI TX.\nBut actually if the clock is disabled before HDMI\/LCDIF probe,\nLCDIF will not get pixel clock from HDMI PHY and print the error\nlogs:\n\n[CRTC:39:crtc-2] vblank wait timed out\nWARNING: CPU: 2 PID: 9 at drivers\/gpu\/drm\/drm_atomic_helper.c:1634 drm_atomic_helper_wait_for_vblanks.part.0+0x23c\/0x260\n\nAdd fdcc clock to LCDIF and HDMI TX power domains to fix the issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/697624ee8ad557ab5417f985d2c804241a7ad30d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d3f959b426635c4da50dfc7b1306afd84d23e7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b13c0d871cd878ff53d25507ca535f59ed1f6a2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35943","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:49.953","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npmdomain: ti: Add a null pointer check to the omap_prm_domain_init\n\ndevm_kasprintf() returns a pointer to dynamically allocated memory\nwhich can be NULL upon failure. Ensure the allocation was successful\nby checking the pointer validity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04f23510daa40f9010fadf309507564a34ad956f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d7f58ee08434a33340f75ac7ac5071eea9673b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce666cecc09c0f92d5f86d89d8068ecfcf723a7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35944","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:50.017","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nVMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()\n\nSyzkaller hit 'WARNING in dg_dispatch_as_host' bug.\n\nmemcpy: detected field-spanning write (size 56) of single field \"&dg_info->msg\"\nat drivers\/misc\/vmw_vmci\/vmci_datagram.c:237 (size 24)\n\nWARNING: CPU: 0 PID: 1555 at drivers\/misc\/vmw_vmci\/vmci_datagram.c:237\ndg_dispatch_as_host+0x88e\/0xa60 drivers\/misc\/vmw_vmci\/vmci_datagram.c:237\n\nSome code commentry, based on my understanding:\n\n544 #define VMCI_DG_SIZE(_dg) (VMCI_DG_HEADERSIZE + (size_t)(_dg)->payload_size)\n\/\/\/ This is 24 + payload_size\n\nmemcpy(&dg_info->msg, dg, dg_size);\n\tDestination = dg_info->msg ---> this is a 24 byte\n\t\t\t\t\tstructure(struct vmci_datagram)\n\tSource = dg --> this is a 24 byte structure (struct vmci_datagram)\n\tSize = dg_size = 24 + payload_size\n\n{payload_size = 56-24 =32} -- Syzkaller managed to set payload_size to 32.\n\n 35 struct delayed_datagram_info {\n 36         struct datagram_entry *entry;\n 37         struct work_struct work;\n 38         bool in_dg_host_queue;\n 39         \/* msg and msg_payload must be together. *\/\n 40         struct vmci_datagram msg;\n 41         u8 msg_payload[];\n 42 };\n\nSo those extra bytes of payload are copied into msg_payload[], a run time\nwarning is seen while fuzzing with Syzkaller.\n\nOne possible way to fix the warning is to split the memcpy() into\ntwo parts -- one -- direct assignment of msg and second taking care of payload.\n\nGustavo quoted:\n\"Under FORTIFY_SOURCE we should not copy data across multiple members\nin a structure.\""}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/130b0cd064874e0d0f58e18fb00e6f3993e90c74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19b070fefd0d024af3daa7329cbc0d00de5302ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/491a1eb07c2bd8841d63cb5263455e185be5866f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad78c5047dc4076d0b3c4fad4f42ffe9c86e8100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dae70a57565686f16089737adb8ac64471570f73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e87bb99d2df6512d8ee37a5d63d2ca9a39a8c051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f15eca95138b3d4ec17b63c3c1937b0aa0d3624b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/feacd430b42bbfa9ab3ed9e4f38b86c43e348c75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35945","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:50.110","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: phy_device: Prevent nullptr exceptions on ISR\n\nIf phydev->irq is set unconditionally, check\nfor valid interrupt handler or fall back to polling mode to prevent\nnullptr exceptions in interrupt service routine."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3419ee39e3d3162ab2ec9942bb537613ed5b6311","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61c81872815f46006982bb80460c0c80a949b35b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a71f61ebf95cedd3f245db6da397822971d8db5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35946","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T11:15:50.180","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: fix null pointer access when abort scan\n\nDuring cancel scan we might use vif that weren't scanning.\nFix this by using the actual scanning vif."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f11c741908dab7dd48fa5a986b210d4fc74ca8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e11a2966f51695c0af0b1f976a32d64dee243b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b34d64e9aa5505e3c84570aed5c757f1839573e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35947","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-19T12:15:08.220","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndyndbg: fix old BUG_ON in >control parser\n\nFix a BUG_ON from 2009.  Even if it looks \"unreachable\" (I didn't\nreally look), lets make sure by removing it, doing pr_err and return\n-EINVAL instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00e7d3bea2ce7dac7bee1cf501fb071fd0ea8f6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/343081c21e56bd6690d342e2f5ae8c00183bf081","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c718bddddca9cbef177ac475b94c5c91147fb38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41d8ac238ab1cab01a8c71798d61903304f4e79b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/529e1852785599160415e964ca322ee7add7aef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a66c869b17c4c4dcf81d273b02cb0efe88e127ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a69e1bdd777ce51061111dc419801e8a2fd241cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba3c118cff7bcb0fe6aa84ae1f9080d50e31c561","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-5100","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T12:15:08.310","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Simple Inventory System 1.0. It has been classified as critical. This affects an unknown part of the file tableedit.php. The manipulation of the argument from\/to leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265083."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/rockersiyuan\/CVE\/blob\/main\/SourceCodester%20Simple%20Inventory%20System%20Sql%20Inject-3.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265083","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265083","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.337058","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5101","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T14:15:35.700","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Simple Inventory System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file updateproduct.php. The manipulation of the argument ITEM leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265084."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/rockersiyuan\/CVE\/blob\/main\/SourceCodester%20Simple%20Inventory%20System%20Sql%20Inject-4.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265084","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265084","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.337059","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-36053","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T16:15:45.687","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the mintupload package through 4.2.0 for Linux Mint, service-name mishandling leads to command injection via shell metacharacters in check_connection, drop_data_received_cb, and Service.remove. A user can modify a service name in a ~\/.linuxmint\/mintUpload\/services\/service file."}],"metrics":{},"references":[{"url":"http:\/\/packages.linuxmint.com\/pool\/main\/m\/mintupload\/","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/linuxmint\/mintupload\/issues\/42","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/linuxmint\/mintupload\/issues\/43","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36070","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T19:15:48.550","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"tine before 2023.11.8, when an LDAP backend is used, allows anonymous remote attackers to obtain sensitive authentication information via setup.php because of getRegistryData in Setup\/Frontend\/Json.php. (An update is also available for the 2022.11 series.)"}],"metrics":{},"references":[{"url":"https:\/\/github.com\/tine-groupware\/tine\/commit\/5d556a1225aa358cbf7cfbeae518c9386b46f516","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tine-groupware\/tine\/releases\/tag\/2023.11.8","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36076","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T20:15:07.970","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Syslifters SysReptor before 2024.40 has a CSRF vulnerability for WebSocket connections."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Syslifters\/sysreptor\/releases\/tag\/2024.40","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36078","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T20:15:08.043","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In Zammad before 6.3.1, a Ruby gem bundled by Zammad is installed with world-writable file permissions. This allowed a local attacker on the server to modify the gem's files, injecting arbitrary code into Zammad processes (which run with the environment and permissions of the Zammad user)."}],"metrics":{},"references":[{"url":"https:\/\/zammad.com\/en\/advisories\/zaa-2024-04","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36080","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T20:15:08.107","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Westermo EDW-100 devices through 2024-05-03 have a hidden root user account with a hardcoded password that cannot be changed. NOTE: this is a serial-to-Ethernet converter that should not be placed at the edge of the network."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.9}]},"references":[{"url":"https:\/\/www.westermo.com\/-\/media\/Files\/Cyber-security\/westermo_sa_EDW-100_24-05.pdf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36081","sourceIdentifier":"cve@mitre.org","published":"2024-05-19T20:15:08.287","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Westermo EDW-100 devices through 2024-05-03 allow an unauthenticated user to download a configuration file containing a cleartext password. NOTE: this is a serial-to-Ethernet converter that should not be placed at the edge of the network."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.9}]},"references":[{"url":"https:\/\/www.westermo.com\/-\/media\/Files\/Cyber-security\/westermo_sa_EDW-100_24-05.pdf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-5103","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T21:15:06.893","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file \/view\/student_first_payment.php. The manipulation of the argument grade leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265093 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%208.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265093","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265093","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338506","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5104","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T22:15:24.520","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file \/view\/student_grade_wise.php. The manipulation of the argument grade leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-265094 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%209.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265094","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265094","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338507","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-4284","sourceIdentifier":"security@huntr.dev","published":"2024-05-19T23:15:06.960","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability in mintplex-labs\/anything-llm allows for a denial of service (DoS) condition through the modification of a user's `id` attribute to a value of 0. This issue affects the current version of the software, with the latest commit id `57984fa85c31988b2eff429adfc654c46e0c342a`. By exploiting this vulnerability, an attacker, with manager or admin privileges, can render a chosen account completely inaccessible. The application's mechanism for suspending accounts does not provide a means to reverse this condition through the UI, leading to uncontrolled resource consumption. The vulnerability is introduced due to the lack of input validation and sanitization in the user modification endpoint and the middleware's token validation logic. This issue has been addressed in version 1.0.0 of the software."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":4.9,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.2,"impactScore":3.6}]},"weaknesses":[{"source":"security@huntr.dev","type":"Secondary","description":[{"lang":"en","value":"CWE-400"}]}],"references":[{"url":"https:\/\/github.com\/mintplex-labs\/anything-llm\/commit\/1b35bcbeab10b77e6dbd263cceecf1b965a40789","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/a5f45596-0aef-49e0-9f7d-63f1955a1552","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-5105","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T23:15:07.320","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in Campcodes Complete Web-Based School Management System 1.0. This affects an unknown part of the file \/view\/student_payment_details.php. The manipulation of the argument index leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265095."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2010.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265095","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265095","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338508","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5106","sourceIdentifier":"cna@vuldb.com","published":"2024-05-19T23:15:07.600","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Campcodes Complete Web-Based School Management System 1.0. This vulnerability affects unknown code of the file \/view\/student_payment_details3.php. The manipulation of the argument index leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265096."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2011.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265096","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265096","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338509","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5107","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T00:15:54.997","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in Campcodes Complete Web-Based School Management System 1.0. This issue affects some unknown processing of the file \/view\/student_payment_details2.php. The manipulation of the argument index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265097 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2012.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265097","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265097","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338511","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5108","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T00:15:57.907","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file \/view\/student_payment_details4.php. The manipulation of the argument index leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-265098 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2013.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265098","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265098","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338512","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5109","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T01:15:08.923","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability has been found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file \/view\/student_payment_history.php. The manipulation of the argument index leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265099."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2014.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265099","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265099","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338513","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5110","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.103","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file \/view\/student_payment_invoice.php. The manipulation of the argument index leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265100."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2015.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265100","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265100","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338514","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5111","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.367","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been classified as critical. This affects an unknown part of the file \/view\/student_payment_invoice1.php. The manipulation of the argument date leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265101 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2016.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265101","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265101","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338515","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5112","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.613","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file \/view\/student_profile.php. The manipulation of the argument std_index leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265102 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2017.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265102","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265102","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338516","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5113","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T03:15:08.867","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/view\/student_profile1.php. The manipulation of the argument std_index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265103."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2018.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265103","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265103","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338517","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5114","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T03:15:09.167","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file \/view\/teacher_attendance_history1.php. The manipulation of the argument index leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265104."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2019.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265104","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265104","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338518","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5115","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T04:15:08.747","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Campcodes Complete Web-Based School Management System 1.0. Affected by this vulnerability is an unknown functionality of the file \/view\/teacher_profile.php. The manipulation of the argument index leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265105 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2020.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265105","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265105","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338519","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5116","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T04:15:09.070","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in SourceCodester Online Examination System 1.0. Affected by this issue is some unknown functionality of the file save.php. The manipulation of the argument vote leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265196."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/polaris0x1\/CVE\/issues\/3","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265196","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265196","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338578","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5117","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T05:15:10.110","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in SourceCodester Event Registration System 1.0. This affects an unknown part of the file portal.php. The manipulation of the argument username\/password leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265197 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265197","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265197","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5118","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T05:15:10.387","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability has been found in SourceCodester Event Registration System 1.0 and classified as critical. This vulnerability affects unknown code of the file \/admin\/login.php. The manipulation of the argument username\/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265198 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265198","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265198","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338612","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-3368","sourceIdentifier":"contact@wpscan.com","published":"2024-05-20T06:15:08.527","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ab78b1a5-e28c-406b-baaf-6d53017f9328\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-5119","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T06:15:09.013","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0 and classified as critical. This issue affects some unknown processing of the file \/classes\/Master.php?f=load_registration. The manipulation of the argument last_id\/event_id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265199."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265199","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265199","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338613","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5120","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T06:15:09.393","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been classified as critical. Affected is an unknown function of the file \/registrar\/?page=registration. The manipulation of the argument e leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265200."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%203.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265200","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265200","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338614","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5121","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T07:15:09.167","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file \/registrar\/?page=registration. The manipulation of the argument e leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265201 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":3.5,"baseSeverity":"LOW"},"exploitabilityScore":2.1,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":4.0},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20Cross-Site-Scripting%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265201","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265201","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338617","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5122","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T07:15:09.637","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file \/registrar\/. The manipulation of the argument search leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-265202 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%204.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265202","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265202","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338615","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-1968","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T08:15:08.850","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In scrapy\/scrapy, an issue was identified where the Authorization header is not removed during redirects that only change the scheme (e.g., HTTPS to HTTP) but remain within the same domain. This behavior contravenes the Fetch standard, which mandates the removal of Authorization headers in cross-origin requests when the scheme, host, or port changes. Consequently, when a redirect downgrades from HTTPS to HTTP, the Authorization header may be inadvertently exposed in plaintext, leading to potential sensitive information disclosure to unauthorized actors. The flaw is located in the _build_redirect_request function of the redirect middleware."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/github.com\/scrapy\/scrapy\/commit\/1d0502f25bbe55a22899af915623fda1aaeb9dd8","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/27f6a021-a891-446a-ada5-0226d619dd1a","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-5123","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T08:15:09.090","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in SourceCodester Event Registration System 1.0. This affects an unknown part of the file \/registrar\/. The manipulation of the argument searchbar leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265203."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":5.0},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20Cross-Site-Scripting%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265203","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265203","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338616","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5134","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T08:15:09.343","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Electricity Consumption Monitoring Tool 1.0. It has been declared as critical. This vulnerability affects unknown code of the file \/endpoint\/delete-bill.php. The manipulation of the argument bill leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265210 is the identifier assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Electricity%20Consumption%20Monitoring%20Tool\/Electricity%20Consumption%20Monitoring%20Tool%20-%20SQL%20Injection.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265210","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265210","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338980","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-3761","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T09:15:09.497","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In lunary-ai\/lunary version 1.2.2, the DELETE endpoint located at `packages\/backend\/src\/api\/v1\/datasets` is vulnerable to unauthorized dataset deletion due to missing authorization and authentication mechanisms. This vulnerability allows any user, even those without a valid token, to delete a dataset by sending a DELETE request to the endpoint. The issue was fixed in version 1.2.8. The impact of this vulnerability is significant as it permits unauthorized users to delete datasets, potentially leading to data loss or disruption of service."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.1,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/github.com\/lunary-ai\/lunary\/commit\/14078c1d2b8766075bf655f187ece24c7a787776","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/e95fb0a0-e54a-4da8-a33d-ba858d0cec55","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-5135","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T09:15:09.750","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in PHPGurukul Directory Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/admin\/index.php. The manipulation of the argument username leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265211."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265211","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265211","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339121","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5136","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T09:15:10.007","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in PHPGurukul Directory Management System 1.0. Affected is an unknown function of the file \/admin\/search-directory.php.. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265212."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20Cross-Site-Scripting%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265212","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265212","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339122","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-35948","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:09.440","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbcachefs: Check for journal entries overruning end of sb clean section\n\nFix a missing bounds check in superblock validation.\n\nNote that we don't yet have repair code for this case - repair code for\nindividual items is generally low priority, since the whole superblock\nis checksummed, validated prior to write, and we have backups."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/fcdbc1d7a4b638e5d5668de461f320386f3002aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35949","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.413","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: make sure that WRITTEN is set on all metadata blocks\n\nWe previously would call btrfs_check_leaf() if we had the check\nintegrity code enabled, which meant that we could only run the extended\nleaf checks if we had WRITTEN set on the header flags.\n\nThis leaves a gap in our checking, because we could end up with\ncorruption on disk where WRITTEN isn't set on the leaf, and then the\nextended leaf checks don't get run which we rely on to validate all of\nthe item pointers to make sure we don't access memory outside of the\nextent buffer.\n\nHowever, since 732fab95abe2 (\"btrfs: check-integrity: remove\nCONFIG_BTRFS_FS_CHECK_INTEGRITY option\") we no longer call\nbtrfs_check_leaf() from btrfs_mark_buffer_dirty(), which means we only\never call it on blocks that are being written out, and thus have WRITTEN\nset, or that are being read in, which should have WRITTEN set.\n\nAdd checks to make sure we have WRITTEN set appropriately, and then make\nsure __btrfs_check_leaf() always does the item checking.  This will\nprotect us from file systems that have been corrupted and no longer have\nWRITTEN set on some of the blocks.\n\nThis was hit on a crafted image tweaking the WRITTEN bit and reported by\nKASAN as out-of-bound access in the eb accessors. The example is a dir\nitem at the end of an eb.\n\n  [2.042] BTRFS warning (device loop1): bad eb member start: ptr 0x3fff start 30572544 member offset 16410 size 2\n  [2.040] general protection fault, probably for non-canonical address 0xe0009d1000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  [2.537] KASAN: maybe wild-memory-access in range [0x0005088000000018-0x000508800000001f]\n  [2.729] CPU: 0 PID: 2587 Comm: mount Not tainted 6.8.2 #1\n  [2.729] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n  [2.621] RIP: 0010:btrfs_get_16+0x34b\/0x6d0\n  [2.621] RSP: 0018:ffff88810871fab8 EFLAGS: 00000206\n  [2.621] RAX: 0000a11000000003 RBX: ffff888104ff8720 RCX: ffff88811b2288c0\n  [2.621] RDX: dffffc0000000000 RSI: ffffffff81dd8aca RDI: ffff88810871f748\n  [2.621] RBP: 000000000000401a R08: 0000000000000001 R09: ffffed10210e3ee9\n  [2.621] R10: ffff88810871f74f R11: 205d323430333737 R12: 000000000000001a\n  [2.621] R13: 000508800000001a R14: 1ffff110210e3f5d R15: ffffffff850011e8\n  [2.621] FS:  00007f56ea275840(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000\n  [2.621] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [2.621] CR2: 00007febd13b75c0 CR3: 000000010bb50000 CR4: 00000000000006f0\n  [2.621] Call Trace:\n  [2.621]  <TASK>\n  [2.621]  ? show_regs+0x74\/0x80\n  [2.621]  ? die_addr+0x46\/0xc0\n  [2.621]  ? exc_general_protection+0x161\/0x2a0\n  [2.621]  ? asm_exc_general_protection+0x26\/0x30\n  [2.621]  ? btrfs_get_16+0x33a\/0x6d0\n  [2.621]  ? btrfs_get_16+0x34b\/0x6d0\n  [2.621]  ? btrfs_get_16+0x33a\/0x6d0\n  [2.621]  ? __pfx_btrfs_get_16+0x10\/0x10\n  [2.621]  ? __pfx_mutex_unlock+0x10\/0x10\n  [2.621]  btrfs_match_dir_item_name+0x101\/0x1a0\n  [2.621]  btrfs_lookup_dir_item+0x1f3\/0x280\n  [2.621]  ? __pfx_btrfs_lookup_dir_item+0x10\/0x10\n  [2.621]  btrfs_get_tree+0xd25\/0x1910\n\n[ copy more details from report ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e03418abde871314e1a3a550f4c8afb7b89cb273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef3ba8ce8cf7075b716aa4afcefc3034215878ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35950","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.490","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/client: Fully protect modes[] with dev->mode_config.mutex\n\nThe modes[] array contains pointers to modes on the connectors'\nmode lists, which are protected by dev->mode_config.mutex.\nThus we need to extend modes[] the same protection or by the\ntime we use it the elements may already be pointing to\nfreed\/reused memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04e018bd913d3d3336ab7d21c2ad31a9175fe984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18c8cc6680ce938d0458859b6a08b4d34f7d8055","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eadd887dbac1df8f25f701e5d404d1b90fd0fea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41586487769eede64ab1aa6c65c74cbf76c12ef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a2f957e3c4553bbb100504a1acfeaeb33f4ca4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ceb873d816786a7c8058f50d903574aff8d3764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2dc6600d4e3e1453e3b1fb233e9f97e2a1ae949","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35951","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.577","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm\/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget\/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fc9af813b25e146d3607669247d0f970f5a87c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31806711e8a4b75e09b1c43652f2a6420e6e1002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e18070c622c63f0cab170348e320454728c277aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35952","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.643","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/ast: Fix soft lockup\n\nThere is a while-loop in ast_dp_set_on_off() that could lead to\ninfinite-loop. This is because the register, VGACRI-Dx, checked in\nthis API is a scratch register actually controlled by a MCU, named\nDPMCU, in BMC.\n\nThese scratch registers are protected by scu-lock. If suc-lock is not\noff, DPMCU can not update these registers and then host will have soft\nlockup due to never updated status.\n\nDPMCU is used to control DP and relative registers to handshake with\nhost's VGA driver. Even the most time-consuming task, DP's link\ntraining, is less than 100ms. 200ms should be enough."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35768baf0fdfc47ede42d899506bad78450e9294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a6fea3fcb577a543ef67683ca7105bde49a38fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a81b2acd43e24e419f65df97348c76a5a1496066","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc004f5038220b1891ef4107134ccae44be55109","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.717","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naccel\/ivpu: Fix deadlock in context_xa\n\nivpu_device->context_xa is locked both in kernel thread and IRQ context.\nIt requires XA_FLAGS_LOCK_IRQ flag to be passed during initialization\notherwise the lock could be acquired from a thread and interrupted by\nan IRQ that locks it for the second time causing the deadlock.\n\nThis deadlock was reported by lockdep and observed in internal tests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d43e11d9c7fcb16f18bd46ab2556c2772ffc5775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6011411147209bc0cc14628cbc155356837e52a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd7726e75968b27fe98534ccbf47ccd6fef686f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35954","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.780","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Avoid sg device teardown race\n\nsg_remove_sfp_usercontext() must not use sg_device_destroy() after calling\nscsi_device_put().\n\nsg_device_destroy() is accessing the parent scsi_device request_queue which\nwill already be set to NULL when the preceding call to scsi_device_put()\nremoved the last reference to the parent scsi_device.\n\nThe resulting NULL pointer exception will then crash the kernel."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27f58c04a8f438078583041468ec60597841284d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46af9047523e2517712ae8e71d984286c626e022","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0d1ebcc1a9560e494ea9b3ee808540db26c5086","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35955","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.850","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2df2dd27066cdba8041e46a64362325626bdfb2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36b57c7d2f8b7de224980f1a284432846ad71ca0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5062d1f4f07facbdade0f402d9a04a788f52e26d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62029bc9ff2c17a4e3a2478d83418ec575413808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93eb31e7c3399e326259f2caa17be1e821f5a412","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5808d40093403334d939e2c3c417144d12a6f33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d15023fb407337028a654237d8968fefdcf87c2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35956","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.920","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations\n\nCreate subvolume, create snapshot and delete subvolume all use\nbtrfs_subvolume_reserve_metadata() to reserve metadata for the changes\ndone to the parent subvolume's fs tree, which cannot be mediated in the\nnormal way via start_transaction. When quota groups (squota or qgroups)\nare enabled, this reserves qgroup metadata of type PREALLOC. Once the\noperation is associated to a transaction, we convert PREALLOC to\nPERTRANS, which gets cleared in bulk at the end of the transaction.\n\nHowever, the error paths of these three operations were not implementing\nthis lifecycle correctly. They unconditionally converted the PREALLOC to\nPERTRANS in a generic cleanup step regardless of errors or whether the\noperation was fully associated to a transaction or not. This resulted in\nerror paths occasionally converting this rsv to PERTRANS without calling\nrecord_root_in_trans successfully, which meant that unless that root got\nrecorded in the transaction by some other thread, the end of the\ntransaction would not free that root's PERTRANS, leaking it. Ultimately,\nthis resulted in hitting a WARN in CONFIG_BTRFS_DEBUG builds at unmount\nfor the leaked reservation.\n\nThe fix is to ensure that every qgroup PREALLOC reservation observes the\nfollowing properties:\n\n1. any failure before record_root_in_trans is called successfully\n   results in freeing the PREALLOC reservation.\n2. after record_root_in_trans, we convert to PERTRANS, and now the\n   transaction owns freeing the reservation.\n\nThis patch enforces those properties on the three operations. Without\nit, generic\/269 with squotas enabled at mkfs time would fail in ~5-10\nruns on my system. With this patch, it ran successfully 1000 times in a\nrow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14431815a4ae4bcd7c7a68b6a64c66c7712d27c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c95336f5d8eb9ab79cd7306d71b6d0477363f8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74e97958121aa1f5854da6effba70143f051b0cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35957","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.987","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix WARN_ON in iommu probe path\n\nCommit 1a75cc710b95 (\"iommu\/vt-d: Use rbtree to track iommu probed\ndevices\") adds all devices probed by the iommu driver in a rbtree\nindexed by the source ID of each device. It assumes that each device\nhas a unique source ID. This assumption is incorrect and the VT-d\nspec doesn't state this requirement either.\n\nThe reason for using a rbtree to track devices is to look up the device\nwith PCI bus and devfunc in the paths of handling ATS invalidation time\nout error and the PRI I\/O page faults. Both are PCI ATS feature related.\n\nOnly track the devices that have PCI ATS capabilities in the rbtree to\navoid unnecessary WARN_ON in the iommu probe path. Otherwise, on some\nplatforms below kernel splat will be displayed and the iommu probe results\nin failure.\n\n WARNING: CPU: 3 PID: 166 at drivers\/iommu\/intel\/iommu.c:158 intel_iommu_probe_device+0x319\/0xd90\n Call Trace:\n  <TASK>\n  ? __warn+0x7e\/0x180\n  ? intel_iommu_probe_device+0x319\/0xd90\n  ? report_bug+0x1f8\/0x200\n  ? handle_bug+0x3c\/0x70\n  ? exc_invalid_op+0x18\/0x70\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? intel_iommu_probe_device+0x319\/0xd90\n  ? debug_mutex_init+0x37\/0x50\n  __iommu_probe_device+0xf2\/0x4f0\n  iommu_probe_device+0x22\/0x70\n  iommu_bus_notifier+0x1e\/0x40\n  notifier_call_chain+0x46\/0x150\n  blocking_notifier_call_chain+0x42\/0x60\n  bus_notify+0x2f\/0x50\n  device_add+0x5ed\/0x7e0\n  platform_device_add+0xf5\/0x240\n  mfd_add_devices+0x3f9\/0x500\n  ? preempt_count_add+0x4c\/0xa0\n  ? up_write+0xa2\/0x1b0\n  ? __debugfs_create_file+0xe3\/0x150\n  intel_lpss_probe+0x49f\/0x5b0\n  ? pci_conf1_write+0xa3\/0xf0\n  intel_lpss_pci_probe+0xcf\/0x110 [intel_lpss_pci]\n  pci_device_probe+0x95\/0x120\n  really_probe+0xd9\/0x370\n  ? __pfx___driver_attach+0x10\/0x10\n  __driver_probe_device+0x73\/0x150\n  driver_probe_device+0x19\/0xa0\n  __driver_attach+0xb6\/0x180\n  ? __pfx___driver_attach+0x10\/0x10\n  bus_for_each_dev+0x77\/0xd0\n  bus_add_driver+0x114\/0x210\n  driver_register+0x5b\/0x110\n  ? __pfx_intel_lpss_pci_driver_init+0x10\/0x10 [intel_lpss_pci]\n  do_one_initcall+0x57\/0x2b0\n  ? kmalloc_trace+0x21e\/0x280\n  ? do_init_module+0x1e\/0x210\n  do_init_module+0x5f\/0x210\n  load_module+0x1d37\/0x1fc0\n  ? init_module_from_file+0x86\/0xd0\n  init_module_from_file+0x86\/0xd0\n  idempotent_init_module+0x17c\/0x230\n  __x64_sys_finit_module+0x56\/0xb0\n  do_syscall_64+0x6e\/0x140\n  entry_SYSCALL_64_after_hwframe+0x71\/0x79"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/89436f4f54125b1297aec1f466efd8acb4ec613d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fba8ca3e6f608b92e54271fdbd3ce569361939fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35958","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.057","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19ff8fed3338898b70b2aad831386c78564912e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7f2240d9835a7823d87f7460d8eae9f4e504c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26aa765f7437e1bbe8db4c1641b12bd5dd378f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf02d9fe00632d22fa91d34749c7aacf397b6cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c31baa07f01307b7ae05f3ce32b89d8e2ba0cc1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdfbf54d128ab6ab255db138488f9650485795a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35959","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.123","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix mlx5e_priv_init() cleanup flow\n\nWhen mlx5e_priv_init() fails, the cleanup flow calls mlx5e_selq_cleanup which\ncalls mlx5e_selq_apply() that assures that the `priv->state_lock` is held using\nlockdep_is_held().\n\nAcquire the state_lock in mlx5e_selq_cleanup().\n\nKernel log:\n=============================\nWARNING: suspicious RCU usage\n6.8.0-rc3_net_next_841a9b5 #1 Not tainted\n-----------------------------\ndrivers\/net\/ethernet\/mellanox\/mlx5\/core\/en\/selq.c:124 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by systemd-modules\/293:\n #0: ffffffffa05067b0 (devices_rwsem){++++}-{3:3}, at: ib_register_client+0x109\/0x1b0 [ib_core]\n #1: ffff8881096c65c0 (&device->client_data_rwsem){++++}-{3:3}, at: add_client_context+0x104\/0x1c0 [ib_core]\n\nstack backtrace:\nCPU: 4 PID: 293 Comm: systemd-modules Not tainted 6.8.0-rc3_net_next_841a9b5 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x8a\/0xa0\n lockdep_rcu_suspicious+0x154\/0x1a0\n mlx5e_selq_apply+0x94\/0xa0 [mlx5_core]\n mlx5e_selq_cleanup+0x3a\/0x60 [mlx5_core]\n mlx5e_priv_init+0x2be\/0x2f0 [mlx5_core]\n mlx5_rdma_setup_rn+0x7c\/0x1a0 [mlx5_core]\n rdma_init_netdev+0x4e\/0x80 [ib_core]\n ? mlx5_rdma_netdev_free+0x70\/0x70 [mlx5_core]\n ipoib_intf_init+0x64\/0x550 [ib_ipoib]\n ipoib_intf_alloc+0x4e\/0xc0 [ib_ipoib]\n ipoib_add_one+0xb0\/0x360 [ib_ipoib]\n add_client_context+0x112\/0x1c0 [ib_core]\n ib_register_client+0x166\/0x1b0 [ib_core]\n ? 0xffffffffa0573000\n ipoib_init_module+0xeb\/0x1a0 [ib_ipoib]\n do_one_initcall+0x61\/0x250\n do_init_module+0x8a\/0x270\n init_module_from_file+0x8b\/0xd0\n idempotent_init_module+0x17d\/0x230\n __x64_sys_finit_module+0x61\/0xb0\n do_syscall_64+0x71\/0x140\n entry_SYSCALL_64_after_hwframe+0x46\/0x4e\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6bd77865fda662913dcb5722a66a773840370aa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad26f26abd353113dea4e8d5ebadccdab9b61e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb829459a841198e142f72fadab56424ae96519","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9ac93b6f3de34aa0bb983b9be4f69ca50fc70f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35960","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.190","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Properly link new fs rules into the tree\n\nPreviously, add_rule_fg would only add newly created rules from the\nhandle into the tree when they had a refcount of 1. On the other hand,\ncreate_flow_handle tries hard to find and reference already existing\nidentical rules instead of creating new ones.\n\nThese two behaviors can result in a situation where create_flow_handle\n1) creates a new rule and references it, then\n2) in a subsequent step during the same handle creation references it\n   again,\nresulting in a rule with a refcount of 2 that is not linked into the\ntree, will have a NULL parent and root and will result in a crash when\nthe flow group is deleted because del_sw_hw_rule, invoked on rule\ndeletion, assumes node->parent is != NULL.\n\nThis happened in the wild, due to another bug related to incorrect\nhandling of duplicate pkt_reformat ids, which lead to the code in\ncreate_flow_handle incorrectly referencing a just-added rule in the same\nflow handle, resulting in the problem described above. Full details are\nat [1].\n\nThis patch changes add_rule_fg to add new rules without parents into\nthe tree, properly initializing them and avoiding the crash. This makes\nit more consistent with how rules are added to an FTE in\ncreate_flow_handle."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1263b0b26077b1183c3c45a0a2479573a351d423","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e8dc5cffc844dacfa79f056dea88002312f253f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d90ca9145f6b97b38d0c2b6b30f6ca6af9c1801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cf5337ef701830f173b4eec00a4f984adeb57a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7aaee12b804c5e0374e7b132b6ec2158ff33dd64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c6782ad4911cbee874e85630226ed389ff2e453","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adf67a03af39095f05d82050f15813d6f700159d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de0139719cdda82806a47580ca0df06fc85e0bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35961","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.260","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Register devlink first under devlink lock\n\nIn case device is having a non fatal FW error during probe, the\ndriver will report the error to user via devlink. This will trigger\na WARN_ON, since mlx5 is calling devlink_register() last.\nIn order to avoid the WARN_ON[1], change mlx5 to invoke devl_register()\nfirst under devlink lock.\n\n[1]\nWARNING: CPU: 5 PID: 227 at net\/devlink\/health.c:483 devlink_recover_notify.constprop.0+0xb8\/0xc0\nCPU: 5 PID: 227 Comm: kworker\/u16:3 Not tainted 6.4.0-rc5_for_upstream_min_debug_2023_06_12_12_38 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nWorkqueue: mlx5_health0000:08:00.0 mlx5_fw_reporter_err_work [mlx5_core]\nRIP: 0010:devlink_recover_notify.constprop.0+0xb8\/0xc0\nCall Trace:\n <TASK>\n ? __warn+0x79\/0x120\n ? devlink_recover_notify.constprop.0+0xb8\/0xc0\n ? report_bug+0x17c\/0x190\n ? handle_bug+0x3c\/0x60\n ? exc_invalid_op+0x14\/0x70\n ? asm_exc_invalid_op+0x16\/0x20\n ? devlink_recover_notify.constprop.0+0xb8\/0xc0\n devlink_health_report+0x4a\/0x1c0\n mlx5_fw_reporter_err_work+0xa4\/0xd0 [mlx5_core]\n process_one_work+0x1bb\/0x3c0\n ? process_one_work+0x3c0\/0x3c0\n worker_thread+0x4d\/0x3c0\n ? process_one_work+0x3c0\/0x3c0\n kthread+0xc6\/0xf0\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x1f\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8c91c60858473731bcdaf04fda99fcbcf84420d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/967caa3d37c078e5b95a32094657e6a4cad145f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35962","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.327","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: complete validation of user input\n\nIn my recent commit, I missed that do_replace() handlers\nuse copy_from_sockptr() (which I fixed), followed\nby unsafe copy_from_sockptr_offset() calls.\n\nIn all functions, we can perform the @optlen validation\nbefore even calling xt_alloc_table_info() with the following\ncheck:\n\nif ((u64)optlen < (u64)tmp.size + sizeof(tmp))\n        return -EINVAL;"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/562b7245131f6e9f1d280c8b5a8750f03edfc05c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65acf6e0501ac8880a4f73980d01b5d27648b956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89242d9584c342cb83311b598d9e6b82572eadf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97dab36e57c64106e1c8ebd66cbf0d2d1e52d6b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c760089aa98289b4b88a7ff5a62dd92845adf223","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf4bc359b76144a3dd55d7c09464ef4c5f2b2b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35963","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.390","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_sock: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50173882bb187e70e37bac01385b9b114019bee2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2186061d6043d6345a97100460363e990af0d46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35964","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.457","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c4a89f4690478969729c7ba5f69d53d8516aa12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e8742cdfc4b0e65266bb4a901a19462bda9285e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35965","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.520","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f3951242ace5efc7131932e2e01e6ac6baed846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ee0c132a61df9723813c40e742dc5321824daa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d42f373391211c7c8af66a3a316533a32b8a607","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35966","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.580","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude\/linux\/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude\/linux\/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet\/bluetooth\/rfcomm\/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893\/0xa70\nnet\/bluetooth\/rfcomm\/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632\/5064"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a97de7bff13b1cc825c1b1344eaed8d6c2d3e695","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3f787a3eafe519c93df9abbb0ca5145861c8d0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35967","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.647","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: SCO: Fix not validating setsockopt user input\n\nsyzbot reported sco_sock_setsockopt() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude\/linux\/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude\/linux\/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in sco_sock_setsockopt+0xc0b\/0xf90\nnet\/bluetooth\/sco.c:893\nRead of size 4 at addr ffff88805f7b15a3 by task syz-executor.5\/12578"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/419a0ffca7010216f0fc265b08558d7394fa0ba7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51eda36d33e43201e7a4fd35232e069b2c850b01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72473db90900da970a16ee50ad23c2c38d107d8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bc65d23ba20dcd7ecc094a12c181e594e5eb315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0e30c37695b614bee69187f86eaf250e36606ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35968","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.713","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Fix pdsc_check_pci_health function to use work thread\n\nWhen the driver notices fw_status == 0xff it tries to perform a PCI\nreset on itself via pci_reset_function() in the context of the driver's\nhealth thread. However, pdsc_reset_prepare calls\npdsc_stop_health_thread(), which attempts to stop\/flush the health\nthread. This results in a deadlock because the stop\/flush will never\ncomplete since the driver called pci_reset_function() from the health\nthread context. Fix by changing the pdsc_check_pci_health_function()\nto queue a newly introduced pdsc_pci_reset_thread() on the pdsc's\nwork queue.\n\nUnloading the driver in the fw_down\/dead state uncovered another issue,\nwhich can be seen in the following trace:\n\nWARNING: CPU: 51 PID: 6914 at kernel\/workqueue.c:1450 __queue_work+0x358\/0x440\n[...]\nRIP: 0010:__queue_work+0x358\/0x440\n[...]\nCall Trace:\n <TASK>\n ? __warn+0x85\/0x140\n ? __queue_work+0x358\/0x440\n ? report_bug+0xfc\/0x1e0\n ? handle_bug+0x3f\/0x70\n ? exc_invalid_op+0x17\/0x70\n ? asm_exc_invalid_op+0x1a\/0x20\n ? __queue_work+0x358\/0x440\n queue_work_on+0x28\/0x30\n pdsc_devcmd_locked+0x96\/0xe0 [pds_core]\n pdsc_devcmd_reset+0x71\/0xb0 [pds_core]\n pdsc_teardown+0x51\/0xe0 [pds_core]\n pdsc_remove+0x106\/0x200 [pds_core]\n pci_device_remove+0x37\/0xc0\n device_release_driver_internal+0xae\/0x140\n driver_detach+0x48\/0x90\n bus_remove_driver+0x6d\/0xf0\n pci_unregister_driver+0x2e\/0xa0\n pdsc_cleanup_module+0x10\/0x780 [pds_core]\n __x64_sys_delete_module+0x142\/0x2b0\n ? syscall_trace_enter.isra.18+0x126\/0x1a0\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x72\/0xdc\nRIP: 0033:0x7fbd9d03a14b\n[...]\n\nFix this by preventing the devcmd reset if the FW is not running."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38407914d48273d7f8ab765b9243658afe1c3ab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81665adf25d28a00a986533f1d3a5df76b79cad9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35969","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.780","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n\nAlthough ipv6_get_ifaddr walks inet6_addr_lst under the RCU lock, it\nstill means hlist_for_each_entry_rcu can return an item that got removed\nfrom the list. The memory itself of such item is not freed thanks to RCU\nbut nothing guarantees the actual content of the memory is sane.\n\nIn particular, the reference count can be zero. This can happen if\nipv6_del_addr is called in parallel. ipv6_del_addr removes the entry\nfrom inet6_addr_lst (hlist_del_init_rcu(&ifp->addr_lst)) and drops all\nreferences (__in6_ifa_put(ifp) + in6_ifa_put(ifp)). With bad enough\ntiming, this can happen:\n\n1. In ipv6_get_ifaddr, hlist_for_each_entry_rcu returns an entry.\n\n2. Then, the whole ipv6_del_addr is executed for the given entry. The\n   reference count drops to zero and kfree_rcu is scheduled.\n\n3. ipv6_get_ifaddr continues and tries to increments the reference count\n   (in6_ifa_hold).\n\n4. The rcu is unlocked and the entry is freed.\n\n5. The freed entry is returned.\n\nPrevent increasing of the reference count in such case. The name\nin6_ifa_hold_safe is chosen to mimic the existing fib6_info_hold_safe.\n\n[   41.506330] refcount_t: addition on 0; use-after-free.\n[   41.506760] WARNING: CPU: 0 PID: 595 at lib\/refcount.c:25 refcount_warn_saturate+0xa5\/0x130\n[   41.507413] Modules linked in: veth bridge stp llc\n[   41.507821] CPU: 0 PID: 595 Comm: python3 Not tainted 6.9.0-rc2.main-00208-g49563be82afa #14\n[   41.508479] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n[   41.509163] RIP: 0010:refcount_warn_saturate+0xa5\/0x130\n[   41.509586] Code: ad ff 90 0f 0b 90 90 c3 cc cc cc cc 80 3d c0 30 ad 01 00 75 a0 c6 05 b7 30 ad 01 01 90 48 c7 c7 38 cc 7a 8c e8 cc 18 ad ff 90 <0f> 0b 90 90 c3 cc cc cc cc 80 3d 98 30 ad 01 00 0f 85 75 ff ff ff\n[   41.510956] RSP: 0018:ffffbda3c026baf0 EFLAGS: 00010282\n[   41.511368] RAX: 0000000000000000 RBX: ffff9e9c46914800 RCX: 0000000000000000\n[   41.511910] RDX: ffff9e9c7ec29c00 RSI: ffff9e9c7ec1c900 RDI: ffff9e9c7ec1c900\n[   41.512445] RBP: ffff9e9c43660c9c R08: 0000000000009ffb R09: 00000000ffffdfff\n[   41.512998] R10: 00000000ffffdfff R11: ffffffff8ca58a40 R12: ffff9e9c4339a000\n[   41.513534] R13: 0000000000000001 R14: ffff9e9c438a0000 R15: ffffbda3c026bb48\n[   41.514086] FS:  00007fbc4cda1740(0000) GS:ffff9e9c7ec00000(0000) knlGS:0000000000000000\n[   41.514726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   41.515176] CR2: 000056233b337d88 CR3: 000000000376e006 CR4: 0000000000370ef0\n[   41.515713] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   41.516252] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   41.516799] Call Trace:\n[   41.517037]  <TASK>\n[   41.517249]  ? __warn+0x7b\/0x120\n[   41.517535]  ? refcount_warn_saturate+0xa5\/0x130\n[   41.517923]  ? report_bug+0x164\/0x190\n[   41.518240]  ? handle_bug+0x3d\/0x70\n[   41.518541]  ? exc_invalid_op+0x17\/0x70\n[   41.520972]  ? asm_exc_invalid_op+0x1a\/0x20\n[   41.521325]  ? refcount_warn_saturate+0xa5\/0x130\n[   41.521708]  ipv6_get_ifaddr+0xda\/0xe0\n[   41.522035]  inet6_rtm_getaddr+0x342\/0x3f0\n[   41.522376]  ? __pfx_inet6_rtm_getaddr+0x10\/0x10\n[   41.522758]  rtnetlink_rcv_msg+0x334\/0x3d0\n[   41.523102]  ? netlink_unicast+0x30f\/0x390\n[   41.523445]  ? __pfx_rtnetlink_rcv_msg+0x10\/0x10\n[   41.523832]  netlink_rcv_skb+0x53\/0x100\n[   41.524157]  netlink_unicast+0x23b\/0x390\n[   41.524484]  netlink_sendmsg+0x1f2\/0x440\n[   41.524826]  __sys_sendto+0x1d8\/0x1f0\n[   41.525145]  __x64_sys_sendto+0x1f\/0x30\n[   41.525467]  do_syscall_64+0xa5\/0x1b0\n[   41.525794]  entry_SYSCALL_64_after_hwframe+0x72\/0x7a\n[   41.526213] RIP: 0033:0x7fbc4cfcea9a\n[   41.526528] Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 2c 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 7e c3 0f 1f 44 00 00 41 54 48 83 ec 30 44 89\n[   41.527942] RSP: 002b:00007f\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b11a0566670612bd464a932e5ac2eae53d8652","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fb02ec57ead2891a2306af8c51a306bc5945e70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b19e9507c275de0cfe61c24db69179dc52cf9fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cdb20c342cd0193d3e956e3d83981d0f438bb83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7633c4da919ad51164acbf1aa322cc1a3ead6129","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4b3b69a19016d4e7fbdbd1dbcc184915eb862e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cca606e14264098cba65efa82790825dbf69e903","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de76ae9ea1a6cf9e77fcec4f2df2904e26c23ceb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35970","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.860","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Clear stale u->oob_skb.\n\nsyzkaller started to report deadlock of unix_gc_lock after commit\n4090fa373f0e (\"af_unix: Replace garbage collection algorithm.\"), but\nit just uncovers the bug that has been there since commit 314001f0bf92\n(\"af_unix: Add OOB support\").\n\nThe repro basically does the following.\n\n  from socket import *\n  from array import array\n\n  c1, c2 = socketpair(AF_UNIX, SOCK_STREAM)\n  c1.sendmsg([b'a'], [(SOL_SOCKET, SCM_RIGHTS, array(\"i\", [c2.fileno()]))], MSG_OOB)\n  c2.recv(1)  # blocked as no normal data in recv queue\n\n  c2.close()  # done async and unblock recv()\n  c1.close()  # done async and trigger GC\n\nA socket sends its file descriptor to itself as OOB data and tries to\nreceive normal data, but finally recv() fails due to async close().\n\nThe problem here is wrong handling of OOB skb in manage_oob().  When\nrecvmsg() is called without MSG_OOB, manage_oob() is called to check\nif the peeked skb is OOB skb.  In such a case, manage_oob() pops it\nout of the receive queue but does not clear unix_sock(sk)->oob_skb.\nThis is wrong in terms of uAPI.\n\nLet's say we send \"hello\" with MSG_OOB, and \"world\" without MSG_OOB.\nThe 'o' is handled as OOB data.  When recv() is called twice without\nMSG_OOB, the OOB data should be lost.\n\n  >>> from socket import *\n  >>> c1, c2 = socketpair(AF_UNIX, SOCK_STREAM, 0)\n  >>> c1.send(b'hello', MSG_OOB)  # 'o' is OOB data\n  5\n  >>> c1.send(b'world')\n  5\n  >>> c2.recv(5)  # OOB data is not received\n  b'hell'\n  >>> c2.recv(5)  # OOB date is skipped\n  b'world'\n  >>> c2.recv(5, MSG_OOB)  # This should return an error\n  b'o'\n\nIn the same situation, TCP actually returns -EINVAL for the last\nrecv().\n\nAlso, if we do not clear unix_sk(sk)->oob_skb, unix_poll() always set\nEPOLLPRI even though the data has passed through by previous recv().\n\nTo avoid these issues, we must clear unix_sk(sk)->oob_skb when dequeuing\nit from recv queue.\n\nThe reason why the old GC did not trigger the deadlock is because the\nold GC relied on the receive queue to detect the loop.\n\nWhen it is triggered, the socket with OOB data is marked as GC candidate\nbecause file refcount == inflight count (1).  However, after traversing\nall inflight sockets, the socket still has a positive inflight count (1),\nthus the socket is excluded from candidates.  Then, the old GC lose the\nchance to garbage-collect the socket.\n\nWith the old GC, the repro continues to create true garbage that will\nnever be freed nor detected by kmemleak as it's linked to the global\ninflight list.  That's why we couldn't even notice the issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/601a89ea24d05089debfa2dc896ea9f5937ac7a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/698a95ade1a00e6494482046902b986dfffd1caf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84a352b7eba1142a95441380058985ff19f25ec9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b46f4eaa4f0ec38909fb0072eea3aeddb32f954e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4bc99d04c689b5652665394ae8d3e02fb754153","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35971","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.947","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Handle softirqs at the end of IRQ thread to fix hang\n\nThe ks8851_irq() thread may call ks8851_rx_pkts() in case there are\nany packets in the MAC FIFO, which calls netif_rx(). This netif_rx()\nimplementation is guarded by local_bh_disable() and local_bh_enable().\nThe local_bh_enable() may call do_softirq() to run softirqs in case\nany are pending. One of the softirqs is net_rx_action, which ultimately\nreaches the driver .start_xmit callback. If that happens, the system\nhangs. The entire call chain is below:\n\nks8851_start_xmit_par from netdev_start_xmit\nnetdev_start_xmit from dev_hard_start_xmit\ndev_hard_start_xmit from sch_direct_xmit\nsch_direct_xmit from __dev_queue_xmit\n__dev_queue_xmit from __neigh_update\n__neigh_update from neigh_update\nneigh_update from arp_process.constprop.0\narp_process.constprop.0 from __netif_receive_skb_one_core\n__netif_receive_skb_one_core from process_backlog\nprocess_backlog from __napi_poll.constprop.0\n__napi_poll.constprop.0 from net_rx_action\nnet_rx_action from __do_softirq\n__do_softirq from call_with_stack\ncall_with_stack from do_softirq\ndo_softirq from __local_bh_enable_ip\n__local_bh_enable_ip from netif_rx\nnetif_rx from ks8851_irq\nks8851_irq from irq_thread_fn\nirq_thread_fn from irq_thread\nirq_thread from kthread\nkthread from ret_from_fork\n\nThe hang happens because ks8851_irq() first locks a spinlock in\nks8851_par.c ks8851_lock_par() spin_lock_irqsave(&ksp->lock, ...)\nand with that spinlock locked, calls netif_rx(). Once the execution\nreaches ks8851_start_xmit_par(), it calls ks8851_lock_par() again\nwhich attempts to claim the already locked spinlock again, and the\nhang happens.\n\nMove the do_softirq() call outside of the spinlock protected section\nof ks8851_irq() by disabling BHs around the entire spinlock protected\nsection of ks8851_irq() handler. Place local_bh_enable() outside of\nthe spinlock protected section, so that it can trigger do_softirq()\nwithout the ks8851_par.c ks8851_lock_par() spinlock being held, and\nsafely call ks8851_start_xmit_par() without attempting to lock the\nalready locked spinlock.\n\nSince ks8851_irq() is protected by local_bh_disable()\/local_bh_enable()\nnow, replace netif_rx() with __netif_rx() which is not duplicating the\nlocal_bh_disable()\/local_bh_enable() calls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/492337a4fbd1421b42df684ee9b34be2a2722540","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d5d70538b6b8f2a3f8f1ac30c1f921d4a0929b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be0384bf599cf1eb8d337517feeb732d71f75a6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cba376eb036c2c20077b41d47b317d8218fe754f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35972","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.013","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n\nIf ulp = kzalloc() fails, the allocated edev will leak because it is\nnot properly assigned and the cleanup path will not be able to free it.\nFix it by assigning it properly immediately after allocation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10a9d6a7513f93d7faffcb341af0aa42be8218fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ac10c7d728d75bc9daaa8fade3c7a3273b9a9ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c60ed825530b8c0cc2b524efd39b1d696ec54004","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35973","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.077","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: fix header validation in geneve[6]_xmit_skb\n\nsyzbot is able to trigger an uninit-value in geneve_xmit() [1]\n\nProblem : While most ip tunnel helpers (like ip_tunnel_get_dsfield())\nuses skb_protocol(skb, true), pskb_inet_may_pull() is only using\nskb->protocol.\n\nIf anything else than ETH_P_IPV6 or ETH_P_IP is found in skb->protocol,\npskb_inet_may_pull() does nothing at all.\n\nIf a vlan tag was provided by the caller (af_packet in the syzbot case),\nthe network header might not point to the correct location, and skb\nlinear part could be smaller than expected.\n\nAdd skb_vlan_inet_prepare() to perform a complete mac validation.\n\nUse this in geneve for the moment, I suspect we need to adopt this\nmore broadly.\n\nv4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest\n   - Only call __vlan_get_protocol() for vlan types.\n\nv2,v3 - Addressed Sabrina comments on v1 and v2\n\n[1]\n\nBUG: KMSAN: uninit-value in geneve_xmit_skb drivers\/net\/geneve.c:910 [inline]\n BUG: KMSAN: uninit-value in geneve_xmit+0x302d\/0x5420 drivers\/net\/geneve.c:1030\n  geneve_xmit_skb drivers\/net\/geneve.c:910 [inline]\n  geneve_xmit+0x302d\/0x5420 drivers\/net\/geneve.c:1030\n  __netdev_start_xmit include\/linux\/netdevice.h:4903 [inline]\n  netdev_start_xmit include\/linux\/netdevice.h:4917 [inline]\n  xmit_one net\/core\/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x247\/0xa20 net\/core\/dev.c:3547\n  __dev_queue_xmit+0x348d\/0x52c0 net\/core\/dev.c:4335\n  dev_queue_xmit include\/linux\/netdevice.h:3091 [inline]\n  packet_xmit+0x9c\/0x6c0 net\/packet\/af_packet.c:276\n  packet_snd net\/packet\/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8bb0\/0x9ef0 net\/packet\/af_packet.c:3113\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:745\n  __sys_sendto+0x685\/0x830 net\/socket.c:2191\n  __do_sys_sendto net\/socket.c:2203 [inline]\n  __se_sys_sendto net\/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2199\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:3804 [inline]\n  slab_alloc_node mm\/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613\/0xc50 mm\/slub.c:3888\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:577\n  __alloc_skb+0x35b\/0x7a0 net\/core\/skbuff.c:668\n  alloc_skb include\/linux\/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8\/0xbf0 net\/core\/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81\/0xbf0 net\/core\/sock.c:2795\n  packet_alloc_skb net\/packet\/af_packet.c:2930 [inline]\n  packet_snd net\/packet\/af_packet.c:3024 [inline]\n  packet_sendmsg+0x722d\/0x9ef0 net\/packet\/af_packet.c:3113\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:745\n  __sys_sendto+0x685\/0x830 net\/socket.c:2191\n  __do_sys_sendto net\/socket.c:2203 [inline]\n  __se_sys_sendto net\/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2199\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nCPU: 0 PID: 5033 Comm: syz-executor346 Not tainted 6.9.0-rc1-syzkaller-00005-g928a87efa423 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 02\/29\/2024"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10204df9beda4978bd1d0c2db0d8375bfb03b915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/190d9efa5773f26d6f334b1b8be282c4fa13fd5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/357163fff3a6e48fe74745425a32071ec9caf852","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c1ae6de74e3d2d6333d29a2d3e13e6094596c79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43be590456e1f3566054ce78ae2dbb68cbe1a536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a1b65d1e55d53b397cb27014208be1e04172670","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3adf11d7993518a39bd02b383cfe657ccc0023c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8a6213d70accb403b82924a1c229e733433a5ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35974","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.147","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix q->blkg_list corruption during disk rebind\n\nMultiple gendisk instances can allocated\/added for single request queue\nin case of disk rebind. blkg may still stay in q->blkg_list when calling\nblkcg_init_disk() for rebind, then q->blkg_list becomes corrupted.\n\nFix the list corruption issue by:\n\n- add blkg_init_queue() to initialize q->blkg_list & q->blkcg_mutex only\n- move calling blkg_init_queue() into blk_alloc_queue()\n\nThe list corruption should be started since commit f1c006f1c685 (\"blk-cgroup:\nsynchronize pd_free_fn() from blkg_free_workfn() and blkcg_deactivate_policy()\")\nwhich delays removing blkg from q->blkg_list into blkg_free_workfn()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/740ffad95ca8033bd6e080ed337655b13b4d38ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/858c489d81d659af17a4d11cfaad2afb42e47a76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b8ace080319a866f5dfe9da8e665ae51d971c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35975","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.210","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix transmit scheduler resource leak\n\nInorder to support shaping and scheduling, Upon class creation\nNetdev driver allocates trasmit schedulers.\n\nThe previous patch which added support for Round robin scheduling has\na bug due to which driver is not freeing transmit schedulers post\nclass deletion.\n\nThis patch fixes the same."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7af5582ea67209a23e44be9a9612ba7897be1f47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b34fe77a1b18654233e4e54b334fcaeddf487100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bccb798e07f8bb8b91212fe8ed1e421685449076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35976","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.273","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n\nsyzbot reported an illegal copy in xsk_setsockopt() [1]\n\nMake sure to validate setsockopt() @optlen parameter.\n\n[1]\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420\nRead of size 4 at addr ffff888028c6cde3 by task syz-executor.0\/7549\n\nCPU: 0 PID: 7549 Comm: syz-executor.0 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 03\/27\/2024\nCall Trace:\n <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:114\n  print_address_description mm\/kasan\/report.c:377 [inline]\n  print_report+0x169\/0x550 mm\/kasan\/report.c:488\n  kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n  copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n  copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n  xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420\n  do_sock_setsockopt+0x3af\/0x720 net\/socket.c:2311\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\nRIP: 0033:0x7fb40587de69\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb40665a0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69\nRDX: 0000000000000005 RSI: 000000000000011b RDI: 0000000000000006\nRBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020001980 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08\n <\/TASK>\n\nAllocated by task 7549:\n  kasan_save_stack mm\/kasan\/common.c:47 [inline]\n  kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n  poison_kmalloc_redzone mm\/kasan\/common.c:370 [inline]\n  __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:387\n  kasan_kmalloc include\/linux\/kasan.h:211 [inline]\n  __do_kmalloc_node mm\/slub.c:3966 [inline]\n  __kmalloc+0x233\/0x4a0 mm\/slub.c:3979\n  kmalloc include\/linux\/slab.h:632 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd2f\/0x1040 kernel\/bpf\/cgroup.c:1869\n  do_sock_setsockopt+0x6b4\/0x720 net\/socket.c:2293\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nThe buggy address belongs to the object at ffff888028c6cde0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 1 bytes to the right of\n allocated 2-byte region [ffff888028c6cde0, ffff888028c6cde2)\n\nThe buggy address belongs to the physical page:\npage:ffffea0000a31b00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888028c6c9c0 pfn:0x28c6c\nanon flags: 0xfff00000000800(slab|node=0|zone=1|lastcpupid=0x7ff)\npage_type: 0xffffffff()\nraw: 00fff00000000800 ffff888014c41280 0000000000000000 dead000000000001\nraw: ffff888028c6c9c0 0000000080800057 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223\n  set_page_owner include\/linux\/page_owner.h:31 [inline]\n  post_alloc_hook+0x1ea\/0x210 mm\/page_alloc.c:1533\n  prep_new_page mm\/page_alloc.c:\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/237f3cf13b20db183d3706d997eedc3c49eacd44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a523f14a3f53b46ff0e1fafd215b0bc5f6783aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eb979fbb2479bcd7e049f2f9978b6590dd8a0e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a82984b3c6a7e8c7937dba6e857ddf829d149417","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b143e19dc28c3211f050f7848d87d9b0a170e10c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0a068de65d5b7358e9aff792716afa9333f3922","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35977","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.340","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/chrome: cros_ec_uart: properly fix race condition\n\nThe cros_ec_uart_probe() function calls devm_serdev_device_open() before\nit calls serdev_device_set_client_ops(). This can trigger a NULL pointer\ndereference:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    ...\n    Call Trace:\n     <TASK>\n     ...\n     ? ttyport_receive_buf\n\nA simplified version of crashing code is as follows:\n\n    static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl,\n                                                      const u8 *data,\n                                                      size_t count)\n    {\n            struct serdev_device *serdev = ctrl->serdev;\n\n            if (!serdev || !serdev->ops->receive_buf) \/\/ CRASH!\n                return 0;\n\n            return serdev->ops->receive_buf(serdev, data, count);\n    }\n\nIt assumes that if SERPORT_ACTIVE is set and serdev exists, serdev->ops\nwill also exist. This conflicts with the existing cros_ec_uart_probe()\nlogic, as it first calls devm_serdev_device_open() (which sets\nSERPORT_ACTIVE), and only later sets serdev->ops via\nserdev_device_set_client_ops().\n\nCommit 01f95d42b8f4 (\"platform\/chrome: cros_ec_uart: fix race\ncondition\") attempted to fix a similar race condition, but while doing\nso, made the window of error for this race condition to happen much\nwider.\n\nAttempt to fix the race condition again, making sure we fully setup\nbefore calling devm_serdev_device_open()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e700b384ec13f5bcac9855cb28fcc674f1d3593","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9bb74a93b7daa32313ccaefd0edc529d40daf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfd758041d8b79aa8c3f811b6bd6105379f2f702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35978","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.407","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45d355a926ab40f3ae7bc0b0a00cb0e3e8a5a810","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4beab84fbb50df3be1d8f8a976e6fe882ca65cb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66fab1e120b39f8f47a94186ddee36006fc02ca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75193678cce993aa959e7764b6df2f599886dd06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8478394f76c748862ef179a16f651f752bdafaf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89a32741f4217856066c198a4a7267bcdd1edd67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ab5e44b9bac946bd49fd63264a08cd1ea494e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4cb8382fff6706436b66eafd9c0ee857ff0a9f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35979","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.480","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nraid1: fix use-after-free for original bio in raid1_write_request()\n\nr1_bio->bios[] is used to record new bios that will be issued to\nunderlying disks, however, in raid1_write_request(), r1_bio->bios[]\nwill set to the original bio temporarily. Meanwhile, if blocked rdev\nis set, free_r1bio() will be called causing that all r1_bio->bios[]\nto be freed:\n\nraid1_write_request()\n r1_bio = alloc_r1bio(mddev, bio); -> r1_bio->bios[] is NULL\n for (i = 0;  i < disks; i++) -> for each rdev in conf\n  \/\/ first rdev is normal\n  r1_bio->bios[0] = bio; -> set to original bio\n  \/\/ second rdev is blocked\n  if (test_bit(Blocked, &rdev->flags))\n   break\n\n if (blocked_rdev)\n  free_r1bio()\n   put_all_bios()\n    bio_put(r1_bio->bios[0]) -> original bio is freed\n\nTest scripts:\n\nmdadm -CR \/dev\/md0 -l1 -n4 \/dev\/sd[abcd] --assume-clean\nfio -filename=\/dev\/md0 -ioengine=libaio -rw=write -bs=4k -numjobs=1 \\\n    -iodepth=128 -name=test -direct=1\necho blocked > \/sys\/block\/md0\/md\/rd2\/state\n\nTest result:\n\nBUG bio-264 (Not tainted): Object already free\n-----------------------------------------------------------------------------\n\nAllocated in mempool_alloc_slab+0x24\/0x50 age=1 cpu=1 pid=869\n kmem_cache_alloc+0x324\/0x480\n mempool_alloc_slab+0x24\/0x50\n mempool_alloc+0x6e\/0x220\n bio_alloc_bioset+0x1af\/0x4d0\n blkdev_direct_IO+0x164\/0x8a0\n blkdev_write_iter+0x309\/0x440\n aio_write+0x139\/0x2f0\n io_submit_one+0x5ca\/0xb70\n __do_sys_io_submit+0x86\/0x270\n __x64_sys_io_submit+0x22\/0x30\n do_syscall_64+0xb1\/0x210\n entry_SYSCALL_64_after_hwframe+0x6c\/0x74\nFreed in mempool_free_slab+0x1f\/0x30 age=1 cpu=1 pid=869\n kmem_cache_free+0x28c\/0x550\n mempool_free_slab+0x1f\/0x30\n mempool_free+0x40\/0x100\n bio_free+0x59\/0x80\n bio_put+0xf0\/0x220\n free_r1bio+0x74\/0xb0\n raid1_make_request+0xadf\/0x1150\n md_handle_request+0xc7\/0x3b0\n md_submit_bio+0x76\/0x130\n __submit_bio+0xd8\/0x1d0\n submit_bio_noacct_nocheck+0x1eb\/0x5c0\n submit_bio_noacct+0x169\/0xd40\n submit_bio+0xee\/0x1d0\n blkdev_direct_IO+0x322\/0x8a0\n blkdev_write_iter+0x309\/0x440\n aio_write+0x139\/0x2f0\n\nSince that bios for underlying disks are not allocated yet, fix this\nproblem by using mempool_free() directly to free the r1_bio."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f28d49a328fe20926995d5fbdc92da665596268","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f423f41b7679c09abb26d2bd54be5cbef23c9446","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcf3f7e2fc8a53a6140beee46ec782a4c88e4744","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35980","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.550","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: tlb: Fix TLBI RANGE operand\n\nKVM\/arm64 relies on TLBI RANGE feature to flush TLBs when the dirty\npages are collected by VMM and the page table entries become write\nprotected during live migration. Unfortunately, the operand passed\nto the TLBI RANGE instruction isn't correctly sorted out due to the\ncommit 117940aa6e5f (\"KVM: arm64: Define kvm_tlb_flush_vmid_range()\").\nIt leads to crash on the destination VM after live migration because\nTLBs aren't flushed completely and some of the dirty pages are missed.\n\nFor example, I have a VM where 8GB memory is assigned, starting from\n0x40000000 (1GB). Note that the host has 4KB as the base page size.\nIn the middile of migration, kvm_tlb_flush_vmid_range() is executed\nto flush TLBs. It passes MAX_TLBI_RANGE_PAGES as the argument to\n__kvm_tlb_flush_vmid_range() and __flush_s2_tlb_range_op(). SCALE#3\nand NUM#31, corresponding to MAX_TLBI_RANGE_PAGES, isn't supported\nby __TLBI_RANGE_NUM(). In this specific case, -1 has been returned\nfrom __TLBI_RANGE_NUM() for SCALE#3\/2\/1\/0 and rejected by the loop\nin the __flush_tlb_range_op() until the variable @scale underflows\nand becomes -9, 0xffff708000040000 is set as the operand. The operand\nis wrong since it's sorted out by __TLBI_VADDR_RANGE() according to\ninvalid @scale and @num.\n\nFix it by extending __TLBI_RANGE_NUM() to support the combination of\nSCALE#3 and NUM#31. With the changes, [-1 31] instead of [-1 30] can\nbe returned from the macro, meaning the TLBs for 0x200000 pages in the\nabove example can be flushed in one shoot with SCALE#3 and NUM#31. The\nmacro TLBI_RANGE_MASK is dropped since no one uses it any more. The\ncomments are also adjusted accordingly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/944db7b536baaf49d7e576af36a94f4719552b07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac4ad513de4fba18b4ac0ace132777d0910e8cfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ba51ab24fddef79fc212f9840de54db8fd1685","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35981","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.617","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: Do not send RSS key if it is not supported\n\nThere is a bug when setting the RSS options in virtio_net that can break\nthe whole machine, getting the kernel into an infinite loop.\n\nRunning the following command in any QEMU virtual machine with virtionet\nwill reproduce this problem:\n\n    # ethtool -X eth0  hfunc toeplitz\n\nThis is how the problem happens:\n\n1) ethtool_set_rxfh() calls virtnet_set_rxfh()\n\n2) virtnet_set_rxfh() calls virtnet_commit_rss_command()\n\n3) virtnet_commit_rss_command() populates 4 entries for the rss\nscatter-gather\n\n4) Since the command above does not have a key, then the last\nscatter-gatter entry will be zeroed, since rss_key_size == 0.\nsg_buf_size = vi->rss_key_size;\n\n5) This buffer is passed to qemu, but qemu is not happy with a buffer\nwith zero length, and do the following in virtqueue_map_desc() (QEMU\nfunction):\n\n  if (!sz) {\n      virtio_error(vdev, \"virtio: zero sized buffers are not allowed\");\n\n6) virtio_error() (also QEMU function) set the device as broken\n\n    vdev->broken = true;\n\n7) Qemu bails out, and do not repond this crazy kernel.\n\n8) The kernel is waiting for the response to come back (function\nvirtnet_send_command())\n\n9) The kernel is waiting doing the following :\n\n      while (!virtqueue_get_buf(vi->cvq, &tmp) &&\n\t     !virtqueue_is_broken(vi->cvq))\n\t      cpu_relax();\n\n10) None of the following functions above is true, thus, the kernel\nloops here forever. Keeping in mind that virtqueue_is_broken() does\nnot look at the qemu `vdev->broken`, so, it never realizes that the\nvitio is broken at QEMU side.\n\nFix it by not sending RSS commands if the feature is not available in\nthe device."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/059a49aa2e25c58f90b50151f109dd3c4cdb3a47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28e9a64638cd16bc1ecac9ff74ffeacb9fb652de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43a71c1b4b3a6d4db857b1435d271540279fc7de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/539a2b995a4ed93125cb0efae0f793b00ab2158b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35982","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.687","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04720ea2e6c64459a90ca28570ea78335eccd924","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fe79b2c83461edbbf86ed8a6f3924820ff89259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ca2a5fb54ea2cc43edea614207fcede562d91c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70a8be9dc2fb65d67f8c1e0c88c587e08e2e575d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87b6af1a7683e021710c08fc0551fc078346032f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1f532a3b1e6d2e5559c7ace49322922637a28aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3ddf6904073990492454b1dd1c10a24be8c74c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca54e2671548616ad34885f90d4f26f7adb088f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35983","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.760","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbounds: Use the right number of bits for power-of-two CONFIG_NR_CPUS\n\nbits_per() rounds up to the next power of two when passed a power of\ntwo.  This causes crashes on some machines and configurations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15aa09d6d84629eb5296de30ac0aa19a33512f16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af385f5f4cddf908f663974847a4083b2ff2c79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66297b2ceda841f809637731d287bda3a93b49d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93ba36238db6a74a82feb3dc476e25ea424ad630","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b7c5004d7c5ae062134052a85290869a015814c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d34a516f2635090d36a306f84573e8de3d7374ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebfe41889b762f1933c6762f6624b9724a25bee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35984","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.830","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/357c64ef1ef39b1e7cd91ab6bdd304d043702c83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40f1d79f07b49c8a64a861706e5163f2db4bd95d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e75e222d397c6752b229ed72fc4644c8c36ecde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a09eae9a7db597fe0c1fc91636205b4a25d2620","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fd72404587d7db4acb2d241fd8c387afb0a7aec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91811a31b68d3765b3065f4bb6d7d6d84a7cfc9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad3c3ac7a03be3697114f781193dd3e9d97e6e23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3425674ff68dc521c57c6eabad0cbd20a027d85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35985","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.920","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/eevdf: Prevent vlag from going out of bounds in reweight_eevdf()\n\nIt was possible to have pick_eevdf() return NULL, which then causes a\nNULL-deref. This turned out to be due to entity_eligible() returning\nfalsely negative because of a s64 multiplcation overflow.\n\nSpecifically, reweight_eevdf() computes the vlag without considering\nthe limit placed upon vlag as update_entity_lag() does, and then the\nscaling multiplication (remember that weight is 20bit fixed point) can\noverflow. This then leads to the new vruntime being weird which then\ncauses the above entity_eligible() to go side-ways and claim nothing\nis eligible.\n\nThus limit the range of vlag accordingly.\n\nAll this was quite rare, but fatal when it does happen."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06f27e6d7bf0abf54488259ef36bbf0e1fccb35c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1560d1f6eb6b398bddd80c16676776c0325fe5fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/470d347b14b0ecffa9b39cf8f644fa2351db3efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35986","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.990","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: tusb1210: Resolve charger-det crash if charger psy is unregistered\n\nThe power_supply frame-work is not really designed for there to be\nlong living in kernel references to power_supply devices.\n\nSpecifically unregistering a power_supply while some other code has\na reference to it triggers a WARN in power_supply_unregister():\n\n\tWARN_ON(atomic_dec_return(&psy->use_cnt));\n\nFolllowed by the power_supply still getting removed and the\nbacking data freed anyway, leaving the tusb1210 charger-detect code\nwith a dangling reference, resulting in a crash the next time\ntusb1210_get_online() is called.\n\nFix this by only holding the reference in tusb1210_get_online()\nfreeing it at the end of the function. Note this still leaves\na theoretical race window, but it avoids the issue when manually\nrmmod-ing the charger chip driver during development."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25b3498485ac281e5851700e33b97f12c9533fd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73224a5d2180066c7fe05b4656647601ba08d588","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9827caa5105fb16d1fae2e75c8d0e4662014b3ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf6e4ee5c43690e4c5a8a057bbcd4ff986bed052","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35987","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.057","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix loading 64-bit NOMMU kernels past the start of RAM\n\ncommit 3335068f8721 (\"riscv: Use PUD\/P4D\/PGD pages for the linear\nmapping\") added logic to allow using RAM below the kernel load address.\nHowever, this does not work for NOMMU, where PAGE_OFFSET is fixed to the\nkernel load address. Since that range of memory corresponds to PFNs\nbelow ARCH_PFN_OFFSET, mm initialization runs off the beginning of\nmem_map and corrupts adjacent kernel memory. Fix this by restoring the\nprevious behavior for NOMMU kernels."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aea702dde7e9876fb00571a2602f25130847bf0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b008e327fa570aca210f98c817757649bae56694","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6628e4e2353978af7e3b4ad4fdaab6149acf3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35988","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.120","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix TASK_SIZE on 64-bit NOMMU\n\nOn NOMMU, userspace memory can come from anywhere in physical RAM. The\ncurrent definition of TASK_SIZE is wrong if any RAM exists above 4G,\ncausing spurious failures in the userspace access routines."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04bf2e5f95c1a52e28a7567a507f926efe31c3b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4201b8c8f2c32af321fb50867e68ac6c1cbed4be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52e8a42b11078d2aad4b9ba96503d77c7299168b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6065e736f82c817c9a597a31ee67f0ce4628e948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0f0dbbb1bc49fa0de18e92c36492ff6d804cdaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efdcfa554b6eb228943ef1dd4d023c606be647d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35989","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.190","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Fix oops during rmmod on single-CPU platforms\n\nDuring the removal of the idxd driver, registered offline callback is\ninvoked as part of the clean up process. However, on systems with only\none CPU online, no valid target is available to migrate the\nperf context, resulting in a kernel oops:\n\n    BUG: unable to handle page fault for address: 000000000002a2b8\n    #PF: supervisor write access in kernel mode\n    #PF: error_code(0x0002) - not-present page\n    PGD 1470e1067 P4D 0\n    Oops: 0002 [#1] PREEMPT SMP NOPTI\n    CPU: 0 PID: 20 Comm: cpuhp\/0 Not tainted 6.8.0-rc6-dsa+ #57\n    Hardware name: Intel Corporation AvenueCity\/AvenueCity, BIOS BHSDCRB1.86B.2492.D03.2307181620 07\/18\/2023\n    RIP: 0010:mutex_lock+0x2e\/0x50\n    ...\n    Call Trace:\n    <TASK>\n    __die+0x24\/0x70\n    page_fault_oops+0x82\/0x160\n    do_user_addr_fault+0x65\/0x6b0\n    __pfx___rdmsr_safe_on_cpu+0x10\/0x10\n    exc_page_fault+0x7d\/0x170\n    asm_exc_page_fault+0x26\/0x30\n    mutex_lock+0x2e\/0x50\n    mutex_lock+0x1e\/0x50\n    perf_pmu_migrate_context+0x87\/0x1f0\n    perf_event_cpu_offline+0x76\/0x90 [idxd]\n    cpuhp_invoke_callback+0xa2\/0x4f0\n    __pfx_perf_event_cpu_offline+0x10\/0x10 [idxd]\n    cpuhp_thread_fun+0x98\/0x150\n    smpboot_thread_fn+0x27\/0x260\n    smpboot_thread_fn+0x1af\/0x260\n    __pfx_smpboot_thread_fn+0x10\/0x10\n    kthread+0x103\/0x140\n    __pfx_kthread+0x10\/0x10\n    ret_from_fork+0x31\/0x50\n    __pfx_kthread+0x10\/0x10\n    ret_from_fork_asm+0x1b\/0x30\n    <TASK>\n\nFix the issue by preventing the migration of the perf context to an\ninvalid target."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/023b6390a15a98f9c3aa5e7da78d485d5384a08e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47533176fdcef17b114a6f688bc872901c1ec6bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9edd3aa34d50f27b97be30b2ba4a6af0945ff56b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f221033f5c24659dc6ad7e5cf18fb1b075f4a8be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f976eca36cdf94e32fa4f865db0e7c427c9aa33c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35990","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.257","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma: xilinx_dpdma: Fix locking\n\nThere are several places where either chan->lock or chan->vchan.lock was\nnot held. Add appropriate locking. This fixes lockdep warnings like\n\n[   31.077578] ------------[ cut here ]------------\n[   31.077831] WARNING: CPU: 2 PID: 40 at drivers\/dma\/xilinx\/xilinx_dpdma.c:834 xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.077953] Modules linked in:\n[   31.078019] CPU: 2 PID: 40 Comm: kworker\/u12:1 Not tainted 6.6.20+ #98\n[   31.078102] Hardware name: xlnx,zynqmp (DT)\n[   31.078169] Workqueue: events_unbound deferred_probe_work_func\n[   31.078272] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   31.078377] pc : xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.078473] lr : xilinx_dpdma_chan_queue_transfer+0x270\/0x5e0\n[   31.078550] sp : ffffffc083bb2e10\n[   31.078590] x29: ffffffc083bb2e10 x28: 0000000000000000 x27: ffffff880165a168\n[   31.078754] x26: ffffff880164e920 x25: ffffff880164eab8 x24: ffffff880164d480\n[   31.078920] x23: ffffff880165a148 x22: ffffff880164e988 x21: 0000000000000000\n[   31.079132] x20: ffffffc082aa3000 x19: ffffff880164e880 x18: 0000000000000000\n[   31.079295] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[   31.079453] x14: 0000000000000000 x13: ffffff8802263dc0 x12: 0000000000000001\n[   31.079613] x11: 0001ffc083bb2e34 x10: 0001ff880164e98f x9 : 0001ffc082aa3def\n[   31.079824] x8 : 0001ffc082aa3dec x7 : 0000000000000000 x6 : 0000000000000516\n[   31.079982] x5 : ffffffc7f8d43000 x4 : ffffff88003c9c40 x3 : ffffffffffffffff\n[   31.080147] x2 : ffffffc7f8d43000 x1 : 00000000000000c0 x0 : 0000000000000000\n[   31.080307] Call trace:\n[   31.080340]  xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.080518]  xilinx_dpdma_issue_pending+0x11c\/0x120\n[   31.080595]  zynqmp_disp_layer_update+0x180\/0x3ac\n[   31.080712]  zynqmp_dpsub_plane_atomic_update+0x11c\/0x21c\n[   31.080825]  drm_atomic_helper_commit_planes+0x20c\/0x684\n[   31.080951]  drm_atomic_helper_commit_tail+0x5c\/0xb0\n[   31.081139]  commit_tail+0x234\/0x294\n[   31.081246]  drm_atomic_helper_commit+0x1f8\/0x210\n[   31.081363]  drm_atomic_commit+0x100\/0x140\n[   31.081477]  drm_client_modeset_commit_atomic+0x318\/0x384\n[   31.081634]  drm_client_modeset_commit_locked+0x8c\/0x24c\n[   31.081725]  drm_client_modeset_commit+0x34\/0x5c\n[   31.081812]  __drm_fb_helper_restore_fbdev_mode_unlocked+0x104\/0x168\n[   31.081899]  drm_fb_helper_set_par+0x50\/0x70\n[   31.081971]  fbcon_init+0x538\/0xc48\n[   31.082047]  visual_init+0x16c\/0x23c\n[   31.082207]  do_bind_con_driver.isra.0+0x2d0\/0x634\n[   31.082320]  do_take_over_console+0x24c\/0x33c\n[   31.082429]  do_fbcon_takeover+0xbc\/0x1b0\n[   31.082503]  fbcon_fb_registered+0x2d0\/0x34c\n[   31.082663]  register_framebuffer+0x27c\/0x38c\n[   31.082767]  __drm_fb_helper_initial_config_and_unlock+0x5c0\/0x91c\n[   31.082939]  drm_fb_helper_initial_config+0x50\/0x74\n[   31.083012]  drm_fbdev_dma_client_hotplug+0xb8\/0x108\n[   31.083115]  drm_client_register+0xa0\/0xf4\n[   31.083195]  drm_fbdev_dma_setup+0xb0\/0x1cc\n[   31.083293]  zynqmp_dpsub_drm_init+0x45c\/0x4e0\n[   31.083431]  zynqmp_dpsub_probe+0x444\/0x5e0\n[   31.083616]  platform_probe+0x8c\/0x13c\n[   31.083713]  really_probe+0x258\/0x59c\n[   31.083793]  __driver_probe_device+0xc4\/0x224\n[   31.083878]  driver_probe_device+0x70\/0x1c0\n[   31.083961]  __device_attach_driver+0x108\/0x1e0\n[   31.084052]  bus_for_each_drv+0x9c\/0x100\n[   31.084125]  __device_attach+0x100\/0x298\n[   31.084207]  device_initial_probe+0x14\/0x20\n[   31.084292]  bus_probe_device+0xd8\/0xdc\n[   31.084368]  deferred_probe_work_func+0x11c\/0x180\n[   31.084451]  process_one_work+0x3ac\/0x988\n[   31.084643]  worker_thread+0x398\/0x694\n[   31.084752]  kthread+0x1bc\/0x1c0\n[   31.084848]  ret_from_fork+0x10\/0x20\n[   31.084932] irq event stamp: 64549\n[   31.084970] hardirqs last  enabled at (64548): [<ffffffc081adf35c>] _raw_spin_unlock_irqrestore+0x80\/0x90\n[   31.085157]\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ccac964520a6f19e355652c8ca38af2a7f27076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/244296cc3a155199a8b080d19e645d7d49081a38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bf574183282d219cfa991f7df37aad491d74c11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e3c94767cad5150198e4337c8b91f3bb068e14b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c660be571609e03e7d5972343536a736fcb31557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcdd5bb4a8c81c64c1334d7e0aba41a8829a24de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35991","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.333","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Convert spinlock to mutex to lock evl workqueue\n\ndrain_workqueue() cannot be called safely in a spinlocked context due to\npossible task rescheduling. In the multi-task scenario, calling\nqueue_work() while drain_workqueue() will lead to a Call Trace as\npushing a work on a draining workqueue is not permitted in spinlocked\ncontext.\n    Call Trace:\n    <TASK>\n    ? __warn+0x7d\/0x140\n    ? __queue_work+0x2b2\/0x440\n    ? report_bug+0x1f8\/0x200\n    ? handle_bug+0x3c\/0x70\n    ? exc_invalid_op+0x18\/0x70\n    ? asm_exc_invalid_op+0x1a\/0x20\n    ? __queue_work+0x2b2\/0x440\n    queue_work_on+0x28\/0x30\n    idxd_misc_thread+0x303\/0x5a0 [idxd]\n    ? __schedule+0x369\/0xb40\n    ? __pfx_irq_thread_fn+0x10\/0x10\n    ? irq_thread+0xbc\/0x1b0\n    irq_thread_fn+0x21\/0x70\n    irq_thread+0x102\/0x1b0\n    ? preempt_count_add+0x74\/0xa0\n    ? __pfx_irq_thread_dtor+0x10\/0x10\n    ? __pfx_irq_thread+0x10\/0x10\n    kthread+0x103\/0x140\n    ? __pfx_kthread+0x10\/0x10\n    ret_from_fork+0x31\/0x50\n    ? __pfx_kthread+0x10\/0x10\n    ret_from_fork_asm+0x1b\/0x30\n    <\/TASK>\n\nThe current implementation uses a spinlock to protect event log workqueue\nand will lead to the Call Trace due to potential task rescheduling.\n\nTo address the locking issue, convert the spinlock to mutex, allowing\nthe drain_workqueue() to be called in a safe mutex-locked context.\n\nThis change ensures proper synchronization when accessing the event log\nworkqueue, preventing potential Call Trace and improving the overall\nrobustness of the code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/758071a35d9f3ffd84ff12169d081412a2f5f098","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9b732a9f73eadc638abdcf0a6d39bc7a0c1af5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5638de827cff0fce77007e426ec0ffdedf68a44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35992","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.400","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: marvell: a3700-comphy: Fix out of bounds read\n\nThere is an out of bounds read access of 'gbe_phy_init_fix[fix_idx].addr'\nevery iteration after 'fix_idx' reaches 'ARRAY_SIZE(gbe_phy_init_fix)'.\n\nMake sure 'gbe_phy_init[addr]' is used when all elements of\n'gbe_phy_init_fix' array are handled.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/40406dfbc060503d2e0a9e637e98493c54997b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/610f175d2e16fb2436ba7974b990563002c20d07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/976df695f579bbb2914114b4e9974fe4ed1eb813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4308bc22b9d46cf33165c9dfaeebcf29cd56f04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35993","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.463","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: turn folio_test_hugetlb into a PageType\n\nThe current folio_test_hugetlb() can be fooled by a concurrent folio split\ninto returning true for a folio which has never belonged to hugetlbfs. \nThis can't happen if the caller holds a refcount on it, but we have a few\nplaces (memory-failure, compaction, procfs) which do not and should not\ntake a speculative reference.\n\nSince hugetlb pages do not use individual page mapcounts (they are always\nfully mapped and use the entire_mapcount field to record the number of\nmappings), the PageType field is available now that page_mapcount()\nignores the value in this field.\n\nIn compaction and with CONFIG_DEBUG_VM enabled, the current implementation\ncan result in an oops, as reported by Luis. This happens since 9c5ccf2db04b\n(\"mm: remove HUGETLB_PAGE_DTOR\") effectively added some VM_BUG_ON() checks\nin the PageHuge() testing path.\n\n[willy@infradead.org: update vmcoreinfo]\n  Link: https:\/\/lkml.kernel.org\/r\/ZgGZUvsdhaT1Va-T@casper.infradead.org"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2431b5f2650dfc47ce782d1ca7b02d6b3916976f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fdcc5b6359dfdaa52a55033bf50e2cedd66eb32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d99e3140a4d33e26066183ff727d8f02f56bec64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35994","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.530","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix memory related IO errors and crashes\n\nIt turns out that while the QSEECOM APP_SEND command has specific fields\nfor request and response buffers, uefisecapp expects them both to be in\na single memory region. Failure to adhere to this has (so far) resulted\nin either no response being written to the response buffer (causing an\nEIO to be emitted down the line), the SCM call to fail with EINVAL\n(i.e., directly from TZ\/firmware), or the device to be hard-reset.\n\nWhile this issue can be triggered deterministically, in the current form\nit seems to happen rather sporadically (which is why it has gone\nunnoticed during earlier testing). This is likely due to the two\nkzalloc() calls (for request and response) being directly after each\nother. Which means that those likely return consecutive regions most of\nthe time, especially when not much else is going on in the system.\n\nFix this by allocating a single memory region for both request and\nresponse buffers, properly aligning both structs inside it. This\nunfortunately also means that the qcom_scm_qseecom_app_send() interface\nneeds to be restructured, as it should no longer map the DMA regions\nseparately. Therefore, move the responsibility of DMA allocation (or\nmapping) to the caller."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/dd22b34fb53cb04b13b2f5eee5c9200bb091fc88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed09f81eeaa8f9265e1787282cb283f10285c259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35995","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.597","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Use access_width over bit_width for system memory accesses\n\nTo align with ACPI 6.3+, since bit_width can be any 8-bit value, it\ncannot be depended on to be always on a clean 8b boundary. This was\nuncovered on the Cobalt 100 platform.\n\nSError Interrupt on CPU26, code 0xbe000011 -- SError\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n pstate: 62400009 (nZCv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)\n pc : cppc_get_perf_caps+0xec\/0x410\n lr : cppc_get_perf_caps+0xe8\/0x410\n sp : ffff8000155ab730\n x29: ffff8000155ab730 x28: ffff0080139d0038 x27: ffff0080139d0078\n x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff\n x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000\n x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff\n x17: 0000000000000000 x16: ffffdc7e111bad04 x15: ffff00802b251008\n x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006\n x11: ffffdc7e128f4420 x10: 0000000000000000 x9 : ffffdc7e111badec\n x8 : ffff00802b251980 x7 : 0000000000000000 x6 : ffff0080139d0028\n x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff\n x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000\n Kernel panic - not syncing: Asynchronous SError Interrupt\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted\n5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n Call trace:\n  dump_backtrace+0x0\/0x1e0\n  show_stack+0x24\/0x30\n  dump_stack_lvl+0x8c\/0xb8\n  dump_stack+0x18\/0x34\n  panic+0x16c\/0x384\n  add_taint+0x0\/0xc0\n  arm64_serror_panic+0x7c\/0x90\n  arm64_is_fatal_ras_serror+0x34\/0xa4\n  do_serror+0x50\/0x6c\n  el1h_64_error_handler+0x40\/0x74\n  el1h_64_error+0x7c\/0x80\n  cppc_get_perf_caps+0xec\/0x410\n  cppc_cpufreq_cpu_init+0x74\/0x400 [cppc_cpufreq]\n  cpufreq_online+0x2dc\/0xa30\n  cpufreq_add_dev+0xc0\/0xd4\n  subsys_interface_register+0x134\/0x14c\n  cpufreq_register_driver+0x1b0\/0x354\n  cppc_cpufreq_init+0x1a8\/0x1000 [cppc_cpufreq]\n  do_one_initcall+0x50\/0x250\n  do_init_module+0x60\/0x27c\n  load_module+0x2300\/0x2570\n  __do_sys_finit_module+0xa8\/0x114\n  __arm64_sys_finit_module+0x2c\/0x3c\n  invoke_syscall+0x78\/0x100\n  el0_svc_common.constprop.0+0x180\/0x1a0\n  do_el0_svc+0x84\/0xa0\n  el0_svc+0x2c\/0xc0\n  el0t_64_sync_handler+0xa4\/0x12c\n  el0t_64_sync+0x1a4\/0x1a8\n\nInstead, use access_width to determine the size and use the offset and\nwidth to shift and mask the bits to read\/write out. Make sure to add a\ncheck for system memory since pcc redefines the access_width to\nsubspace id.\n\nIf access_width is not set, then fall back to using bit_width.\n\n[ rjw: Subject and changelog edits, comment adjustments ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01fc53be672acae37e611c80cc0b4f3939584de3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b890ae474d19800a6be1696df7fb4d9a41676e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f4a4d63a193be6fd530d180bb13c3592052904c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4949affd5288b867cdf115f5b08d6166b2027f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cb6b12b78dcd8867a3fdbb1b6d0ed1df2b208d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dfd79ed04c578f1d9a9a41ba5b2015cf9f03fc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b54c4632946ae42f2b39ed38abd909bbf78cbcc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35996","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.670","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpu: Re-enable CPU mitigations by default for !X86 architectures\n\nRename x86's to CPU_MITIGATIONS, define it in generic code, and force it\non for all architectures exception x86.  A recent commit to turn\nmitigations off by default if SPECULATION_MITIGATIONS=n kinda sorta\nmissed that \"cpu_mitigations\" is completely generic, whereas\nSPECULATION_MITIGATIONS is x86-specific.\n\nRename x86's SPECULATIVE_MITIGATIONS instead of keeping both and have it\nselect CPU_MITIGATIONS, as having two configs for the same thing is\nunnecessary and confusing.  This will also allow x86 to use the knob to\nmanage mitigations that aren't strictly related to speculative\nexecution.\n\nUse another Kconfig to communicate to common code that CPU_MITIGATIONS\nis already defined instead of having x86's menu depend on the common\nCPU_MITIGATIONS.  This allows keeping a single point of contact for all\nof x86's mitigations, and it's not clear that other architectures *want*\nto allow disabling mitigations at compile-time."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36b32816fbab267611f073223f1b0b816ec5920f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38f17d1fbb5bfb56ca1419e2d06376d57a9396f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8292f4f8dd1b005d0688d726261004f816ef730a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af6d6a923b40bf6471e44067ac61cc5814b48e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd8547ebc187037cc69441a15c1441aeaab80f49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe42754b94a42d08cf9501790afc25c4f6a5f631","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35997","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.960","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent lock-up\n\nThe flag I2C_HID_READ_PENDING is used to serialize I2C operations.\nHowever, this is not necessary, because I2C core already has its own\nlocking for that.\n\nMore importantly, this flag can cause a lock-up: if the flag is set in\ni2c_hid_xfer() and an interrupt happens, the interrupt handler\n(i2c_hid_irq) will check this flag and return immediately without doing\nanything, then the interrupt handler will be invoked again in an\ninfinite loop.\n\nSince interrupt handler is an RT task, it takes over the CPU and the\nflag-clearing task never gets scheduled, thus we have a lock-up.\n\nDelete this unnecessary flag."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0561b65fbd53d3e788c5b0222d9112ca016fd6a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21bfca822cfc1e71796124e93b46e0d9fa584401","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29e94f295bad5be59cf4271a93e22cdcf5536722","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/418c5575d56410c6e186ab727bf32ae32447d497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5095b93021b899f54c9355bebf36d78854c33a22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c0f59e47a90c54d0153f8ddc0f80d7a36207d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b65fb50e04a95eec34a9d1bc138454a98a5578d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c448a9fd50f77e8fb9156ff64848aa4295eb3003","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35998","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.030","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix lock ordering potential deadlock in cifs_sync_mid_result\n\nCoverity spotted that the cifs_sync_mid_result function could deadlock\n\n\"Thread deadlock (ORDER_REVERSAL) lock_order: Calling spin_lock acquires\nlock TCP_Server_Info.srv_lock while holding lock TCP_Server_Info.mid_lock\"\n\nAddresses-Coverity: 1590401 (\"Thread deadlock (ORDER_REVERSAL)\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/699f8958dece132709c0bff6a9700999a2a63b75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8248224ab5b8ca7559b671917c224296a4d671fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8861fd5180476f45f9e8853db154600469a0284f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7a4bca289e50bb4b2650f845c41bb3e453f4c66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35999","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.100","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: missing lock when picking channel\n\nCoverity spotted a place where we should have been holding the\nchannel lock when accessing the ses channel index.\n\nAddresses-Coverity: 1582039 (\"Data race condition (MISSING_LOCK)\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fcf7e219448e937681216353c9a58abae6d3c2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60ab245292280905603bc0d3654f4cf8fceccb00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8094a600245e9b28eb36a13036f202ad67c1f887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98c7ed29cd754ae7475dc7cb3f33399fda902729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36000","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.163","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps:\/\/lore.kernel.org\/all\/000000000000ee06de0616177560@google.com\/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c806333efea1000a2a9620926f560ad2e1ca7cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/538faabf31e9c53d8c870d114846fda958a0de10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b76b46902c2d0395488c8412e1116c2486cdfcb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6c5d21db16a0910152ec8aa9d5a7aed72694505","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36001","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.230","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix the pre-flush when appending to a file in writethrough mode\n\nIn netfs_perform_write(), when the file is marked NETFS_ICTX_WRITETHROUGH\nor O_*SYNC or RWF_*SYNC was specified, write-through caching is performed\non a buffered file.  When setting up for write-through, we flush any\nconflicting writes in the region and wait for the write to complete,\nfailing if there's a write error to return.\n\nThe issue arises if we're writing at or above the EOF position because we\nskip the flush and - more importantly - the wait.  This becomes a problem\nif there's a partial folio at the end of the file that is being written out\nand we want to make a write to it too.  Both the already-running write and\nthe write we start both want to clear the writeback mark, but whoever is\nsecond causes a warning looking something like:\n\n    ------------[ cut here ]------------\n    R=00000012: folio 11 is not under writeback\n    WARNING: CPU: 34 PID: 654 at fs\/netfs\/write_collect.c:105\n    ...\n    CPU: 34 PID: 654 Comm: kworker\/u386:27 Tainted: G S ...\n    ...\n    Workqueue: events_unbound netfs_write_collection_worker\n    ...\n    RIP: 0010:netfs_writeback_lookup_folio\n\nFix this by making the flush-and-wait unconditional.  It will do nothing if\nthere are no folios in the pagecache and will return quickly if there are\nno folios in the region specified.\n\nFurther, move the WBC attachment above the flush call as the flush is going\nto attach a WBC and detach it again if it is not present - and since we\nneed one anyway we might as well share it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5eaf23b2e81349f6614f88396dc468fda89fc0b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c97f59e276d4e93480f29a70accbd0d7273cf3f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36002","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.293","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix dpll_pin_on_pin_register() for multiple parent pins\n\nIn scenario where pin is registered with multiple parent pins via\ndpll_pin_on_pin_register(..), all belonging to the same dpll device.\nA second call to dpll_pin_on_pin_unregister(..) would cause a call trace,\nas it tries to use already released registration resources (due to fix\nintroduced in b446631f355e). In this scenario pin was registered twice,\nso resources are not yet expected to be release until each registered\npin\/pin pair is unregistered.\n\nCurrently, the following crash\/call trace is produced when ice driver is\nremoved on the system with installed E810T NIC which includes dpll device:\n\nWARNING: CPU: 51 PID: 9155 at drivers\/dpll\/dpll_core.c:809 dpll_pin_ops+0x20\/0x30\nRIP: 0010:dpll_pin_ops+0x20\/0x30\nCall Trace:\n ? __warn+0x7f\/0x130\n ? dpll_pin_ops+0x20\/0x30\n dpll_msg_add_pin_freq+0x37\/0x1d0\n dpll_cmd_pin_get_one+0x1c0\/0x400\n ? __nlmsg_put+0x63\/0x80\n dpll_pin_event_send+0x93\/0x140\n dpll_pin_on_pin_unregister+0x3f\/0x100\n ice_dpll_deinit_pins+0xa1\/0x230 [ice]\n ice_remove+0xf1\/0x210 [ice]\n\nFix by adding a parent pointer as a cookie when creating a registration,\nalso when searching for it. For the regular pins pass NULL, this allows to\ncreate separated registration for each parent the pin is registered with."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3e1cf62d18220a3aa97e084e7a3552debece9fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36003","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.360","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix LAG and VF lock dependency in ice_reset_vf()\n\n9f74a3dfcf83 (\"ice: Fix VF Reset paths when interface in a failed over\naggregate\"), the ice driver has acquired the LAG mutex in ice_reset_vf().\nThe commit placed this lock acquisition just prior to the acquisition of\nthe VF configuration lock.\n\nIf ice_reset_vf() acquires the configuration lock via the ICE_VF_RESET_LOCK\nflag, this could deadlock with ice_vc_cfg_qs_msg() because it always\nacquires the locks in the order of the VF configuration lock and then the\nLAG mutex.\n\nLockdep reports this violation almost immediately on creating and then\nremoving 2 VF:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-rc6 #54 Tainted: G        W  O\n------------------------------------------------------\nkworker\/60:3\/6771 is trying to acquire lock:\nff40d43e099380a0 (&vf->cfg_lock){+.+.}-{3:3}, at: ice_reset_vf+0x22f\/0x4d0 [ice]\n\nbut task is already holding lock:\nff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7\/0x4d0 [ice]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&pf->lag_mutex){+.+.}-{3:3}:\n       __lock_acquire+0x4f8\/0xb40\n       lock_acquire+0xd4\/0x2d0\n       __mutex_lock+0x9b\/0xbf0\n       ice_vc_cfg_qs_msg+0x45\/0x690 [ice]\n       ice_vc_process_vf_msg+0x4f5\/0x870 [ice]\n       __ice_clean_ctrlq+0x2b5\/0x600 [ice]\n       ice_service_task+0x2c9\/0x480 [ice]\n       process_one_work+0x1e9\/0x4d0\n       worker_thread+0x1e1\/0x3d0\n       kthread+0x104\/0x140\n       ret_from_fork+0x31\/0x50\n       ret_from_fork_asm+0x1b\/0x30\n\n-> #0 (&vf->cfg_lock){+.+.}-{3:3}:\n       check_prev_add+0xe2\/0xc50\n       validate_chain+0x558\/0x800\n       __lock_acquire+0x4f8\/0xb40\n       lock_acquire+0xd4\/0x2d0\n       __mutex_lock+0x9b\/0xbf0\n       ice_reset_vf+0x22f\/0x4d0 [ice]\n       ice_process_vflr_event+0x98\/0xd0 [ice]\n       ice_service_task+0x1cc\/0x480 [ice]\n       process_one_work+0x1e9\/0x4d0\n       worker_thread+0x1e1\/0x3d0\n       kthread+0x104\/0x140\n       ret_from_fork+0x31\/0x50\n       ret_from_fork_asm+0x1b\/0x30\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n       CPU0                    CPU1\n       ----                    ----\n  lock(&pf->lag_mutex);\n                               lock(&vf->cfg_lock);\n                               lock(&pf->lag_mutex);\n  lock(&vf->cfg_lock);\n\n *** DEADLOCK ***\n4 locks held by kworker\/60:3\/6771:\n #0: ff40d43e05428b38 ((wq_completion)ice){+.+.}-{0:0}, at: process_one_work+0x176\/0x4d0\n #1: ff50d06e05197e58 ((work_completion)(&pf->serv_task)){+.+.}-{0:0}, at: process_one_work+0x176\/0x4d0\n #2: ff40d43ea1960e50 (&pf->vfs.table_lock){+.+.}-{3:3}, at: ice_process_vflr_event+0x48\/0xd0 [ice]\n #3: ff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7\/0x4d0 [ice]\n\nstack backtrace:\nCPU: 60 PID: 6771 Comm: kworker\/60:3 Tainted: G        W  O       6.8.0-rc6 #54\nHardware name:\nWorkqueue: ice ice_service_task [ice]\nCall Trace:\n <TASK>\n dump_stack_lvl+0x4a\/0x80\n check_noncircular+0x12d\/0x150\n check_prev_add+0xe2\/0xc50\n ? save_trace+0x59\/0x230\n ? add_chain_cache+0x109\/0x450\n validate_chain+0x558\/0x800\n __lock_acquire+0x4f8\/0xb40\n ? lockdep_hardirqs_on+0x7d\/0x100\n lock_acquire+0xd4\/0x2d0\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? lock_is_held_type+0xc7\/0x120\n __mutex_lock+0x9b\/0xbf0\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? rcu_is_watching+0x11\/0x50\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ice_reset_vf+0x22f\/0x4d0 [ice]\n ? process_one_work+0x176\/0x4d0\n ice_process_vflr_event+0x98\/0xd0 [ice]\n ice_service_task+0x1cc\/0x480 [ice]\n process_one_work+0x1e9\/0x4d0\n worker_thread+0x1e1\/0x3d0\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0x104\/0x140\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x31\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nTo avoid deadlock, we must acquire the LAG \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/740717774dc37338404d10726967d582414f638c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96fdd1f6b4ed72a741fb0eb705c0e13049b8721f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de8631d8c9df08440268630200e64b623a5f69e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36004","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.427","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nIssue reported by customer during SRIOV testing, call trace:\nWhen both i40e and the i40iw driver are loaded, a warning\nin check_flush_dependency is being triggered. This seems\nto be because of the i40e driver workqueue is allocated with\nthe WQ_MEM_RECLAIM flag, and the i40iw one is not.\n\nSimilar error was encountered on ice too and it was fixed by\nremoving the flag. Do the same for i40e too.\n\n[Feb 9 09:08] ------------[ cut here ]------------\n[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is\nflushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel\/workqueue.c:2966\ncheck_flush_dependency+0x10b\/0x120\n[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq\nsnd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4\nnls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr\nrfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma\nintel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif\nisst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal\nintel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core\niTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore\nioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich\nintel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad\nxfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe\ndrm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel\nlibata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror\ndm_region_hash dm_log dm_mod fuse\n[  +0.000050] CPU: 0 PID: 937 Comm: kworker\/0:3 Kdump: loaded Not\ntainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1\n[  +0.000003] Hardware name: Intel Corporation S2600BPB\/S2600BPB, BIOS\nSE5C620.86B.02.01.0013.121520200651 12\/15\/2020\n[  +0.000001] Workqueue: i40e i40e_service_task [i40e]\n[  +0.000024] RIP: 0010:check_flush_dependency+0x10b\/0x120\n[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48\n81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd\nff <0f> 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90\n[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282\n[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:\n0000000000000027\n[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:\nffff94d47f620bc0\n[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:\n00000000ffff7fff\n[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:\nffff94c5451ea180\n[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:\nffff94c5f1330ab0\n[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)\nknlGS:0000000000000000\n[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:\n00000000007706f0\n[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[  +0.000001] PKRU: 55555554\n[  +0.000001] Call Trace:\n[  +0.000001]  <TASK>\n[  +0.000002]  ? __warn+0x80\/0x130\n[  +0.000003]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  ? report_bug+0x195\/0x1a0\n[  +0.000005]  ? handle_bug+0x3c\/0x70\n[  +0.000003]  ? exc_invalid_op+0x14\/0x70\n[  +0.000002]  ? asm_exc_invalid_op+0x16\/0x20\n[  +0.000006]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  __flush_workqueue+0x126\/0x3f0\n[  +0.000015]  ib_cache_cleanup_one+0x1c\/0xe0 [ib_core]\n[  +0.000056]  __ib_unregister_device+0x6a\/0xb0 [ib_core]\n[  +0.000023]  ib_unregister_device_and_put+0x34\/0x50 [ib_core]\n[  +0.000020]  i40iw_close+0x4b\/0x90 [irdma]\n[  +0.000022]  i40e_notify_client_of_netdev_close+0x54\/0xc0 [i40e]\n[  +0.000035]  i40e_service_task+0x126\/0x190 [i40e]\n[  +0.000024]  process_one_work+0x174\/0x340\n[  +0.000003]  worker_th\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09b54d29f05129b092f7c793a70b689ffb3c7b2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/152ed360cf2d273f88fc99a518b7eb868aae2939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1594dac8b1ed78f9e75c263327e198a2e5e25b0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cc7d150550cc981aceedf008f5459193282425c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/546d0fe9d76e8229a67369f9cb61e961d99038bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d6105f637883c8c09825e962308c06e977de4f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbbb2404340dd6178e281bd427c271f7d5ec1d22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff7431f898dd00892a545b7d0ce7adf5b926944f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36005","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.500","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: honor table dormant flag from netdev release event path\n\nCheck for table dormant flag otherwise netdev release event path tries\nto unregister an already unregistered hook.\n\n[524854.857999] ------------[ cut here ]------------\n[524854.858010] WARNING: CPU: 0 PID: 3386599 at net\/netfilter\/core.c:501 __nf_unregister_net_hook+0x21a\/0x260\n[...]\n[524854.858848] CPU: 0 PID: 3386599 Comm: kworker\/u32:2 Not tainted 6.9.0-rc3+ #365\n[524854.858869] Workqueue: netns cleanup_net\n[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a\/0x260\n[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff <0f> 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41\n[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246\n[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a\n[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438\n[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34\n[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005\n[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00\n[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0\n[524854.859000] Call Trace:\n[524854.859006]  <TASK>\n[524854.859013]  ? __warn+0x9f\/0x1a0\n[524854.859027]  ? __nf_unregister_net_hook+0x21a\/0x260\n[524854.859044]  ? report_bug+0x1b1\/0x1e0\n[524854.859060]  ? handle_bug+0x3c\/0x70\n[524854.859071]  ? exc_invalid_op+0x17\/0x40\n[524854.859083]  ? asm_exc_invalid_op+0x1a\/0x20\n[524854.859100]  ? __nf_unregister_net_hook+0x6a\/0x260\n[524854.859116]  ? __nf_unregister_net_hook+0x21a\/0x260\n[524854.859135]  nf_tables_netdev_event+0x337\/0x390 [nf_tables]\n[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10\/0x10 [nf_tables]\n[524854.859461]  ? packet_notifier+0xb3\/0x360\n[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11\/0x40\n[524854.859489]  ? dcbnl_netdevice_event+0x35\/0x140\n[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10\/0x10 [nf_tables]\n[524854.859661]  notifier_call_chain+0x7d\/0x140\n[524854.859677]  unregister_netdevice_many_notify+0x5e1\/0xae0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13ba94f6cc820fdea15efeaa17d4c722874eebf9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c45feb3c288cf44a529e2657b36c259d86497d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8260c980aee7d8d8a3db39faf19c391d2f898816","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e30abc9ace4f0add4cd761dfdbfaebae5632dd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca34c40d1c22c555fa7f4a21a1c807fea7290a0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4bb6da24de336a7899033a65490ed2d892efa5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36006","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.570","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix incorrect list API usage\n\nBoth the function that migrates all the chunks within a region and the\nfunction that migrates all the entries within a chunk call\nlist_first_entry() on the respective lists without checking that the\nlists are not empty. This is incorrect usage of the API, which leads to\nthe following warning [1].\n\nFix by returning if the lists are empty as there is nothing to migrate\nin this case.\n\n[1]\nWARNING: CPU: 0 PID: 6437 at drivers\/net\/ethernet\/mellanox\/mlxsw\/spectrum_acl_tcam.c:1266 mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1\/0>\nModules linked in:\nCPU: 0 PID: 6437 Comm: kworker\/0:37 Not tainted 6.9.0-rc3-custom-00883-g94a65f079ef6 #39\nHardware name: Mellanox Technologies Ltd. MSN3700\/VMOD0005, BIOS 5.11 01\/06\/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1\/0x2c0\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c\/0x4a0\n process_one_work+0x151\/0x370\n worker_thread+0x2cb\/0x3e0\n kthread+0xd0\/0x100\n ret_from_fork+0x34\/0x50\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09846c2309b150b8ce4e0ce96f058197598fc530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b2c13b670b168e324e1cf109e67056a20fd610a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4526a56e02da3725db979358964df9cd9c567154","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64435b64e43d8ee60faa46c0cd04e323e8b2a7b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab4ecfb627338e440ae11def004c524a00d93e40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af8b593c3dd9df82cb199be65863af004b09fd97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b377add0f0117409c418ddd6504bd682ebe0bf79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36007","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.637","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix warning during rehash\n\nAs previously explained, the rehash delayed work migrates filters from\none region to another. This is done by iterating over all chunks (all\nthe filters with the same priority) in the region and in each chunk\niterating over all the filters.\n\nWhen the work runs out of credits it stores the current chunk and entry\nas markers in the per-work context so that it would know where to resume\nthe migration from the next time the work is scheduled.\n\nUpon error, the chunk marker is reset to NULL, but without resetting the\nentry markers despite being relative to it. This can result in migration\nbeing resumed from an entry that does not belong to the chunk being\nmigrated. In turn, this will eventually lead to a chunk being iterated\nover as if it is an entry. Because of how the two structures happen to\nbe defined, this does not lead to KASAN splats, but to warnings such as\n[1].\n\nFix by creating a helper that resets all the markers and call it from\nall the places the currently only reset the chunk marker. For good\nmeasures also call it when starting a completely new rehash. Add a\nwarning to avoid future cases.\n\n[1]\nWARNING: CPU: 7 PID: 1076 at drivers\/net\/ethernet\/mellanox\/mlxsw\/core_acl_flex_keys.c:407 mlxsw_afk_encode+0x242\/0x2f0\nModules linked in:\nCPU: 7 PID: 1076 Comm: kworker\/7:24 Tainted: G        W          6.9.0-rc3-custom-00880-g29e61d91b77b #29\nHardware name: Mellanox Technologies Ltd. MSN3700\/VMOD0005, BIOS 5.11 01\/06\/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_afk_encode+0x242\/0x2f0\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_atcam_entry_add+0xd9\/0x3c0\n mlxsw_sp_acl_tcam_entry_create+0x5e\/0xa0\n mlxsw_sp_acl_tcam_vchunk_migrate_all+0x109\/0x290\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c\/0x470\n process_one_work+0x151\/0x370\n worker_thread+0x2cb\/0x3e0\n kthread+0xd0\/0x100\n ret_from_fork+0x34\/0x50\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/039992b6d2df097c65f480dcf269de3d2656f573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b88631855026b55cad901ac28d081e0f358e596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17e9e0bbae652b9b2049e51699e93dfa60b2988d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d76bd2a0034d0d08045c1c6adf2235d88982952","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/743edc8547a92b6192aa1f1b6bb78233fa21dc9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/751d352858108314efd33dddd5a9a2b6bf7d6916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e890456051fe8c57944b911defb3e6de91315861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36008","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.703","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: check for NULL idev in ip_route_use_hint()\n\nsyzbot was able to trigger a NULL deref in fib_validate_source()\nin an old tree [1].\n\nIt appears the bug exists in latest trees.\n\nAll calls to __in_dev_get_rcu() must be checked for a NULL result.\n\n[1]\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 2 PID: 3257 Comm: syz-executor.3 Not tainted 5.10.0-syzkaller #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n RIP: 0010:fib_validate_source+0xbf\/0x15a0 net\/ipv4\/fib_frontend.c:425\nCode: 18 f2 f2 f2 f2 42 c7 44 20 23 f3 f3 f3 f3 48 89 44 24 78 42 c6 44 20 27 f3 e8 5d 88 48 fc 4c 89 e8 48 c1 e8 03 48 89 44 24 18 <42> 80 3c 20 00 74 08 4c 89 ef e8 d2 15 98 fc 48 89 5c 24 10 41 bf\nRSP: 0018:ffffc900015fee40 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88800f7a4000 RCX: ffff88800f4f90c0\nRDX: 0000000000000000 RSI: 0000000004001eac RDI: ffff8880160c64c0\nRBP: ffffc900015ff060 R08: 0000000000000000 R09: ffff88800f7a4000\nR10: 0000000000000002 R11: ffff88800f4f90c0 R12: dffffc0000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: ffff88800f7a4000\nFS:  00007f938acfe6c0(0000) GS:ffff888058c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f938acddd58 CR3: 000000001248e000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  ip_route_use_hint+0x410\/0x9b0 net\/ipv4\/route.c:2231\n  ip_rcv_finish_core+0x2c4\/0x1a30 net\/ipv4\/ip_input.c:327\n  ip_list_rcv_finish net\/ipv4\/ip_input.c:612 [inline]\n  ip_sublist_rcv+0x3ed\/0xe50 net\/ipv4\/ip_input.c:638\n  ip_list_rcv+0x422\/0x470 net\/ipv4\/ip_input.c:673\n  __netif_receive_skb_list_ptype net\/core\/dev.c:5572 [inline]\n  __netif_receive_skb_list_core+0x6b1\/0x890 net\/core\/dev.c:5620\n  __netif_receive_skb_list net\/core\/dev.c:5672 [inline]\n  netif_receive_skb_list_internal+0x9f9\/0xdc0 net\/core\/dev.c:5764\n  netif_receive_skb_list+0x55\/0x3e0 net\/core\/dev.c:5816\n  xdp_recv_frames net\/bpf\/test_run.c:257 [inline]\n  xdp_test_run_batch net\/bpf\/test_run.c:335 [inline]\n  bpf_test_run_xdp_live+0x1818\/0x1d00 net\/bpf\/test_run.c:363\n  bpf_prog_test_run_xdp+0x81f\/0x1170 net\/bpf\/test_run.c:1376\n  bpf_prog_test_run+0x349\/0x3c0 kernel\/bpf\/syscall.c:3736\n  __sys_bpf+0x45c\/0x710 kernel\/bpf\/syscall.c:5115\n  __do_sys_bpf kernel\/bpf\/syscall.c:5201 [inline]\n  __se_sys_bpf kernel\/bpf\/syscall.c:5199 [inline]\n  __x64_sys_bpf+0x7c\/0x90 kernel\/bpf\/syscall.c:5199"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03b5a9b2b526862b21bcc31976e393a6e63785d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58a4c9b1e5a3e53c9148e80b90e1e43897ce77d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a25bfd12733a8f38f8ca47c581f876c3d481ac0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7da0f91681c4902bc5c210356fdd963b04d5d1d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8240c7308c941db4d9a0a91b54eca843c616a655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c71ea3534ec0936fc57e6fb271c7cc6a2f68c295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36009","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.773","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix netdev refcount issue\n\nThe dev_tracker is added to ax25_cb in ax25_bind(). When the\nax25 device is detaching, the dev_tracker of ax25_cb should be\ndeallocated in ax25_kill_by_device() instead of the dev_tracker\nof ax25_dev. The log reported by ref_tracker is shown below:\n\n[   80.884935] ref_tracker: reference already released.\n[   80.885150] ref_tracker: allocated in:\n[   80.885349]  ax25_dev_device_up+0x105\/0x540\n[   80.885730]  ax25_device_event+0xa4\/0x420\n[   80.885730]  notifier_call_chain+0xc9\/0x1e0\n[   80.885730]  __dev_notify_flags+0x138\/0x280\n[   80.885730]  dev_change_flags+0xd7\/0x180\n[   80.885730]  dev_ifsioc+0x6a9\/0xa30\n[   80.885730]  dev_ioctl+0x4d8\/0xd90\n[   80.885730]  sock_do_ioctl+0x1c2\/0x2d0\n[   80.885730]  sock_ioctl+0x38b\/0x4f0\n[   80.885730]  __se_sys_ioctl+0xad\/0xf0\n[   80.885730]  do_syscall_64+0xc4\/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n[   80.885730] ref_tracker: freed in:\n[   80.885730]  ax25_device_event+0x272\/0x420\n[   80.885730]  notifier_call_chain+0xc9\/0x1e0\n[   80.885730]  dev_close_many+0x272\/0x370\n[   80.885730]  unregister_netdevice_many_notify+0x3b5\/0x1180\n[   80.885730]  unregister_netdev+0xcf\/0x120\n[   80.885730]  sixpack_close+0x11f\/0x1b0\n[   80.885730]  tty_ldisc_kill+0xcb\/0x190\n[   80.885730]  tty_ldisc_hangup+0x338\/0x3d0\n[   80.885730]  __tty_hangup+0x504\/0x740\n[   80.885730]  tty_release+0x46e\/0xd80\n[   80.885730]  __fput+0x37f\/0x770\n[   80.885730]  __x64_sys_close+0x7b\/0xb0\n[   80.885730]  do_syscall_64+0xc4\/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n[   80.893739] ------------[ cut here ]------------\n[   80.894030] WARNING: CPU: 2 PID: 140 at lib\/ref_tracker.c:255 ref_tracker_free+0x47b\/0x6b0\n[   80.894297] Modules linked in:\n[   80.894929] CPU: 2 PID: 140 Comm: ax25_conn_rel_6 Not tainted 6.9.0-rc4-g8cd26fd90c1a #11\n[   80.895190] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qem4\n[   80.895514] RIP: 0010:ref_tracker_free+0x47b\/0x6b0\n[   80.895808] Code: 83 c5 18 4c 89 eb 48 c1 eb 03 8a 04 13 84 c0 0f 85 df 01 00 00 41 83 7d 00 00 75 4b 4c 89 ff 9\n[   80.896171] RSP: 0018:ffff888009edf8c0 EFLAGS: 00000286\n[   80.896339] RAX: 1ffff1100141ac00 RBX: 1ffff1100149463b RCX: dffffc0000000000\n[   80.896502] RDX: 0000000000000001 RSI: 0000000000000246 RDI: ffff88800a0d6518\n[   80.896925] RBP: ffff888009edf9b0 R08: ffff88806d3288d3 R09: 1ffff1100da6511a\n[   80.897212] R10: dffffc0000000000 R11: ffffed100da6511b R12: ffff88800a4a31d4\n[   80.897859] R13: ffff88800a4a31d8 R14: dffffc0000000000 R15: ffff88800a0d6518\n[   80.898279] FS:  00007fd88b7fe700(0000) GS:ffff88806d300000(0000) knlGS:0000000000000000\n[   80.899436] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   80.900181] CR2: 00007fd88c001d48 CR3: 000000000993e000 CR4: 00000000000006f0\n...\n[   80.935774] ref_tracker: sp%d@000000000bb9df3d has 1\/1 users at\n[   80.935774]      ax25_bind+0x424\/0x4e0\n[   80.935774]      __sys_bind+0x1d9\/0x270\n[   80.935774]      __x64_sys_bind+0x75\/0x80\n[   80.935774]      do_syscall_64+0xc4\/0x1b0\n[   80.935774]      entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n\nChange ax25_dev->dev_tracker to the dev_tracker of ax25_cb\nin order to mitigate the bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d14f104027e30720582448706c7d6b43065c851","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/467324bcfe1a31ec65d0cf4aa59421d6b7a7d52b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fee8fa86a15d7790268eea458b1aec69c695530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c42b073d9af4a5329b25b17390c63ab3847f30e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-5137","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T10:15:14.840","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic was found in PHPGurukul Directory Management System 1.0. Affected by this vulnerability is an unknown functionality of the file \/admin\/admin-profile.php of the component Searchbar. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265213 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20Cross-Site-Scripting%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265213","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265213","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339123","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-4323","sourceIdentifier":"vulnreport@tenable.com","published":"2024-05-20T12:15:08.720","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A memory corruption vulnerability in Fluent Bit versions 2.0.7 thru 3.0.3. This issue lies in the embedded http server’s parsing of trace requests and may result in denial of service conditions, information disclosure, or remote code execution."}],"metrics":{"cvssMetricV31":[{"source":"vulnreport@tenable.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"vulnreport@tenable.com","type":"Secondary","description":[{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/github.com\/fluent\/fluent-bit\/commit\/9311b43a258352797af40749ab31a63c32acfd04","source":"vulnreport@tenable.com"},{"url":"https:\/\/tenable.com\/security\/research\/tra-2024-17","source":"vulnreport@tenable.com"}]}},{"cve":{"id":"CVE-2023-49330","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T13:15:23.483","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus through 7251 allows SQL Injection while getting aggregate report data."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2024-27312","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T13:15:23.773","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine PAM360 version 6601 is vulnerable to authorization vulnerability which allows a low-privileged user to perform admin actions.\nNote: This vulnerability affects only the PAM360 6600 version. No other versions are applicable to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"references":[{"url":"https:\/\/www.manageengine.com\/privileged-access-management\/advisory\/cve-2024-27312.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2024-4287","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T13:15:23.980","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In mintplex-labs\/anything-llm, a vulnerability exists due to improper input validation in the workspace update process. Specifically, the application fails to validate or format JSON data sent in an HTTP POST request to `\/api\/workspace\/:workspace-slug\/update`, allowing it to be executed as part of a database query without restrictions. This flaw enables users with a manager role to craft a request that includes nested write operations, effectively allowing them to create new Administrator accounts."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/github.com\/mintplex-labs\/anything-llm\/commit\/94b58249a37a21b1c08deaa2d1edfdecbb6deb18","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/34491fb7-5133-4e80-8782-74124350bbdb","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-2835","sourceIdentifier":"security@opentext.com","published":"2024-05-20T14:15:09.233","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."}],"metrics":{"cvssMetricV31":[{"source":"security@opentext.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.7,"baseSeverity":"HIGH"},"exploitabilityScore":2.3,"impactScore":5.8}]},"weaknesses":[{"source":"security@opentext.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/portal.microfocus.com\/s\/article\/KM000029773","source":"security@opentext.com"}]}},{"cve":{"id":"CVE-2024-34952","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T14:15:09.480","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"taurusxin ncmdump v1.3.2 was discovered to contain a segmentation violation via the NeteaseCrypt::FixMetadata() function at \/src\/ncmcrypt.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted .ncm file."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/dos_FixMetadata.assets\/debug-coredump.png","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/dos_FixMetadata.md","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/poc\/I1DWE0~U","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_FixMetadata","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_FixMetadata\/poc","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/taurusxin\/ncmdump\/issues\/18","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34953","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T14:15:09.580","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in taurusxin ncmdump v1.3.2 allows attackers to cause a Denial of Service (DoS) via memory exhaustion by supplying a crafted .ncm file"}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/dos_mmExhausted.assets\/image-20240505161831080.png","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/dos_mmExhausted.md","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/poc\/I7K9QM~F","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_mmExhausted","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_mmExhausted\/poc","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/taurusxin\/ncmdump\/issues\/19","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-3482","sourceIdentifier":"security@opentext.com","published":"2024-05-20T14:15:09.710","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."}],"metrics":{"cvssMetricV31":[{"source":"security@opentext.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.7,"baseSeverity":"HIGH"},"exploitabilityScore":2.3,"impactScore":5.8}]},"weaknesses":[{"source":"security@opentext.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/portal.microfocus.com\/s\/article\/KM000029773","source":"security@opentext.com"}]}},{"cve":{"id":"CVE-2024-4151","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T15:15:08.510","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An Improper Access Control vulnerability exists in lunary-ai\/lunary version 1.2.2, where users can view and update any prompts in any projects due to insufficient access control checks in the handling of PATCH and GET requests for template versions. This vulnerability allows unauthorized users to manipulate or access sensitive project data, potentially leading to data integrity and confidentiality issues."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/huntr.com\/bounties\/4acfef85-dedf-43bd-8438-0d8aaa4ffa01","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-0401","sourceIdentifier":"disclosure@vulncheck.com","published":"2024-05-20T17:15:09.223","lastModified":"2024-05-20T17:15:09.223","vulnStatus":"Received","descriptions":[{"lang":"en","value":"ASUS routers supporting custom OpenVPN profiles are vulnerable to a code execution vulnerability. An authenticated and remote attacker can execute arbitrary operating system commands by uploading a crafted OVPN profile. Known affected routers include ASUS ExpertWiFi, ASUS RT-AX55, ASUS RT-AX58U, ASUS RT-AC67U, ASUS RT-AC68R, ASUS RT-AC68U, ASUS RT-AX86, ASUS RT-AC86U, ASUS RT-AX88U, and ASUS RT-AX3000."}],"metrics":{"cvssMetricV31":[{"source":"disclosure@vulncheck.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"disclosure@vulncheck.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/vulncheck.com\/advisories\/asus-ovpn-rce","source":"disclosure@vulncheck.com"}]}},{"cve":{"id":"CVE-2024-24294","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.470","lastModified":"2024-05-20T17:15:09.470","vulnStatus":"Received","descriptions":[{"lang":"en","value":"A Prototype Pollution issue in Blackprint @blackprint\/engine v.0.9.0 allows an attacker to execute arbitrary code via the _utils.setDeepProperty function of engine.min.js."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/mestrtee\/d1eb6e1f7c6dd60d8838c3e56cab634d","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34947","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.540","lastModified":"2024-05-20T17:15:09.540","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Quanxun Huiju Network Technology (Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 was discovered to be vulnerable to an ICMP redirect attack."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/wuyuhang422\/56f1e03fad8b91a3c979093f53cbbe7a","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34948","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.600","lastModified":"2024-05-20T17:15:09.600","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in Quanxun Huiju Network Technology(Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 allows attackers to cause a Denial of Service (DoS) when attempting to make TCP connections."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/wuyuhang422\/8de771b0b4538eb6fa23cf8282061209","source":"cve@mitre.org"}]}}]}