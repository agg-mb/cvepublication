{"resultsPerPage":284,"startIndex":0,"totalResults":284,"format":"NVD_CVE","version":"2.0","timestamp":"2024-12-28T03:14:34.530","vulnerabilities":[{"cve":{"id":"CVE-2024-12976","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T02:15:06.063","lastModified":"2024-12-27T19:15:08.000","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in CodeZips Hospital Management System 1.0. Affected by this issue is some unknown functionality of the file \/staff.php. The manipulation of the argument tel leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/nexus-wkx\/CVE\/blob\/main\/SQL_Injection_in_Hospital_Management_System.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289352","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289352","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469072","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/nexus-wkx\/CVE\/blob\/main\/SQL_Injection_in_Hospital_Management_System.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-12977","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T02:15:07.130","lastModified":"2024-12-27T19:15:08.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in PHPGurukul Complaint Management System 1.0. This affects an unknown part of the file \/admin\/state.php. The manipulation of the argument state leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad clasificada como crítica en PHPGurukul Complaint Management System 1.0. Afecta a una parte desconocida del archivo \/admin\/state.php. La manipulación del argumento state provoca una inyección SQL. Es posible iniciar el ataque de forma remota. El exploit se ha hecho público y puede utilizarse."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/AngrySheep2003\/cve\/blob\/main\/Complaint_Management_System_SQL_Injection.md","source":"cna@vuldb.com"},{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289353","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289353","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469112","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/AngrySheep2003\/cve\/blob\/main\/Complaint_Management_System_SQL_Injection.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-9774","sourceIdentifier":"secalert@redhat.com","published":"2024-12-27T02:15:07.330","lastModified":"2024-12-27T03:15:04.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in python-sql where unary operators do not escape non-Expression."},{"lang":"es","value":"Se encontró una vulnerabilidad en python-sql donde los operadores unarios no escapan a expresiones no expresadas."}],"metrics":{"cvssMetricV30":[{"source":"secalert@redhat.com","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:N","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":5.2}]},"weaknesses":[{"source":"secalert@redhat.com","type":"Secondary","description":[{"lang":"en","value":"CWE-150"}]}],"references":[{"url":"https:\/\/discuss.tryton.org\/t\/security-release-for-issue-93\/7889\/3","source":"secalert@redhat.com"},{"url":"https:\/\/lists.debian.org\/debian-lts-announce\/2024\/10\/msg00023.html","source":"af854a3a-2127-422b-91ae-364da2661108"}]}},{"cve":{"id":"CVE-2024-12978","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T04:15:05.603","lastModified":"2024-12-27T04:15:05.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in code-projects Job Recruitment 1.0 and classified as critical. This vulnerability affects the function add_req of the file \/_parse\/_all_edits.php. The manipulation of the argument jid\/limit leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Job Recruitment 1.0 y se ha clasificado como crítica. Esta vulnerabilidad afecta a la función add_req del archivo \/_parse\/_all_edits.php. La manipulación del argumento jid\/limit conduce a una inyección SQL. El ataque puede iniciarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/UnrealdDei\/cve\/blob\/main\/sql7.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289354","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289354","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469145","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12979","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T05:15:07.130","lastModified":"2024-12-27T05:15:07.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Job Recruitment 1.0 and classified as problematic. This issue affects the function cn_update of the file \/_parse\/_all_edits.php. The manipulation of the argument cname leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Job Recruitment 1.0 y se ha clasificado como problemática. Este problema afecta a la función cn_update del archivo \/_parse\/_all_edits.php. La manipulación del argumento cname provoca cross site scripting. El ataque puede iniciarse de forma remota. El exploit se ha hecho público y puede utilizarse. También pueden verse afectados otros parámetros."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/705298066\/cve\/blob\/main\/xss-1.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289355","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289355","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469180","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12980","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T05:15:07.353","lastModified":"2024-12-27T05:15:07.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in code-projects Job Recruitment 1.0. It has been classified as problematic. Affected is the function fln_update of the file \/_parse\/_all_edits.php. The manipulation of the argument fname\/lname leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en code-projects Job Recruitment 1.0. Se ha clasificado como problemática. La función fln_update del archivo \/_parse\/_all_edits.php está afectada. La manipulación del argumento fname\/lname provoca ataques de cross site scripting. Es posible lanzar el ataque de forma remota. El exploit se ha hecho público y puede utilizarse."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/705298066\/cve\/blob\/main\/xss-2.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289356","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289356","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469181","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-56519","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T05:15:07.677","lastModified":"2024-12-27T05:15:07.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in TCPDF before 6.8.0. setSVGStyles does not sanitize the SVG font-family attribute."},{"lang":"es","value":"Se descubrió un problema en TCPDF anterior a 6.8.0. setSVGStyles no desinfecta el atributo font-family SVG."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/commit\/c9f41cbb84880bdb4fc3e0a9d287214d1ac4d7f4","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/compare\/6.7.8...6.8.0","source":"cve@mitre.org"},{"url":"https:\/\/tcpdf.org","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-56520","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T05:15:07.837","lastModified":"2024-12-27T05:15:07.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in tc-lib-pdf-font before 2.6.4, as used in TCPDF before 6.8.0 and other products. Fonts are mishandled, e.g., FontBBox for Type 1 and TrueType fonts is misparsed."},{"lang":"es","value":"Se descubrió un problema en tc-lib-pdf-font anterior a la versión 2.6.4, tal como se utiliza en TCPDF anterior a la versión 6.8.0 y otros productos. Las fuentes se gestionan de forma incorrecta, por ejemplo, FontBBox para fuentes Type 1 y TrueType se analiza incorrectamente."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/commit\/a0a02efe487cc39bd5223359e916dbeafb5cd6fe","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/compare\/6.7.8...6.8.0","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/tc-lib-pdf-font\/commit\/30012e333ae611c514ec2dc7cb370bbf4da4e677","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/tc-lib-pdf-font\/compare\/2.6.2...2.6.4","source":"cve@mitre.org"},{"url":"https:\/\/tcpdf.org","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-56521","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T05:15:07.977","lastModified":"2024-12-27T05:15:07.977","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in TCPDF before 6.8.0. If libcurl is used, CURLOPT_SSL_VERIFYHOST and CURLOPT_SSL_VERIFYPEER are set unsafely."},{"lang":"es","value":"Se descubrió un problema en TCPDF antes de la versión 6.8.0. Si se utiliza libcurl, CURLOPT_SSL_VERIFYHOST y CURLOPT_SSL_VERIFYPEER se configuran de forma no segura."}],"metrics":{},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-295"}]}],"references":[{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/commit\/aab43ab0a824e956276141a28a24c7c0be20f554","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/compare\/6.7.8...6.8.0","source":"cve@mitre.org"},{"url":"https:\/\/tcpdf.org","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-56522","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T05:15:08.130","lastModified":"2024-12-27T05:15:08.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in TCPDF before 6.8.0. unserializeTCPDFtag uses != (aka loose comparison) and does not use a constant-time function to compare TCPDF tag hashes."},{"lang":"es","value":"Se descubrió un problema en TCPDF antes de 6.8.0. unserializeTCPDFtag usa != (también conocido como comparación flexible) y no usa una función de tiempo constante para comparar hashes de etiquetas TCPDF."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/commit\/d54b97cec33f4f1a5ad81119a82085cad93cec89","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/compare\/6.7.8...6.8.0","source":"cve@mitre.org"},{"url":"https:\/\/tcpdf.org","source":"cve@mitre.org"},{"url":"https:\/\/www.php.net\/manual\/en\/types.comparisons.php","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-11605","sourceIdentifier":"contact@wpscan.com","published":"2024-12-27T06:15:22.820","lastModified":"2024-12-27T19:15:07.253","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The wp-publications WordPress plugin through 1.2 does not escape filenames before outputting them back in the page, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."},{"lang":"es","value":"El complemento wp-publications WordPress hasta la versión 1.2 no escapa los nombres de archivo antes de mostrarlos nuevamente en la página, lo que podría permitir que usuarios con altos privilegios como el administrador realicen ataques de cross site scripting almacenado incluso cuando la capacidad unfiltered_html no está permitida (por ejemplo, en una configuración de varios sitios)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.7,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/91c5ee70-2ff5-46cd-a0f5-54987fc2e060\/","source":"contact@wpscan.com"},{"url":"https:\/\/wpscan.com\/vulnerability\/91c5ee70-2ff5-46cd-a0f5-54987fc2e060\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-11644","sourceIdentifier":"contact@wpscan.com","published":"2024-12-27T06:15:23.047","lastModified":"2024-12-27T19:15:07.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP-SVG WordPress plugin through 0.9 does not validate and escape some of its shortcode attributes before outputting them back in a page\/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks."},{"lang":"es","value":"El complemento WP-SVG WordPress hasta la versión 0.9 no valida ni escapa algunos de sus atributos de código corto antes de mostrarlos nuevamente en una página\/publicación donde está incrustado el código corto, lo que podría permitir a los usuarios con el rol de colaborador y superior realizar ataques de cross site scripting almacenado."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":5.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.7,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/5b6a80f1-369c-4dd2-877e-60b724084819\/","source":"contact@wpscan.com"},{"url":"https:\/\/wpscan.com\/vulnerability\/5b6a80f1-369c-4dd2-877e-60b724084819\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-11645","sourceIdentifier":"contact@wpscan.com","published":"2024-12-27T06:15:23.157","lastModified":"2024-12-27T19:15:07.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The float block WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)."},{"lang":"es","value":"El complemento float block para WordPress hasta la versión 1.7 no desinfecta ni escapa a algunas de sus configuraciones, lo que podría permitir que usuarios con privilegios elevados como el administrador realicen ataques de cross site scripting almacenado incluso cuando la capacidad unfiltered_html no está permitida (por ejemplo, en una configuración de varios sitios)."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.7,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/7771a76b-bc8c-426f-a125-5bd74ccf2845\/","source":"contact@wpscan.com"},{"url":"https:\/\/wpscan.com\/vulnerability\/7771a76b-bc8c-426f-a125-5bd74ccf2845\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-11842","sourceIdentifier":"contact@wpscan.com","published":"2024-12-27T06:15:23.260","lastModified":"2024-12-27T19:15:07.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The DN Shipping by Weight for WooCommerce WordPress plugin before 1.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack"},{"lang":"es","value":"El complemento DN Shipping de Weight para WooCommerce WordPress anterior a la versión 1.2 no tiene la verificación CSRF activada al actualizar su configuración, lo que podría permitir a los atacantes hacer que un administrador que haya iniciado sesión la cambie a través de un ataque CSRF."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/2545f054-b6ca-4ee5-ac6f-f42193db21b1\/","source":"contact@wpscan.com"},{"url":"https:\/\/wpscan.com\/vulnerability\/2545f054-b6ca-4ee5-ac6f-f42193db21b1\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-11921","sourceIdentifier":"contact@wpscan.com","published":"2024-12-27T06:15:23.357","lastModified":"2024-12-27T19:15:07.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The GiveWP  WordPress plugin before 3.19.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento GiveWP para WordPress anterior a la versión 3.19.0 no desinfecta ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un error de Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios elevados, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.7,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/5f196294-5ba9-45b6-a27c-ab1702cc001f\/","source":"contact@wpscan.com"},{"url":"https:\/\/wpscan.com\/vulnerability\/5f196294-5ba9-45b6-a27c-ab1702cc001f\/","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-12981","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T06:15:23.463","lastModified":"2024-12-27T06:15:23.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in CodeAstro Car Rental System 1.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file \/bookingconfirm.php. The manipulation of the argument driver_id_from_dropdown leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en CodeAstro Car Rental System 1.0. Se ha declarado como crítica. Esta vulnerabilidad afecta a una funcionalidad desconocida del archivo \/bookingconfirm.php. La manipulación del argumento driver_id_from_dropdown provoca una inyección SQL. El ataque se puede ejecutar de forma remota. El exploit se ha hecho público y puede utilizarse. También pueden verse afectados otros parámetros."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-74"},{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/codeastro.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/CharilYang\/cve\/issues\/1","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289357","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289357","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469156","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12982","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T06:15:23.680","lastModified":"2024-12-27T16:15:23.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in PHPGurukul Blood Bank & Donor Management System 2.4. It has been rated as problematic. Affected by this issue is some unknown functionality of the file \/bbdms\/admin\/update-contactinfo.php. The manipulation of the argument Address leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad en PHPGurukul Blood Bank &amp; Donor Management System 2.4. Se ha calificado como problemática. Este problema afecta a algunas funciones desconocidas del archivo \/bbdms\/admin\/update-contactinfo.php. La manipulación del argumento Address provoca cross site scripting. El ataque puede ejecutarse de forma remota. El exploit se ha hecho público y puede utilizarse."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.4,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","baseScore":3.3,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/phpgurukul.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289358","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289358","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469202","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469202","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-56527","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T06:15:23.880","lastModified":"2024-12-27T15:15:13.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in TCPDF before 6.8.0. The Error function lacks an htmlspecialchars call for the error message."},{"lang":"es","value":"Se descubrió un problema en TCPDF antes de la versión 6.8.0. La función Error no tiene una llamada htmlspecialchars para el mensaje de error."}],"metrics":{},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/andrea0.medium.com\/analysis-of-cve-2024-56527-dbdab6962add","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/commit\/11778aaa2d9e30a9ae1c1ee97ff349344f0ad6e1","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/tecnickcom\/TCPDF\/compare\/6.7.8...6.8.0","source":"cve@mitre.org"},{"url":"https:\/\/tcpdf.org","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-12983","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T07:15:11.180","lastModified":"2024-12-27T16:15:23.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in code-projects Hospital Management System 1.0. This affects an unknown part of the file \/hospital\/hms\/admin\/manage-doctors.php of the component Edit Doctor Details Page. The manipulation of the argument Doctor Name leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. Other parameters might be affected as well."},{"lang":"es","value":"Se ha encontrado una vulnerabilidad clasificada como problemática en code-projects Hospital Management System 1.0. Afecta a una parte desconocida del archivo \/hospital\/hms\/admin\/manage-doctors.php del componente Edit Doctor Details Page. La manipulación del argumento Doctor Name provoca cross site scripting. Es posible iniciar el ataque de forma remota. El exploit se ha hecho público y puede utilizarse. También pueden verse afectados otros parámetros."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":2.4,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","baseScore":3.3,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/code-projects.org\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/Rocky-Bull\/myCVE\/blob\/main\/Hospital_Management_System_XSS.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289359","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289359","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.469215","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/Rocky-Bull\/myCVE\/blob\/main\/Hospital_Management_System_XSS.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2020-1818","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:06.310","lastModified":"2024-12-27T10:15:06.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There are multiple out of bounds (OOB) read vulnerabilities in the implementation of the Common Open Policy Service (COPS) protocol of some Huawei products. The specific decoding function may occur out-of-bounds read when processes an incoming data packet. Successful exploit of these vulnerabilities may disrupt service on the affected device. (Vulnerability ID: HWPSIRT-2018-12275,HWPSIRT-2018-12276,HWPSIRT-2018-12277,HWPSIRT-2018-12278,HWPSIRT-2018-12279,HWPSIRT-2018-12280 and HWPSIRT-2018-12289)\n\nThe seven vulnerabilities have been assigned seven Common Vulnerabilities and Exposures (CVE) IDs: CVE-2020-1818, CVE-2020-1819, CVE-2020-1820, CVE-2020-1821, CVE-2020-1822, CVE-2020-1823 and CVE-2020-1824."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":3.7,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-125"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2020\/huawei-sa-20191218-01-cops-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-1819","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:09.710","lastModified":"2024-12-27T10:15:09.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There are multiple out of bounds (OOB) read vulnerabilities in the implementation of the Common Open Policy Service (COPS) protocol of some Huawei products. The specific decoding function may occur out-of-bounds read when processes an incoming data packet. Successful exploit of these vulnerabilities may disrupt service on the affected device. (Vulnerability ID: HWPSIRT-2018-12275,HWPSIRT-2018-12276,HWPSIRT-2018-12277,HWPSIRT-2018-12278,HWPSIRT-2018-12279,HWPSIRT-2018-12280 and HWPSIRT-2018-12289)\n\nThe seven vulnerabilities have been assigned seven Common Vulnerabilities and Exposures (CVE) IDs: CVE-2020-1818, CVE-2020-1819, CVE-2020-1820, CVE-2020-1821, CVE-2020-1822, CVE-2020-1823 and CVE-2020-1824."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":3.7,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-125"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2020\/huawei-sa-20191218-01-cops-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9080","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:10.313","lastModified":"2024-12-27T10:15:10.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an improper privilege management vulnerability in Huawei smart phone product. A local, authenticated attacker could craft a specific input to exploit this vulnerability. Successful exploitation may lead to local privilege escalation. (Vulnerability ID: HWPSIRT-2020-05272)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9080."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.8,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-269"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200819-01-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9081","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:10.937","lastModified":"2024-12-27T10:15:10.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an improper authorization vulnerability in some Huawei smartphones. An attacker could perform a series of operation in specific mode to exploit this vulnerability. Successful exploit could allow the attacker to bypass app lock. (Vulnerability ID: HWPSIRT-2019-12144)\n\n\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9081."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:P\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"PHYSICAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-285"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2020\/huawei-sa-20200826-15-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9082","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:11.687","lastModified":"2024-12-27T10:15:11.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an information disclosure vulnerability in several smartphones. The system has a logic judging error under certain scenario, the attacker should gain the permit to execute commands in ADB mode and then do a series of operation on the phone. Successful exploit could allow the attacker to gain certain information from certain apps locked by Applock. (Vulnerability ID: HWPSIRT-2019-07112)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9082."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:P\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"PHYSICAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":0.9,"impactScore":2.5}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200826-16-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9085","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:12.217","lastModified":"2024-12-27T10:15:12.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is a NULL pointer dereference vulnerability in some Huawei products. An attacker may send specially crafted POST messages to the affected products. Due to insufficient validation of some parameter in the message, successful exploit may cause some process abnormal. (Vulnerability ID: HWPSIRT-2017-10105)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9085."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-476"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200826-01-pointer_en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9086","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:12.800","lastModified":"2024-12-27T10:15:12.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is a buffer error vulnerability in some Huawei product. An unauthenticated attacker may send special UPNP message to the affected products. Due to insufficient input validation of some value, successful exploit may cause some service abnormal. (Vulnerability ID: HWPSIRT-2017-08234)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9086."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-124"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200826-01-buffer_en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9089","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:13.487","lastModified":"2024-12-27T10:15:13.487","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an information vulnerability in Huawei smartphones. A function in a module can be called without verifying the caller's access. Attackers with user access can exploit this vulnerability to obtain some information. This can lead to information leak. (Vulnerability ID: HWPSIRT-2019-12141)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9089."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":3.3,"baseSeverity":"LOW","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.8,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200826-09-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9210","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:14.037","lastModified":"2024-12-27T10:15:14.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an insufficient integrity vulnerability in Huawei products. A module does not perform sufficient integrity check in a specific scenario. Attackers can exploit the vulnerability by physically install malware. This could compromise normal service of the affected device. (Vulnerability ID: HWPSIRT-2020-00145)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9210."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:P\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":6.8,"baseSeverity":"MEDIUM","attackVector":"PHYSICAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.9,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-354"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2021\/huawei-sa-20210106-01-myna-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9211","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:14.620","lastModified":"2024-12-27T10:15:14.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an out-of-bound read and write vulnerability in Huawei smartphone. A module dose not verify the input sufficiently. Attackers can exploit this vulnerability by modifying some configuration to cause out-of-bound read and write, causing denial of service. (Vulnerability ID: HWPSIRT-2020-05103)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9211."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:H\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.5,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-125"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2021\/huawei-sa-20210106-01-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9222","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:15.270","lastModified":"2024-12-27T10:15:15.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is a privilege escalation vulnerability in Huawei FusionCompute product. Due to insufficient verification on specific files that need to be deserialized, local attackers can exploit this vulnerability to elevate permissions. (Vulnerability ID: HWPSIRT-2020-05241)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9222."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:H\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.0,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.0,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-269"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2020\/huawei-sa-20200826-01-fc-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9236","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:15.930","lastModified":"2024-12-27T10:15:15.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is an improper interface design vulnerability in Huawei product. A module interface of the impated product does not deal with some operations properly. Attackers can exploit this vulnerability to perform malicious operatation to compromise module service. (Vulnerability ID: HWPSIRT-2020-05010)\n\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9236."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-451"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/huawei-sa-20200812-01-fc-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2020-9253","sourceIdentifier":"psirt@huawei.com","published":"2024-12-27T10:15:16.610","lastModified":"2024-12-27T10:15:16.610","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is a stack overflow vulnerability in some Huawei smart phone. An attacker can craft specific packet to exploit this vulnerability. Due to insufficient verification, this could be exploited to tamper with the information to affect the availability. (Vulnerability ID: HWPSIRT-2019-11030)\n\nThis vulnerability has been assigned a Common Vulnerabilities and Exposures (CVE) ID: CVE-2020-9253."}],"metrics":{"cvssMetricV31":[{"source":"psirt@huawei.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}]},"weaknesses":[{"source":"psirt@huawei.com","type":"Secondary","description":[{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/www.huawei.com\/en\/psirt\/security-advisories\/2020\/huawei-sa-20200715-08-smartphone-en","source":"psirt@huawei.com"}]}},{"cve":{"id":"CVE-2024-3393","sourceIdentifier":"psirt@paloaltonetworks.com","published":"2024-12-27T10:15:17.270","lastModified":"2024-12-27T10:15:17.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Denial of Service vulnerability in the DNS Security feature of Palo Alto Networks PAN-OS software allows an unauthenticated attacker to send a malicious packet through the data plane of the firewall that reboots the firewall. Repeated attempts to trigger this condition will cause the firewall to enter maintenance mode."}],"metrics":{"cvssMetricV40":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:N\/VA:H\/SC:N\/SI:N\/SA:L\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:N\/R:U\/V:C\/RE:M\/U:Amber","baseScore":8.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"HIGH","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"LOW","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NO","recovery":"USER","valueDensity":"CONCENTRATED","vulnerabilityResponseEffort":"MODERATE","providerUrgency":"AMBER"}}]},"weaknesses":[{"source":"psirt@paloaltonetworks.com","type":"Secondary","description":[{"lang":"en","value":"CWE-754"}]}],"references":[{"url":"https:\/\/security.paloaltonetworks.com\/CVE-2024-3393","source":"psirt@paloaltonetworks.com"}]}},{"cve":{"id":"CVE-2022-49034","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:22.533","lastModified":"2024-12-27T14:15:22.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsh: cpuinfo: Fix a warning for CONFIG_CPUMASK_OFFSTACK\n\nWhen CONFIG_CPUMASK_OFFSTACK and CONFIG_DEBUG_PER_CPU_MAPS are selected,\ncpu_max_bits_warn() generates a runtime warning similar as below when\nshowing \/proc\/cpuinfo. Fix this by using nr_cpu_ids (the runtime limit)\ninstead of NR_CPUS to iterate CPUs.\n\n[    3.052463] ------------[ cut here ]------------\n[    3.059679] WARNING: CPU: 3 PID: 1 at include\/linux\/cpumask.h:108 show_cpuinfo+0x5e8\/0x5f0\n[    3.070072] Modules linked in: efivarfs autofs4\n[    3.076257] CPU: 0 PID: 1 Comm: systemd Not tainted 5.19-rc5+ #1052\n[    3.099465] Stack : 9000000100157b08 9000000000f18530 9000000000cf846c 9000000100154000\n[    3.109127]         9000000100157a50 0000000000000000 9000000100157a58 9000000000ef7430\n[    3.118774]         90000001001578e8 0000000000000040 0000000000000020 ffffffffffffffff\n[    3.128412]         0000000000aaaaaa 1ab25f00eec96a37 900000010021de80 900000000101c890\n[    3.138056]         0000000000000000 0000000000000000 0000000000000000 0000000000aaaaaa\n[    3.147711]         ffff8000339dc220 0000000000000001 0000000006ab4000 0000000000000000\n[    3.157364]         900000000101c998 0000000000000004 9000000000ef7430 0000000000000000\n[    3.167012]         0000000000000009 000000000000006c 0000000000000000 0000000000000000\n[    3.176641]         9000000000d3de08 9000000001639390 90000000002086d8 00007ffff0080286\n[    3.186260]         00000000000000b0 0000000000000004 0000000000000000 0000000000071c1c\n[    3.195868]         ...\n[    3.199917] Call Trace:\n[    3.203941] [<90000000002086d8>] show_stack+0x38\/0x14c\n[    3.210666] [<9000000000cf846c>] dump_stack_lvl+0x60\/0x88\n[    3.217625] [<900000000023d268>] __warn+0xd0\/0x100\n[    3.223958] [<9000000000cf3c90>] warn_slowpath_fmt+0x7c\/0xcc\n[    3.231150] [<9000000000210220>] show_cpuinfo+0x5e8\/0x5f0\n[    3.238080] [<90000000004f578c>] seq_read_iter+0x354\/0x4b4\n[    3.245098] [<90000000004c2e90>] new_sync_read+0x17c\/0x1c4\n[    3.252114] [<90000000004c5174>] vfs_read+0x138\/0x1d0\n[    3.258694] [<90000000004c55f8>] ksys_read+0x70\/0x100\n[    3.265265] [<9000000000cfde9c>] do_syscall+0x7c\/0x94\n[    3.271820] [<9000000000202fe4>] handle_syscall+0xc4\/0x160\n[    3.281824] ---[ end trace 8b484262b4b8c24c ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09faf32c682ea4a547200b8b9e04d8b3c8e84b55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b6b8e011fab680a223b5e07a3c64774156ec6fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39373f6f89f52770a5405d30dddd08a27d097872","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c891f7c6a4e90bb1199497552f24b26e46383bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/701e32900683378d93693fec15d133e2c5f7ada2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77755dc95ff2f9a3e473acc1e039f498629949ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fbb57eabfc8ae67115cb47f904614c99d626a89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2b91997db286a5dd3cca6d5d9c20004851f22eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8f26cf69003a37ffa947631fc0e6fe6daee624a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53164","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:23.480","lastModified":"2024-12-27T14:15:23.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix ordering of qlen adjustment\n\nChanges to sch->q.qlen around qdisc_tree_reduce_backlog() need to happen\n_before_ a call to said function because otherwise it may fail to notify\nparent qdiscs when the child is about to become empty."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/489422e2befff88a1de52b2acebe7b333bded025","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eb7de8cd58e73851cd37ff8d0666517d9926948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97e13434b5da8e91bdf965352fad2141d13d72d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3e54ad9eff8bdaa70f897e5342e34b76109497f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53165","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:23.583","lastModified":"2024-12-27T14:15:23.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsh: intc: Fix use-after-free bug in register_intc_controller()\n\nIn the error handling for this function, d is freed without ever\nremoving it from intc_list which would lead to a use after free.\nTo fix this, let's only add it to the list after everything has\nsucceeded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c7c806b3eafd94ae0f77305a174d63b69ec187c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588bdec1ff8b81517dbae0ae51c9df52c0b952d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63e72e551942642c48456a4134975136cdcb9b3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ba6e19912570b2ad68298be0be1dc779014a303","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/971b4893457788e0e123ea552f0bb126a5300e61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8b84dcdf3ab1d414304819f824b10efba64132c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3f4f4547fb291982f5ef56c048277c4d5ccc4e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c43df7dae28fb9fce96ef088250c1e3c3a77c527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8de818df12d86a1a26a8efd7b4b3b9c6dc3c5cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53166","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:23.703","lastModified":"2024-12-27T14:15:23.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: fix bfqq uaf in bfq_limit_depth()\n\nSet new allocated bfqq to bic or remove freed bfqq from bic are both\nprotected by bfqd->lock, however bfq_limit_depth() is deferencing bfqq\nfrom bic without the lock, this can lead to UAF if the io_context is\nshared by multiple tasks.\n\nFor example, test bfq with io_uring can trigger following UAF in v6.6:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in bfqq_group+0x15\/0x50\n\nCall Trace:\n <TASK>\n dump_stack_lvl+0x47\/0x80\n print_address_description.constprop.0+0x66\/0x300\n print_report+0x3e\/0x70\n kasan_report+0xb4\/0xf0\n bfqq_group+0x15\/0x50\n bfqq_request_over_limit+0x130\/0x9a0\n bfq_limit_depth+0x1b5\/0x480\n __blk_mq_alloc_requests+0x2b5\/0xa00\n blk_mq_get_new_requests+0x11d\/0x1d0\n blk_mq_submit_bio+0x286\/0xb00\n submit_bio_noacct_nocheck+0x331\/0x400\n __block_write_full_folio+0x3d0\/0x640\n writepage_cb+0x3b\/0xc0\n write_cache_pages+0x254\/0x6c0\n write_cache_pages+0x254\/0x6c0\n do_writepages+0x192\/0x310\n filemap_fdatawrite_wbc+0x95\/0xc0\n __filemap_fdatawrite_range+0x99\/0xd0\n filemap_write_and_wait_range.part.0+0x4d\/0xa0\n blkdev_read_iter+0xef\/0x1e0\n io_read+0x1b6\/0x8a0\n io_issue_sqe+0x87\/0x300\n io_wq_submit_work+0xeb\/0x390\n io_worker_handle_work+0x24d\/0x550\n io_wq_worker+0x27f\/0x6c0\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nAllocated by task 808602:\n kasan_save_stack+0x1e\/0x40\n kasan_set_track+0x21\/0x30\n __kasan_slab_alloc+0x83\/0x90\n kmem_cache_alloc_node+0x1b1\/0x6d0\n bfq_get_queue+0x138\/0xfa0\n bfq_get_bfqq_handle_split+0xe3\/0x2c0\n bfq_init_rq+0x196\/0xbb0\n bfq_insert_request.isra.0+0xb5\/0x480\n bfq_insert_requests+0x156\/0x180\n blk_mq_insert_request+0x15d\/0x440\n blk_mq_submit_bio+0x8a4\/0xb00\n submit_bio_noacct_nocheck+0x331\/0x400\n __blkdev_direct_IO_async+0x2dd\/0x330\n blkdev_write_iter+0x39a\/0x450\n io_write+0x22a\/0x840\n io_issue_sqe+0x87\/0x300\n io_wq_submit_work+0xeb\/0x390\n io_worker_handle_work+0x24d\/0x550\n io_wq_worker+0x27f\/0x6c0\n ret_from_fork+0x2d\/0x50\n ret_from_fork_asm+0x1b\/0x30\n\nFreed by task 808589:\n kasan_save_stack+0x1e\/0x40\n kasan_set_track+0x21\/0x30\n kasan_save_free_info+0x27\/0x40\n __kasan_slab_free+0x126\/0x1b0\n kmem_cache_free+0x10c\/0x750\n bfq_put_queue+0x2dd\/0x770\n __bfq_insert_request.isra.0+0x155\/0x7a0\n bfq_insert_request.isra.0+0x122\/0x480\n bfq_insert_requests+0x156\/0x180\n blk_mq_dispatch_plug_list+0x528\/0x7e0\n blk_mq_flush_plug_list.part.0+0xe5\/0x590\n __blk_flush_plug+0x3b\/0x90\n blk_finish_plug+0x40\/0x60\n do_writepages+0x19d\/0x310\n filemap_fdatawrite_wbc+0x95\/0xc0\n __filemap_fdatawrite_range+0x99\/0xd0\n filemap_write_and_wait_range.part.0+0x4d\/0xa0\n blkdev_read_iter+0xef\/0x1e0\n io_read+0x1b6\/0x8a0\n io_issue_sqe+0x87\/0x300\n io_wq_submit_work+0xeb\/0x390\n io_worker_handle_work+0x24d\/0x550\n io_wq_worker+0x27f\/0x6c0\n ret_from_fork+0x2d\/0x50\n ret_from_fork_asm+0x1b\/0x30\n\nFix the problem by protecting bic_to_bfqq() with bfqd->lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01a853faaeaf3379ccf358ade582b1d28752126e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/906cdbdd3b018ff69cc830173bce277a847d4fdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcaa738afde55085ac6056252e319479cf23cde2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8b8344de3980709080d86c157d24e7de07d70ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53167","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:23.820","lastModified":"2024-12-27T14:15:23.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfs\/blocklayout: Don't attempt unregister for invalid block device\n\nSince commit d869da91cccb (\"nfs\/blocklayout: Fix premature PR key\nunregistration\") an unmount of a pNFS SCSI layout-enabled NFS may\ndereference a NULL block_device in:\n\n  bl_unregister_scsi+0x16\/0xe0 [blocklayoutdriver]\n  bl_free_device+0x70\/0x80 [blocklayoutdriver]\n  bl_free_deviceid_node+0x12\/0x30 [blocklayoutdriver]\n  nfs4_put_deviceid_node+0x60\/0xc0 [nfsv4]\n  nfs4_deviceid_purge_client+0x132\/0x190 [nfsv4]\n  unset_pnfs_layoutdriver+0x59\/0x60 [nfsv4]\n  nfs4_destroy_server+0x36\/0x70 [nfsv4]\n  nfs_free_server+0x23\/0xe0 [nfs]\n  deactivate_locked_super+0x30\/0xb0\n  cleanup_mnt+0xba\/0x150\n  task_work_run+0x59\/0x90\n  syscall_exit_to_user_mode+0x217\/0x220\n  do_syscall_64+0x8e\/0x160\n\nThis happens because even though we were able to create the\nnfs4_deviceid_node, the lookup for the device was unable to attach the\nblock device to the pnfs_block_dev.\n\nIf we never found a block device to register, we can avoid this case with\nthe PNFS_BDEV_REGISTERED flag.  Move the deref behind the test for the\nflag."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3402704a424f34bbcca7f4a4503859357f422217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a4ce14d9a6b868e0787e4582420b721c04ee41e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faa4bacfaeed827a4ca8cb8529a3ce65a9e8ef46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53168","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:23.940","lastModified":"2024-12-27T14:15:23.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsunrpc: fix one UAF issue caused by sunrpc kernel tcp socket\n\nBUG: KASAN: slab-use-after-free in tcp_write_timer_handler+0x156\/0x3e0\nRead of size 1 at addr ffff888111f322cd by task swapper\/0\/0\n\nCPU: 0 UID: 0 PID: 0 Comm: swapper\/0 Not tainted 6.12.0-rc4-dirty #7\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1\nCall Trace:\n <IRQ>\n dump_stack_lvl+0x68\/0xa0\n print_address_description.constprop.0+0x2c\/0x3d0\n print_report+0xb4\/0x270\n kasan_report+0xbd\/0xf0\n tcp_write_timer_handler+0x156\/0x3e0\n tcp_write_timer+0x66\/0x170\n call_timer_fn+0xfb\/0x1d0\n __run_timers+0x3f8\/0x480\n run_timer_softirq+0x9b\/0x100\n handle_softirqs+0x153\/0x390\n __irq_exit_rcu+0x103\/0x120\n irq_exit_rcu+0xe\/0x20\n sysvec_apic_timer_interrupt+0x76\/0x90\n <\/IRQ>\n <TASK>\n asm_sysvec_apic_timer_interrupt+0x1a\/0x20\nRIP: 0010:default_idle+0xf\/0x20\nCode: 4c 01 c7 4c 29 c2 e9 72 ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90\n 90 90 90 90 f3 0f 1e fa 66 90 0f 00 2d 33 f8 25 00 fb f4 <fa> c3 cc cc cc\n cc 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90\nRSP: 0018:ffffffffa2007e28 EFLAGS: 00000242\nRAX: 00000000000f3b31 RBX: 1ffffffff4400fc7 RCX: ffffffffa09c3196\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffff9f00590f\nRBP: 0000000000000000 R08: 0000000000000001 R09: ffffed102360835d\nR10: ffff88811b041aeb R11: 0000000000000001 R12: 0000000000000000\nR13: ffffffffa202d7c0 R14: 0000000000000000 R15: 00000000000147d0\n default_idle_call+0x6b\/0xa0\n cpuidle_idle_call+0x1af\/0x1f0\n do_idle+0xbc\/0x130\n cpu_startup_entry+0x33\/0x40\n rest_init+0x11f\/0x210\n start_kernel+0x39a\/0x420\n x86_64_start_reservations+0x18\/0x30\n x86_64_start_kernel+0x97\/0xa0\n common_startup_64+0x13e\/0x141\n <\/TASK>\n\nAllocated by task 595:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n __kasan_slab_alloc+0x87\/0x90\n kmem_cache_alloc_noprof+0x12b\/0x3f0\n copy_net_ns+0x94\/0x380\n create_new_namespaces+0x24c\/0x500\n unshare_nsproxy_namespaces+0x75\/0xf0\n ksys_unshare+0x24e\/0x4f0\n __x64_sys_unshare+0x1f\/0x30\n do_syscall_64+0x70\/0x180\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFreed by task 100:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3b\/0x60\n __kasan_slab_free+0x54\/0x70\n kmem_cache_free+0x156\/0x5d0\n cleanup_net+0x5d3\/0x670\n process_one_work+0x776\/0xa90\n worker_thread+0x2e2\/0x560\n kthread+0x1a8\/0x1f0\n ret_from_fork+0x34\/0x60\n ret_from_fork_asm+0x1a\/0x30\n\nReproduction script:\n\nmkdir -p \/mnt\/nfsshare\nmkdir -p \/mnt\/nfs\/netns_1\nmkfs.ext4 \/dev\/sdb\nmount \/dev\/sdb \/mnt\/nfsshare\nsystemctl restart nfs-server\nchmod 777 \/mnt\/nfsshare\nexportfs -i -o rw,no_root_squash *:\/mnt\/nfsshare\n\nip netns add netns_1\nip link add name veth_1_peer type veth peer veth_1\nifconfig veth_1_peer 11.11.0.254 up\nip link set veth_1 netns netns_1\nip netns exec netns_1 ifconfig veth_1 11.11.0.1\n\nip netns exec netns_1 \/root\/iptables -A OUTPUT -d 11.11.0.254 -p tcp \\\n\t--tcp-flags FIN FIN  -j DROP\n\n(note: In my environment, a DESTROY_CLIENTID operation is always sent\n immediately, breaking the nfs tcp connection.)\nip netns exec netns_1 timeout -s 9 300 mount -t nfs -o proto=tcp,vers=4.1 \\\n\t11.11.0.254:\/mnt\/nfsshare \/mnt\/nfs\/netns_1\n\nip netns del netns_1\n\nThe reason here is that the tcp socket in netns_1 (nfs side) has been\nshutdown and closed (done in xs_destroy), but the FIN message (with ack)\nis discarded, and the nfsd side keeps sending retransmission messages.\nAs a result, when the tcp sock in netns_1 processes the received message,\nit sends the message (FIN message) in the sending queue, and the tcp timer\nis re-established. When the network namespace is deleted, the net structure\naccessed by tcp's timer handler function causes problems.\n\nTo fix this problem, let's hold netns refcnt for the tcp kernel socket as\ndone in other modules. This is an ugly hack which can easily be backported\nto earlier kernels. A proper fix which cleans up the interfaces will\nfollow, but may not be so easy to backport."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ca87e5063757132a044d35baba40a7d4bb25394","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f23f96528e8fcf8619895c4c916c52653892ec1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61c0a5eac96836de5e3a5897eccdc63162a94936","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/694ccb05b79ee5f5a9f14c2f80d2635d3bb8bdc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53169","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.057","lastModified":"2024-12-27T14:15:24.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-fabrics: fix kernel crash while shutting down controller\n\nThe nvme keep-alive operation, which executes at a periodic interval,\ncould potentially sneak in while shutting down a fabric controller.\nThis may lead to a race between the fabric controller admin queue\ndestroy code path (invoked while shutting down controller) and hw\/hctx\nqueue dispatcher called from the nvme keep-alive async request queuing\noperation. This race could lead to the kernel crash shown below:\n\nCall Trace:\n    autoremove_wake_function+0x0\/0xbc (unreliable)\n    __blk_mq_sched_dispatch_requests+0x114\/0x24c\n    blk_mq_sched_dispatch_requests+0x44\/0x84\n    blk_mq_run_hw_queue+0x140\/0x220\n    nvme_keep_alive_work+0xc8\/0x19c [nvme_core]\n    process_one_work+0x200\/0x4e0\n    worker_thread+0x340\/0x504\n    kthread+0x138\/0x140\n    start_kernel_thread+0x14\/0x18\n\nWhile shutting down fabric controller, if nvme keep-alive request sneaks\nin then it would be flushed off. The nvme_keep_alive_end_io function is\nthen invoked to handle the end of the keep-alive operation which\ndecrements the admin->q_usage_counter and assuming this is the last\/only\nrequest in the admin queue then the admin->q_usage_counter becomes zero.\nIf that happens then blk-mq destroy queue operation (blk_mq_destroy_\nqueue()) which could be potentially running simultaneously on another\ncpu (as this is the controller shutdown code path) would forward\nprogress and deletes the admin queue. So, now from this point onward\nwe are not supposed to access the admin queue resources. However the\nissue here's that the nvme keep-alive thread running hw\/hctx queue\ndispatch operation hasn't yet finished its work and so it could still\npotentially access the admin queue resource while the admin queue had\nbeen already deleted and that causes the above crash.\n\nThe above kernel crash is regression caused due to changes implemented\nin commit a54a93d0e359 (\"nvme: move stopping keep-alive into\nnvme_uninit_ctrl()\"). Ideally we should stop keep-alive before destroyin\ng the admin queue and freeing the admin tagset so that it wouldn't sneak\nin during the shutdown operation. However we removed the keep alive stop\noperation from the beginning of the controller shutdown code path in commit\na54a93d0e359 (\"nvme: move stopping keep-alive into nvme_uninit_ctrl()\")\nand added it under nvme_uninit_ctrl() which executes very late in the\nshutdown code path after the admin queue is destroyed and its tagset is\nremoved. So this change created the possibility of keep-alive sneaking in\nand interfering with the shutdown operation and causing observed kernel\ncrash.\n\nTo fix the observed crash, we decided to move nvme_stop_keep_alive() from\nnvme_uninit_ctrl() to nvme_remove_admin_tag_set(). This change would ensure\nthat we don't forward progress and delete the admin queue until the keep-\nalive operation is finished (if it's in-flight) or cancelled and that would\nhelp contain the race condition explained above and hence avoid the crash.\n\nMoving nvme_stop_keep_alive() to nvme_remove_admin_tag_set() instead of\nadding nvme_stop_keep_alive() to the beginning of the controller shutdown\ncode path in nvme_stop_ctrl(), as was the case earlier before commit\na54a93d0e359 (\"nvme: move stopping keep-alive into nvme_uninit_ctrl()\"),\nwould help save one callsite of nvme_stop_keep_alive()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30794f4952decb2ec8efa42f704cac5304499a41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5416b76a8156c1b8491f78f8a728f422104bb919","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9869c85c81168a1275f909d5972a3fc435304be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53170","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.183","lastModified":"2024-12-27T14:15:24.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix uaf for flush rq while iterating tags\n\nblk_mq_clear_flush_rq_mapping() is not called during scsi probe, by\nchecking blk_queue_init_done(). However, QUEUE_FLAG_INIT_DONE is cleared\nin del_gendisk by commit aec89dc5d421 (\"block: keep q_usage_counter in\natomic mode after del_gendisk\"), hence for disk like scsi, following\nblk_mq_destroy_queue() will not clear flush rq from tags->rqs[] as well,\ncause following uaf that is found by our syzkaller for v6.6:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in blk_mq_find_and_get_req+0x16e\/0x1a0 block\/blk-mq-tag.c:261\nRead of size 4 at addr ffff88811c969c20 by task kworker\/1:2H\/224909\n\nCPU: 1 PID: 224909 Comm: kworker\/1:2H Not tainted 6.6.0-ga836a5060850 #32\nWorkqueue: kblockd blk_mq_timeout_work\nCall Trace:\n\n__dump_stack lib\/dump_stack.c:88 [inline]\ndump_stack_lvl+0x91\/0xf0 lib\/dump_stack.c:106\nprint_address_description.constprop.0+0x66\/0x300 mm\/kasan\/report.c:364\nprint_report+0x3e\/0x70 mm\/kasan\/report.c:475\nkasan_report+0xb8\/0xf0 mm\/kasan\/report.c:588\nblk_mq_find_and_get_req+0x16e\/0x1a0 block\/blk-mq-tag.c:261\nbt_iter block\/blk-mq-tag.c:288 [inline]\n__sbitmap_for_each_set include\/linux\/sbitmap.h:295 [inline]\nsbitmap_for_each_set include\/linux\/sbitmap.h:316 [inline]\nbt_for_each+0x455\/0x790 block\/blk-mq-tag.c:325\nblk_mq_queue_tag_busy_iter+0x320\/0x740 block\/blk-mq-tag.c:534\nblk_mq_timeout_work+0x1a3\/0x7b0 block\/blk-mq.c:1673\nprocess_one_work+0x7c4\/0x1450 kernel\/workqueue.c:2631\nprocess_scheduled_works kernel\/workqueue.c:2704 [inline]\nworker_thread+0x804\/0xe40 kernel\/workqueue.c:2785\nkthread+0x346\/0x450 kernel\/kthread.c:388\nret_from_fork+0x4d\/0x80 arch\/x86\/kernel\/process.c:147\nret_from_fork_asm+0x1b\/0x30 arch\/x86\/entry\/entry_64.S:293\n\nAllocated by task 942:\nkasan_save_stack+0x22\/0x50 mm\/kasan\/common.c:45\nkasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\n____kasan_kmalloc mm\/kasan\/common.c:374 [inline]\n__kasan_kmalloc mm\/kasan\/common.c:383 [inline]\n__kasan_kmalloc+0xaa\/0xb0 mm\/kasan\/common.c:380\nkasan_kmalloc include\/linux\/kasan.h:198 [inline]\n__do_kmalloc_node mm\/slab_common.c:1007 [inline]\n__kmalloc_node+0x69\/0x170 mm\/slab_common.c:1014\nkmalloc_node include\/linux\/slab.h:620 [inline]\nkzalloc_node include\/linux\/slab.h:732 [inline]\nblk_alloc_flush_queue+0x144\/0x2f0 block\/blk-flush.c:499\nblk_mq_alloc_hctx+0x601\/0x940 block\/blk-mq.c:3788\nblk_mq_alloc_and_init_hctx+0x27f\/0x330 block\/blk-mq.c:4261\nblk_mq_realloc_hw_ctxs+0x488\/0x5e0 block\/blk-mq.c:4294\nblk_mq_init_allocated_queue+0x188\/0x860 block\/blk-mq.c:4350\nblk_mq_init_queue_data block\/blk-mq.c:4166 [inline]\nblk_mq_init_queue+0x8d\/0x100 block\/blk-mq.c:4176\nscsi_alloc_sdev+0x843\/0xd50 drivers\/scsi\/scsi_scan.c:335\nscsi_probe_and_add_lun+0x77c\/0xde0 drivers\/scsi\/scsi_scan.c:1189\n__scsi_scan_target+0x1fc\/0x5a0 drivers\/scsi\/scsi_scan.c:1727\nscsi_scan_channel drivers\/scsi\/scsi_scan.c:1815 [inline]\nscsi_scan_channel+0x14b\/0x1e0 drivers\/scsi\/scsi_scan.c:1791\nscsi_scan_host_selected+0x2fe\/0x400 drivers\/scsi\/scsi_scan.c:1844\nscsi_scan+0x3a0\/0x3f0 drivers\/scsi\/scsi_sysfs.c:151\nstore_scan+0x2a\/0x60 drivers\/scsi\/scsi_sysfs.c:191\ndev_attr_store+0x5c\/0x90 drivers\/base\/core.c:2388\nsysfs_kf_write+0x11c\/0x170 fs\/sysfs\/file.c:136\nkernfs_fop_write_iter+0x3fc\/0x610 fs\/kernfs\/file.c:338\ncall_write_iter include\/linux\/fs.h:2083 [inline]\nnew_sync_write+0x1b4\/0x2d0 fs\/read_write.c:493\nvfs_write+0x76c\/0xb00 fs\/read_write.c:586\nksys_write+0x127\/0x250 fs\/read_write.c:639\ndo_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\ndo_syscall_64+0x70\/0x120 arch\/x86\/entry\/common.c:81\nentry_SYSCALL_64_after_hwframe+0x78\/0xe2\n\nFreed by task 244687:\nkasan_save_stack+0x22\/0x50 mm\/kasan\/common.c:45\nkasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\nkasan_save_free_info+0x2b\/0x50 mm\/kasan\/generic.c:522\n____kasan_slab_free mm\/kasan\/common.c:236 [inline]\n__kasan_slab_free+0x12a\/0x1b0 mm\/kasan\/common.c:244\nkasan_slab_free include\/linux\/kasan.h:164 [in\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3802f73bd80766d70f319658f334754164075bc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61092568f2a9acb0e6e186f03f2e0649a4e86d09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0e93b9fefafe97d596f9c98701ae6c3b04b3ff6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53171","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.300","lastModified":"2024-12-27T14:15:24.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: authentication: Fix use-after-free in ubifs_tnc_end_commit\n\nAfter an insertion in TNC, the tree might split and cause a node to\nchange its `znode->parent`. A further deletion of other nodes in the\ntree (which also could free the nodes), the aforementioned node's\n`znode->cparent` could still point to a freed node. This\n`znode->cparent` may not be updated when getting nodes to commit in\n`ubifs_tnc_start_commit()`. This could then trigger a use-after-free\nwhen accessing the `znode->cparent` in `write_index()` in\n`ubifs_tnc_end_commit()`.\n\nThis can be triggered by running\n\n  rm -f \/etc\/test-file.bin\n  dd if=\/dev\/urandom of=\/etc\/test-file.bin bs=1M count=60 conv=fsync\n\nin a loop, and with `CONFIG_UBIFS_FS_AUTHENTICATION`. KASAN then\nreports:\n\n  BUG: KASAN: use-after-free in ubifs_tnc_end_commit+0xa5c\/0x1950\n  Write of size 32 at addr ffffff800a3af86c by task ubifs_bgt0_20\/153\n\n  Call trace:\n   dump_backtrace+0x0\/0x340\n   show_stack+0x18\/0x24\n   dump_stack_lvl+0x9c\/0xbc\n   print_address_description.constprop.0+0x74\/0x2b0\n   kasan_report+0x1d8\/0x1f0\n   kasan_check_range+0xf8\/0x1a0\n   memcpy+0x84\/0xf4\n   ubifs_tnc_end_commit+0xa5c\/0x1950\n   do_commit+0x4e0\/0x1340\n   ubifs_bg_thread+0x234\/0x2e0\n   kthread+0x36c\/0x410\n   ret_from_fork+0x10\/0x20\n\n  Allocated by task 401:\n   kasan_save_stack+0x38\/0x70\n   __kasan_kmalloc+0x8c\/0xd0\n   __kmalloc+0x34c\/0x5bc\n   tnc_insert+0x140\/0x16a4\n   ubifs_tnc_add+0x370\/0x52c\n   ubifs_jnl_write_data+0x5d8\/0x870\n   do_writepage+0x36c\/0x510\n   ubifs_writepage+0x190\/0x4dc\n   __writepage+0x58\/0x154\n   write_cache_pages+0x394\/0x830\n   do_writepages+0x1f0\/0x5b0\n   filemap_fdatawrite_wbc+0x170\/0x25c\n   file_write_and_wait_range+0x140\/0x190\n   ubifs_fsync+0xe8\/0x290\n   vfs_fsync_range+0xc0\/0x1e4\n   do_fsync+0x40\/0x90\n   __arm64_sys_fsync+0x34\/0x50\n   invoke_syscall.constprop.0+0xa8\/0x260\n   do_el0_svc+0xc8\/0x1f0\n   el0_svc+0x34\/0x70\n   el0t_64_sync_handler+0x108\/0x114\n   el0t_64_sync+0x1a4\/0x1a8\n\n  Freed by task 403:\n   kasan_save_stack+0x38\/0x70\n   kasan_set_track+0x28\/0x40\n   kasan_set_free_info+0x28\/0x4c\n   __kasan_slab_free+0xd4\/0x13c\n   kfree+0xc4\/0x3a0\n   tnc_delete+0x3f4\/0xe40\n   ubifs_tnc_remove_range+0x368\/0x73c\n   ubifs_tnc_remove_ino+0x29c\/0x2e0\n   ubifs_jnl_delete_inode+0x150\/0x260\n   ubifs_evict_inode+0x1d4\/0x2e4\n   evict+0x1c8\/0x450\n   iput+0x2a0\/0x3c4\n   do_unlinkat+0x2cc\/0x490\n   __arm64_sys_unlinkat+0x90\/0x100\n   invoke_syscall.constprop.0+0xa8\/0x260\n   do_el0_svc+0xc8\/0x1f0\n   el0_svc+0x34\/0x70\n   el0t_64_sync_handler+0x108\/0x114\n   el0t_64_sync+0x1a4\/0x1a8\n\nThe offending `memcpy()` in `ubifs_copy_hash()` has a use-after-free\nwhen a node becomes root in TNC but still has a `cparent` to an already\nfreed node. More specifically, consider the following TNC:\n\n         zroot\n         \/\n        \/\n      zp1\n      \/\n     \/\n    zn\n\nInserting a new node `zn_new` with a key smaller then `zn` will trigger\na split in `tnc_insert()` if `zp1` is full:\n\n         zroot\n         \/   \\\n        \/     \\\n      zp1     zp2\n      \/         \\\n     \/           \\\n  zn_new          zn\n\n`zn->parent` has now been moved to `zp2`, *but* `zn->cparent` still\npoints to `zp1`.\n\nNow, consider a removal of all the nodes _except_ `zn`. Just when\n`tnc_delete()` is about to delete `zroot` and `zp2`:\n\n         zroot\n             \\\n              \\\n              zp2\n                \\\n                 \\\n                 zn\n\n`zroot` and `zp2` get freed and the tree collapses:\n\n           zn\n\n`zn` now becomes the new `zroot`.\n\n`get_znodes_to_commit()` will now only find `zn`, the new `zroot`, and\n`write_index()` will check its `znode->cparent` that wrongly points to\nthe already freed `zp1`. `ubifs_copy_hash()` thus gets wrongly called\nwith `znode->cparent->zbranch[znode->iip].hash` that triggers the\nuse-after-free!\n\nFix this by explicitly setting `znode->cparent` to `NULL` in\n`get_znodes_to_commit()` for the root node. The search for the dirty\nnodes\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01d3a2293d7e4edfff96618c15727db7e51f11b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2497479aecebe869d23a0064e0fd1a03e34f0e2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/398a91599d263e41c5f95a2fd4ebdb6280b5c6c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4617fb8fc15effe8eda4dd898d4e33eb537a7140","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d9807048b851d7a58d5bd089c16254af896e4df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74981f7577d183acad1cd58f74c10d263711a215","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d8b3f5f4cbfbf6cb0ea4a4d5dc296872b4151eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/daac4aa1825de0dbc1a6eede2fa7f9fc53f14223","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53172","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.433","lastModified":"2024-12-27T14:15:24.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubi: fastmap: Fix duplicate slab cache names while attaching\n\nSince commit 4c39529663b9 (\"slab: Warn on duplicate cache names when\nDEBUG_VM=y\"), the duplicate slab cache names can be detected and a\nkernel WARNING is thrown out.\nIn UBI fast attaching process, alloc_ai() could be invoked twice\nwith the same slab cache name 'ubi_aeb_slab_cache', which will trigger\nfollowing warning messages:\n kmem_cache of name 'ubi_aeb_slab_cache' already exists\n WARNING: CPU: 0 PID: 7519 at mm\/slab_common.c:107\n          __kmem_cache_create_args+0x100\/0x5f0\n Modules linked in: ubi(+) nandsim [last unloaded: nandsim]\n CPU: 0 UID: 0 PID: 7519 Comm: modprobe Tainted: G 6.12.0-rc2\n RIP: 0010:__kmem_cache_create_args+0x100\/0x5f0\n Call Trace:\n   __kmem_cache_create_args+0x100\/0x5f0\n   alloc_ai+0x295\/0x3f0 [ubi]\n   ubi_attach+0x3c3\/0xcc0 [ubi]\n   ubi_attach_mtd_dev+0x17cf\/0x3fa0 [ubi]\n   ubi_init+0x3fb\/0x800 [ubi]\n   do_init_module+0x265\/0x7d0\n   __x64_sys_finit_module+0x7a\/0xc0\n\nThe problem could be easily reproduced by loading UBI device by fastmap\nwith CONFIG_DEBUG_VM=y.\nFix it by using different slab names for alloc_ai() callers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04c0b0f37617099479c34e207c5550d081f585a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d8558135cd56a2a8052024be4073e160f36658c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/612824dd0c9465ef365ace38b056c663d110956d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6afdcb285794e75d2c8995e3a44f523c176cc2de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7402c4bcb8a3f0d2ef4e687cd45c76be489cf509","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/871c148f8e0c32e505df9393ba4a303c3c3fe988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1ee0aa4945c49cbbd779da81040fcec4de80fd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcddf52b7a17adcebc768d26f4e27cf79adb424c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef52b7191ac41e68b1bf070d00c5b04ed16e4920","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53173","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.577","lastModified":"2024-12-27T14:15:24.577","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4.0: Fix a use-after-free problem in the asynchronous open()\n\nYang Erkun reports that when two threads are opening files at the same\ntime, and are forced to abort before a reply is seen, then the call to\nnfs_release_seqid() in nfs4_opendata_free() can result in a\nuse-after-free of the pointer to the defunct rpc task of the other\nthread.\nThe fix is to ensure that if the RPC call is aborted before the call to\nnfs_wait_on_sequence() is complete, then we must call nfs_release_seqid()\nin nfs4_open_release() before the rpc_task is freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1cfae9575296f5040cdc84b0730e79078c081d2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/229a30ed42bb87bcb044c5523fabd9e4f0e75648","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ab9639f16b05d948066a6c4cf19a0fdc61046ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fdb05dc0931250574f0cb0ebeb5ed8e20f4a889","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5237a297ffd374a1c4157a53543b7a69d7bbbc03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bf6bf130af8ee7d93a99c28a7512df3017ec759","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b56ae8e715557b4fc227c9381d2e681ffafe7b15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba6e6c04f60fe52d91520ac4d749d372d4c74521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2277a1d9d5cd0d625a4fd7c04fce2b53e66df77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53174","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.703","lastModified":"2024-12-27T14:15:24.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: make sure cache entry active before cache_show\n\nThe function `c_show` was called with protection from RCU. This only\nensures that `cp` will not be freed. Therefore, the reference count for\n`cp` can drop to zero, which will trigger a refcount use-after-free\nwarning when `cache_get` is called. To resolve this issue, use\n`cache_get_rcu` to ensure that `cp` remains active.\n\n------------[ cut here ]------------\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 7 PID: 822 at lib\/refcount.c:25\nrefcount_warn_saturate+0xb1\/0x120\nCPU: 7 UID: 0 PID: 822 Comm: cat Not tainted 6.12.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04\/01\/2014\nRIP: 0010:refcount_warn_saturate+0xb1\/0x120\n\nCall Trace:\n <TASK>\n c_show+0x2fc\/0x380 [sunrpc]\n seq_read_iter+0x589\/0x770\n seq_read+0x1e5\/0x270\n proc_reg_read+0xe1\/0x140\n vfs_read+0x125\/0x530\n ksys_read+0xc1\/0x160\n do_syscall_64+0x5f\/0x170\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02999e135b013d85c6df738746e8e24699befee4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/068c0b50f3f700b94f78850834cd91ae3b34c2c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2862eee078a4d2d1f584e7f24fa50dddfa5f3471","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acfaf37888e0f0732fb6a50ff093dce6d99994d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7dac3af57e38b2054f990e573256d90bf887958","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d882e2b7fad3f5e5fac66184a347f408813f654a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9be26735d055c42543a4d047a769cc6d0fb1504","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec305f303bf070b4f6896b7a76009f702956d402","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53175","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.820","lastModified":"2024-12-27T14:15:24.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipc: fix memleak if msg_init_ns failed in create_ipc_ns\n\nPercpu memory allocation may failed during create_ipc_ns however this\nfail is not handled properly since ipc sysctls and mq sysctls is not\nreleased properly. Fix this by release these two resource when failure.\n\nHere is the kmemleak stack when percpu failed:\n\nunreferenced object 0xffff88819de2a600 (size 512):\n  comm \"shmem_2nstest\", pid 120711, jiffies 4300542254\n  hex dump (first 32 bytes):\n    60 aa 9d 84 ff ff ff ff fc 18 48 b2 84 88 ff ff  `.........H.....\n    04 00 00 00 a4 01 00 00 20 e4 56 81 ff ff ff ff  ........ .V.....\n  backtrace (crc be7cba35):\n    [<ffffffff81b43f83>] __kmalloc_node_track_caller_noprof+0x333\/0x420\n    [<ffffffff81a52e56>] kmemdup_noprof+0x26\/0x50\n    [<ffffffff821b2f37>] setup_mq_sysctls+0x57\/0x1d0\n    [<ffffffff821b29cc>] copy_ipcs+0x29c\/0x3b0\n    [<ffffffff815d6a10>] create_new_namespaces+0x1d0\/0x920\n    [<ffffffff815d7449>] copy_namespaces+0x2e9\/0x3e0\n    [<ffffffff815458f3>] copy_process+0x29f3\/0x7ff0\n    [<ffffffff8154b080>] kernel_clone+0xc0\/0x650\n    [<ffffffff8154b6b1>] __do_sys_clone+0xa1\/0xe0\n    [<ffffffff843df8ff>] do_syscall_64+0xbf\/0x1c0\n    [<ffffffff846000b0>] entry_SYSCALL_64_after_hwframe+0x4b\/0x53"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10209665b5bf199f8065b2e7d2b2dc6cdf227117","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d230cfd4b9b0558c7b2039ba1def2ce6b6cd158","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fed302872e26c7bf44d855c53a1cde747172d58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/928de5fcd462498b8334107035da8ab85e316d8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc8f5921cd69188627c08041276238de222ab466","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53176","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:24.947","lastModified":"2024-12-27T14:15:24.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: During unmount, ensure all cached dir instances drop their dentry\n\nThe unmount process (cifs_kill_sb() calling close_all_cached_dirs()) can\nrace with various cached directory operations, which ultimately results\nin dentries not being dropped and these kernel BUGs:\n\nBUG: Dentry ffff88814f37e358{i=1000000000080,n=\/}  still in use (2) [unmount of cifs cifs]\nVFS: Busy inodes after unmount of cifs (cifs)\n------------[ cut here ]------------\nkernel BUG at fs\/super.c:661!\n\nThis happens when a cfid is in the process of being cleaned up when, and\nhas been removed from the cfids->entries list, including:\n\n- Receiving a lease break from the server\n- Server reconnection triggers invalidate_all_cached_dirs(), which\n  removes all the cfids from the list\n- The laundromat thread decides to expire an old cfid.\n\nTo solve these problems, dropping the dentry is done in queued work done\nin a newly-added cfid_put_wq workqueue, and close_all_cached_dirs()\nflushes that workqueue after it drops all the dentries of which it's\naware. This is a global workqueue (rather than scoped to a mount), but\nthe queued work is minimal.\n\nThe final cleanup work for cleaning up a cfid is performed via work\nqueued in the serverclose_wq workqueue; this is done separate from\ndropping the dentries so that close_all_cached_dirs() doesn't block on\nany server operations.\n\nBoth of these queued works expect to invoked with a cfid reference and\na tcon reference to avoid those objects from being freed while the work\nis ongoing.\n\nWhile we're here, add proper locking to close_all_cached_dirs(), and\nlocking around the freeing of cfid->dentry."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3fa640d035e5ae526769615c35cb9ed4be6e3662","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/548812afd96982a76a93ba76c0582ea670c40d9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73934e535cffbda1490fa97d82690a0f9aa73e94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff4528bbc82d0d90073751f7b49e7b9e9c7e5638","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53177","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.067","lastModified":"2024-12-27T14:15:25.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: prevent use-after-free due to open_cached_dir error paths\n\nIf open_cached_dir() encounters an error parsing the lease from the\nserver, the error handling may race with receiving a lease break,\nresulting in open_cached_dir() freeing the cfid while the queued work is\npending.\n\nUpdate open_cached_dir() to drop refs rather than directly freeing the\ncfid.\n\nHave cached_dir_lease_break(), cfids_laundromat_worker(), and\ninvalidate_all_cached_dirs() clear has_lease immediately while still\nholding cfids->cfid_list_lock, and then use this to also simplify the\nreference counting in cfids_laundromat_worker() and\ninvalidate_all_cached_dirs().\n\nFixes this KASAN splat (which manually injects an error and lease break\nin open_cached_dir()):\n\n==================================================================\nBUG: KASAN: slab-use-after-free in smb2_cached_lease_break+0x27\/0xb0\nRead of size 8 at addr ffff88811cc24c10 by task kworker\/3:1\/65\n\nCPU: 3 UID: 0 PID: 65 Comm: kworker\/3:1 Not tainted 6.12.0-rc6-g255cf264e6e5-dirty #87\nHardware name: VMware, Inc. VMware Virtual Platform\/440BX Desktop Reference Platform, BIOS 6.00 11\/12\/2020\nWorkqueue: cifsiod smb2_cached_lease_break\nCall Trace:\n <TASK>\n dump_stack_lvl+0x77\/0xb0\n print_report+0xce\/0x660\n kasan_report+0xd3\/0x110\n smb2_cached_lease_break+0x27\/0xb0\n process_one_work+0x50a\/0xc50\n worker_thread+0x2ba\/0x530\n kthread+0x17c\/0x1c0\n ret_from_fork+0x34\/0x60\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nAllocated by task 2464:\n kasan_save_stack+0x33\/0x60\n kasan_save_track+0x14\/0x30\n __kasan_kmalloc+0xaa\/0xb0\n open_cached_dir+0xa7d\/0x1fb0\n smb2_query_path_info+0x43c\/0x6e0\n cifs_get_fattr+0x346\/0xf10\n cifs_get_inode_info+0x157\/0x210\n cifs_revalidate_dentry_attr+0x2d1\/0x460\n cifs_getattr+0x173\/0x470\n vfs_statx_path+0x10f\/0x160\n vfs_statx+0xe9\/0x150\n vfs_fstatat+0x5e\/0xc0\n __do_sys_newfstatat+0x91\/0xf0\n do_syscall_64+0x95\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFreed by task 2464:\n kasan_save_stack+0x33\/0x60\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3b\/0x60\n __kasan_slab_free+0x51\/0x70\n kfree+0x174\/0x520\n open_cached_dir+0x97f\/0x1fb0\n smb2_query_path_info+0x43c\/0x6e0\n cifs_get_fattr+0x346\/0xf10\n cifs_get_inode_info+0x157\/0x210\n cifs_revalidate_dentry_attr+0x2d1\/0x460\n cifs_getattr+0x173\/0x470\n vfs_statx_path+0x10f\/0x160\n vfs_statx+0xe9\/0x150\n vfs_fstatat+0x5e\/0xc0\n __do_sys_newfstatat+0x91\/0xf0\n do_syscall_64+0x95\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nLast potentially related work creation:\n kasan_save_stack+0x33\/0x60\n __kasan_record_aux_stack+0xad\/0xc0\n insert_work+0x32\/0x100\n __queue_work+0x5c9\/0x870\n queue_work_on+0x82\/0x90\n open_cached_dir+0x1369\/0x1fb0\n smb2_query_path_info+0x43c\/0x6e0\n cifs_get_fattr+0x346\/0xf10\n cifs_get_inode_info+0x157\/0x210\n cifs_revalidate_dentry_attr+0x2d1\/0x460\n cifs_getattr+0x173\/0x470\n vfs_statx_path+0x10f\/0x160\n vfs_statx+0xe9\/0x150\n vfs_fstatat+0x5e\/0xc0\n __do_sys_newfstatat+0x91\/0xf0\n do_syscall_64+0x95\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nThe buggy address belongs to the object at ffff88811cc24c00\n which belongs to the cache kmalloc-1k of size 1024\nThe buggy address is located 16 bytes inside of\n freed 1024-byte region [ffff88811cc24c00, ffff88811cc25000)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47655a12c6b1bca8fa230085eab2e85a076932b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/791f833053578b9fd24252ebb7162a61bc3f805b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97e2afcac0bebfef6a5360f4267ce4c44507b845","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9685b409a03b73d2980bbfa53eb47555802d0a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53178","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.183","lastModified":"2024-12-27T14:15:25.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: Don't leak cfid when reconnect races with open_cached_dir\n\nopen_cached_dir() may either race with the tcon reconnection even before\ncompound_send_recv() or directly trigger a reconnection via\nSMB2_open_init() or SMB_query_info_init().\n\nThe reconnection process invokes invalidate_all_cached_dirs() via\ncifs_mark_open_files_invalid(), which removes all cfids from the\ncfids->entries list but doesn't drop a ref if has_lease isn't true. This\nresults in the currently-being-constructed cfid not being on the list,\nbut still having a refcount of 2. It leaks if returned from\nopen_cached_dir().\n\nFix this by setting cfid->has_lease when the ref is actually taken; the\ncfid will not be used by other threads until it has a valid time.\n\nAddresses these kmemleaks:\n\nunreferenced object 0xffff8881090c4000 (size 1024):\n  comm \"bash\", pid 1860, jiffies 4295126592\n  hex dump (first 32 bytes):\n    00 01 00 00 00 00 ad de 22 01 00 00 00 00 ad de  ........\".......\n    00 ca 45 22 81 88 ff ff f8 dc 4f 04 81 88 ff ff  ..E\"......O.....\n  backtrace (crc 6f58c20f):\n    [<ffffffff8b895a1e>] __kmalloc_cache_noprof+0x2be\/0x350\n    [<ffffffff8bda06e3>] open_cached_dir+0x993\/0x1fb0\n    [<ffffffff8bdaa750>] cifs_readdir+0x15a0\/0x1d50\n    [<ffffffff8b9a853f>] iterate_dir+0x28f\/0x4b0\n    [<ffffffff8b9a9aed>] __x64_sys_getdents64+0xfd\/0x200\n    [<ffffffff8cf6da05>] do_syscall_64+0x95\/0x1a0\n    [<ffffffff8d00012f>] entry_SYSCALL_64_after_hwframe+0x76\/0x7e\nunreferenced object 0xffff8881044fdcf8 (size 8):\n  comm \"bash\", pid 1860, jiffies 4295126592\n  hex dump (first 8 bytes):\n    00 cc cc cc cc cc cc cc                          ........\n  backtrace (crc 10c106a9):\n    [<ffffffff8b89a3d3>] __kmalloc_node_track_caller_noprof+0x363\/0x480\n    [<ffffffff8b7d7256>] kstrdup+0x36\/0x60\n    [<ffffffff8bda0700>] open_cached_dir+0x9b0\/0x1fb0\n    [<ffffffff8bdaa750>] cifs_readdir+0x15a0\/0x1d50\n    [<ffffffff8b9a853f>] iterate_dir+0x28f\/0x4b0\n    [<ffffffff8b9a9aed>] __x64_sys_getdents64+0xfd\/0x200\n    [<ffffffff8cf6da05>] do_syscall_64+0x95\/0x1a0\n    [<ffffffff8d00012f>] entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nAnd addresses these BUG splats when unmounting the SMB filesystem:\n\nBUG: Dentry ffff888140590ba0{i=1000000000080,n=\/}  still in use (2) [unmount of cifs cifs]\nWARNING: CPU: 3 PID: 3433 at fs\/dcache.c:1536 umount_check+0xd0\/0x100\nModules linked in:\nCPU: 3 UID: 0 PID: 3433 Comm: bash Not tainted 6.12.0-rc4-g850925a8133c-dirty #49\nHardware name: VMware, Inc. VMware Virtual Platform\/440BX Desktop Reference Platform, BIOS 6.00 11\/12\/2020\nRIP: 0010:umount_check+0xd0\/0x100\nCode: 8d 7c 24 40 e8 31 5a f4 ff 49 8b 54 24 40 41 56 49 89 e9 45 89 e8 48 89 d9 41 57 48 89 de 48 c7 c7 80 e7 db ac e8 f0 72 9a ff <0f> 0b 58 31 c0 5a 5b 5d 41 5c 41 5d 41 5e 41 5f e9 2b e5 5d 01 41\nRSP: 0018:ffff88811cc27978 EFLAGS: 00010286\nRAX: 0000000000000000 RBX: ffff888140590ba0 RCX: ffffffffaaf20bae\nRDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881f6fb6f40\nRBP: ffff8881462ec000 R08: 0000000000000001 R09: ffffed1023984ee3\nR10: ffff88811cc2771f R11: 00000000016cfcc0 R12: ffff888134383e08\nR13: 0000000000000002 R14: ffff8881462ec668 R15: ffffffffaceab4c0\nFS:  00007f23bfa98740(0000) GS:ffff8881f6f80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000556de4a6f808 CR3: 0000000123c80000 CR4: 0000000000350ef0\nCall Trace:\n <TASK>\n d_walk+0x6a\/0x530\n shrink_dcache_for_umount+0x6a\/0x200\n generic_shutdown_super+0x52\/0x2a0\n kill_anon_super+0x22\/0x40\n cifs_kill_sb+0x159\/0x1e0\n deactivate_locked_super+0x66\/0xe0\n cleanup_mnt+0x140\/0x210\n task_work_run+0xfb\/0x170\n syscall_exit_to_user_mode+0x29f\/0x2b0\n do_syscall_64+0xa1\/0x1a0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\nRIP: 0033:0x7f23bfb93ae7\nCode: ff ff ff ff c3 66 0f 1f 44 00 00 48 8b 0d 11 93 0d 00 f7 d8 64 89 01 b8 ff ff ff ff eb bf 0f 1f 44 00 00 b8 50 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d e9 92 0d 00 f7 d8 64 89 \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d76332d783db12684b67592f1fb2057b88af4c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31fabf70d58388d5475e48ca8a6b7d2847b36678","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73a57b25b4df23f22814fc06b7e8f9cf570be026","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7afb86733685c64c604d32faf00fa4a1f22c2ab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53179","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.307","lastModified":"2024-12-27T14:15:25.307","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free of signing key\n\nCustomers have reported use-after-free in @ses->auth_key.response with\nSMB2.1 + sign mounts which occurs due to following race:\n\ntask A                         task B\ncifs_mount()\n dfs_mount_share()\n  get_session()\n   cifs_mount_get_session()    cifs_send_recv()\n    cifs_get_smb_ses()          compound_send_recv()\n     cifs_setup_session()        smb2_setup_request()\n      kfree_sensitive()           smb2_calc_signature()\n                                   crypto_shash_setkey() *UAF*\n\nFix this by ensuring that we have a valid @ses->auth_key.response by\nchecking whether @ses->ses_status is SES_GOOD or SES_EXITING with\n@ses->ses_lock held.  After commit 24a9799aa8ef (\"smb: client: fix UAF\nin smb2_reconnect_server()\"), we made sure to call ->logoff() only\nwhen @ses was known to be good (e.g. valid ->auth_key.response), so\nit's safe to access signing key when @ses->ses_status == SES_EXITING."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e2b654a3848bf9da3b0d54c1ccf3f1b8c635591","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/343d7fe6df9e247671440a932b6a73af4fa86d95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53180","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.410","lastModified":"2024-12-27T14:15:25.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Add sanity NULL check for the default mmap fault handler\n\nA driver might allow the mmap access before initializing its\nruntime->dma_area properly.  Add a proper NULL check before passing to\nvirt_to_page() for avoiding a panic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c4c9bf5eab7bee6b606f2abb0993e933b5831a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/832efbb74b1578e3737d593a204d42af8bd1b81b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8799f4332a9fd812eadfbc32fc5104d6292f754f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc200027ee92fba84f1826494735ed675f3aa911","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2913a07d9037fe7aed4b7e680684163eaed6bc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0ce9e24eff1678c16276f9717f26a78202506a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53181","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.530","lastModified":"2024-12-27T14:15:25.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\num: vector: Do not use drvdata in release\n\nThe drvdata is not available in release. Let's just use container_of()\nto get the vector_device instance. Otherwise, removing a vector device\nwill result in a crash:\n\nRIP: 0033:vector_device_release+0xf\/0x50\nRSP: 00000000e187bc40  EFLAGS: 00010202\nRAX: 0000000060028f61 RBX: 00000000600f1baf RCX: 00000000620074e0\nRDX: 000000006220b9c0 RSI: 0000000060551c80 RDI: 0000000000000000\nRBP: 00000000e187bc50 R08: 00000000603ad594 R09: 00000000e187bb70\nR10: 000000000000135a R11: 00000000603ad422 R12: 00000000623ae028\nR13: 000000006287a200 R14: 0000000062006d30 R15: 00000000623700b6\nKernel panic - not syncing: Segfault with no mm\nCPU: 0 UID: 0 PID: 16 Comm: kworker\/0:1 Not tainted 6.12.0-rc6-g59b723cd2adb #1\nWorkqueue: events mc_work_proc\nStack:\n 60028f61 623ae028 e187bc80 60276fcd\n 6220b9c0 603f5820 623ae028 00000000\n e187bcb0 603a2bcd 623ae000 62370010\nCall Trace:\n [<60028f61>] ? vector_device_release+0x0\/0x50\n [<60276fcd>] device_release+0x70\/0xba\n [<603a2bcd>] kobject_put+0xba\/0xe7\n [<60277265>] put_device+0x19\/0x1c\n [<60281266>] platform_device_put+0x26\/0x29\n [<60281e5f>] platform_device_unregister+0x2c\/0x2e\n [<60029422>] vector_remove+0x52\/0x58\n [<60031316>] ? mconsole_reply+0x0\/0x50\n [<600310c8>] mconsole_remove+0x160\/0x1cc\n [<603b19f4>] ? strlen+0x0\/0x15\n [<60066611>] ? __dequeue_entity+0x1a9\/0x206\n [<600666a7>] ? set_next_entity+0x39\/0x63\n [<6006666e>] ? set_next_entity+0x0\/0x63\n [<60038fa6>] ? um_set_signals+0x0\/0x43\n [<6003070c>] mc_work_proc+0x77\/0x91\n [<60057664>] process_scheduled_works+0x1b3\/0x2dd\n [<60055f32>] ? assign_work+0x0\/0x58\n [<60057f0a>] worker_thread+0x1e9\/0x293\n [<6005406f>] ? set_pf_worker+0x0\/0x64\n [<6005d65d>] ? arch_local_irq_save+0x0\/0x2d\n [<6005d748>] ? kthread_exit+0x0\/0x3a\n [<60057d21>] ? worker_thread+0x0\/0x293\n [<6005dbf1>] kthread+0x126\/0x12b\n [<600219c5>] new_thread_handler+0x85\/0xb6"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12f52e373d63f008ee386f371bdd82a3a3779199","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35f8f72b45791a6a71b81140c59d02a6183b6f3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/376c7f0beb8f6f3800fc3013ef2f422d0cbfbf92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51b39d741970742a5c41136241a9c48ac607cf82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8204dd589c4f25a7618eece5da3f0871e02af8ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ed7793f6f589b4e1f0b38f8448578d2a48f9c82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bef9a2835011668c221851a7572b6c8433087f85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc5251b1af5c9a0749322bf58bd5aa673f545fe2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9d36f7e71a907ec507f84ee5d60a622c345cac4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53182","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.643","lastModified":"2024-12-27T14:15:25.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"block, bfq: merge bfq_release_process_ref() into bfq_put_cooperator()\"\n\nThis reverts commit bc3b1e9e7c50e1de0f573eea3871db61dd4787de.\n\nThe bic is associated with sync_bfqq, and bfq_release_process_ref cannot\nbe put into bfq_put_cooperator.\n\nkasan report:\n[  400.347277] ==================================================================\n[  400.347287] BUG: KASAN: slab-use-after-free in bic_set_bfqq+0x200\/0x230\n[  400.347420] Read of size 8 at addr ffff88881cab7d60 by task dockerd\/5800\n[  400.347430]\n[  400.347436] CPU: 24 UID: 0 PID: 5800 Comm: dockerd Kdump: loaded Tainted: G E 6.12.0 #32\n[  400.347450] Tainted: [E]=UNSIGNED_MODULE\n[  400.347454] Hardware name: VMware, Inc. VMware20,1\/440BX Desktop Reference Platform, BIOS VMW201.00V.20192059.B64.2207280713 07\/28\/2022\n[  400.347460] Call Trace:\n[  400.347464]  <TASK>\n[  400.347468]  dump_stack_lvl+0x5d\/0x80\n[  400.347490]  print_report+0x174\/0x505\n[  400.347521]  kasan_report+0xe0\/0x160\n[  400.347541]  bic_set_bfqq+0x200\/0x230\n[  400.347549]  bfq_bic_update_cgroup+0x419\/0x740\n[  400.347560]  bfq_bio_merge+0x133\/0x320\n[  400.347584]  blk_mq_submit_bio+0x1761\/0x1e20\n[  400.347625]  __submit_bio+0x28b\/0x7b0\n[  400.347664]  submit_bio_noacct_nocheck+0x6b2\/0xd30\n[  400.347690]  iomap_readahead+0x50c\/0x680\n[  400.347731]  read_pages+0x17f\/0x9c0\n[  400.347785]  page_cache_ra_unbounded+0x366\/0x4a0\n[  400.347795]  filemap_fault+0x83d\/0x2340\n[  400.347819]  __xfs_filemap_fault+0x11a\/0x7d0 [xfs]\n[  400.349256]  __do_fault+0xf1\/0x610\n[  400.349270]  do_fault+0x977\/0x11a0\n[  400.349281]  __handle_mm_fault+0x5d1\/0x850\n[  400.349314]  handle_mm_fault+0x1f8\/0x560\n[  400.349324]  do_user_addr_fault+0x324\/0x970\n[  400.349337]  exc_page_fault+0x76\/0xf0\n[  400.349350]  asm_exc_page_fault+0x26\/0x30\n[  400.349360] RIP: 0033:0x55a480d77375\n[  400.349384] Code: cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 49 3b 66 10 0f 86 ae 02 00 00 55 48 89 e5 48 83 ec 58 48 8b 10 <83> 7a 10 00 0f 84 27 02 00 00 44 0f b6 42 28 44 0f b6 4a 29 41 80\n[  400.349392] RSP: 002b:00007f18c37fd8b8 EFLAGS: 00010216\n[  400.349401] RAX: 00007f18c37fd9d0 RBX: 0000000000000000 RCX: 0000000000000000\n[  400.349407] RDX: 000055a484407d38 RSI: 000000c000e8b0c0 RDI: 0000000000000000\n[  400.349412] RBP: 00007f18c37fd910 R08: 000055a484017f60 R09: 000055a484066f80\n[  400.349417] R10: 0000000000194000 R11: 0000000000000005 R12: 0000000000000008\n[  400.349422] R13: 0000000000000000 R14: 000000c000476a80 R15: 0000000000000000\n[  400.349430]  <\/TASK>\n[  400.349452]\n[  400.349454] Allocated by task 5800:\n[  400.349459]  kasan_save_stack+0x30\/0x50\n[  400.349469]  kasan_save_track+0x14\/0x30\n[  400.349475]  __kasan_slab_alloc+0x89\/0x90\n[  400.349482]  kmem_cache_alloc_node_noprof+0xdc\/0x2a0\n[  400.349492]  bfq_get_queue+0x1ef\/0x1100\n[  400.349502]  __bfq_get_bfqq_handle_split+0x11a\/0x510\n[  400.349511]  bfq_insert_requests+0xf55\/0x9030\n[  400.349519]  blk_mq_flush_plug_list+0x446\/0x14c0\n[  400.349527]  __blk_flush_plug+0x27c\/0x4e0\n[  400.349534]  blk_finish_plug+0x52\/0xa0\n[  400.349540]  _xfs_buf_ioapply+0x739\/0xc30 [xfs]\n[  400.350246]  __xfs_buf_submit+0x1b2\/0x640 [xfs]\n[  400.350967]  xfs_buf_read_map+0x306\/0xa20 [xfs]\n[  400.351672]  xfs_trans_read_buf_map+0x285\/0x7d0 [xfs]\n[  400.352386]  xfs_imap_to_bp+0x107\/0x270 [xfs]\n[  400.353077]  xfs_iget+0x70d\/0x1eb0 [xfs]\n[  400.353786]  xfs_lookup+0x2ca\/0x3a0 [xfs]\n[  400.354506]  xfs_vn_lookup+0x14e\/0x1a0 [xfs]\n[  400.355197]  __lookup_slow+0x19c\/0x340\n[  400.355204]  lookup_one_unlocked+0xfc\/0x120\n[  400.355211]  ovl_lookup_single+0x1b3\/0xcf0 [overlay]\n[  400.355255]  ovl_lookup_layer+0x316\/0x490 [overlay]\n[  400.355295]  ovl_lookup+0x844\/0x1fd0 [overlay]\n[  400.355351]  lookup_one_qstr_excl+0xef\/0x150\n[  400.355357]  do_unlinkat+0x22a\/0x620\n[  400.355366]  __x64_sys_unlinkat+0x109\/0x1e0\n[  400.355375]  do_syscall_64+0x82\/0x160\n[  400.355384]  entry_SYSCALL_64_after_hwframe+0x76\/0x7\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7baf94232651f39f7108c23bc9548bff89bdc77b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf5a60d971c7b59efb89927919404be655a9e35a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53183","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.743","lastModified":"2024-12-27T14:15:25.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\num: net: Do not use drvdata in release\n\nThe drvdata is not available in release. Let's just use container_of()\nto get the uml_net instance. Otherwise, removing a network device will\nresult in a crash:\n\nRIP: 0033:net_device_release+0x10\/0x6f\nRSP: 00000000e20c7c40  EFLAGS: 00010206\nRAX: 000000006002e4e7 RBX: 00000000600f1baf RCX: 00000000624074e0\nRDX: 0000000062778000 RSI: 0000000060551c80 RDI: 00000000627af028\nRBP: 00000000e20c7c50 R08: 00000000603ad594 R09: 00000000e20c7b70\nR10: 000000000000135a R11: 00000000603ad422 R12: 0000000000000000\nR13: 0000000062c7af00 R14: 0000000062406d60 R15: 00000000627700b6\nKernel panic - not syncing: Segfault with no mm\nCPU: 0 UID: 0 PID: 29 Comm: kworker\/0:2 Not tainted 6.12.0-rc6-g59b723cd2adb #1\nWorkqueue: events mc_work_proc\nStack:\n 627af028 62c7af00 e20c7c80 60276fcd\n 62778000 603f5820 627af028 00000000\n e20c7cb0 603a2bcd 627af000 62770010\nCall Trace:\n [<60276fcd>] device_release+0x70\/0xba\n [<603a2bcd>] kobject_put+0xba\/0xe7\n [<60277265>] put_device+0x19\/0x1c\n [<60281266>] platform_device_put+0x26\/0x29\n [<60281e5f>] platform_device_unregister+0x2c\/0x2e\n [<6002ec9c>] net_remove+0x63\/0x69\n [<60031316>] ? mconsole_reply+0x0\/0x50\n [<600310c8>] mconsole_remove+0x160\/0x1cc\n [<60087d40>] ? __remove_hrtimer+0x38\/0x74\n [<60087ff8>] ? hrtimer_try_to_cancel+0x8c\/0x98\n [<6006b3cf>] ? dl_server_stop+0x3f\/0x48\n [<6006b390>] ? dl_server_stop+0x0\/0x48\n [<600672e8>] ? dequeue_entities+0x327\/0x390\n [<60038fa6>] ? um_set_signals+0x0\/0x43\n [<6003070c>] mc_work_proc+0x77\/0x91\n [<60057664>] process_scheduled_works+0x1b3\/0x2dd\n [<60055f32>] ? assign_work+0x0\/0x58\n [<60057f0a>] worker_thread+0x1e9\/0x293\n [<6005406f>] ? set_pf_worker+0x0\/0x64\n [<6005d65d>] ? arch_local_irq_save+0x0\/0x2d\n [<6005d748>] ? kthread_exit+0x0\/0x3a\n [<60057d21>] ? worker_thread+0x0\/0x293\n [<6005dbf1>] kthread+0x126\/0x12b\n [<600219c5>] new_thread_handler+0x85\/0xb6"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/160cd5f956d191eb97664afd31ca59284c08d876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1635d9a0ff1b8bd7aa4767d4ea7b3de72cd36f28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/468c2e5394afc848efb1eae6e1961a3c855cf35e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6be99d4c117b9642a44d9f54f034b67615be2b2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d9d174d3f55daaf5e7b48e9d7f53c723adbed86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b174ab33aaafd556a1ead72fa8e35d70b6fb1e39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdbd5a1dcdc2c27ac076f91b03b9add3fefa1a82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1db692a9be3b4bd3473b64fcae996afaffe8438","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f04cd022ee1fde219e0db1086c27a0a5ba1914db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53184","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.853","lastModified":"2024-12-27T14:15:25.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\num: ubd: Do not use drvdata in release\n\nThe drvdata is not available in release. Let's just use container_of()\nto get the ubd instance. Otherwise, removing a ubd device will result\nin a crash:\n\nRIP: 0033:blk_mq_free_tag_set+0x1f\/0xba\nRSP: 00000000e2083bf0  EFLAGS: 00010246\nRAX: 000000006021463a RBX: 0000000000000348 RCX: 0000000062604d00\nRDX: 0000000004208060 RSI: 00000000605241a0 RDI: 0000000000000348\nRBP: 00000000e2083c10 R08: 0000000062414010 R09: 00000000601603f7\nR10: 000000000000133a R11: 000000006038c4bd R12: 0000000000000000\nR13: 0000000060213a5c R14: 0000000062405d20 R15: 00000000604f7aa0\nKernel panic - not syncing: Segfault with no mm\nCPU: 0 PID: 17 Comm: kworker\/0:1 Not tainted 6.8.0-rc3-00107-gba3f67c11638 #1\nWorkqueue: events mc_work_proc\nStack:\n 00000000 604f7ef0 62c5d000 62405d20\n e2083c30 6002c776 6002c755 600e47ff\n e2083c60 6025ffe3 04208060 603d36e0\nCall Trace:\n [<6002c776>] ubd_device_release+0x21\/0x55\n [<6002c755>] ? ubd_device_release+0x0\/0x55\n [<600e47ff>] ? kfree+0x0\/0x100\n [<6025ffe3>] device_release+0x70\/0xba\n [<60381d6a>] kobject_put+0xb5\/0xe2\n [<6026027b>] put_device+0x19\/0x1c\n [<6026a036>] platform_device_put+0x26\/0x29\n [<6026ac5a>] platform_device_unregister+0x2c\/0x2e\n [<6002c52e>] ubd_remove+0xb8\/0xd6\n [<6002bb74>] ? mconsole_reply+0x0\/0x50\n [<6002b926>] mconsole_remove+0x160\/0x1cc\n [<6002bbbc>] ? mconsole_reply+0x48\/0x50\n [<6003379c>] ? um_set_signals+0x3b\/0x43\n [<60061c55>] ? update_min_vruntime+0x14\/0x70\n [<6006251f>] ? dequeue_task_fair+0x164\/0x235\n [<600620aa>] ? update_cfs_group+0x0\/0x40\n [<603a0e77>] ? __schedule+0x0\/0x3ed\n [<60033761>] ? um_set_signals+0x0\/0x43\n [<6002af6a>] mc_work_proc+0x77\/0x91\n [<600520b4>] process_scheduled_works+0x1af\/0x2c3\n [<6004ede3>] ? assign_work+0x0\/0x58\n [<600527a1>] worker_thread+0x2f7\/0x37a\n [<6004ee3b>] ? set_pf_worker+0x0\/0x64\n [<6005765d>] ? arch_local_irq_save+0x0\/0x2d\n [<60058e07>] ? kthread_exit+0x0\/0x3a\n [<600524aa>] ? worker_thread+0x0\/0x37a\n [<60058f9f>] kthread+0x130\/0x135\n [<6002068e>] new_thread_handler+0x85\/0xb6"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16cf8511680809a9f20b3dd224c06d482648f9e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23d742a3fcd4781eed015a3a93e6a0e3ab1ef2a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d194d951895df214e066d08146e77cb6e02c1d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/300e277e463e6326938dd55ea560eafa0f5c88a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/509ba8746f812e45a05034ba18b73db574693d11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5727343348f34e11a7c5a2a944d5aa505731d876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bee35e5389f450a7eea7318deb9073e9414d3b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5a75207efae4b558aaa34c288de7d6f2e926b4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6e5a4cded9bef3a1b0a4fac815b7176eb9a18ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53185","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:25.973","lastModified":"2024-12-27T14:15:25.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix NULL ptr deref in crypto_aead_setkey()\n\nNeither SMB3.0 or SMB3.02 supports encryption negotiate context, so\nwhen SMB2_GLOBAL_CAP_ENCRYPTION flag is set in the negotiate response,\nthe client uses AES-128-CCM as the default cipher.  See MS-SMB2\n3.3.5.4.\n\nCommit b0abcd65ec54 (\"smb: client: fix UAF in async decryption\") added\na @server->cipher_type check to conditionally call\nsmb3_crypto_aead_allocate(), but that check would always be false as\n@server->cipher_type is unset for SMB3.02.\n\nFix the following KASAN splat by setting @server->cipher_type for\nSMB3.02 as well.\n\nmount.cifs \/\/srv\/share \/mnt -o vers=3.02,seal,...\n\nBUG: KASAN: null-ptr-deref in crypto_aead_setkey+0x2c\/0x130\nRead of size 8 at addr 0000000000000020 by task mount.cifs\/1095\nCPU: 1 UID: 0 PID: 1095 Comm: mount.cifs Not tainted 6.12.0 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-3.fc41\n04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x5d\/0x80\n ? crypto_aead_setkey+0x2c\/0x130\n kasan_report+0xda\/0x110\n ? crypto_aead_setkey+0x2c\/0x130\n crypto_aead_setkey+0x2c\/0x130\n crypt_message+0x258\/0xec0 [cifs]\n ? __asan_memset+0x23\/0x50\n ? __pfx_crypt_message+0x10\/0x10 [cifs]\n ? mark_lock+0xb0\/0x6a0\n ? hlock_class+0x32\/0xb0\n ? mark_lock+0xb0\/0x6a0\n smb3_init_transform_rq+0x352\/0x3f0 [cifs]\n ? lock_acquire.part.0+0xf4\/0x2a0\n smb_send_rqst+0x144\/0x230 [cifs]\n ? __pfx_smb_send_rqst+0x10\/0x10 [cifs]\n ? hlock_class+0x32\/0xb0\n ? smb2_setup_request+0x225\/0x3a0 [cifs]\n ? __pfx_cifs_compound_last_callback+0x10\/0x10 [cifs]\n compound_send_recv+0x59b\/0x1140 [cifs]\n ? __pfx_compound_send_recv+0x10\/0x10 [cifs]\n ? __create_object+0x5e\/0x90\n ? hlock_class+0x32\/0xb0\n ? do_raw_spin_unlock+0x9a\/0xf0\n cifs_send_recv+0x23\/0x30 [cifs]\n SMB2_tcon+0x3ec\/0xb30 [cifs]\n ? __pfx_SMB2_tcon+0x10\/0x10 [cifs]\n ? lock_acquire.part.0+0xf4\/0x2a0\n ? __pfx_lock_release+0x10\/0x10\n ? do_raw_spin_trylock+0xc6\/0x120\n ? lock_acquire+0x3f\/0x90\n ? _get_xid+0x16\/0xd0 [cifs]\n ? __pfx_SMB2_tcon+0x10\/0x10 [cifs]\n ? cifs_get_smb_ses+0xcdd\/0x10a0 [cifs]\n cifs_get_smb_ses+0xcdd\/0x10a0 [cifs]\n ? __pfx_cifs_get_smb_ses+0x10\/0x10 [cifs]\n ? cifs_get_tcp_session+0xaa0\/0xca0 [cifs]\n cifs_mount_get_session+0x8a\/0x210 [cifs]\n dfs_mount_share+0x1b0\/0x11d0 [cifs]\n ? __pfx___lock_acquire+0x10\/0x10\n ? __pfx_dfs_mount_share+0x10\/0x10 [cifs]\n ? lock_acquire.part.0+0xf4\/0x2a0\n ? find_held_lock+0x8a\/0xa0\n ? hlock_class+0x32\/0xb0\n ? lock_release+0x203\/0x5d0\n cifs_mount+0xb3\/0x3d0 [cifs]\n ? do_raw_spin_trylock+0xc6\/0x120\n ? __pfx_cifs_mount+0x10\/0x10 [cifs]\n ? lock_acquire+0x3f\/0x90\n ? find_nls+0x16\/0xa0\n ? smb3_update_mnt_flags+0x372\/0x3b0 [cifs]\n cifs_smb3_do_mount+0x1e2\/0xc80 [cifs]\n ? __pfx_vfs_parse_fs_string+0x10\/0x10\n ? __pfx_cifs_smb3_do_mount+0x10\/0x10 [cifs]\n smb3_get_tree+0x1bf\/0x330 [cifs]\n vfs_get_tree+0x4a\/0x160\n path_mount+0x3c1\/0xfb0\n ? kasan_quarantine_put+0xc7\/0x1d0\n ? __pfx_path_mount+0x10\/0x10\n ? kmem_cache_free+0x118\/0x3e0\n ? user_path_at+0x74\/0xa0\n __x64_sys_mount+0x1a6\/0x1e0\n ? __pfx___x64_sys_mount+0x10\/0x10\n ? mark_held_locks+0x1a\/0x90\n do_syscall_64+0xbb\/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22127c1dc04364cda3da812161e70921e6c3c0af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46f8e25926817272ec8d5bfbd003569bdeb9a8c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bdec0d1f658f7c98749bd2c5a486e6cfa8565d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b8904b53b5ace0519c74cd89fc3ca763f3856d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53186","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.083","lastModified":"2024-12-27T14:15:26.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix use-after-free in SMB request handling\n\nA race condition exists between SMB request handling in\n`ksmbd_conn_handler_loop()` and the freeing of `ksmbd_conn` in the\nworkqueue handler `handle_ksmbd_work()`. This leads to a UAF.\n- KASAN: slab-use-after-free Read in handle_ksmbd_work\n- KASAN: slab-use-after-free in rtlock_slowlock_locked\n\nThis race condition arises as follows:\n- `ksmbd_conn_handler_loop()` waits for `conn->r_count` to reach zero:\n  `wait_event(conn->r_count_q, atomic_read(&conn->r_count) == 0);`\n- Meanwhile, `handle_ksmbd_work()` decrements `conn->r_count` using\n  `atomic_dec_return(&conn->r_count)`, and if it reaches zero, calls\n  `ksmbd_conn_free()`, which frees `conn`.\n- However, after `handle_ksmbd_work()` decrements `conn->r_count`,\n  it may still access `conn->r_count_q` in the following line:\n  `waitqueue_active(&conn->r_count_q)` or `wake_up(&conn->r_count_q)`\n  This results in a UAF, as `conn` has already been freed.\n\nThe discovery of this UAF can be referenced in the following PR for\nsyzkaller's support for SMB requests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/96261adb998a3b513468b6ce17dbec76be5507d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a8c5d89d327ff58e9b2517f8a6afb4181d32c6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a96f9eb7add30ba0fafcfe7b7aca090978196800","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f20b77f7897e6aab9ce5527e6016ad2be5d70a33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53187","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.190","lastModified":"2024-12-27T14:15:26.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: check for overflows in io_pin_pages\n\nWARNING: CPU: 0 PID: 5834 at io_uring\/memmap.c:144 io_pin_pages+0x149\/0x180 io_uring\/memmap.c:144\nCPU: 0 UID: 0 PID: 5834 Comm: syz-executor825 Not tainted 6.12.0-next-20241118-syzkaller #0\nCall Trace:\n <TASK>\n __io_uaddr_map+0xfb\/0x2d0 io_uring\/memmap.c:183\n io_rings_map io_uring\/io_uring.c:2611 [inline]\n io_allocate_scq_urings+0x1c0\/0x650 io_uring\/io_uring.c:3470\n io_uring_create+0x5b5\/0xc00 io_uring\/io_uring.c:3692\n io_uring_setup io_uring\/io_uring.c:3781 [inline]\n ...\n <\/TASK>\n\nio_pin_pages()'s uaddr parameter came directly from the user and can be\ngarbage. Don't just add size to it as it can overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c0a4eae26ac78379d0c1db053de168a8febc6c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29eac3eca72d4c2a71122050c37cd7d8f73ac4f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaa90844afd499c9142d0199dfda74439314c013","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53188","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.297","lastModified":"2024-12-27T14:15:26.297","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix crash when unbinding\n\nIf there is an error during some initialization related to firmware,\nthe function ath12k_dp_cc_cleanup is called to release resources.\nHowever this is released again when the device is unbinded (ath12k_pci),\nand we get:\nBUG: kernel NULL pointer dereference, address: 0000000000000020\nat RIP: 0010:ath12k_dp_cc_cleanup.part.0+0xb6\/0x500 [ath12k]\nCall Trace:\nath12k_dp_cc_cleanup\nath12k_dp_free\nath12k_core_deinit\nath12k_pci_remove\n...\n\nThe issue is always reproducible from a VM because the MSI addressing\ninitialization is failing.\n\nIn order to fix the issue, just set to NULL the released structure in\nath12k_dp_cc_cleanup at the end."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1304446f67863385dc4c914b6e0194f6664ee764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eec88c0fa63f8ad35704a8c9df0b5bd8694fcda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/488d2959c28621e52b3cce118a813a4bc18bb3d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81da9c0854545c3188ca2a09afe7cb65f9c012b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53189","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.400","lastModified":"2024-12-27T14:15:26.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: fix bounds checker error in nl80211_parse_sched_scan\n\nThe channels array in the cfg80211_scan_request has a __counted_by\nattribute attached to it, which points to the n_channels variable. This\nattribute is used in bounds checking, and if it is not set before the\narray is filled, then the bounds sanitizer will issue a warning or a\nkernel panic if CONFIG_UBSAN_TRAP is set.\n\nThis patch sets the size of allocated memory as the initial value for\nn_channels. It is updated with the actual number of added elements after\nthe array is filled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a7b62ddf2c7642878c24f0e556041bb58c37527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c46a3a5b394d6d123866aa44436fc2cd342eb0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4ef643ea78c59c22546046c25dc6e7206267672","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53190","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.530","lastModified":"2024-12-27T14:15:26.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtlwifi: Drastically reduce the attempts to read efuse in case of failures\n\nSyzkaller reported a hung task with uevent_show() on stack trace. That\nspecific issue was addressed by another commit [0], but even with that\nfix applied (for example, running v6.12-rc5) we face another type of hung\ntask that comes from the same reproducer [1]. By investigating that, we\ncould narrow it to the following path:\n\n(a) Syzkaller emulates a Realtek USB WiFi adapter using raw-gadget and\ndummy_hcd infrastructure.\n\n(b) During the probe of rtl8192cu, the driver ends-up performing an efuse\nread procedure (which is related to EEPROM load IIUC), and here lies the\nissue: the function read_efuse() calls read_efuse_byte() many times, as\nloop iterations depending on the efuse size (in our example, 512 in total).\n\nThis procedure for reading efuse bytes relies in a loop that performs an\nI\/O read up to *10k* times in case of failures. We measured the time of\nthe loop inside read_efuse_byte() alone, and in this reproducer (which\ninvolves the dummy_hcd emulation layer), it takes 15 seconds each. As a\nconsequence, we have the driver stuck in its probe routine for big time,\nexposing a stack trace like below if we attempt to reboot the system, for\nexample:\n\ntask:kworker\/0:3 state:D stack:0 pid:662 tgid:662 ppid:2 flags:0x00004000\nWorkqueue: usb_hub_wq hub_event\nCall Trace:\n __schedule+0xe22\/0xeb6\n schedule_timeout+0xe7\/0x132\n __wait_for_common+0xb5\/0x12e\n usb_start_wait_urb+0xc5\/0x1ef\n ? usb_alloc_urb+0x95\/0xa4\n usb_control_msg+0xff\/0x184\n _usbctrl_vendorreq_sync+0xa0\/0x161\n _usb_read_sync+0xb3\/0xc5\n read_efuse_byte+0x13c\/0x146\n read_efuse+0x351\/0x5f0\n efuse_read_all_map+0x42\/0x52\n rtl_efuse_shadow_map_update+0x60\/0xef\n rtl_get_hwinfo+0x5d\/0x1c2\n rtl92cu_read_eeprom_info+0x10a\/0x8d5\n ? rtl92c_read_chip_version+0x14f\/0x17e\n rtl_usb_probe+0x323\/0x851\n usb_probe_interface+0x278\/0x34b\n really_probe+0x202\/0x4a4\n __driver_probe_device+0x166\/0x1b2\n driver_probe_device+0x2f\/0xd8\n [...]\n\nWe propose hereby to drastically reduce the attempts of doing the I\/O\nreads in case of failures, restricted to USB devices (given that\nthey're inherently slower than PCIe ones). By retrying up to 10 times\n(instead of 10000), we got reponsiveness in the reproducer, while seems\nreasonable to believe that there's no sane USB device implementation in\nthe field requiring this amount of retries at every I\/O read in order\nto properly work. Based on that assumption, it'd be good to have it\nbackported to stable but maybe not since driver implementation (the 10k\nnumber comes from day 0), perhaps up to 6.x series makes sense.\n\n[0] Commit 15fffc6a5624 (\"driver core: Fix uevent_show() vs driver detach race\")\n\n[1] A note about that: this syzkaller report presents multiple reproducers\nthat differs by the type of emulated USB device. For this specific case,\ncheck the entry from 2024\/08\/08 06:23 in the list of crashes; the C repro\nis available at https:\/\/syzkaller.appspot.com\/text?tag=ReproC&x=1521fc83980000."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c1b544563005a00591a3aa86ecff62ed4d11be3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f3551f67991652c83469c7dd51d7b9b187b265f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac064c656f105b9122bc43991a170f95f72b7a43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c386fb76f01794f1023d01a6ec5f5c93d00acd3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeb0b9b9e66b0b54cdad8e1c1cf0f55e8ba4211c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53191","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.657","lastModified":"2024-12-27T14:15:26.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix warning when unbinding\n\nIf there is an error during some initialization related to firmware,\nthe buffers dp->tx_ring[i].tx_status are released.\nHowever this is released again when the device is unbinded (ath12k_pci),\nand we get:\nWARNING: CPU: 0 PID: 2098 at mm\/slub.c:4689 free_large_kmalloc+0x4d\/0x80\nCall Trace:\nfree_large_kmalloc\nath12k_dp_free\nath12k_core_deinit\nath12k_pci_remove\n...\n\nThe issue is always reproducible from a VM because the MSI addressing\ninitialization is failing.\n\nIn order to fix the issue, just set the buffers to NULL after releasing in\norder to avoid the double free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/223b546c6222d42147eff034433002ca5e2e7e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90556b96338aa6037cd26dac857327fda7c19732","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94c9100b600f05a36b33f9ed76dbd6fb0eb25386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca68ce0d9f4bcd032fd1334441175ae399642a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53192","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.780","lastModified":"2024-12-27T14:15:26.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: clk-loongson2: Fix potential buffer overflow in flexible-array member access\n\nFlexible-array member `hws` in `struct clk_hw_onecell_data` is annotated\nwith the `counted_by()` attribute. This means that when memory is\nallocated for this array, the _counter_, which in this case is member\n`num` in the flexible structure, should be set to the maximum number of\nelements the flexible array can contain, or fewer.\n\nIn this case, the total number of elements for the flexible array is\ndetermined by variable `clks_num` when allocating heap space via\n`devm_kzalloc()`, as shown below:\n\n289         struct loongson2_clk_provider *clp;\n\t...\n296         for (p = data; p->name; p++)\n297                 clks_num++;\n298\n299         clp = devm_kzalloc(dev, struct_size(clp, clk_data.hws, clks_num),\n300                            GFP_KERNEL);\n\nSo, `clp->clk_data.num` should be set to `clks_num` or less, and not\nexceed `clks_num`, as is currently the case. Otherwise, if data is\nwritten into `clp->clk_data.hws[clks_num]`, the instrumentation\nprovided by the compiler won't detect the overflow, leading to a\nmemory corruption bug at runtime.\n\nFix this issue by setting `clp->clk_data.num` to `clks_num`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02fb4f0084331ef72c28d0c70fcb15d1bea369ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bf8877150128c3abd9d233886a05f6966fbf0c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b96fc194984d0c82de1ca2b4166b35b1298b216c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53193","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:26.897","lastModified":"2024-12-27T14:15:26.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: clk-loongson2: Fix memory corruption bug in struct loongson2_clk_provider\n\nSome heap space is allocated for the flexible structure `struct\nclk_hw_onecell_data` and its flexible-array member `hws` through\nthe composite structure `struct loongson2_clk_provider` in function\n`loongson2_clk_probe()`, as shown below:\n\n289         struct loongson2_clk_provider *clp;\n\t...\n296         for (p = data; p->name; p++)\n297                 clks_num++;\n298\n299         clp = devm_kzalloc(dev, struct_size(clp, clk_data.hws, clks_num),\n300                            GFP_KERNEL);\n\nThen some data is written into the flexible array:\n\n350                 clp->clk_data.hws[p->id] = hw;\n\nThis corrupts `clk_lock`, which is the spinlock variable immediately\nfollowing the `clk_data` member in `struct loongson2_clk_provider`:\n\nstruct loongson2_clk_provider {\n\tvoid __iomem *base;\n\tstruct device *dev;\n\tstruct clk_hw_onecell_data clk_data;\n\tspinlock_t clk_lock;\t\/* protect access to DIV registers *\/\n};\n\nThe problem is that the flexible structure is currently placed in the\nmiddle of `struct loongson2_clk_provider` instead of at the end.\n\nFix this by moving `struct clk_hw_onecell_data clk_data;` to the end of\n`struct loongson2_clk_provider`. Also, add a code comment to help\nprevent this from happening again in case new members are added to the\nstructure in the future.\n\nThis change also fixes the following -Wflex-array-member-not-at-end\nwarning:\n\ndrivers\/clk\/clk-loongson2.c:32:36: warning: structure containing a flexible array member is not at the end of another structure [-Wflex-array-member-not-at-end]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/145de18065b9840687d9b4e63746238c1da25d22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e4bf018bb040955da53dae9f8628ef8fcec2dbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76918202615f2ba7deda14901d9fff528a180099","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53194","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.007","lastModified":"2024-12-27T14:15:27.007","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: Fix use-after-free of slot->bus on hot remove\n\nDennis reports a boot crash on recent Lenovo laptops with a USB4 dock.\n\nSince commit 0fc70886569c (\"thunderbolt: Reset USB4 v2 host router\") and\ncommit 59a54c5f3dbd (\"thunderbolt: Reset topology created by the boot\nfirmware\"), USB4 v2 and v1 Host Routers are reset on probe of the\nthunderbolt driver.\n\nThe reset clears the Presence Detect State and Data Link Layer Link Active\nbits at the USB4 Host Router's Root Port and thus causes hot removal of the\ndock.\n\nThe crash occurs when pciehp is unbound from one of the dock's Downstream\nPorts:  pciehp creates a pci_slot on bind and destroys it on unbind.  The\npci_slot contains a pointer to the pci_bus below the Downstream Port, but\na reference on that pci_bus is never acquired.  The pci_bus is destroyed\nbefore the pci_slot, so a use-after-free ensues when pci_slot_release()\naccesses slot->bus.\n\nIn principle this should not happen because pci_stop_bus_device() unbinds\npciehp (and therefore destroys the pci_slot) before the pci_bus is\ndestroyed by pci_remove_bus_device().\n\nHowever the stacktrace provided by Dennis shows that pciehp is unbound from\npci_remove_bus_device() instead of pci_stop_bus_device().  To understand\nthe significance of this, one needs to know that the PCI core uses a two\nstep process to remove a portion of the hierarchy:  It first unbinds all\ndrivers in the sub-hierarchy in pci_stop_bus_device() and then actually\nremoves the devices in pci_remove_bus_device().  There is no precaution to\nprevent driver binding in-between pci_stop_bus_device() and\npci_remove_bus_device().\n\nIn Dennis' case, it seems removal of the hierarchy by pciehp races with\ndriver binding by pci_bus_add_devices().  pciehp is bound to the\nDownstream Port after pci_stop_bus_device() has run, so it is unbound by\npci_remove_bus_device() instead of pci_stop_bus_device().  Because the\npci_bus has already been destroyed at that point, accesses to it result in\na use-after-free.\n\nOne might conclude that driver binding needs to be prevented after\npci_stop_bus_device() has run.  However it seems risky that pci_slot points\nto pci_bus without holding a reference.  Solely relying on correct ordering\nof driver unbind versus pci_bus destruction is certainly not defensive\nprogramming.\n\nIf pci_slot has a need to access data in pci_bus, it ought to acquire a\nreference.  Amend pci_create_slot() accordingly.  Dennis reports that the\ncrash is not reproducible with this change.\n\nAbridged stacktrace:\n\n  pcieport 0000:00:07.0: PME: Signaling with IRQ 156\n  pcieport 0000:00:07.0: pciehp: Slot #12 AttnBtn- PwrCtrl- MRL- AttnInd- PwrInd- HotPlug+ Surprise+ Interlock- NoCompl+ IbPresDis- LLActRep+\n  pci_bus 0000:20: dev 00, created physical slot 12\n  pcieport 0000:00:07.0: pciehp: Slot(12): Card not present\n  ...\n  pcieport 0000:21:02.0: pciehp: pcie_disable_notification: SLOTCTRL d8 write cmd 0\n  Oops: general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b6b: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 13 UID: 0 PID: 134 Comm: irq\/156-pciehp Not tainted 6.11.0-devel+ #1\n  RIP: 0010:dev_driver_string+0x12\/0x40\n  pci_destroy_slot\n  pciehp_remove\n  pcie_port_remove_service\n  device_release_driver_internal\n  bus_remove_device\n  device_del\n  device_unregister\n  remove_iter\n  device_for_each_child\n  pcie_portdrv_remove\n  pci_device_remove\n  device_release_driver_internal\n  bus_remove_device\n  device_del\n  pci_remove_bus_device (recursive invocation)\n  pci_remove_bus_device\n  pciehp_unconfigure_device\n  pciehp_disable_slot\n  pciehp_handle_presence_or_link_change\n  pciehp_ist"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20502f0b3f3acd6bee300257556c27a867f80c8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41bbb1eb996be1435815aa1fbcc9ffc45b84cc12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50473dd3b2a08601a078f852ea05572de9b1f86c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69d2ceac11acf8579d58d55c9c5b65fb658f916e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7acef99642b763ba585f4a43af999fcdbcc3dc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8266ab8e7ccd1d1f5a9c8b29eb2020175048134","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0ddd2c92b75a19a37c887154223372b600fed37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da6e6ff1f6c57f16e07af955e0e997fc90dd1e75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5d5c04aac71bf1476dc44b56f2206a4c2facca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53195","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.137","lastModified":"2024-12-27T14:15:27.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Get rid of userspace_irqchip_in_use\n\nImproper use of userspace_irqchip_in_use led to syzbot hitting the\nfollowing WARN_ON() in kvm_timer_update_irq():\n\nWARNING: CPU: 0 PID: 3281 at arch\/arm64\/kvm\/arch_timer.c:459\nkvm_timer_update_irq+0x21c\/0x394\nCall trace:\n  kvm_timer_update_irq+0x21c\/0x394 arch\/arm64\/kvm\/arch_timer.c:459\n  kvm_timer_vcpu_reset+0x158\/0x684 arch\/arm64\/kvm\/arch_timer.c:968\n  kvm_reset_vcpu+0x3b4\/0x560 arch\/arm64\/kvm\/reset.c:264\n  kvm_vcpu_set_target arch\/arm64\/kvm\/arm.c:1553 [inline]\n  kvm_arch_vcpu_ioctl_vcpu_init arch\/arm64\/kvm\/arm.c:1573 [inline]\n  kvm_arch_vcpu_ioctl+0x112c\/0x1b3c arch\/arm64\/kvm\/arm.c:1695\n  kvm_vcpu_ioctl+0x4ec\/0xf74 virt\/kvm\/kvm_main.c:4658\n  vfs_ioctl fs\/ioctl.c:51 [inline]\n  __do_sys_ioctl fs\/ioctl.c:907 [inline]\n  __se_sys_ioctl fs\/ioctl.c:893 [inline]\n  __arm64_sys_ioctl+0x108\/0x184 fs\/ioctl.c:893\n  __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\n  invoke_syscall+0x78\/0x1b8 arch\/arm64\/kernel\/syscall.c:49\n  el0_svc_common+0xe8\/0x1b0 arch\/arm64\/kernel\/syscall.c:132\n  do_el0_svc+0x40\/0x50 arch\/arm64\/kernel\/syscall.c:151\n  el0_svc+0x54\/0x14c arch\/arm64\/kernel\/entry-common.c:712\n  el0t_64_sync_handler+0x84\/0xfc arch\/arm64\/kernel\/entry-common.c:730\n  el0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:598\n\nThe following sequence led to the scenario:\n - Userspace creates a VM and a vCPU.\n - The vCPU is initialized with KVM_ARM_VCPU_PMU_V3 during\n   KVM_ARM_VCPU_INIT.\n - Without any other setup, such as vGIC or vPMU, userspace issues\n   KVM_RUN on the vCPU. Since the vPMU is requested, but not setup,\n   kvm_arm_pmu_v3_enable() fails in kvm_arch_vcpu_run_pid_change().\n   As a result, KVM_RUN returns after enabling the timer, but before\n   incrementing 'userspace_irqchip_in_use':\n   kvm_arch_vcpu_run_pid_change()\n       ret = kvm_arm_pmu_v3_enable()\n           if (!vcpu->arch.pmu.created)\n               return -EINVAL;\n       if (ret)\n           return ret;\n       [...]\n       if (!irqchip_in_kernel(kvm))\n           static_branch_inc(&userspace_irqchip_in_use);\n - Userspace ignores the error and issues KVM_ARM_VCPU_INIT again.\n   Since the timer is already enabled, control moves through the\n   following flow, ultimately hitting the WARN_ON():\n   kvm_timer_vcpu_reset()\n       if (timer->enabled)\n          kvm_timer_update_irq()\n              if (!userspace_irqchip())\n                  ret = kvm_vgic_inject_irq()\n                      ret = vgic_lazy_init()\n                          if (unlikely(!vgic_initialized(kvm)))\n                              if (kvm->arch.vgic.vgic_model !=\n                                  KVM_DEV_TYPE_ARM_VGIC_V2)\n                                      return -EBUSY;\n                  WARN_ON(ret);\n\nTheoretically, since userspace_irqchip_in_use's functionality can be\nsimply replaced by '!irqchip_in_kernel()', get rid of the static key\nto avoid the mismanagement, which also helps with the syzbot issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38d7aacca09230fdb98a34194fec2af597e8e20d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c16e2dba39ff6ae84bb8dc9c8e0fb21d9b2f6f5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd2f9861f27571d47998d71e7516bf7216db0b52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe425d5239a28c21e0c83ee7a8f4cb210d29fdb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53196","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.267","lastModified":"2024-12-27T14:15:27.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Don't retire aborted MMIO instruction\n\nReturning an abort to the guest for an unsupported MMIO access is a\ndocumented feature of the KVM UAPI. Nevertheless, it's clear that this\nplumbing has seen limited testing, since userspace can trivially cause a\nWARN in the MMIO return:\n\n  WARNING: CPU: 0 PID: 30558 at arch\/arm64\/include\/asm\/kvm_emulate.h:536 kvm_handle_mmio_return+0x46c\/0x5c4 arch\/arm64\/include\/asm\/kvm_emulate.h:536\n  Call trace:\n   kvm_handle_mmio_return+0x46c\/0x5c4 arch\/arm64\/include\/asm\/kvm_emulate.h:536\n   kvm_arch_vcpu_ioctl_run+0x98\/0x15b4 arch\/arm64\/kvm\/arm.c:1133\n   kvm_vcpu_ioctl+0x75c\/0xa78 virt\/kvm\/kvm_main.c:4487\n   __do_sys_ioctl fs\/ioctl.c:51 [inline]\n   __se_sys_ioctl fs\/ioctl.c:893 [inline]\n   __arm64_sys_ioctl+0x14c\/0x1c8 fs\/ioctl.c:893\n   __invoke_syscall arch\/arm64\/kernel\/syscall.c:35 [inline]\n   invoke_syscall+0x98\/0x2b8 arch\/arm64\/kernel\/syscall.c:49\n   el0_svc_common+0x1e0\/0x23c arch\/arm64\/kernel\/syscall.c:132\n   do_el0_svc+0x48\/0x58 arch\/arm64\/kernel\/syscall.c:151\n   el0_svc+0x38\/0x68 arch\/arm64\/kernel\/entry-common.c:712\n   el0t_64_sync_handler+0x90\/0xfc arch\/arm64\/kernel\/entry-common.c:730\n   el0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:598\n\nThe splat is complaining that KVM is advancing PC while an exception is\npending, i.e. that KVM is retiring the MMIO instruction despite a\npending synchronous external abort. Womp womp.\n\nFix the glaring UAPI bug by skipping over all the MMIO emulation in\ncase there is a pending synchronous exception. Note that while userspace\nis capable of pending an asynchronous exception (SError, IRQ, or FIQ),\nit is still safe to retire the MMIO instruction in this case as (1) they\nare by definition asynchronous, and (2) KVM relies on hardware support\nfor pending\/delivering these exceptions instead of the software state\nmachine for advancing PC."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e46460efe1ef9a31748de7675ff8fe0d8601af2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6af853cf5f897d55f42e9166f4db50e84e404fb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0571c3add987bcb69c2ffd7a70c998bf8ce60fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e735a5da64420a86be370b216c269b5dd8e830e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6b5d98fea4ee8cb443ea98fda520909e90d30e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53197","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.383","lastModified":"2024-12-27T14:15:27.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix potential out-of-bound accesses for Extigy and Mbox devices\n\nA bogus device can provide a bNumConfigurations value that exceeds the\ninitial value used in usb_get_configuration for allocating dev->config.\n\nThis can lead to out-of-bounds accesses later, e.g. in\nusb_destroy_configuration."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b4ea4bfe16566b84645ded1403756a2dc4e0f19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/379d3b9799d9da953391e973b934764f01e03960","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62dc01c83fa71e10446ee4c31e0e3d5d1291e865","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/920a369a9f014f10ec282fd298d0666129379f1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9887d859cd60727432a01564e8f91302d361b72b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b8460a2a7ce478e0b625af7c56d444dc24190f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b521b53ac6eb04e41c03f46f7fe452e4d8e9bcca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8f8b81dabe52b413fe9e062e8a852c48dd0680d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b909df18ce2a998afef81d58bbd1a05dc0788c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53198","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.497","lastModified":"2024-12-27T14:15:27.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxen: Fix the issue of resource not being properly released in xenbus_dev_probe()\n\nThis patch fixes an issue in the function xenbus_dev_probe(). In the\nxenbus_dev_probe() function, within the if (err) branch at line 313, the\nprogram incorrectly returns err directly without releasing the resources\nallocated by err = drv->probe(dev, id). As the return value is non-zero,\nthe upper layers assume the processing logic has failed. However, the probe\noperation was performed earlier without a corresponding remove operation.\nSince the probe actually allocates resources, failing to perform the remove\noperation could lead to problems.\n\nTo fix this issue, we followed the resource release logic of the\nxenbus_dev_remove() function by adding a new block fail_remove before the\nfail_put block. After entering the branch if (err) at line 313, the\nfunction will use a goto statement to jump to the fail_remove block,\nensuring that the previously acquired resources are correctly released,\nthus preventing the reference count leak.\n\nThis bug was identified by an experimental static analysis tool developed\nby our team. The tool specializes in analyzing reference count operations\nand detecting potential issues where resources are not properly managed.\nIn this case, the tool flagged the missing release operation as a\npotential problem, which led to the development of this patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0aa9e30b5b4af5dd504801689d6d84c584290a45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/217bdce88b104269b73603b84d0ab4dd04f481bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f977a4c82d35d063f5fe198bbc501c4b1c5ea0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fc0996d2fefe61219375fd650601724b8cf2d30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/804b96f8d0a02fa10b92f28b2e042f9128ed3ffc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87106169b4ce26f85561f953d13d1fd86d99b612","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afc545da381ba0c651b2658966ac737032676f01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8823e6ff313465910edea07581627d85e68d9fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53199","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.623","lastModified":"2024-12-27T14:15:27.623","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: imx-audmix: Add NULL check in imx_audmix_probe\n\ndevm_kasprintf() can return a NULL pointer on failure,but this\nreturned value in imx_audmix_probe() is not checked.\nAdd NULL check in imx_audmix_probe(), to handle kernel NULL\npointer dereference error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c040cbe2e13da6454ae4748e04e53d885e1c9603","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc5aa71f39b44d8117b2417dafd0e2884a75dd37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e038f43edaf0083f6aa7c9415d86cf28dfd152f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53200","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.733","lastModified":"2024-12-27T14:15:27.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix null check for pipe_ctx->plane_state in hwss_setup_dpp\n\nThis commit addresses a null pointer dereference issue in\nhwss_setup_dpp(). The issue could occur when pipe_ctx->plane_state is\nnull. The fix adds a check to ensure `pipe_ctx->plane_state` is not null\nbefore accessing. This prevents a null pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/020002c76147ecfdafe95c44abd3240e216b6316","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd3d1de7a5957804ccd58c1b252f9e34710e3f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bc96c95070571c6c824e0d4c7783bee25a37876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95792a18da0795300e15075ac05d1915e9066999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53201","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.853","lastModified":"2024-12-27T14:15:27.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix null check for pipe_ctx->plane_state in dcn20_program_pipe\n\nThis commit addresses a null pointer dereference issue in\ndcn20_program_pipe(). Previously, commit 8e4ed3cf1642 (\"drm\/amd\/display:\nAdd null check for pipe_ctx->plane_state in dcn20_program_pipe\")\npartially fixed the null pointer dereference issue. However, in\ndcn20_update_dchubp_dpp(), the variable pipe_ctx is passed in, and\nplane_state is accessed again through pipe_ctx. Multiple if statements\ndirectly call attributes of plane_state, leading to potential null\npointer dereference issues. This patch adds necessary null checks to\nensure stability."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3609259326171cd5b98462636580fb2ae5c87d40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a057072ddd127255350357dd880903e8fa23f36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b4ee2560d4d8de2688da68cd9581177035e0876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53202","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:27.970","lastModified":"2024-12-27T14:15:27.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware_loader: Fix possible resource leak in fw_log_firmware_info()\n\nThe alg instance should be released under the exception path, otherwise\nthere may be resource leak here.\n\nTo mitigate this, free the alg instance with crypto_free_shash when kmalloc\nfails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/369a9c046c2fdfe037f05b43b84c386bdbccc103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/789a72498d32f88d24371c10985aceb46397056c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb5d67d00ad17a5bd0920f455160dc2ccbd2dc78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f380f895dbb2a11d62ca6df9e82d995f4bc26b84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53203","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.083","lastModified":"2024-12-27T14:15:28.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: fix potential array underflow in ucsi_ccg_sync_control()\n\nThe \"command\" variable can be controlled by the user via debugfs.  The\nworry is that if con_index is zero then \"&uc->ucsi->connector[con_index\n- 1]\" would be an array underflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/56971710cd541f2f05160a84b3183477d34a1be9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e56aac6e5a25630645607b6856d4b2a17b2311a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef92cd55289a282910575c5b9d87f646f2d39b38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53204","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.207","lastModified":"2024-12-27T14:15:28.207","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: realtek: usb: fix NULL deref in rtk_usb3phy_probe\n\nIn rtk_usb3phy_probe() devm_kzalloc() may return NULL\nbut this returned value is not checked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/48d52d3168749e10c1c37cd4ceccd18625851741","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/776f13ad1f88485206f1dca5ef138553106950e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf373d2919d98f3d1fe1b19a0304f72fe74386d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53205","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.340","lastModified":"2024-12-27T14:15:28.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: realtek: usb: fix NULL deref in rtk_usb2phy_probe\n\nIn rtk_usb2phy_probe() devm_kzalloc() may return NULL\nbut this returned value is not checked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04e3e9188291a183b27306ddb833722c0d083d6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b398b6b6c94315fd2ce3658e3cee96539dbd7b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb83c9a08324e37f321ffb400809aa4310387d65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53206","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.453","lastModified":"2024-12-27T14:15:28.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix use-after-free of nreq in reqsk_timer_handler().\n\nThe cited commit replaced inet_csk_reqsk_queue_drop_and_put() with\n__inet_csk_reqsk_queue_drop() and reqsk_put() in reqsk_timer_handler().\n\nThen, oreq should be passed to reqsk_put() instead of req; otherwise\nuse-after-free of nreq could happen when reqsk is migrated but the\nretry attempt failed (e.g. due to timeout).\n\nLet's pass oreq to reqsk_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dcc86fefe09ac853158afd96b60d544af115dc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65ed89cad1f57034c256b016e89e8c0a4ec7c65b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d845028609a4af0ad66f499ee0bd5789122b067","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a3c1ad93e6fba67b3a637cfa95a57a6685e4908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c31e72d021db2714df03df6c42855a1db592716c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0eb14cb8c08b00c36a3d5dc57a6f428b301f721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53207","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.563","lastModified":"2024-12-27T14:15:28.563","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix possible deadlocks\n\nThis fixes possible deadlocks like the following caused by\nhci_cmd_sync_dequeue causing the destroy function to run:\n\n INFO: task kworker\/u19:0:143 blocked for more than 120 seconds.\n       Tainted: G        W  O        6.8.0-2024-03-19-intel-next-iLS-24ww14 #1\n \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n task:kworker\/u19:0   state:D stack:0     pid:143   tgid:143   ppid:2      flags:0x00004000\n Workqueue: hci0 hci_cmd_sync_work [bluetooth]\n Call Trace:\n  <TASK>\n  __schedule+0x374\/0xaf0\n  schedule+0x3c\/0xf0\n  schedule_preempt_disabled+0x1c\/0x30\n  __mutex_lock.constprop.0+0x3ef\/0x7a0\n  __mutex_lock_slowpath+0x13\/0x20\n  mutex_lock+0x3c\/0x50\n  mgmt_set_connectable_complete+0xa4\/0x150 [bluetooth]\n  ? kfree+0x211\/0x2a0\n  hci_cmd_sync_dequeue+0xae\/0x130 [bluetooth]\n  ? __pfx_cmd_complete_rsp+0x10\/0x10 [bluetooth]\n  cmd_complete_rsp+0x26\/0x80 [bluetooth]\n  mgmt_pending_foreach+0x4d\/0x70 [bluetooth]\n  __mgmt_power_off+0x8d\/0x180 [bluetooth]\n  ? _raw_spin_unlock_irq+0x23\/0x40\n  hci_dev_close_sync+0x445\/0x5b0 [bluetooth]\n  hci_set_powered_sync+0x149\/0x250 [bluetooth]\n  set_powered_sync+0x24\/0x60 [bluetooth]\n  hci_cmd_sync_work+0x90\/0x150 [bluetooth]\n  process_one_work+0x13e\/0x300\n  worker_thread+0x2f7\/0x420\n  ? __pfx_worker_thread+0x10\/0x10\n  kthread+0x107\/0x140\n  ? __pfx_kthread+0x10\/0x10\n  ret_from_fork+0x3d\/0x60\n  ? __pfx_kthread+0x10\/0x10\n  ret_from_fork_asm+0x1b\/0x30\n  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5703fb1d85f653e35b327b14de4db7da239e4fd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a25ce9b4af6dc26ee2b9c32d6bd37620bf9739e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a66dfaf18fd61bb75ef8cee83db46b2aadf153d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3f594a3473d6429a0bcf2004cb2885368741b79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cac34e44281f1f1bd842adbbcfe3ef9ff0905111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53208","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.677","lastModified":"2024-12-27T14:15:28.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix slab-use-after-free Read in set_powered_sync\n\nThis fixes the following crash:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in set_powered_sync+0x3a\/0xc0 net\/bluetooth\/mgmt.c:1353\nRead of size 8 at addr ffff888029b4dd18 by task kworker\/u9:0\/54\n\nCPU: 1 UID: 0 PID: 54 Comm: kworker\/u9:0 Not tainted 6.11.0-rc6-syzkaller-01155-gf723224742fc #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nWorkqueue: hci0 hci_cmd_sync_work\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:93 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:119\n print_address_description mm\/kasan\/report.c:377 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:488\nq kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n set_powered_sync+0x3a\/0xc0 net\/bluetooth\/mgmt.c:1353\n hci_cmd_sync_work+0x22b\/0x400 net\/bluetooth\/hci_sync.c:328\n process_one_work kernel\/workqueue.c:3231 [inline]\n process_scheduled_works+0xa2c\/0x1830 kernel\/workqueue.c:3312\n worker_thread+0x86d\/0xd10 kernel\/workqueue.c:3389\n kthread+0x2f0\/0x390 kernel\/kthread.c:389\n ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n <\/TASK>\n\nAllocated by task 5247:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n poison_kmalloc_redzone mm\/kasan\/common.c:370 [inline]\n __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:387\n kasan_kmalloc include\/linux\/kasan.h:211 [inline]\n __kmalloc_cache_noprof+0x19c\/0x2c0 mm\/slub.c:4193\n kmalloc_noprof include\/linux\/slab.h:681 [inline]\n kzalloc_noprof include\/linux\/slab.h:807 [inline]\n mgmt_pending_new+0x65\/0x250 net\/bluetooth\/mgmt_util.c:269\n mgmt_pending_add+0x36\/0x120 net\/bluetooth\/mgmt_util.c:296\n set_powered+0x3cd\/0x5e0 net\/bluetooth\/mgmt.c:1394\n hci_mgmt_cmd+0xc47\/0x11d0 net\/bluetooth\/hci_sock.c:1712\n hci_sock_sendmsg+0x7b8\/0x11c0 net\/bluetooth\/hci_sock.c:1832\n sock_sendmsg_nosec net\/socket.c:730 [inline]\n __sock_sendmsg+0x221\/0x270 net\/socket.c:745\n sock_write_iter+0x2dd\/0x400 net\/socket.c:1160\n new_sync_write fs\/read_write.c:497 [inline]\n vfs_write+0xa72\/0xc90 fs\/read_write.c:590\n ksys_write+0x1a0\/0x2c0 fs\/read_write.c:643\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nFreed by task 5246:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n kasan_save_free_info+0x40\/0x50 mm\/kasan\/generic.c:579\n poison_slab_object+0xe0\/0x150 mm\/kasan\/common.c:240\n __kasan_slab_free+0x37\/0x60 mm\/kasan\/common.c:256\n kasan_slab_free include\/linux\/kasan.h:184 [inline]\n slab_free_hook mm\/slub.c:2256 [inline]\n slab_free mm\/slub.c:4477 [inline]\n kfree+0x149\/0x360 mm\/slub.c:4598\n settings_rsp+0x2bc\/0x390 net\/bluetooth\/mgmt.c:1443\n mgmt_pending_foreach+0xd1\/0x130 net\/bluetooth\/mgmt_util.c:259\n __mgmt_power_off+0x112\/0x420 net\/bluetooth\/mgmt.c:9455\n hci_dev_close_sync+0x665\/0x11a0 net\/bluetooth\/hci_sync.c:5191\n hci_dev_do_close net\/bluetooth\/hci_core.c:483 [inline]\n hci_dev_close+0x112\/0x210 net\/bluetooth\/hci_core.c:508\n sock_do_ioctl+0x158\/0x460 net\/socket.c:1222\n sock_ioctl+0x629\/0x8e0 net\/socket.c:1341\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:907 [inline]\n __se_sys_ioctl+0xfc\/0x170 fs\/ioctl.c:893\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83gv\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b882940665ca2849386ee459d4331aa2f8c4e7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b75f32bce90c085c89c45761373d940fdcff68c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87819234aa1d2a0cb0f962fabb335e798f5ec8b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f7a972194ad20696c36523b54c19a3567e0697","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdfc818ffdfeb8266351ed59b6d884056009a095","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53209","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.793","lastModified":"2024-12-27T14:15:28.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix receive ring space parameters when XDP is active\n\nThe MTU setting at the time an XDP multi-buffer is attached\ndetermines whether the aggregation ring will be used and the\nrx_skb_func handler.  This is done in bnxt_set_rx_skb_mode().\n\nIf the MTU is later changed, the aggregation ring setting may need\nto be changed and it may become out-of-sync with the settings\ninitially done in bnxt_set_rx_skb_mode().  This may result in\nrandom memory corruption and crashes as the HW may DMA data larger\nthan the allocated buffer size, such as:\n\nBUG: kernel NULL pointer dereference, address: 00000000000003c0\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 17 PID: 0 Comm: swapper\/17 Kdump: loaded Tainted: G S         OE      6.1.0-226bf9805506 #1\nHardware name: Wiwynn Delta Lake PVT BZA.02601.0150\/Delta Lake-Class1, BIOS F0E_3A12 08\/26\/2021\nRIP: 0010:bnxt_rx_pkt+0xe97\/0x1ae0 [bnxt_en]\nCode: 8b 95 70 ff ff ff 4c 8b 9d 48 ff ff ff 66 41 89 87 b4 00 00 00 e9 0b f7 ff ff 0f b7 43 0a 49 8b 95 a8 04 00 00 25 ff 0f 00 00 <0f> b7 14 42 48 c1 e2 06 49 03 95 a0 04 00 00 0f b6 42 33f\nRSP: 0018:ffffa19f40cc0d18 EFLAGS: 00010202\nRAX: 00000000000001e0 RBX: ffff8e2c805c6100 RCX: 00000000000007ff\nRDX: 0000000000000000 RSI: ffff8e2c271ab990 RDI: ffff8e2c84f12380\nRBP: ffffa19f40cc0e48 R08: 000000000001000d R09: 974ea2fcddfa4cbf\nR10: 0000000000000000 R11: ffffa19f40cc0ff8 R12: ffff8e2c94b58980\nR13: ffff8e2c952d6600 R14: 0000000000000016 R15: ffff8e2c271ab990\nFS:  0000000000000000(0000) GS:ffff8e3b3f840000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000000003c0 CR3: 0000000e8580a004 CR4: 00000000007706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <IRQ>\n __bnxt_poll_work+0x1c2\/0x3e0 [bnxt_en]\n\nTo address the issue, we now call bnxt_set_rx_skb_mode() within\nbnxt_change_mtu() to properly set the AGG rings configuration and\nupdate rx_skb_func based on the new MTU value.\nAdditionally, BNXT_FLAG_NO_AGG_RINGS is cleared at the beginning of\nbnxt_set_rx_skb_mode() to make sure it gets set or cleared based on\nthe current MTU."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3051a77a09dfe3022aa012071346937fdf059033","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84353386762a0a16dd444ead76c012e167d89b41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf54a7660fc8d2166f41ff1d67a643b15d8b2250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53210","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:28.897","lastModified":"2024-12-27T14:15:28.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/iucv: MSG_PEEK causes memory leak in iucv_sock_destruct()\n\nPassing MSG_PEEK flag to skb_recv_datagram() increments skb refcount\n(skb->users) and iucv_sock_recvmsg() does not decrement skb refcount\nat exit.\nThis results in skb memory leak in skb_queue_purge() and WARN_ON in\niucv_sock_destruct() during socket close. To fix this decrease\nskb refcount by one if MSG_PEEK is set in order to prevent memory\nleak and WARN_ON.\n\nWARNING: CPU: 2 PID: 6292 at net\/iucv\/af_iucv.c:286 iucv_sock_destruct+0x144\/0x1a0 [af_iucv]\nCPU: 2 PID: 6292 Comm: afiucv_test_msg Kdump: loaded Tainted: G        W          6.10.0-rc7 #1\nHardware name: IBM 3931 A01 704 (z\/VM 7.3.0)\nCall Trace:\n        [<001587c682c4aa98>] iucv_sock_destruct+0x148\/0x1a0 [af_iucv]\n        [<001587c682c4a9d0>] iucv_sock_destruct+0x80\/0x1a0 [af_iucv]\n        [<001587c704117a32>] __sk_destruct+0x52\/0x550\n        [<001587c704104a54>] __sock_release+0xa4\/0x230\n        [<001587c704104c0c>] sock_close+0x2c\/0x40\n        [<001587c702c5f5a8>] __fput+0x2e8\/0x970\n        [<001587c7024148c4>] task_work_run+0x1c4\/0x2c0\n        [<001587c7023b0716>] do_exit+0x996\/0x1050\n        [<001587c7023b13aa>] do_group_exit+0x13a\/0x360\n        [<001587c7023b1626>] __s390x_sys_exit_group+0x56\/0x60\n        [<001587c7022bccca>] do_syscall+0x27a\/0x380\n        [<001587c7049a6a0c>] __do_syscall+0x9c\/0x160\n        [<001587c7049ce8a8>] system_call+0x70\/0x98\n        Last Breaking-Event-Address:\n        [<001587c682c4a9d4>] iucv_sock_destruct+0x84\/0x1a0 [af_iucv]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42251c2d1ef1cb0822638bebb87ad9120c759673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/783c2c6e61c5a04eb8baea598753d5fa174dbe85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/934326aef7ac4652f81c69d18bf44eebaefc39c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f603e66e1c59c1d25e60eb0636cb307d190782e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebaf81317e42aa990ad20b113cfe3a7b20d4e937","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53211","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.017","lastModified":"2024-12-27T14:15:29.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/l2tp: fix warning in l2tp_exit_net found by syzbot\n\nIn l2tp's net exit handler, we check that an IDR is empty before\ndestroying it:\n\n\tWARN_ON_ONCE(!idr_is_empty(&pn->l2tp_tunnel_idr));\n\tidr_destroy(&pn->l2tp_tunnel_idr);\n\nBy forcing memory allocation failures in idr_alloc_32, syzbot is able\nto provoke a condition where idr_is_empty returns false despite there\nbeing no items in the IDR. This turns out to be because the radix tree\nof the IDR contains only internal radix-tree nodes and it is this that\ncauses idr_is_empty to return false. The internal nodes are cleaned by\nidr_destroy.\n\nUse idr_for_each to check that the IDR is empty instead of\nidr_is_empty to avoid the problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d066766c5f1252f98ff859265bcd1a5b52ac46c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a487cc8986d6dd75b60b59004f3bd2ea9b4dd541","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53212","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.130","lastModified":"2024-12-27T14:15:29.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetlink: fix false positive warning in extack during dumps\n\nCommit under fixes extended extack reporting to dumps.\nIt works under normal conditions, because extack errors are\nusually reported during ->start() or the first ->dump(),\nit's quite rare that the dump starts okay but fails later.\nIf the dump does fail later, however, the input skb will\nalready have the initiating message pulled, so checking\nif bad attr falls within skb->data will fail.\n\nSwitch the check to using nlh, which is always valid.\n\nsyzbot found a way to hit that scenario by filling up\nthe receive queue. In this case we initiate a dump\nbut don't call ->dump() until there is read space for\nan skb.\n\nWARNING: CPU: 1 PID: 5845 at net\/netlink\/af_netlink.c:2210 netlink_ack_tlv_fill+0x1a8\/0x560 net\/netlink\/af_netlink.c:2209\nRIP: 0010:netlink_ack_tlv_fill+0x1a8\/0x560 net\/netlink\/af_netlink.c:2209\nCall Trace:\n <TASK>\n netlink_dump_done+0x513\/0x970 net\/netlink\/af_netlink.c:2250\n netlink_dump+0x91f\/0xe10 net\/netlink\/af_netlink.c:2351\n netlink_recvmsg+0x6bb\/0x11d0 net\/netlink\/af_netlink.c:1983\n sock_recvmsg_nosec net\/socket.c:1051 [inline]\n sock_recvmsg+0x22f\/0x280 net\/socket.c:1073\n __sys_recvfrom+0x246\/0x3d0 net\/socket.c:2267\n __do_sys_recvfrom net\/socket.c:2285 [inline]\n __se_sys_recvfrom net\/socket.c:2281 [inline]\n __x64_sys_recvfrom+0xde\/0x100 net\/socket.c:2281\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n RIP: 0033:0x7ff37dd17a79"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28af028a71371df5fcbf807fd4444bba8d0c33cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bf39fa849ab8ed52abb6715922e6102d3df9f97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6406d0ce0414b807af5d2a4b781c3f3ee52b8a4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53213","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.237","lastModified":"2024-12-27T14:15:29.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: lan78xx: Fix double free issue with interrupt buffer allocation\n\nIn lan78xx_probe(), the buffer `buf` was being freed twice: once\nimplicitly through `usb_free_urb(dev->urb_intr)` with the\n`URB_FREE_BUFFER` flag and again explicitly by `kfree(buf)`. This caused\na double free issue.\n\nTo resolve this, reordered `kmalloc()` and `usb_alloc_urb()` calls to\nsimplify the initialization sequence and removed the redundant\n`kfree(buf)`.  Now, `buf` is allocated after `usb_alloc_urb()`, ensuring\nit is correctly managed by  `usb_fill_int_urb()` and freed by\n`usb_free_urb()` as intended."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03819abbeb11117dcbba40bfe322b88c0c88a6b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ac9f3c981eeceee2ec4d30d850f4a6f50a1ec40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/977128343fc2a30737399b58df8ea77e94f164bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a422ebec863d99d5607fb41bb7af3347fcb436d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b09512aea6223eec756f52aa584fc29eeab57480","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53214","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.337","lastModified":"2024-12-27T14:15:29.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvfio\/pci: Properly hide first-in-list PCIe extended capability\n\nThere are cases where a PCIe extended capability should be hidden from\nthe user. For example, an unknown capability (i.e., capability with ID\ngreater than PCI_EXT_CAP_ID_MAX) or a capability that is intentionally\nchosen to be hidden from the user.\n\nHiding a capability is done by virtualizing and modifying the 'Next\nCapability Offset' field of the previous capability so it points to the\ncapability after the one that should be hidden.\n\nThe special case where the first capability in the list should be hidden\nis handled differently because there is no previous capability that can\nbe modified. In this case, the capability ID and version are zeroed\nwhile leaving the next pointer intact. This hides the capability and\nleaves an anchor for the rest of the capability list.\n\nHowever, today, hiding the first capability in the list is not done\nproperly if the capability is unknown, as struct\nvfio_pci_core_device->pci_config_map is set to the capability ID during\ninitialization but the capability ID is not properly checked later when\nused in vfio_config_do_rw(). This leads to the following warning [1] and\nto an out-of-bounds access to ecap_perms array.\n\nFix it by checking cap_id in vfio_config_do_rw(), and if it is greater\nthan PCI_EXT_CAP_ID_MAX, use an alternative struct perm_bits for direct\nread only access instead of the ecap_perms array.\n\nNote that this is safe since the above is the only case where cap_id can\nexceed PCI_EXT_CAP_ID_MAX (except for the special capabilities, which\nare already checked before).\n\n[1]\n\nWARNING: CPU: 118 PID: 5329 at drivers\/vfio\/pci\/vfio_pci_config.c:1900 vfio_pci_config_rw+0x395\/0x430 [vfio_pci_core]\nCPU: 118 UID: 0 PID: 5329 Comm: simx-qemu-syste Not tainted 6.12.0+ #1\n(snip)\nCall Trace:\n <TASK>\n ? show_regs+0x69\/0x80\n ? __warn+0x8d\/0x140\n ? vfio_pci_config_rw+0x395\/0x430 [vfio_pci_core]\n ? report_bug+0x18f\/0x1a0\n ? handle_bug+0x63\/0xa0\n ? exc_invalid_op+0x19\/0x70\n ? asm_exc_invalid_op+0x1b\/0x20\n ? vfio_pci_config_rw+0x395\/0x430 [vfio_pci_core]\n ? vfio_pci_config_rw+0x244\/0x430 [vfio_pci_core]\n vfio_pci_rw+0x101\/0x1b0 [vfio_pci_core]\n vfio_pci_core_read+0x1d\/0x30 [vfio_pci_core]\n vfio_device_fops_read+0x27\/0x40 [vfio]\n vfs_read+0xbd\/0x340\n ? vfio_device_fops_unl_ioctl+0xbb\/0x740 [vfio]\n ? __rseq_handle_notify_resume+0xa4\/0x4b0\n __x64_sys_pread64+0x96\/0xc0\n x64_sys_call+0x1c3d\/0x20d0\n do_syscall_64+0x4d\/0x120\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06f2fcf49854ad05a09d09e0dbee6544fff04695","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0918f5643fc6c3f7801f4a22397d2cc09ba99207","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ef195178fb552478eb2587df4ad3be14ef76507","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4464e5aa3aa4574063640f1082f7d7e323af8eb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c6502d944168cbd7e03a4a08ad6488f78d73485","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d121f66b67921fb3b95e0ea9856bfba53733e91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/949bee8065a85a5c6607c624dc05b5bc17119699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9567bd34aa3b986736c290c5bcba47e0182ac47a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe4bf8d0b6716a423b16495d55b35d3fe515905d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53215","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.467","lastModified":"2024-12-27T14:15:29.467","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsvcrdma: fix miss destroy percpu_counter in svc_rdma_proc_init()\n\nThere's issue as follows:\nRPC: Registered rdma transport module.\nRPC: Registered rdma backchannel transport module.\nRPC: Unregistered rdma transport module.\nRPC: Unregistered rdma backchannel transport module.\nBUG: unable to handle page fault for address: fffffbfff80c609a\nPGD 123fee067 P4D 123fee067 PUD 123fea067 PMD 10c624067 PTE 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN NOPTI\nRIP: 0010:percpu_counter_destroy_many+0xf7\/0x2a0\nCall Trace:\n <TASK>\n __die+0x1f\/0x70\n page_fault_oops+0x2cd\/0x860\n spurious_kernel_fault+0x36\/0x450\n do_kern_addr_fault+0xca\/0x100\n exc_page_fault+0x128\/0x150\n asm_exc_page_fault+0x26\/0x30\n percpu_counter_destroy_many+0xf7\/0x2a0\n mmdrop+0x209\/0x350\n finish_task_switch.isra.0+0x481\/0x840\n schedule_tail+0xe\/0xd0\n ret_from_fork+0x23\/0x80\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nIf register_sysctl() return NULL, then svc_rdma_proc_cleanup() will not\ndestroy the percpu counters which init in svc_rdma_proc_init().\nIf CONFIG_HOTPLUG_CPU is enabled, residual nodes may be in the\n'percpu_counters' list. The above issue may occur once the module is\nremoved. If the CONFIG_HOTPLUG_CPU configuration is not enabled, memory\nleakage occurs.\nTo solve above issue just destroy all percpu counters when\nregister_sysctl() return NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c9a99c89e45b22eb556fd2f3f729f2683f247d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20322edcbad82a60321a8615a99ca73a9611115f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94d2d6d398706ab7218a26d61e12919c4b498e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a12c897adf40b6e2b4a56e6912380c31bd7b2479","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce89e742a4c12b20f09a43fec1b21db33f2166cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebf47215d46992caea660ec01cd618005d9e687a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53216","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.587","lastModified":"2024-12-27T14:15:29.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: release svc_expkey\/svc_export with rcu_work\n\nThe last reference for `cache_head` can be reduced to zero in `c_show`\nand `e_show`(using `rcu_read_lock` and `rcu_read_unlock`). Consequently,\n`svc_export_put` and `expkey_put` will be invoked, leading to two\nissues:\n\n1. The `svc_export_put` will directly free ex_uuid. However,\n   `e_show`\/`c_show` will access `ex_uuid` after `cache_put`, which can\n   trigger a use-after-free issue, shown below.\n\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in svc_export_show+0x362\/0x430 [nfsd]\n   Read of size 1 at addr ff11000010fdc120 by task cat\/870\n\n   CPU: 1 UID: 0 PID: 870 Comm: cat Not tainted 6.12.0-rc3+ #1\n   Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n   1.16.1-2.fc37 04\/01\/2014\n   Call Trace:\n    <TASK>\n    dump_stack_lvl+0x53\/0x70\n    print_address_description.constprop.0+0x2c\/0x3a0\n    print_report+0xb9\/0x280\n    kasan_report+0xae\/0xe0\n    svc_export_show+0x362\/0x430 [nfsd]\n    c_show+0x161\/0x390 [sunrpc]\n    seq_read_iter+0x589\/0x770\n    seq_read+0x1e5\/0x270\n    proc_reg_read+0xe1\/0x140\n    vfs_read+0x125\/0x530\n    ksys_read+0xc1\/0x160\n    do_syscall_64+0x5f\/0x170\n    entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n   Allocated by task 830:\n    kasan_save_stack+0x20\/0x40\n    kasan_save_track+0x14\/0x30\n    __kasan_kmalloc+0x8f\/0xa0\n    __kmalloc_node_track_caller_noprof+0x1bc\/0x400\n    kmemdup_noprof+0x22\/0x50\n    svc_export_parse+0x8a9\/0xb80 [nfsd]\n    cache_do_downcall+0x71\/0xa0 [sunrpc]\n    cache_write_procfs+0x8e\/0xd0 [sunrpc]\n    proc_reg_write+0xe1\/0x140\n    vfs_write+0x1a5\/0x6d0\n    ksys_write+0xc1\/0x160\n    do_syscall_64+0x5f\/0x170\n    entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n   Freed by task 868:\n    kasan_save_stack+0x20\/0x40\n    kasan_save_track+0x14\/0x30\n    kasan_save_free_info+0x3b\/0x60\n    __kasan_slab_free+0x37\/0x50\n    kfree+0xf3\/0x3e0\n    svc_export_put+0x87\/0xb0 [nfsd]\n    cache_purge+0x17f\/0x1f0 [sunrpc]\n    nfsd_destroy_serv+0x226\/0x2d0 [nfsd]\n    nfsd_svc+0x125\/0x1e0 [nfsd]\n    write_threads+0x16a\/0x2a0 [nfsd]\n    nfsctl_transaction_write+0x74\/0xa0 [nfsd]\n    vfs_write+0x1a5\/0x6d0\n    ksys_write+0xc1\/0x160\n    do_syscall_64+0x5f\/0x170\n    entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n2. We cannot sleep while using `rcu_read_lock`\/`rcu_read_unlock`.\n   However, `svc_export_put`\/`expkey_put` will call path_put, which\n   subsequently triggers a sleeping operation due to the following\n   `dput`.\n\n   =============================\n   WARNING: suspicious RCU usage\n   5.10.0-dirty #141 Not tainted\n   -----------------------------\n   ...\n   Call Trace:\n   dump_stack+0x9a\/0xd0\n   ___might_sleep+0x231\/0x240\n   dput+0x39\/0x600\n   path_put+0x1b\/0x30\n   svc_export_put+0x17\/0x80\n   e_show+0x1c9\/0x200\n   seq_read_iter+0x63f\/0x7c0\n   seq_read+0x226\/0x2d0\n   vfs_read+0x113\/0x2c0\n   ksys_read+0xc9\/0x170\n   do_syscall_64+0x33\/0x40\n   entry_SYSCALL_64_after_hwframe+0x67\/0xd1\n\nFix these issues by using `rcu_work` to help release\n`svc_expkey`\/`svc_export`. This approach allows for an asynchronous\ncontext to invoke `path_put` and also facilitates the freeing of\n`uuid\/exp\/key` after an RCU grace period."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e4854599200f4d021df8ae17e69221d7c149f3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad4363a24a5746b257c0beb5d8cc68f9b62c173f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd8524148dd8c123334b066faa90590ba2ef8e6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8c989a0c89a75d30f899a7cabdc14d72522bb8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53217","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.693","lastModified":"2024-12-27T14:15:29.693","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Prevent NULL dereference in nfsd4_process_cb_update()\n\n@ses is initialized to NULL. If __nfsd4_find_backchannel() finds no\navailable backchannel session, setup_callback_client() will try to\ndereference @ses and segfault."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03178cd8f67227015debb700123987fe96275cd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c3b0e326f838787d229314d4de83af9c53347e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e02c641c3a43c88cecc08402000418e15578d38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a4ffc1aa9d618e41ad9151f40966e402e58a5a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/752a75811f27300fe8131b0a1efc91960f6f88e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5d90f9302742985a5078e42ac38de42c364c44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cac1405e3ff6685a438e910ad719e0cf06af90ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9a0d1f6e15859ea7a86a327f28491e23deaaa62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb51733ae5fc73d95bd857d5da26f9f65b202a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53218","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.840","lastModified":"2024-12-27T14:15:29.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix race in concurrent f2fs_stop_gc_thread\n\nIn my test case, concurrent calls to f2fs shutdown report the following\nstack trace:\n\n Oops: general protection fault, probably for non-canonical address 0xc6cfff63bb5513fc: 0000 [#1] PREEMPT SMP PTI\n CPU: 0 UID: 0 PID: 678 Comm: f2fs_rep_shutdo Not tainted 6.12.0-rc5-next-20241029-g6fb2fa9805c5-dirty #85\n Call Trace:\n  <TASK>\n  ? show_regs+0x8b\/0xa0\n  ? __die_body+0x26\/0xa0\n  ? die_addr+0x54\/0x90\n  ? exc_general_protection+0x24b\/0x5c0\n  ? asm_exc_general_protection+0x26\/0x30\n  ? kthread_stop+0x46\/0x390\n  f2fs_stop_gc_thread+0x6c\/0x110\n  f2fs_do_shutdown+0x309\/0x3a0\n  f2fs_ioc_shutdown+0x150\/0x1c0\n  __f2fs_ioctl+0xffd\/0x2ac0\n  f2fs_ioctl+0x76\/0xe0\n  vfs_ioctl+0x23\/0x60\n  __x64_sys_ioctl+0xce\/0xf0\n  x64_sys_call+0x2b1b\/0x4540\n  do_syscall_64+0xa7\/0x240\n  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nThe root cause is a race condition in f2fs_stop_gc_thread() called from\ndifferent f2fs shutdown paths:\n\n  [CPU0]                       [CPU1]\n  ----------------------       -----------------------\n  f2fs_stop_gc_thread          f2fs_stop_gc_thread\n                                 gc_th = sbi->gc_thread\n    gc_th = sbi->gc_thread\n    kfree(gc_th)\n    sbi->gc_thread = NULL\n                                 < gc_th != NULL >\n                                 kthread_stop(gc_th->f2fs_gc_task) \/\/UAF\n\nThe commit c7f114d864ac (\"f2fs: fix to avoid use-after-free in\nf2fs_stop_gc_thread()\") attempted to fix this issue by using a read\nsemaphore to prevent races between shutdown and remount threads, but\nit fails to prevent all race conditions.\n\nFix it by converting to write lock of s_umount in f2fs_do_shutdown()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60457ed6c67625c87861f96912b4179dc2293896","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/794fa8792d4eacac191f1cbcc2e81b7369e4662a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b0033dbc48340a1c1c3f12448ba17d6587ca092","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c631207897a9b3d41167ceca58e07f8f94720e42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53219","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:29.963","lastModified":"2024-12-27T14:15:29.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtiofs: use pages instead of pointer for kernel direct IO\n\nWhen trying to insert a 10MB kernel module kept in a virtio-fs with cache\ndisabled, the following warning was reported:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 1 PID: 404 at mm\/page_alloc.c:4551 ......\n  Modules linked in:\n  CPU: 1 PID: 404 Comm: insmod Not tainted 6.9.0-rc5+ #123\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) ......\n  RIP: 0010:__alloc_pages+0x2bf\/0x380\n  ......\n  Call Trace:\n   <TASK>\n   ? __warn+0x8e\/0x150\n   ? __alloc_pages+0x2bf\/0x380\n   __kmalloc_large_node+0x86\/0x160\n   __kmalloc+0x33c\/0x480\n   virtio_fs_enqueue_req+0x240\/0x6d0\n   virtio_fs_wake_pending_and_unlock+0x7f\/0x190\n   queue_request_and_unlock+0x55\/0x60\n   fuse_simple_request+0x152\/0x2b0\n   fuse_direct_io+0x5d2\/0x8c0\n   fuse_file_read_iter+0x121\/0x160\n   __kernel_read+0x151\/0x2d0\n   kernel_read+0x45\/0x50\n   kernel_read_file+0x1a9\/0x2a0\n   init_module_from_file+0x6a\/0xe0\n   idempotent_init_module+0x175\/0x230\n   __x64_sys_finit_module+0x5d\/0xb0\n   x64_sys_call+0x1c3\/0x9e0\n   do_syscall_64+0x3d\/0xc0\n   entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n   ......\n   <\/TASK>\n  ---[ end trace 0000000000000000 ]---\n\nThe warning is triggered as follows:\n\n1) syscall finit_module() handles the module insertion and it invokes\nkernel_read_file() to read the content of the module first.\n\n2) kernel_read_file() allocates a 10MB buffer by using vmalloc() and\npasses it to kernel_read(). kernel_read() constructs a kvec iter by\nusing iov_iter_kvec() and passes it to fuse_file_read_iter().\n\n3) virtio-fs disables the cache, so fuse_file_read_iter() invokes\nfuse_direct_io(). As for now, the maximal read size for kvec iter is\nonly limited by fc->max_read. For virtio-fs, max_read is UINT_MAX, so\nfuse_direct_io() doesn't split the 10MB buffer. It saves the address and\nthe size of the 10MB-sized buffer in out_args[0] of a fuse request and\npasses the fuse request to virtio_fs_wake_pending_and_unlock().\n\n4) virtio_fs_wake_pending_and_unlock() uses virtio_fs_enqueue_req() to\nqueue the request. Because virtiofs need DMA-able address, so\nvirtio_fs_enqueue_req() uses kmalloc() to allocate a bounce buffer for\nall fuse args, copies these args into the bounce buffer and passed the\nphysical address of the bounce buffer to virtiofsd. The total length of\nthese fuse args for the passed fuse request is about 10MB, so\ncopy_args_to_argbuf() invokes kmalloc() with a 10MB size parameter and\nit triggers the warning in __alloc_pages():\n\n\tif (WARN_ON_ONCE_GFP(order > MAX_PAGE_ORDER, gfp))\n\t\treturn NULL;\n\n5) virtio_fs_enqueue_req() will retry the memory allocation in a\nkworker, but it won't help, because kmalloc() will always return NULL\ndue to the abnormal size and finit_module() will hang forever.\n\nA feasible solution is to limit the value of max_read for virtio-fs, so\nthe length passed to kmalloc() will be limited. However it will affect\nthe maximal read size for normal read. And for virtio-fs write initiated\nfrom kernel, it has the similar problem but now there is no way to limit\nfc->max_write in kernel.\n\nSo instead of limiting both the values of max_read and max_write in\nkernel, introducing use_pages_for_kvec_io in fuse_conn and setting it as\ntrue in virtiofs. When use_pages_for_kvec_io is enabled, fuse will use\npages instead of pointer to pass the KVEC_IO data.\n\nAfter switching to pages for KVEC_IO data, these pages will be used for\nDMA through virtio-fs. If these pages are backed by vmalloc(),\n{flush|invalidate}_kernel_vmap_range() are necessary to flush or\ninvalidate the cache before the DMA operation. So add two new fields in\nfuse_args_pages to record the base address of vmalloc area and the\ncondition indicating whether invalidation is needed. Perform the flush\nin fuse_get_user_pages() for write operations and the invalidation in\nfuse_release_user_pages() for read operations.\n\nIt may seem necessary to introduce another fie\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2bc07714dc955a91d2923a440ea02c3cb3376b10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41748675c0bf252b3c5f600a95830f0936d366c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a8fde56d4b6d51930936ed50f6370a9097328d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53220","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.077","lastModified":"2024-12-27T14:15:30.077","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to account dirty data in __get_secs_required()\n\nIt will trigger system panic w\/ testcase in [1]:\n\n------------[ cut here ]------------\nkernel BUG at fs\/f2fs\/segment.c:2752!\nRIP: 0010:new_curseg+0xc81\/0x2110\nCall Trace:\n f2fs_allocate_data_block+0x1c91\/0x4540\n do_write_page+0x163\/0xdf0\n f2fs_outplace_write_data+0x1aa\/0x340\n f2fs_do_write_data_page+0x797\/0x2280\n f2fs_write_single_data_page+0x16cd\/0x2190\n f2fs_write_cache_pages+0x994\/0x1c80\n f2fs_write_data_pages+0x9cc\/0xea0\n do_writepages+0x194\/0x7a0\n filemap_fdatawrite_wbc+0x12b\/0x1a0\n __filemap_fdatawrite_range+0xbb\/0xf0\n file_write_and_wait_range+0xa1\/0x110\n f2fs_do_sync_file+0x26f\/0x1c50\n f2fs_sync_file+0x12b\/0x1d0\n vfs_fsync_range+0xfa\/0x230\n do_fsync+0x3d\/0x80\n __x64_sys_fsync+0x37\/0x50\n x64_sys_call+0x1e88\/0x20d0\n do_syscall_64+0x4b\/0x110\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nThe root cause is if checkpoint_disabling and lfs_mode are both on,\nit will trigger OPU for all overwritten data, it may cost more free\nsegment than expected, so f2fs must account those data correctly to\ncalculate cosumed free segments later, and return ENOSPC earlier to\navoid run out of free segment during block allocation.\n\n[1] https:\/\/lore.kernel.org\/fstests\/20241015025106.3203676-1-chao@kernel.org\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1acd73edbbfef2c3c5b43cba4006a7797eca7050","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e58b2987960efcd917bc42da781cee256213618","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9313b85ddc120e2d2f0efaf86d0204d4c98d60b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e812871c068cc0f91ff9f5cee87d00df1c44aae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1b8bfe8d2f2fdf905d37c174d5bc1cd2b6910c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53221","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.190","lastModified":"2024-12-27T14:15:30.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix null-ptr-deref in f2fs_submit_page_bio()\n\nThere's issue as follows when concurrently installing the f2fs.ko\nmodule and mounting the f2fs file system:\nKASAN: null-ptr-deref in range [0x0000000000000020-0x0000000000000027]\nRIP: 0010:__bio_alloc+0x2fb\/0x6c0 [f2fs]\nCall Trace:\n <TASK>\n f2fs_submit_page_bio+0x126\/0x8b0 [f2fs]\n __get_meta_page+0x1d4\/0x920 [f2fs]\n get_checkpoint_version.constprop.0+0x2b\/0x3c0 [f2fs]\n validate_checkpoint+0xac\/0x290 [f2fs]\n f2fs_get_valid_checkpoint+0x207\/0x950 [f2fs]\n f2fs_fill_super+0x1007\/0x39b0 [f2fs]\n mount_bdev+0x183\/0x250\n legacy_get_tree+0xf4\/0x1e0\n vfs_get_tree+0x88\/0x340\n do_new_mount+0x283\/0x5e0\n path_mount+0x2b2\/0x15b0\n __x64_sys_mount+0x1fe\/0x270\n do_syscall_64+0x5f\/0x170\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nAbove issue happens as the biset of the f2fs file system is not\ninitialized before register \"f2fs_fs_type\".\nTo address above issue just register \"f2fs_fs_type\" at the last in\ninit_f2fs_fs(). Ensure that all f2fs file system resources are\ninitialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32f5e291b7677495f98246eec573767430321c08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e11b1d5fda972f6be60ab732976a7c8e064cd56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7d0a97b28083084ebdd8e5c6bccd12e6ec18faa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53222","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.327","lastModified":"2024-12-27T14:15:30.327","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nzram: fix NULL pointer in comp_algorithm_show()\n\nLTP reported a NULL pointer dereference as followed:\n\n CPU: 7 UID: 0 PID: 5995 Comm: cat Kdump: loaded Not tainted 6.12.0-rc6+ #3\n Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02\/06\/2015\n pstate: 40400005 (nZcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : __pi_strcmp+0x24\/0x140\n lr : zcomp_available_show+0x60\/0x100 [zram]\n sp : ffff800088b93b90\n x29: ffff800088b93b90 x28: 0000000000000001 x27: 0000000000400cc0\n x26: 0000000000000ffe x25: ffff80007b3e2388 x24: 0000000000000000\n x23: ffff80007b3e2390 x22: ffff0004041a9000 x21: ffff80007b3e2900\n x20: 0000000000000000 x19: 0000000000000000 x18: 0000000000000000\n x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n x11: 0000000000000000 x10: ffff80007b3e2900 x9 : ffff80007b3cb280\n x8 : 0101010101010101 x7 : 0000000000000000 x6 : 0000000000000000\n x5 : 0000000000000040 x4 : 0000000000000000 x3 : 00656c722d6f7a6c\n x2 : 0000000000000000 x1 : ffff80007b3e2900 x0 : 0000000000000000\n Call trace:\n  __pi_strcmp+0x24\/0x140\n  comp_algorithm_show+0x40\/0x70 [zram]\n  dev_attr_show+0x28\/0x80\n  sysfs_kf_seq_show+0x90\/0x140\n  kernfs_seq_show+0x34\/0x48\n  seq_read_iter+0x1d4\/0x4e8\n  kernfs_fop_read_iter+0x40\/0x58\n  new_sync_read+0x9c\/0x168\n  vfs_read+0x1a8\/0x1f8\n  ksys_read+0x74\/0x108\n  __arm64_sys_read+0x24\/0x38\n  invoke_syscall+0x50\/0x120\n  el0_svc_common.constprop.0+0xc8\/0xf0\n  do_el0_svc+0x24\/0x38\n  el0_svc+0x38\/0x138\n  el0t_64_sync_handler+0xc0\/0xc8\n  el0t_64_sync+0x188\/0x190\n\nThe zram->comp_algs[ZRAM_PRIMARY_COMP] can be NULL in zram_add() if\ncomp_algorithm_set() has not been called.  User can access the zram device\nby sysfs after device_add_disk(), so there is a time window to trigger the\nNULL pointer dereference.  Move it ahead device_add_disk() to make sure\nwhen user can access the zram device, it is ready.  comp_algorithm_set()\nis protected by zram->init_lock in other places and no such problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/843d366ff19708668d95cda16bb8aba109a93dba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f364cdeb38938f9d03061682b8ff3779dd1730e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53223","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.453","lastModified":"2024-12-27T14:15:30.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: ralink: mtmips: fix clocks probe order in oldest ralink SoCs\n\nBase clocks are the first in being probed and are real dependencies of the\nrest of fixed, factor and peripheral clocks. For old ralink SoCs RT2880,\nRT305x and RT3883 'xtal' must be defined first since in any other case,\nwhen fixed clocks are probed they are delayed until 'xtal' is probed so the\nfollowing warning appears:\n\n WARNING: CPU: 0 PID: 0 at drivers\/clk\/ralink\/clk-mtmips.c:499 rt3883_bus_recalc_rate+0x98\/0x138\n Modules linked in:\n CPU: 0 PID: 0 Comm: swapper Not tainted 6.6.43 #0\n Stack : 805e58d0 00000000 00000004 8004f950 00000000 00000004 00000000 00000000\n 80669c54 80830000 80700000 805ae570 80670068 00000001 80669bf8 00000000\n 00000000 00000000 805ae570 80669b38 00000020 804db7dc 00000000 00000000\n 203a6d6d 80669b78 80669e48 70617773 00000000 805ae570 00000000 00000009\n 00000000 00000001 00000004 00000001 00000000 00000000 83fe43b0 00000000\n ...\n Call Trace:\n [<800065d0>] show_stack+0x64\/0xf4\n [<804bca14>] dump_stack_lvl+0x38\/0x60\n [<800218ac>] __warn+0x94\/0xe4\n [<8002195c>] warn_slowpath_fmt+0x60\/0x94\n [<80259ff8>] rt3883_bus_recalc_rate+0x98\/0x138\n [<80254530>] __clk_register+0x568\/0x688\n [<80254838>] of_clk_hw_register+0x18\/0x2c\n [<8070b910>] rt2880_clk_of_clk_init_driver+0x18c\/0x594\n [<8070b628>] of_clk_init+0x1c0\/0x23c\n [<806fc448>] plat_time_init+0x58\/0x18c\n [<806fdaf0>] time_init+0x10\/0x6c\n [<806f9bc4>] start_kernel+0x458\/0x67c\n\n ---[ end trace 0000000000000000 ]---\n\nWhen this driver was mainlined we could not find any active users of old\nralink SoCs so we cannot perform any real tests for them. Now, one user\nof a Belkin f9k1109 version 1 device which uses RT3883 SoC appeared and\nreported some issues in openWRT:\n- https:\/\/github.com\/openwrt\/openwrt\/issues\/16054\n\nThus, define a 'rt2880_xtal_recalc_rate()' just returning the expected\nfrequency 40Mhz and use it along the old ralink SoCs to have a correct\nboot trace with no warnings and a working clock plan from the beggining."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d34db686a3d74bd564bfce2ada15011c556269fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e29306c0e1ae4b434db32c90705844c77f701be5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbb13732c6ffa9d58cedafabcd5ce8fd7ef8ae5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe09d609f2304c7775789090e3f006d786852148","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53224","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.583","lastModified":"2024-12-27T14:15:30.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/mlx5: Move events notifier registration to be after device registration\n\nMove pkey change work initialization and cleanup from device resources\nstage to notifier stage, since this is the stage which handles this work\nevents.\n\nFix a race between the device deregistration and pkey change work by moving\nMLX5_IB_STAGE_DEVICE_NOTIFIER to be after MLX5_IB_STAGE_IB_REG in order to\nensure that the notifier is deregistered before the device during cleanup.\nWhich ensures there are no works that are being executed after the\ndevice has already unregistered which can cause the panic below.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 0 P4D 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 1 PID: 630071 Comm: kworker\/1:2 Kdump: loaded Tainted: G W OE --------- --- 5.14.0-162.6.1.el9_1.x86_64 #1\nHardware name: Microsoft Corporation Virtual Machine\/Virtual Machine, BIOS 090008 02\/27\/2023\nWorkqueue: events pkey_change_handler [mlx5_ib]\nRIP: 0010:setup_qp+0x38\/0x1f0 [mlx5_ib]\nCode: ee 41 54 45 31 e4 55 89 f5 53 48 89 fb 48 83 ec 20 8b 77 08 65 48 8b 04 25 28 00 00 00 48 89 44 24 18 48 8b 07 48 8d 4c 24 16 <4c> 8b 38 49 8b 87 80 0b 00 00 4c 89 ff 48 8b 80 08 05 00 00 8b 40\nRSP: 0018:ffffbcc54068be20 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff954054494128 RCX: ffffbcc54068be36\nRDX: ffff954004934000 RSI: 0000000000000001 RDI: ffff954054494128\nRBP: 0000000000000023 R08: ffff954001be2c20 R09: 0000000000000001\nR10: ffff954001be2c20 R11: ffff9540260133c0 R12: 0000000000000000\nR13: 0000000000000023 R14: 0000000000000000 R15: ffff9540ffcb0905\nFS: 0000000000000000(0000) GS:ffff9540ffc80000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000010625c001 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\nmlx5_ib_gsi_pkey_change+0x20\/0x40 [mlx5_ib]\nprocess_one_work+0x1e8\/0x3c0\nworker_thread+0x50\/0x3b0\n? rescuer_thread+0x380\/0x380\nkthread+0x149\/0x170\n? set_kthread_struct+0x50\/0x50\nret_from_fork+0x22\/0x30\nModules linked in: rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) mlx5_fwctl(OE) fwctl(OE) ib_uverbs(OE) mlx5_core(OE) mlxdevm(OE) ib_core(OE) mlx_compat(OE) psample mlxfw(OE) tls knem(OE) netconsole nfsv3 nfs_acl nfs lockd grace fscache netfs qrtr rfkill sunrpc intel_rapl_msr intel_rapl_common rapl hv_balloon hv_utils i2c_piix4 pcspkr joydev fuse ext4 mbcache jbd2 sr_mod sd_mod cdrom t10_pi sg ata_generic pci_hyperv pci_hyperv_intf hyperv_drm drm_shmem_helper drm_kms_helper hv_storvsc syscopyarea hv_netvsc sysfillrect sysimgblt hid_hyperv fb_sys_fops scsi_transport_fc hyperv_keyboard drm ata_piix crct10dif_pclmul crc32_pclmul crc32c_intel libata ghash_clmulni_intel hv_vmbus serio_raw [last unloaded: ib_core]\nCR2: 0000000000000000\n---[ end trace f6f8be4eae12f7bc ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/542bd62b7a7f37182c9ef192c2bd25d118c144e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b0acf6a94c31efa43fce4edc22413a3390f9c05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/921fcf2971a1e8d3b904ba2c2905b96f4ec3d4ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ede132a5cf559f3ab35a4c28bac4f4a6c20334d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53225","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.687","lastModified":"2024-12-27T14:15:30.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/tegra241-cmdqv: Fix alignment failure at max_n_shift\n\nWhen configuring a kernel with PAGE_SIZE=4KB, depending on its setting of\nCONFIG_CMA_ALIGNMENT, VCMDQ_LOG2SIZE_MAX=19 could fail the alignment test\nand trigger a WARN_ON:\n    WARNING: at drivers\/iommu\/arm\/arm-smmu-v3\/arm-smmu-v3.c:3646\n    Call trace:\n     arm_smmu_init_one_queue+0x15c\/0x210\n     tegra241_cmdqv_init_structures+0x114\/0x338\n     arm_smmu_device_probe+0xb48\/0x1d90\n\nFix it by capping max_n_shift to CMDQ_MAX_SZ_SHIFT as SMMUv3 CMDQ does."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/85a1d70b86dbcb84a68e7e4942a5181276945988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3799717b881aa0f4e722afb70e7b8ba84ae4f36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53226","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.800","lastModified":"2024-12-27T14:15:30.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hns: Fix NULL pointer derefernce in hns_roce_map_mr_sg()\n\nib_map_mr_sg() allows ULPs to specify NULL as the sg_offset argument.\nThe driver needs to check whether it is a NULL pointer before\ndereferencing it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35f5b68f63aac61d30ce0b0c6beb09b8845a3e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52617e76f4963644db71dc0a17e998654dc0c7f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b0d7d6e6883d0ec70cd7b5a02c47c003d5defe7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b526d17eed850352d880b93b9bf20b93006bd92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71becb0e9df78a8d43dfd0efcef18c830a0af477","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c269bb2cc666ca580271e1a8136c63ac9162e1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd715e191d444992d6ed124f15856da5c1cae2de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53227","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:30.937","lastModified":"2024-12-27T14:15:30.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: bfa: Fix use-after-free in bfad_im_module_exit()\n\nBUG: KASAN: slab-use-after-free in __lock_acquire+0x2aca\/0x3a20\nRead of size 8 at addr ffff8881082d80c8 by task modprobe\/25303\n\nCall Trace:\n <TASK>\n dump_stack_lvl+0x95\/0xe0\n print_report+0xcb\/0x620\n kasan_report+0xbd\/0xf0\n __lock_acquire+0x2aca\/0x3a20\n lock_acquire+0x19b\/0x520\n _raw_spin_lock+0x2b\/0x40\n attribute_container_unregister+0x30\/0x160\n fc_release_transport+0x19\/0x90 [scsi_transport_fc]\n bfad_im_module_exit+0x23\/0x60 [bfa]\n bfad_init+0xdb\/0xff0 [bfa]\n do_one_initcall+0xdc\/0x550\n do_init_module+0x22d\/0x6b0\n load_module+0x4e96\/0x5ff0\n init_module_from_file+0xcd\/0x130\n idempotent_init_module+0x330\/0x620\n __x64_sys_finit_module+0xb3\/0x110\n do_syscall_64+0xc1\/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n <\/TASK>\n\nAllocated by task 25303:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n __kasan_kmalloc+0x7f\/0x90\n fc_attach_transport+0x4f\/0x4740 [scsi_transport_fc]\n bfad_im_module_init+0x17\/0x80 [bfa]\n bfad_init+0x23\/0xff0 [bfa]\n do_one_initcall+0xdc\/0x550\n do_init_module+0x22d\/0x6b0\n load_module+0x4e96\/0x5ff0\n init_module_from_file+0xcd\/0x130\n idempotent_init_module+0x330\/0x620\n __x64_sys_finit_module+0xb3\/0x110\n do_syscall_64+0xc1\/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nFreed by task 25303:\n kasan_save_stack+0x24\/0x50\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3b\/0x60\n __kasan_slab_free+0x38\/0x50\n kfree+0x212\/0x480\n bfad_im_module_init+0x7e\/0x80 [bfa]\n bfad_init+0x23\/0xff0 [bfa]\n do_one_initcall+0xdc\/0x550\n do_init_module+0x22d\/0x6b0\n load_module+0x4e96\/0x5ff0\n init_module_from_file+0xcd\/0x130\n idempotent_init_module+0x330\/0x620\n __x64_sys_finit_module+0xb3\/0x110\n do_syscall_64+0xc1\/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nAbove issue happens as follows:\n\nbfad_init\n  error = bfad_im_module_init()\n    fc_release_transport(bfad_im_scsi_transport_template);\n  if (error)\n    goto ext;\n\next:\n  bfad_im_module_exit();\n    fc_release_transport(bfad_im_scsi_transport_template);\n    --> Trigger double release\n\nDon't call bfad_im_module_exit() if bfad_im_module_init() failed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ceac8012d3ddea3317f0d82934293d05feb8af1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/178b8f38932d635e90f5f0e9af1986c6f4a89271","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ffdde30a90bf8efe8f270407f486706962b3292","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3932c753f805a02e9364a4c58b590f21901f8490","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5a97443b547b4c83f876f1d6a11df0f1fd4efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b5035ab0e368e8d8a371e27fbc72f133c0bd40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c28409f851abd93b37969cac7498828ad533afd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e76181a5be90abcc3ed8a300bd13878aa214d022","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef2c2580189ea88a0dcaf56eb3a565763a900edb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53228","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.057","lastModified":"2024-12-27T14:15:31.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: kvm: Fix out-of-bounds array access\n\nIn kvm_riscv_vcpu_sbi_init() the entry->ext_idx can contain an\nout-of-bound index. This is used as a special marker for the base\nextensions, that cannot be disabled. However, when traversing the\nextensions, that special marker is not checked prior indexing the\narray.\n\nAdd an out-of-bounds check to the function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/332fa4a802b16ccb727199da685294f85f9880cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c49e1084a5df99807fc43dd318c491e6cbaa168","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1af648f0d610665c956ea4604d9f797e5c7e991","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53229","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.163","lastModified":"2024-12-27T14:15:31.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/rxe: Fix the qp flush warnings in req\n\nWhen the qp is in error state, the status of WQEs in the queue should be\nset to error. Or else the following will appear.\n\n[  920.617269] WARNING: CPU: 1 PID: 21 at drivers\/infiniband\/sw\/rxe\/rxe_comp.c:756 rxe_completer+0x989\/0xcc0 [rdma_rxe]\n[  920.617744] Modules linked in: rnbd_client(O) rtrs_client(O) rtrs_core(O) rdma_ucm rdma_cm iw_cm ib_cm crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel ib_uverbs ib_core loop brd null_blk ipv6\n[  920.618516] CPU: 1 PID: 21 Comm: ksoftirqd\/1 Tainted: G           O       6.1.113-storage+ #65\n[  920.618986] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n[  920.619396] RIP: 0010:rxe_completer+0x989\/0xcc0 [rdma_rxe]\n[  920.619658] Code: 0f b6 84 24 3a 02 00 00 41 89 84 24 44 04 00 00 e9 2a f7 ff ff 39 ca bb 03 00 00 00 b8 0e 00 00 00 48 0f 45 d8 e9 15 f7 ff ff <0f> 0b e9 cb f8 ff ff 41 bf f5 ff ff ff e9 08 f8 ff ff 49 8d bc 24\n[  920.620482] RSP: 0018:ffff97b7c00bbc38 EFLAGS: 00010246\n[  920.620817] RAX: 0000000000000000 RBX: 000000000000000c RCX: 0000000000000008\n[  920.621183] RDX: ffff960dc396ebc0 RSI: 0000000000005400 RDI: ffff960dc4e2fbac\n[  920.621548] RBP: 0000000000000000 R08: 0000000000000001 R09: ffffffffac406450\n[  920.621884] R10: ffffffffac4060c0 R11: 0000000000000001 R12: ffff960dc4e2f800\n[  920.622254] R13: ffff960dc4e2f928 R14: ffff97b7c029c580 R15: 0000000000000000\n[  920.622609] FS:  0000000000000000(0000) GS:ffff960ef7d00000(0000) knlGS:0000000000000000\n[  920.622979] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  920.623245] CR2: 00007fa056965e90 CR3: 00000001107f1000 CR4: 00000000000006e0\n[  920.623680] Call Trace:\n[  920.623815]  <TASK>\n[  920.623933]  ? __warn+0x79\/0xc0\n[  920.624116]  ? rxe_completer+0x989\/0xcc0 [rdma_rxe]\n[  920.624356]  ? report_bug+0xfb\/0x150\n[  920.624594]  ? handle_bug+0x3c\/0x60\n[  920.624796]  ? exc_invalid_op+0x14\/0x70\n[  920.624976]  ? asm_exc_invalid_op+0x16\/0x20\n[  920.625203]  ? rxe_completer+0x989\/0xcc0 [rdma_rxe]\n[  920.625474]  ? rxe_completer+0x329\/0xcc0 [rdma_rxe]\n[  920.625749]  rxe_do_task+0x80\/0x110 [rdma_rxe]\n[  920.626037]  rxe_requester+0x625\/0xde0 [rdma_rxe]\n[  920.626310]  ? rxe_cq_post+0xe2\/0x180 [rdma_rxe]\n[  920.626583]  ? do_complete+0x18d\/0x220 [rdma_rxe]\n[  920.626812]  ? rxe_completer+0x1a3\/0xcc0 [rdma_rxe]\n[  920.627050]  rxe_do_task+0x80\/0x110 [rdma_rxe]\n[  920.627285]  tasklet_action_common.constprop.0+0xa4\/0x120\n[  920.627522]  handle_softirqs+0xc2\/0x250\n[  920.627728]  ? sort_range+0x20\/0x20\n[  920.627942]  run_ksoftirqd+0x1f\/0x30\n[  920.628158]  smpboot_thread_fn+0xc7\/0x1b0\n[  920.628334]  kthread+0xd6\/0x100\n[  920.628504]  ? kthread_complete_and_exit+0x20\/0x20\n[  920.628709]  ret_from_fork+0x1f\/0x30\n[  920.628892]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31978d5c5aef034d96fc53b4a9cb3c6e11dbb94d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc341b5d761a8a16693fe406b8127e4378747f85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4f26fae6075f136616d12a369b0ef7f0cf16436","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea4c990fa9e19ffef0648e40c566b94ba5ab31be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53230","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.290","lastModified":"2024-12-27T14:15:31.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: CPPC: Fix possible null-ptr-deref for cppc_get_cpu_cost()\n\ncpufreq_cpu_get_raw() may return NULL if the cpu is not in\npolicy->cpus cpu mask and it will cause null pointer dereference,\nso check NULL for cppc_get_cpu_cost()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1975b481f644f8f841d9c188e3c214fce187f18b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a1374bb8c5926674973d849feed500bc61ad535","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6be57617a38b3f33266acecdb3c063c1c079aaf7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afd22d9839359829776abb55cc9bc4946e888704","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f05ef81db63889f6f14eb77fd140dac6cedb6f7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53231","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.390","lastModified":"2024-12-27T14:15:31.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: CPPC: Fix possible null-ptr-deref for cpufreq_cpu_get_raw()\n\ncpufreq_cpu_get_raw() may return NULL if the cpu is not in\npolicy->cpus cpu mask and it will cause null pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/65fe2f7fdafe2698a343661800434b3f2e51041e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a357b63fd21e4b2791008c2175ba7a8c235ebce1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a78e7207564258db6e373e86294a85f9d646d35a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e07570a8f2cfc51260c6266cb8e1bd4777a610d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9b39f1924b76abc18881e4ce899fb232dd23d12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53232","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.510","lastModified":"2024-12-27T14:15:31.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/s390: Implement blocking domain\n\nThis fixes a crash when surprise hot-unplugging a PCI device. This crash\nhappens because during hot-unplug __iommu_group_set_domain_nofail()\nattaching the default domain fails when the platform no longer\nrecognizes the device as it has already been removed and we end up with\na NULL domain pointer and UAF. This is exactly the case referred to in\nthe second comment in __iommu_device_set_domain() and just as stated\nthere if we can instead attach the blocking domain the UAF is prevented\nas this can handle the already removed device. Implement the blocking\ndomain to use this handling.  With this change, the crash is fixed but\nwe still hit a warning attempting to change DMA ownership on a blocked\ndevice."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3be34fa1cdbf180c1a948cfededfdf2cdc497199","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd89d94f3ea6fdaee983cbc69226a00b9bde6d59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecda483339a5151e3ca30d6b82691ef6f1d17912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53233","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.630","lastModified":"2024-12-27T14:15:31.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nunicode: Fix utf8_load() error path\n\nutf8_load() requests the symbol \"utf8_data_table\" and then checks if the\nrequested UTF-8 version is supported. If it's unsupported, it tries to\nput the data table using symbol_put(). If an unsupported version is\nrequested, symbol_put() fails like this:\n\n kernel BUG at kernel\/module\/main.c:786!\n RIP: 0010:__symbol_put+0x93\/0xb0\n Call Trace:\n  <TASK>\n  ? __die_body.cold+0x19\/0x27\n  ? die+0x2e\/0x50\n  ? do_trap+0xca\/0x110\n  ? do_error_trap+0x65\/0x80\n  ? __symbol_put+0x93\/0xb0\n  ? exc_invalid_op+0x51\/0x70\n  ? __symbol_put+0x93\/0xb0\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? __pfx_cmp_name+0x10\/0x10\n  ? __symbol_put+0x93\/0xb0\n  ? __symbol_put+0x62\/0xb0\n  utf8_load+0xf8\/0x150\n\nThat happens because symbol_put() expects the unique string that\nidentify the symbol, instead of a pointer to the loaded symbol. Fix that\nby using such string."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/156bb2c569cd869583c593d27a5bd69e7b2a4264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4387cef540f36c2c9297460758cc2438305a24a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6504dd27123966dc455494cb55217c04ca479121","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89933f8ab3b4cad5ac14ea56a39947d1ffe7d0e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4b6c1781f6cc4e2283120ac8d873864b8056f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53234","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.783","lastModified":"2024-12-27T14:15:31.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: handle NONHEAD !delta[1] lclusters gracefully\n\nsyzbot reported a WARNING in iomap_iter_done:\n iomap_fiemap+0x73b\/0x9b0 fs\/iomap\/fiemap.c:80\n ioctl_fiemap fs\/ioctl.c:220 [inline]\n\nGenerally, NONHEAD lclusters won't have delta[1]==0, except for crafted\nimages and filesystems created by pre-1.0 mkfs versions.\n\nPreviously, it would immediately bail out if delta[1]==0, which led to\ninadequate decompressed lengths (thus FIEMAP is impacted).  Treat it as\ndelta[1]=1 to work around these legacy mkfs versions.\n\n`lclusterbits > 14` is illegal for compact indexes, error out too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bc8061ffc733a0a246b8689b2d32a3e9204f43c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/480c6c7b55aeacac800bc2a0d321ff53273045e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/daaf68fef4b2ff97928227630021d37b27a96655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f466641debcbea8bdf78d1b63a6270aadf9301bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53235","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:31.900","lastModified":"2024-12-27T14:15:31.900","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix file-backed mounts over FUSE\n\nsyzbot reported a null-ptr-deref in fuse_read_args_fill:\n fuse_read_folio+0xb0\/0x100 fs\/fuse\/file.c:905\n filemap_read_folio+0xc6\/0x2a0 mm\/filemap.c:2367\n do_read_cache_folio+0x263\/0x5c0 mm\/filemap.c:3825\n read_mapping_folio include\/linux\/pagemap.h:1011 [inline]\n erofs_bread+0x34d\/0x7e0 fs\/erofs\/data.c:41\n erofs_read_superblock fs\/erofs\/super.c:281 [inline]\n erofs_fc_fill_super+0x2b9\/0x2500 fs\/erofs\/super.c:625\n\nUnlike most filesystems, some network filesystems and FUSE need\nunavoidable valid `file` pointers for their read I\/Os [1].\nAnyway, those use cases need to be supported too.\n\n[1] https:\/\/docs.kernel.org\/filesystems\/vfs.html"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a23787ca8756920d65fda39f41353a4be1d1642","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5036f2f024cac40a02ea6ea70de2c3a4407d16bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53236","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.013","lastModified":"2024-12-27T14:15:32.013","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: Free skb when TX metadata options are invalid\n\nWhen a new skb is allocated for transmitting an xsk descriptor, i.e., for\nevery non-multibuf descriptor or the first frag of a multibuf descriptor,\nbut the descriptor is later found to have invalid options set for the TX\nmetadata, the new skb is never freed. This can leak skbs until the send\nbuffer is full which makes sending more packets impossible.\n\nFix this by freeing the skb in the error path if we are currently dealing\nwith the first frag, i.e., an skb allocated in this iteration of\nxsk_build_skb."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c0d0f42ffa6ac94cd79893b7ed419c15e1b45de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f0d0dd5a7f437d83cff954bc321f1a9b181efd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5d346deb65efa8453f8481bcea75c1a590439e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53237","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.130","lastModified":"2024-12-27T14:15:32.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: fix use-after-free in device_for_each_child()\n\nSyzbot has reported the following KASAN splat:\n\nBUG: KASAN: slab-use-after-free in device_for_each_child+0x18f\/0x1a0\nRead of size 8 at addr ffff88801f605308 by task kbnepd bnep0\/4980\n\nCPU: 0 UID: 0 PID: 4980 Comm: kbnepd bnep0 Not tainted 6.12.0-rc4-00161-gae90f6a6170d #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x100\/0x190\n ? device_for_each_child+0x18f\/0x1a0\n print_report+0x13a\/0x4cb\n ? __virt_addr_valid+0x5e\/0x590\n ? __phys_addr+0xc6\/0x150\n ? device_for_each_child+0x18f\/0x1a0\n kasan_report+0xda\/0x110\n ? device_for_each_child+0x18f\/0x1a0\n ? __pfx_dev_memalloc_noio+0x10\/0x10\n device_for_each_child+0x18f\/0x1a0\n ? __pfx_device_for_each_child+0x10\/0x10\n pm_runtime_set_memalloc_noio+0xf2\/0x180\n netdev_unregister_kobject+0x1ed\/0x270\n unregister_netdevice_many_notify+0x123c\/0x1d80\n ? __mutex_trylock_common+0xde\/0x250\n ? __pfx_unregister_netdevice_many_notify+0x10\/0x10\n ? trace_contention_end+0xe6\/0x140\n ? __mutex_lock+0x4e7\/0x8f0\n ? __pfx_lock_acquire.part.0+0x10\/0x10\n ? rcu_is_watching+0x12\/0xc0\n ? unregister_netdev+0x12\/0x30\n unregister_netdevice_queue+0x30d\/0x3f0\n ? __pfx_unregister_netdevice_queue+0x10\/0x10\n ? __pfx_down_write+0x10\/0x10\n unregister_netdev+0x1c\/0x30\n bnep_session+0x1fb3\/0x2ab0\n ? __pfx_bnep_session+0x10\/0x10\n ? __pfx_lock_release+0x10\/0x10\n ? __pfx_woken_wake_function+0x10\/0x10\n ? __kthread_parkme+0x132\/0x200\n ? __pfx_bnep_session+0x10\/0x10\n ? kthread+0x13a\/0x370\n ? __pfx_bnep_session+0x10\/0x10\n kthread+0x2b7\/0x370\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x48\/0x80\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nAllocated by task 4974:\n kasan_save_stack+0x30\/0x50\n kasan_save_track+0x14\/0x30\n __kasan_kmalloc+0xaa\/0xb0\n __kmalloc_noprof+0x1d1\/0x440\n hci_alloc_dev_priv+0x1d\/0x2820\n __vhci_create_device+0xef\/0x7d0\n vhci_write+0x2c7\/0x480\n vfs_write+0x6a0\/0xfc0\n ksys_write+0x12f\/0x260\n do_syscall_64+0xc7\/0x250\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nFreed by task 4979:\n kasan_save_stack+0x30\/0x50\n kasan_save_track+0x14\/0x30\n kasan_save_free_info+0x3b\/0x60\n __kasan_slab_free+0x4f\/0x70\n kfree+0x141\/0x490\n hci_release_dev+0x4d9\/0x600\n bt_host_release+0x6a\/0xb0\n device_release+0xa4\/0x240\n kobject_put+0x1ec\/0x5a0\n put_device+0x1f\/0x30\n vhci_release+0x81\/0xf0\n __fput+0x3f6\/0xb30\n task_work_run+0x151\/0x250\n do_exit+0xa79\/0x2c30\n do_group_exit+0xd5\/0x2a0\n get_signal+0x1fcd\/0x2210\n arch_do_signal_or_restart+0x93\/0x780\n syscall_exit_to_user_mode+0x140\/0x290\n do_syscall_64+0xd4\/0x250\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nIn 'hci_conn_del_sysfs()', 'device_unregister()' may be called when\nan underlying (kobject) reference counter is greater than 1. This\nmeans that reparenting (happened when the device is actually freed)\nis delayed and, during that delay, parent controller device (hciX)\nmay be deleted. Since the latter may create a dangling pointer to\nfreed parent, avoid that scenario by reparenting to NULL explicitly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f67ca2a80acf8b207240405b7f72d660665d3df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27aabf27fd014ae037cc179c61b0bee7cff55b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b277bd569bb6a2777f0014f84b4344f444fd49d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e2a2e4d1336333804cd31162984f01ad8cc70f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9584c897d1cba6265c78010bbb45ca5722c88bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de5a44f351ca7efd9add9851b218f5353e2224b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb91ce37dc9a37ea23cf32b6d7b667004e93d4c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53238","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.253","lastModified":"2024-12-27T14:15:32.253","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btmtk: adjust the position to init iso data anchor\n\nMediaTek iso data anchor init should be moved to where MediaTek\nclaims iso data interface.\nIf there is an unexpected BT usb disconnect during setup flow,\nit will cause a NULL pointer crash issue when releasing iso\nanchor since the anchor wasn't been init yet. Adjust the position\nto do iso data anchor init.\n\n[   17.137991] pc : usb_kill_anchored_urbs+0x60\/0x168\n[   17.137998] lr : usb_kill_anchored_urbs+0x44\/0x168\n[   17.137999] sp : ffffffc0890cb5f0\n[   17.138000] x29: ffffffc0890cb5f0 x28: ffffff80bb6c2e80\n[   17.144081] gpio gpiochip0: registered chardev handle for 1 lines\n[   17.148421]  x27: 0000000000000000\n[   17.148422] x26: ffffffd301ff4298 x25: 0000000000000003 x24: 00000000000000f0\n[   17.148424] x23: 0000000000000000 x22: 00000000ffffffff x21: 0000000000000001\n[   17.148425] x20: ffffffffffffffd8 x19: ffffff80c0f25560 x18: 0000000000000000\n[   17.148427] x17: ffffffd33864e408 x16: ffffffd33808f7c8 x15: 0000000000200000\n[   17.232789] x14: e0cd73cf80ffffff x13: 50f2137c0a0338c9 x12: 0000000000000001\n[   17.239912] x11: 0000000080150011 x10: 0000000000000002 x9 : 0000000000000001\n[   17.247035] x8 : 0000000000000000 x7 : 0000000000008080 x6 : 8080000000000000\n[   17.254158] x5 : ffffffd33808ebc0 x4 : fffffffe033dcf20 x3 : 0000000080150011\n[   17.261281] x2 : ffffff8087a91400 x1 : 0000000000000000 x0 : ffffff80c0f25588\n[   17.268404] Call trace:\n[   17.270841]  usb_kill_anchored_urbs+0x60\/0x168\n[   17.275274]  btusb_mtk_release_iso_intf+0x2c\/0xd8 [btusb (HASH:5afe 6)]\n[   17.284226]  btusb_mtk_disconnect+0x14\/0x28 [btusb (HASH:5afe 6)]\n[   17.292652]  btusb_disconnect+0x70\/0x140 [btusb (HASH:5afe 6)]\n[   17.300818]  usb_unbind_interface+0xc4\/0x240\n[   17.305079]  device_release_driver_internal+0x18c\/0x258\n[   17.310296]  device_release_driver+0x1c\/0x30\n[   17.314557]  bus_remove_device+0x140\/0x160\n[   17.318643]  device_del+0x1c0\/0x330\n[   17.322121]  usb_disable_device+0x80\/0x180\n[   17.326207]  usb_disconnect+0xec\/0x300\n[   17.329948]  hub_quiesce+0x80\/0xd0\n[   17.333339]  hub_disconnect+0x44\/0x190\n[   17.337078]  usb_unbind_interface+0xc4\/0x240\n[   17.341337]  device_release_driver_internal+0x18c\/0x258\n[   17.346551]  device_release_driver+0x1c\/0x30\n[   17.350810]  usb_driver_release_interface+0x70\/0x88\n[   17.355677]  proc_ioctl+0x13c\/0x228\n[   17.359157]  proc_ioctl_default+0x50\/0x80\n[   17.363155]  usbdev_ioctl+0x830\/0xd08\n[   17.366808]  __arm64_sys_ioctl+0x94\/0xd0\n[   17.370723]  invoke_syscall+0x6c\/0xf8\n[   17.374377]  el0_svc_common+0x84\/0xe0\n[   17.378030]  do_el0_svc+0x20\/0x30\n[   17.381334]  el0_svc+0x34\/0x60\n[   17.384382]  el0t_64_sync_handler+0x88\/0xf0\n[   17.388554]  el0t_64_sync+0x180\/0x188\n[   17.392208] Code: f9400677 f100a2f4 54fffea0 d503201f (b8350288)\n[   17.398289] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1219c211ccd061cde002cc5708692efca515a7a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61c5a3def90ac729a538e5ca5ff7f461cff72776","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8bd79f0eea9c07d90ce870a714ab5c10afaa4b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-53239","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.373","lastModified":"2024-12-27T14:15:32.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: 6fire: Release resources at card release\n\nThe current 6fire code tries to release the resources right after the\ncall of usb6fire_chip_abort().  But at this moment, the card object\nmight be still in use (as we're calling snd_card_free_when_closed()).\n\nFor avoid potential UAFs, move the release of resources to the card's\nprivate_free instead of the manual call of usb6fire_chip_destroy() at\nthe USB disconnect callback."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0df7f4b5cc10f5adf98be0845372e9eef7bb5b09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/273eec23467dfbfbd0e4c10302579ba441fb1e13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57860a80f03f9dc69a34a5c37b0941ad032a0a8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74357d0b5cd3ef544752bc9f21cbeee4902fae6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0810c3d6dd2d29a9b92604d682eacd2902ce947","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b754e831a94f82f2593af806741392903f359168","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b889a7d68d7e76b8795b754a75c91a2d561d5e8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea8cc56db659cf0ae57073e32a4735ead7bd7ee3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2d06d4e129e2508e356136f99bb20a332ff1a00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56531","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.503","lastModified":"2024-12-27T14:15:32.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: caiaq: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThis patch also splits the code to the disconnect and the free phases;\nthe former is called immediately at the USB disconnect callback while\nthe latter is called from the card destructor."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/237f3faf0177bdde728fa3106d730d806436aa4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3993edf44d3df7b6e8c753eac6ac8783473fcbab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4507a8b9b30344c5ddd8219945f446d47e966a6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4dd821dcbfcecf7af6a08370b0b217cde2818acf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3f9314752dbb6f6aa1f0f2b4c58243bda800738","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04dcbb7f7b1908806b7dc22671cdbe78ff2b82c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cadf1d8e9ddcd74584ec961aeac14ac549b261d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd0de8cb708951cebf727aa045e8242ba651bb52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebad462eec93b0f701dfe4de98990e7355283801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56532","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.640","lastModified":"2024-12-27T14:15:32.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: us122l: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThe loop of us122l->mmap_count check is dropped as well.  The check is\nuseless for the asynchronous operation with *_when_closed()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/020cbc4d7414f0962004213e2b7bc5cc607e9ec7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2938dd2648522336133c151dd67bb9bf01cbd390","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75f418b249d84021865eaa59515d3ed9b75ce4d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a48bd2184b142c92a4e17eac074c61fcf975bc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b27924dc8d7f8a8c35e521287d4ccb9a006e597","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d5c530e4d70f64b1114f2cc29ac690ba7ac4a38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7df09bb348016943f56b09dcaafe221e3f73947","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc778ad3e495333eebda36fe91d5b2c93109cc16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf0aa35a7cb8602cccf2387712114e836f65c154","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56533","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.800","lastModified":"2024-12-27T14:15:32.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usx2y: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24fe9f7ca83ec9acf765339054951f5cd9ae5c5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bd8838c0ea886679a32834fdcacab296d072fbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/befcca1777525e37c659b4129d8ac7463b07ef67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dafb28f02be407e07a6f679e922a626592b481b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e07605d855c4104d981653146a330ea48f6266ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e869642a77a9b3b98b0ab2c8fec7af4385140909","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffbfc6c4330fc233698529656798bee44fea96f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56534","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:32.940","lastModified":"2024-12-27T14:15:32.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nisofs: avoid memory leak in iocharset\n\nA memleak was found as below:\n\nunreferenced object 0xffff0000d10164d8 (size 8):\n  comm \"pool-udisksd\", pid 108217, jiffies 4295408555\n  hex dump (first 8 bytes):\n    75 74 66 38 00 cc cc cc                          utf8....\n  backtrace (crc de430d31):\n    [<ffff800081046e6c>] kmemleak_alloc+0xb8\/0xc8\n    [<ffff8000803e6c3c>] __kmalloc_node_track_caller_noprof+0x380\/0x474\n    [<ffff800080363b74>] kstrdup+0x70\/0xfc\n    [<ffff80007bb3c6a4>] isofs_parse_param+0x228\/0x2c0 [isofs]\n    [<ffff8000804d7f68>] vfs_parse_fs_param+0xf4\/0x164\n    [<ffff8000804d8064>] vfs_parse_fs_string+0x8c\/0xd4\n    [<ffff8000804d815c>] vfs_parse_monolithic_sep+0xb0\/0xfc\n    [<ffff8000804d81d8>] generic_parse_monolithic+0x30\/0x3c\n    [<ffff8000804d8bfc>] parse_monolithic_mount_data+0x40\/0x4c\n    [<ffff8000804b6a64>] path_mount+0x6c4\/0x9ec\n    [<ffff8000804b6e38>] do_mount+0xac\/0xc4\n    [<ffff8000804b7494>] __arm64_sys_mount+0x16c\/0x2b0\n    [<ffff80008002b8dc>] invoke_syscall+0x7c\/0x104\n    [<ffff80008002ba44>] el0_svc_common.constprop.1+0xe0\/0x104\n    [<ffff80008002ba94>] do_el0_svc+0x2c\/0x38\n    [<ffff800081041108>] el0_svc+0x3c\/0x1b8\n\nThe opt->iocharset is freed inside the isofs_fill_super function,\nBut there may be situations where it's not possible to\nenter this function.\n\nFor example, in the get_tree_bdev_flags function,when\nencountering the situation where \"Can't mount, would change RO state,\"\nIn such a case, isofs_fill_super will not have the opportunity\nto be called,which means that opt->iocharset will not have the chance\nto be freed,ultimately leading to a memory leak.\n\nLet's move the memory freeing of opt->iocharset into\nisofs_free_fc function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b5bbeee4de616a268db77e2f40f19ab010a367b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fbab266ca8000333c966f5b58cb9b9cac658573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34f090ddb3630a26e5a6b220bf3bfaf5c7b70393","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56535","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.067","lastModified":"2024-12-27T14:15:33.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: coex: check NULL return of kmalloc in btc_fw_set_monreg()\n\nkmalloc may fail, return value might be NULL and will cause\nNULL pointer dereference. Add check NULL return of kmalloc in\nbtc_fw_set_monreg()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/051577414271961f3f4c3bff87b427924b486219","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64db1a42d98307001a48cec1b3e68ce9f905e73d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81df5ed446b448bdc327b7c7f0b50121fc1f4aa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56536","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.173","lastModified":"2024-12-27T14:15:33.173","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cw1200: Fix potential NULL dereference\n\nA recent refactoring was identified by static analysis to\ncause a potential NULL dereference, fix this!"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ec90ac5f7bd9dd573bd5d964cbdc3beaa93a33e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b94751626a6d49bbe42a19cc1503bd391016bd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67c914f2d64b28409796a6b9036c131e93f8af6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56537","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.290","lastModified":"2024-12-27T14:15:33.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: xlnx: zynqmp_disp: layer may be null while releasing\n\nlayer->info can be null if we have an error on the first layer in\nzynqmp_disp_create_layers"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/223842c7702b52846b1c5aef8aca7474ec1fd29b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9218be402aeb1999cc119fc616e21c3cc7cdeec0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce7e62bbd55d20cf250396eb4e8f65b3b5a5e685","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56538","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.400","lastModified":"2024-12-27T14:15:33.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: zynqmp_kms: Unplug DRM device before removal\n\nPrevent userspace accesses to the DRM device from causing\nuse-after-frees by unplugging the device before we remove it. This\ncauses any further userspace accesses to result in an error without\nfurther calls into this driver's internals."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e07c88914fc5289c21820b1aa94f058feb38197","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fb97432e28a7e136b2d76135d50e988ada8e1af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/692f52aedccbf79b212a1e14e3735192b4c24a7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a17b9afe58c474657449cf87e238b1788200576b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56539","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.530","lastModified":"2024-12-27T14:15:33.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_config_scan()\n\nReplace one-element array with a flexible-array member in `struct\nmwifiex_ie_types_wildcard_ssid_params` to fix the following warning\non a MT8173 Chromebook (mt8173-elm-hana):\n\n[  356.775250] ------------[ cut here ]------------\n[  356.784543] memcpy: detected field-spanning write (size 6) of single field \"wildcard_ssid_tlv->ssid\" at drivers\/net\/wireless\/marvell\/mwifiex\/scan.c:904 (size 1)\n[  356.813403] WARNING: CPU: 3 PID: 742 at drivers\/net\/wireless\/marvell\/mwifiex\/scan.c:904 mwifiex_scan_networks+0x4fc\/0xf28 [mwifiex]\n\nThe \"(size 6)\" above is exactly the length of the SSID of the network\nthis device was connected to. The source of the warning looks like:\n\n    ssid_len = user_scan_in->ssid_list[i].ssid_len;\n    [...]\n    memcpy(wildcard_ssid_tlv->ssid,\n           user_scan_in->ssid_list[i].ssid, ssid_len);\n\nThere is a #define WILDCARD_SSID_TLV_MAX_SIZE that uses sizeof() on this\nstruct, but it already didn't account for the size of the one-element\narray, so it doesn't need to be changed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1de0ca1d7320a645ba2ee5954f64be08935b002a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/581261b2d6fdb4237b24fa13f5a5f87bf2861f2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fa329c44e1e635da2541eab28b6cdb8464fc8d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a09760c513ae0f98c7082a1deace7fb6284ee866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b466746cfb6be43f9a1457bbee52ade397fb23ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4698ef8c42e02782604bf4f8a489dbf6b0c1365","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d241a139c2e9f8a479f25c75ebd5391e6a448500","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7774910c5583e61c5fe2571280366624ef48036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2de22e4b6213371d9e76f74a10ce817572a8d74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56540","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.670","lastModified":"2024-12-27T14:15:33.670","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naccel\/ivpu: Prevent recovery invocation during probe and resume\n\nRefactor IPC send and receive functions to allow correct\nhandling of operations that should not trigger a recovery process.\n\nExpose ivpu_send_receive_internal(), which is now utilized by the D0i3\nentry, DCT initialization, and HWS initialization functions.\nThese functions have been modified to return error codes gracefully,\nrather than initiating recovery.\n\nThe updated functions are invoked within ivpu_probe() and ivpu_resume(),\nensuring that any errors encountered during these stages result in a proper\nteardown or shutdown sequence. The previous approach of triggering recovery\nwithin these functions could lead to a race condition, potentially causing\nundefined behavior and kernel crashes due to null pointer dereferences."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/362ef76020ea6219a4df4ac5b738672b59527239","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eaa497411197c41b0813d61ba3fbd6267049082","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cac822772c4dc27a285f09caf30072ab76d2bf38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56541","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.767","lastModified":"2024-12-27T14:15:33.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix use-after-free in ath12k_dp_cc_cleanup()\n\nDuring ath12k module removal, in ath12k_core_deinit(),\nath12k_mac_destroy() un-registers ah->hw from mac80211 and frees\nthe ah->hw as well as all the ar's in it. After this\nath12k_core_soc_destroy()-> ath12k_dp_free()-> ath12k_dp_cc_cleanup()\ntries to access one of the freed ar's from pending skb.\n\nThis is because during mac destroy, driver failed to flush few\ndata packets, which were accessed later in ath12k_dp_cc_cleanup()\nand freed, but using ar from the packet led to this use-after-free.\n\nBUG: KASAN: use-after-free in ath12k_dp_cc_cleanup.part.0+0x5e2\/0xd40 [ath12k]\nWrite of size 4 at addr ffff888150bd3514 by task modprobe\/8926\nCPU: 0 UID: 0 PID: 8926 Comm: modprobe Not tainted\n6.11.0-rc2-wt-ath+ #1746\nHardware name: Intel(R) Client Systems NUC8i7HVK\/NUC8i7HVB, BIOS\nHNKBLi70.86A.0067.2021.0528.1339 05\/28\/2021\n\nCall Trace:\n  <TASK>\n  dump_stack_lvl+0x7d\/0xe0\n  print_address_description.constprop.0+0x33\/0x3a0\n  print_report+0xb5\/0x260\n  ? kasan_addr_to_slab+0x24\/0x80\n  kasan_report+0xd8\/0x110\n  ? ath12k_dp_cc_cleanup.part.0+0x5e2\/0xd40 [ath12k]\n  ? ath12k_dp_cc_cleanup.part.0+0x5e2\/0xd40 [ath12k]\n  kasan_check_range+0xf3\/0x1a0\n  __kasan_check_write+0x14\/0x20\n  ath12k_dp_cc_cleanup.part.0+0x5e2\/0xd40 [ath12k]\n  ath12k_dp_free+0x178\/0x420 [ath12k]\n  ath12k_core_stop+0x176\/0x200 [ath12k]\n  ath12k_core_deinit+0x13f\/0x210 [ath12k]\n  ath12k_pci_remove+0xad\/0x1c0 [ath12k]\n  pci_device_remove+0x9b\/0x1b0\n  device_remove+0xbf\/0x150\n  device_release_driver_internal+0x3c3\/0x580\n  ? __kasan_check_read+0x11\/0x20\n  driver_detach+0xc4\/0x190\n  bus_remove_driver+0x130\/0x2a0\n  driver_unregister+0x68\/0x90\n  pci_unregister_driver+0x24\/0x240\n  ? find_module_all+0x13e\/0x1e0\n  ath12k_pci_exit+0x10\/0x20 [ath12k]\n  __do_sys_delete_module+0x32c\/0x580\n  ? module_flags+0x2f0\/0x2f0\n  ? kmem_cache_free+0xf0\/0x410\n  ? __fput+0x56f\/0xab0\n  ? __fput+0x56f\/0xab0\n  ? debug_smp_processor_id+0x17\/0x20\n  __x64_sys_delete_module+0x4f\/0x70\n  x64_sys_call+0x522\/0x9f0\n  do_syscall_64+0x64\/0x130\n  entry_SYSCALL_64_after_hwframe+0x4b\/0x53\nRIP: 0033:0x7f8182c6ac8b\n\nCommit 24de1b7b231c (\"wifi: ath12k: fix flush failure in recovery\nscenarios\") added the change to decrement the pending packets count\nin case of recovery which make sense as ah->hw as well all\nar's in it are intact during recovery, but during core deinit there\nis no use in decrementing packets count or waking up the empty waitq\nas the module is going to be removed also ar's from pending skb's\ncan't be used and the packets should just be released back.\n\nTo fix this, avoid accessing ar from skb->cb when driver is being\nunregistered.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00214-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35be5018a2a4d1b07bdfcf957c81121d22d16355","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdb281103373fd80eb5c91cede1e115ba270b4e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5e15c8b42923bfb6c84d3d906a9965d9a0f111d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56542","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:33.880","lastModified":"2024-12-27T14:15:33.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: fix a memleak issue when driver is removed\n\nRunning \"modprobe amdgpu\" the second time (followed by a modprobe -r\namdgpu) causes a call trace like:\n\n[  845.212163] Memory manager not clean during takedown.\n[  845.212170] WARNING: CPU: 4 PID: 2481 at drivers\/gpu\/drm\/drm_mm.c:999 drm_mm_takedown+0x2b\/0x40\n[  845.212177] Modules linked in: amdgpu(OE-) amddrm_ttm_helper(OE) amddrm_buddy(OE) amdxcp(OE) amd_sched(OE) drm_exec drm_suballoc_helper drm_display_helper i2c_algo_bit amdttm(OE) amdkcl(OE) cec rc_core sunrpc qrtr intel_rapl_msr intel_rapl_common snd_hda_codec_hdmi edac_mce_amd snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_usb_audio snd_hda_codec snd_usbmidi_lib kvm_amd snd_hda_core snd_ump mc snd_hwdep kvm snd_pcm snd_seq_midi snd_seq_midi_event irqbypass crct10dif_pclmul snd_rawmidi polyval_clmulni polyval_generic ghash_clmulni_intel sha256_ssse3 sha1_ssse3 snd_seq aesni_intel crypto_simd snd_seq_device cryptd snd_timer mfd_aaeon asus_nb_wmi eeepc_wmi joydev asus_wmi snd ledtrig_audio sparse_keymap ccp wmi_bmof input_leds k10temp i2c_piix4 platform_profile rapl soundcore gpio_amdpt mac_hid binfmt_misc msr parport_pc ppdev lp parport efi_pstore nfnetlink dmi_sysfs ip_tables x_tables autofs4 hid_logitech_hidpp hid_logitech_dj hid_generic usbhid hid ahci xhci_pci igc crc32_pclmul libahci xhci_pci_renesas video\n[  845.212284]  wmi [last unloaded: amddrm_ttm_helper(OE)]\n[  845.212290] CPU: 4 PID: 2481 Comm: modprobe Tainted: G        W  OE      6.8.0-31-generic #31-Ubuntu\n[  845.212296] RIP: 0010:drm_mm_takedown+0x2b\/0x40\n[  845.212300] Code: 1f 44 00 00 48 8b 47 38 48 83 c7 38 48 39 f8 75 09 31 c0 31 ff e9 90 2e 86 00 55 48 c7 c7 d0 f6 8e 8a 48 89 e5 e8 f5 db 45 ff <0f> 0b 5d 31 c0 31 ff e9 74 2e 86 00 66 0f 1f 84 00 00 00 00 00 90\n[  845.212302] RSP: 0018:ffffb11302127ae0 EFLAGS: 00010246\n[  845.212305] RAX: 0000000000000000 RBX: ffff92aa5020fc08 RCX: 0000000000000000\n[  845.212307] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n[  845.212309] RBP: ffffb11302127ae0 R08: 0000000000000000 R09: 0000000000000000\n[  845.212310] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000004\n[  845.212312] R13: ffff92aa50200000 R14: ffff92aa5020fb10 R15: ffff92aa5020faa0\n[  845.212313] FS:  0000707dd7c7c080(0000) GS:ffff92b93de00000(0000) knlGS:0000000000000000\n[  845.212316] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  845.212318] CR2: 00007d48b0aee200 CR3: 0000000115a58000 CR4: 0000000000f50ef0\n[  845.212320] PKRU: 55555554\n[  845.212321] Call Trace:\n[  845.212323]  <TASK>\n[  845.212328]  ? show_regs+0x6d\/0x80\n[  845.212333]  ? __warn+0x89\/0x160\n[  845.212339]  ? drm_mm_takedown+0x2b\/0x40\n[  845.212344]  ? report_bug+0x17e\/0x1b0\n[  845.212350]  ? handle_bug+0x51\/0xa0\n[  845.212355]  ? exc_invalid_op+0x18\/0x80\n[  845.212359]  ? asm_exc_invalid_op+0x1b\/0x20\n[  845.212366]  ? drm_mm_takedown+0x2b\/0x40\n[  845.212371]  amdgpu_gtt_mgr_fini+0xa9\/0x130 [amdgpu]\n[  845.212645]  amdgpu_ttm_fini+0x264\/0x340 [amdgpu]\n[  845.212770]  amdgpu_bo_fini+0x2e\/0xc0 [amdgpu]\n[  845.212894]  gmc_v12_0_sw_fini+0x2a\/0x40 [amdgpu]\n[  845.213036]  amdgpu_device_fini_sw+0x11a\/0x590 [amdgpu]\n[  845.213159]  amdgpu_driver_release_kms+0x16\/0x40 [amdgpu]\n[  845.213302]  devm_drm_dev_init_release+0x5e\/0x90\n[  845.213305]  devm_action_release+0x12\/0x30\n[  845.213308]  release_nodes+0x42\/0xd0\n[  845.213311]  devres_release_all+0x97\/0xe0\n[  845.213314]  device_unbind_cleanup+0x12\/0x80\n[  845.213317]  device_release_driver_internal+0x230\/0x270\n[  845.213319]  ? srso_alias_return_thunk+0x5\/0xfbef5\n\nThis is caused by lost memory during early init phase. First time driver\nis removed, memory is freed but when second time the driver is inserted,\nVBIOS dmub is not active, since the PSP policy is to retain the driver\nloaded version on subsequent warm boots. Hence, communication with VBIOS\nDMUB fails.\n\nFix this by aborting further comm\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5860c637513036a6ffc130950ea98676b591b47c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4f36e5fd800de7db74c1c4e62baf24a091a5ff6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e51cbe40b77a32e8698ad8b9582e5b4fce6da364","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56543","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.020","lastModified":"2024-12-27T14:15:34.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Skip Rx TID cleanup for self peer\n\nDuring peer create, dp setup for the peer is done where Rx TID is\nupdated for all the TIDs. Peer object for self peer will not go through\ndp setup.\n\nWhen core halts, dp cleanup is done for all the peers. While cleanup,\nrx_tid::ab is accessed which causes below stack trace for self peer.\n\nWARNING: CPU: 6 PID: 12297 at drivers\/net\/wireless\/ath\/ath12k\/dp_rx.c:851\nCall Trace:\n__warn+0x7b\/0x1a0\nath12k_dp_rx_frags_cleanup+0xd2\/0xe0 [ath12k]\nreport_bug+0x10b\/0x200\nhandle_bug+0x3f\/0x70\nexc_invalid_op+0x13\/0x60\nasm_exc_invalid_op+0x16\/0x20\nath12k_dp_rx_frags_cleanup+0xd2\/0xe0 [ath12k]\nath12k_dp_rx_frags_cleanup+0xca\/0xe0 [ath12k]\nath12k_dp_rx_peer_tid_cleanup+0x39\/0xa0 [ath12k]\nath12k_mac_peer_cleanup_all+0x61\/0x100 [ath12k]\nath12k_core_halt+0x3b\/0x100 [ath12k]\nath12k_core_reset+0x494\/0x4c0 [ath12k]\n\nsta object in peer will be updated when remote peer is created. Hence\nuse peer::sta to detect the self peer and skip the cleanup.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a0c640ce1cdcde3eb131a0c1e70ca1ed7cf27cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a052483d495a4dc62c814f2fd17d0ceb308fc6a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1e2d6738b29c74c2024eb23167dfff68aadd984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d73da0dd2853887b7aab71f0d572fd3314dafafe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56544","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.153","lastModified":"2024-12-27T14:15:34.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudmabuf: change folios array from kmalloc to kvmalloc\n\nWhen PAGE_SIZE 4096, MAX_PAGE_ORDER 10, 64bit machine,\npage_alloc only support 4MB.\nIf above this, trigger this warn and return NULL.\n\nudmabuf can change size limit, if change it to 3072(3GB), and then alloc\n3GB udmabuf, will fail create.\n\n[ 4080.876581] ------------[ cut here ]------------\n[ 4080.876843] WARNING: CPU: 3 PID: 2015 at mm\/page_alloc.c:4556 __alloc_pages+0x2c8\/0x350\n[ 4080.878839] RIP: 0010:__alloc_pages+0x2c8\/0x350\n[ 4080.879470] Call Trace:\n[ 4080.879473]  <TASK>\n[ 4080.879473]  ? __alloc_pages+0x2c8\/0x350\n[ 4080.879475]  ? __warn.cold+0x8e\/0xe8\n[ 4080.880647]  ? __alloc_pages+0x2c8\/0x350\n[ 4080.880909]  ? report_bug+0xff\/0x140\n[ 4080.881175]  ? handle_bug+0x3c\/0x80\n[ 4080.881556]  ? exc_invalid_op+0x17\/0x70\n[ 4080.881559]  ? asm_exc_invalid_op+0x1a\/0x20\n[ 4080.882077]  ? udmabuf_create+0x131\/0x400\n\nBecause MAX_PAGE_ORDER, kmalloc can max alloc 4096 * (1 << 10), 4MB\nmemory, each array entry is pointer(8byte), so can save 524288 pages(2GB).\n\nFurther more, costly order(order 3) may not be guaranteed that it can be\napplied for, due to fragmentation.\n\nThis patch change udmabuf array use kvmalloc_array, this can fallback\nalloc into vmalloc, which can guarantee allocation for any size and does\nnot affect the performance of kmalloc allocations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c0844c6184e658064e14c4335885785ad3bf84b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2acc6192aa8570661ed37868c02c03002b1dc290","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85bb72397cb63649fe493c96e27e1d0e4ed2ff63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56545","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.270","lastModified":"2024-12-27T14:15:34.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hyperv: streamline driver probe to avoid devres issues\n\nIt was found that unloading 'hid_hyperv' module results in a devres\ncomplaint:\n\n ...\n hv_vmbus: unregistering driver hid_hyperv\n ------------[ cut here ]------------\n WARNING: CPU: 2 PID: 3983 at drivers\/base\/devres.c:691 devres_release_group+0x1f2\/0x2c0\n ...\n Call Trace:\n  <TASK>\n  ? devres_release_group+0x1f2\/0x2c0\n  ? __warn+0xd1\/0x1c0\n  ? devres_release_group+0x1f2\/0x2c0\n  ? report_bug+0x32a\/0x3c0\n  ? handle_bug+0x53\/0xa0\n  ? exc_invalid_op+0x18\/0x50\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? devres_release_group+0x1f2\/0x2c0\n  ? devres_release_group+0x90\/0x2c0\n  ? rcu_is_watching+0x15\/0xb0\n  ? __pfx_devres_release_group+0x10\/0x10\n  hid_device_remove+0xf5\/0x220\n  device_release_driver_internal+0x371\/0x540\n  ? klist_put+0xf3\/0x170\n  bus_remove_device+0x1f1\/0x3f0\n  device_del+0x33f\/0x8c0\n  ? __pfx_device_del+0x10\/0x10\n  ? cleanup_srcu_struct+0x337\/0x500\n  hid_destroy_device+0xc8\/0x130\n  mousevsc_remove+0xd2\/0x1d0 [hid_hyperv]\n  device_release_driver_internal+0x371\/0x540\n  driver_detach+0xc5\/0x180\n  bus_remove_driver+0x11e\/0x2a0\n  ? __mutex_unlock_slowpath+0x160\/0x5e0\n  vmbus_driver_unregister+0x62\/0x2b0 [hv_vmbus]\n  ...\n\nAnd the issue seems to be that the corresponding devres group is not\nallocated. Normally, devres_open_group() is called from\n__hid_device_probe() but Hyper-V HID driver overrides 'hid_dev->driver'\nwith 'mousevsc_hid_driver' stub and basically re-implements\n__hid_device_probe() by calling hid_parse() and hid_hw_start() but not\ndevres_open_group(). hid_device_probe() does not call __hid_device_probe()\nfor it. Later, when the driver is removed, hid_device_remove() calls\ndevres_release_group() as it doesn't check whether hdev->driver was\ninitially overridden or not.\n\nThe issue seems to be related to the commit 62c68e7cee33 (\"HID: ensure\ntimely release of driver-allocated resources\") but the commit itself seems\nto be correct.\n\nFix the issue by dropping the 'hid_dev->driver' override and using\nhid_register_driver()\/hid_unregister_driver() instead. Alternatively, it\nwould have been possible to rely on the default handling but\nHID_CONNECT_DEFAULT implies HID_CONNECT_HIDRAW and it doesn't seem to work\nfor mousevsc as-is."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19a9457e5e210e408c1f8865b5d93c5a2c90409d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d48d0fbaaa74a04fb9092780a3f83dc4f3f8160","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66ef47faa90d838cda131fe1f7776456cc3b59f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b03e713a400aeb5f969bab4daf47a7402d0df814","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56546","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.383","lastModified":"2024-12-27T14:15:34.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: soc: xilinx: add the missing kfree in xlnx_add_cb_for_suspend()\n\nIf we fail to allocate memory for cb_data by kmalloc, the memory\nallocation for eve_data is never freed, add the missing kfree()\nin the error handling path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/272168927f38bda46f6c1ed5f40de97689e7a5d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44ed4f90a97ff6f339e50ac01db71544e0990efc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/584d420771e1ad2bb74e19a19da8ae0fee0a6e1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a3bda42394ff137eb2d3d3d20d2956a8c6e9237","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/882d7afaa4b82c20a7be7a3a039532a80ebacd23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56547","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.497","lastModified":"2024-12-27T14:15:34.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu\/nocb: Fix missed RCU barrier on deoffloading\n\nCurrently, running rcutorture test with torture_type=rcu fwd_progress=8\nn_barrier_cbs=8 nocbs_nthreads=8 nocbs_toggle=100 onoff_interval=60\ntest_boost=2, will trigger the following warning:\n\n\tWARNING: CPU: 19 PID: 100 at kernel\/rcu\/tree_nocb.h:1061 rcu_nocb_rdp_deoffload+0x292\/0x2a0\n\tRIP: 0010:rcu_nocb_rdp_deoffload+0x292\/0x2a0\n\t Call Trace:\n\t  <TASK>\n\t  ? __warn+0x7e\/0x120\n\t  ? rcu_nocb_rdp_deoffload+0x292\/0x2a0\n\t  ? report_bug+0x18e\/0x1a0\n\t  ? handle_bug+0x3d\/0x70\n\t  ? exc_invalid_op+0x18\/0x70\n\t  ? asm_exc_invalid_op+0x1a\/0x20\n\t  ? rcu_nocb_rdp_deoffload+0x292\/0x2a0\n\t  rcu_nocb_cpu_deoffload+0x70\/0xa0\n\t  rcu_nocb_toggle+0x136\/0x1c0\n\t  ? __pfx_rcu_nocb_toggle+0x10\/0x10\n\t  kthread+0xd1\/0x100\n\t  ? __pfx_kthread+0x10\/0x10\n\t  ret_from_fork+0x2f\/0x50\n\t  ? __pfx_kthread+0x10\/0x10\n\t  ret_from_fork_asm+0x1a\/0x30\n\t  <\/TASK>\n\nCPU0                               CPU2                          CPU3\n\/\/rcu_nocb_toggle             \/\/nocb_cb_wait                   \/\/rcutorture\n\n\/\/ deoffload CPU1             \/\/ process CPU1's rdp\nrcu_barrier()\n    rcu_segcblist_entrain()\n        rcu_segcblist_add_len(1);\n        \/\/ len == 2\n        \/\/ enqueue barrier\n        \/\/ callback to CPU1's\n        \/\/ rdp->cblist\n                             rcu_do_batch()\n                                 \/\/ invoke CPU1's rdp->cblist\n                                 \/\/ callback\n                                 rcu_barrier_callback()\n                                                             rcu_barrier()\n                                                               mutex_lock(&rcu_state.barrier_mutex);\n                                                               \/\/ still see len == 2\n                                                               \/\/ enqueue barrier callback\n                                                               \/\/ to CPU1's rdp->cblist\n                                                               rcu_segcblist_entrain()\n                                                                   rcu_segcblist_add_len(1);\n                                                                   \/\/ len == 3\n                                 \/\/ decrement len\n                                 rcu_segcblist_add_len(-2);\n                             kthread_parkme()\n\n\/\/ CPU1's rdp->cblist len == 1\n\/\/ Warn because there is\n\/\/ still a pending barrier\n\/\/ trigger warning\nWARN_ON_ONCE(rcu_segcblist_n_cbs(&rdp->cblist));\ncpus_read_unlock();\n\n                                                                \/\/ wait CPU1 to comes online and\n                                                                \/\/ invoke barrier callback on\n                                                                \/\/ CPU1 rdp's->cblist\n                                                                wait_for_completion(&rcu_state.barrier_completion);\n\/\/ deoffload CPU4\ncpus_read_lock()\n  rcu_barrier()\n    mutex_lock(&rcu_state.barrier_mutex);\n    \/\/ block on barrier_mutex\n    \/\/ wait rcu_barrier() on\n    \/\/ CPU3 to unlock barrier_mutex\n    \/\/ but CPU3 unlock barrier_mutex\n    \/\/ need to wait CPU1 comes online\n    \/\/ when CPU1 going online will block on cpus_write_lock\n\nThe above scenario will not only trigger a WARN_ON_ONCE(), but also\ntrigger a deadlock.\n\nThanks to nocb locking, a second racing rcu_barrier() on an offline CPU\nwill either observe the decremented callback counter down to 0 and spare\nthe callback enqueue, or rcuo will observe the new callback and keep\nrdp->nocb_cb_sleep to false.\n\nTherefore check rdp->nocb_cb_sleep before parking to make sure no\nfurther rcu_barrier() is waiting on the rdp."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/224b62028959858294789772d372dcb36cf5f820","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2996980e20b7a54a1869df15b3445374b850b155","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56548","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.603","lastModified":"2024-12-27T14:15:34.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhfsplus: don't query the device logical block size multiple times\n\nDevices block sizes may change. One of these cases is a loop device by\nusing ioctl LOOP_SET_BLOCK_SIZE.\n\nWhile this may cause other issues like IO being rejected, in the case of\nhfsplus, it will allocate a block by using that size and potentially write\nout-of-bounds when hfsplus_read_wrapper calls hfsplus_submit_bio and the\nlatter function reads a different io_size.\n\nUsing a new min_io_size initally set to sb_min_blocksize works for the\npurposes of the original fix, since it will be set to the max between\nHFSPLUS_SECTOR_SIZE and the first seen logical block size. We still use the\nmax between HFSPLUS_SECTOR_SIZE and min_io_size in case the latter is not\ninitialized.\n\nTested by mounting an hfsplus filesystem with loop block sizes 512, 1024\nand 4096.\n\nThe produced KASAN report before the fix looks like this:\n\n[  419.944641] ==================================================================\n[  419.945655] BUG: KASAN: slab-use-after-free in hfsplus_read_wrapper+0x659\/0xa0a\n[  419.946703] Read of size 2 at addr ffff88800721fc00 by task repro\/10678\n[  419.947612]\n[  419.947846] CPU: 0 UID: 0 PID: 10678 Comm: repro Not tainted 6.12.0-rc5-00008-gdf56e0f2f3ca #84\n[  419.949007] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04\/01\/2014\n[  419.950035] Call Trace:\n[  419.950384]  <TASK>\n[  419.950676]  dump_stack_lvl+0x57\/0x78\n[  419.951212]  ? hfsplus_read_wrapper+0x659\/0xa0a\n[  419.951830]  print_report+0x14c\/0x49e\n[  419.952361]  ? __virt_addr_valid+0x267\/0x278\n[  419.952979]  ? kmem_cache_debug_flags+0xc\/0x1d\n[  419.953561]  ? hfsplus_read_wrapper+0x659\/0xa0a\n[  419.954231]  kasan_report+0x89\/0xb0\n[  419.954748]  ? hfsplus_read_wrapper+0x659\/0xa0a\n[  419.955367]  hfsplus_read_wrapper+0x659\/0xa0a\n[  419.955948]  ? __pfx_hfsplus_read_wrapper+0x10\/0x10\n[  419.956618]  ? do_raw_spin_unlock+0x59\/0x1a9\n[  419.957214]  ? _raw_spin_unlock+0x1a\/0x2e\n[  419.957772]  hfsplus_fill_super+0x348\/0x1590\n[  419.958355]  ? hlock_class+0x4c\/0x109\n[  419.958867]  ? __pfx_hfsplus_fill_super+0x10\/0x10\n[  419.959499]  ? __pfx_string+0x10\/0x10\n[  419.960006]  ? lock_acquire+0x3e2\/0x454\n[  419.960532]  ? bdev_name.constprop.0+0xce\/0x243\n[  419.961129]  ? __pfx_bdev_name.constprop.0+0x10\/0x10\n[  419.961799]  ? pointer+0x3f0\/0x62f\n[  419.962277]  ? __pfx_pointer+0x10\/0x10\n[  419.962761]  ? vsnprintf+0x6c4\/0xfba\n[  419.963178]  ? __pfx_vsnprintf+0x10\/0x10\n[  419.963621]  ? setup_bdev_super+0x376\/0x3b3\n[  419.964029]  ? snprintf+0x9d\/0xd2\n[  419.964344]  ? __pfx_snprintf+0x10\/0x10\n[  419.964675]  ? lock_acquired+0x45c\/0x5e9\n[  419.965016]  ? set_blocksize+0x139\/0x1c1\n[  419.965381]  ? sb_set_blocksize+0x6d\/0xae\n[  419.965742]  ? __pfx_hfsplus_fill_super+0x10\/0x10\n[  419.966179]  mount_bdev+0x12f\/0x1bf\n[  419.966512]  ? __pfx_mount_bdev+0x10\/0x10\n[  419.966886]  ? vfs_parse_fs_string+0xce\/0x111\n[  419.967293]  ? __pfx_vfs_parse_fs_string+0x10\/0x10\n[  419.967702]  ? __pfx_hfsplus_mount+0x10\/0x10\n[  419.968073]  legacy_get_tree+0x104\/0x178\n[  419.968414]  vfs_get_tree+0x86\/0x296\n[  419.968751]  path_mount+0xba3\/0xd0b\n[  419.969157]  ? __pfx_path_mount+0x10\/0x10\n[  419.969594]  ? kmem_cache_free+0x1e2\/0x260\n[  419.970311]  do_mount+0x99\/0xe0\n[  419.970630]  ? __pfx_do_mount+0x10\/0x10\n[  419.971008]  __do_sys_mount+0x199\/0x1c9\n[  419.971397]  do_syscall_64+0xd0\/0x135\n[  419.971761]  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[  419.972233] RIP: 0033:0x7c3cb812972e\n[  419.972564] Code: 48 8b 0d f5 46 0d 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d c2 46 0d 00 f7 d8 64 89 01 48\n[  419.974371] RSP: 002b:00007ffe30632548 EFLAGS: 00000286 ORIG_RAX: 00000000000000a5\n[  419.975048] RAX: ffffffffffffffda RBX: 00007ffe306328d8 RCX: 00007c3cb812972e\n[  419.975701] RDX: 0000000020000000 RSI: 0000000020000c80 RDI:\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06cbfbb13ac88f4154c2eb4bc4176f9d10139847","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c82587cb57687de3f18ab4b98a8850c789bedcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21900e8478126ff6afe3b66679f676e74d1f8830","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2667c9b7b76efcbc7adbfea249892f20c313b0da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d7bda75e1a6239db053c73acde17ca146317824","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baccb5e12577b7a9eff54ffba301fdaa0f3ee5a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfeecda050aa9376f642d5b2a71c4112cc6c8216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8a2b1c1c2ea85e9a5a2d0c5a5a7e7c639feb866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f57725bcc5816425e25218fdf5fb6923bc578cdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56549","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T14:15:34.747","lastModified":"2024-12-27T14:15:34.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: Fix NULL pointer dereference in object->file\n\nAt present, the object->file has the NULL pointer dereference problem in\nondemand-mode. The root cause is that the allocated fd and object->file\nlifetime are inconsistent, and the user-space invocation to anon_fd uses\nobject->file. Following is the process that triggers the issue:\n\n\t  [write fd]\t\t\t\t[umount]\ncachefiles_ondemand_fd_write_iter\n\t\t\t\t       fscache_cookie_state_machine\n\t\t\t\t\t cachefiles_withdraw_cookie\n  if (!file) return -ENOBUFS\n\t\t\t\t\t   cachefiles_clean_up_object\n\t\t\t\t\t     cachefiles_unmark_inode_in_use\n\t\t\t\t\t     fput(object->file)\n\t\t\t\t\t     object->file = NULL\n  \/\/ file NULL pointer dereference!\n  __cachefiles_write(..., file, ...)\n\nFix this issue by add an additional reference count to the object->file\nbefore write\/llseek, and decrement after it finished."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31ad74b20227ce6b40910ff78b1c604e42975cf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9582c7664103c9043e80a78f5c382aa6bdd67418","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f98770440c9bc468e2fd878212ec9526dbe08293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-12984","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T15:15:11.957","lastModified":"2024-12-27T15:15:11.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in Amcrest IP2M-841B, IP2M-841W, IPC-IP2M-841B, IPC-IP3M-943B, IPC-IP3M-943S, IPC-IP3M-HX2B and IPC-IPM-721S up to 20241211. This affects an unknown part of the file \/web_caps\/webCapsConfig of the component Web Interface. The manipulation leads to information disclosure. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:N\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"NONE","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:N\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"NONE","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-200"},{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/netsecfish.notion.site\/AMCREST-IP-Camera-Information-Disclosure-1596b683e67c8045ad10c16b3eed456f?pvs=4","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289377","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289377","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.461109","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12985","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T15:15:12.183","lastModified":"2024-12-27T16:15:23.807","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Overtek OT-E801G OTE801G65.1.1.0. This vulnerability affects unknown code of the file \/diag_ping.cmd?action=test&interface=ppp0.1&ipaddr=8.8.8.8%26%26cat%20\/etc\/passwd&ipversion=4&sessionKey=test. The manipulation leads to os command injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":6.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","baseScore":6.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-77"},{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/vuldb.com\/?ctiid.289378","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289378","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.462387","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.462387","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-56550","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:13.737","lastModified":"2024-12-27T15:15:13.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/stacktrace: Use break instead of return statement\n\narch_stack_walk_user_common() contains a return statement instead of a\nbreak statement in case store_ip() fails while trying to store a callchain\nentry of a user space process.\nThis may lead to a missing pagefault_enable() call.\n\nIf this happens any subsequent page fault of the process won't be resolved\nby the page fault handler and this in turn will lead to the process being\nkilled.\n\nUse a break instead of a return statement to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20c26357826457dc7c8145297e60ddc012e18914","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588a9836a4ef7ec3bfcffda526dfa399637e6cfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56551","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:13.850","lastModified":"2024-12-27T15:15:13.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: fix usage slab after free\n\n[  +0.000021] BUG: KASAN: slab-use-after-free in drm_sched_entity_flush+0x6cb\/0x7a0 [gpu_sched]\n[  +0.000027] Read of size 8 at addr ffff8881b8605f88 by task amd_pci_unplug\/2147\n\n[  +0.000023] CPU: 6 PID: 2147 Comm: amd_pci_unplug Not tainted 6.10.0+ #1\n[  +0.000016] Hardware name: ASUS System Product Name\/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12\/03\/2020\n[  +0.000016] Call Trace:\n[  +0.000008]  <TASK>\n[  +0.000009]  dump_stack_lvl+0x76\/0xa0\n[  +0.000017]  print_report+0xce\/0x5f0\n[  +0.000017]  ? drm_sched_entity_flush+0x6cb\/0x7a0 [gpu_sched]\n[  +0.000019]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000015]  ? kasan_complete_mode_report_info+0x72\/0x200\n[  +0.000016]  ? drm_sched_entity_flush+0x6cb\/0x7a0 [gpu_sched]\n[  +0.000019]  kasan_report+0xbe\/0x110\n[  +0.000015]  ? drm_sched_entity_flush+0x6cb\/0x7a0 [gpu_sched]\n[  +0.000023]  __asan_report_load8_noabort+0x14\/0x30\n[  +0.000014]  drm_sched_entity_flush+0x6cb\/0x7a0 [gpu_sched]\n[  +0.000020]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000013]  ? __kasan_check_write+0x14\/0x30\n[  +0.000016]  ? __pfx_drm_sched_entity_flush+0x10\/0x10 [gpu_sched]\n[  +0.000020]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000013]  ? __kasan_check_write+0x14\/0x30\n[  +0.000013]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000013]  ? enable_work+0x124\/0x220\n[  +0.000015]  ? __pfx_enable_work+0x10\/0x10\n[  +0.000013]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000014]  ? free_large_kmalloc+0x85\/0xf0\n[  +0.000016]  drm_sched_entity_destroy+0x18\/0x30 [gpu_sched]\n[  +0.000020]  amdgpu_vce_sw_fini+0x55\/0x170 [amdgpu]\n[  +0.000735]  ? __kasan_check_read+0x11\/0x20\n[  +0.000016]  vce_v4_0_sw_fini+0x80\/0x110 [amdgpu]\n[  +0.000726]  amdgpu_device_fini_sw+0x331\/0xfc0 [amdgpu]\n[  +0.000679]  ? mutex_unlock+0x80\/0xe0\n[  +0.000017]  ? __pfx_amdgpu_device_fini_sw+0x10\/0x10 [amdgpu]\n[  +0.000662]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000014]  ? __kasan_check_write+0x14\/0x30\n[  +0.000013]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000013]  ? mutex_unlock+0x80\/0xe0\n[  +0.000016]  amdgpu_driver_release_kms+0x16\/0x80 [amdgpu]\n[  +0.000663]  drm_minor_release+0xc9\/0x140 [drm]\n[  +0.000081]  drm_release+0x1fd\/0x390 [drm]\n[  +0.000082]  __fput+0x36c\/0xad0\n[  +0.000018]  __fput_sync+0x3c\/0x50\n[  +0.000014]  __x64_sys_close+0x7d\/0xe0\n[  +0.000014]  x64_sys_call+0x1bc6\/0x2680\n[  +0.000014]  do_syscall_64+0x70\/0x130\n[  +0.000014]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000014]  ? irqentry_exit_to_user_mode+0x60\/0x190\n[  +0.000015]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000014]  ? irqentry_exit+0x43\/0x50\n[  +0.000012]  ? srso_return_thunk+0x5\/0x5f\n[  +0.000013]  ? exc_page_fault+0x7c\/0x110\n[  +0.000015]  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n[  +0.000014] RIP: 0033:0x7ffff7b14f67\n[  +0.000013] Code: ff e8 0d 16 02 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 73 ba f7 ff\n[  +0.000026] RSP: 002b:00007fffffffe378 EFLAGS: 00000246 ORIG_RAX: 0000000000000003\n[  +0.000019] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff7b14f67\n[  +0.000014] RDX: 0000000000000000 RSI: 00007ffff7f6f47a RDI: 0000000000000003\n[  +0.000014] RBP: 00007fffffffe3a0 R08: 0000555555569890 R09: 0000000000000000\n[  +0.000014] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fffffffe5c8\n[  +0.000013] R13: 00005555555552a9 R14: 0000555555557d48 R15: 00007ffff7ffd040\n[  +0.000020]  <\/TASK>\n\n[  +0.000016] Allocated by task 383 on cpu 7 at 26.880319s:\n[  +0.000014]  kasan_save_stack+0x28\/0x60\n[  +0.000008]  kasan_save_track+0x18\/0x70\n[  +0.000007]  kasan_save_alloc_info+0x38\/0x60\n[  +0.000007]  __kasan_kmalloc+0xc1\/0xd0\n[  +0.000007]  kmalloc_trace_noprof+0x180\/0x380\n[  +0.000007]  drm_sched_init+0x411\/0xec0 [gpu_sched]\n[  +0.000012]  amdgpu_device_init+0x695f\/0xa610 [amdgpu]\n[  +0.000658]  amdgpu_driver_load_kms+0x1a\/0x120 [amdgpu]\n[  +0.000662]  amdgpu_pci_p\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3990ef742c064e22189b954522930db04fc6b1a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6383199ada42d30562b4249c393592a2a9c38165","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b61badd20b443eabe132314669bb51a263982e5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56552","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:13.970","lastModified":"2024-12-27T15:15:13.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/guc_submit: fix race around suspend_pending\n\nCurrently in some testcases we can trigger:\n\nxe 0000:03:00.0: [drm] Assertion `exec_queue_destroyed(q)` failed!\n....\nWARNING: CPU: 18 PID: 2640 at drivers\/gpu\/drm\/xe\/xe_guc_submit.c:1826 xe_guc_sched_done_handler+0xa54\/0xef0 [xe]\nxe 0000:03:00.0: [drm] *ERROR* GT1: DEREGISTER_DONE: Unexpected engine state 0x00a1, guc_id=57\n\nLooking at a snippet of corresponding ftrace for this GuC id we can see:\n\n162.673311: xe_sched_msg_add:     dev=0000:03:00.0, gt=1 guc_id=57, opcode=3\n162.673317: xe_sched_msg_recv:    dev=0000:03:00.0, gt=1 guc_id=57, opcode=3\n162.673319: xe_exec_queue_scheduling_disable: dev=0000:03:00.0, 1:0x2, gt=1, width=1, guc_id=57, guc_state=0x29, flags=0x0\n162.674089: xe_exec_queue_kill:   dev=0000:03:00.0, 1:0x2, gt=1, width=1, guc_id=57, guc_state=0x29, flags=0x0\n162.674108: xe_exec_queue_close:  dev=0000:03:00.0, 1:0x2, gt=1, width=1, guc_id=57, guc_state=0xa9, flags=0x0\n162.674488: xe_exec_queue_scheduling_done: dev=0000:03:00.0, 1:0x2, gt=1, width=1, guc_id=57, guc_state=0xa9, flags=0x0\n162.678452: xe_exec_queue_deregister: dev=0000:03:00.0, 1:0x2, gt=1, width=1, guc_id=57, guc_state=0xa1, flags=0x0\n\nIt looks like we try to suspend the queue (opcode=3), setting\nsuspend_pending and triggering a disable_scheduling. The user then\ncloses the queue. However the close will also forcefully signal the\nsuspend fence after killing the queue, later when the G2H response for\ndisable_scheduling comes back we have now cleared suspend_pending when\nsignalling the suspend fence, so the disable_scheduling now incorrectly\ntries to also deregister the queue. This leads to warnings since the queue\nhas yet to even be marked for destruction. We also seem to trigger\nerrors later with trying to double unregister the same queue.\n\nTo fix this tweak the ordering when handling the response to ensure we\ndon't race with a disable_scheduling that didn't actually intend to\nperform an unregister.  The destruction path should now also correctly\nwait for any pending_disable before marking as destroyed.\n\n(cherry picked from commit f161809b362f027b6d72bd998e47f8f0bad60a2e)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ddcb50b700221fa7d7be2adcb3d7d7afe8633dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87651f31ae4e6e6e7e6c7270b9b469405e747407","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56553","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.073","lastModified":"2024-12-27T15:15:14.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix memleak of proc->delivered_freeze\n\nIf a freeze notification is cleared with BC_CLEAR_FREEZE_NOTIFICATION\nbefore calling binder_freeze_notification_done(), then it is detached\nfrom its reference (e.g. ref->freeze) but the work remains queued in\nproc->delivered_freeze. This leads to a memory leak when the process\nexits as any pending entries in proc->delivered_freeze are not freed:\n\n  unreferenced object 0xffff38e8cfa36180 (size 64):\n    comm \"binder-util\", pid 655, jiffies 4294936641\n    hex dump (first 32 bytes):\n      b8 e9 9e c8 e8 38 ff ff b8 e9 9e c8 e8 38 ff ff  .....8.......8..\n      0b 00 00 00 00 00 00 00 3c 1f 4b 00 00 00 00 00  ........<.K.....\n    backtrace (crc 95983b32):\n      [<000000000d0582cf>] kmemleak_alloc+0x34\/0x40\n      [<000000009c99a513>] __kmalloc_cache_noprof+0x208\/0x280\n      [<00000000313b1704>] binder_thread_write+0xdec\/0x439c\n      [<000000000cbd33bb>] binder_ioctl+0x1b68\/0x22cc\n      [<000000002bbedeeb>] __arm64_sys_ioctl+0x124\/0x190\n      [<00000000b439adee>] invoke_syscall+0x6c\/0x254\n      [<00000000173558fc>] el0_svc_common.constprop.0+0xac\/0x230\n      [<0000000084f72311>] do_el0_svc+0x40\/0x58\n      [<000000008b872457>] el0_svc+0x38\/0x78\n      [<00000000ee778653>] el0t_64_sync_handler+0x120\/0x12c\n      [<00000000a8ec61bf>] el0t_64_sync+0x190\/0x194\n\nThis patch fixes the leak by ensuring that any pending entries in\nproc->delivered_freeze are freed during binder_deferred_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1db76ec2b4b206ff943e292a0b55e68ff3443598","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8b77712142fb146fe18d2253bc8a798d522e427","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56554","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.183","lastModified":"2024-12-27T15:15:14.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix freeze UAF in binder_release_work()\n\nWhen a binder reference is cleaned up, any freeze work queued in the\nassociated process should also be removed. Otherwise, the reference is\nfreed while its ref->freeze.work is still queued in proc->work leading\nto a use-after-free issue as shown by the following KASAN report:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in binder_release_work+0x398\/0x3d0\n  Read of size 8 at addr ffff31600ee91488 by task kworker\/5:1\/211\n\n  CPU: 5 UID: 0 PID: 211 Comm: kworker\/5:1 Not tainted 6.11.0-rc7-00382-gfc6c92196396 #22\n  Hardware name: linux,dummy-virt (DT)\n  Workqueue: events binder_deferred_func\n  Call trace:\n   binder_release_work+0x398\/0x3d0\n   binder_deferred_func+0xb60\/0x109c\n   process_one_work+0x51c\/0xbd4\n   worker_thread+0x608\/0xee8\n\n  Allocated by task 703:\n   __kmalloc_cache_noprof+0x130\/0x280\n   binder_thread_write+0xdb4\/0x42a0\n   binder_ioctl+0x18f0\/0x25ac\n   __arm64_sys_ioctl+0x124\/0x190\n   invoke_syscall+0x6c\/0x254\n\n  Freed by task 211:\n   kfree+0xc4\/0x230\n   binder_deferred_func+0xae8\/0x109c\n   process_one_work+0x51c\/0xbd4\n   worker_thread+0x608\/0xee8\n  ==================================================================\n\nThis commit fixes the issue by ensuring any queued freeze work is removed\nwhen cleaning up a binder reference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e20434cbca814cb91a0a261ca0106815ef48e5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe39e0ea2d0ba7f508ff453c4c9a44a95ec0de29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56555","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.297","lastModified":"2024-12-27T15:15:14.297","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix OOB in binder_add_freeze_work()\n\nIn binder_add_freeze_work() we iterate over the proc->nodes with the\nproc->inner_lock held. However, this lock is temporarily dropped to\nacquire the node->lock first (lock nesting order). This can race with\nbinder_deferred_release() which removes the nodes from the proc->nodes\nrbtree and adds them into binder_dead_nodes list. This leads to a broken\niteration in binder_add_freeze_work() as rb_next() will use data from\nbinder_dead_nodes, triggering an out-of-bounds access:\n\n  ==================================================================\n  BUG: KASAN: global-out-of-bounds in rb_next+0xfc\/0x124\n  Read of size 8 at addr ffffcb84285f7170 by task freeze\/660\n\n  CPU: 8 UID: 0 PID: 660 Comm: freeze Not tainted 6.11.0-07343-ga727812a8d45 #18\n  Hardware name: linux,dummy-virt (DT)\n  Call trace:\n   rb_next+0xfc\/0x124\n   binder_add_freeze_work+0x344\/0x534\n   binder_ioctl+0x1e70\/0x25ac\n   __arm64_sys_ioctl+0x124\/0x190\n\n  The buggy address belongs to the variable:\n   binder_dead_nodes+0x10\/0x40\n  [...]\n  ==================================================================\n\nThis is possible because proc->nodes (rbtree) and binder_dead_nodes\n(list) share entries in binder_node through a union:\n\n\tstruct binder_node {\n\t[...]\n\t\tunion {\n\t\t\tstruct rb_node rb_node;\n\t\t\tstruct hlist_node dead_node;\n\t\t};\n\nFix the race by checking that the proc is still alive. If not, simply\nbreak out of the iteration."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/011e69a1b23011c0db3af4b8293fdd4522cc97b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b1be1da1f8279cf091266e71b5153c5b02aaff6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56556","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.410","lastModified":"2024-12-27T15:15:14.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: fix node UAF in binder_add_freeze_work()\n\nIn binder_add_freeze_work() we iterate over the proc->nodes with the\nproc->inner_lock held. However, this lock is temporarily dropped in\norder to acquire the node->lock first (lock nesting order). This can\nrace with binder_node_release() and trigger a use-after-free:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in _raw_spin_lock+0xe4\/0x19c\n  Write of size 4 at addr ffff53c04c29dd04 by task freeze\/640\n\n  CPU: 5 UID: 0 PID: 640 Comm: freeze Not tainted 6.11.0-07343-ga727812a8d45 #17\n  Hardware name: linux,dummy-virt (DT)\n  Call trace:\n   _raw_spin_lock+0xe4\/0x19c\n   binder_add_freeze_work+0x148\/0x478\n   binder_ioctl+0x1e70\/0x25ac\n   __arm64_sys_ioctl+0x124\/0x190\n\n  Allocated by task 637:\n   __kmalloc_cache_noprof+0x12c\/0x27c\n   binder_new_node+0x50\/0x700\n   binder_transaction+0x35ac\/0x6f74\n   binder_thread_write+0xfb8\/0x42a0\n   binder_ioctl+0x18f0\/0x25ac\n   __arm64_sys_ioctl+0x124\/0x190\n\n  Freed by task 637:\n   kfree+0xf0\/0x330\n   binder_thread_read+0x1e88\/0x3a68\n   binder_ioctl+0x16d8\/0x25ac\n   __arm64_sys_ioctl+0x124\/0x190\n  ==================================================================\n\nFix the race by taking a temporary reference on the node before\nreleasing the proc->inner lock. This ensures the node remains alive\nwhile in use."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38fbefeb2c140b581ed7de8117a5c90d6dd89c22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc8aea47b928cc153b591b3558829ce42f685074","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56557","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.520","lastModified":"2024-12-27T15:15:14.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: ad7923: Fix buffer overflow for tx_buf and ring_xfer\n\nThe AD7923 was updated to support devices with 8 channels, but the size\nof tx_buf and ring_xfer was not increased accordingly, leading to a\npotential buffer overflow in ad7923_update_scan_mode()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00663d3e000c31d0d49ef86a809f5c107c2d09cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/218ecc35949129171ca39bcc0d407c8dc4cd0bbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a4187ec454e19903fd15f6e1825a4b84e59a4cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5cac32721997cb8bcb208a29f4598b3faf46338","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56558","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.633","lastModified":"2024-12-27T15:15:14.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: make sure exp active before svc_export_show\n\nThe function `e_show` was called with protection from RCU. This only\nensures that `exp` will not be freed. Therefore, the reference count for\n`exp` can drop to zero, which will trigger a refcount use-after-free\nwarning when `exp_get` is called. To resolve this issue, use\n`cache_get_rcu` to ensure that `exp` remains active.\n\n------------[ cut here ]------------\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 3 PID: 819 at lib\/refcount.c:25\nrefcount_warn_saturate+0xb1\/0x120\nCPU: 3 UID: 0 PID: 819 Comm: cat Not tainted 6.12.0-rc3+ #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04\/01\/2014\nRIP: 0010:refcount_warn_saturate+0xb1\/0x120\n...\nCall Trace:\n <TASK>\n e_show+0x20b\/0x230 [nfsd]\n seq_read_iter+0x589\/0x770\n seq_read+0x1e5\/0x270\n vfs_read+0x125\/0x530\n ksys_read+0xc1\/0x160\n do_syscall_64+0x5f\/0x170\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1cecfdbc6bfc89c516d286884c7f29267b95de2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cefcadd34e3c71c81ea64b899a0daa86314a51a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7365d1f8de63cffdbbaa2287ce0205438e1a922f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d8f7816bebcd2e7400bb4d786eccb8f33c9f9ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fd29d284b55c2274f7a748e6c5f25b4758b8da5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be8f982c369c965faffa198b46060f8853e0f1f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2fa0d0e327279a8defb87b263cd0bf288fd9261","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56559","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.760","lastModified":"2024-12-27T15:15:14.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/vmalloc: combine all TLB flush operations of KASAN shadow virtual address into one operation\n\nWhen compiling kernel source 'make -j $(nproc)' with the up-and-running\nKASAN-enabled kernel on a 256-core machine, the following soft lockup is\nshown:\n\nwatchdog: BUG: soft lockup - CPU#28 stuck for 22s! [kworker\/28:1:1760]\nCPU: 28 PID: 1760 Comm: kworker\/28:1 Kdump: loaded Not tainted 6.10.0-rc5 #95\nWorkqueue: events drain_vmap_area_work\nRIP: 0010:smp_call_function_many_cond+0x1d8\/0xbb0\nCode: 38 c8 7c 08 84 c9 0f 85 49 08 00 00 8b 45 08 a8 01 74 2e 48 89 f1 49 89 f7 48 c1 e9 03 41 83 e7 07 4c 01 e9 41 83 c7 03 f3 90 <0f> b6 01 41 38 c7 7c 08 84 c0 0f 85 d4 06 00 00 8b 45 08 a8 01 75\nRSP: 0018:ffffc9000cb3fb60 EFLAGS: 00000202\nRAX: 0000000000000011 RBX: ffff8883bc4469c0 RCX: ffffed10776e9949\nRDX: 0000000000000002 RSI: ffff8883bb74ca48 RDI: ffffffff8434dc50\nRBP: ffff8883bb74ca40 R08: ffff888103585dc0 R09: ffff8884533a1800\nR10: 0000000000000004 R11: ffffffffffffffff R12: ffffed1077888d39\nR13: dffffc0000000000 R14: ffffed1077888d38 R15: 0000000000000003\nFS:  0000000000000000(0000) GS:ffff8883bc400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005577b5c8d158 CR3: 0000000004850000 CR4: 0000000000350ef0\nCall Trace:\n <IRQ>\n ? watchdog_timer_fn+0x2cd\/0x390\n ? __pfx_watchdog_timer_fn+0x10\/0x10\n ? __hrtimer_run_queues+0x300\/0x6d0\n ? sched_clock_cpu+0x69\/0x4e0\n ? __pfx___hrtimer_run_queues+0x10\/0x10\n ? srso_return_thunk+0x5\/0x5f\n ? ktime_get_update_offsets_now+0x7f\/0x2a0\n ? srso_return_thunk+0x5\/0x5f\n ? srso_return_thunk+0x5\/0x5f\n ? hrtimer_interrupt+0x2ca\/0x760\n ? __sysvec_apic_timer_interrupt+0x8c\/0x2b0\n ? sysvec_apic_timer_interrupt+0x6a\/0x90\n <\/IRQ>\n <TASK>\n ? asm_sysvec_apic_timer_interrupt+0x16\/0x20\n ? smp_call_function_many_cond+0x1d8\/0xbb0\n ? __pfx_do_kernel_range_flush+0x10\/0x10\n on_each_cpu_cond_mask+0x20\/0x40\n flush_tlb_kernel_range+0x19b\/0x250\n ? srso_return_thunk+0x5\/0x5f\n ? kasan_release_vmalloc+0xa7\/0xc0\n purge_vmap_node+0x357\/0x820\n ? __pfx_purge_vmap_node+0x10\/0x10\n __purge_vmap_area_lazy+0x5b8\/0xa10\n drain_vmap_area_work+0x21\/0x30\n process_one_work+0x661\/0x10b0\n worker_thread+0x844\/0x10e0\n ? srso_return_thunk+0x5\/0x5f\n ? __kthread_parkme+0x82\/0x140\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0x2a5\/0x370\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x30\/0x70\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nDebugging Analysis:\n\n  1. The following ftrace log shows that the lockup CPU spends too much\n     time iterating vmap_nodes and flushing TLB when purging vm_area\n     structures. (Some info is trimmed).\n\n     kworker: funcgraph_entry:              |  drain_vmap_area_work() {\n     kworker: funcgraph_entry:              |   mutex_lock() {\n     kworker: funcgraph_entry:  1.092 us    |     __cond_resched();\n     kworker: funcgraph_exit:   3.306 us    |   }\n     ...                                        ...\n     kworker: funcgraph_entry:              |    flush_tlb_kernel_range() {\n     ...                                          ...\n     kworker: funcgraph_exit: # 7533.649 us |    }\n     ...                                         ...\n     kworker: funcgraph_entry:  2.344 us    |   mutex_unlock();\n     kworker: funcgraph_exit: $ 23871554 us | }\n\n     The drain_vmap_area_work() spends over 23 seconds.\n\n     There are 2805 flush_tlb_kernel_range() calls in the ftrace log.\n       * One is called in __purge_vmap_area_lazy().\n       * Others are called by purge_vmap_node->kasan_release_vmalloc.\n         purge_vmap_node() iteratively releases kasan vmalloc\n         allocations and flushes TLB for each vmap_area.\n           - [Rough calculation] Each flush_tlb_kernel_range() runs\n             about 7.5ms.\n               -- 2804 * 7.5ms = 21.03 seconds.\n               -- That's why a soft lock is triggered.\n\n  2. Extending the soft lockup time can work around the issue (For example,\n     # echo\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9e085effe9b7e342138fde3cf8577d22509932","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9a18889aad9b4c19c6c4550c67ad4f9ed2a354f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56560","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.873","lastModified":"2024-12-27T15:15:14.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nslab: Fix too strict alignment check in create_cache()\n\nOn m68k, where the minimum alignment of unsigned long is 2 bytes:\n\n    Kernel panic - not syncing: __kmem_cache_create_args: Failed to create slab 'io_kiocb'. Error -22\n    CPU: 0 UID: 0 PID: 1 Comm: swapper Not tainted 6.12.0-atari-03776-g7eaa1f99261a #1783\n    Stack from 0102fe5c:\n\t    0102fe5c 00514a2b 00514a2b ffffff00 00000001 0051f5ed 00425e78 00514a2b\n\t    0041eb74 ffffffea 00000310 0051f5ed ffffffea ffffffea 00601f60 00000044\n\t    0102ff20 000e7a68 0051ab8e 004383b8 0051f5ed ffffffea 000000b8 00000007\n\t    01020c00 00000000 000e77f0 0041e5f0 005f67c0 0051f5ed 000000b6 0102fef4\n\t    00000310 0102fef4 00000000 00000016 005f676c 0060a34c 00000010 00000004\n\t    00000038 0000009a 01000000 000000b8 005f668e 0102e000 00001372 0102ff88\n    Call Trace: [<00425e78>] dump_stack+0xc\/0x10\n     [<0041eb74>] panic+0xd8\/0x26c\n     [<000e7a68>] __kmem_cache_create_args+0x278\/0x2e8\n     [<000e77f0>] __kmem_cache_create_args+0x0\/0x2e8\n     [<0041e5f0>] memset+0x0\/0x8c\n     [<005f67c0>] io_uring_init+0x54\/0xd2\n\nThe minimal alignment of an integral type may differ from its size,\nhence is not safe to assume that an arbitrary freeptr_t (which is\nbasically an unsigned long) is always aligned to 4 or 8 bytes.\n\nAs nothing seems to require the additional alignment, it is safe to fix\nthis by relaxing the check to the actual minimum alignment of freeptr_t."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8b5aea5e5186733fa4e5aa4293b0a65a933f1a16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9008fe8fad8255edfdbecea32d7eb0485d939d0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56561","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:14.983","lastModified":"2024-12-27T15:15:14.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: endpoint: Fix PCI domain ID release in pci_epc_destroy()\n\npci_epc_destroy() invokes pci_bus_release_domain_nr() to release the PCI\ndomain ID, but there are two issues:\n\n  - 'epc->dev' is passed to pci_bus_release_domain_nr() which was already\n    freed by device_unregister(), leading to a use-after-free issue.\n\n  - Domain ID corresponds to the EPC device parent, so passing 'epc->dev'\n    is also wrong.\n\nFix these issues by passing 'epc->dev.parent' to\npci_bus_release_domain_nr() and also do it before device_unregister().\n\n[mani: reworded subject and description]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4acc902ed3743edd4ac2d3846604a99d17104359","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c74a1df6c2a2df7dd45c3fc1a5edc29a075dcf22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56562","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.087","lastModified":"2024-12-27T15:15:15.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: Fix miss free init_dyn_addr at i3c_master_put_i3c_addrs()\n\nif (dev->boardinfo && dev->boardinfo->init_dyn_addr)\n                                      ^^^ here check \"init_dyn_addr\"\n\ti3c_bus_set_addr_slot_status(&master->bus, dev->info.dyn_addr, ...)\n\t\t\t\t\t\t             ^^^^\n\t\t\t\t\t\t\tfree \"dyn_addr\"\nFix copy\/paste error \"dyn_addr\" by replacing it with \"init_dyn_addr\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/093ecc6d82ff1d2e0cbf6f2000438b6c698145cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0cb21f1ea3a2e19ee314a8fcf95461b5c453c59e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e8ab955c6d06f9d907761c07c02d1492f0a8ac1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3082990592f7c6d7510a9133afa46e31bbe26533","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/991e33a99fd3b5d432f0629565f532f563fe019a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2f0ce241154b04f2fc150ff16ad82d9b8fdfa4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce30d11b39e8d637fed4704a5b43e9d556990475","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56563","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.197","lastModified":"2024-12-27T15:15:15.197","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix cred leak in ceph_mds_check_access()\n\nget_current_cred() increments the reference counter, but the\nput_cred() call was missing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c5cf420303256dcd6ff175643e9e9558543c2047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3d1c9e2b811f13bdbbb962c2b17a6091c28522c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56564","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.297","lastModified":"2024-12-27T15:15:15.297","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: pass cred pointer to ceph_mds_auth_match()\n\nThis eliminates a redundant get_current_cred() call, because\nceph_mds_check_access() has already obtained this pointer.\n\nAs a side effect, this also fixes a reference leak in\nceph_mds_auth_match(): by omitting the get_current_cred() call, no\nadditional cred reference is taken."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23426309a4064b25a961e1c72961d8bfc7c8c990","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffa6ba7bdb7f07f49c9e9150b0176df066520f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56565","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.400","lastModified":"2024-12-27T15:15:15.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to drop all discards after creating snapshot on lvm device\n\nPiergiorgio reported a bug in bugzilla as below:\n\n------------[ cut here ]------------\nWARNING: CPU: 2 PID: 969 at fs\/f2fs\/segment.c:1330\nRIP: 0010:__submit_discard_cmd+0x27d\/0x400 [f2fs]\nCall Trace:\n __issue_discard_cmd+0x1ca\/0x350 [f2fs]\n issue_discard_thread+0x191\/0x480 [f2fs]\n kthread+0xcf\/0x100\n ret_from_fork+0x31\/0x50\n ret_from_fork_asm+0x1a\/0x30\n\nw\/ below testcase, it can reproduce this bug quickly:\n- pvcreate \/dev\/vdb\n- vgcreate myvg1 \/dev\/vdb\n- lvcreate -L 1024m -n mylv1 myvg1\n- mount \/dev\/myvg1\/mylv1 \/mnt\/f2fs\n- dd if=\/dev\/zero of=\/mnt\/f2fs\/file bs=1M count=20\n- sync\n- rm \/mnt\/f2fs\/file\n- sync\n- lvcreate -L 1024m -s -n mylv1-snapshot \/dev\/myvg1\/mylv1\n- umount \/mnt\/f2fs\n\nThe root cause is: it will update discard_max_bytes of mounted lvm\ndevice to zero after creating snapshot on this lvm device, then,\n__submit_discard_cmd() will pass parameter @nr_sects w\/ zero value\nto __blkdev_issue_discard(), it returns a NULL bio pointer, result\nin panic.\n\nThis patch changes as below for fixing:\n1. Let's drop all remained discards in f2fs_unfreeze() if snapshot\nof lvm device is created.\n2. Checking discard_max_bytes before submitting discard during\n__submit_discard_cmd()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15136c3861a3341db261ebdbb6ae4ae1765635e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc8aeb04fd80cb8cfae3058445c84410fd0beb5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed24ab98242f8d22b66fbe0452c97751b5ea4e22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56566","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.517","lastModified":"2024-12-27T15:15:15.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/slub: Avoid list corruption when removing a slab from the full list\n\nBoot with slub_debug=UFPZ.\n\nIf allocated object failed in alloc_consistency_checks, all objects of\nthe slab will be marked as used, and then the slab will be removed from\nthe partial list.\n\nWhen an object belonging to the slab got freed later, the remove_full()\nfunction is called. Because the slab is neither on the partial list nor\non the full list, it eventually lead to a list corruption (actually a\nlist poison being detected).\n\nSo we need to mark and isolate the slab page with metadata corruption,\ndo not put it back in circulation.\n\nBecause the debug caches avoid all the fastpaths, reusing the frozen bit\nto mark slab page with metadata corruption seems to be fine.\n\n[ 4277.385669] list_del corruption, ffffea00044b3e50->next is LIST_POISON1 (dead000000000100)\n[ 4277.387023] ------------[ cut here ]------------\n[ 4277.387880] kernel BUG at lib\/list_debug.c:56!\n[ 4277.388680] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[ 4277.389562] CPU: 5 PID: 90 Comm: kworker\/5:1 Kdump: loaded Tainted: G           OE      6.6.1-1 #1\n[ 4277.392113] Workqueue: xfs-inodegc\/vda1 xfs_inodegc_worker [xfs]\n[ 4277.393551] RIP: 0010:__list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.394518] Code: 48 91 82 e8 37 f9 9a ff 0f 0b 48 89 fe 48 c7 c7 28 49 91 82 e8 26 f9 9a ff 0f 0b 48 89 fe 48 c7 c7 58 49 91\n[ 4277.397292] RSP: 0018:ffffc90000333b38 EFLAGS: 00010082\n[ 4277.398202] RAX: 000000000000004e RBX: ffffea00044b3e50 RCX: 0000000000000000\n[ 4277.399340] RDX: 0000000000000002 RSI: ffffffff828f8715 RDI: 00000000ffffffff\n[ 4277.400545] RBP: ffffea00044b3e40 R08: 0000000000000000 R09: ffffc900003339f0\n[ 4277.401710] R10: 0000000000000003 R11: ffffffff82d44088 R12: ffff888112cf9910\n[ 4277.402887] R13: 0000000000000001 R14: 0000000000000001 R15: ffff8881000424c0\n[ 4277.404049] FS:  0000000000000000(0000) GS:ffff88842fd40000(0000) knlGS:0000000000000000\n[ 4277.405357] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 4277.406389] CR2: 00007f2ad0b24000 CR3: 0000000102a3a006 CR4: 00000000007706e0\n[ 4277.407589] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 4277.408780] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 4277.410000] PKRU: 55555554\n[ 4277.410645] Call Trace:\n[ 4277.411234]  <TASK>\n[ 4277.411777]  ? die+0x32\/0x80\n[ 4277.412439]  ? do_trap+0xd6\/0x100\n[ 4277.413150]  ? __list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.414158]  ? do_error_trap+0x6a\/0x90\n[ 4277.414948]  ? __list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.415915]  ? exc_invalid_op+0x4c\/0x60\n[ 4277.416710]  ? __list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.417675]  ? asm_exc_invalid_op+0x16\/0x20\n[ 4277.418482]  ? __list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.419466]  ? __list_del_entry_valid_or_report+0x7b\/0xc0\n[ 4277.420410]  free_to_partial_list+0x515\/0x5e0\n[ 4277.421242]  ? xfs_iext_remove+0x41a\/0xa10 [xfs]\n[ 4277.422298]  xfs_iext_remove+0x41a\/0xa10 [xfs]\n[ 4277.423316]  ? xfs_inodegc_worker+0xb4\/0x1a0 [xfs]\n[ 4277.424383]  xfs_bmap_del_extent_delay+0x4fe\/0x7d0 [xfs]\n[ 4277.425490]  __xfs_bunmapi+0x50d\/0x840 [xfs]\n[ 4277.426445]  xfs_itruncate_extents_flags+0x13a\/0x490 [xfs]\n[ 4277.427553]  xfs_inactive_truncate+0xa3\/0x120 [xfs]\n[ 4277.428567]  xfs_inactive+0x22d\/0x290 [xfs]\n[ 4277.429500]  xfs_inodegc_worker+0xb4\/0x1a0 [xfs]\n[ 4277.430479]  process_one_work+0x171\/0x340\n[ 4277.431227]  worker_thread+0x277\/0x390\n[ 4277.431962]  ? __pfx_worker_thread+0x10\/0x10\n[ 4277.432752]  kthread+0xf0\/0x120\n[ 4277.433382]  ? __pfx_kthread+0x10\/0x10\n[ 4277.434134]  ret_from_fork+0x2d\/0x50\n[ 4277.434837]  ? __pfx_kthread+0x10\/0x10\n[ 4277.435566]  ret_from_fork_asm+0x1b\/0x30\n[ 4277.436280]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33a213c04faff6c3a7fe77e947db81bc7270fe32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/943c0f601cd28c1073b92b5f944c6c6c2643e709","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbc16915279a548a204154368da23d402c141c81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56567","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.630","lastModified":"2024-12-27T15:15:15.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nad7780: fix division by zero in ad7780_write_raw()\n\nIn the ad7780_write_raw() , val2 can be zero, which might lead to a\ndivision by zero error in DIV_ROUND_CLOSEST(). The ad7780_write_raw()\nis based on iio_info's write_raw. While val is explicitly declared that\ncan be zero (in read mode), val2 is not specified to be non-zero."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/022e13518ba6cc1b4fdd291f49e4f57b2d5718e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18fb33df1de83a014d7f784089f9b124facc157f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68e79b848196a0b0ec006009cc69da1f835d1ae8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e3a8ea3d1ada7f707de5d9d504774b4191eab66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afc1e3c00b3f5f0b4f1bc3e974fb9803cb938a90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c174b53e95adf2eece2afc56cd9798374919f99a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f25a9f1df1f6738acf1fa05595fb6060a2c08ff1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56568","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.733","lastModified":"2024-12-27T15:15:15.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu: Defer probe of clients after smmu device bound\n\nNull pointer dereference occurs due to a race between smmu\ndriver probe and client driver probe, when of_dma_configure()\nfor client is called after the iommu_device_register() for smmu driver\nprobe has executed but before the driver_bound() for smmu driver\nhas been called.\n\nFollowing is how the race occurs:\n\nT1:Smmu device probe\t\tT2: Client device probe\n\nreally_probe()\narm_smmu_device_probe()\niommu_device_register()\n\t\t\t\t\treally_probe()\n\t\t\t\t\tplatform_dma_configure()\n\t\t\t\t\tof_dma_configure()\n\t\t\t\t\tof_dma_configure_id()\n\t\t\t\t\tof_iommu_configure()\n\t\t\t\t\tiommu_probe_device()\n\t\t\t\t\tiommu_init_device()\n\t\t\t\t\tarm_smmu_probe_device()\n\t\t\t\t\tarm_smmu_get_by_fwnode()\n\t\t\t\t\t\tdriver_find_device_by_fwnode()\n\t\t\t\t\t\tdriver_find_device()\n\t\t\t\t\t\tnext_device()\n\t\t\t\t\t\tklist_next()\n\t\t\t\t\t\t    \/* null ptr\n\t\t\t\t\t\t       assigned to smmu *\/\n\t\t\t\t\t\/* null ptr dereference\n\t\t\t\t\t   while smmu->streamid_mask *\/\ndriver_bound()\n\tklist_add_tail()\n\nWhen this null smmu pointer is dereferenced later in\narm_smmu_probe_device, the device crashes.\n\nFix this by deferring the probe of the client device\nuntil the smmu device has bound to the arm smmu driver.\n\n[will: Add comment]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/229e6ee43d2a160a1592b83aad620d6027084aad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a9485918a042e3114890dfbe19839a1897f8b2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5018696b19bc6c021e934a8a59f4b1dd8c0ac9f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2527d07c7e9cda2c6165d5edccf74752baac1b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc02407ea952e20c544a078a6be2e6f008327973","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8f794f387ad21c4696e5cd0626cb6f8a5f6aea5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56569","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.840","lastModified":"2024-12-27T15:15:15.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Fix regression with module command in stack_trace_filter\n\nWhen executing the following command:\n\n    # echo \"write*:mod:ext3\" > \/sys\/kernel\/tracing\/stack_trace_filter\n\nThe current mod command causes a null pointer dereference. While commit\n0f17976568b3f (\"ftrace: Fix regression with module command in stack_trace_filter\")\nhas addressed part of the issue, it left a corner case unhandled, which still\nresults in a kernel crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19cacabdd5a8487ae566cbecb4d03bcb038a067e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43ca32ce12888fb0eeb2d74dfc558dea60d3473e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45af52e7d3b8560f21d139b3759735eead8b1653","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dabb7af57bc72308a6e2e81a5dd756eef283803","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ae27880de3482e063fcc1f72d9a298d0d391407","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/885109aa0c70639527dd6a65c82e63c9ac055e3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a92dc4df89c50bdb26667419ea70e0abbce456e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56570","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:15.963","lastModified":"2024-12-27T15:15:15.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\novl: Filter invalid inodes with missing lookup function\n\nAdd a check to the ovl_dentry_weird() function to prevent the\nprocessing of directory inodes that lack the lookup function.\nThis is important because such inodes can cause errors in overlayfs\nwhen passed to the lowerstack."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/065bf5dd21639f80e68450de16bda829784dbb8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f86e79c0b2287ffdabe6c1b305a36c4e0f40fe3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72014e7745cc8250bb8f27bd78694dfd3f1b5773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/749eac5a6687ec99116e0691d0d71225254654e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8b359dddb418c60df1a69beea01d1b3322bfe83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9248e2f73fb4afe08324485e98c815ac084d166","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff43d008bbf9b27ada434d6455f039a5ef6cee53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56571","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.077","lastModified":"2024-12-27T15:15:16.077","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: uvcvideo: Require entities to have a non-zero unique ID\n\nPer UVC 1.1+ specification 3.7.2, units and terminals must have a non-zero\nunique ID.\n\n```\nEach Unit and Terminal within the video function is assigned a unique\nidentification number, the Unit ID (UID) or Terminal ID (TID), contained in\nthe bUnitID or bTerminalID field of the descriptor. The value 0x00 is\nreserved for undefined ID,\n```\n\nSo, deny allocating an entity with ID 0 or an ID that belongs to a unit\nthat is already added to the list of entities.\n\nThis also prevents some syzkaller reproducers from triggering warnings due\nto a chain of entities referring to themselves. In one particular case, an\nOutput Unit is connected to an Input Unit, both with the same ID of 1. But\nwhen looking up for the source ID of the Output Unit, that same entity is\nfound instead of the input entity, which leads to such warnings.\n\nIn another case, a backward chain was considered finished as the source ID\nwas 0. Later on, that entity was found, but its pads were not valid.\n\nHere is a sample stack trace for one of those cases.\n\n[   20.650953] usb 1-1: new high-speed USB device number 2 using dummy_hcd\n[   20.830206] usb 1-1: Using ep0 maxpacket: 8\n[   20.833501] usb 1-1: config 0 descriptor??\n[   21.038518] usb 1-1: string descriptor 0 read error: -71\n[   21.038893] usb 1-1: Found UVC 0.00 device <unnamed> (2833:0201)\n[   21.039299] uvcvideo 1-1:0.0: Entity type for entity Output 1 was not initialized!\n[   21.041583] uvcvideo 1-1:0.0: Entity type for entity Input 1 was not initialized!\n[   21.042218] ------------[ cut here ]------------\n[   21.042536] WARNING: CPU: 0 PID: 9 at drivers\/media\/mc\/mc-entity.c:1147 media_create_pad_link+0x2c4\/0x2e0\n[   21.043195] Modules linked in:\n[   21.043535] CPU: 0 UID: 0 PID: 9 Comm: kworker\/0:1 Not tainted 6.11.0-rc7-00030-g3480e43aeccf #444\n[   21.044101] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04\/01\/2014\n[   21.044639] Workqueue: usb_hub_wq hub_event\n[   21.045100] RIP: 0010:media_create_pad_link+0x2c4\/0x2e0\n[   21.045508] Code: fe e8 20 01 00 00 b8 f4 ff ff ff 48 83 c4 30 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc 0f 0b eb e9 0f 0b eb 0a 0f 0b eb 06 <0f> 0b eb 02 0f 0b b8 ea ff ff ff eb d4 66 2e 0f 1f 84 00 00 00 00\n[   21.046801] RSP: 0018:ffffc9000004b318 EFLAGS: 00010246\n[   21.047227] RAX: ffff888004e5d458 RBX: 0000000000000000 RCX: ffffffff818fccf1\n[   21.047719] RDX: 000000000000007b RSI: 0000000000000000 RDI: ffff888004313290\n[   21.048241] RBP: ffff888004313290 R08: 0001ffffffffffff R09: 0000000000000000\n[   21.048701] R10: 0000000000000013 R11: 0001888004313290 R12: 0000000000000003\n[   21.049138] R13: ffff888004313080 R14: ffff888004313080 R15: 0000000000000000\n[   21.049648] FS:  0000000000000000(0000) GS:ffff88803ec00000(0000) knlGS:0000000000000000\n[   21.050271] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   21.050688] CR2: 0000592cc27635b0 CR3: 000000000431c000 CR4: 0000000000750ef0\n[   21.051136] PKRU: 55555554\n[   21.051331] Call Trace:\n[   21.051480]  <TASK>\n[   21.051611]  ? __warn+0xc4\/0x210\n[   21.051861]  ? media_create_pad_link+0x2c4\/0x2e0\n[   21.052252]  ? report_bug+0x11b\/0x1a0\n[   21.052540]  ? trace_hardirqs_on+0x31\/0x40\n[   21.052901]  ? handle_bug+0x3d\/0x70\n[   21.053197]  ? exc_invalid_op+0x1a\/0x50\n[   21.053511]  ? asm_exc_invalid_op+0x1a\/0x20\n[   21.053924]  ? media_create_pad_link+0x91\/0x2e0\n[   21.054364]  ? media_create_pad_link+0x2c4\/0x2e0\n[   21.054834]  ? media_create_pad_link+0x91\/0x2e0\n[   21.055131]  ? _raw_spin_unlock+0x1e\/0x40\n[   21.055441]  ? __v4l2_device_register_subdev+0x202\/0x210\n[   21.055837]  uvc_mc_register_entities+0x358\/0x400\n[   21.056144]  uvc_register_chains+0x1fd\/0x290\n[   21.056413]  uvc_probe+0x380e\/0x3dc0\n[   21.056676]  ? __lock_acquire+0x5aa\/0x26e0\n[   21.056946]  ? find_held_lock+0x33\/0xa0\n[   21.057196]  ? kernfs_activate+0x70\/0x80\n[   21.057533]  ? usb_match_dy\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19464d73225224dca31e2fd6e7d6418facf5facb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dd075fe8ebbc6fcbf998f81a75b8c4b159a6195","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f74bd307f078c0605b9f6f1edb8337dee35fa2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72ed66623953106d15825513c82533a03ba29ecd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b11813bc2f4eee92695075148c9ba996f54feeba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bde4e7c1527151b596089b3f984818ab537eeb7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56572","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.210","lastModified":"2024-12-27T15:15:16.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: platform: allegro-dvt: Fix possible memory leak in allocate_buffers_internal()\n\nThe buffer in the loop should be released under the exception path,\notherwise there may be a memory leak here.\n\nTo mitigate this, free the buffer when allegro_alloc_buffer fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f514068fbc5d4d189c817adc7c4e32cffdc2e47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17e5613666209be4e5be1f1894f1a6014a8a0658","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f72a738864b506ab50b4a6cb3ce3c3e04b71af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6712a28a4f923ffdf51cff267ad05a634ee1babc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74a65313578b35e1239966adfa7ac2bdd60caf00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/891b5790bee8fc6ddba17874dd87a646128d0b99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf642904be39ae0d441dbdfa8f485e0a46260be4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56573","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.320","lastModified":"2024-12-27T15:15:16.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nefi\/libstub: Free correct pointer on failure\n\ncmdline_ptr is an out parameter, which is not allocated by the function\nitself, and likely points into the caller's stack.\n\ncmdline refers to the pool allocation that should be freed when cleaning\nup after a failure, so pass this instead to free_pool()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06d39d79cbd5a91a33707951ebf2512d0e759847","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d173aee5709bd0994d216d60589ec67f8b11376a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaafbcf0a5782ae412ca7de12ef83fc48ccea4cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56574","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.420","lastModified":"2024-12-27T15:15:16.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ts2020: fix null-ptr-deref in ts2020_probe()\n\nKASAN reported a null-ptr-deref issue when executing the following\ncommand:\n\n  # echo ts2020 0x20 > \/sys\/bus\/i2c\/devices\/i2c-0\/new_device\n    KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n    CPU: 53 UID: 0 PID: 970 Comm: systemd-udevd Not tainted 6.12.0-rc2+ #24\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009)\n    RIP: 0010:ts2020_probe+0xad\/0xe10 [ts2020]\n    RSP: 0018:ffffc9000abbf598 EFLAGS: 00010202\n    RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffffc0714809\n    RDX: 0000000000000002 RSI: ffff88811550be00 RDI: 0000000000000010\n    RBP: ffff888109868800 R08: 0000000000000001 R09: fffff52001577eb6\n    R10: 0000000000000000 R11: ffffc9000abbff50 R12: ffffffffc0714790\n    R13: 1ffff92001577eb8 R14: ffffffffc07190d0 R15: 0000000000000001\n    FS:  00007f95f13b98c0(0000) GS:ffff888149280000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 0000555d2634b000 CR3: 0000000152236000 CR4: 00000000000006f0\n    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n    Call Trace:\n     <TASK>\n     ts2020_probe+0xad\/0xe10 [ts2020]\n     i2c_device_probe+0x421\/0xb40\n     really_probe+0x266\/0x850\n    ...\n\nThe cause of the problem is that when using sysfs to dynamically register\nan i2c device, there is no platform data, but the probe process of ts2020\nneeds to use platform data, resulting in a null pointer being accessed.\n\nSolve this problem by adding checks to platform data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4a058b34b52ed3feb1f3ff6fd26aefeeeed20cba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a53f97cd5977911850b695add057f9965c1a2d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/901070571bc191d1d8d7a1379bc5ba9446200999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2ed3b780f34e4a6403064208bc2c99d1ed85026","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6208d1567f929105011bcdfd738f59a6bdc1088","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ced1c04e82e3ecc246b921b9733f0df0866aa50d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc03866b5f4aa2668946f8384a1e5286ae53bbaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56575","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.537","lastModified":"2024-12-27T15:15:16.537","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Ensure power suppliers be suspended before detach them\n\nThe power suppliers are always requested to suspend asynchronously,\ndev_pm_domain_detach() requires the caller to ensure proper\nsynchronization of this function with power management callbacks.\notherwise the detach may led to kernel panic, like below:\n\n[ 1457.107934] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000040\n[ 1457.116777] Mem abort info:\n[ 1457.119589]   ESR = 0x0000000096000004\n[ 1457.123358]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 1457.128692]   SET = 0, FnV = 0\n[ 1457.131764]   EA = 0, S1PTW = 0\n[ 1457.134920]   FSC = 0x04: level 0 translation fault\n[ 1457.139812] Data abort info:\n[ 1457.142707]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n[ 1457.148196]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[ 1457.153256]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[ 1457.158563] user pgtable: 4k pages, 48-bit VAs, pgdp=00000001138b6000\n[ 1457.165000] [0000000000000040] pgd=0000000000000000, p4d=0000000000000000\n[ 1457.171792] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[ 1457.178045] Modules linked in: v4l2_jpeg wave6_vpu_ctrl(-) [last unloaded: mxc_jpeg_encdec]\n[ 1457.186383] CPU: 0 PID: 51938 Comm: kworker\/0:3 Not tainted 6.6.36-gd23d64eea511 #66\n[ 1457.194112] Hardware name: NXP i.MX95 19X19 board (DT)\n[ 1457.199236] Workqueue: pm pm_runtime_work\n[ 1457.203247] pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[ 1457.210188] pc : genpd_runtime_suspend+0x20\/0x290\n[ 1457.214886] lr : __rpm_callback+0x48\/0x1d8\n[ 1457.218968] sp : ffff80008250bc50\n[ 1457.222270] x29: ffff80008250bc50 x28: 0000000000000000 x27: 0000000000000000\n[ 1457.229394] x26: 0000000000000000 x25: 0000000000000008 x24: 00000000000f4240\n[ 1457.236518] x23: 0000000000000000 x22: ffff00008590f0e4 x21: 0000000000000008\n[ 1457.243642] x20: ffff80008099c434 x19: ffff00008590f000 x18: ffffffffffffffff\n[ 1457.250766] x17: 5300326563697665 x16: 645f676e696c6f6f x15: 63343a6d726f6674\n[ 1457.257890] x14: 0000000000000004 x13: 00000000000003a4 x12: 0000000000000002\n[ 1457.265014] x11: 0000000000000000 x10: 0000000000000a60 x9 : ffff80008250bbb0\n[ 1457.272138] x8 : ffff000092937200 x7 : ffff0003fdf6af80 x6 : 0000000000000000\n[ 1457.279262] x5 : 00000000410fd050 x4 : 0000000000200000 x3 : 0000000000000000\n[ 1457.286386] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff00008590f000\n[ 1457.293510] Call trace:\n[ 1457.295946]  genpd_runtime_suspend+0x20\/0x290\n[ 1457.300296]  __rpm_callback+0x48\/0x1d8\n[ 1457.304038]  rpm_callback+0x6c\/0x78\n[ 1457.307515]  rpm_suspend+0x10c\/0x570\n[ 1457.311077]  pm_runtime_work+0xc4\/0xc8\n[ 1457.314813]  process_one_work+0x138\/0x248\n[ 1457.318816]  worker_thread+0x320\/0x438\n[ 1457.322552]  kthread+0x110\/0x114\n[ 1457.325767]  ret_from_fork+0x10\/0x20"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12914fd765ba4f9d6a9a50439e8dd2e9f91423f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f86d104539fab9181ea7b5721f40e7b92a8bf67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7a830bbc25da0f641e3ef2bac3b1766b2777a8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3c4e088ec01cae45931a18ddf7cae0f4d72e1c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd0af4cd35da0eb550ef682b71cda70a4e36f6b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56576","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.657","lastModified":"2024-12-27T15:15:16.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: tc358743: Fix crash in the probe error path when using polling\n\nIf an error occurs in the probe() function, we should remove the polling\ntimer that was alarmed earlier, otherwise the timer is called with\narguments that are already freed, which results in a crash.\n\n------------[ cut here ]------------\nWARNING: CPU: 3 PID: 0 at kernel\/time\/timer.c:1830 __run_timers+0x244\/0x268\nModules linked in:\nCPU: 3 UID: 0 PID: 0 Comm: swapper\/3 Not tainted 6.11.0 #226\nHardware name: Diasom DS-RK3568-SOM-EVB (DT)\npstate: 804000c9 (Nzcv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : __run_timers+0x244\/0x268\nlr : __run_timers+0x1d4\/0x268\nsp : ffffff80eff2baf0\nx29: ffffff80eff2bb50 x28: 7fffffffffffffff x27: ffffff80eff2bb00\nx26: ffffffc080f669c0 x25: ffffff80efef6bf0 x24: ffffff80eff2bb00\nx23: 0000000000000000 x22: dead000000000122 x21: 0000000000000000\nx20: ffffff80efef6b80 x19: ffffff80041c8bf8 x18: ffffffffffffffff\nx17: ffffffc06f146000 x16: ffffff80eff27dc0 x15: 000000000000003e\nx14: 0000000000000000 x13: 00000000000054da x12: 0000000000000000\nx11: 00000000000639c0 x10: 000000000000000c x9 : 0000000000000009\nx8 : ffffff80eff2cb40 x7 : ffffff80eff2cb40 x6 : ffffff8002bee480\nx5 : ffffffc080cb2220 x4 : ffffffc080cb2150 x3 : 00000000000f4240\nx2 : 0000000000000102 x1 : ffffff80eff2bb00 x0 : ffffff80041c8bf0\nCall trace:\n __run_timers+0x244\/0x268\n timer_expire_remote+0x50\/0x68\n tmigr_handle_remote+0x388\/0x39c\n run_timer_softirq+0x38\/0x44\n handle_softirqs+0x138\/0x298\n __do_softirq+0x14\/0x20\n ____do_softirq+0x10\/0x1c\n call_on_irq_stack+0x24\/0x4c\n do_softirq_own_stack+0x1c\/0x2c\n irq_exit_rcu+0x9c\/0xcc\n el1_interrupt+0x48\/0xc0\n el1h_64_irq_handler+0x18\/0x24\n el1h_64_irq+0x7c\/0x80\n default_idle_call+0x34\/0x68\n do_idle+0x23c\/0x294\n cpu_startup_entry+0x38\/0x3c\n secondary_start_kernel+0x128\/0x160\n __secondary_switched+0xb8\/0xbc\n---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13193a97ddd5a6a5b11408ddbc1ae85588b1860c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1def915b1564f4375330bd113ea1d768a569cfd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34a3466a92f50c51d984f0ec2e96864886d460eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c9ab34c87af718bdbf9faa2b1a6ba41d15380ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/815d14147068347e88c258233eb951b41b2792a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/869f38ae07f7df829da4951c3d1f7a2be09c2e9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b59ab89bc83f7bff67f78c6caf484a84a6dd30f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56577","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.767","lastModified":"2024-12-27T15:15:16.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mtk-jpeg: Fix null-ptr-deref during unload module\n\nThe workqueue should be destroyed in mtk_jpeg_core.c since commit\n09aea13ecf6f (\"media: mtk-jpeg: refactor some variables\"), otherwise\nthe below calltrace can be easily triggered.\n\n[  677.862514] Unable to handle kernel paging request at virtual address dfff800000000023\n[  677.863633] KASAN: null-ptr-deref in range [0x0000000000000118-0x000000000000011f]\n...\n[  677.879654] CPU: 6 PID: 1071 Comm: modprobe Tainted: G           O       6.8.12-mtk+gfa1a78e5d24b+ #17\n...\n[  677.882838] pc : destroy_workqueue+0x3c\/0x770\n[  677.883413] lr : mtk_jpegdec_destroy_workqueue+0x70\/0x88 [mtk_jpeg_dec_hw]\n[  677.884314] sp : ffff80008ad974f0\n[  677.884744] x29: ffff80008ad974f0 x28: ffff0000d7115580 x27: ffff0000dd691070\n[  677.885669] x26: ffff0000dd691408 x25: ffff8000844af3e0 x24: ffff80008ad97690\n[  677.886592] x23: ffff0000e051d400 x22: ffff0000dd691010 x21: dfff800000000000\n[  677.887515] x20: 0000000000000000 x19: 0000000000000000 x18: ffff800085397ac0\n[  677.888438] x17: 0000000000000000 x16: ffff8000801b87c8 x15: 1ffff000115b2e10\n[  677.889361] x14: 00000000f1f1f1f1 x13: 0000000000000000 x12: ffff7000115b2e4d\n[  677.890285] x11: 1ffff000115b2e4c x10: ffff7000115b2e4c x9 : ffff80000aa43e90\n[  677.891208] x8 : 00008fffeea4d1b4 x7 : ffff80008ad97267 x6 : 0000000000000001\n[  677.892131] x5 : ffff80008ad97260 x4 : ffff7000115b2e4d x3 : 0000000000000000\n[  677.893054] x2 : 0000000000000023 x1 : dfff800000000000 x0 : 0000000000000118\n[  677.893977] Call trace:\n[  677.894297]  destroy_workqueue+0x3c\/0x770\n[  677.894826]  mtk_jpegdec_destroy_workqueue+0x70\/0x88 [mtk_jpeg_dec_hw]\n[  677.895677]  devm_action_release+0x50\/0x90\n[  677.896211]  release_nodes+0xe8\/0x170\n[  677.896688]  devres_release_all+0xf8\/0x178\n[  677.897219]  device_unbind_cleanup+0x24\/0x170\n[  677.897785]  device_release_driver_internal+0x35c\/0x480\n[  677.898461]  device_release_driver+0x20\/0x38\n...\n[  677.912665] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ba08c21c6a92e6512e73644555120427c9a49d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17af2b39daf12870cac61ffc360e62bc35798afb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc3889a39baf783c64c6d628bbb74d76ce164bb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56578","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.873","lastModified":"2024-12-27T15:15:16.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Set video drvdata before register video device\n\nThe video drvdata should be set before the video device is registered,\notherwise video_drvdata() may return NULL in the open() file ops, and led\nto oops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ade59d28eade49194eb09765afdeb0ba717c39a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68efeff2f7fccdfedc55f92e92be32997127d16e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b88556e82dc18cb708744d062770853a2d5095b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2b7ecc26bd5406d5ba927be1748aa99c568696c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68bb1210fbea252552d97242757f69a219e942b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56579","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:16.983","lastModified":"2024-12-27T15:15:16.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: amphion: Set video drvdata before register video device\n\nThe video drvdata should be set before the video device is registered,\notherwise video_drvdata() may return NULL in the open() file ops, and led\nto oops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/182b9edc02c4cbb6fe6b97105c23c7047a3340d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cbb1a7bd5973b57898b26eb804fe44af440bb63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/988cc10ddbdee0369fe1f193d389da38ad760492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfe96c7c3382293179e291f66644d789e39e99f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56580","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.093","lastModified":"2024-12-27T15:15:17.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: qcom: camss: fix error path on configuration of power domains\n\nThere is a chance to meet runtime issues during configuration of CAMSS\npower domains, because on the error path dev_pm_domain_detach() is\nunexpectedly called with NULL or error pointer.\n\nOne of the simplest ways to reproduce the problem is to probe CAMSS\ndriver before registration of CAMSS power domains, for instance if\na platform CAMCC driver is simply not built.\n\nWarning backtrace example:\n\n    Unable to handle kernel NULL pointer dereference at virtual address 00000000000001a2\n\n    <snip>\n\n    pc : dev_pm_domain_detach+0x8\/0x48\n    lr : camss_probe+0x374\/0x9c0\n\n    <snip>\n\n    Call trace:\n     dev_pm_domain_detach+0x8\/0x48\n     platform_probe+0x70\/0xf0\n     really_probe+0xc4\/0x2a8\n     __driver_probe_device+0x80\/0x140\n     driver_probe_device+0x48\/0x170\n     __device_attach_driver+0xc0\/0x148\n     bus_for_each_drv+0x88\/0xf0\n     __device_attach+0xb0\/0x1c0\n     device_initial_probe+0x1c\/0x30\n     bus_probe_device+0xb4\/0xc0\n     deferred_probe_work_func+0x90\/0xd0\n     process_one_work+0x164\/0x3e0\n     worker_thread+0x310\/0x420\n     kthread+0x120\/0x130\n     ret_from_fork+0x10\/0x20"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f45d65b781499d2a79eca12155532739c876aa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c98586d8d01c9e860e7acc3807c2afeb1dc14e8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56581","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.207","lastModified":"2024-12-27T15:15:17.207","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: ref-verify: fix use-after-free after invalid ref action\n\nAt btrfs_ref_tree_mod() after we successfully inserted the new ref entry\n(local variable 'ref') into the respective block entry's rbtree (local\nvariable 'be'), if we find an unexpected action of BTRFS_DROP_DELAYED_REF,\nwe error out and free the ref entry without removing it from the block\nentry's rbtree. Then in the error path of btrfs_ref_tree_mod() we call\nbtrfs_free_ref_cache(), which iterates over all block entries and then\ncalls free_block_entry() for each one, and there we will trigger a\nuse-after-free when we are called against the block entry to which we\nadded the freed ref entry to its rbtree, since the rbtree still points\nto the block entry, as we didn't remove it from the rbtree before freeing\nit in the error path at btrfs_ref_tree_mod(). Fix this by removing the\nnew ref entry from the rbtree before freeing it.\n\nSyzbot report this with the following stack traces:\n\n   BTRFS error (device loop0 state EA):   Ref action 2, root 5, ref_root 0, parent 8564736, owner 0, offset 0, num_refs 18446744073709551615\n      __btrfs_mod_ref+0x7dd\/0xac0 fs\/btrfs\/extent-tree.c:2523\n      update_ref_for_cow+0x9cd\/0x11f0 fs\/btrfs\/ctree.c:512\n      btrfs_force_cow_block+0x9f6\/0x1da0 fs\/btrfs\/ctree.c:594\n      btrfs_cow_block+0x35e\/0xa40 fs\/btrfs\/ctree.c:754\n      btrfs_search_slot+0xbdd\/0x30d0 fs\/btrfs\/ctree.c:2116\n      btrfs_insert_empty_items+0x9c\/0x1a0 fs\/btrfs\/ctree.c:4314\n      btrfs_insert_empty_item fs\/btrfs\/ctree.h:669 [inline]\n      btrfs_insert_orphan_item+0x1f1\/0x320 fs\/btrfs\/orphan.c:23\n      btrfs_orphan_add+0x6d\/0x1a0 fs\/btrfs\/inode.c:3482\n      btrfs_unlink+0x267\/0x350 fs\/btrfs\/inode.c:4293\n      vfs_unlink+0x365\/0x650 fs\/namei.c:4469\n      do_unlinkat+0x4ae\/0x830 fs\/namei.c:4533\n      __do_sys_unlinkat fs\/namei.c:4576 [inline]\n      __se_sys_unlinkat fs\/namei.c:4569 [inline]\n      __x64_sys_unlinkat+0xcc\/0xf0 fs\/namei.c:4569\n      do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n      do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n      entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n   BTRFS error (device loop0 state EA):   Ref action 1, root 5, ref_root 5, parent 0, owner 260, offset 0, num_refs 1\n      __btrfs_mod_ref+0x76b\/0xac0 fs\/btrfs\/extent-tree.c:2521\n      update_ref_for_cow+0x96a\/0x11f0\n      btrfs_force_cow_block+0x9f6\/0x1da0 fs\/btrfs\/ctree.c:594\n      btrfs_cow_block+0x35e\/0xa40 fs\/btrfs\/ctree.c:754\n      btrfs_search_slot+0xbdd\/0x30d0 fs\/btrfs\/ctree.c:2116\n      btrfs_lookup_inode+0xdc\/0x480 fs\/btrfs\/inode-item.c:411\n      __btrfs_update_delayed_inode+0x1e7\/0xb90 fs\/btrfs\/delayed-inode.c:1030\n      btrfs_update_delayed_inode fs\/btrfs\/delayed-inode.c:1114 [inline]\n      __btrfs_commit_inode_delayed_items+0x2318\/0x24a0 fs\/btrfs\/delayed-inode.c:1137\n      __btrfs_run_delayed_items+0x213\/0x490 fs\/btrfs\/delayed-inode.c:1171\n      btrfs_commit_transaction+0x8a8\/0x3740 fs\/btrfs\/transaction.c:2313\n      prepare_to_relocate+0x3c4\/0x4c0 fs\/btrfs\/relocation.c:3586\n      relocate_block_group+0x16c\/0xd40 fs\/btrfs\/relocation.c:3611\n      btrfs_relocate_block_group+0x77d\/0xd90 fs\/btrfs\/relocation.c:4081\n      btrfs_relocate_chunk+0x12c\/0x3b0 fs\/btrfs\/volumes.c:3377\n      __btrfs_balance+0x1b0f\/0x26b0 fs\/btrfs\/volumes.c:4161\n      btrfs_balance+0xbdc\/0x10c0 fs\/btrfs\/volumes.c:4538\n   BTRFS error (device loop0 state EA):   Ref action 2, root 5, ref_root 0, parent 8564736, owner 0, offset 0, num_refs 18446744073709551615\n      __btrfs_mod_ref+0x7dd\/0xac0 fs\/btrfs\/extent-tree.c:2523\n      update_ref_for_cow+0x9cd\/0x11f0 fs\/btrfs\/ctree.c:512\n      btrfs_force_cow_block+0x9f6\/0x1da0 fs\/btrfs\/ctree.c:594\n      btrfs_cow_block+0x35e\/0xa40 fs\/btrfs\/ctree.c:754\n      btrfs_search_slot+0xbdd\/0x30d0 fs\/btrfs\/ctree.c:2116\n      btrfs_lookup_inode+0xdc\/0x480 fs\/btrfs\/inode-item.c:411\n      __btrfs_update_delayed_inode+0x1e7\/0xb90 fs\/btrfs\/delayed-inode.c:1030\n      btrfs_update_delayed_i\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4275ac2741941c9c7c2293619fdbacb9f70ba85b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6370db28af9a8ae3bbdfe97f8a48f8f995e144cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fd018aa168e472ce35be32296d109db6adb87ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c4e39f9d2af4abaf82ca0e315d1fd340456620f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6f9e7a0bf1185c9070c0de03bb85eafb9abd650","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2b85ce0561fde894e28fa01bd5d32820d585006","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfb9fe7de61f34cc241ab3900bdde93341096e0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56582","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.333","lastModified":"2024-12-27T15:15:17.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix use-after-free in btrfs_encoded_read_endio()\n\nShinichiro reported the following use-after free that sometimes is\nhappening in our CI system when running fstests' btrfs\/284 on a TCMU\nrunner device:\n\n  BUG: KASAN: slab-use-after-free in lock_release+0x708\/0x780\n  Read of size 8 at addr ffff888106a83f18 by task kworker\/u80:6\/219\n\n  CPU: 8 UID: 0 PID: 219 Comm: kworker\/u80:6 Not tainted 6.12.0-rc6-kts+ #15\n  Hardware name: Supermicro Super Server\/X11SPi-TF, BIOS 3.3 02\/21\/2020\n  Workqueue: btrfs-endio btrfs_end_bio_work [btrfs]\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x6e\/0xa0\n   ? lock_release+0x708\/0x780\n   print_report+0x174\/0x505\n   ? lock_release+0x708\/0x780\n   ? __virt_addr_valid+0x224\/0x410\n   ? lock_release+0x708\/0x780\n   kasan_report+0xda\/0x1b0\n   ? lock_release+0x708\/0x780\n   ? __wake_up+0x44\/0x60\n   lock_release+0x708\/0x780\n   ? __pfx_lock_release+0x10\/0x10\n   ? __pfx_do_raw_spin_lock+0x10\/0x10\n   ? lock_is_held_type+0x9a\/0x110\n   _raw_spin_unlock_irqrestore+0x1f\/0x60\n   __wake_up+0x44\/0x60\n   btrfs_encoded_read_endio+0x14b\/0x190 [btrfs]\n   btrfs_check_read_bio+0x8d9\/0x1360 [btrfs]\n   ? lock_release+0x1b0\/0x780\n   ? trace_lock_acquire+0x12f\/0x1a0\n   ? __pfx_btrfs_check_read_bio+0x10\/0x10 [btrfs]\n   ? process_one_work+0x7e3\/0x1460\n   ? lock_acquire+0x31\/0xc0\n   ? process_one_work+0x7e3\/0x1460\n   process_one_work+0x85c\/0x1460\n   ? __pfx_process_one_work+0x10\/0x10\n   ? assign_work+0x16c\/0x240\n   worker_thread+0x5e6\/0xfc0\n   ? __pfx_worker_thread+0x10\/0x10\n   kthread+0x2c3\/0x3a0\n   ? __pfx_kthread+0x10\/0x10\n   ret_from_fork+0x31\/0x70\n   ? __pfx_kthread+0x10\/0x10\n   ret_from_fork_asm+0x1a\/0x30\n   <\/TASK>\n\n  Allocated by task 3661:\n   kasan_save_stack+0x30\/0x50\n   kasan_save_track+0x14\/0x30\n   __kasan_kmalloc+0xaa\/0xb0\n   btrfs_encoded_read_regular_fill_pages+0x16c\/0x6d0 [btrfs]\n   send_extent_data+0xf0f\/0x24a0 [btrfs]\n   process_extent+0x48a\/0x1830 [btrfs]\n   changed_cb+0x178b\/0x2ea0 [btrfs]\n   btrfs_ioctl_send+0x3bf9\/0x5c20 [btrfs]\n   _btrfs_ioctl_send+0x117\/0x330 [btrfs]\n   btrfs_ioctl+0x184a\/0x60a0 [btrfs]\n   __x64_sys_ioctl+0x12e\/0x1a0\n   do_syscall_64+0x95\/0x180\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n  Freed by task 3661:\n   kasan_save_stack+0x30\/0x50\n   kasan_save_track+0x14\/0x30\n   kasan_save_free_info+0x3b\/0x70\n   __kasan_slab_free+0x4f\/0x70\n   kfree+0x143\/0x490\n   btrfs_encoded_read_regular_fill_pages+0x531\/0x6d0 [btrfs]\n   send_extent_data+0xf0f\/0x24a0 [btrfs]\n   process_extent+0x48a\/0x1830 [btrfs]\n   changed_cb+0x178b\/0x2ea0 [btrfs]\n   btrfs_ioctl_send+0x3bf9\/0x5c20 [btrfs]\n   _btrfs_ioctl_send+0x117\/0x330 [btrfs]\n   btrfs_ioctl+0x184a\/0x60a0 [btrfs]\n   __x64_sys_ioctl+0x12e\/0x1a0\n   do_syscall_64+0x95\/0x180\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\n  The buggy address belongs to the object at ffff888106a83f00\n   which belongs to the cache kmalloc-rnd-07-96 of size 96\n  The buggy address is located 24 bytes inside of\n   freed 96-byte region [ffff888106a83f00, ffff888106a83f60)\n\n  The buggy address belongs to the physical page:\n  page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888106a83800 pfn:0x106a83\n  flags: 0x17ffffc0000000(node=0|zone=2|lastcpupid=0x1fffff)\n  page_type: f5(slab)\n  raw: 0017ffffc0000000 ffff888100053680 ffffea0004917200 0000000000000004\n  raw: ffff888106a83800 0000000080200019 00000001f5000000 0000000000000000\n  page dumped because: kasan: bad access detected\n\n  Memory state around the buggy address:\n   ffff888106a83e00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n   ffff888106a83e80: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n  >ffff888106a83f00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n                              ^\n   ffff888106a83f80: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n   ffff888106a84000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  ==================================================================\n\nFurther analyzing the trace and \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05b36b04d74a517d6675bf2f90829ff1ac7e28dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8a5129e4a9fc3f6aa3f137513253b51b31b94d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56583","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.453","lastModified":"2024-12-27T15:15:17.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/deadline: Fix warning in migrate_enable for boosted tasks\n\nWhen running the following command:\n\nwhile true; do\n    stress-ng --cyclic 30 --timeout 30s --minimize --quiet\ndone\n\na warning is eventually triggered:\n\nWARNING: CPU: 43 PID: 2848 at kernel\/sched\/deadline.c:794\nsetup_new_dl_entity+0x13e\/0x180\n...\nCall Trace:\n <TASK>\n ? show_trace_log_lvl+0x1c4\/0x2df\n ? enqueue_dl_entity+0x631\/0x6e0\n ? setup_new_dl_entity+0x13e\/0x180\n ? __warn+0x7e\/0xd0\n ? report_bug+0x11a\/0x1a0\n ? handle_bug+0x3c\/0x70\n ? exc_invalid_op+0x14\/0x70\n ? asm_exc_invalid_op+0x16\/0x20\n enqueue_dl_entity+0x631\/0x6e0\n enqueue_task_dl+0x7d\/0x120\n __do_set_cpus_allowed+0xe3\/0x280\n __set_cpus_allowed_ptr_locked+0x140\/0x1d0\n __set_cpus_allowed_ptr+0x54\/0xa0\n migrate_enable+0x7e\/0x150\n rt_spin_unlock+0x1c\/0x90\n group_send_sig_info+0xf7\/0x1a0\n ? kill_pid_info+0x1f\/0x1d0\n kill_pid_info+0x78\/0x1d0\n kill_proc_info+0x5b\/0x110\n __x64_sys_kill+0x93\/0xc0\n do_syscall_64+0x5c\/0xf0\n entry_SYSCALL_64_after_hwframe+0x6e\/0x76\n RIP: 0033:0x7f0dab31f92b\n\nThis warning occurs because set_cpus_allowed dequeues and enqueues tasks\nwith the ENQUEUE_RESTORE flag set. If the task is boosted, the warning\nis triggered. A boosted task already had its parameters set by\nrt_mutex_setprio, and a new call to setup_new_dl_entity is unnecessary,\nhence the WARN_ON call.\n\nCheck if we are requeueing a boosted task and avoid calling\nsetup_new_dl_entity if that's the case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0664e2c311b9fa43b33e3e81429cd0c2d7f9c638","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b600d30402854415aa57548a6b53dc6478f65517","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e41074904d9ed3fe582d6e544c77b40c22043c82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56584","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.567","lastModified":"2024-12-27T15:15:17.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring\/tctx: work around xa_store() allocation error issue\n\nsyzbot triggered the following WARN_ON:\n\nWARNING: CPU: 0 PID: 16 at io_uring\/tctx.c:51 __io_uring_free+0xfa\/0x140 io_uring\/tctx.c:51\n\nwhich is the\n\nWARN_ON_ONCE(!xa_empty(&tctx->xa));\n\nsanity check in __io_uring_free() when a io_uring_task is going through\nits final put. The syzbot test case includes injecting memory allocation\nfailures, and it very much looks like xa_store() can fail one of its\nmemory allocations and end up with ->head being non-NULL even though no\nentries exist in the xarray.\n\nUntil this issue gets sorted out, work around it by attempting to\niterate entries in our xarray, and WARN_ON_ONCE() if one is found."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42882b583095dcf747da6e3af1daeff40e27033e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7eb75ce7527129d7f1fee6951566af409a37a1c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94ad56f61b873ffeebcc620d451eacfbdf9d40f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5b2ddf1f90c7248eff9630b95895c8950f2f36d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56585","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.677","lastModified":"2024-12-27T15:15:17.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: Fix sleeping in atomic context for PREEMPT_RT\n\nCommit bab1c299f3945ffe79 (\"LoongArch: Fix sleeping in atomic context in\nsetup_tlb_handler()\") changes the gfp flag from GFP_KERNEL to GFP_ATOMIC\nfor alloc_pages_node(). However, for PREEMPT_RT kernels we can still get\na \"sleeping in atomic context\" error:\n\n[    0.372259] BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:48\n[    0.372266] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper\/1\n[    0.372268] preempt_count: 1, expected: 0\n[    0.372270] RCU nest depth: 1, expected: 1\n[    0.372272] 3 locks held by swapper\/1\/0:\n[    0.372274]  #0: 900000000c9f5e60 (&pcp->lock){+.+.}-{3:3}, at: get_page_from_freelist+0x524\/0x1c60\n[    0.372294]  #1: 90000000087013b8 (rcu_read_lock){....}-{1:3}, at: rt_spin_trylock+0x50\/0x140\n[    0.372305]  #2: 900000047fffd388 (&zone->lock){+.+.}-{3:3}, at: __rmqueue_pcplist+0x30c\/0xea0\n[    0.372314] irq event stamp: 0\n[    0.372316] hardirqs last  enabled at (0): [<0000000000000000>] 0x0\n[    0.372322] hardirqs last disabled at (0): [<9000000005947320>] copy_process+0x9c0\/0x26e0\n[    0.372329] softirqs last  enabled at (0): [<9000000005947320>] copy_process+0x9c0\/0x26e0\n[    0.372335] softirqs last disabled at (0): [<0000000000000000>] 0x0\n[    0.372341] CPU: 1 UID: 0 PID: 0 Comm: swapper\/1 Not tainted 6.12.0-rc7+ #1891\n[    0.372346] Hardware name: Loongson Loongson-3A5000-7A1000-1w-CRB\/Loongson-LS3A5000-7A1000-1w-CRB, BIOS vUDK2018-LoongArch-V2.0.0-prebeta9 10\/21\/2022\n[    0.372349] Stack : 0000000000000089 9000000005a0db9c 90000000071519c8 9000000100388000\n[    0.372486]         900000010038b890 0000000000000000 900000010038b898 9000000007e53788\n[    0.372492]         900000000815bcc8 900000000815bcc0 900000010038b700 0000000000000001\n[    0.372498]         0000000000000001 4b031894b9d6b725 00000000055ec000 9000000100338fc0\n[    0.372503]         00000000000000c4 0000000000000001 000000000000002d 0000000000000003\n[    0.372509]         0000000000000030 0000000000000003 00000000055ec000 0000000000000003\n[    0.372515]         900000000806d000 9000000007e53788 00000000000000b0 0000000000000004\n[    0.372521]         0000000000000000 0000000000000000 900000000c9f5f10 0000000000000000\n[    0.372526]         90000000076f12d8 9000000007e53788 9000000005924778 0000000000000000\n[    0.372532]         00000000000000b0 0000000000000004 0000000000000000 0000000000070000\n[    0.372537]         ...\n[    0.372540] Call Trace:\n[    0.372542] [<9000000005924778>] show_stack+0x38\/0x180\n[    0.372548] [<90000000071519c4>] dump_stack_lvl+0x94\/0xe4\n[    0.372555] [<900000000599b880>] __might_resched+0x1a0\/0x260\n[    0.372561] [<90000000071675cc>] rt_spin_lock+0x4c\/0x140\n[    0.372565] [<9000000005cbb768>] __rmqueue_pcplist+0x308\/0xea0\n[    0.372570] [<9000000005cbed84>] get_page_from_freelist+0x564\/0x1c60\n[    0.372575] [<9000000005cc0d98>] __alloc_pages_noprof+0x218\/0x1820\n[    0.372580] [<900000000593b36c>] tlb_init+0x1ac\/0x298\n[    0.372585] [<9000000005924b74>] per_cpu_trap_init+0x114\/0x140\n[    0.372589] [<9000000005921964>] cpu_probe+0x4e4\/0xa60\n[    0.372592] [<9000000005934874>] start_secondary+0x34\/0xc0\n[    0.372599] [<900000000715615c>] smpboot_entry+0x64\/0x6c\n\nThis is because in PREEMPT_RT kernels normal spinlocks are replaced by\nrt spinlocks and rt_spin_lock() will cause sleeping. Fix it by disabling\nNUMA optimization completely for PREEMPT_RT kernels."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08715b741f9b2a925d6485491e4907f3b29bac70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6575e0867bd478a5d7ef1783ca1e73160807d238","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88fd2b70120d52c1010257d36776876941375490","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5f89458a2ea0800866b9fc690d3fa8367dc8f8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56586","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.800","lastModified":"2024-12-27T15:15:17.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix f2fs_bug_on when uninstalling filesystem call f2fs_evict_inode.\n\ncreating a large files during checkpoint disable until it runs out of\nspace and then delete it, then remount to enable checkpoint again, and\nthen unmount the filesystem triggers the f2fs_bug_on as below:\n\n------------[ cut here ]------------\nkernel BUG at fs\/f2fs\/inode.c:896!\nCPU: 2 UID: 0 PID: 1286 Comm: umount Not tainted 6.11.0-rc7-dirty #360\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nRIP: 0010:f2fs_evict_inode+0x58c\/0x610\nCall Trace:\n __die_body+0x15\/0x60\n die+0x33\/0x50\n do_trap+0x10a\/0x120\n f2fs_evict_inode+0x58c\/0x610\n do_error_trap+0x60\/0x80\n f2fs_evict_inode+0x58c\/0x610\n exc_invalid_op+0x53\/0x60\n f2fs_evict_inode+0x58c\/0x610\n asm_exc_invalid_op+0x16\/0x20\n f2fs_evict_inode+0x58c\/0x610\n evict+0x101\/0x260\n dispose_list+0x30\/0x50\n evict_inodes+0x140\/0x190\n generic_shutdown_super+0x2f\/0x150\n kill_block_super+0x11\/0x40\n kill_f2fs_super+0x7d\/0x140\n deactivate_locked_super+0x2a\/0x70\n cleanup_mnt+0xb3\/0x140\n task_work_run+0x61\/0x90\n\nThe root cause is: creating large files during disable checkpoint\nperiod results in not enough free segments, so when writing back root\ninode will failed in f2fs_enable_checkpoint. When umount the file\nsystem after enabling checkpoint, the root inode is dirty in\nf2fs_evict_inode function, which triggers BUG_ON. The steps to\nreproduce are as follows:\n\ndd if=\/dev\/zero of=f2fs.img bs=1M count=55\nmount f2fs.img f2fs_dir -o checkpoint=disable:10%\ndd if=\/dev\/zero of=big bs=1M count=50\nsync\nrm big\nmount -o remount,checkpoint=enable f2fs_dir\numount f2fs_dir\n\nLet's redirty inode when there is not free segments during checkpoint\nis disable."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9669b28f81e0ec6305af7773846fbe2cef1e7d61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e28513fd2858911dcf47b84160a8824587536b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a365de2fbfbe1e6740bfb75ab5c3245cf7bbe4d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac8aaf78bd039fa1be0acaa8e84a56499f79d721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5c367ef8287fb4d235c46a2f8c8d68715f3a0ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dff561e4060d28edc9a2960d4a87f3c945a96aa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef517d2d21c3d8e2ad35b2bb728bd1c90a31e617","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56587","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:17.917","lastModified":"2024-12-27T15:15:17.917","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nleds: class: Protect brightness_show() with led_cdev->led_access mutex\n\nThere is NULL pointer issue observed if from Process A where hid device\nbeing added which results in adding a led_cdev addition and later a\nanother call to access of led_cdev attribute from Process B can result\nin NULL pointer issue.\n\nUse mutex led_cdev->led_access to protect access to led->cdev and its\nattribute inside brightness_show() and max_brightness_show() and also\nupdate the comment for mutex that it should be used to protect the led\nclass device fields.\n\n\tProcess A \t\t\t\tProcess B\n\n kthread+0x114\n worker_thread+0x244\n process_scheduled_works+0x248\n uhid_device_add_worker+0x24\n hid_add_device+0x120\n device_add+0x268\n bus_probe_device+0x94\n device_initial_probe+0x14\n __device_attach+0xfc\n bus_for_each_drv+0x10c\n __device_attach_driver+0x14c\n driver_probe_device+0x3c\n __driver_probe_device+0xa0\n really_probe+0x190\n hid_device_probe+0x130\n ps_probe+0x990\n ps_led_register+0x94\n devm_led_classdev_register_ext+0x58\n led_classdev_register_ext+0x1f8\n device_create_with_groups+0x48\n device_create_groups_vargs+0xc8\n device_add+0x244\n kobject_uevent+0x14\n kobject_uevent_env[jt]+0x224\n mutex_unlock[jt]+0xc4\n __mutex_unlock_slowpath+0xd4\n wake_up_q+0x70\n try_to_wake_up[jt]+0x48c\n preempt_schedule_common+0x28\n __schedule+0x628\n __switch_to+0x174\n\t\t\t\t\t\tel0t_64_sync+0x1a8\/0x1ac\n\t\t\t\t\t\tel0t_64_sync_handler+0x68\/0xbc\n\t\t\t\t\t\tel0_svc+0x38\/0x68\n\t\t\t\t\t\tdo_el0_svc+0x1c\/0x28\n\t\t\t\t\t\tel0_svc_common+0x80\/0xe0\n\t\t\t\t\t\tinvoke_syscall+0x58\/0x114\n\t\t\t\t\t\t__arm64_sys_read+0x1c\/0x2c\n\t\t\t\t\t\tksys_read+0x78\/0xe8\n\t\t\t\t\t\tvfs_read+0x1e0\/0x2c8\n\t\t\t\t\t\tkernfs_fop_read_iter+0x68\/0x1b4\n\t\t\t\t\t\tseq_read_iter+0x158\/0x4ec\n\t\t\t\t\t\tkernfs_seq_show+0x44\/0x54\n\t\t\t\t\t\tsysfs_kf_seq_show+0xb4\/0x130\n\t\t\t\t\t\tdev_attr_show+0x38\/0x74\n\t\t\t\t\t\tbrightness_show+0x20\/0x4c\n\t\t\t\t\t\tdualshock4_led_get_brightness+0xc\/0x74\n\n[ 3313.874295][ T4013] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000060\n[ 3313.874301][ T4013] Mem abort info:\n[ 3313.874303][ T4013]   ESR = 0x0000000096000006\n[ 3313.874305][ T4013]   EC = 0x25: DABT (current EL), IL = 32 bits\n[ 3313.874307][ T4013]   SET = 0, FnV = 0\n[ 3313.874309][ T4013]   EA = 0, S1PTW = 0\n[ 3313.874311][ T4013]   FSC = 0x06: level 2 translation fault\n[ 3313.874313][ T4013] Data abort info:\n[ 3313.874314][ T4013]   ISV = 0, ISS = 0x00000006, ISS2 = 0x00000000\n[ 3313.874316][ T4013]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[ 3313.874318][ T4013]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[ 3313.874320][ T4013] user pgtable: 4k pages, 39-bit VAs, pgdp=00000008f2b0a000\n..\n\n[ 3313.874332][ T4013] Dumping ftrace buffer:\n[ 3313.874334][ T4013]    (ftrace buffer empty)\n..\n..\n[ dd3313.874639][ T4013] CPU: 6 PID: 4013 Comm: InputReader\n[ 3313.874648][ T4013] pc : dualshock4_led_get_brightness+0xc\/0x74\n[ 3313.874653][ T4013] lr : led_update_brightness+0x38\/0x60\n[ 3313.874656][ T4013] sp : ffffffc0b910bbd0\n..\n..\n[ 3313.874685][ T4013] Call trace:\n[ 3313.874687][ T4013]  dualshock4_led_get_brightness+0xc\/0x74\n[ 3313.874690][ T4013]  brightness_show+0x20\/0x4c\n[ 3313.874692][ T4013]  dev_attr_show+0x38\/0x74\n[ 3313.874696][ T4013]  sysfs_kf_seq_show+0xb4\/0x130\n[ 3313.874700][ T4013]  kernfs_seq_show+0x44\/0x54\n[ 3313.874703][ T4013]  seq_read_iter+0x158\/0x4ec\n[ 3313.874705][ T4013]  kernfs_fop_read_iter+0x68\/0x1b4\n[ 3313.874708][ T4013]  vfs_read+0x1e0\/0x2c8\n[ 3313.874711][ T4013]  ksys_read+0x78\/0xe8\n[ 3313.874714][ T4013]  __arm64_sys_read+0x1c\/0x2c\n[ 3313.874718][ T4013]  invoke_syscall+0x58\/0x114\n[ 3313.874721][ T4013]  el0_svc_common+0x80\/0xe0\n[ 3313.874724][ T4013]  do_el0_svc+0x1c\/0x28\n[ 3313.874727][ T4013]  el0_svc+0x38\/0x68\n[ 3313.874730][ T4013]  el0t_64_sync_handler+0x68\/0xbc\n[ 3313.874732][ T4013]  el0t_64_sync+0x1a8\/0x1ac"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ca7cd938725a4050dcd62ae9472e931d603118d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50d9f68e4adf86901cbab1bd5b91f710aa9141b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84b42d5b5fcd767c9b7f30b0b32065ed949fe804","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8283d52ed15c02bb2eb9b1b8644dcc34f8e98f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb4a6236a430cfc3713f470f3a969f39d6d4ca25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddcfc5708da9972ac23a9121b3d819b0a53d6f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6d6fb563e4be245a17bc4261a4b294e8bf8a31e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56588","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.040","lastModified":"2024-12-27T15:15:18.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Create all dump files during debugfs initialization\n\nFor the current debugfs of hisi_sas, after user triggers dump, the\ndriver allocate memory space to save the register information and create\ndebugfs files to display the saved information. In this process, the\ndebugfs files created after each dump.\n\nTherefore, when the dump is triggered while the driver is unbind, the\nfollowing hang occurs:\n\n[67840.853907] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[67840.862947] Mem abort info:\n[67840.865855]   ESR = 0x0000000096000004\n[67840.869713]   EC = 0x25: DABT (current EL), IL = 32 bits\n[67840.875125]   SET = 0, FnV = 0\n[67840.878291]   EA = 0, S1PTW = 0\n[67840.881545]   FSC = 0x04: level 0 translation fault\n[67840.886528] Data abort info:\n[67840.889524]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n[67840.895117]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n[67840.900284]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n[67840.905709] user pgtable: 4k pages, 48-bit VAs, pgdp=0000002803a1f000\n[67840.912263] [00000000000000a0] pgd=0000000000000000, p4d=0000000000000000\n[67840.919177] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n[67840.996435] pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[67841.003628] pc : down_write+0x30\/0x98\n[67841.007546] lr : start_creating.part.0+0x60\/0x198\n[67841.012495] sp : ffff8000b979ba20\n[67841.016046] x29: ffff8000b979ba20 x28: 0000000000000010 x27: 0000000000024b40\n[67841.023412] x26: 0000000000000012 x25: ffff20202b355ae8 x24: ffff20202b35a8c8\n[67841.030779] x23: ffffa36877928208 x22: ffffa368b4972240 x21: ffff8000b979bb18\n[67841.038147] x20: ffff00281dc1e3c0 x19: fffffffffffffffe x18: 0000000000000020\n[67841.045515] x17: 0000000000000000 x16: ffffa368b128a530 x15: ffffffffffffffff\n[67841.052888] x14: ffff8000b979bc18 x13: ffffffffffffffff x12: ffff8000b979bb18\n[67841.060263] x11: 0000000000000000 x10: 0000000000000000 x9 : ffffa368b1289b18\n[67841.067640] x8 : 0000000000000012 x7 : 0000000000000000 x6 : 00000000000003a9\n[67841.075014] x5 : 0000000000000000 x4 : ffff002818c5cb00 x3 : 0000000000000001\n[67841.082388] x2 : 0000000000000000 x1 : ffff002818c5cb00 x0 : 00000000000000a0\n[67841.089759] Call trace:\n[67841.092456]  down_write+0x30\/0x98\n[67841.096017]  start_creating.part.0+0x60\/0x198\n[67841.100613]  debugfs_create_dir+0x48\/0x1f8\n[67841.104950]  debugfs_create_files_v3_hw+0x88\/0x348 [hisi_sas_v3_hw]\n[67841.111447]  debugfs_snapshot_regs_v3_hw+0x708\/0x798 [hisi_sas_v3_hw]\n[67841.118111]  debugfs_trigger_dump_v3_hw_write+0x9c\/0x120 [hisi_sas_v3_hw]\n[67841.125115]  full_proxy_write+0x68\/0xc8\n[67841.129175]  vfs_write+0xd8\/0x3f0\n[67841.132708]  ksys_write+0x70\/0x108\n[67841.136317]  __arm64_sys_write+0x24\/0x38\n[67841.140440]  invoke_syscall+0x50\/0x128\n[67841.144385]  el0_svc_common.constprop.0+0xc8\/0xf0\n[67841.149273]  do_el0_svc+0x24\/0x38\n[67841.152773]  el0_svc+0x38\/0xd8\n[67841.156009]  el0t_64_sync_handler+0xc0\/0xc8\n[67841.160361]  el0t_64_sync+0x1a4\/0x1a8\n[67841.164189] Code: b9000882 d2800002 d2800023 f9800011 (c85ffc05)\n[67841.170443] ---[ end trace 0000000000000000 ]---\n\nTo fix this issue, create all directories and files during debugfs\ninitialization. In this way, the driver only needs to allocate memory\nspace to save information each time the user triggers dumping."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6c55f99123075e5429850b41b06f7dfffcb708eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f564f15f88490b484e02442dc4c4b11640ea172","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56589","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.150","lastModified":"2024-12-27T15:15:18.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Add cond_resched() for no forced preemption model\n\nFor no forced preemption model kernel, in the scenario where the\nexpander is connected to 12 high performance SAS SSDs, the following\ncall trace may occur:\n\n[  214.409199][  C240] watchdog: BUG: soft lockup - CPU#240 stuck for 22s! [irq\/149-hisi_sa:3211]\n[  214.568533][  C240] pstate: 60400009 (nZCv daif +PAN -UAO -TCO BTYPE=--)\n[  214.575224][  C240] pc : fput_many+0x8c\/0xdc\n[  214.579480][  C240] lr : fput+0x1c\/0xf0\n[  214.583302][  C240] sp : ffff80002de2b900\n[  214.587298][  C240] x29: ffff80002de2b900 x28: ffff1082aa412000\n[  214.593291][  C240] x27: ffff3062a0348c08 x26: ffff80003a9f6000\n[  214.599284][  C240] x25: ffff1062bbac5c40 x24: 0000000000001000\n[  214.605277][  C240] x23: 000000000000000a x22: 0000000000000001\n[  214.611270][  C240] x21: 0000000000001000 x20: 0000000000000000\n[  214.617262][  C240] x19: ffff3062a41ae580 x18: 0000000000010000\n[  214.623255][  C240] x17: 0000000000000001 x16: ffffdb3a6efe5fc0\n[  214.629248][  C240] x15: ffffffffffffffff x14: 0000000003ffffff\n[  214.635241][  C240] x13: 000000000000ffff x12: 000000000000029c\n[  214.641234][  C240] x11: 0000000000000006 x10: ffff80003a9f7fd0\n[  214.647226][  C240] x9 : ffffdb3a6f0482fc x8 : 0000000000000001\n[  214.653219][  C240] x7 : 0000000000000002 x6 : 0000000000000080\n[  214.659212][  C240] x5 : ffff55480ee9b000 x4 : fffffde7f94c6554\n[  214.665205][  C240] x3 : 0000000000000002 x2 : 0000000000000020\n[  214.671198][  C240] x1 : 0000000000000021 x0 : ffff3062a41ae5b8\n[  214.677191][  C240] Call trace:\n[  214.680320][  C240]  fput_many+0x8c\/0xdc\n[  214.684230][  C240]  fput+0x1c\/0xf0\n[  214.687707][  C240]  aio_complete_rw+0xd8\/0x1fc\n[  214.692225][  C240]  blkdev_bio_end_io+0x98\/0x140\n[  214.696917][  C240]  bio_endio+0x160\/0x1bc\n[  214.701001][  C240]  blk_update_request+0x1c8\/0x3bc\n[  214.705867][  C240]  scsi_end_request+0x3c\/0x1f0\n[  214.710471][  C240]  scsi_io_completion+0x7c\/0x1a0\n[  214.715249][  C240]  scsi_finish_command+0x104\/0x140\n[  214.720200][  C240]  scsi_softirq_done+0x90\/0x180\n[  214.724892][  C240]  blk_mq_complete_request+0x5c\/0x70\n[  214.730016][  C240]  scsi_mq_done+0x48\/0xac\n[  214.734194][  C240]  sas_scsi_task_done+0xbc\/0x16c [libsas]\n[  214.739758][  C240]  slot_complete_v3_hw+0x260\/0x760 [hisi_sas_v3_hw]\n[  214.746185][  C240]  cq_thread_v3_hw+0xbc\/0x190 [hisi_sas_v3_hw]\n[  214.752179][  C240]  irq_thread_fn+0x34\/0xa4\n[  214.756435][  C240]  irq_thread+0xc4\/0x130\n[  214.760520][  C240]  kthread+0x108\/0x13c\n[  214.764430][  C240]  ret_from_fork+0x10\/0x18\n\nThis is because in the hisi_sas driver, both the hardware interrupt\nhandler and the interrupt thread are executed on the same CPU. In the\nperformance test scenario, function irq_wait_for_interrupt() will always\nreturn 0 if lots of interrupts occurs and the CPU will be continuously\nconsumed. As a result, the CPU cannot run the watchdog thread. When the\nwatchdog time exceeds the specified time, call trace occurs.\n\nTo fix it, add cond_resched() to execute the watchdog thread."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2174bbc235f79fce88ea71fd08cf836568fcad5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2233c4a0b948211743659b24c13d6bd059fa75fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2991a023896b79e6753813ed88fbc98979713c73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dd2c5cb2c698a02a4ed2ea0acb7c9909374a8bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50ddf4b0e1a4cb5e9ca0aac3d0a73202b903c87f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/601f8001373fc3fbad498f9be427254908b7fcce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56590","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.263","lastModified":"2024-12-27T15:15:18.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: Fix not checking skb length on hci_acldata_packet\n\nThis fixes not checking if skb really contains an ACL header otherwise\nthe code may attempt to access some uninitilized\/invalid memory past the\nvalid skb->data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/219960a48771b35a3857a491b955c31d6c33d581","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fe288a8214e7dd784d1f9b7c9e448244d316b47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/559b1c7ac2e212a23b3833d3baf3bd957771d02e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e50d12cc6e95e1fde08f5db6992b616f714b0fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93a6160dc198ffe5786da8bd8588cfd17f53b29a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56591","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.383","lastModified":"2024-12-27T15:15:18.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_conn: Use disable_delayed_work_sync\n\nThis makes use of disable_delayed_work_sync instead\ncancel_delayed_work_sync as it not only cancel the ongoing work but also\ndisables new submit which is disarable since the object holding the work\nis about to be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b0f2fc9ed62e73c95df1fa8ed2ba3dac54699df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c55a4c5a04bae40dcdc1e1c19d8eb79a06fb3397","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56592","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.500","lastModified":"2024-12-27T15:15:18.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Call free_htab_elem() after htab_unlock_bucket()\n\nFor htab of maps, when the map is removed from the htab, it may hold the\nlast reference of the map. bpf_map_fd_put_ptr() will invoke\nbpf_map_free_id() to free the id of the removed map element. However,\nbpf_map_fd_put_ptr() is invoked while holding a bucket lock\n(raw_spin_lock_t), and bpf_map_free_id() attempts to acquire map_idr_lock\n(spinlock_t), triggering the following lockdep warning:\n\n  =============================\n  [ BUG: Invalid wait context ]\n  6.11.0-rc4+ #49 Not tainted\n  -----------------------------\n  test_maps\/4881 is trying to lock:\n  ffffffff84884578 (map_idr_lock){+...}-{3:3}, at: bpf_map_free_id.part.0+0x21\/0x70\n  other info that might help us debug this:\n  context-{5:5}\n  2 locks held by test_maps\/4881:\n   #0: ffffffff846caf60 (rcu_read_lock){....}-{1:3}, at: bpf_fd_htab_map_update_elem+0xf9\/0x270\n   #1: ffff888149ced148 (&htab->lockdep_key#2){....}-{2:2}, at: htab_map_update_elem+0x178\/0xa80\n  stack backtrace:\n  CPU: 0 UID: 0 PID: 4881 Comm: test_maps Not tainted 6.11.0-rc4+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), ...\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x6e\/0xb0\n   dump_stack+0x10\/0x20\n   __lock_acquire+0x73e\/0x36c0\n   lock_acquire+0x182\/0x450\n   _raw_spin_lock_irqsave+0x43\/0x70\n   bpf_map_free_id.part.0+0x21\/0x70\n   bpf_map_put+0xcf\/0x110\n   bpf_map_fd_put_ptr+0x9a\/0xb0\n   free_htab_elem+0x69\/0xe0\n   htab_map_update_elem+0x50f\/0xa80\n   bpf_fd_htab_map_update_elem+0x131\/0x270\n   htab_map_update_elem+0x50f\/0xa80\n   bpf_fd_htab_map_update_elem+0x131\/0x270\n   bpf_map_update_value+0x266\/0x380\n   __sys_bpf+0x21bb\/0x36b0\n   __x64_sys_bpf+0x45\/0x60\n   x64_sys_call+0x1b2a\/0x20d0\n   do_syscall_64+0x5d\/0x100\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nOne way to fix the lockdep warning is using raw_spinlock_t for\nmap_idr_lock as well. However, bpf_map_alloc_id() invokes\nidr_alloc_cyclic() after acquiring map_idr_lock, it will trigger a\nsimilar lockdep warning because the slab's lock (s->cpu_slab->lock) is\nstill a spinlock.\n\nInstead of changing map_idr_lock's type, fix the issue by invoking\nhtab_put_fd_value() after htab_unlock_bucket(). However, only deferring\nthe invocation of htab_put_fd_value() is not enough, because the old map\npointers in htab of maps can not be saved during batched deletion.\nTherefore, also defer the invocation of free_htab_elem(), so these\nto-be-freed elements could be linked together similar to lru map.\n\nThere are four callers for ->map_fd_put_ptr:\n\n(1) alloc_htab_elem() (through htab_put_fd_value())\nIt invokes ->map_fd_put_ptr() under a raw_spinlock_t. The invocation of\nhtab_put_fd_value() can not simply move after htab_unlock_bucket(),\nbecause the old element has already been stashed in htab->extra_elems.\nIt may be reused immediately after htab_unlock_bucket() and the\ninvocation of htab_put_fd_value() after htab_unlock_bucket() may release\nthe newly-added element incorrectly. Therefore, saving the map pointer\nof the old element for htab of maps before unlocking the bucket and\nreleasing the map_ptr after unlock. Beside the map pointer in the old\nelement, should do the same thing for the special fields in the old\nelement as well.\n\n(2) free_htab_elem() (through htab_put_fd_value())\nIts caller includes __htab_map_lookup_and_delete_elem(),\nhtab_map_delete_elem() and __htab_map_lookup_and_delete_batch().\n\nFor htab_map_delete_elem(), simply invoke free_htab_elem() after\nhtab_unlock_bucket(). For __htab_map_lookup_and_delete_batch(), just\nlike lru map, linking the to-be-freed element into node_to_free list\nand invoking free_htab_elem() for these element after unlock. It is safe\nto reuse batch_flink as the link for node_to_free, because these\nelements have been removed from the hash llist.\n\nBecause htab of maps doesn't support lookup_and_delete operation,\n__htab_map_lookup_and_delete_elem() doesn't have the problem, so kept\nit as\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10e8a2dec9ff1b81de8e892b0850924038adbc6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a50b4aa3007e63a590d501341f304676ebc74b3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9e9ed90b10c82a4e9d4d70a2890f06bfcdd3b78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56593","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.613","lastModified":"2024-12-27T15:15:18.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: Fix oops due to NULL pointer dereference in brcmf_sdiod_sglist_rw()\n\nThis patch fixes a NULL pointer dereference bug in brcmfmac that occurs\nwhen a high 'sd_sgentry_align' value applies (e.g. 512) and a lot of queued SKBs\nare sent from the pkt queue.\n\nThe problem is the number of entries in the pre-allocated sgtable, it is\nnents = max(rxglom_size, txglom_size) + max(rxglom_size, txglom_size) >> 4 + 1.\nGiven the default [rt]xglom_size=32 it's actually 35 which is too small.\nWorst case, the pkt queue can end up with 64 SKBs. This occurs when a new SKB\nis added for each original SKB if tailroom isn't enough to hold tail_pad.\nAt least one sg entry is needed for each SKB. So, eventually the \"skb_queue_walk loop\"\nin brcmf_sdiod_sglist_rw may run out of sg entries. This makes sg_next return\nNULL and this causes the oops.\n\nThe patch sets nents to max(rxglom_size, txglom_size) * 2 to be able handle\nthe worst-case.\nBtw. this requires only 64-35=29 * 16 (or 20 if CONFIG_NEED_SG_DMA_LENGTH) = 464\nadditional bytes of memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07c020c6d14d29e5a3ea4e4576b8ecf956a80834","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/342f87d263462c2670b77ea9a32074cab2ac6fa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34941321b516bd7c6103bd01287d71a1804d19d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67a25ea28f8ec1da8894f2f115d01d3becf67dc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7522d7d745d13fbeff3350fe6aa56c8dae263571","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/857282b819cbaa0675aaab1e7542e2c0579f52d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfb3f9d3f602602de208da7bdcc0f6d5ee74af68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56594","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.727","lastModified":"2024-12-27T15:15:18.727","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: set the right AMDGPU sg segment limitation\n\nThe driver needs to set the correct max_segment_size;\notherwise debug_dma_map_sg() will complain about the\nover-mapping of the AMDGPU sg length as following:\n\nWARNING: CPU: 6 PID: 1964 at kernel\/dma\/debug.c:1178 debug_dma_map_sg+0x2dc\/0x370\n[  364.049444] Modules linked in: veth amdgpu(OE) amdxcp drm_exec gpu_sched drm_buddy drm_ttm_helper ttm(OE) drm_suballoc_helper drm_display_helper drm_kms_helper i2c_algo_bit rpcsec_gss_krb5 auth_rpcgss nfsv4 nfs lockd grace netfs xt_conntrack xt_MASQUERADE nf_conntrack_netlink xfrm_user xfrm_algo iptable_nat xt_addrtype iptable_filter br_netfilter nvme_fabrics overlay nfnetlink_cttimeout nfnetlink openvswitch nsh nf_conncount nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c bridge stp llc amd_atl intel_rapl_msr intel_rapl_common sunrpc sch_fq_codel snd_hda_codec_realtek snd_hda_codec_generic snd_hda_scodec_component snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg edac_mce_amd binfmt_misc snd_hda_codec snd_pci_acp6x snd_hda_core snd_acp_config snd_hwdep snd_soc_acpi kvm_amd snd_pcm kvm snd_seq_midi snd_seq_midi_event crct10dif_pclmul ghash_clmulni_intel sha512_ssse3 snd_rawmidi sha256_ssse3 sha1_ssse3 aesni_intel snd_seq nls_iso8859_1 crypto_simd snd_seq_device cryptd snd_timer rapl input_leds snd\n[  364.049532]  ipmi_devintf wmi_bmof ccp serio_raw k10temp sp5100_tco soundcore ipmi_msghandler cm32181 industrialio mac_hid msr parport_pc ppdev lp parport drm efi_pstore ip_tables x_tables pci_stub crc32_pclmul nvme ahci libahci i2c_piix4 r8169 nvme_core i2c_designware_pci realtek i2c_ccgx_ucsi video wmi hid_generic cdc_ether usbnet usbhid hid r8152 mii\n[  364.049576] CPU: 6 PID: 1964 Comm: rocminfo Tainted: G           OE      6.10.0-custom #492\n[  364.049579] Hardware name: AMD Majolica-RN\/Majolica-RN, BIOS RMJ1009A 06\/13\/2021\n[  364.049582] RIP: 0010:debug_dma_map_sg+0x2dc\/0x370\n[  364.049585] Code: 89 4d b8 e8 36 b1 86 00 8b 4d b8 48 8b 55 b0 44 8b 45 a8 4c 8b 4d a0 48 89 c6 48 c7 c7 00 4b 74 bc 4c 89 4d b8 e8 b4 73 f3 ff <0f> 0b 4c 8b 4d b8 8b 15 c8 2c b8 01 85 d2 0f 85 ee fd ff ff 8b 05\n[  364.049588] RSP: 0018:ffff9ca600b57ac0 EFLAGS: 00010286\n[  364.049590] RAX: 0000000000000000 RBX: ffff88b7c132b0c8 RCX: 0000000000000027\n[  364.049592] RDX: ffff88bb0f521688 RSI: 0000000000000001 RDI: ffff88bb0f521680\n[  364.049594] RBP: ffff9ca600b57b20 R08: 000000000000006f R09: ffff9ca600b57930\n[  364.049596] R10: ffff9ca600b57928 R11: ffffffffbcb46328 R12: 0000000000000000\n[  364.049597] R13: 0000000000000001 R14: ffff88b7c19c0700 R15: ffff88b7c9059800\n[  364.049599] FS:  00007fb2d3516e80(0000) GS:ffff88bb0f500000(0000) knlGS:0000000000000000\n[  364.049601] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  364.049603] CR2: 000055610bd03598 CR3: 00000001049f6000 CR4: 0000000000350ef0\n[  364.049605] Call Trace:\n[  364.049607]  <TASK>\n[  364.049609]  ? show_regs+0x6d\/0x80\n[  364.049614]  ? __warn+0x8c\/0x140\n[  364.049618]  ? debug_dma_map_sg+0x2dc\/0x370\n[  364.049621]  ? report_bug+0x193\/0x1a0\n[  364.049627]  ? handle_bug+0x46\/0x80\n[  364.049631]  ? exc_invalid_op+0x1d\/0x80\n[  364.049635]  ? asm_exc_invalid_op+0x1f\/0x30\n[  364.049642]  ? debug_dma_map_sg+0x2dc\/0x370\n[  364.049647]  __dma_map_sg_attrs+0x90\/0xe0\n[  364.049651]  dma_map_sgtable+0x25\/0x40\n[  364.049654]  amdgpu_bo_move+0x59a\/0x850 [amdgpu]\n[  364.049935]  ? srso_return_thunk+0x5\/0x5f\n[  364.049939]  ? amdgpu_ttm_tt_populate+0x5d\/0xc0 [amdgpu]\n[  364.050095]  ttm_bo_handle_move_mem+0xc3\/0x180 [ttm]\n[  364.050103]  ttm_bo_validate+0xc1\/0x160 [ttm]\n[  364.050108]  ? amdgpu_ttm_tt_get_user_pages+0xe5\/0x1b0 [amdgpu]\n[  364.050263]  amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu+0xa12\/0xc90 [amdgpu]\n[  364.050473]  kfd_ioctl_alloc_memory_of_gpu+0x16b\/0x3b0 [amdgpu]\n[  364.050680]  kfd_ioctl+0x3c2\/0x530 [amdgpu]\n[  364.050866]  ? __pfx_kfd_ioctl_alloc_memory_of_gpu+0x10\/0x10 [amdgpu]\n[  364.05105\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13c3a54f48a612a117dfd82a9dd91732261e869d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76581147b05c2adb6b47bbc697521725f10224e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76649ccf97e2cd72b62e34ed2fba6e0f89497eab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5807a08954fdf914ef80b49aaa6cda965ecc95c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9e52a96ec92245bf15dabba1d3d862d7a03efb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2e97435783979124ba92d6870415c57ecfef6a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff0346a74627a5f607a33a3852586f8c7f678329","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56595","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.843","lastModified":"2024-12-27T15:15:18.843","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add a check to prevent array-index-out-of-bounds in dbAdjTree\n\nWhen the value of lp is 0 at the beginning of the for loop, it will\nbecome negative in the next assignment and we should bail out."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/368a533152220b0a6f1142327d96c6b6361f3002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b5d21b56c3774bc84eab0a93aaac22a4475e2c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/491487eeddccc4bb49f2e59d8c8f35bec89c15ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a4311bbde702362fe7412045d06ab6767235dac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a174706ba4dad895c40b1d2277bade16dfacdcd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3d408870bc19b794646871bc4c3a5daa66f91c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b15000bcbecf27e0f7c0f149a409e5b865e28ca2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56596","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:18.963","lastModified":"2024-12-27T15:15:18.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in jfs_readdir\n\nThe stbl might contain some invalid values. Added a check to\nreturn error code in that case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/839f102efb168f02dfdd46717b7c6dddb26b015e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ff7579554571d92e3deab168f5a7d7b146ed368","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97e693593162eef6851d232f0c8148169ed46a5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9efe72eefd4c4a7ce63b3e4d667d766d2b360cb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b62f41aeec9d250144c53875b507c1d45ae8c8fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7d376f94f72b020f84e77278b150ec1cc27502c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff9fc48fab0e1ea0d423c23c99b91bba178f0b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56597","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.080","lastModified":"2024-12-27T15:15:19.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix shift-out-of-bounds in dbSplit\n\nWhen dmt_budmin is less than zero, it causes errors\nin the later stages. Added a check to return an error beforehand\nin dbAllocCtl itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/51a203470f502a64a3da8dcea51c4748e8267a6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52756a57e978e2706543a254f88f266cc6702f36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6676034aa753aa448beb30dbd75630927ba7cd96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5f5e4698f8abbb25fe4959814093fb5bfa1aa9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbb24ce7f06ef9b7c05beb9340787cbe9fd3d08e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c56245baf3fd1f79145dd7408e3ead034b74255c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df7c76636952670b31bd6c12b3aed3c502122273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56598","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.200","lastModified":"2024-12-27T15:15:19.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: array-index-out-of-bounds fix in dtReadFirst\n\nThe value of stbl can be sometimes out of bounds due\nto a bad filesystem. Added a check with appopriate return\nof error code in that case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22dcbf7661c6ffc3247978c254dc40b833a0d429","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25f1e673ef61d6bf9a6022e27936785896d74948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eea5fda5556ef03defebf07b0a12fcd2c5210f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/823d573f5450ca6be80b36f54d1902ac7cd23fb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c97a4d5463a1c972ef576ac499ea9b05f956097","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca84a2c9be482836b86d780244f0357e5a778c46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd993b2180b4c373af8b99aa28d4dcda5c2a8f10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56599","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.307","lastModified":"2024-12-27T15:15:19.307","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath10k: avoid NULL pointer error during sdio remove\n\nWhen running 'rmmod ath10k', ath10k_sdio_remove() will free sdio\nworkqueue by destroy_workqueue(). But if CONFIG_INIT_ON_FREE_DEFAULT_ON\nis set to yes, kernel panic will happen:\nCall trace:\n destroy_workqueue+0x1c\/0x258\n ath10k_sdio_remove+0x84\/0x94\n sdio_bus_remove+0x50\/0x16c\n device_release_driver_internal+0x188\/0x25c\n device_driver_detach+0x20\/0x2c\n\nThis is because during 'rmmod ath10k', ath10k_sdio_remove() will call\nath10k_core_destroy() before destroy_workqueue(). wiphy_dev_release()\nwill finally be called in ath10k_core_destroy(). This function will free\nstruct cfg80211_registered_device *rdev and all its members, including\nwiphy, dev and the pointer of sdio workqueue. Then the pointer of sdio\nworkqueue will be set to NULL due to CONFIG_INIT_ON_FREE_DEFAULT_ON.\n\nAfter device release, destroy_workqueue() will use NULL pointer then the\nkernel panic happen.\n\nCall trace:\nath10k_sdio_remove\n  ->ath10k_core_unregister\n    ……\n    ->ath10k_core_stop\n      ->ath10k_hif_stop\n        ->ath10k_sdio_irq_disable\n    ->ath10k_hif_power_down\n      ->del_timer_sync(&ar_sdio->sleep_timer)\n  ->ath10k_core_destroy\n    ->ath10k_mac_destroy\n      ->ieee80211_free_hw\n        ->wiphy_free\n    ……\n          ->wiphy_dev_release\n  ->destroy_workqueue\n\nNeed to call destroy_workqueue() before ath10k_core_destroy(), free\nthe work queue buffer first and then free pointer of work queue by\nath10k_core_destroy(). This order matches the error path order in\nath10k_sdio_probe().\n\nNo work will be queued on sdio workqueue between it is destroyed and\nath10k_core_destroy() is called. Based on the call_stack above, the\nreason is:\nOnly ath10k_sdio_sleep_timer_handler(), ath10k_sdio_hif_tx_sg() and\nath10k_sdio_irq_disable() will queue work on sdio workqueue.\nSleep timer will be deleted before ath10k_core_destroy() in\nath10k_hif_power_down().\nath10k_sdio_irq_disable() only be called in ath10k_hif_stop().\nath10k_core_unregister() will call ath10k_hif_power_down() to stop hif\nbus, so ath10k_sdio_hif_tx_sg() won't be called anymore.\n\nTested-on: QCA6174 hw3.2 SDIO WLAN.RMH.4.4.1-00189"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/543c0924d446b21f35701ca084d7feca09511220","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95c38953cb1ecf40399a676a1f85dfe2b5780a9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56600","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.410","lastModified":"2024-12-27T15:15:19.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: inet6: do not leave a dangling sk pointer in inet6_create()\n\nsock_init_data() attaches the allocated sk pointer to the provided sock\nobject. If inet6_create() fails later, the sk object is released, but the\nsock object retains the dangling sk pointer, which may cause use-after-free\nlater.\n\nClear the sock sk pointer on error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/276a473c956fb55a6f3affa9ff232e10fffa7b43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35360255ca30776dee34d9fa764cffa24d0a5f65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/706b07b7b37f886423846cb38919132090bc40da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79e16a0d339532ea832d85798eb036fc4f9e0cea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9df99c395d0f55fb444ef39f4d6f194ca437d884","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2709d1271cfdf55c670ab5c5982139ab627ddc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f44fceb71d72d29fb00e0ac84cdf9c081b03cd06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56601","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.527","lastModified":"2024-12-27T15:15:19.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: inet: do not leave a dangling sk pointer in inet_create()\n\nsock_init_data() attaches the allocated sk object to the provided sock\nobject. If inet_create() fails later, the sk object is freed, but the\nsock object retains the dangling pointer, which may create use-after-free\nlater.\n\nClear the sk pointer in the sock object on error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25447c6aaa7235f155292b0c58a067347e8ae891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bc34d8c8898ae9fddf4612501aabb22d76c2b2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e8258070b0f2aba66b3ef18883de229674fb288","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/691d6d816f93b2a1008c14178399061466e674ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9365fa510c6f82e3aa550a09d0c5c6b44dbc78ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4513cfd3a10c03c660d5d3d26c2e322efbfdd9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8a3f255f7509a209292871715cda03779640c8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56602","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.650","lastModified":"2024-12-27T15:15:19.650","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: do not leave a dangling sk pointer in ieee802154_create()\n\nsock_init_data() attaches the allocated sk object to the provided sock\nobject. If ieee802154_create() fails later, the allocated sk object is\nfreed, but the dangling pointer remains in the provided sock object, which\nmay allow use-after-free.\n\nClear the sk pointer in the sock object on error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03caa9bfb9fde97fb53d33decd7364514e6825cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14959fd7538b3be6d7617d9e60e404d6a8d4fd1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d5fe782c0ff068d80933f9cfd0fd39d5434bbc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b46994a6e76c8cc5556772932b9b60d03a55cd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4982fbf13042e3bb33e04eddfea8b1506b5ea65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4fcd63f6ef79c73cafae8cf4a114def5fc3d80d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8bd6c5f5dc2234b4ea714380aedeea12a781754","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56603","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.770","lastModified":"2024-12-27T15:15:19.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: af_can: do not leave a dangling sk pointer in can_create()\n\nOn error can_create() frees the allocated sk object, but sock_init_data()\nhas already attached it to the provided sock object. This will leave a\ndangling sk pointer in the sock object and may cause use-after-free later."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fe625f12d090d69f3f084990c7e4c1ff94bfe5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5947c9ac08f0771ea8ed64186b0d52e9029cb6c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/811a7ca7320c062e15d0f5b171fe6ad8592d1434","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/884ae8bcee749be43a071d6ed2d89058dbd2425c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8df832e6b945e1ba61467d7f1c9305e314ae92fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce39b5576785bb3e66591145aad03d66bc3e778d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db207d19adbac96058685f6257720906ad41d215","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56604","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.887","lastModified":"2024-12-27T15:15:19.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc()\n\nbt_sock_alloc() attaches allocated sk object to the provided sock object.\nIf rfcomm_dlc_alloc() fails, we release the sk object, but leave the\ndangling pointer in the sock object, which may cause use-after-free.\n\nFix this by swapping calls to bt_sock_alloc() and rfcomm_dlc_alloc()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32df687e129ef0f9afcbcc914f7c32deb28fd481","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3945c799f12b8d1f49a3b48369ca494d981ac465","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6021ccc2471b7b95e29b7cfc7938e042bf56e281","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac3eaac4cf142a15fe67be747a682b1416efeb6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56605","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:19.980","lastModified":"2024-12-27T15:15:19.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: do not leave dangling sk pointer on error in l2cap_sock_create()\n\nbt_sock_alloc() allocates the sk object and attaches it to the provided\nsock object. On error l2cap_sock_alloc() frees the sk object, but the\ndangling pointer is still attached to the sock object, which may create\nuse-after-free in other code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61686abc2f3c2c67822aa23ce6f160467ec83d35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c4f78cdb8e7501e9f92d291a7d956591bf73be9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ad09ddc63ace3950ac43db6fbfe25b40f589dd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8677028dd5123e5e525b8195483994d87123de4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb2f2342a6ddf7c04f9aefbbfe86104cd138e629","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/daa13175a6dea312a76099066cb4cbd4fc959a84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6ad641646b67f29c7578dcd6c25813c7dcbf51e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56606","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.087","lastModified":"2024-12-27T15:15:20.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_packet: avoid erroring out after sock_init_data() in packet_create()\n\nAfter sock_init_data() the allocated sk object is attached to the provided\nsock object. On error, packet_create() frees the sk object leaving the\ndangling pointer in the sock object on return. Some other code may try\nto use this pointer and cause use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/132e615bb1d7cdec2d3cfbdec2efa630e923fd21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/157f08db94123e2ba56877dd0ac88908b13a5dd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dc1e1db927056cb323296e2294a855cd003dfe7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46f2a11cb82b657fd15bab1c47821b635e03838b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71b22837a5e55ac27d6a14b9cdf2326587405c4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6cf750b737374454a4e03a5ed449a3eb0c96414","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd09880b16d33aa5a7420578e01cd79148fa9829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56607","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.180","lastModified":"2024-12-27T15:15:20.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix atomic calls in ath12k_mac_op_set_bitrate_mask()\n\nWhen I try to manually set bitrates:\n\niw wlan0 set bitrates legacy-2.4 1\n\nI get sleeping from invalid context error, see below. Fix that by switching to\nuse recently introduced ieee80211_iterate_stations_mtx().\n\nDo note that WCN6855 firmware is still crashing, I'm not sure if that firmware\neven supports bitrate WMI commands and should we consider disabling\nath12k_mac_op_set_bitrate_mask() for WCN6855? But that's for another patch.\n\nBUG: sleeping function called from invalid context at drivers\/net\/wireless\/ath\/ath12k\/wmi.c:420\nin_atomic(): 0, irqs_disabled(): 0, non_block: 0, pid: 2236, name: iw\npreempt_count: 0, expected: 0\nRCU nest depth: 1, expected: 0\n3 locks held by iw\/2236:\n #0: ffffffffabc6f1d8 (cb_lock){++++}-{3:3}, at: genl_rcv+0x14\/0x40\n #1: ffff888138410810 (&rdev->wiphy.mtx){+.+.}-{3:3}, at: nl80211_pre_doit+0x54d\/0x800 [cfg80211]\n #2: ffffffffab2cfaa0 (rcu_read_lock){....}-{1:2}, at: ieee80211_iterate_stations_atomic+0x2f\/0x200 [mac80211]\nCPU: 3 UID: 0 PID: 2236 Comm: iw Not tainted 6.11.0-rc7-wt-ath+ #1772\nHardware name: Intel(R) Client Systems NUC8i7HVK\/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05\/28\/2021\nCall Trace:\n <TASK>\n dump_stack_lvl+0xa4\/0xe0\n dump_stack+0x10\/0x20\n __might_resched+0x363\/0x5a0\n ? __alloc_skb+0x165\/0x340\n __might_sleep+0xad\/0x160\n ath12k_wmi_cmd_send+0xb1\/0x3d0 [ath12k]\n ? ath12k_wmi_init_wcn7850+0xa40\/0xa40 [ath12k]\n ? __netdev_alloc_skb+0x45\/0x7b0\n ? __asan_memset+0x39\/0x40\n ? ath12k_wmi_alloc_skb+0xf0\/0x150 [ath12k]\n ? reacquire_held_locks+0x4d0\/0x4d0\n ath12k_wmi_set_peer_param+0x340\/0x5b0 [ath12k]\n ath12k_mac_disable_peer_fixed_rate+0xa3\/0x110 [ath12k]\n ? ath12k_mac_vdev_stop+0x4f0\/0x4f0 [ath12k]\n ieee80211_iterate_stations_atomic+0xd4\/0x200 [mac80211]\n ath12k_mac_op_set_bitrate_mask+0x5d2\/0x1080 [ath12k]\n ? ath12k_mac_vif_chan+0x320\/0x320 [ath12k]\n drv_set_bitrate_mask+0x267\/0x470 [mac80211]\n ieee80211_set_bitrate_mask+0x4cc\/0x8a0 [mac80211]\n ? __this_cpu_preempt_check+0x13\/0x20\n nl80211_set_tx_bitrate_mask+0x2bc\/0x530 [cfg80211]\n ? nl80211_parse_tx_bitrate_mask+0x2320\/0x2320 [cfg80211]\n ? trace_contention_end+0xef\/0x140\n ? rtnl_unlock+0x9\/0x10\n ? nl80211_pre_doit+0x557\/0x800 [cfg80211]\n genl_family_rcv_msg_doit+0x1f0\/0x2e0\n ? genl_family_rcv_msg_attrs_parse.isra.0+0x250\/0x250\n ? ns_capable+0x57\/0xd0\n genl_family_rcv_msg+0x34c\/0x600\n ? genl_family_rcv_msg_dumpit+0x310\/0x310\n ? __lock_acquire+0xc62\/0x1de0\n ? he_set_mcs_mask.isra.0+0x8d0\/0x8d0 [cfg80211]\n ? nl80211_parse_tx_bitrate_mask+0x2320\/0x2320 [cfg80211]\n ? cfg80211_external_auth_request+0x690\/0x690 [cfg80211]\n genl_rcv_msg+0xa0\/0x130\n netlink_rcv_skb+0x14c\/0x400\n ? genl_family_rcv_msg+0x600\/0x600\n ? netlink_ack+0xd70\/0xd70\n ? rwsem_optimistic_spin+0x4f0\/0x4f0\n ? genl_rcv+0x14\/0x40\n ? down_read_killable+0x580\/0x580\n ? netlink_deliver_tap+0x13e\/0x350\n ? __this_cpu_preempt_check+0x13\/0x20\n genl_rcv+0x23\/0x40\n netlink_unicast+0x45e\/0x790\n ? netlink_attachskb+0x7f0\/0x7f0\n netlink_sendmsg+0x7eb\/0xdb0\n ? netlink_unicast+0x790\/0x790\n ? __this_cpu_preempt_check+0x13\/0x20\n ? selinux_socket_sendmsg+0x31\/0x40\n ? netlink_unicast+0x790\/0x790\n __sock_sendmsg+0xc9\/0x160\n ____sys_sendmsg+0x620\/0x990\n ? kernel_sendmsg+0x30\/0x30\n ? __copy_msghdr+0x410\/0x410\n ? __kasan_check_read+0x11\/0x20\n ? mark_lock+0xe6\/0x1470\n ___sys_sendmsg+0xe9\/0x170\n ? copy_msghdr_from_user+0x120\/0x120\n ? __lock_acquire+0xc62\/0x1de0\n ? do_fault_around+0x2c6\/0x4e0\n ? do_user_addr_fault+0x8c1\/0xde0\n ? reacquire_held_locks+0x220\/0x4d0\n ? do_user_addr_fault+0x8c1\/0xde0\n ? __kasan_check_read+0x11\/0x20\n ? __fdget+0x4e\/0x1d0\n ? sockfd_lookup_light+0x1a\/0x170\n __sys_sendmsg+0xd2\/0x180\n ? __sys_sendmsg_sock+0x20\/0x20\n ? reacquire_held_locks+0x4d0\/0x4d0\n ? debug_smp_processor_id+0x17\/0x20\n __x64_sys_sendmsg+0x72\/0xb0\n ? lockdep_hardirqs_on+0x7d\/0x100\n x64_sys_call+0x894\/0x9f0\n do_syscall_64+0x64\/0x130\n entry_SYSCALL_64_after_\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2093f062b26805789b73f2af214691475d9baa29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fac3266c68a8e647240b8ac8d0b82f1821edf85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56608","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.283","lastModified":"2024-12-27T15:15:20.283","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix out-of-bounds access in 'dcn21_link_encoder_create'\n\nAn issue was identified in the dcn21_link_encoder_create function where\nan out-of-bounds access could occur when the hpd_source index was used\nto reference the link_enc_hpd_regs array. This array has a fixed size\nand the index was not being checked against the array's bounds before\naccessing it.\n\nThis fix adds a conditional check to ensure that the hpd_source index is\nwithin the valid range of the link_enc_hpd_regs array. If the index is\nout of bounds, the function now returns NULL to prevent undefined\nbehavior.\n\nReferences:\n\n[   65.920507] ------------[ cut here ]------------\n[   65.920510] UBSAN: array-index-out-of-bounds in drivers\/gpu\/drm\/amd\/amdgpu\/..\/display\/dc\/resource\/dcn21\/dcn21_resource.c:1312:29\n[   65.920519] index 7 is out of range for type 'dcn10_link_enc_hpd_registers [5]'\n[   65.920523] CPU: 3 PID: 1178 Comm: modprobe Tainted: G           OE      6.8.0-cleanershaderfeatureresetasdntipmi200nv2132 #13\n[   65.920525] Hardware name: AMD Majolica-RN\/Majolica-RN, BIOS WMJ0429N_Weekly_20_04_2 04\/29\/2020\n[   65.920527] Call Trace:\n[   65.920529]  <TASK>\n[   65.920532]  dump_stack_lvl+0x48\/0x70\n[   65.920541]  dump_stack+0x10\/0x20\n[   65.920543]  __ubsan_handle_out_of_bounds+0xa2\/0xe0\n[   65.920549]  dcn21_link_encoder_create+0xd9\/0x140 [amdgpu]\n[   65.921009]  link_create+0x6d3\/0xed0 [amdgpu]\n[   65.921355]  create_links+0x18a\/0x4e0 [amdgpu]\n[   65.921679]  dc_create+0x360\/0x720 [amdgpu]\n[   65.921999]  ? dmi_matches+0xa0\/0x220\n[   65.922004]  amdgpu_dm_init+0x2b6\/0x2c90 [amdgpu]\n[   65.922342]  ? console_unlock+0x77\/0x120\n[   65.922348]  ? dev_printk_emit+0x86\/0xb0\n[   65.922354]  dm_hw_init+0x15\/0x40 [amdgpu]\n[   65.922686]  amdgpu_device_init+0x26a8\/0x33a0 [amdgpu]\n[   65.922921]  amdgpu_driver_load_kms+0x1b\/0xa0 [amdgpu]\n[   65.923087]  amdgpu_pci_probe+0x1b7\/0x630 [amdgpu]\n[   65.923087]  local_pci_probe+0x4b\/0xb0\n[   65.923087]  pci_device_probe+0xc8\/0x280\n[   65.923087]  really_probe+0x187\/0x300\n[   65.923087]  __driver_probe_device+0x85\/0x130\n[   65.923087]  driver_probe_device+0x24\/0x110\n[   65.923087]  __driver_attach+0xac\/0x1d0\n[   65.923087]  ? __pfx___driver_attach+0x10\/0x10\n[   65.923087]  bus_for_each_dev+0x7d\/0xd0\n[   65.923087]  driver_attach+0x1e\/0x30\n[   65.923087]  bus_add_driver+0xf2\/0x200\n[   65.923087]  driver_register+0x64\/0x130\n[   65.923087]  ? __pfx_amdgpu_init+0x10\/0x10 [amdgpu]\n[   65.923087]  __pci_register_driver+0x61\/0x70\n[   65.923087]  amdgpu_init+0x7d\/0xff0 [amdgpu]\n[   65.923087]  do_one_initcall+0x49\/0x310\n[   65.923087]  ? kmalloc_trace+0x136\/0x360\n[   65.923087]  do_init_module+0x6a\/0x270\n[   65.923087]  load_module+0x1fce\/0x23a0\n[   65.923087]  init_module_from_file+0x9c\/0xe0\n[   65.923087]  ? init_module_from_file+0x9c\/0xe0\n[   65.923087]  idempotent_init_module+0x179\/0x230\n[   65.923087]  __x64_sys_finit_module+0x5d\/0xa0\n[   65.923087]  do_syscall_64+0x76\/0x120\n[   65.923087]  entry_SYSCALL_64_after_hwframe+0x6e\/0x76\n[   65.923087] RIP: 0033:0x7f2d80f1e88d\n[   65.923087] Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 b5 0f 00 f7 d8 64 89 01 48\n[   65.923087] RSP: 002b:00007ffc7bc1aa78 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\n[   65.923087] RAX: ffffffffffffffda RBX: 0000564c9c1db130 RCX: 00007f2d80f1e88d\n[   65.923087] RDX: 0000000000000000 RSI: 0000564c9c1e5480 RDI: 000000000000000f\n[   65.923087] RBP: 0000000000040000 R08: 0000000000000000 R09: 0000000000000002\n[   65.923087] R10: 000000000000000f R11: 0000000000000246 R12: 0000564c9c1e5480\n[   65.923087] R13: 0000564c9c1db260 R14: 0000000000000000 R15: 0000564c9c1e54b0\n[   65.923087]  <\/TASK>\n[   65.923927] ---[ end trace ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/63de35a8fcfca59ae8750d469a7eb220c7557baf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f01ddd589e162979421e6914b1c74018633f01e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56609","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.387","lastModified":"2024-12-27T15:15:20.387","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw88: use ieee80211_purge_tx_queue() to purge TX skb\n\nWhen removing kernel modules by:\n   rmmod rtw88_8723cs rtw88_8703b rtw88_8723x rtw88_sdio rtw88_core\n\nDriver uses skb_queue_purge() to purge TX skb, but not report tx status\ncausing \"Have pending ack frames!\" warning. Use ieee80211_purge_tx_queue()\nto correct this.\n\nSince ieee80211_purge_tx_queue() doesn't take locks, to prevent racing\nbetween TX work and purge TX queue, flush and destroy TX work in advance.\n\n   wlan0: deauthenticating from aa:f5:fd:60:4c:a8 by local\n     choice (Reason: 3=DEAUTH_LEAVING)\n   ------------[ cut here ]------------\n   Have pending ack frames!\n   WARNING: CPU: 3 PID: 9232 at net\/mac80211\/main.c:1691\n       ieee80211_free_ack_frame+0x5c\/0x90 [mac80211]\n   CPU: 3 PID: 9232 Comm: rmmod Tainted: G         C\n       6.10.1-200.fc40.aarch64 #1\n   Hardware name: pine64 Pine64 PinePhone Braveheart\n      (1.1)\/Pine64 PinePhone Braveheart (1.1), BIOS 2024.01 01\/01\/2024\n   pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n   pc : ieee80211_free_ack_frame+0x5c\/0x90 [mac80211]\n   lr : ieee80211_free_ack_frame+0x5c\/0x90 [mac80211]\n   sp : ffff80008c1b37b0\n   x29: ffff80008c1b37b0 x28: ffff000003be8000 x27: 0000000000000000\n   x26: 0000000000000000 x25: ffff000003dc14b8 x24: ffff80008c1b37d0\n   x23: ffff000000ff9f80 x22: 0000000000000000 x21: 000000007fffffff\n   x20: ffff80007c7e93d8 x19: ffff00006e66f400 x18: 0000000000000000\n   x17: ffff7ffffd2b3000 x16: ffff800083fc0000 x15: 0000000000000000\n   x14: 0000000000000000 x13: 2173656d61726620 x12: 6b636120676e6964\n   x11: 0000000000000000 x10: 000000000000005d x9 : ffff8000802af2b0\n   x8 : ffff80008c1b3430 x7 : 0000000000000001 x6 : 0000000000000001\n   x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000\n   x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000003be8000\n   Call trace:\n    ieee80211_free_ack_frame+0x5c\/0x90 [mac80211]\n    idr_for_each+0x74\/0x110\n    ieee80211_free_hw+0x44\/0xe8 [mac80211]\n    rtw_sdio_remove+0x9c\/0xc0 [rtw88_sdio]\n    sdio_bus_remove+0x44\/0x180\n    device_remove+0x54\/0x90\n    device_release_driver_internal+0x1d4\/0x238\n    driver_detach+0x54\/0xc0\n    bus_remove_driver+0x78\/0x108\n    driver_unregister+0x38\/0x78\n    sdio_unregister_driver+0x2c\/0x40\n    rtw_8723cs_driver_exit+0x18\/0x1000 [rtw88_8723cs]\n    __do_sys_delete_module.isra.0+0x190\/0x338\n    __arm64_sys_delete_module+0x1c\/0x30\n    invoke_syscall+0x74\/0x100\n    el0_svc_common.constprop.0+0x48\/0xf0\n    do_el0_svc+0x24\/0x38\n    el0_svc+0x3c\/0x158\n    el0t_64_sync_handler+0x120\/0x138\n    el0t_64_sync+0x194\/0x198\n   ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3e5e4a801aaf4283390cc34959c6c48f910ca5ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bca6528f20325d30c22236b23116f161d418f6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56610","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.490","lastModified":"2024-12-27T15:15:20.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkcsan: Turn report_filterlist_lock into a raw_spinlock\n\nRan Xiaokai reports that with a KCSAN-enabled PREEMPT_RT kernel, we can see\nsplats like:\n\n| BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:48\n| in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper\/1\n| preempt_count: 10002, expected: 0\n| RCU nest depth: 0, expected: 0\n| no locks held by swapper\/1\/0.\n| irq event stamp: 156674\n| hardirqs last  enabled at (156673): [<ffffffff81130bd9>] do_idle+0x1f9\/0x240\n| hardirqs last disabled at (156674): [<ffffffff82254f84>] sysvec_apic_timer_interrupt+0x14\/0xc0\n| softirqs last  enabled at (0): [<ffffffff81099f47>] copy_process+0xfc7\/0x4b60\n| softirqs last disabled at (0): [<0000000000000000>] 0x0\n| Preemption disabled at:\n| [<ffffffff814a3e2a>] paint_ptr+0x2a\/0x90\n| CPU: 1 UID: 0 PID: 0 Comm: swapper\/1 Not tainted 6.11.0+ #3\n| Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-0-ga698c8995f-prebuilt.qemu.org 04\/01\/2014\n| Call Trace:\n|  <IRQ>\n|  dump_stack_lvl+0x7e\/0xc0\n|  dump_stack+0x1d\/0x30\n|  __might_resched+0x1a2\/0x270\n|  rt_spin_lock+0x68\/0x170\n|  kcsan_skip_report_debugfs+0x43\/0xe0\n|  print_report+0xb5\/0x590\n|  kcsan_report_known_origin+0x1b1\/0x1d0\n|  kcsan_setup_watchpoint+0x348\/0x650\n|  __tsan_unaligned_write1+0x16d\/0x1d0\n|  hrtimer_interrupt+0x3d6\/0x430\n|  __sysvec_apic_timer_interrupt+0xe8\/0x3a0\n|  sysvec_apic_timer_interrupt+0x97\/0xc0\n|  <\/IRQ>\n\nOn a detected data race, KCSAN's reporting logic checks if it should\nfilter the report. That list is protected by the report_filterlist_lock\n*non-raw* spinlock which may sleep on RT kernels.\n\nSince KCSAN may report data races in any context, convert it to a\nraw_spinlock.\n\nThis requires being careful about when to allocate memory for the filter\nlist itself which can be done via KCSAN's debugfs interface. Concurrent\nmodification of the filter list via debugfs should be rare: the chosen\nstrategy is to optimistically pre-allocate memory before the critical\nsection and discard if unused."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ab4951c1473c7d1ceaf1232eb927109cd1c4859","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59458fa4ddb47e7891c61b4a928d13d5f5b00aa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/889a0d3a35fdedba1c5dcb6410c95c32421680ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dca4e74a918586913d251c0b359e8cc96a3883ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6588abcc15d68fdeae777ffe3dd74c02eab407","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4f2ef66d288ea796ddb8ecbdc2df074ab2d5f4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56611","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.587","lastModified":"2024-12-27T15:15:20.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/mempolicy: fix migrate_to_node() assuming there is at least one VMA in a MM\n\nWe currently assume that there is at least one VMA in a MM, which isn't\ntrue.\n\nSo we might end up having find_vma() return NULL, to then de-reference\nNULL.  So properly handle find_vma() returning NULL.\n\nThis fixes the report:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 1 UID: 0 PID: 6021 Comm: syz-executor284 Not tainted 6.12.0-rc7-syzkaller-00187-gf868cd251776 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/30\/2024\nRIP: 0010:migrate_to_node mm\/mempolicy.c:1090 [inline]\nRIP: 0010:do_migrate_pages+0x403\/0x6f0 mm\/mempolicy.c:1194\nCode: ...\nRSP: 0018:ffffc9000375fd08 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffffc9000375fd78 RCX: 0000000000000000\nRDX: ffff88807e171300 RSI: dffffc0000000000 RDI: ffff88803390c044\nRBP: ffff88807e171428 R08: 0000000000000014 R09: fffffbfff2039ef1\nR10: ffffffff901cf78f R11: 0000000000000000 R12: 0000000000000003\nR13: ffffc9000375fe90 R14: ffffc9000375fe98 R15: ffffc9000375fdf8\nFS:  00005555919e1380(0000) GS:ffff8880b8700000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005555919e1ca8 CR3: 000000007f12a000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n kernel_migrate_pages+0x5b2\/0x750 mm\/mempolicy.c:1709\n __do_sys_migrate_pages mm\/mempolicy.c:1727 [inline]\n __se_sys_migrate_pages mm\/mempolicy.c:1723 [inline]\n __x64_sys_migrate_pages+0x96\/0x100 mm\/mempolicy.c:1723\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\n[akpm@linux-foundation.org: add unlikely()]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/091c1dd2d4df6edd1beebe0e5863d4034ade9572","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42d9fe2adf8613f9eea1f0c2619c9e2611eae0ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a13b2b9b0b0b04612c7d81e3b3dfb485c5f7abc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56612","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.687","lastModified":"2024-12-27T15:15:20.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/gup: handle NULL pages in unpin_user_pages()\n\nThe recent addition of \"pofs\" (pages or folios) handling to gup has a\nflaw: it assumes that unpin_user_pages() handles NULL pages in the pages**\narray.  That's not the case, as I discovered when I ran on a new\nconfiguration on my test machine.\n\nFix this by skipping NULL pages in unpin_user_pages(), just like\nunpin_folios() already does.\n\nDetails: when booting on x86 with \"numa=fake=2 movablecore=4G\" on Linux\n6.12, and running this:\n\n    tools\/testing\/selftests\/mm\/gup_longterm\n\n...I get the following crash:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nRIP: 0010:sanity_check_pinned_pages+0x3a\/0x2d0\n...\nCall Trace:\n <TASK>\n ? __die_body+0x66\/0xb0\n ? page_fault_oops+0x30c\/0x3b0\n ? do_user_addr_fault+0x6c3\/0x720\n ? irqentry_enter+0x34\/0x60\n ? exc_page_fault+0x68\/0x100\n ? asm_exc_page_fault+0x22\/0x30\n ? sanity_check_pinned_pages+0x3a\/0x2d0\n unpin_user_pages+0x24\/0xe0\n check_and_migrate_movable_pages_or_folios+0x455\/0x4b0\n __gup_longterm_locked+0x3bf\/0x820\n ? mmap_read_lock_killable+0x12\/0x50\n ? __pfx_mmap_read_lock_killable+0x10\/0x10\n pin_user_pages+0x66\/0xa0\n gup_test_ioctl+0x358\/0xb20\n __se_sys_ioctl+0x6b\/0xc0\n do_syscall_64+0x7b\/0x150\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/69d319450d1c651f3b05cd820ff285fdd810c032","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1268be280d8e484ab3606d7476edd0f14bb9961","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56613","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.793","lastModified":"2024-12-27T15:15:20.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/numa: fix memory leak due to the overwritten vma->numab_state\n\n[Problem Description]\nWhen running the hackbench program of LTP, the following memory leak is\nreported by kmemleak.\n\n  # \/opt\/ltp\/testcases\/bin\/hackbench 20 thread 1000\n  Running with 20*40 (== 800) tasks.\n\n  # dmesg | grep kmemleak\n  ...\n  kmemleak: 480 new suspected memory leaks (see \/sys\/kernel\/debug\/kmemleak)\n  kmemleak: 665 new suspected memory leaks (see \/sys\/kernel\/debug\/kmemleak)\n\n  # cat \/sys\/kernel\/debug\/kmemleak\n  unreferenced object 0xffff888cd8ca2c40 (size 64):\n    comm \"hackbench\", pid 17142, jiffies 4299780315\n    hex dump (first 32 bytes):\n      ac 74 49 00 01 00 00 00 4c 84 49 00 01 00 00 00  .tI.....L.I.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace (crc bff18fd4):\n      [<ffffffff81419a89>] __kmalloc_cache_noprof+0x2f9\/0x3f0\n      [<ffffffff8113f715>] task_numa_work+0x725\/0xa00\n      [<ffffffff8110f878>] task_work_run+0x58\/0x90\n      [<ffffffff81ddd9f8>] syscall_exit_to_user_mode+0x1c8\/0x1e0\n      [<ffffffff81dd78d5>] do_syscall_64+0x85\/0x150\n      [<ffffffff81e0012b>] entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n  ...\n\nThis issue can be consistently reproduced on three different servers:\n  * a 448-core server\n  * a 256-core server\n  * a 192-core server\n\n[Root Cause]\nSince multiple threads are created by the hackbench program (along with\nthe command argument 'thread'), a shared vma might be accessed by two or\nmore cores simultaneously. When two or more cores observe that\nvma->numab_state is NULL at the same time, vma->numab_state will be\noverwritten.\n\nAlthough current code ensures that only one thread scans the VMAs in a\nsingle 'numa_scan_period', there might be a chance for another thread\nto enter in the next 'numa_scan_period' while we have not gotten till\nnumab_state allocation [1].\n\nNote that the command `\/opt\/ltp\/testcases\/bin\/hackbench 50 process 1000`\ncannot the reproduce the issue. It is verified with 200+ test runs.\n\n[Solution]\nUse the cmpxchg atomic operation to ensure that only one thread executes\nthe vma->numab_state assignment.\n\n[1] https:\/\/lore.kernel.org\/lkml\/1794be3c-358c-4cdc-a43d-a1f841d91ef7@amd.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5f1b64e9a9b7ee9cfd32c6b2fab796e29bfed075","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f149bcc4d91ac92b32ff4949b291e6ed883dc42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a71ddd5b87cda687efa28e049e85e923689bcef9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56614","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:20.897","lastModified":"2024-12-27T15:15:20.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: fix OOB map writes when deleting elements\n\nJordy says:\n\n\"\nIn the xsk_map_delete_elem function an unsigned integer\n(map->max_entries) is compared with a user-controlled signed integer\n(k). Due to implicit type conversion, a large unsigned value for\nmap->max_entries can bypass the intended bounds check:\n\n\tif (k >= map->max_entries)\n\t\treturn -EINVAL;\n\nThis allows k to hold a negative value (between -2147483648 and -2),\nwhich is then used as an array index in m->xsk_map[k], which results\nin an out-of-bounds access.\n\n\tspin_lock_bh(&m->lock);\n\tmap_entry = &m->xsk_map[k]; \/\/ Out-of-bounds map_entry\n\told_xs = unrcu_pointer(xchg(map_entry, NULL));  \/\/ Oob write\n\tif (old_xs)\n\t\txsk_map_sock_delete(old_xs, map_entry);\n\tspin_unlock_bh(&m->lock);\n\nThe xchg operation can then be used to cause an out-of-bounds write.\nMoreover, the invalid map_entry passed to xsk_map_sock_delete can lead\nto further memory corruption.\n\"\n\nIt indeed results in following splat:\n\n[76612.897343] BUG: unable to handle page fault for address: ffffc8fc2e461108\n[76612.904330] #PF: supervisor write access in kernel mode\n[76612.909639] #PF: error_code(0x0002) - not-present page\n[76612.914855] PGD 0 P4D 0\n[76612.917431] Oops: Oops: 0002 [#1] PREEMPT SMP\n[76612.921859] CPU: 11 UID: 0 PID: 10318 Comm: a.out Not tainted 6.12.0-rc1+ #470\n[76612.929189] Hardware name: Intel Corporation S2600WFT\/S2600WFT, BIOS SE5C620.86B.02.01.0008.031920191559 03\/19\/2019\n[76612.939781] RIP: 0010:xsk_map_delete_elem+0x2d\/0x60\n[76612.944738] Code: 00 00 41 54 55 53 48 63 2e 3b 6f 24 73 38 4c 8d a7 f8 00 00 00 48 89 fb 4c 89 e7 e8 2d bf 05 00 48 8d b4 eb 00 01 00 00 31 ff <48> 87 3e 48 85 ff 74 05 e8 16 ff ff ff 4c 89 e7 e8 3e bc 05 00 31\n[76612.963774] RSP: 0018:ffffc9002e407df8 EFLAGS: 00010246\n[76612.969079] RAX: 0000000000000000 RBX: ffffc9002e461000 RCX: 0000000000000000\n[76612.976323] RDX: 0000000000000001 RSI: ffffc8fc2e461108 RDI: 0000000000000000\n[76612.983569] RBP: ffffffff80000001 R08: 0000000000000000 R09: 0000000000000007\n[76612.990812] R10: ffffc9002e407e18 R11: ffff888108a38858 R12: ffffc9002e4610f8\n[76612.998060] R13: ffff888108a38858 R14: 00007ffd1ae0ac78 R15: ffffc9002e4610c0\n[76613.005303] FS:  00007f80b6f59740(0000) GS:ffff8897e0ec0000(0000) knlGS:0000000000000000\n[76613.013517] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[76613.019349] CR2: ffffc8fc2e461108 CR3: 000000011e3ef001 CR4: 00000000007726f0\n[76613.026595] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[76613.033841] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[76613.041086] PKRU: 55555554\n[76613.043842] Call Trace:\n[76613.046331]  <TASK>\n[76613.048468]  ? __die+0x20\/0x60\n[76613.051581]  ? page_fault_oops+0x15a\/0x450\n[76613.055747]  ? search_extable+0x22\/0x30\n[76613.059649]  ? search_bpf_extables+0x5f\/0x80\n[76613.063988]  ? exc_page_fault+0xa9\/0x140\n[76613.067975]  ? asm_exc_page_fault+0x22\/0x30\n[76613.072229]  ? xsk_map_delete_elem+0x2d\/0x60\n[76613.076573]  ? xsk_map_delete_elem+0x23\/0x60\n[76613.080914]  __sys_bpf+0x19b7\/0x23c0\n[76613.084555]  __x64_sys_bpf+0x1a\/0x20\n[76613.088194]  do_syscall_64+0x37\/0xb0\n[76613.091832]  entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n[76613.096962] RIP: 0033:0x7f80b6d1e88d\n[76613.100592] Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 b5 0f 00 f7 d8 64 89 01 48\n[76613.119631] RSP: 002b:00007ffd1ae0ac68 EFLAGS: 00000206 ORIG_RAX: 0000000000000141\n[76613.131330] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f80b6d1e88d\n[76613.142632] RDX: 0000000000000098 RSI: 00007ffd1ae0ad20 RDI: 0000000000000003\n[76613.153967] RBP: 00007ffd1ae0adc0 R08: 0000000000000000 R09: 0000000000000000\n[76613.166030] R10: 00007f80b6f77040 R11: 0000000000000206 R12: 00007ffd1ae0aed8\n[76613.177130] R13: 000055ddf42ce1e9 R14: 000055ddf42d0d98 R15: 00\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32cd3db7de97c0c7a018756ce66244342fd583f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d03f705e9d7aabebc6bfa5810f8aab6d176cbb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d486b5741d987d3e0e6be4ac22cafdf94e6d1a47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed08c93d5a9801cc8f224a046411fd603c538d07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8abd03f83d5fe81e76eb93e2c4373eb9f75fd8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56615","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.013","lastModified":"2024-12-27T15:15:21.013","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: fix OOB devmap writes when deleting elements\n\nJordy reported issue against XSKMAP which also applies to DEVMAP - the\nindex used for accessing map entry, due to being a signed integer,\ncauses the OOB writes. Fix is simple as changing the type from int to\nu32, however, when compared to XSKMAP case, one more thing needs to be\naddressed.\n\nWhen map is released from system via dev_map_free(), we iterate through\nall of the entries and an iterator variable is also an int, which\nimplies OOB accesses. Again, change it to be u32.\n\nExample splat below:\n\n[  160.724676] BUG: unable to handle page fault for address: ffffc8fc2c001000\n[  160.731662] #PF: supervisor read access in kernel mode\n[  160.736876] #PF: error_code(0x0000) - not-present page\n[  160.742095] PGD 0 P4D 0\n[  160.744678] Oops: Oops: 0000 [#1] PREEMPT SMP\n[  160.749106] CPU: 1 UID: 0 PID: 520 Comm: kworker\/u145:12 Not tainted 6.12.0-rc1+ #487\n[  160.757050] Hardware name: Intel Corporation S2600WFT\/S2600WFT, BIOS SE5C620.86B.02.01.0008.031920191559 03\/19\/2019\n[  160.767642] Workqueue: events_unbound bpf_map_free_deferred\n[  160.773308] RIP: 0010:dev_map_free+0x77\/0x170\n[  160.777735] Code: 00 e8 fd 91 ed ff e8 b8 73 ed ff 41 83 7d 18 19 74 6e 41 8b 45 24 49 8b bd f8 00 00 00 31 db 85 c0 74 48 48 63 c3 48 8d 04 c7 <48> 8b 28 48 85 ed 74 30 48 8b 7d 18 48 85 ff 74 05 e8 b3 52 fa ff\n[  160.796777] RSP: 0018:ffffc9000ee1fe38 EFLAGS: 00010202\n[  160.802086] RAX: ffffc8fc2c001000 RBX: 0000000080000000 RCX: 0000000000000024\n[  160.809331] RDX: 0000000000000000 RSI: 0000000000000024 RDI: ffffc9002c001000\n[  160.816576] RBP: 0000000000000000 R08: 0000000000000023 R09: 0000000000000001\n[  160.823823] R10: 0000000000000001 R11: 00000000000ee6b2 R12: dead000000000122\n[  160.831066] R13: ffff88810c928e00 R14: ffff8881002df405 R15: 0000000000000000\n[  160.838310] FS:  0000000000000000(0000) GS:ffff8897e0c40000(0000) knlGS:0000000000000000\n[  160.846528] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  160.852357] CR2: ffffc8fc2c001000 CR3: 0000000005c32006 CR4: 00000000007726f0\n[  160.859604] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  160.866847] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  160.874092] PKRU: 55555554\n[  160.876847] Call Trace:\n[  160.879338]  <TASK>\n[  160.881477]  ? __die+0x20\/0x60\n[  160.884586]  ? page_fault_oops+0x15a\/0x450\n[  160.888746]  ? search_extable+0x22\/0x30\n[  160.892647]  ? search_bpf_extables+0x5f\/0x80\n[  160.896988]  ? exc_page_fault+0xa9\/0x140\n[  160.900973]  ? asm_exc_page_fault+0x22\/0x30\n[  160.905232]  ? dev_map_free+0x77\/0x170\n[  160.909043]  ? dev_map_free+0x58\/0x170\n[  160.912857]  bpf_map_free_deferred+0x51\/0x90\n[  160.917196]  process_one_work+0x142\/0x370\n[  160.921272]  worker_thread+0x29e\/0x3b0\n[  160.925082]  ? rescuer_thread+0x4b0\/0x4b0\n[  160.929157]  kthread+0xd4\/0x110\n[  160.932355]  ? kthread_park+0x80\/0x80\n[  160.936079]  ret_from_fork+0x2d\/0x50\n[  160.943396]  ? kthread_park+0x80\/0x80\n[  160.950803]  ret_from_fork_asm+0x11\/0x20\n[  160.958482]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f170e91d3063ca60baec4bd9f544faf3bfe29eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/178e31df1fb3d9e0890eb471da16709cbc82edee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70f3de869865f9c3da0508a5ea29f6f4c1889057","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e858930695d3ebec423e85384c95427258c294f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98c03d05936d846073df8f550e9e8bf0dde1d77f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab244dd7cf4c291f82faacdc50b45cc0f55b674d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad34306ac6836e5dd096b7d0ad4aa20cb7c8d9e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56616","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.120","lastModified":"2024-12-27T15:15:21.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/dp_mst: Fix MST sideband message body length check\n\nFix the MST sideband message body length check, which must be at least 1\nbyte accounting for the message body CRC (aka message data CRC) at the\nend of the message.\n\nThis fixes a case where an MST branch device returns a header with a\ncorrect header CRC (indicating a correctly received body length), with\nthe body length being incorrectly set to 0. This will later lead to a\nmemory corruption in drm_dp_sideband_append_payload() and the following\nerrors in dmesg:\n\n   UBSAN: array-index-out-of-bounds in drivers\/gpu\/drm\/display\/drm_dp_mst_topology.c:786:25\n   index -1 is out of range for type 'u8 [48]'\n   Call Trace:\n    drm_dp_sideband_append_payload+0x33d\/0x350 [drm_display_helper]\n    drm_dp_get_one_sb_msg+0x3ce\/0x5f0 [drm_display_helper]\n    drm_dp_mst_hpd_irq_handle_event+0xc8\/0x1580 [drm_display_helper]\n\n   memcpy: detected field-spanning write (size 18446744073709551615) of single field \"&msg->msg[msg->curlen]\" at drivers\/gpu\/drm\/display\/drm_dp_mst_topology.c:791 (size 256)\n   Call Trace:\n    drm_dp_sideband_append_payload+0x324\/0x350 [drm_display_helper]\n    drm_dp_get_one_sb_msg+0x3ce\/0x5f0 [drm_display_helper]\n    drm_dp_mst_hpd_irq_handle_event+0xc8\/0x1580 [drm_display_helper]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fc1f32c4a3421b9d803f18ec3ef49db2fb5d5ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/780fa184d4dc38ad6c4fded345ab8f9be7a63e96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd2fccac61b40eaf08d9546acc9fef958bfe4763","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c58947a8d4a500902597ee1dbadf0518d7ff8801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56617","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.227","lastModified":"2024-12-27T15:15:21.227","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncacheinfo: Allocate memory during CPU hotplug if not done from the primary CPU\n\nCommit\n\n  5944ce092b97 (\"arch_topology: Build cacheinfo from primary CPU\")\n\nadds functionality that architectures can use to optionally allocate and\nbuild cacheinfo early during boot. Commit\n\n  6539cffa9495 (\"cacheinfo: Add arch specific early level initializer\")\n\nlets secondary CPUs correct (and reallocate memory) cacheinfo data if\nneeded.\n\nIf the early build functionality is not used and cacheinfo does not need\ncorrection, memory for cacheinfo is never allocated. x86 does not use\nthe early build functionality. Consequently, during the cacheinfo CPU\nhotplug callback, last_level_cache_is_valid() attempts to dereference\na NULL pointer:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000100\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not present page\n  PGD 0 P4D 0\n  Oops: 0000 [#1] PREEPMT SMP NOPTI\n  CPU: 0 PID 19 Comm: cpuhp\/0 Not tainted 6.4.0-rc2 #1\n  RIP: 0010: last_level_cache_is_valid+0x95\/0xe0a\n\nAllocate memory for cacheinfo during the cacheinfo CPU hotplug callback\nif not done earlier.\n\nMoreover, before determining the validity of the last-level cache info,\nensure that it has been allocated. Simply checking for non-zero\ncache_leaves() is not sufficient, as some architectures (e.g., Intel\nprocessors) have non-zero cache_leaves() before allocation.\n\nDereferencing NULL cacheinfo can occur in update_per_cpu_data_slice_size().\nThis function iterates over all online CPUs. However, a CPU may have come\nonline recently, but its cacheinfo may not have been allocated yet.\n\nWhile here, remove an unnecessary indentation in allocate_cache_info().\n\n  [ bp: Massage. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23b5908b11b77ff8d7b8f7b8f11cbab2e1f4bfc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95e197354e0de07e9a20819bdae6562e4dda0f20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3fce429a1e030b50c1c91351d69b8667eef627b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56618","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.337","lastModified":"2024-12-27T15:15:21.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npmdomain: imx: gpcv2: Adjust delay after power up handshake\n\nThe udelay(5) is not enough, sometimes below kernel panic\nstill be triggered:\n\n[    4.012973] Kernel panic - not syncing: Asynchronous SError Interrupt\n[    4.012976] CPU: 2 UID: 0 PID: 186 Comm: (udev-worker) Not tainted 6.12.0-rc2-0.0.0-devel-00004-g8b1b79e88956 #1\n[    4.012982] Hardware name: Toradex Verdin iMX8M Plus WB on Dahlia Board (DT)\n[    4.012985] Call trace:\n[...]\n[    4.013029]  arm64_serror_panic+0x64\/0x70\n[    4.013034]  do_serror+0x3c\/0x70\n[    4.013039]  el1h_64_error_handler+0x30\/0x54\n[    4.013046]  el1h_64_error+0x64\/0x68\n[    4.013050]  clk_imx8mp_audiomix_runtime_resume+0x38\/0x48\n[    4.013059]  __genpd_runtime_resume+0x30\/0x80\n[    4.013066]  genpd_runtime_resume+0x114\/0x29c\n[    4.013073]  __rpm_callback+0x48\/0x1e0\n[    4.013079]  rpm_callback+0x68\/0x80\n[    4.013084]  rpm_resume+0x3bc\/0x6a0\n[    4.013089]  __pm_runtime_resume+0x50\/0x9c\n[    4.013095]  pm_runtime_get_suppliers+0x60\/0x8c\n[    4.013101]  __driver_probe_device+0x4c\/0x14c\n[    4.013108]  driver_probe_device+0x3c\/0x120\n[    4.013114]  __driver_attach+0xc4\/0x200\n[    4.013119]  bus_for_each_dev+0x7c\/0xe0\n[    4.013125]  driver_attach+0x24\/0x30\n[    4.013130]  bus_add_driver+0x110\/0x240\n[    4.013135]  driver_register+0x68\/0x124\n[    4.013142]  __platform_driver_register+0x24\/0x30\n[    4.013149]  sdma_driver_init+0x20\/0x1000 [imx_sdma]\n[    4.013163]  do_one_initcall+0x60\/0x1e0\n[    4.013168]  do_init_module+0x5c\/0x21c\n[    4.013175]  load_module+0x1a98\/0x205c\n[    4.013181]  init_module_from_file+0x88\/0xd4\n[    4.013187]  __arm64_sys_finit_module+0x258\/0x350\n[    4.013194]  invoke_syscall.constprop.0+0x50\/0xe0\n[    4.013202]  do_el0_svc+0xa8\/0xe0\n[    4.013208]  el0_svc+0x3c\/0x140\n[    4.013215]  el0t_64_sync_handler+0x120\/0x12c\n[    4.013222]  el0t_64_sync+0x190\/0x194\n[    4.013228] SMP: stopping secondary CPUs\n\nThe correct way is to wait handshake, but it needs BUS clock of\nBLK-CTL be enabled, which is in separate driver. So delay is the\nonly option here. The udelay(10) is a data got by experiment."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2379fb937de5333991c567eefd7d11b98977d059","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a63907c8c712414643b597debcd09d16b6827b23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56619","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.437","lastModified":"2024-12-27T15:15:21.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix potential out-of-bounds memory access in nilfs_find_entry()\n\nSyzbot reported that when searching for records in a directory where the\ninode's i_size is corrupted and has a large value, memory access outside\nthe folio\/page range may occur, or a use-after-free bug may be detected if\nKASAN is enabled.\n\nThis is because nilfs_last_byte(), which is called by nilfs_find_entry()\nand others to calculate the number of valid bytes of directory data in a\npage from i_size and the page index, loses the upper 32 bits of the 64-bit\nsize information due to an inappropriate type of local variable to which\nthe i_size value is assigned.\n\nThis caused a large byte offset value due to underflow in the end address\ncalculation in the calling nilfs_find_entry(), resulting in memory access\nthat exceeds the folio\/page size.\n\nFix this issue by changing the type of the local variable causing the bit\nloss from \"unsigned int\" to \"u64\".  The return value of nilfs_last_byte()\nis also of type \"unsigned int\", but it is truncated so as not to exceed\nPAGE_SIZE and no bit loss occurs, so no change is required."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09d6d05579fd46e61abf6e457bb100ff11f3a9d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31f7b57a77d4c82a34ddcb6ff35b5aa577ef153e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48eb6e7404948032bbe811c5affbe39f6b316951","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af8366625182f01f6d8465c9a3210574673af57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/985ebec4ab0a28bb5910c3b1481a40fbf7f9e61d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3afea07477baccdbdec4483f8d5e59d42a3f67f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3732102a9d638d8627d14fdf7b208462f0520e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56620","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.540","lastModified":"2024-12-27T15:15:21.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: qcom: Only free platform MSIs when ESI is enabled\n\nOtherwise, it will result in a NULL pointer dereference as below:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000008\nCall trace:\n mutex_lock+0xc\/0x54\n platform_device_msi_free_irqs_all+0x14\/0x20\n ufs_qcom_remove+0x34\/0x48 [ufs_qcom]\n platform_remove+0x28\/0x44\n device_remove+0x4c\/0x80\n device_release_driver_internal+0xd8\/0x178\n driver_detach+0x50\/0x9c\n bus_remove_driver+0x6c\/0xbc\n driver_unregister+0x30\/0x60\n platform_driver_unregister+0x14\/0x20\n ufs_qcom_pltform_exit+0x18\/0xb94 [ufs_qcom]\n __arm64_sys_delete_module+0x180\/0x260\n invoke_syscall+0x44\/0x100\n el0_svc_common.constprop.0+0xc0\/0xe0\n do_el0_svc+0x1c\/0x28\n el0_svc+0x34\/0xdc\n el0t_64_sync_handler+0xc0\/0xc4\n el0t_64_sync+0x190\/0x194"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64506b3d23a337e98a74b18dcb10c8619365f2bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f99cb5f6344ef93777fd3add7979ebf291a852df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56621","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.637","lastModified":"2024-12-27T15:15:21.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Cancel RTC work during ufshcd_remove()\n\nCurrently, RTC work is only cancelled during __ufshcd_wl_suspend(). When\nufshcd is removed in ufshcd_remove(), RTC work is not cancelled. Due to\nthis, any further trigger of the RTC work after ufshcd_remove() would\nresult in a NULL pointer dereference as below:\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000000000002a4\nWorkqueue: events ufshcd_rtc_work\nCall trace:\n _raw_spin_lock_irqsave+0x34\/0x8c\n pm_runtime_get_if_active+0x24\/0xb4\n ufshcd_rtc_work+0x124\/0x19c\n process_scheduled_works+0x18c\/0x2d8\n worker_thread+0x144\/0x280\n kthread+0x11c\/0x128\n ret_from_fork+0x10\/0x20\n\nSince RTC work accesses the ufshcd internal structures, it should be cancelled\nwhen ufshcd is removed. So do that in ufshcd_remove(), as per the order in\nufshcd_init()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1695c4361d35b7bdadd7b34f99c9c07741e181e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e7a3bb0331efb292e0fb022c36bc592137f0520","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56622","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.730","lastModified":"2024-12-27T15:15:21.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: sysfs: Prevent div by zero\n\nPrevent a division by 0 when monitoring is not enabled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0069928727c2e95ca26c738fbe6e4b241aeaaf08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b21233e5f72d10f08310689f993c1dbdfde9f2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87bf3ea841a5d77beae6bb85af36b2b3848407ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c191055c7abea4912fdb83cb9b261732b25a0c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb48e9fc0028bed94a40a9352d065909f19e333c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56623","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.823","lastModified":"2024-12-27T15:15:21.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix use after free on unload\n\nSystem crash is observed with stack trace warning of use after\nfree. There are 2 signals to tell dpc_thread to terminate (UNLOADING\nflag and kthread_stop).\n\nOn setting the UNLOADING flag when dpc_thread happens to run at the time\nand sees the flag, this causes dpc_thread to exit and clean up\nitself. When kthread_stop is called for final cleanup, this causes use\nafter free.\n\nRemove UNLOADING signal to terminate dpc_thread.  Use the kthread_stop\nas the main signal to exit dpc_thread.\n\n[596663.812935] kernel BUG at mm\/slub.c:294!\n[596663.812950] invalid opcode: 0000 [#1] SMP PTI\n[596663.812957] CPU: 13 PID: 1475935 Comm: rmmod Kdump: loaded Tainted: G          IOE    --------- -  - 4.18.0-240.el8.x86_64 #1\n[596663.812960] Hardware name: HP ProLiant DL380p Gen8, BIOS P70 08\/20\/2012\n[596663.812974] RIP: 0010:__slab_free+0x17d\/0x360\n\n...\n[596663.813008] Call Trace:\n[596663.813022]  ? __dentry_kill+0x121\/0x170\n[596663.813030]  ? _cond_resched+0x15\/0x30\n[596663.813034]  ? _cond_resched+0x15\/0x30\n[596663.813039]  ? wait_for_completion+0x35\/0x190\n[596663.813048]  ? try_to_wake_up+0x63\/0x540\n[596663.813055]  free_task+0x5a\/0x60\n[596663.813061]  kthread_stop+0xf3\/0x100\n[596663.813103]  qla2x00_remove_one+0x284\/0x440 [qla2xxx]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07c903db0a2ff84b68efa1a74a4de353ea591eb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/12f04fc8580eafb0510f805749553eb6213f323e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/15369e774f27ec790f207de87c0b541e3f90b22d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6abf16d3c915b2feb68c1c8b25fcb71b13f98478","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3e6f25176f248762a24d25ab8cf8c5e90874f80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca36d9d53745d5ec8946ef85006d4da605ea7c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56624","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:21.933","lastModified":"2024-12-27T15:15:21.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Fix out_fput in iommufd_fault_alloc()\n\nAs fput() calls the file->f_op->release op, where fault obj and ictx are\ngetting released, there is no need to release these two after fput() one\nmore time, which would result in imbalanced refcounts:\n  refcount_t: decrement hit 0; leaking memory.\n  WARNING: CPU: 48 PID: 2369 at lib\/refcount.c:31 refcount_warn_saturate+0x60\/0x230\n  Call trace:\n   refcount_warn_saturate+0x60\/0x230 (P)\n   refcount_warn_saturate+0x60\/0x230 (L)\n   iommufd_fault_fops_release+0x9c\/0xe0 [iommufd]\n  ...\n  VFS: Close: file count is 0 (f_op=iommufd_fops [iommufd])\n  WARNING: CPU: 48 PID: 2369 at fs\/open.c:1507 filp_flush+0x3c\/0xf0\n  Call trace:\n   filp_flush+0x3c\/0xf0 (P)\n   filp_flush+0x3c\/0xf0 (L)\n   __arm64_sys_close+0x34\/0x98\n  ...\n  imbalanced put on file reference count\n  WARNING: CPU: 48 PID: 2369 at fs\/file.c:74 __file_ref_put+0x100\/0x138\n  Call trace:\n   __file_ref_put+0x100\/0x138 (P)\n   __file_ref_put+0x100\/0x138 (L)\n   __fput_sync+0x4c\/0xd0\n\nDrop those two lines to fix the warnings above."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b3f30c8edbf9a122ce01f13f0f41fbca5f1d41d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af7f4780514f850322b2959032ecaa96e4b26472","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56625","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.033","lastModified":"2024-12-27T15:15:22.033","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: dev: can_set_termination(): allow sleeping GPIOs\n\nIn commit 6e86a1543c37 (\"can: dev: provide optional GPIO based\ntermination support\") GPIO based termination support was added.\n\nFor no particular reason that patch uses gpiod_set_value() to set the\nGPIO. This leads to the following warning, if the systems uses a\nsleeping GPIO, i.e. behind an I2C port expander:\n\n| WARNING: CPU: 0 PID: 379 at \/drivers\/gpio\/gpiolib.c:3496 gpiod_set_value+0x50\/0x6c\n| CPU: 0 UID: 0 PID: 379 Comm: ip Not tainted 6.11.0-20241016-1 #1 823affae360cc91126e4d316d7a614a8bf86236c\n\nReplace gpiod_set_value() by gpiod_set_value_cansleep() to allow the\nuse of sleeping GPIOs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ac442f25c19953d2f33b92549628b0aeac83db6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b0c5bb437d31a9864f633b85cbc42d2f6c51c96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46637a608fb1ee871a0ad8bf70d917d5d95ac251","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee1dfbdd8b4b6de85e96ae2059dc9c1bdb6b49b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faa0a1975a6fbce30616775216606eb8d6388ea1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56626","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.140","lastModified":"2024-12-27T15:15:22.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix Out-of-Bounds Write in ksmbd_vfs_stream_write\n\nAn offset from client could be a negative value, It could allows\nto write data outside the bounds of the allocated buffer.\nNote that this issue is coming when setting\n'vfs objects = streams_xattr parameter' in ksmbd.conf."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/164d3597d26d9acff5d5b8bc3208bdcca942dd6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/313dab082289e460391c82d855430ec8a28ddf81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cd7490fc0f268883e86e840cda5311257af69ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5797f195c67132d061d29c57a7c6d30530686f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56627","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.250","lastModified":"2024-12-27T15:15:22.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix Out-of-Bounds Read in ksmbd_vfs_stream_read\n\nAn offset from client could be a negative value, It could lead\nto an out-of-bounds read from the stream_buf.\nNote that this issue is coming when setting\n'vfs objects = streams_xattr parameter' in ksmbd.conf."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27de4295522e9a33e4a3fc72f7b8193df9eebe41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81eed631935f2c52cdaf6691c6d48e0b06e8ad73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de4d790dcf53be41736239d7ee63849a16ff5d10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc342cf86e2dc4d2edb0fc2ff5e28b6c7845adb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56628","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.357","lastModified":"2024-12-27T15:15:22.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: Add architecture specific huge_pte_clear()\n\nWhen executing mm selftests run_vmtests.sh, there is such an error:\n\n BUG: Bad page state in process uffd-unit-tests  pfn:00000\n page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x0\n flags: 0xffff0000002000(reserved|node=0|zone=0|lastcpupid=0xffff)\n raw: 00ffff0000002000 ffffbf0000000008 ffffbf0000000008 0000000000000000\n raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\n page dumped because: PAGE_FLAGS_CHECK_AT_FREE flag(s) set\n Modules linked in: snd_seq_dummy snd_seq snd_seq_device rfkill vfat fat\n    virtio_balloon efi_pstore virtio_net pstore net_failover failover fuse\n    nfnetlink virtio_scsi virtio_gpu virtio_dma_buf dm_multipath efivarfs\n CPU: 2 UID: 0 PID: 1913 Comm: uffd-unit-tests Not tainted 6.12.0 #184\n Hardware name: QEMU QEMU Virtual Machine, BIOS unknown 2\/2\/2022\n Stack : 900000047c8ac000 0000000000000000 9000000000223a7c 900000047c8ac000\n         900000047c8af690 900000047c8af698 0000000000000000 900000047c8af7d8\n         900000047c8af7d0 900000047c8af7d0 900000047c8af5b0 0000000000000001\n         0000000000000001 900000047c8af698 10b3c7d53da40d26 0000010000000000\n         0000000000000022 0000000fffffffff fffffffffe000000 ffff800000000000\n         000000000000002f 0000800000000000 000000017a6d4000 90000000028f8940\n         0000000000000000 0000000000000000 90000000025aa5e0 9000000002905000\n         0000000000000000 90000000028f8940 ffff800000000000 0000000000000000\n         0000000000000000 0000000000000000 9000000000223a94 000000012001839c\n         00000000000000b0 0000000000000004 0000000000000000 0000000000071c1d\n         ...\n Call Trace:\n [<9000000000223a94>] show_stack+0x5c\/0x180\n [<9000000001c3fd64>] dump_stack_lvl+0x6c\/0xa0\n [<900000000056aa08>] bad_page+0x1a0\/0x1f0\n [<9000000000574978>] free_unref_folios+0xbf0\/0xd20\n [<90000000004e65cc>] folios_put_refs+0x1a4\/0x2b8\n [<9000000000599a0c>] free_pages_and_swap_cache+0x164\/0x260\n [<9000000000547698>] tlb_batch_pages_flush+0xa8\/0x1c0\n [<9000000000547f30>] tlb_finish_mmu+0xa8\/0x218\n [<9000000000543cb8>] exit_mmap+0x1a0\/0x360\n [<9000000000247658>] __mmput+0x78\/0x200\n [<900000000025583c>] do_exit+0x43c\/0xde8\n [<9000000000256490>] do_group_exit+0x68\/0x110\n [<9000000000256554>] sys_exit_group+0x1c\/0x20\n [<9000000001c413b4>] do_syscall+0x94\/0x130\n [<90000000002216d8>] handle_syscall+0xb8\/0x158\n Disabling lock debugging due to kernel taint\n BUG: non-zero pgtables_bytes on freeing mm: -16384\n\nOn LoongArch system, invalid huge pte entry should be invalid_pte_table\nor a single _PAGE_HUGE bit rather than a zero value. And it should be\nthe same with invalid pmd entry, since pmd_none() is called by function\nfree_pgd_range() and pmd_none() return 0 by huge_pte_clear(). So single\n_PAGE_HUGE bit is also treated as a valid pte table and free_pte_range()\nwill be called in free_pmd_range().\n\n  free_pmd_range()\n        pmd = pmd_offset(pud, addr);\n        do {\n                next = pmd_addr_end(addr, end);\n                if (pmd_none_or_clear_bad(pmd))\n                        continue;\n                free_pte_range(tlb, pmd, addr);\n        } while (pmd++, addr = next, addr != end);\n\nHere invalid_pte_table is used for both invalid huge pte entry and\npmd entry."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7cd1f5f77925ae905a57296932f0f9ef0dc364f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dfbf011a57b9e1a40f5ce8080a53c497e105c6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b602190cf2d8ac957be0011e418ed6c3b49b9a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dba3c45e333a3a2a01395b5f5e5f88f8baba74e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56629","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.463","lastModified":"2024-12-27T15:15:22.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: wacom: fix when get product name maybe null pointer\n\nDue to incorrect dev->product reporting by certain devices, null\npointer dereferences occur when dev->product is empty, leading to\npotential system crashes.\n\nThis issue was found on EXCELSIOR DL37-D05 device with\nLoongson-LS3A6000-7A2000-DL37 motherboard.\n\nKernel logs:\n[   56.470885] usb 4-3: new full-speed USB device number 4 using ohci-pci\n[   56.671638] usb 4-3: string descriptor 0 read error: -22\n[   56.671644] usb 4-3: New USB device found, idVendor=056a, idProduct=0374, bcdDevice= 1.07\n[   56.671647] usb 4-3: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[   56.678839] hid-generic 0003:056A:0374.0004: hiddev0,hidraw3: USB HID v1.10 Device [HID 056a:0374] on usb-0000:00:05.0-3\/input0\n[   56.697719] CPU 2 Unable to handle kernel paging request at virtual address 0000000000000000, era == 90000000066e35c8, ra == ffff800004f98a80\n[   56.697732] Oops[#1]:\n[   56.697734] CPU: 2 PID: 2742 Comm: (udev-worker) Tainted: G           OE      6.6.0-loong64-desktop #25.00.2000.015\n[   56.697737] Hardware name: Inspur CE520L2\/C09901N000000000, BIOS 2.09.00 10\/11\/2024\n[   56.697739] pc 90000000066e35c8 ra ffff800004f98a80 tp 9000000125478000 sp 900000012547b8a0\n[   56.697741] a0 0000000000000000 a1 ffff800004818b28 a2 0000000000000000 a3 0000000000000000\n[   56.697743] a4 900000012547b8f0 a5 0000000000000000 a6 0000000000000000 a7 0000000000000000\n[   56.697745] t0 ffff800004818b2d t1 0000000000000000 t2 0000000000000003 t3 0000000000000005\n[   56.697747] t4 0000000000000000 t5 0000000000000000 t6 0000000000000000 t7 0000000000000000\n[   56.697748] t8 0000000000000000 u0 0000000000000000 s9 0000000000000000 s0 900000011aa48028\n[   56.697750] s1 0000000000000000 s2 0000000000000000 s3 ffff800004818e80 s4 ffff800004810000\n[   56.697751] s5 90000001000b98d0 s6 ffff800004811f88 s7 ffff800005470440 s8 0000000000000000\n[   56.697753]    ra: ffff800004f98a80 wacom_update_name+0xe0\/0x300 [wacom]\n[   56.697802]   ERA: 90000000066e35c8 strstr+0x28\/0x120\n[   56.697806]  CRMD: 000000b0 (PLV0 -IE -DA +PG DACF=CC DACM=CC -WE)\n[   56.697816]  PRMD: 0000000c (PPLV0 +PIE +PWE)\n[   56.697821]  EUEN: 00000000 (-FPE -SXE -ASXE -BTE)\n[   56.697827]  ECFG: 00071c1d (LIE=0,2-4,10-12 VS=7)\n[   56.697831] ESTAT: 00010000 [PIL] (IS= ECode=1 EsubCode=0)\n[   56.697835]  BADV: 0000000000000000\n[   56.697836]  PRID: 0014d000 (Loongson-64bit, Loongson-3A6000)\n[   56.697838] Modules linked in: wacom(+) bnep bluetooth rfkill qrtr nls_iso8859_1 nls_cp437 snd_hda_codec_conexant snd_hda_codec_generic ledtrig_audio snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd soundcore input_leds mousedev led_class joydev deepin_netmonitor(OE) fuse nfnetlink dmi_sysfs ip_tables x_tables overlay amdgpu amdxcp drm_exec gpu_sched drm_buddy radeon drm_suballoc_helper i2c_algo_bit drm_ttm_helper r8169 ttm drm_display_helper spi_loongson_pci xhci_pci cec xhci_pci_renesas spi_loongson_core hid_generic realtek gpio_loongson_64bit\n[   56.697887] Process (udev-worker) (pid: 2742, threadinfo=00000000aee0d8b4, task=00000000a9eff1f3)\n[   56.697890] Stack : 0000000000000000 ffff800004817e00 0000000000000000 0000251c00000000\n[   56.697896]         0000000000000000 00000011fffffffd 0000000000000000 0000000000000000\n[   56.697901]         0000000000000000 1b67a968695184b9 0000000000000000 90000001000b98d0\n[   56.697906]         90000001000bb8d0 900000011aa48028 0000000000000000 ffff800004f9d74c\n[   56.697911]         90000001000ba000 ffff800004f9ce58 0000000000000000 ffff800005470440\n[   56.697916]         ffff800004811f88 90000001000b98d0 9000000100da2aa8 90000001000bb8d0\n[   56.697921]         0000000000000000 90000001000ba000 900000011aa48028 ffff800004f9d74c\n[   56.697926]         ffff8000054704e8 90000001000bb8b8 90000001000ba000 0000000000000000\n[   56.697931]         90000001000bb8d0 \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cd323c55bd3f356bf23ae1b4c20100abcdc29d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ed3e3a3ac06af8a6391c3d6a7791b7967d7d43a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5912a921289edb34d40aeab32ea6d52d41e75fed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59548215b76be98cf3422eea9a67d6ea578aca3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7f0509556fa2f9789639dbcee9eed46e471ccef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d031eef3cc2e3bf524509e38fb898e5335c85c96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e689bc6697a7fcebd4a945ab0b1e1112c76024d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56630","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.577","lastModified":"2024-12-27T15:15:22.577","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: free inode when ocfs2_get_init_inode() fails\n\nsyzbot is reporting busy inodes after unmount, for commit 9c89fe0af826\n(\"ocfs2: Handle error from dquot_initialize()\") forgot to call iput() when\nnew_inode() succeeded and dquot_initialize() failed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03db61c43c8e2729896fda6b9a95c7fb5c875c20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67c2c6d0564ca05348ba4f8f6eaf7a0713f56c15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/911fcc95b530615b484e8920741fc5e4bc4e684a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/965b5dd1894f4525f38c1b5f99b0106a07dbb5db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c19ea59965ebb482e227532f7bbb01792fb028c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a84d507d3290aca249b44ae992af9e10590cc5f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5327720a4655303ffa3f632d86ee205dd783f32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56631","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.690","lastModified":"2024-12-27T15:15:22.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Fix slab-use-after-free read in sg_release()\n\nFix a use-after-free bug in sg_release(), detected by syzbot with KASAN:\n\nBUG: KASAN: slab-use-after-free in lock_release+0x151\/0xa30\nkernel\/locking\/lockdep.c:5838\n__mutex_unlock_slowpath+0xe2\/0x750 kernel\/locking\/mutex.c:912\nsg_release+0x1f4\/0x2e0 drivers\/scsi\/sg.c:407\n\nIn sg_release(), the function kref_put(&sfp->f_ref, sg_remove_sfp) is\ncalled before releasing the open_rel_lock mutex. The kref_put() call may\ndecrement the reference count of sfp to zero, triggering its cleanup\nthrough sg_remove_sfp(). This cleanup includes scheduling deferred work\nvia sg_remove_sfp_usercontext(), which ultimately frees sfp.\n\nAfter kref_put(), sg_release() continues to unlock open_rel_lock and may\nreference sfp or sdp. If sfp has already been freed, this results in a\nslab-use-after-free error.\n\nMove the kref_put(&sfp->f_ref, sg_remove_sfp) call after unlocking the\nopen_rel_lock mutex. This ensures:\n\n - No references to sfp or sdp occur after the reference count is\n   decremented.\n\n - Cleanup functions such as sg_remove_sfp() and\n   sg_remove_sfp_usercontext() can safely execute without impacting the\n   mutex handling in sg_release().\n\nThe fix has been tested and validated by syzbot. This patch closes the\nbug reported at the following syzkaller link and ensures proper\nsequencing of resource cleanup and mutex operations, eliminating the\nrisk of use-after-free errors in sg_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f5e2f1ca5875728fcf62bc1a054707444ab4960","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59b30afa578637169e2819536bb66459fdddc39d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f10593ad9bc36921f623361c9e3dd96bd52d85ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56632","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.803","lastModified":"2024-12-27T15:15:22.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: fix the memleak while create new ctrl failed\n\nNow while we create new ctrl failed, we have not free the\ntagset occupied by admin_q, here try to fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ceff9ac13a2478afddce85414d404e6aff6425f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fec55c29e54d3ca6fe9d7d7d9266098b4514fd34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56633","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:22.933","lastModified":"2024-12-27T15:15:22.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp_bpf: Fix the sk_mem_uncharge logic in tcp_bpf_sendmsg\n\nThe current sk memory accounting logic in __SK_REDIRECT is pre-uncharging\ntosend bytes, which is either msg->sg.size or a smaller value apply_bytes.\n\nPotential problems with this strategy are as follows:\n\n- If the actual sent bytes are smaller than tosend, we need to charge some\n  bytes back, as in line 487, which is okay but seems not clean.\n\n- When tosend is set to apply_bytes, as in line 417, and (ret < 0), we may\n  miss uncharging (msg->sg.size - apply_bytes) bytes.\n\n[...]\n415 tosend = msg->sg.size;\n416 if (psock->apply_bytes && psock->apply_bytes < tosend)\n417   tosend = psock->apply_bytes;\n[...]\n443 sk_msg_return(sk, msg, tosend);\n444 release_sock(sk);\n446 origsize = msg->sg.size;\n447 ret = tcp_bpf_sendmsg_redir(sk_redir, redir_ingress,\n448                             msg, tosend, flags);\n449 sent = origsize - msg->sg.size;\n[...]\n454 lock_sock(sk);\n455 if (unlikely(ret < 0)) {\n456   int free = sk_msg_free_nocharge(sk, msg);\n458   if (!cork)\n459     *copied -= free;\n460 }\n[...]\n487 if (eval == __SK_REDIRECT)\n488   sk_mem_charge(sk, tosend - sent);\n[...]\n\nWhen running the selftest test_txmsg_redir_wait_sndmem with txmsg_apply,\nthe following warning will be reported:\n\n------------[ cut here ]------------\nWARNING: CPU: 6 PID: 57 at net\/ipv4\/af_inet.c:156 inet_sock_destruct+0x190\/0x1a0\nModules linked in:\nCPU: 6 UID: 0 PID: 57 Comm: kworker\/6:0 Not tainted 6.12.0-rc1.bm.1-amd64+ #43\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04\/01\/2014\nWorkqueue: events sk_psock_destroy\nRIP: 0010:inet_sock_destruct+0x190\/0x1a0\nRSP: 0018:ffffad0a8021fe08 EFLAGS: 00010206\nRAX: 0000000000000011 RBX: ffff9aab4475b900 RCX: ffff9aab481a0800\nRDX: 0000000000000303 RSI: 0000000000000011 RDI: ffff9aab4475b900\nRBP: ffff9aab4475b990 R08: 0000000000000000 R09: ffff9aab40050ec0\nR10: 0000000000000000 R11: ffff9aae6fdb1d01 R12: ffff9aab49c60400\nR13: ffff9aab49c60598 R14: ffff9aab49c60598 R15: dead000000000100\nFS:  0000000000000000(0000) GS:ffff9aae6fd80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffec7e47bd8 CR3: 00000001a1a1c004 CR4: 0000000000770ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n<TASK>\n? __warn+0x89\/0x130\n? inet_sock_destruct+0x190\/0x1a0\n? report_bug+0xfc\/0x1e0\n? handle_bug+0x5c\/0xa0\n? exc_invalid_op+0x17\/0x70\n? asm_exc_invalid_op+0x1a\/0x20\n? inet_sock_destruct+0x190\/0x1a0\n__sk_destruct+0x25\/0x220\nsk_psock_destroy+0x2b2\/0x310\nprocess_scheduled_works+0xa3\/0x3e0\nworker_thread+0x117\/0x240\n? __pfx_worker_thread+0x10\/0x10\nkthread+0xcf\/0x100\n? __pfx_kthread+0x10\/0x10\nret_from_fork+0x31\/0x40\n? __pfx_kthread+0x10\/0x10\nret_from_fork_asm+0x1a\/0x30\n<\/TASK>\n---[ end trace 0000000000000000 ]---\n\nIn __SK_REDIRECT, a more concise way is delaying the uncharging after sent\nbytes are finalized, and uncharge this value. When (ret < 0), we shall\ninvoke sk_msg_free.\n\nSame thing happens in case __SK_DROP, when tosend is set to apply_bytes,\nwe may miss uncharging (msg->sg.size - apply_bytes) bytes. The same\nwarning will be reported in selftest.\n\n[...]\n468 case __SK_DROP:\n469 default:\n470 sk_msg_free_partial(sk, msg, tosend);\n471 sk_msg_apply_bytes(psock, tosend);\n472 *copied -= (tosend + delta);\n473 return -EACCES;\n[...]\n\nSo instead of sk_msg_free_partial we can do sk_msg_free here."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d6cd1151e26fc7c2d5daa85e8984aaa685a1a12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/206d56f41a1509cadd06e2178c26cb830e45057d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/456f08d24afa51b5eb816c42e4ca1c44a247bd42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c9e3bb43a354a2245caebbbbb4a5b8c034fdd56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/905d82e6e77d16ec3e089c92b7b59a14899dfc1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca70b8baf2bd125b2a4d96e76db79375c07d7ff2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbedc7e142df5ea238a46fdd7462c1c42cd36a10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56634","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.073","lastModified":"2024-12-27T15:15:23.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: grgpio: Add NULL check in grgpio_probe\n\ndevm_kasprintf() can return a NULL pointer on failure,but this\nreturned value in grgpio_probe is not checked.\nAdd NULL check in grgpio_probe, to handle kernel NULL\npointer dereference error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/050b23d081da0f29474de043e9538c1f7a351b3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09adf8792b61c09ae543972a1ece1884ef773848","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4733f68e59bb7b9e3d395699abb18366954b9ba7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53ff0caa6ad57372d426b4f48fc0f66df43a731f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d2ca6ac3711a4f4015d26b7cc84f325ac608edb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad4dfa7ea7f5f7e9a3c78627cfc749bc7005ca7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db2fc255fcf41f536ac8666409849e11659af88d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56635","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.207","lastModified":"2024-12-27T15:15:23.207","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: avoid potential UAF in default_operstate()\n\nsyzbot reported an UAF in default_operstate() [1]\n\nIssue is a race between device and netns dismantles.\n\nAfter calling __rtnl_unlock() from netdev_run_todo(),\nwe can not assume the netns of each device is still alive.\n\nMake sure the device is not in NETREG_UNREGISTERED state,\nand add an ASSERT_RTNL() before the call to\n__dev_get_by_index().\n\nWe might move this ASSERT_RTNL() in __dev_get_by_index()\nin the future.\n\n[1]\n\nBUG: KASAN: slab-use-after-free in __dev_get_by_index+0x5d\/0x110 net\/core\/dev.c:852\nRead of size 8 at addr ffff888043eba1b0 by task syz.0.0\/5339\n\nCPU: 0 UID: 0 PID: 5339 Comm: syz.0.0 Not tainted 6.12.0-syzkaller-10296-gaaf20f870da0 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\nCall Trace:\n <TASK>\n  __dump_stack lib\/dump_stack.c:94 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n  print_address_description mm\/kasan\/report.c:378 [inline]\n  print_report+0x169\/0x550 mm\/kasan\/report.c:489\n  kasan_report+0x143\/0x180 mm\/kasan\/report.c:602\n  __dev_get_by_index+0x5d\/0x110 net\/core\/dev.c:852\n  default_operstate net\/core\/link_watch.c:51 [inline]\n  rfc2863_policy+0x224\/0x300 net\/core\/link_watch.c:67\n  linkwatch_do_dev+0x3e\/0x170 net\/core\/link_watch.c:170\n  netdev_run_todo+0x461\/0x1000 net\/core\/dev.c:10894\n  rtnl_unlock net\/core\/rtnetlink.c:152 [inline]\n  rtnl_net_unlock include\/linux\/rtnetlink.h:133 [inline]\n  rtnl_dellink+0x760\/0x8d0 net\/core\/rtnetlink.c:3520\n  rtnetlink_rcv_msg+0x791\/0xcf0 net\/core\/rtnetlink.c:6911\n  netlink_rcv_skb+0x1e3\/0x430 net\/netlink\/af_netlink.c:2541\n  netlink_unicast_kernel net\/netlink\/af_netlink.c:1321 [inline]\n  netlink_unicast+0x7f6\/0x990 net\/netlink\/af_netlink.c:1347\n  netlink_sendmsg+0x8e4\/0xcb0 net\/netlink\/af_netlink.c:1891\n  sock_sendmsg_nosec net\/socket.c:711 [inline]\n  __sock_sendmsg+0x221\/0x270 net\/socket.c:726\n  ____sys_sendmsg+0x52a\/0x7e0 net\/socket.c:2583\n  ___sys_sendmsg net\/socket.c:2637 [inline]\n  __sys_sendmsg+0x269\/0x350 net\/socket.c:2669\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7f2a3cb80809\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f2a3d9cd058 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f2a3cd45fa0 RCX: 00007f2a3cb80809\nRDX: 0000000000000000 RSI: 0000000020000000 RDI: 0000000000000008\nRBP: 00007f2a3cbf393e R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007f2a3cd45fa0 R15: 00007ffd03bc65c8\n <\/TASK>\n\nAllocated by task 5339:\n  kasan_save_stack mm\/kasan\/common.c:47 [inline]\n  kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n  poison_kmalloc_redzone mm\/kasan\/common.c:377 [inline]\n  __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:394\n  kasan_kmalloc include\/linux\/kasan.h:260 [inline]\n  __kmalloc_cache_noprof+0x243\/0x390 mm\/slub.c:4314\n  kmalloc_noprof include\/linux\/slab.h:901 [inline]\n  kmalloc_array_noprof include\/linux\/slab.h:945 [inline]\n  netdev_create_hash net\/core\/dev.c:11870 [inline]\n  netdev_init+0x10c\/0x250 net\/core\/dev.c:11890\n  ops_init+0x31e\/0x590 net\/core\/net_namespace.c:138\n  setup_net+0x287\/0x9e0 net\/core\/net_namespace.c:362\n  copy_net_ns+0x33f\/0x570 net\/core\/net_namespace.c:500\n  create_new_namespaces+0x425\/0x7b0 kernel\/nsproxy.c:110\n  unshare_nsproxy_namespaces+0x124\/0x180 kernel\/nsproxy.c:228\n  ksys_unshare+0x57d\/0xa70 kernel\/fork.c:3314\n  __do_sys_unshare kernel\/fork.c:3385 [inline]\n  __se_sys_unshare kernel\/fork.c:3383 [inline]\n  __x64_sys_unshare+0x38\/0x40 kernel\/fork.c:3383\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x8\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/316183d58319f191e16503bc2dffa156c4442df2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3265aab0736f78bb218200b06b1abb525c316269","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/750e51603395e755537da08f745864c93e3ce741","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56636","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.320","lastModified":"2024-12-27T15:15:23.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: do not assume mac header is set in geneve_xmit_skb()\n\nWe should not assume mac header is set in output path.\n\nUse skb_eth_hdr() instead of eth_hdr() to fix the issue.\n\nsysbot reported the following :\n\n WARNING: CPU: 0 PID: 11635 at include\/linux\/skbuff.h:3052 skb_mac_header include\/linux\/skbuff.h:3052 [inline]\n WARNING: CPU: 0 PID: 11635 at include\/linux\/skbuff.h:3052 eth_hdr include\/linux\/if_ether.h:24 [inline]\n WARNING: CPU: 0 PID: 11635 at include\/linux\/skbuff.h:3052 geneve_xmit_skb drivers\/net\/geneve.c:898 [inline]\n WARNING: CPU: 0 PID: 11635 at include\/linux\/skbuff.h:3052 geneve_xmit+0x4c38\/0x5730 drivers\/net\/geneve.c:1039\nModules linked in:\nCPU: 0 UID: 0 PID: 11635 Comm: syz.4.1423 Not tainted 6.12.0-syzkaller-10296-gaaf20f870da0 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\n RIP: 0010:skb_mac_header include\/linux\/skbuff.h:3052 [inline]\n RIP: 0010:eth_hdr include\/linux\/if_ether.h:24 [inline]\n RIP: 0010:geneve_xmit_skb drivers\/net\/geneve.c:898 [inline]\n RIP: 0010:geneve_xmit+0x4c38\/0x5730 drivers\/net\/geneve.c:1039\nCode: 21 c6 02 e9 35 d4 ff ff e8 a5 48 4c fb 90 0f 0b 90 e9 fd f5 ff ff e8 97 48 4c fb 90 0f 0b 90 e9 d8 f5 ff ff e8 89 48 4c fb 90 <0f> 0b 90 e9 41 e4 ff ff e8 7b 48 4c fb 90 0f 0b 90 e9 cd e7 ff ff\nRSP: 0018:ffffc90003b2f870 EFLAGS: 00010283\nRAX: 000000000000037a RBX: 000000000000ffff RCX: ffffc9000dc3d000\nRDX: 0000000000080000 RSI: ffffffff86428417 RDI: 0000000000000003\nRBP: ffffc90003b2f9f0 R08: 0000000000000003 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000002 R12: ffff88806603c000\nR13: 0000000000000000 R14: ffff8880685b2780 R15: 0000000000000e23\nFS:  00007fdc2deed6c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b30a1dff8 CR3: 0000000056b8c000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  __netdev_start_xmit include\/linux\/netdevice.h:5002 [inline]\n  netdev_start_xmit include\/linux\/netdevice.h:5011 [inline]\n  __dev_direct_xmit+0x58a\/0x720 net\/core\/dev.c:4490\n  dev_direct_xmit include\/linux\/netdevice.h:3181 [inline]\n  packet_xmit+0x1e4\/0x360 net\/packet\/af_packet.c:285\n  packet_snd net\/packet\/af_packet.c:3146 [inline]\n  packet_sendmsg+0x2700\/0x5660 net\/packet\/af_packet.c:3178\n  sock_sendmsg_nosec net\/socket.c:711 [inline]\n  __sock_sendmsg net\/socket.c:726 [inline]\n  __sys_sendto+0x488\/0x4f0 net\/socket.c:2197\n  __do_sys_sendto net\/socket.c:2204 [inline]\n  __se_sys_sendto net\/socket.c:2200 [inline]\n  __x64_sys_sendto+0xe0\/0x1c0 net\/socket.c:2200\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/177b72ed7c77b11e46dd4336d73a87a77a5603af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ee7bdc7cb40abfe658a71fbd10c7db2f4fc4f9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8588c99c7d47448fcae39e3227d6e2bb97aad86d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97ce3a4ec55eac6b5e2949ffb04028d604afda3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b65958284401016b983078c68f70b047537f4aba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9fa09ca004befe9cf826d6820439cb6f93cecd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56637","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.430","lastModified":"2024-12-27T15:15:23.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: Hold module reference while requesting a module\n\nUser space may unload ip_set.ko while it is itself requesting a set type\nbackend module, leading to a kernel crash. The race condition may be\nprovoked by inserting an mdelay() right after the nfnl_unlock() call."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e67805e805c1f3edd6f43adbe08ea14b552694b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/456f010bfaefde84d3390c755eedb1b0a5857c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bae60a933ba5d16eed55c6b279be51bcbbc79b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6099b5d3e37145484fac4b8b4070c3f1abfb3519","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90bf312a6b6b3d6012137f6776a4052ee85e0340","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba5e070f36682d07ca7ad2a953e6c9d96be19dca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5e2d3024753fdaca818b822e3827614bacbdccf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56638","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.527","lastModified":"2024-12-27T15:15:23.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_inner: incorrect percpu area handling under softirq\n\nSoftirq can interrupt ongoing packet from process context that is\nwalking over the percpu area that contains inner header offsets.\n\nDisable bh and perform three checks before restoring the percpu inner\nheader offsets to validate that the percpu area is valid for this\nskbuff:\n\n1) If the NFT_PKTINFO_INNER_FULL flag is set on, then this skbuff\n   has already been parsed before for inner header fetching to\n   register.\n\n2) Validate that the percpu area refers to this skbuff using the\n   skbuff pointer as a cookie. If there is a cookie mismatch, then\n   this skbuff needs to be parsed again.\n\n3) Finally, validate if the percpu area refers to this tunnel type.\n\nOnly after these three checks the percpu area is restored to a on-stack\ncopy and bh is enabled again.\n\nAfter inner header fetching, the on-stack copy is stored back to the\npercpu area."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/53c7314208c865086d78b4e88da53bc33da0b603","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b1d83da254be3bf054965c8f3b1ad976f460ae5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da5cc778e7bf78fe525bc90ec2043f41415c31d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56639","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.633","lastModified":"2024-12-27T15:15:23.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hsr: must allocate more bytes for RedBox support\n\nBlamed commit forgot to change hsr_init_skb() to allocate\nlarger skb for RedBox case.\n\nIndeed, send_hsr_supervision_frame() will add\ntwo additional components (struct hsr_sup_tlv\nand struct hsr_sup_payload)\n\nsyzbot reported the following crash:\nskbuff: skb_over_panic: text:ffffffff8afd4b0a len:34 put:6 head:ffff88802ad29e00 data:ffff88802ad29f22 tail:0x144 end:0x140 dev:gretap0\n------------[ cut here ]------------\n kernel BUG at net\/core\/skbuff.c:206 !\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI\nCPU: 2 UID: 0 PID: 7611 Comm: syz-executor Not tainted 6.12.0-syzkaller #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n RIP: 0010:skb_panic+0x157\/0x1d0 net\/core\/skbuff.c:206\nCode: b6 04 01 84 c0 74 04 3c 03 7e 21 8b 4b 70 41 56 45 89 e8 48 c7 c7 a0 7d 9b 8c 41 57 56 48 89 ee 52 4c 89 e2 e8 9a 76 79 f8 90 <0f> 0b 4c 89 4c 24 10 48 89 54 24 08 48 89 34 24 e8 94 76 fb f8 4c\nRSP: 0018:ffffc90000858ab8 EFLAGS: 00010282\nRAX: 0000000000000087 RBX: ffff8880598c08c0 RCX: ffffffff816d3e69\nRDX: 0000000000000000 RSI: ffffffff816de786 RDI: 0000000000000005\nRBP: ffffffff8c9b91c0 R08: 0000000000000005 R09: 0000000000000000\nR10: 0000000000000302 R11: ffffffff961cc1d0 R12: ffffffff8afd4b0a\nR13: 0000000000000006 R14: ffff88804b938130 R15: 0000000000000140\nFS:  000055558a3d6500(0000) GS:ffff88806a800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f1295974ff8 CR3: 000000002ab6e000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <IRQ>\n  skb_over_panic net\/core\/skbuff.c:211 [inline]\n  skb_put+0x174\/0x1b0 net\/core\/skbuff.c:2617\n  send_hsr_supervision_frame+0x6fa\/0x9e0 net\/hsr\/hsr_device.c:342\n  hsr_proxy_announce+0x1a3\/0x4a0 net\/hsr\/hsr_device.c:436\n  call_timer_fn+0x1a0\/0x610 kernel\/time\/timer.c:1794\n  expire_timers kernel\/time\/timer.c:1845 [inline]\n  __run_timers+0x6e8\/0x930 kernel\/time\/timer.c:2419\n  __run_timer_base kernel\/time\/timer.c:2430 [inline]\n  __run_timer_base kernel\/time\/timer.c:2423 [inline]\n  run_timer_base+0x111\/0x190 kernel\/time\/timer.c:2439\n  run_timer_softirq+0x1a\/0x40 kernel\/time\/timer.c:2449\n  handle_softirqs+0x213\/0x8f0 kernel\/softirq.c:554\n  __do_softirq kernel\/softirq.c:588 [inline]\n  invoke_softirq kernel\/softirq.c:428 [inline]\n  __irq_exit_rcu kernel\/softirq.c:637 [inline]\n  irq_exit_rcu+0xbb\/0x120 kernel\/softirq.c:649\n  instr_sysvec_apic_timer_interrupt arch\/x86\/kernel\/apic\/apic.c:1049 [inline]\n  sysvec_apic_timer_interrupt+0xa4\/0xc0 arch\/x86\/kernel\/apic\/apic.c:1049\n <\/IRQ>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/688842f47ee9fb392d1c3a1ced1d21d505b14968","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af8edaeddbc52e53207d859c912b017fd9a77629","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56640","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.730","lastModified":"2024-12-27T15:15:23.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: fix LGR and link use-after-free issue\n\nWe encountered a LGR\/link use-after-free issue, which manifested as\nthe LGR\/link refcnt reaching 0 early and entering the clear process,\nmaking resource access unsafe.\n\n refcount_t: addition on 0; use-after-free.\n WARNING: CPU: 14 PID: 107447 at lib\/refcount.c:25 refcount_warn_saturate+0x9c\/0x140\n Workqueue: events smc_lgr_terminate_work [smc]\n Call trace:\n  refcount_warn_saturate+0x9c\/0x140\n  __smc_lgr_terminate.part.45+0x2a8\/0x370 [smc]\n  smc_lgr_terminate_work+0x28\/0x30 [smc]\n  process_one_work+0x1b8\/0x420\n  worker_thread+0x158\/0x510\n  kthread+0x114\/0x118\n\nor\n\n refcount_t: underflow; use-after-free.\n WARNING: CPU: 6 PID: 93140 at lib\/refcount.c:28 refcount_warn_saturate+0xf0\/0x140\n Workqueue: smc_hs_wq smc_listen_work [smc]\n Call trace:\n  refcount_warn_saturate+0xf0\/0x140\n  smcr_link_put+0x1cc\/0x1d8 [smc]\n  smc_conn_free+0x110\/0x1b0 [smc]\n  smc_conn_abort+0x50\/0x60 [smc]\n  smc_listen_find_device+0x75c\/0x790 [smc]\n  smc_listen_work+0x368\/0x8a0 [smc]\n  process_one_work+0x1b8\/0x420\n  worker_thread+0x158\/0x510\n  kthread+0x114\/0x118\n\nIt is caused by repeated release of LGR\/link refcnt. One suspect is that\nsmc_conn_free() is called repeatedly because some smc_conn_free() from\nserver listening path are not protected by sock lock.\n\ne.g.\n\nCalls under socklock        | smc_listen_work\n-------------------------------------------------------\nlock_sock(sk)               | smc_conn_abort\nsmc_conn_free               | \\- smc_conn_free\n\\- smcr_link_put            |    \\- smcr_link_put (duplicated)\nrelease_sock(sk)\n\nSo here add sock lock protection in smc_listen_work() path, making it\nexclusive with other connection operations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cf598548a6c36d90681d53c6b77d52363f2f295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c7f14ed9c19ec0f149479d1c2842ec1f9bf76d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/673d606683ac70bc074ca6676b938bff18635226","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f0ae06a234a78ae137064f2c89135ac078a00eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f502a88fdd415647a1f2dc45fac71b9c522a052b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56641","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.830","lastModified":"2024-12-27T15:15:23.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: initialize close_work early to avoid warning\n\nWe encountered a warning that close_work was canceled before\ninitialization.\n\n  WARNING: CPU: 7 PID: 111103 at kernel\/workqueue.c:3047 __flush_work+0x19e\/0x1b0\n  Workqueue: events smc_lgr_terminate_work [smc]\n  RIP: 0010:__flush_work+0x19e\/0x1b0\n  Call Trace:\n   ? __wake_up_common+0x7a\/0x190\n   ? work_busy+0x80\/0x80\n   __cancel_work_timer+0xe3\/0x160\n   smc_close_cancel_work+0x1a\/0x70 [smc]\n   smc_close_active_abort+0x207\/0x360 [smc]\n   __smc_lgr_terminate.part.38+0xc8\/0x180 [smc]\n   process_one_work+0x19e\/0x340\n   worker_thread+0x30\/0x370\n   ? process_one_work+0x340\/0x340\n   kthread+0x117\/0x130\n   ? __kthread_cancel_work+0x50\/0x50\n   ret_from_fork+0x22\/0x30\n\nThis is because when smc_close_cancel_work is triggered, e.g. the RDMA\ndriver is rmmod and the LGR is terminated, the conn->close_work is\nflushed before initialization, resulting in WARN_ON(!work->func).\n\n__smc_lgr_terminate             | smc_connect_{rdma|ism}\n-------------------------------------------------------------\n                                | smc_conn_create\n\t\t\t\t| \\- smc_lgr_register_conn\nfor conn in lgr->conns_all      |\n\\- smc_conn_kill                |\n   \\- smc_close_active_abort    |\n      \\- smc_close_cancel_work  |\n         \\- cancel_work_sync    |\n            \\- __flush_work     |\n\t         (close_work)   |\n\t                        | smc_close_init\n\t                        | \\- INIT_WORK(&close_work)\n\nSo fix this by initializing close_work before establishing the\nconnection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0541db8ee32c09463a72d0987382b3a3336b0043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6638e52dcfafaf1b9cbc34544f0c832db0069ea1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0c37002210aaede10dae849d1a78efc2243add2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56642","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:23.930","lastModified":"2024-12-27T15:15:23.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Fix use-after-free of kernel socket in cleanup_bearer().\n\nsyzkaller reported a use-after-free of UDP kernel socket\nin cleanup_bearer() without repro. [0][1]\n\nWhen bearer_disable() calls tipc_udp_disable(), cleanup\nof the UDP kernel socket is deferred by work calling\ncleanup_bearer().\n\ntipc_net_stop() waits for such works to finish by checking\ntipc_net(net)->wq_count.  However, the work decrements the\ncount too early before releasing the kernel socket,\nunblocking cleanup_net() and resulting in use-after-free.\n\nLet's move the decrement after releasing the socket in\ncleanup_bearer().\n\n[0]:\nref_tracker: net notrefcnt@000000009b3d1faf has 1\/1 users at\n     sk_alloc+0x438\/0x608\n     inet_create+0x4c8\/0xcb0\n     __sock_create+0x350\/0x6b8\n     sock_create_kern+0x58\/0x78\n     udp_sock_create4+0x68\/0x398\n     udp_sock_create+0x88\/0xc8\n     tipc_udp_enable+0x5e8\/0x848\n     __tipc_nl_bearer_enable+0x84c\/0xed8\n     tipc_nl_bearer_enable+0x38\/0x60\n     genl_family_rcv_msg_doit+0x170\/0x248\n     genl_rcv_msg+0x400\/0x5b0\n     netlink_rcv_skb+0x1dc\/0x398\n     genl_rcv+0x44\/0x68\n     netlink_unicast+0x678\/0x8b0\n     netlink_sendmsg+0x5e4\/0x898\n     ____sys_sendmsg+0x500\/0x830\n\n[1]:\nBUG: KMSAN: use-after-free in udp_hashslot include\/net\/udp.h:85 [inline]\nBUG: KMSAN: use-after-free in udp_lib_unhash+0x3b8\/0x930 net\/ipv4\/udp.c:1979\n udp_hashslot include\/net\/udp.h:85 [inline]\n udp_lib_unhash+0x3b8\/0x930 net\/ipv4\/udp.c:1979\n sk_common_release+0xaf\/0x3f0 net\/core\/sock.c:3820\n inet_release+0x1e0\/0x260 net\/ipv4\/af_inet.c:437\n inet6_release+0x6f\/0xd0 net\/ipv6\/af_inet6.c:489\n __sock_release net\/socket.c:658 [inline]\n sock_release+0xa0\/0x210 net\/socket.c:686\n cleanup_bearer+0x42d\/0x4c0 net\/tipc\/udp_media.c:819\n process_one_work kernel\/workqueue.c:3229 [inline]\n process_scheduled_works+0xcaf\/0x1c90 kernel\/workqueue.c:3310\n worker_thread+0xf6c\/0x1510 kernel\/workqueue.c:3391\n kthread+0x531\/0x6b0 kernel\/kthread.c:389\n ret_from_fork+0x60\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:244\n\nUninit was created at:\n slab_free_hook mm\/slub.c:2269 [inline]\n slab_free mm\/slub.c:4580 [inline]\n kmem_cache_free+0x207\/0xc40 mm\/slub.c:4682\n net_free net\/core\/net_namespace.c:454 [inline]\n cleanup_net+0x16f2\/0x19d0 net\/core\/net_namespace.c:647\n process_one_work kernel\/workqueue.c:3229 [inline]\n process_scheduled_works+0xcaf\/0x1c90 kernel\/workqueue.c:3310\n worker_thread+0xf6c\/0x1510 kernel\/workqueue.c:3391\n kthread+0x531\/0x6b0 kernel\/kthread.c:389\n ret_from_fork+0x60\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:244\n\nCPU: 0 UID: 0 PID: 54 Comm: kworker\/0:2 Not tainted 6.12.0-rc1-00131-gf66ebf37d69c #7 91723d6f74857f70725e1583cba3cf4adc716cfa\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04\/01\/2014\nWorkqueue: events cleanup_bearer"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e69457f9dfae67435f3ccf29008768eae860415","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/650ee9a22d7a2de8999fac2d45983597a0c22359","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a2fa13312e51a621f652d522d7e2df7066330b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d00d4470bf8c4282617a3a10e76b20a9c7e4cffa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2a4894f238551eae178904e7f45af87577074fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d62d5180c036eeac09f80660edc7a602b369125f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e48b211c4c59062cb6dd6c2c37c51a7cc235a464","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56643","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.040","lastModified":"2024-12-27T15:15:24.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndccp: Fix memory leak in dccp_feat_change_recv\n\nIf dccp_feat_push_confirm() fails after new value for SP feature was accepted\nwithout reconciliation ('entry == NULL' branch), memory allocated for that value\nwith dccp_feat_clone_sp_val() is never freed.\n\nHere is the kmemleak stack for this:\n\nunreferenced object 0xffff88801d4ab488 (size 8):\n  comm \"syz-executor310\", pid 1127, jiffies 4295085598 (age 41.666s)\n  hex dump (first 8 bytes):\n    01 b4 4a 1d 80 88 ff ff                          ..J.....\n  backtrace:\n    [<00000000db7cabfe>] kmemdup+0x23\/0x50 mm\/util.c:128\n    [<0000000019b38405>] kmemdup include\/linux\/string.h:465 [inline]\n    [<0000000019b38405>] dccp_feat_clone_sp_val net\/dccp\/feat.c:371 [inline]\n    [<0000000019b38405>] dccp_feat_clone_sp_val net\/dccp\/feat.c:367 [inline]\n    [<0000000019b38405>] dccp_feat_change_recv net\/dccp\/feat.c:1145 [inline]\n    [<0000000019b38405>] dccp_feat_parse_options+0x1196\/0x2180 net\/dccp\/feat.c:1416\n    [<00000000b1f6d94a>] dccp_parse_options+0xa2a\/0x1260 net\/dccp\/options.c:125\n    [<0000000030d7b621>] dccp_rcv_state_process+0x197\/0x13d0 net\/dccp\/input.c:650\n    [<000000001f74c72e>] dccp_v4_do_rcv+0xf9\/0x1a0 net\/dccp\/ipv4.c:688\n    [<00000000a6c24128>] sk_backlog_rcv include\/net\/sock.h:1041 [inline]\n    [<00000000a6c24128>] __release_sock+0x139\/0x3b0 net\/core\/sock.c:2570\n    [<00000000cf1f3a53>] release_sock+0x54\/0x1b0 net\/core\/sock.c:3111\n    [<000000008422fa23>] inet_wait_for_connect net\/ipv4\/af_inet.c:603 [inline]\n    [<000000008422fa23>] __inet_stream_connect+0x5d0\/0xf70 net\/ipv4\/af_inet.c:696\n    [<0000000015b6f64d>] inet_stream_connect+0x53\/0xa0 net\/ipv4\/af_inet.c:735\n    [<0000000010122488>] __sys_connect_file+0x15c\/0x1a0 net\/socket.c:1865\n    [<00000000b4b70023>] __sys_connect+0x165\/0x1a0 net\/socket.c:1882\n    [<00000000f4cb3815>] __do_sys_connect net\/socket.c:1892 [inline]\n    [<00000000f4cb3815>] __se_sys_connect net\/socket.c:1889 [inline]\n    [<00000000f4cb3815>] __x64_sys_connect+0x6e\/0xb0 net\/socket.c:1889\n    [<00000000e7b1e839>] do_syscall_64+0x33\/0x40 arch\/x86\/entry\/common.c:46\n    [<0000000055e91434>] entry_SYSCALL_64_after_hwframe+0x67\/0xd1\n\nClean up the allocated memory in case of dccp_feat_push_confirm() failure\nand bail out with an error reset code.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22be4727a8f898442066bcac34f8a1ad0bc72e14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/623be080ab3c13d71570bd32f7202a8efa8e2252","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ff67909ee2ffad911e3122616df41dee23ff4f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ee68b0f23706a77f53c832457b9384178b76421","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc3d4423def1a9412a0ae454cb4477089ab79276","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c99507fff94b926fc92279c92d80f229c91cb85d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3ec686a369fae5034303061f003cd3f94ddfd23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56644","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.163","lastModified":"2024-12-27T15:15:24.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/ipv6: release expired exception dst cached in socket\n\nDst objects get leaked in ip6_negative_advice() when this function is\nexecuted for an expired IPv6 route located in the exception table. There\nare several conditions that must be fulfilled for the leak to occur:\n* an ICMPv6 packet indicating a change of the MTU for the path is received,\n  resulting in an exception dst being created\n* a TCP connection that uses the exception dst for routing packets must\n  start timing out so that TCP begins retransmissions\n* after the exception dst expires, the FIB6 garbage collector must not run\n  before TCP executes ip6_negative_advice() for the expired exception dst\n\nWhen TCP executes ip6_negative_advice() for an exception dst that has\nexpired and if no other socket holds a reference to the exception dst, the\nrefcount of the exception dst is 2, which corresponds to the increment\nmade by dst_init() and the increment made by the TCP socket for which the\nconnection is timing out. The refcount made by the socket is never\nreleased. The refcount of the dst is decremented in sk_dst_reset() but\nthat decrement is counteracted by a dst_hold() intentionally placed just\nbefore the sk_dst_reset() in ip6_negative_advice(). After\nip6_negative_advice() has finished, there is no other object tied to the\ndst. The socket lost its reference stored in sk_dst_cache and the dst is\nno longer in the exception table. The exception dst becomes a leaked\nobject.\n\nAs a result of this dst leak, an unbalanced refcount is reported for the\nloopback device of a net namespace being destroyed under kernels that do\nnot contain e5f80fcf869a (\"ipv6: give an IPv6 dev to blackhole_netdev\"):\nunregister_netdevice: waiting for lo to become free. Usage count = 2\n\nFix the dst leak by removing the dst_hold() in ip6_negative_advice(). The\npatch that introduced the dst_hold() in ip6_negative_advice() was\n92f1655aa2b22 (\"net: fix __dst_negative_advice() race\"). But 92f1655aa2b22\nmerely refactored the code with regards to the dst refcount so the issue\nwas present even before 92f1655aa2b22. The bug was introduced in\n54c1a859efd9f (\"ipv6: Don't drop cache route entry unless timer actually\nexpired.\") where the expired cached route is deleted and the sk_dst_cache\nmember of the socket is set to NULL by calling dst_negative_advice() but\nthe refcount belonging to the socket is left unbalanced.\n\nThe IPv4 version - ipv4_negative_advice() - is not affected by this bug.\nWhen the TCP connection times out ipv4_negative_advice() merely resets the\nsk_dst_cache of the socket while decrementing the refcount of the\nexception dst."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b8903e6c881f72c6849d4952de742c656eb5ab9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3301ab7d5aeb0fe270f73a3d4810c9d1b6a9f045","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/535add1e9f274502209cb997801208bbe1ae6c6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b591bd522b71c42a82898290e35d32b482047e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a95808252e8acc0123bacd2dff8b9af10bc145b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b90d061345bb8cd51fece561a800bae1c95448a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f43d12fd0fa8ee5b9caf8a3927e10d06431764d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56645","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.260","lastModified":"2024-12-27T15:15:24.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: j1939_session_new(): fix skb reference counting\n\nSince j1939_session_skb_queue() does an extra skb_get() for each new\nskb, do the same for the initial one in j1939_session_new() to avoid\nrefcount underflow.\n\n[mkl: clean up commit message]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/224e606a8d8e8c7db94036272c47a37455667313","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4199dd78a59896e091d3a7a05a77451aa7fd724d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/426d94815e12b6bdb9a75af294fbbafb9301601d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68fceb143b635cdc59fed3896d5910aff38f345e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8c695005bfe6569acd73d777ca298ddddd66105","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3282c2bebeeb82ceec492ee4972f51ee7a4a132","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f117cba69cbbd496babb3defcdf440df4fd6fe14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56646","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.367","lastModified":"2024-12-27T15:15:24.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: avoid possible NULL deref in modify_prefix_route()\n\nsyzbot found a NULL deref [1] in modify_prefix_route(), caused by one\nfib6_info without a fib6_table pointer set.\n\nThis can happen for net->ipv6.fib6_null_entry\n\n[1]\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\nCPU: 1 UID: 0 PID: 5837 Comm: syz-executor888 Not tainted 6.12.0-syzkaller-09567-g7eef7e306d3c #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\n RIP: 0010:__lock_acquire+0xe4\/0x3c40 kernel\/locking\/lockdep.c:5089\nCode: 08 84 d2 0f 85 15 14 00 00 44 8b 0d ca 98 f5 0e 45 85 c9 0f 84 b4 0e 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1 ea 03 <80> 3c 02 00 0f 85 96 2c 00 00 49 8b 04 24 48 3d a0 07 7f 93 0f 84\nRSP: 0018:ffffc900035d7268 EFLAGS: 00010006\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000006 RSI: 1ffff920006bae5f RDI: 0000000000000030\nRBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000001\nR10: ffffffff90608e17 R11: 0000000000000001 R12: 0000000000000030\nR13: ffff888036334880 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000555579e90380(0000) GS:ffff8880b8700000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffc59cc4278 CR3: 0000000072b54000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  lock_acquire.part.0+0x11b\/0x380 kernel\/locking\/lockdep.c:5849\n  __raw_spin_lock_bh include\/linux\/spinlock_api_smp.h:126 [inline]\n  _raw_spin_lock_bh+0x33\/0x40 kernel\/locking\/spinlock.c:178\n  spin_lock_bh include\/linux\/spinlock.h:356 [inline]\n  modify_prefix_route+0x30b\/0x8b0 net\/ipv6\/addrconf.c:4831\n  inet6_addr_modify net\/ipv6\/addrconf.c:4923 [inline]\n  inet6_rtm_newaddr+0x12c7\/0x1ab0 net\/ipv6\/addrconf.c:5055\n  rtnetlink_rcv_msg+0x3c7\/0xea0 net\/core\/rtnetlink.c:6920\n  netlink_rcv_skb+0x16b\/0x440 net\/netlink\/af_netlink.c:2541\n  netlink_unicast_kernel net\/netlink\/af_netlink.c:1321 [inline]\n  netlink_unicast+0x53c\/0x7f0 net\/netlink\/af_netlink.c:1347\n  netlink_sendmsg+0x8b8\/0xd70 net\/netlink\/af_netlink.c:1891\n  sock_sendmsg_nosec net\/socket.c:711 [inline]\n  __sock_sendmsg net\/socket.c:726 [inline]\n  ____sys_sendmsg+0xaaf\/0xc90 net\/socket.c:2583\n  ___sys_sendmsg+0x135\/0x1e0 net\/socket.c:2637\n  __sys_sendmsg+0x16e\/0x220 net\/socket.c:2669\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7fd1dcef8b79\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 c1 17 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007ffc59cc4378 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fd1dcef8b79\nRDX: 0000000000040040 RSI: 0000000020000140 RDI: 0000000000000004\nRBP: 00000000000113fd R08: 0000000000000006 R09: 0000000000000006\nR10: 0000000000000006 R11: 0000000000000246 R12: 00007ffc59cc438c\nR13: 431bde82d7b634db R14: 0000000000000001 R15: 0000000000000001\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01f95357e47219a9c4b29e177b717edbfab721b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a747e02430dfb3657141f99aa6b09331283fa493","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56647","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.467","lastModified":"2024-12-27T15:15:24.467","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Fix icmp host relookup triggering ip_rt_bug\n\narp link failure may trigger ip_rt_bug while xfrm enabled, call trace is:\n\nWARNING: CPU: 0 PID: 0 at net\/ipv4\/route.c:1241 ip_rt_bug+0x14\/0x20\nModules linked in:\nCPU: 0 UID: 0 PID: 0 Comm: swapper\/0 Not tainted 6.12.0-rc6-00077-g2e1b3cc9d7f7\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996),\nBIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:ip_rt_bug+0x14\/0x20\nCall Trace:\n <IRQ>\n ip_send_skb+0x14\/0x40\n __icmp_send+0x42d\/0x6a0\n ipv4_link_failure+0xe2\/0x1d0\n arp_error_report+0x3c\/0x50\n neigh_invalidate+0x8d\/0x100\n neigh_timer_handler+0x2e1\/0x330\n call_timer_fn+0x21\/0x120\n __run_timer_base.part.0+0x1c9\/0x270\n run_timer_softirq+0x4c\/0x80\n handle_softirqs+0xac\/0x280\n irq_exit_rcu+0x62\/0x80\n sysvec_apic_timer_interrupt+0x77\/0x90\n\nThe script below reproduces this scenario:\nip xfrm policy add src 0.0.0.0\/0 dst 0.0.0.0\/0 \\\n\tdir out priority 0 ptype main flag localok icmp\nip l a veth1 type veth\nip a a 192.168.141.111\/24 dev veth0\nip l s veth0 up\nping 192.168.141.155 -c 1\n\nicmp_route_lookup() create input routes for locally generated packets\nwhile xfrm relookup ICMP traffic.Then it will set input route\n(dst->out = ip_rt_bug) to skb for DESTUNREACH.\n\nFor ICMP err triggered by locally generated packets, dst->dev of output\nroute is loopback. Generally, xfrm relookup verification is not required\non loopback interfaces (net.ipv4.conf.lo.disable_xfrm = 1).\n\nSkip icmp relookup for locally generated packets to fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9545011e7b2a8fc0cbd6e387a09f12cd41d7d82f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c44daa7e3c73229f7ac74985acb8c7fb909c4e0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56648","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.570","lastModified":"2024-12-27T15:15:24.570","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hsr: avoid potential out-of-bound access in fill_frame_info()\n\nsyzbot is able to feed a packet with 14 bytes, pretending\nit is a vlan one.\n\nSince fill_frame_info() is relying on skb->mac_len already,\nextend the check to cover this case.\n\nBUG: KMSAN: uninit-value in fill_frame_info net\/hsr\/hsr_forward.c:709 [inline]\n BUG: KMSAN: uninit-value in hsr_forward_skb+0x9ee\/0x3b10 net\/hsr\/hsr_forward.c:724\n  fill_frame_info net\/hsr\/hsr_forward.c:709 [inline]\n  hsr_forward_skb+0x9ee\/0x3b10 net\/hsr\/hsr_forward.c:724\n  hsr_dev_xmit+0x2f0\/0x350 net\/hsr\/hsr_device.c:235\n  __netdev_start_xmit include\/linux\/netdevice.h:5002 [inline]\n  netdev_start_xmit include\/linux\/netdevice.h:5011 [inline]\n  xmit_one net\/core\/dev.c:3590 [inline]\n  dev_hard_start_xmit+0x247\/0xa20 net\/core\/dev.c:3606\n  __dev_queue_xmit+0x366a\/0x57d0 net\/core\/dev.c:4434\n  dev_queue_xmit include\/linux\/netdevice.h:3168 [inline]\n  packet_xmit+0x9c\/0x6c0 net\/packet\/af_packet.c:276\n  packet_snd net\/packet\/af_packet.c:3146 [inline]\n  packet_sendmsg+0x91ae\/0xa6f0 net\/packet\/af_packet.c:3178\n  sock_sendmsg_nosec net\/socket.c:711 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:726\n  __sys_sendto+0x594\/0x750 net\/socket.c:2197\n  __do_sys_sendto net\/socket.c:2204 [inline]\n  __se_sys_sendto net\/socket.c:2200 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2200\n  x64_sys_call+0x346a\/0x3c30 arch\/x86\/include\/generated\/asm\/syscalls_64.h:45\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:4091 [inline]\n  slab_alloc_node mm\/slub.c:4134 [inline]\n  kmem_cache_alloc_node_noprof+0x6bf\/0xb80 mm\/slub.c:4186\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:587\n  __alloc_skb+0x363\/0x7b0 net\/core\/skbuff.c:678\n  alloc_skb include\/linux\/skbuff.h:1323 [inline]\n  alloc_skb_with_frags+0xc8\/0xd00 net\/core\/skbuff.c:6612\n  sock_alloc_send_pskb+0xa81\/0xbf0 net\/core\/sock.c:2881\n  packet_alloc_skb net\/packet\/af_packet.c:2995 [inline]\n  packet_snd net\/packet\/af_packet.c:3089 [inline]\n  packet_sendmsg+0x74c6\/0xa6f0 net\/packet\/af_packet.c:3178\n  sock_sendmsg_nosec net\/socket.c:711 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:726\n  __sys_sendto+0x594\/0x750 net\/socket.c:2197\n  __do_sys_sendto net\/socket.c:2204 [inline]\n  __se_sys_sendto net\/socket.c:2200 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2200\n  x64_sys_call+0x346a\/0x3c30 arch\/x86\/include\/generated\/asm\/syscalls_64.h:45\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c215663b3e27a3b08cefcaea623ff54c70c8035","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bb5c8ebc99f0671dbd3c9408ebaf935c3951186","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ea527fbd7b94d0bee64a0a7e98279bcc654b322","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa632691c722a123e47ccd05a3afdd5f87a36061","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9653d19e556c6afd035602927a93d100a0d7644","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e778901d0055356c4fb223058364cae731494a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56649","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.680","lastModified":"2024-12-27T15:15:24.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: enetc: Do not configure preemptible TCs if SIs do not support\n\nBoth ENETC PF and VF drivers share enetc_setup_tc_mqprio() to configure\nMQPRIO. And enetc_setup_tc_mqprio() calls enetc_change_preemptible_tcs()\nto configure preemptible TCs. However, only PF is able to configure\npreemptible TCs. Because only PF has related registers, while VF does not\nhave these registers. So for VF, its hw->port pointer is NULL. Therefore,\nVF will access an invalid pointer when accessing a non-existent register,\nwhich will cause a crash issue. The simplified log is as follows.\n\nroot@ls1028ardb:~# tc qdisc add dev eno0vf0 parent root handle 100: \\\nmqprio num_tc 4 map 0 0 1 1 2 2 3 3 queues 1@0 1@1 1@2 1@3 hw 1\n[  187.290775] Unable to handle kernel paging request at virtual address 0000000000001f00\n[  187.424831] pc : enetc_mm_commit_preemptible_tcs+0x1c4\/0x400\n[  187.430518] lr : enetc_mm_commit_preemptible_tcs+0x30c\/0x400\n[  187.511140] Call trace:\n[  187.513588]  enetc_mm_commit_preemptible_tcs+0x1c4\/0x400\n[  187.518918]  enetc_setup_tc_mqprio+0x180\/0x214\n[  187.523374]  enetc_vf_setup_tc+0x1c\/0x30\n[  187.527306]  mqprio_enable_offload+0x144\/0x178\n[  187.531766]  mqprio_init+0x3ec\/0x668\n[  187.535351]  qdisc_create+0x15c\/0x488\n[  187.539023]  tc_modify_qdisc+0x398\/0x73c\n[  187.542958]  rtnetlink_rcv_msg+0x128\/0x378\n[  187.547064]  netlink_rcv_skb+0x60\/0x130\n[  187.550910]  rtnetlink_rcv+0x18\/0x24\n[  187.554492]  netlink_unicast+0x300\/0x36c\n[  187.558425]  netlink_sendmsg+0x1a8\/0x420\n[  187.606759] ---[ end trace 0000000000000000 ]---\n\nIn addition, some PFs also do not support configuring preemptible TCs,\nsuch as eno1 and eno3 on LS1028A. It won't crash like it does for VFs,\nbut we should prevent these PFs from accessing these unimplemented\nregisters."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66127f0d1ecf00604aeab71132bde398fd9ec7c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2420b8c81ec674552d00c55d46245e5c184b260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b718b68a9964181e24d15138a09ce95785a19002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56650","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.783","lastModified":"2024-12-27T15:15:24.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: x_tables: fix LED ID check in led_tg_check()\n\nSyzbot has reported the following BUG detected by KASAN:\n\nBUG: KASAN: slab-out-of-bounds in strlen+0x58\/0x70\nRead of size 1 at addr ffff8881022da0c8 by task repro\/5879\n...\nCall Trace:\n <TASK>\n dump_stack_lvl+0x241\/0x360\n ? __pfx_dump_stack_lvl+0x10\/0x10\n ? __pfx__printk+0x10\/0x10\n ? _printk+0xd5\/0x120\n ? __virt_addr_valid+0x183\/0x530\n ? __virt_addr_valid+0x183\/0x530\n print_report+0x169\/0x550\n ? __virt_addr_valid+0x183\/0x530\n ? __virt_addr_valid+0x183\/0x530\n ? __virt_addr_valid+0x45f\/0x530\n ? __phys_addr+0xba\/0x170\n ? strlen+0x58\/0x70\n kasan_report+0x143\/0x180\n ? strlen+0x58\/0x70\n strlen+0x58\/0x70\n kstrdup+0x20\/0x80\n led_tg_check+0x18b\/0x3c0\n xt_check_target+0x3bb\/0xa40\n ? __pfx_xt_check_target+0x10\/0x10\n ? stack_depot_save_flags+0x6e4\/0x830\n ? nft_target_init+0x174\/0xc30\n nft_target_init+0x82d\/0xc30\n ? __pfx_nft_target_init+0x10\/0x10\n ? nf_tables_newrule+0x1609\/0x2980\n ? nf_tables_newrule+0x1609\/0x2980\n ? rcu_is_watching+0x15\/0xb0\n ? nf_tables_newrule+0x1609\/0x2980\n ? nf_tables_newrule+0x1609\/0x2980\n ? __kmalloc_noprof+0x21a\/0x400\n nf_tables_newrule+0x1860\/0x2980\n ? __pfx_nf_tables_newrule+0x10\/0x10\n ? __nla_parse+0x40\/0x60\n nfnetlink_rcv+0x14e5\/0x2ab0\n ? __pfx_validate_chain+0x10\/0x10\n ? __pfx_nfnetlink_rcv+0x10\/0x10\n ? __lock_acquire+0x1384\/0x2050\n ? netlink_deliver_tap+0x2e\/0x1b0\n ? __pfx_lock_release+0x10\/0x10\n ? netlink_deliver_tap+0x2e\/0x1b0\n netlink_unicast+0x7f8\/0x990\n ? __pfx_netlink_unicast+0x10\/0x10\n ? __virt_addr_valid+0x183\/0x530\n ? __check_object_size+0x48e\/0x900\n netlink_sendmsg+0x8e4\/0xcb0\n ? __pfx_netlink_sendmsg+0x10\/0x10\n ? aa_sock_msg_perm+0x91\/0x160\n ? __pfx_netlink_sendmsg+0x10\/0x10\n __sock_sendmsg+0x223\/0x270\n ____sys_sendmsg+0x52a\/0x7e0\n ? __pfx_____sys_sendmsg+0x10\/0x10\n __sys_sendmsg+0x292\/0x380\n ? __pfx___sys_sendmsg+0x10\/0x10\n ? lockdep_hardirqs_on_prepare+0x43d\/0x780\n ? __pfx_lockdep_hardirqs_on_prepare+0x10\/0x10\n ? exc_page_fault+0x590\/0x8c0\n ? do_syscall_64+0xb6\/0x230\n do_syscall_64+0xf3\/0x230\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n...\n <\/TASK>\n\nSince an invalid (without '\\0' byte at all) byte sequence may be passed\nfrom userspace, add an extra check to ensure that such a sequence is\nrejected as possible ID and so never passed to 'kstrdup()' and further."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04317f4eb2aad312ad85c1a17ad81fe75f1f9bc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/147a42bb02de8735cb08476be6d0917987d022c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36a9d94dac28beef6b8abba46ba8874320d3e800","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9bcc0b70d9baf3ff005874489a0dc9d023b54c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab9916321c95f5280b72b4c5055e269f98627efe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad28612ebae1fcc1104bd432e99e99d87f6bfe09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c40c96d98e536fc1daaa125c2332b988615e30a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56651","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:24.917","lastModified":"2024-12-27T15:15:24.917","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: hi311x: hi3110_can_ist(): fix potential use-after-free\n\nThe commit a22bd630cfff (\"can: hi311x: do not report txerr and rxerr\nduring bus-off\") removed the reporting of rxerr and txerr even in case\nof correct operation (i. e. not bus-off).\n\nThe error count information added to the CAN frame after netif_rx() is\na potential use after free, since there is no guarantee that the skb\nis in the same state. It might be freed or reused.\n\nFix the issue by postponing the netif_rx() call in case of txerr and\nrxerr reporting."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1128022009444faf49359bd406cd665b177cb643","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ad77eb8f2e07bcfa0e28887d3c7dbb732d92cc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ad86d377ef4a19c75a9c639964879a5b25a433b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc30b2fe8c54694f8ae08a5b8a5d174d16d93075","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56652","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.027","lastModified":"2024-12-27T15:15:25.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/reg_sr: Remove register pool\n\nThat pool implementation doesn't really work: if the krealloc happens to\nmove the memory and return another address, the entries in the xarray\nbecome invalid, leading to use-after-free later:\n\n\tBUG: KASAN: slab-use-after-free in xe_reg_sr_apply_mmio+0x570\/0x760 [xe]\n\tRead of size 4 at addr ffff8881244b2590 by task modprobe\/2753\n\n\tAllocated by task 2753:\n\t kasan_save_stack+0x39\/0x70\n\t kasan_save_track+0x14\/0x40\n\t kasan_save_alloc_info+0x37\/0x60\n\t __kasan_kmalloc+0xc3\/0xd0\n\t __kmalloc_node_track_caller_noprof+0x200\/0x6d0\n\t krealloc_noprof+0x229\/0x380\n\nSimplify the code to fix the bug. A better pooling strategy may be added\nback later if needed.\n\n(cherry picked from commit e5283bd4dfecbd3335f43b62a68e24dae23f59e4)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b0193a31a0ca5a0f9e60bb4a86537d46b98111b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7b028656c29b22fcde1c6ee1df5b28fbba987b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56653","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.133","lastModified":"2024-12-27T15:15:25.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btmtk: avoid UAF in btmtk_process_coredump\n\nhci_devcd_append may lead to the release of the skb, so it cannot be\naccessed once it is called.\n\n==================================================================\nBUG: KASAN: slab-use-after-free in btmtk_process_coredump+0x2a7\/0x2d0 [btmtk]\nRead of size 4 at addr ffff888033cfabb0 by task kworker\/0:3\/82\n\nCPU: 0 PID: 82 Comm: kworker\/0:3 Tainted: G     U             6.6.40-lockdep-03464-g1d8b4eb3060e #1 b0b3c1cc0c842735643fb411799d97921d1f688c\nHardware name: Google Yaviks_Ufs\/Yaviks_Ufs, BIOS Google_Yaviks_Ufs.15217.552.0 05\/07\/2024\nWorkqueue: events btusb_rx_work [btusb]\nCall Trace:\n <TASK>\n dump_stack_lvl+0xfd\/0x150\n print_report+0x131\/0x780\n kasan_report+0x177\/0x1c0\n btmtk_process_coredump+0x2a7\/0x2d0 [btmtk 03edd567dd71a65958807c95a65db31d433e1d01]\n btusb_recv_acl_mtk+0x11c\/0x1a0 [btusb 675430d1e87c4f24d0c1f80efe600757a0f32bec]\n btusb_rx_work+0x9e\/0xe0 [btusb 675430d1e87c4f24d0c1f80efe600757a0f32bec]\n worker_thread+0xe44\/0x2cc0\n kthread+0x2ff\/0x3a0\n ret_from_fork+0x51\/0x80\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nAllocated by task 82:\n stack_trace_save+0xdc\/0x190\n kasan_set_track+0x4e\/0x80\n __kasan_slab_alloc+0x4e\/0x60\n kmem_cache_alloc+0x19f\/0x360\n skb_clone+0x132\/0xf70\n btusb_recv_acl_mtk+0x104\/0x1a0 [btusb]\n btusb_rx_work+0x9e\/0xe0 [btusb]\n worker_thread+0xe44\/0x2cc0\n kthread+0x2ff\/0x3a0\n ret_from_fork+0x51\/0x80\n ret_from_fork_asm+0x1b\/0x30\n\nFreed by task 1733:\n stack_trace_save+0xdc\/0x190\n kasan_set_track+0x4e\/0x80\n kasan_save_free_info+0x28\/0xb0\n ____kasan_slab_free+0xfd\/0x170\n kmem_cache_free+0x183\/0x3f0\n hci_devcd_rx+0x91a\/0x2060 [bluetooth]\n worker_thread+0xe44\/0x2cc0\n kthread+0x2ff\/0x3a0\n ret_from_fork+0x51\/0x80\n ret_from_fork_asm+0x1b\/0x30\n\nThe buggy address belongs to the object at ffff888033cfab40\n which belongs to the cache skbuff_head_cache of size 232\nThe buggy address is located 112 bytes inside of\n freed 232-byte region [ffff888033cfab40, ffff888033cfac28)\n\nThe buggy address belongs to the physical page:\npage:00000000a174ba93 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x33cfa\nhead:00000000a174ba93 order:1 entire_mapcount:0 nr_pages_mapped:0 pincount:0\nanon flags: 0x4000000000000840(slab|head|zone=1)\npage_type: 0xffffffff()\nraw: 4000000000000840 ffff888100848a00 0000000000000000 0000000000000001\nraw: 0000000000000000 0000000080190019 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff888033cfaa80: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc\n ffff888033cfab00: fc fc fc fc fc fc fc fc fa fb fb fb fb fb fb fb\n>ffff888033cfab80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                     ^\n ffff888033cfac00: fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc\n ffff888033cfac80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n==================================================================\n\nCheck if we need to call hci_devcd_complete before calling\nhci_devcd_append. That requires that we check data->cd_info.cnt >=\nMTK_COREDUMP_NUM instead of data->cd_info.cnt > MTK_COREDUMP_NUM, as we\nincrement data->cd_info.cnt only once the call to hci_devcd_append\nsucceeds."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b548f5e9456c568155499d9ebac675c0d7a296e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d20ff1d3cb40479789368f502eedb0a00e4161fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecdcaea0e4057171ea4c3783e1cc1c900ad99125","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56654","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.237","lastModified":"2024-12-27T15:15:25.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_event: Fix using rcu_read_(un)lock while iterating\n\nThe usage of rcu_read_(un)lock while inside list_for_each_entry_rcu is\nnot safe since for the most part entries fetched this way shall be\ntreated as rcu_dereference:\n\n\tNote that the value returned by rcu_dereference() is valid\n\tonly within the enclosing RCU read-side critical section [1]_.\n\tFor example, the following is **not** legal::\n\n\t\trcu_read_lock();\n\t\tp = rcu_dereference(head.next);\n\t\trcu_read_unlock();\n\t\tx = p->address;\t\/* BUG!!! *\/\n\t\trcu_read_lock();\n\t\ty = p->data;\t\/* BUG!!! *\/\n\t\trcu_read_unlock();"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0108132d7d76d884e443d18b4f067cdf2811911b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/581dd2dc168fe0ed2a7a5534a724f0d3751c93ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9ecc90b5d501b3a5a62d0685d5104f934bb0104","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56655","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.343","lastModified":"2024-12-27T15:15:25.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: do not defer rule destruction via call_rcu\n\nnf_tables_chain_destroy can sleep, it can't be used from call_rcu\ncallbacks.\n\nMoreover, nf_tables_rule_release() is only safe for error unwinding,\nwhile transaction mutex is held and the to-be-desroyed rule was not\nexposed to either dataplane or dumps, as it deactives+frees without\nthe required synchronize_rcu() in-between.\n\nnft_rule_expr_deactivate() callbacks will change ->use counters\nof other chains\/sets, see e.g. nft_lookup .deactivate callback, these\nmust be serialized via transaction mutex.\n\nAlso add a few lockdep asserts to make this more explicit.\n\nCalling synchronize_rcu() isn't ideal, but fixing this without is hard\nand way more intrusive.  As-is, we can get:\n\nWARNING: .. net\/netfilter\/nf_tables_api.c:5515 nft_set_destroy+0x..\nWorkqueue: events nf_tables_trans_destroy_work\nRIP: 0010:nft_set_destroy+0x3fe\/0x5c0\nCall Trace:\n <TASK>\n nf_tables_trans_destroy_work+0x6b7\/0xad0\n process_one_work+0x64a\/0xce0\n worker_thread+0x613\/0x10d0\n\nIn case the synchronize_rcu becomes an issue, we can explore alternatives.\n\nOne way would be to allocate nft_trans_rule objects + one nft_trans_chain\nobject, deactivate the rules + the chain and then defer the freeing to the\nnft destroy workqueue.  We'd still need to keep the synchronize_rcu path as\na fallback to handle -ENOMEM corner cases though."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27f0574253f6c24c8ee4e3f0a685b75ed3a256ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cf0bd232b565d9852cb25fd094f77254773e048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04df3da1b5c6f6dc7cdccc37941740c078c4043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56656","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.447","lastModified":"2024-12-27T15:15:25.447","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix aggregation ID mask to prevent oops on 5760X chips\n\nThe 5760X (P7) chip's HW GRO\/LRO interface is very similar to that of\nthe previous generation (5750X or P5).  However, the aggregation ID\nfields in the completion structures on P7 have been redefined from\n16 bits to 12 bits.  The freed up 4 bits are redefined for part of the\nmetadata such as the VLAN ID.  The aggregation ID mask was not modified\nwhen adding support for P7 chips.  Including the extra 4 bits for the\naggregation ID can potentially cause the driver to store or fetch the\npacket header of GRO\/LRO packets in the wrong TPA buffer.  It may hit\nthe BUG() condition in __skb_pull() because the SKB contains no valid\npacket header:\n\nkernel BUG at include\/linux\/skbuff.h:2766!\nOops: invalid opcode: 0000 1 PREEMPT SMP NOPTI\nCPU: 4 UID: 0 PID: 0 Comm: swapper\/4 Kdump: loaded Tainted: G           OE      6.12.0-rc2+ #7\nTainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\nHardware name: Dell Inc. PowerEdge R760\/0VRV9X, BIOS 1.0.1 12\/27\/2022\nRIP: 0010:eth_type_trans+0xda\/0x140\nCode: 80 00 00 00 eb c1 8b 47 70 2b 47 74 48 8b 97 d0 00 00 00 83 f8 01 7e 1b 48 85 d2 74 06 66 83 3a ff 74 09 b8 00 04 00 00 eb a5 <0f> 0b b8 00 01 00 00 eb 9c 48 85 ff 74 eb 31 f6 b9 02 00 00 00 48\nRSP: 0018:ff615003803fcc28 EFLAGS: 00010283\nRAX: 00000000000022d2 RBX: 0000000000000003 RCX: ff2e8c25da334040\nRDX: 0000000000000040 RSI: ff2e8c25c1ce8000 RDI: ff2e8c25869f9000\nRBP: ff2e8c258c31c000 R08: ff2e8c25da334000 R09: 0000000000000001\nR10: ff2e8c25da3342c0 R11: ff2e8c25c1ce89c0 R12: ff2e8c258e0990b0\nR13: ff2e8c25bb120000 R14: ff2e8c25c1ce89c0 R15: ff2e8c25869f9000\nFS:  0000000000000000(0000) GS:ff2e8c34be300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055f05317e4c8 CR3: 000000108bac6006 CR4: 0000000000773ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <IRQ>\n ? die+0x33\/0x90\n ? do_trap+0xd9\/0x100\n ? eth_type_trans+0xda\/0x140\n ? do_error_trap+0x65\/0x80\n ? eth_type_trans+0xda\/0x140\n ? exc_invalid_op+0x4e\/0x70\n ? eth_type_trans+0xda\/0x140\n ? asm_exc_invalid_op+0x16\/0x20\n ? eth_type_trans+0xda\/0x140\n bnxt_tpa_end+0x10b\/0x6b0 [bnxt_en]\n ? bnxt_tpa_start+0x195\/0x320 [bnxt_en]\n bnxt_rx_pkt+0x902\/0xd90 [bnxt_en]\n ? __bnxt_tx_int.constprop.0+0x89\/0x300 [bnxt_en]\n ? kmem_cache_free+0x343\/0x440\n ? __bnxt_tx_int.constprop.0+0x24f\/0x300 [bnxt_en]\n __bnxt_poll_work+0x193\/0x370 [bnxt_en]\n bnxt_poll_p5+0x9a\/0x300 [bnxt_en]\n ? try_to_wake_up+0x209\/0x670\n __napi_poll+0x29\/0x1b0\n\nFix it by redefining the aggregation ID mask for P5_PLUS chips to be\n12 bits.  This will work because the maximum aggregation ID is less\nthan 4096 on all P5_PLUS chips."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24c6843b7393ebc80962b59d7ae71af91bf0dcc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe9274027697c69c1430dc7ee568f82b331ef972","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56657","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.543","lastModified":"2024-12-27T15:15:25.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: control: Avoid WARN() for symlink errors\n\nUsing WARN() for showing the error of symlink creations don't give\nmore information than telling that something goes wrong, since the\nusual code path is a lregister callback from each control element\ncreation.  More badly, the use of WARN() rather confuses fuzzer as if\nit were serious issues.\n\nThis patch downgrades the warning messages to use the normal dev_err()\ninstead of WARN().  For making it clearer, add the function name to\nthe prefix, too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36c0764474b637bbee498806485bed524cad486b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2e538a9827dd04ab5273bf4be8eb2edb84357b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5a1ca7b59804d6779644001a878ed925a4688ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56658","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.643","lastModified":"2024-12-27T15:15:25.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: defer final 'struct net' free in netns dismantle\n\nIlya reported a slab-use-after-free in dst_destroy [1]\n\nIssue is in xfrm6_net_init() and xfrm4_net_init() :\n\nThey copy xfrm[46]_dst_ops_template into net->xfrm.xfrm[46]_dst_ops.\n\nBut net structure might be freed before all the dst callbacks are\ncalled. So when dst_destroy() calls later :\n\nif (dst->ops->destroy)\n    dst->ops->destroy(dst);\n\ndst->ops points to the old net->xfrm.xfrm[46]_dst_ops, which has been freed.\n\nSee a relevant issue fixed in :\n\nac888d58869b (\"net: do not delay dst_entries_add() in dst_release()\")\n\nA fix is to queue the 'struct net' to be freed after one\nanother cleanup_net() round (and existing rcu_barrier())\n\n[1]\n\nBUG: KASAN: slab-use-after-free in dst_destroy (net\/core\/dst.c:112)\nRead of size 8 at addr ffff8882137ccab0 by task swapper\/37\/0\nDec 03 05:46:18 kernel:\nCPU: 37 UID: 0 PID: 0 Comm: swapper\/37 Kdump: loaded Not tainted 6.12.0 #67\nHardware name: Red Hat KVM\/RHEL, BIOS 1.16.1-1.el9 04\/01\/2014\nCall Trace:\n <IRQ>\ndump_stack_lvl (lib\/dump_stack.c:124)\nprint_address_description.constprop.0 (mm\/kasan\/report.c:378)\n? dst_destroy (net\/core\/dst.c:112)\nprint_report (mm\/kasan\/report.c:489)\n? dst_destroy (net\/core\/dst.c:112)\n? kasan_addr_to_slab (mm\/kasan\/common.c:37)\nkasan_report (mm\/kasan\/report.c:603)\n? dst_destroy (net\/core\/dst.c:112)\n? rcu_do_batch (kernel\/rcu\/tree.c:2567)\ndst_destroy (net\/core\/dst.c:112)\nrcu_do_batch (kernel\/rcu\/tree.c:2567)\n? __pfx_rcu_do_batch (kernel\/rcu\/tree.c:2491)\n? lockdep_hardirqs_on_prepare (kernel\/locking\/lockdep.c:4339 kernel\/locking\/lockdep.c:4406)\nrcu_core (kernel\/rcu\/tree.c:2825)\nhandle_softirqs (kernel\/softirq.c:554)\n__irq_exit_rcu (kernel\/softirq.c:589 kernel\/softirq.c:428 kernel\/softirq.c:637)\nirq_exit_rcu (kernel\/softirq.c:651)\nsysvec_apic_timer_interrupt (arch\/x86\/kernel\/apic\/apic.c:1049 arch\/x86\/kernel\/apic\/apic.c:1049)\n <\/IRQ>\n <TASK>\nasm_sysvec_apic_timer_interrupt (.\/arch\/x86\/include\/asm\/idtentry.h:702)\nRIP: 0010:default_idle (.\/arch\/x86\/include\/asm\/irqflags.h:37 .\/arch\/x86\/include\/asm\/irqflags.h:92 arch\/x86\/kernel\/process.c:743)\nCode: 00 4d 29 c8 4c 01 c7 4c 29 c2 e9 6e ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 90 0f 00 2d c7 c9 27 00 fb f4 <fa> c3 cc cc cc cc 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 90\nRSP: 0018:ffff888100d2fe00 EFLAGS: 00000246\nRAX: 00000000001870ed RBX: 1ffff110201a5fc2 RCX: ffffffffb61a3e46\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffffffffb3d4d123\nRBP: 0000000000000000 R08: 0000000000000001 R09: ffffed11c7e1835d\nR10: ffff888e3f0c1aeb R11: 0000000000000000 R12: 0000000000000000\nR13: ffff888100d20000 R14: dffffc0000000000 R15: 0000000000000000\n? ct_kernel_exit.constprop.0 (kernel\/context_tracking.c:148)\n? cpuidle_idle_call (kernel\/sched\/idle.c:186)\ndefault_idle_call (.\/include\/linux\/cpuidle.h:143 kernel\/sched\/idle.c:118)\ncpuidle_idle_call (kernel\/sched\/idle.c:186)\n? __pfx_cpuidle_idle_call (kernel\/sched\/idle.c:168)\n? lock_release (kernel\/locking\/lockdep.c:467 kernel\/locking\/lockdep.c:5848)\n? lockdep_hardirqs_on_prepare (kernel\/locking\/lockdep.c:4347 kernel\/locking\/lockdep.c:4406)\n? tsc_verify_tsc_adjust (arch\/x86\/kernel\/tsc_sync.c:59)\ndo_idle (kernel\/sched\/idle.c:326)\ncpu_startup_entry (kernel\/sched\/idle.c:423 (discriminator 1))\nstart_secondary (arch\/x86\/kernel\/smpboot.c:202 arch\/x86\/kernel\/smpboot.c:282)\n? __pfx_start_secondary (arch\/x86\/kernel\/smpboot.c:232)\n? soft_restart_cpu (arch\/x86\/kernel\/head_64.S:452)\ncommon_startup_64 (arch\/x86\/kernel\/head_64.S:414)\n <\/TASK>\nDec 03 05:46:18 kernel:\nAllocated by task 12184:\nkasan_save_stack (mm\/kasan\/common.c:48)\nkasan_save_track (.\/arch\/x86\/include\/asm\/current.h:49 mm\/kasan\/common.c:60 mm\/kasan\/common.c:69)\n__kasan_slab_alloc (mm\/kasan\/common.c:319 mm\/kasan\/common.c:345)\nkmem_cache_alloc_noprof (mm\/slub.c:4085 mm\/slub.c:4134 mm\/slub.c:4141)\ncopy_net_ns (net\/core\/net_namespace.c:421 net\/core\/net_namespace.c:480)\ncreate_new_namespaces\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f6ede9fbc747e2553612271bce108f7517e7a45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3267b254dc0a04dfa362a2be24573cfa6d2d78f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6610c7f8a8d47fd1123eed55ba8c11c2444d8842","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7a79e51297f7b82adb687086f5cb2da446f1e40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56659","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.747","lastModified":"2024-12-27T15:15:25.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lapb: increase LAPB_HEADER_LEN\n\nIt is unclear if net\/lapb code is supposed to be ready for 8021q.\n\nWe can at least avoid crashes like the following :\n\nskbuff: skb_under_panic: text:ffffffff8aabe1f6 len:24 put:20 head:ffff88802824a400 data:ffff88802824a3fe tail:0x16 end:0x140 dev:nr0.2\n------------[ cut here ]------------\n kernel BUG at net\/core\/skbuff.c:206 !\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 1 UID: 0 PID: 5508 Comm: dhcpcd Not tainted 6.12.0-rc7-syzkaller-00144-g66418447d27b #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/30\/2024\n RIP: 0010:skb_panic net\/core\/skbuff.c:206 [inline]\n RIP: 0010:skb_under_panic+0x14b\/0x150 net\/core\/skbuff.c:216\nCode: 0d 8d 48 c7 c6 2e 9e 29 8e 48 8b 54 24 08 8b 0c 24 44 8b 44 24 04 4d 89 e9 50 41 54 41 57 41 56 e8 1a 6f 37 02 48 83 c4 20 90 <0f> 0b 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3\nRSP: 0018:ffffc90002ddf638 EFLAGS: 00010282\nRAX: 0000000000000086 RBX: dffffc0000000000 RCX: 7a24750e538ff600\nRDX: 0000000000000000 RSI: 0000000000000201 RDI: 0000000000000000\nRBP: ffff888034a86650 R08: ffffffff8174b13c R09: 1ffff920005bbe60\nR10: dffffc0000000000 R11: fffff520005bbe61 R12: 0000000000000140\nR13: ffff88802824a400 R14: ffff88802824a3fe R15: 0000000000000016\nFS:  00007f2a5990d740(0000) GS:ffff8880b8700000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000110c2631fd CR3: 0000000029504000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  skb_push+0xe5\/0x100 net\/core\/skbuff.c:2636\n  nr_header+0x36\/0x320 net\/netrom\/nr_dev.c:69\n  dev_hard_header include\/linux\/netdevice.h:3148 [inline]\n  vlan_dev_hard_header+0x359\/0x480 net\/8021q\/vlan_dev.c:83\n  dev_hard_header include\/linux\/netdevice.h:3148 [inline]\n  lapbeth_data_transmit+0x1f6\/0x2a0 drivers\/net\/wan\/lapbether.c:257\n  lapb_data_transmit+0x91\/0xb0 net\/lapb\/lapb_iface.c:447\n  lapb_transmit_buffer+0x168\/0x1f0 net\/lapb\/lapb_out.c:149\n lapb_establish_data_link+0x84\/0xd0\n lapb_device_event+0x4e0\/0x670\n  notifier_call_chain+0x19f\/0x3e0 kernel\/notifier.c:93\n __dev_notify_flags+0x207\/0x400\n  dev_change_flags+0xf0\/0x1a0 net\/core\/dev.c:8922\n  devinet_ioctl+0xa4e\/0x1aa0 net\/ipv4\/devinet.c:1188\n  inet_ioctl+0x3d7\/0x4f0 net\/ipv4\/af_inet.c:1003\n  sock_do_ioctl+0x158\/0x460 net\/socket.c:1227\n  sock_ioctl+0x626\/0x8e0 net\/socket.c:1346\n  vfs_ioctl fs\/ioctl.c:51 [inline]\n  __do_sys_ioctl fs\/ioctl.c:907 [inline]\n  __se_sys_ioctl+0xf9\/0x170 fs\/ioctl.c:893\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03e661b5e7aa1124f24054df9ab2ee5cb2178973","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b351355bbd50ae25d096785b6eb31998d2bf765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3aa2ef7ffd0451e8f81c249d2a2a68283c6bc700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76d856f03d0290cf5392364ecdf74c15ee16b8fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6d75ecee2bf828ac6a1b52724aba0a977e4eaf4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c21c7c1c00bcc60cf752ec491bdfd47693f4d3c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0949199651bc87c5ed2c12a7323f441f1af6fe9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56660","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.857","lastModified":"2024-12-27T15:15:25.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: DR, prevent potential error pointer dereference\n\nThe dr_domain_add_vport_cap() function generally returns NULL on error\nbut sometimes we want it to return ERR_PTR(-EBUSY) so the caller can\nretry.  The problem here is that \"ret\" can be either -EBUSY or -ENOMEM\nand if it's and -ENOMEM then the error pointer is propogated back and\neventually dereferenced in dr_ste_v0_build_src_gvmi_qpn_tag()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11776cff0b563c8b8a4fa76cab620bfb633a8cb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/325cf73a1b449fea3158ab99d03a7a717aad1618","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61f720e801443d4e2a3c0261eda4ad8431458dca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a59c61a1869ceefc65ef02886f91e8cd0062211f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56661","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:25.960","lastModified":"2024-12-27T15:15:25.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix NULL deref in cleanup_bearer()\n\nsyzbot found [1] that after blamed commit, ub->ubsock->sk\nwas NULL when attempting the atomic_dec() :\n\natomic_dec(&tipc_net(sock_net(ub->ubsock->sk))->wq_count);\n\nFix this by caching the tipc_net pointer.\n\n[1]\n\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000006: 0000 [#1] PREEMPT SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\nCPU: 0 UID: 0 PID: 5896 Comm: kworker\/0:3 Not tainted 6.13.0-rc1-next-20241203-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\nWorkqueue: events cleanup_bearer\n RIP: 0010:read_pnet include\/net\/net_namespace.h:387 [inline]\n RIP: 0010:sock_net include\/net\/sock.h:655 [inline]\n RIP: 0010:cleanup_bearer+0x1f7\/0x280 net\/tipc\/udp_media.c:820\nCode: 18 48 89 d8 48 c1 e8 03 42 80 3c 28 00 74 08 48 89 df e8 3c f7 99 f6 48 8b 1b 48 83 c3 30 e8 f0 e4 60 00 48 89 d8 48 c1 e8 03 <42> 80 3c 28 00 74 08 48 89 df e8 1a f7 99 f6 49 83 c7 e8 48 8b 1b\nRSP: 0018:ffffc9000410fb70 EFLAGS: 00010206\nRAX: 0000000000000006 RBX: 0000000000000030 RCX: ffff88802fe45a00\nRDX: 0000000000000001 RSI: 0000000000000008 RDI: ffffc9000410f900\nRBP: ffff88807e1f0908 R08: ffffc9000410f907 R09: 1ffff92000821f20\nR10: dffffc0000000000 R11: fffff52000821f21 R12: ffff888031d19980\nR13: dffffc0000000000 R14: dffffc0000000000 R15: ffff88807e1f0918\nFS:  0000000000000000(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000556ca050b000 CR3: 0000000031c0c000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07b569eda6fe6a1e83be5a587abee12d1303f95e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/754ec823ee53422361da7958a8c8bf3275426912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89ecda492d0a37fd00aaffc4151f1f44c26d93ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a771f349c95d3397636861a0a6462d4a7a7ecb25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a852c82eda4991e21610837aaa160965be71f5cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04d86fff66b15c07505d226431f808c15b1703c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1d4dfb189a115734bff81c411bc58d9e348db7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56662","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.073","lastModified":"2024-12-27T15:15:26.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nacpi: nfit: vmalloc-out-of-bounds Read in acpi_nfit_ctl\n\nFix an issue detected by syzbot with KASAN:\n\nBUG: KASAN: vmalloc-out-of-bounds in cmd_to_func drivers\/acpi\/nfit\/\ncore.c:416 [inline]\nBUG: KASAN: vmalloc-out-of-bounds in acpi_nfit_ctl+0x20e8\/0x24a0\ndrivers\/acpi\/nfit\/core.c:459\n\nThe issue occurs in cmd_to_func when the call_pkg->nd_reserved2\narray is accessed without verifying that call_pkg points to a buffer\nthat is appropriately sized as a struct nd_cmd_pkg. This can lead\nto out-of-bounds access and undefined behavior if the buffer does not\nhave sufficient space.\n\nTo address this, a check was added in acpi_nfit_ctl() to ensure that\nbuf is not NULL and that buf_len is less than sizeof(*call_pkg)\nbefore accessing it. This ensures safe access to the members of\ncall_pkg, including the nd_reserved2 array."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/143f723e9eb4f0302ffb7adfdc7ef77eab3f68e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/212846fafb753a48e869e2a342fc1e24048da771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/265e98f72bac6c41a4492d3e30a8e5fd22fe0779","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/616aa5f3c86e0479bcbb81e41c08c43ff32af637","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbdb3307f609ec4dc9558770f464ede01fe52aed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e08dc2dc3c3f7938df0e4476fe3e6fdec5583c1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56663","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.187","lastModified":"2024-12-27T15:15:26.187","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: nl80211: fix NL80211_ATTR_MLO_LINK_ID off-by-one\n\nSince the netlink attribute range validation provides inclusive\nchecking, the *max* of attribute NL80211_ATTR_MLO_LINK_ID should be\nIEEE80211_MLD_MAX_NUM_LINKS - 1 otherwise causing an off-by-one.\n\nOne crash stack for demonstration:\n==================================================================\nBUG: KASAN: wild-memory-access in ieee80211_tx_control_port+0x3b6\/0xca0 net\/mac80211\/tx.c:5939\nRead of size 6 at addr 001102080000000c by task fuzzer.386\/9508\n\nCPU: 1 PID: 9508 Comm: syz.1.386 Not tainted 6.1.70 #2\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0x177\/0x231 lib\/dump_stack.c:106\n print_report+0xe0\/0x750 mm\/kasan\/report.c:398\n kasan_report+0x139\/0x170 mm\/kasan\/report.c:495\n kasan_check_range+0x287\/0x290 mm\/kasan\/generic.c:189\n memcpy+0x25\/0x60 mm\/kasan\/shadow.c:65\n ieee80211_tx_control_port+0x3b6\/0xca0 net\/mac80211\/tx.c:5939\n rdev_tx_control_port net\/wireless\/rdev-ops.h:761 [inline]\n nl80211_tx_control_port+0x7b3\/0xc40 net\/wireless\/nl80211.c:15453\n genl_family_rcv_msg_doit+0x22e\/0x320 net\/netlink\/genetlink.c:756\n genl_family_rcv_msg net\/netlink\/genetlink.c:833 [inline]\n genl_rcv_msg+0x539\/0x740 net\/netlink\/genetlink.c:850\n netlink_rcv_skb+0x1de\/0x420 net\/netlink\/af_netlink.c:2508\n genl_rcv+0x24\/0x40 net\/netlink\/genetlink.c:861\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1326 [inline]\n netlink_unicast+0x74b\/0x8c0 net\/netlink\/af_netlink.c:1352\n netlink_sendmsg+0x882\/0xb90 net\/netlink\/af_netlink.c:1874\n sock_sendmsg_nosec net\/socket.c:716 [inline]\n __sock_sendmsg net\/socket.c:728 [inline]\n ____sys_sendmsg+0x5cc\/0x8f0 net\/socket.c:2499\n ___sys_sendmsg+0x21c\/0x290 net\/socket.c:2553\n __sys_sendmsg net\/socket.c:2582 [inline]\n __do_sys_sendmsg net\/socket.c:2591 [inline]\n __se_sys_sendmsg+0x19e\/0x270 net\/socket.c:2589\n do_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\n do_syscall_64+0x45\/0x90 arch\/x86\/entry\/common.c:81\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nUpdate the policy to ensure correct validation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29e640ae641b9f5ffc666049426d2b16c98d9963","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e3dbf938656986cce73ac4083500d0bcfbffe24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3412522f78826fef1dfae40ef378a863df2591c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f850d1d9f1106f528dfc5807565f2d1fa9a397d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56664","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.297","lastModified":"2024-12-27T15:15:26.297","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix race between element replace and close()\n\nElement replace (with a socket different from the one stored) may race\nwith socket's close() link popping & unlinking. __sock_map_delete()\nunconditionally unrefs the (wrong) element:\n\n\/\/ set map[0] = s0\nmap_update_elem(map, 0, s0)\n\n\/\/ drop fd of s0\nclose(s0)\n  sock_map_close()\n    lock_sock(sk)               (s0!)\n    sock_map_remove_links(sk)\n      link = sk_psock_link_pop()\n      sock_map_unlink(sk, link)\n        sock_map_delete_from_link\n                                        \/\/ replace map[0] with s1\n                                        map_update_elem(map, 0, s1)\n                                          sock_map_update_elem\n                                (s1!)       lock_sock(sk)\n                                            sock_map_update_common\n                                              psock = sk_psock(sk)\n                                              spin_lock(&stab->lock)\n                                              osk = stab->sks[idx]\n                                              sock_map_add_link(..., &stab->sks[idx])\n                                              sock_map_unref(osk, &stab->sks[idx])\n                                                psock = sk_psock(osk)\n                                                sk_psock_put(sk, psock)\n                                                  if (refcount_dec_and_test(&psock))\n                                                    sk_psock_drop(sk, psock)\n                                              spin_unlock(&stab->lock)\n                                            unlock_sock(sk)\n          __sock_map_delete\n            spin_lock(&stab->lock)\n            sk = *psk                        \/\/ s1 replaced s0; sk == s1\n            if (!sk_test || sk_test == sk)   \/\/ sk_test (s0) != sk (s1); no branch\n              sk = xchg(psk, NULL)\n            if (sk)\n              sock_map_unref(sk, psk)        \/\/ unref s1; sks[idx] will dangle\n                psock = sk_psock(sk)\n                sk_psock_put(sk, psock)\n                  if (refcount_dec_and_test())\n                    sk_psock_drop(sk, psock)\n            spin_unlock(&stab->lock)\n    release_sock(sk)\n\nThen close(map) enqueues bpf_map_free_deferred, which finally calls\nsock_map_free(). This results in some refcount_t warnings along with\na KASAN splat [1].\n\nFix __sock_map_delete(), do not allow sock_map_unref() on elements that\nmay have been replaced.\n\n[1]:\nBUG: KASAN: slab-use-after-free in sock_map_free+0x10e\/0x330\nWrite of size 4 at addr ffff88811f5b9100 by task kworker\/u64:12\/1063\n\nCPU: 14 UID: 0 PID: 1063 Comm: kworker\/u64:12 Not tainted 6.12.0+ #125\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04\/01\/2014\nWorkqueue: events_unbound bpf_map_free_deferred\nCall Trace:\n <TASK>\n dump_stack_lvl+0x68\/0x90\n print_report+0x174\/0x4f6\n kasan_report+0xb9\/0x190\n kasan_check_range+0x10f\/0x1e0\n sock_map_free+0x10e\/0x330\n bpf_map_free_deferred+0x173\/0x320\n process_one_work+0x846\/0x1420\n worker_thread+0x5b3\/0xf80\n kthread+0x29e\/0x360\n ret_from_fork+0x2d\/0x70\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\n\nAllocated by task 1202:\n kasan_save_stack+0x1e\/0x40\n kasan_save_track+0x10\/0x30\n __kasan_slab_alloc+0x85\/0x90\n kmem_cache_alloc_noprof+0x131\/0x450\n sk_prot_alloc+0x5b\/0x220\n sk_alloc+0x2c\/0x870\n unix_create1+0x88\/0x8a0\n unix_create+0xc5\/0x180\n __sock_create+0x241\/0x650\n __sys_socketpair+0x1ce\/0x420\n __x64_sys_socketpair+0x92\/0x100\n do_syscall_64+0x93\/0x180\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFreed by task 46:\n kasan_save_stack+0x1e\/0x40\n kasan_save_track+0x10\/0x30\n kasan_save_free_info+0x37\/0x60\n __kasan_slab_free+0x4b\/0x70\n kmem_cache_free+0x1a1\/0x590\n __sk_destruct+0x388\/0x5a0\n sk_psock_destroy+0x73e\/0xa50\n process_one_work+0x846\/0x1420\n worker_thread+0x5b3\/0xf80\n kthread+0x29e\/0x360\n ret_from_fork+0x2d\/0x70\n ret_from_fork_asm+0x1a\/0x30\n\nThe bu\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b015f19fedd2e12283a8450dd0aefce49ec57015","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf2318e288f636a882eea39f7e1015623629f168","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed1fc5d76b81a4d681211333c026202cad4d5649","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56665","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.400","lastModified":"2024-12-27T15:15:26.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf,perf: Fix invalid prog_array access in perf_event_detach_bpf_prog\n\nSyzbot reported [1] crash that happens for following tracing scenario:\n\n  - create tracepoint perf event with attr.inherit=1, attach it to the\n    process and set bpf program to it\n  - attached process forks -> chid creates inherited event\n\n    the new child event shares the parent's bpf program and tp_event\n    (hence prog_array) which is global for tracepoint\n\n  - exit both process and its child -> release both events\n  - first perf_event_detach_bpf_prog call will release tp_event->prog_array\n    and second perf_event_detach_bpf_prog will crash, because\n    tp_event->prog_array is NULL\n\nThe fix makes sure the perf_event_detach_bpf_prog checks prog_array\nis valid before it tries to remove the bpf program from it.\n\n[1] https:\/\/lore.kernel.org\/bpf\/Z1MR6dCIKajNS6nU@krava\/T\/#m91dbf0688221ec7a7fc95e896a7ef9ff93b0b8ad"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/842e5af282453983586e2eae3c8eaf252de5f22f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/978c4486cca5c7b9253d3ab98a88c8e769cb9bbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2b6b47662d5f2dfce92e5ffbdcac8229f321d9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfb15ddf3b65e0df2129f9756d1b4fa78055cdb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56666","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.503","lastModified":"2024-12-27T15:15:26.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Dereference null return value\n\nIn the function pqm_uninit there is a call-assignment of \"pdd =\nkfd_get_process_device_data\" which could be null, and this value was\nlater dereferenced without checking."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/768442d918932c4da09003f1fd6be1750b93a4ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a592bb19abdc2072875c87da606461bfd7821b08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56667","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.600","lastModified":"2024-12-27T15:15:26.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915: Fix NULL pointer dereference in capture_engine\n\nWhen the intel_context structure contains NULL,\nit raises a NULL pointer dereference error in drm_info().\n\n(cherry picked from commit 754302a5bc1bd8fd3b7d85c168b0a1af6d4bba4d)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/da0b986256ae9a78b0215214ff44f271bfe237c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e07f9c92bd127f8835ac669d83b5e7ff59bbb40f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6ebe4f14a267bc431d0eebab4f335c0ebd45977","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56668","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.693","lastModified":"2024-12-27T15:15:26.693","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix qi_batch NULL pointer with nested parent domain\n\nThe qi_batch is allocated when assigning cache tag for a domain. While\nfor nested parent domain, it is missed. Hence, when trying to map pages\nto the nested parent, NULL dereference occurred. Also, there is potential\nmemleak since there is no lock around domain->qi_batch allocation.\n\nTo solve it, add a helper for qi_batch allocation, and call it in both\nthe __cache_tag_assign_domain() and __cache_tag_assign_parent_domain().\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000200\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 8104795067 P4D 0\n  Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 223 UID: 0 PID: 4357 Comm: qemu-system-x86 Not tainted 6.13.0-rc1-00028-g4b50c3c3b998-dirty #2632\n  Call Trace:\n   ? __die+0x24\/0x70\n   ? page_fault_oops+0x80\/0x150\n   ? do_user_addr_fault+0x63\/0x7b0\n   ? exc_page_fault+0x7c\/0x220\n   ? asm_exc_page_fault+0x26\/0x30\n   ? cache_tag_flush_range_np+0x13c\/0x260\n   intel_iommu_iotlb_sync_map+0x1a\/0x30\n   iommu_map+0x61\/0xf0\n   batch_to_domain+0x188\/0x250\n   iopt_area_fill_domains+0x125\/0x320\n   ? rcu_is_watching+0x11\/0x50\n   iopt_map_pages+0x63\/0x100\n   iopt_map_common.isra.0+0xa7\/0x190\n   iopt_map_user_pages+0x6a\/0x80\n   iommufd_ioas_map+0xcd\/0x1d0\n   iommufd_fops_ioctl+0x118\/0x1c0\n   __x64_sys_ioctl+0x93\/0xc0\n   do_syscall_64+0x71\/0x140\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/74536f91962d5f6af0a42414773ce61e653c10ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffd774c34774fd4cc0e9cf2976595623a6c3a077","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56669","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.797","lastModified":"2024-12-27T15:15:26.797","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Remove cache tags before disabling ATS\n\nThe current implementation removes cache tags after disabling ATS,\nleading to potential memory leaks and kernel crashes. Specifically,\nCACHE_TAG_DEVTLB type cache tags may still remain in the list even\nafter the domain is freed, causing a use-after-free condition.\n\nThis issue really shows up when multiple VFs from different PFs\npassed through to a single user-space process via vfio-pci. In such\ncases, the kernel may crash with kernel messages like:\n\n BUG: kernel NULL pointer dereference, address: 0000000000000014\n PGD 19036a067 P4D 1940a3067 PUD 136c9b067 PMD 0\n Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n CPU: 74 UID: 0 PID: 3183 Comm: testCli Not tainted 6.11.9 #2\n RIP: 0010:cache_tag_flush_range+0x9b\/0x250\n Call Trace:\n  <TASK>\n  ? __die+0x1f\/0x60\n  ? page_fault_oops+0x163\/0x590\n  ? exc_page_fault+0x72\/0x190\n  ? asm_exc_page_fault+0x22\/0x30\n  ? cache_tag_flush_range+0x9b\/0x250\n  ? cache_tag_flush_range+0x5d\/0x250\n  intel_iommu_tlb_sync+0x29\/0x40\n  intel_iommu_unmap_pages+0xfe\/0x160\n  __iommu_unmap+0xd8\/0x1a0\n  vfio_unmap_unpin+0x182\/0x340 [vfio_iommu_type1]\n  vfio_remove_dma+0x2a\/0xb0 [vfio_iommu_type1]\n  vfio_iommu_type1_ioctl+0xafa\/0x18e0 [vfio_iommu_type1]\n\nMove cache_tag_unassign_domain() before iommu_disable_pci_caps() to fix\nit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f2557e08a617a4b5e92a48a1a9a6f86621def18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a0a72d3ed919ebe6491f527630998be053151d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56670","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.890","lastModified":"2024-12-27T15:15:26.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: u_serial: Fix the issue that gs_start_io crashed due to accessing null pointer\n\nConsidering that in some extreme cases,\nwhen u_serial driver is accessed by multiple threads,\nThread A is executing the open operation and calling the gs_open,\nThread B is executing the disconnect operation and calling the\ngserial_disconnect function,The port->port_usb pointer will be set to NULL.\n\nE.g.\n    Thread A                                 Thread B\n    gs_open()                                gadget_unbind_driver()\n    gs_start_io()                            composite_disconnect()\n    gs_start_rx()                            gserial_disconnect()\n    ...                                      ...\n    spin_unlock(&port->port_lock)\n    status = usb_ep_queue()                  spin_lock(&port->port_lock)\n    spin_lock(&port->port_lock)              port->port_usb = NULL\n    gs_free_requests(port->port_usb->in)     spin_unlock(&port->port_lock)\n    Crash\n\nThis causes thread A to access a null pointer (port->port_usb is null)\nwhen calling the gs_free_requests function, causing a crash.\n\nIf port_usb is NULL, the release request will be skipped as it\nwill be done by gserial_disconnect.\n\nSo add a null pointer check to gs_start_io before attempting\nto access the value of the pointer port->port_usb.\n\nCall trace:\n gs_start_io+0x164\/0x25c\n gs_open+0x108\/0x13c\n tty_open+0x314\/0x638\n chrdev_open+0x1b8\/0x258\n do_dentry_open+0x2c4\/0x700\n vfs_open+0x2c\/0x3c\n path_openat+0xa64\/0xc60\n do_filp_open+0xb8\/0x164\n do_sys_openat2+0x84\/0xf0\n __arm64_sys_openat+0x70\/0x9c\n invoke_syscall+0x58\/0x114\n el0_svc_common+0x80\/0xe0\n do_el0_svc+0x1c\/0x28\n el0_svc+0x38\/0x68"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1247e1df086aa6c17ab53cd1bedce70dd7132765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28b3c03a6790de1f6f2683919ad657840f0f0f58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cfbca86f6a8b801f3254e0e3c8f2b1d2d64be2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4efdfdc32d8d6307f968cd99f1db64468471bab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ca07a3d18f39b1669927ef536e485787e856df6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c83213b6649d22656b3a4e92544ceeea8a2c6c07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd6b0ca6025f64ccb465a6a3460c5b0307ed9c44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56671","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:26.993","lastModified":"2024-12-27T15:15:26.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: graniterapids: Fix vGPIO driver crash\n\nMove setting irq_chip.name from probe() function to the initialization\nof \"irq_chip\" struct in order to fix vGPIO driver crash during bootup.\n\nCrash was caused by unauthorized modification of irq_chip.name field\nwhere irq_chip struct was initialized as const.\n\nThis behavior is a consequence of suboptimal implementation of\ngpio_irq_chip_set_chip(), which should be changed to avoid\ncasting away const qualifier.\n\nCrash log:\nBUG: unable to handle page fault for address: ffffffffc0ba81c0\n\/#PF: supervisor write access in kernel mode\n\/#PF: error_code(0x0003) - permissions violation\nCPU: 33 UID: 0 PID: 1075 Comm: systemd-udevd Not tainted 6.12.0-rc6-00077-g2e1b3cc9d7f7 #1\nHardware name: Intel Corporation Kaseyville RP\/Kaseyville RP, BIOS KVLDCRB1.PGS.0026.D73.2410081258 10\/08\/2024\nRIP: 0010:gnr_gpio_probe+0x171\/0x220 [gpio_graniterapids]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e631cab10c6b287a33c35953e6dbda1f7f89bc1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb9640fd1ce666610b77f5997596e9570a36378f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56672","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:27.107","lastModified":"2024-12-27T15:15:27.107","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: Fix UAF in blkcg_unpin_online()\n\nblkcg_unpin_online() walks up the blkcg hierarchy putting the online pin. To\nwalk up, it uses blkcg_parent(blkcg) but it was calling that after\nblkcg_destroy_blkgs(blkcg) which could free the blkcg, leading to the\nfollowing UAF:\n\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in blkcg_unpin_online+0x15a\/0x270\n  Read of size 8 at addr ffff8881057678c0 by task kworker\/9:1\/117\n\n  CPU: 9 UID: 0 PID: 117 Comm: kworker\/9:1 Not tainted 6.13.0-rc1-work-00182-gb8f52214c61a-dirty #48\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS unknown 02\/02\/2022\n  Workqueue: cgwb_release cgwb_release_workfn\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x27\/0x80\n   print_report+0x151\/0x710\n   kasan_report+0xc0\/0x100\n   blkcg_unpin_online+0x15a\/0x270\n   cgwb_release_workfn+0x194\/0x480\n   process_scheduled_works+0x71b\/0xe20\n   worker_thread+0x82a\/0xbd0\n   kthread+0x242\/0x2c0\n   ret_from_fork+0x33\/0x70\n   ret_from_fork_asm+0x1a\/0x30\n   <\/TASK>\n  ...\n  Freed by task 1944:\n   kasan_save_track+0x2b\/0x70\n   kasan_save_free_info+0x3c\/0x50\n   __kasan_slab_free+0x33\/0x50\n   kfree+0x10c\/0x330\n   css_free_rwork_fn+0xe6\/0xb30\n   process_scheduled_works+0x71b\/0xe20\n   worker_thread+0x82a\/0xbd0\n   kthread+0x242\/0x2c0\n   ret_from_fork+0x33\/0x70\n   ret_from_fork_asm+0x1a\/0x30\n\nNote that the UAF is not easy to trigger as the free path is indirected\nbehind a couple RCU grace periods and a work item execution. I could only\ntrigger it with artifical msleep() injected in blkcg_unpin_online().\n\nFix it by reading the parent pointer before destroying the blkcg's blkg's."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29d1e06560f0f6179062ac638b4064deb637d1ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5baa28569c924d9a90d036c2aaab79f791fedaf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64afc6fe24c9896c0153e5a199bcea241ecb0d5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86e6ca55b83c575ab0f2e105cf08f98e58d3d7af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56673","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:27.210","lastModified":"2024-12-27T15:15:27.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: mm: Do not call pmd dtor on vmemmap page table teardown\n\nThe vmemmap's, which is used for RV64 with SPARSEMEM_VMEMMAP, page\ntables are populated using pmd (page middle directory) hugetables.\nHowever, the pmd allocation is not using the generic mechanism used by\nthe VMA code (e.g. pmd_alloc()), or the RISC-V specific\ncreate_pgd_mapping()\/alloc_pmd_late(). Instead, the vmemmap page table\ncode allocates a page, and calls vmemmap_set_pmd(). This results in\nthat the pmd ctor is *not* called, nor would it make sense to do so.\n\nNow, when tearing down a vmemmap page table pmd, the cleanup code\nwould unconditionally, and incorrectly call the pmd dtor, which\nresults in a crash (best case).\n\nThis issue was found when running the HMM selftests:\n\n  | tools\/testing\/selftests\/mm# .\/test_hmm.sh smoke\n  | ... # when unloading the test_hmm.ko module\n  | page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x10915b\n  | flags: 0x1000000000000000(node=0|zone=1)\n  | raw: 1000000000000000 0000000000000000 dead000000000122 0000000000000000\n  | raw: 0000000000000000 0000000000000000 00000001ffffffff 0000000000000000\n  | page dumped because: VM_BUG_ON_PAGE(ptdesc->pmd_huge_pte)\n  | ------------[ cut here ]------------\n  | kernel BUG at include\/linux\/mm.h:3080!\n  | Kernel BUG [#1]\n  | Modules linked in: test_hmm(-) sch_fq_codel fuse drm drm_panel_orientation_quirks backlight dm_mod\n  | CPU: 1 UID: 0 PID: 514 Comm: modprobe Tainted: G        W          6.12.0-00982-gf2a4f1682d07 #2\n  | Tainted: [W]=WARN\n  | Hardware name: riscv-virtio qemu\/qemu, BIOS 2024.10 10\/01\/2024\n  | epc : remove_pgd_mapping+0xbec\/0x1070\n  |  ra : remove_pgd_mapping+0xbec\/0x1070\n  | epc : ffffffff80010a68 ra : ffffffff80010a68 sp : ff20000000a73940\n  |  gp : ffffffff827b2d88 tp : ff6000008785da40 t0 : ffffffff80fbce04\n  |  t1 : 0720072007200720 t2 : 706d756420656761 s0 : ff20000000a73a50\n  |  s1 : ff6000008915cff8 a0 : 0000000000000039 a1 : 0000000000000008\n  |  a2 : ff600003fff0de20 a3 : 0000000000000000 a4 : 0000000000000000\n  |  a5 : 0000000000000000 a6 : c0000000ffffefff a7 : ffffffff824469b8\n  |  s2 : ff1c0000022456c0 s3 : ff1ffffffdbfffff s4 : ff6000008915c000\n  |  s5 : ff6000008915c000 s6 : ff6000008915c000 s7 : ff1ffffffdc00000\n  |  s8 : 0000000000000001 s9 : ff1ffffffdc00000 s10: ffffffff819a31f0\n  |  s11: ffffffffffffffff t3 : ffffffff8000c950 t4 : ff60000080244f00\n  |  t5 : ff60000080244000 t6 : ff20000000a73708\n  | status: 0000000200000120 badaddr: ffffffff80010a68 cause: 0000000000000003\n  | [<ffffffff80010a68>] remove_pgd_mapping+0xbec\/0x1070\n  | [<ffffffff80fd238e>] vmemmap_free+0x14\/0x1e\n  | [<ffffffff8032e698>] section_deactivate+0x220\/0x452\n  | [<ffffffff8032ef7e>] sparse_remove_section+0x4a\/0x58\n  | [<ffffffff802f8700>] __remove_pages+0x7e\/0xba\n  | [<ffffffff803760d8>] memunmap_pages+0x2bc\/0x3fe\n  | [<ffffffff02a3ca28>] dmirror_device_remove_chunks+0x2ea\/0x518 [test_hmm]\n  | [<ffffffff02a3e026>] hmm_dmirror_exit+0x3e\/0x1018 [test_hmm]\n  | [<ffffffff80102c14>] __riscv_sys_delete_module+0x15a\/0x2a6\n  | [<ffffffff80fd020c>] do_trap_ecall_u+0x1f2\/0x266\n  | [<ffffffff80fde0a2>] _new_vmalloc_restore_context_a0+0xc6\/0xd2\n  | Code: bf51 7597 0184 8593 76a5 854a 4097 0029 80e7 2c00 (9002) 7597\n  | ---[ end trace 0000000000000000 ]---\n  | Kernel panic - not syncing: Fatal exception in interrupt\n\nAdd a check to avoid calling the pmd dtor, if the calling context is\nvmemmap_free()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21f1b85c8912262adf51707e63614a114425eb10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/344945806f2f7af68be98bac02836c867f223aa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56674","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:27.313","lastModified":"2024-12-27T15:15:27.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: correct netdev_tx_reset_queue() invocation point\n\nWhen virtnet_close is followed by virtnet_open, some TX completions can\npossibly remain unconsumed, until they are finally processed during the\nfirst NAPI poll after the netdev_tx_reset_queue(), resulting in a crash\n[1]. Commit b96ed2c97c79 (\"virtio_net: move netdev_tx_reset_queue() call\nbefore RX napi enable\") was not sufficient to eliminate all BQL crash\ncases for virtio-net.\n\nThis issue can be reproduced with the latest net-next master by running:\n`while :; do ip l set DEV down; ip l set DEV up; done` under heavy network\nTX load from inside the machine.\n\nnetdev_tx_reset_queue() can actually be dropped from virtnet_open path;\nthe device is not stopped in any case. For BQL core part, it's just like\ntraffic nearly ceases to exist for some period. For stall detector added\nto BQL, even if virtnet_close could somehow lead to some TX completions\ndelayed for long, followed by virtnet_open, we can just take it as stall\nas mentioned in commit 6025b9135f7a (\"net: dqs: add NIC stall detector\nbased on BQL\"). Note also that users can still reset stall_max via sysfs.\n\nSo, drop netdev_tx_reset_queue() from virtnet_enable_queue_pair(). This\neliminates the BQL crashes. As a result, netdev_tx_reset_queue() is now\nexplicitly required in freeze\/restore path. This patch adds it to\nimmediately after free_unused_bufs(), following the rule of thumb:\nnetdev_tx_reset_queue() should follow any SKB freeing not followed by\nnetdev_tx_completed_queue(). This seems the most consistent and\nstreamlined approach, and now netdev_tx_reset_queue() runs whenever\nfree_unused_bufs() is done.\n\n[1]:\n------------[ cut here ]------------\nkernel BUG at lib\/dynamic_queue_limits.c:99!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 7 UID: 0 PID: 1598 Comm: ip Tainted: G    N 6.12.0net-next_main+ #2\nTainted: [N]=TEST\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), \\\nBIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:dql_completed+0x26b\/0x290\nCode: b7 c2 49 89 e9 44 89 da 89 c6 4c 89 d7 e8 ed 17 47 00 58 65 ff 0d\n4d 27 90 7e 0f 85 fd fe ff ff e8 ea 53 8d ff e9 f3 fe ff ff <0f> 0b 01\nd2 44 89 d1 29 d1 ba 00 00 00 00 0f 48 ca e9 28 ff ff ff\nRSP: 0018:ffffc900002b0d08 EFLAGS: 00010297\nRAX: 0000000000000000 RBX: ffff888102398c80 RCX: 0000000080190009\nRDX: 0000000000000000 RSI: 000000000000006a RDI: 0000000000000000\nRBP: ffff888102398c00 R08: 0000000000000000 R09: 0000000000000000\nR10: 00000000000000ca R11: 0000000000015681 R12: 0000000000000001\nR13: ffffc900002b0d68 R14: ffff88811115e000 R15: ffff8881107aca40\nFS:  00007f41ded69500(0000) GS:ffff888667dc0000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000556ccc2dc1a0 CR3: 0000000104fd8003 CR4: 0000000000772ef0\nPKRU: 55555554\nCall Trace:\n <IRQ>\n ? die+0x32\/0x80\n ? do_trap+0xd9\/0x100\n ? dql_completed+0x26b\/0x290\n ? dql_completed+0x26b\/0x290\n ? do_error_trap+0x6d\/0xb0\n ? dql_completed+0x26b\/0x290\n ? exc_invalid_op+0x4c\/0x60\n ? dql_completed+0x26b\/0x290\n ? asm_exc_invalid_op+0x16\/0x20\n ? dql_completed+0x26b\/0x290\n __free_old_xmit+0xff\/0x170 [virtio_net]\n free_old_xmit+0x54\/0xc0 [virtio_net]\n virtnet_poll+0xf4\/0xe30 [virtio_net]\n ? __update_load_avg_cfs_rq+0x264\/0x2d0\n ? update_curr+0x35\/0x260\n ? reweight_entity+0x1be\/0x260\n __napi_poll.constprop.0+0x28\/0x1c0\n net_rx_action+0x329\/0x420\n ? enqueue_hrtimer+0x35\/0x90\n ? trace_hardirqs_on+0x1d\/0x80\n ? kvm_sched_clock_read+0xd\/0x20\n ? sched_clock+0xc\/0x30\n ? kvm_sched_clock_read+0xd\/0x20\n ? sched_clock+0xc\/0x30\n ? sched_clock_cpu+0xd\/0x1a0\n handle_softirqs+0x138\/0x3e0\n do_softirq.part.0+0x89\/0xc0\n <\/IRQ>\n <TASK>\n __local_bh_enable_ip+0xa7\/0xb0\n virtnet_open+0xc8\/0x310 [virtio_net]\n __dev_open+0xfa\/0x1b0\n __dev_change_flags+0x1de\/0x250\n dev_change_flags+0x22\/0x60\n do_setlink.isra.0+0x2df\/0x10b0\n ? rtnetlink_rcv_msg+0x34f\/0x3f0\n ? netlink_rcv_skb+0x54\/0x100\n ? netlink_unicas\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ddccbefebdbe0c4c72a248676e4d39ac66a8e26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4294d4ac61fbb382811a1d64eaf81f446ce2af4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-56675","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-12-27T15:15:27.420","lastModified":"2024-12-27T15:15:27.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix UAF via mismatching bpf_prog\/attachment RCU flavors\n\nUprobes always use bpf_prog_run_array_uprobe() under tasks-trace-RCU\nprotection. But it is possible to attach a non-sleepable BPF program to a\nuprobe, and non-sleepable BPF programs are freed via normal RCU (see\n__bpf_prog_put_noref()). This leads to UAF of the bpf_prog because a normal\nRCU grace period does not imply a tasks-trace-RCU grace period.\n\nFix it by explicitly waiting for a tasks-trace-RCU grace period after\nremoving the attachment of a bpf_prog to a perf_event."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9245459a992d22fe0e92e988f49db1fec82c184a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b53d2c2a38a1effc341d99be3f99fa7ef17047d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1b808e3b7c98612feceedf985c2fbbeb28f956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9f85df30118f3f4112761e6682fc60ebcce23e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-12856","sourceIdentifier":"disclosure@vulncheck.com","published":"2024-12-27T16:15:23.403","lastModified":"2024-12-27T18:15:23.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Four-Faith router models F3x24 and F3x36 are affected by an operating system (OS) command injection vulnerability. At least firmware version 2.0 allows authenticated and remote attackers to execute arbitrary OS commands over HTTP when modifying the system time via apply.cgi. Additionally, this firmware version has default credentials which, if not changed, would effectively change this vulnerability into an unauthenticated and remote OS command execution issue."}],"metrics":{"cvssMetricV31":[{"source":"disclosure@vulncheck.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":7.2,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"disclosure@vulncheck.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/ducklingstudio.blog.fc2.com\/blog-entry-392.html","source":"disclosure@vulncheck.com"},{"url":"https:\/\/vulncheck.com\/advisories\/four-faith-time","source":"disclosure@vulncheck.com"},{"url":"https:\/\/vulncheck.com\/blog\/four-faith-cve-2024-12856","source":"disclosure@vulncheck.com"},{"url":"https:\/\/vulncheck.com\/blog\/four-faith-cve-2024-12856","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-12986","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T16:15:23.927","lastModified":"2024-12-27T16:15:23.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in DrayTek Vigor2960 and Vigor300B 1.5.1.3\/1.5.1.4. This issue affects some unknown processing of the file \/cgi-bin\/mainfunction.cgi\/apmcfgupptim of the component Web Management Interface. The manipulation of the argument session leads to os command injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.5.1.5 is able to address this issue. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-77"},{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/netsecfish.notion.site\/Command-Injection-in-apmcfgupptim-endpoint-for-DrayTek-Gateway-Devices-1676b683e67c80b9ad8cc37b93273bf6?pvs=4","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289379","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289379","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.468794","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12987","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T16:15:24.143","lastModified":"2024-12-27T21:15:07.510","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in DrayTek Vigor2960 and Vigor300B 1.5.1.4. Affected is an unknown function of the file \/cgi-bin\/mainfunction.cgi\/apmcfgupload of the component Web Management Interface. The manipulation of the argument session leads to os command injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.5.1.5 is able to address this issue. It is recommended to upgrade the affected component."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-77"},{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/netsecfish.notion.site\/Command-Injection-in-apmcfgupload-endpoint-for-DrayTek-Gateway-Devices-1676b683e67c8040b7f1f0ffe29ce18f?pvs=4","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289380","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289380","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.468795","source":"cna@vuldb.com"},{"url":"https:\/\/netsecfish.notion.site\/Command-Injection-in-apmcfgupload-endpoint-for-DrayTek-Gateway-Devices-1676b683e67c8040b7f1f0ffe29ce18f","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-56507","sourceIdentifier":"security-advisories@github.com","published":"2024-12-27T16:15:25.043","lastModified":"2024-12-27T21:15:08.287","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"LinkAce is a self-hosted archive to collect links of your favorite websites. Prior to 1.15.6, a reflected cross-site scripting (XSS) vulnerability exists in the LinkAce. This issue occurs in the \"URL\" field of the \"Edit Link\" module, where user input is not properly sanitized or encoded before being reflected in the HTML response. This allows attackers to inject and execute arbitrary JavaScript in the context of the victim’s browser, leading to potential session hijacking, data theft, and unauthorized actions. This vulnerability is fixed in 1.15.6."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:L\/I:L\/A:N","baseScore":4.6,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.1,"impactScore":2.5}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/Kovah\/LinkAce\/commit\/c7cd6a323a03ccd89c7f905f7d9f2afc265b7b67","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/Kovah\/LinkAce\/security\/advisories\/GHSA-cjcg-wj4p-pgc5","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/Kovah\/LinkAce\/security\/advisories\/GHSA-cjcg-wj4p-pgc5","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-56508","sourceIdentifier":"security-advisories@github.com","published":"2024-12-27T16:15:25.187","lastModified":"2024-12-27T21:15:08.390","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"LinkAce is a self-hosted archive to collect links of your favorite websites. Prior to 1.15.6, a file upload vulnerability exists in the LinkAce. This issue occurs in the \"Import Bookmarks\" functionality, where malicious HTML files can be uploaded containing JavaScript payloads. These payloads execute when the uploaded links are accessed, leading to potential reflected or persistent XSS scenarios. This vulnerability is fixed in 1.15.6."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:H\/A:N","baseScore":7.6,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":4.7}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/github.com\/Kovah\/LinkAce\/commit\/8cf3670d71a8629d33408da76f9d441a1aa933f6","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/Kovah\/LinkAce\/security\/advisories\/GHSA-2wvv-4576-8862","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/Kovah\/LinkAce\/security\/advisories\/GHSA-2wvv-4576-8862","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-56509","sourceIdentifier":"security-advisories@github.com","published":"2024-12-27T16:15:25.333","lastModified":"2024-12-27T21:15:08.483","vulnStatus":"Awaiting Analysis","cveTags":[],"descriptions":[{"lang":"en","value":"changedetection.io is a free open source web page change detection, website watcher, restock monitor and notification service. Improper input validation in the application can allow attackers to perform local file read (LFR) or path traversal attacks. These vulnerabilities occur when user input is used to construct file paths without adequate sanitization or validation. For example, using file:..\/..\/..\/etc\/passwd or file: \/\/\/etc\/passwd can bypass weak validations and allow unauthorized access to sensitive files. Even though this has been addressed in previous patch, it is still insufficient. This vulnerability is fixed in 0.48.05."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:N\/A:N","baseScore":8.6,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":4.0}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-22"},{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/github.com\/dgtlmoon\/changedetection.io\/commit\/f7e9846c9b40a229813d19cdb66bf60fbe5e6a2a","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/dgtlmoon\/changedetection.io\/security\/advisories\/GHSA-j5vv-6wjg-cfr8","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/dgtlmoon\/changedetection.io\/security\/advisories\/GHSA-j5vv-6wjg-cfr8","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-12988","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T17:15:08.130","lastModified":"2024-12-27T19:15:08.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability has been found in Netgear R6900P and R7000P 1.3.3.154 and classified as critical. Affected by this vulnerability is the function sub_16C4C of the component HTTP Header Handler. The manipulation of the argument Host leads to buffer overflow. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:L\/VI:L\/VA:L\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"LOW","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"LOW","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":7.3,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","baseScore":7.5,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL"},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-119"},{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/github.com\/physicszq\/Routers\/tree\/main\/Netgear\/1.3.3.154","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289381","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289381","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.462781","source":"cna@vuldb.com"},{"url":"https:\/\/www.netgear.com\/","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/physicszq\/Routers\/tree\/main\/Netgear\/1.3.3.154","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-12989","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T18:15:24.777","lastModified":"2024-12-27T18:15:24.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in WISI Tangram GT31 up to 20241214 and classified as problematic. Affected by this issue is some unknown functionality of the component HTTP Request Handler. The manipulation leads to server-side request forgery. The attack may be launched remotely. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","baseScore":5.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/vuldb.com\/?ctiid.289382","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289382","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.463798","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-12990","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T18:15:25.063","lastModified":"2024-12-27T19:15:08.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in ruifang-tech Rebuild 3.8.6. It has been classified as problematic. This affects an unknown part of the file \/user\/admin-verify of the component Admin Verification Page. The manipulation of the argument nexturl with the input http:\/\/localhost\/evil.html leads to open redirect. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:N","baseScore":4.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-601"}]}],"references":[{"url":"https:\/\/github.com\/cydtseng\/Vulnerability-Research\/blob\/main\/rebuild\/OpenRedirect-AdminVerification.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289383","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289383","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.464029","source":"cna@vuldb.com"},{"url":"https:\/\/github.com\/cydtseng\/Vulnerability-Research\/blob\/main\/rebuild\/OpenRedirect-AdminVerification.md","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-50944","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T19:15:08.833","lastModified":"2024-12-27T19:15:08.833","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Integer overflow vulnerability exists in SimplCommerce at commit 230310c8d7a0408569b292c5a805c459d47a1d8f in the shopping cart functionality. The issue lies in the quantity parameter in the CartController's AddToCart method."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/AbdullahAlmutawa\/CVE-2024-50944","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/simplcommerce\/SimplCommerce","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/simplcommerce\/SimplCommerce\/issues\/1110","source":"cve@mitre.org"},{"url":"https:\/\/www.simplcommerce.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50945","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T19:15:08.963","lastModified":"2024-12-27T19:15:08.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An improper access control vulnerability exists in SimplCommerce at commit 230310c8d7a0408569b292c5a805c459d47a1d8f, allowing users to submit reviews without verifying if they have purchased the product."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/AbdullahAlmutawa\/CVE-2024-50945","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/simplcommerce\/SimplCommerce","source":"cve@mitre.org"},{"url":"https:\/\/www.simplcommerce.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-53476","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T19:15:09.103","lastModified":"2024-12-27T19:15:09.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A race condition vulnerability in SimplCommerce at commit 230310c8d7a0408569b292c5a805c459d47a1d8f allows attackers to bypass inventory restrictions by simultaneously submitting purchase requests from multiple accounts for the same product. This can lead to overselling when stock is limited, as the system fails to accurately track inventory under high concurrency, resulting in potential loss and unfulfilled orders."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/AbdullahAlmutawa\/CVE-2024-53476","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/simplcommerce\/SimplCommerce","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/simplcommerce\/SimplCommerce\/issues\/1111","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-12991","sourceIdentifier":"cna@vuldb.com","published":"2024-12-27T20:15:22.140","lastModified":"2024-12-27T20:15:22.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability was found in Beijing Longda Jushang Technology DBShop商城系统 3.3 Release 231225. It has been declared as problematic. This vulnerability affects unknown code of the file \/home-order. The manipulation of the argument orderStatus with the input %22%3E%3Csvg%20onload=alert(5888)%3E leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way."}],"metrics":{"cvssMetricV40":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:L\/UI:N\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"LOW","userInteraction":"NONE","vulnerableSystemConfidentiality":"NONE","vulnerableSystemIntegrity":"LOW","vulnerableSystemAvailability":"NONE","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":3.5,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.1,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:N","baseScore":4.0,"accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE"},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/github.com\/Hebing123\/cve\/issues\/31","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.289384","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.289384","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.464213","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-39025","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.187","lastModified":"2024-12-27T20:15:23.187","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Incorrect access control in the \/users endpoint of Cpacker MemGPT v0.3.17 allows attackers to access sensitive data."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/letta-ai\/letta\/releases\/tag\/0.3.17","source":"cve@mitre.org"},{"url":"https:\/\/medium.com\/@cnetsec\/a-vulnerability-cve-2024-39025-has-been-identified-in-lettaai-memgpt-v0-3-17-146cb38bb6db","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54450","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.313","lastModified":"2024-12-27T20:15:23.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in Kurmi Provisioning Suite 7.9.0.33. If an X-Forwarded-For header is received during authentication, the Kurmi application will record the (possibly forged) IP address mentioned in that header rather than the real IP address that the user logged in from. This fake IP address can later be displayed in the My Account popup that shows the IP address that was used to log in."}],"metrics":{},"references":[{"url":"https:\/\/kurmi-software.com","source":"cve@mitre.org"},{"url":"https:\/\/kurmi-software.com\/cve\/cve-2024-54450\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54451","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.443","lastModified":"2024-12-27T20:15:23.443","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A cross-site scripting (XSS) vulnerability in the graphicCustomization.do page in Kurmi Provisioning Suite before 7.9.0.38, 7.10.x through 7.10.0.18, and 7.11.x through 7.11.0.15 allows remote attackers (authenticated as system administrators) to inject arbitrary web script or HTML via the COMPONENT_fields(htmlTitle) field, which is rendered in other pages of the application for all users (if the graphical customization has been activated by a super-administrator)."}],"metrics":{},"references":[{"url":"https:\/\/kurmi-software.com","source":"cve@mitre.org"},{"url":"https:\/\/kurmi-software.com\/cve\/cve-2024-54451\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54452","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.557","lastModified":"2024-12-27T20:15:23.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in Kurmi Provisioning Suite before 7.9.0.35 and 7.10.x through 7.10.0.18. A Directory Traversal and Local File Inclusion vulnerability in the logsSys.do page allows remote attackers (authenticated as administrators) to trigger the display of unintended files. Any file accessible to the Kurmi user account could be displayed, e.g., configuration files with information such as the database password."}],"metrics":{},"references":[{"url":"https:\/\/kurmi-software.com","source":"cve@mitre.org"},{"url":"https:\/\/kurmi-software.com\/cve\/cve-2024-54452\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54453","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.670","lastModified":"2024-12-27T20:15:23.670","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in Kurmi Provisioning Suite before 7.9.0.35, 7.10.x through 7.10.0.18, and 7.11.x through 7.11.0.15. A path traversal vulnerability in the DocServlet servlet allows remote attackers to retrieve any file from the Kurmi web application installation folder, e.g., files such as the obfuscated and\/or compiled Kurmi source code."}],"metrics":{},"references":[{"url":"https:\/\/kurmi-software.com","source":"cve@mitre.org"},{"url":"https:\/\/kurmi-software.com\/cve\/cve-2024-54453\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54454","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T20:15:23.777","lastModified":"2024-12-27T20:15:23.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue was discovered in Kurmi Provisioning Suite before 7.9.0.35, 7.10.x through 7.10.0.18, and 7.11.x through 7.11.0.15. An Observable Response Discrepancy vulnerability in the sendPasswordReinitLink action of the unlogged.do page allows remote attackers to test whether a username is valid or not. This allows confirmation of valid usernames."}],"metrics":{},"references":[{"url":"https:\/\/kurmi-software.com","source":"cve@mitre.org"},{"url":"https:\/\/kurmi-software.com\/cve-2024-54454\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-56732","sourceIdentifier":"security-advisories@github.com","published":"2024-12-27T20:15:23.900","lastModified":"2024-12-27T20:15:23.900","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"HarfBuzz is a text shaping engine. Starting with 8.5.0 through 10.0.1, there is a heap-based buffer overflow in the hb_cairo_glyphs_from_buffer function."}],"metrics":{"cvssMetricV40":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:N\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":9.3,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"NONE","vulnerableSystemConfidentiality":"HIGH","vulnerableSystemIntegrity":"HIGH","vulnerableSystemAvailability":"HIGH","subsequentSystemConfidentiality":"NONE","subsequentSystemIntegrity":"NONE","subsequentSystemAvailability":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirements":"NOT_DEFINED","integrityRequirements":"NOT_DEFINED","availabilityRequirements":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnerableSystemConfidentiality":"NOT_DEFINED","modifiedVulnerableSystemIntegrity":"NOT_DEFINED","modifiedVulnerableSystemAvailability":"NOT_DEFINED","modifiedSubsequentSystemConfidentiality":"NOT_DEFINED","modifiedSubsequentSystemIntegrity":"NOT_DEFINED","modifiedSubsequentSystemAvailability":"NOT_DEFINED","safety":"NOT_DEFINED","automatable":"NOT_DEFINED","recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Primary","description":[{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/github.com\/harfbuzz\/harfbuzz\/commit\/1767f99e2e2196c3fcae27db6d8b60098d3f6d26","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/harfbuzz\/harfbuzz\/security\/advisories\/GHSA-qmp9-xqm5-jh6m","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-50713","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T21:15:07.837","lastModified":"2024-12-27T21:15:07.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SmartAgent v1.1.0 was discovered to contain a SQL injection vulnerability via the id parameter at \/tests\/interface.php."}],"metrics":{},"references":[{"url":"https:\/\/packetstorm.news\/files\/id\/182449\/","source":"cve@mitre.org"},{"url":"https:\/\/smarts-srl.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50715","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T21:15:07.957","lastModified":"2024-12-27T21:15:07.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An issue in smarts-srl.com Smart Agent v.1.1.0 allows a remote attacker to obtain sensitive information via command injection through a vulnerable unsanitized parameter defined in the \/youtubeInfo.php component."}],"metrics":{},"references":[{"url":"https:\/\/packetstorm.news\/files\/id\/182451\/","source":"cve@mitre.org"},{"url":"https:\/\/smarts-srl.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50716","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T21:15:08.063","lastModified":"2024-12-27T21:15:08.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SQL injection vulnerability in Smart Agent v.1.1.0 allows a remote attacker to execute arbitrary code via the id parameter in the \/sendPushManually.php component."}],"metrics":{},"references":[{"url":"https:\/\/packetstorm.news\/files\/id\/182449\/","source":"cve@mitre.org"},{"url":"https:\/\/smarts-srl.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50717","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T21:15:08.180","lastModified":"2024-12-27T21:15:08.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SQL injection vulnerability in Smart Agent v.1.1.0 allows a remote attacker to execute arbitrary code via the client parameter in the \/recuperaLog.php component."}],"metrics":{},"references":[{"url":"https:\/\/packetstorm.news\/files\/id\/182449\/","source":"cve@mitre.org"},{"url":"https:\/\/smarts-srl.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50714","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T22:15:11.070","lastModified":"2024-12-27T22:15:11.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Server-Side Request Forgery (SSRF) in smarts-srl.com Smart Agent v.1.1.0 allows a remote attacker to obtain sensitive information via a crafted script to the \/FB\/getFbVideoSource.php component."}],"metrics":{},"references":[{"url":"https:\/\/packetstorm.news\/files\/id\/182450\/","source":"cve@mitre.org"},{"url":"https:\/\/smarts-srl.com","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54774","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T22:15:12.000","lastModified":"2024-12-27T22:15:12.000","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Dcat Admin v2.2.0-beta contains a cross-site scripting (XSS) vulnerability in \/admin\/articles\/create."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/taynes-llllzt\/taynes\/issues\/4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-54775","sourceIdentifier":"cve@mitre.org","published":"2024-12-27T22:15:12.117","lastModified":"2024-12-27T22:15:12.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Dcat-Admin v2.2.0-beta and v2.2.2-beta contains a Cross-Site Scripting (XSS) vulnerability via \/admin\/auth\/menu and \/admin\/auth\/extensions."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/taynes-llllzt\/taynes\/issues\/5","source":"cve@mitre.org"}]}}]}