{"resultsPerPage":979,"startIndex":0,"totalResults":979,"format":"NVD_CVE","version":"2.0","timestamp":"2025-02-27T07:24:12.985","vulnerabilities":[{"cve":{"id":"CVE-2025-0760","sourceIdentifier":"vulnreport@tenable.com","published":"2025-02-26T00:15:10.890","lastModified":"2025-02-26T00:15:10.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Credential Disclosure vulnerability exists where an administrator could extract the stored SMTP account credentials due to lack of encryption."},{"lang":"es","value":"Existe una vulnerabilidad de divulgación de credenciales donde un administrador podría extraer las credenciales de la cuenta SMTP almacenadas debido a la falta de cifrado."}],"metrics":{"cvssMetricV31":[{"source":"vulnreport@tenable.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":2.7,"baseSeverity":"LOW","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":1.4}]},"weaknesses":[{"source":"vulnreport@tenable.com","type":"Secondary","description":[{"lang":"en","value":"CWE-522"}]}],"references":[{"url":"https:\/\/www.tenable.com\/security\/tns-2025-01","source":"vulnreport@tenable.com"}]}},{"cve":{"id":"CVE-2025-1091","sourceIdentifier":"vulnreport@tenable.com","published":"2025-02-26T00:15:11.250","lastModified":"2025-02-26T00:15:11.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Broken Authorization schema exists where any authenticated user could download IOA script and configuration files if the URL is known."},{"lang":"es","value":"Existe un esquema de autorización roto donde cualquier usuario autenticado podría descargar archivos de configuración y scripts de IOA si se conoce la URL."}],"metrics":{"cvssMetricV31":[{"source":"vulnreport@tenable.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"vulnreport@tenable.com","type":"Secondary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/www.tenable.com\/security\/tns-2025-01","source":"vulnreport@tenable.com"}]}},{"cve":{"id":"CVE-2021-47631","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:04.400","lastModified":"2025-02-26T06:37:04.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: davinci: da850-evm: Avoid NULL pointer dereference\n\nWith newer versions of GCC, there is a panic in da850_evm_config_emac()\nwhen booting multi_v5_defconfig in QEMU under the palmetto-bmc machine:\n\nUnable to handle kernel NULL pointer dereference at virtual address 00000020\npgd = (ptrval)\n[00000020] *pgd=00000000\nInternal error: Oops: 5 [#1] PREEMPT ARM\nModules linked in:\nCPU: 0 PID: 1 Comm: swapper Not tainted 5.15.0 #1\nHardware name: Generic DT based system\nPC is at da850_evm_config_emac+0x1c\/0x120\nLR is at do_one_initcall+0x50\/0x1e0\n\nThe emac_pdata pointer in soc_info is NULL because davinci_soc_info only\ngets populated on davinci machines but da850_evm_config_emac() is called\non all machines via device_initcall().\n\nMove the rmii_en assignment below the machine check so that it is only\ndereferenced when running on a supported SoC."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ARM: davinci: da850-evm: Evitar la desreferencia de puntero NULL Con versiones más nuevas de GCC, hay un pánico en da850_evm_config_emac() al iniciar multi_v5_defconfig en QEMU bajo la máquina palmetto-bmc: No se puede manejar la desreferencia de puntero NULL del kernel en la dirección virtual 00000020 pgd = (ptrval) [00000020] *pgd=00000000 Error interno: Oops: 5 [#1] PREEMPT Módulos ARM vinculados: CPU: 0 PID: 1 Comm: swapper No contaminado 5.15.0 #1 Nombre del hardware: Sistema genérico basado en DT La PC está en da850_evm_config_emac+0x1c\/0x120 LR está en El puntero emac_pdata en soc_info es NULL porque davinci_soc_info solo se completa en máquinas davinci, pero se llama a da850_evm_config_emac() en todas las máquinas a través de device_initcall(). Mueva la asignación rmii_en debajo de la verificación de la máquina para que solo se desreferencia cuando se ejecuta en un SoC compatible."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0940795c6834fbe7705acc5c3d4b2f7a5f67527a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a312ec66a03133d28570f07bc52749ccfef54da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83a1cde5c74bfb44b49cb2a940d044bb2380f4ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89931d4762572aaee6edbe5673d41f8082de110f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a12b356d45cbb6e8a1b718d1436b3d6239a862f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c06f476e5b74bcabb8c4a2fba55864a37e62843b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5628533a3ece64235d04fe11ec44d2be99e423d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c64e2ed5cc376e137e572babfd2edc38b2cfb61b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47632","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:04.943","lastModified":"2025-02-26T06:37:04.943","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/set_memory: Avoid spinlock recursion in change_page_attr()\n\nCommit 1f9ad21c3b38 (\"powerpc\/mm: Implement set_memory() routines\")\nincluded a spin_lock() to change_page_attr() in order to\nsafely perform the three step operations. But then\ncommit 9f7853d7609d (\"powerpc\/mm: Fix set_memory_*() against\nconcurrent accesses\") modify it to use pte_update() and do\nthe operation safely against concurrent access.\n\nIn the meantime, Maxime reported some spinlock recursion.\n\n[   15.351649] BUG: spinlock recursion on CPU#0, kworker\/0:2\/217\n[   15.357540]  lock: init_mm+0x3c\/0x420, .magic: dead4ead, .owner: kworker\/0:2\/217, .owner_cpu: 0\n[   15.366563] CPU: 0 PID: 217 Comm: kworker\/0:2 Not tainted 5.15.0+ #523\n[   15.373350] Workqueue: events do_free_init\n[   15.377615] Call Trace:\n[   15.380232] [e4105ac0] [800946a4] do_raw_spin_lock+0xf8\/0x120 (unreliable)\n[   15.387340] [e4105ae0] [8001f4ec] change_page_attr+0x40\/0x1d4\n[   15.393413] [e4105b10] [801424e0] __apply_to_page_range+0x164\/0x310\n[   15.400009] [e4105b60] [80169620] free_pcp_prepare+0x1e4\/0x4a0\n[   15.406045] [e4105ba0] [8016c5a0] free_unref_page+0x40\/0x2b8\n[   15.411979] [e4105be0] [8018724c] kasan_depopulate_vmalloc_pte+0x6c\/0x94\n[   15.418989] [e4105c00] [801424e0] __apply_to_page_range+0x164\/0x310\n[   15.425451] [e4105c50] [80187834] kasan_release_vmalloc+0xbc\/0x134\n[   15.431898] [e4105c70] [8015f7a8] __purge_vmap_area_lazy+0x4e4\/0xdd8\n[   15.438560] [e4105d30] [80160d10] _vm_unmap_aliases.part.0+0x17c\/0x24c\n[   15.445283] [e4105d60] [801642d0] __vunmap+0x2f0\/0x5c8\n[   15.450684] [e4105db0] [800e32d0] do_free_init+0x68\/0x94\n[   15.456181] [e4105dd0] [8005d094] process_one_work+0x4bc\/0x7b8\n[   15.462283] [e4105e90] [8005d614] worker_thread+0x284\/0x6e8\n[   15.468227] [e4105f00] [8006aaec] kthread+0x1f0\/0x210\n[   15.473489] [e4105f40] [80017148] ret_from_kernel_thread+0x14\/0x1c\n\nRemove the read \/ modify \/ write sequence to make the operation atomic\nand remove the spin_lock() in change_page_attr().\n\nTo do the operation atomically, we can't use pte modification helpers\nanymore. Because all platforms have different combination of bits, it\nis not easy to use those bits directly. But all have the\n_PAGE_KERNEL_{RO\/ROX\/RW\/RWX} set of flags. All we need it to compare\ntwo sets to know which bits are set or cleared.\n\nFor instance, by comparing _PAGE_KERNEL_ROX and _PAGE_KERNEL_RO you\nknow which bit gets cleared and which bit get set when changing exec\npermission."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: powerpc\/set_memory: Evitar recursión de spinlock en change_page_attr() La confirmación 1f9ad21c3b38 (\"powerpc\/mm: Implementar rutinas set_memory()\") incluyó un spin_lock() en change_page_attr() para realizar de forma segura las operaciones de tres pasos. Pero luego, la confirmación 9f7853d7609d (\"powerpc\/mm: Arreglar set_memory_*() contra accesos concurrentes\") lo modificó para usar pte_update() y realizar la operación de forma segura contra accesos concurrentes. Mientras tanto, Maxime informó de cierta recursión de spinlock. [ 15.351649] ERROR: recursión de spinlock en CPU#0, kworker\/0:2\/217 [ 15.357540] bloqueo: init_mm+0x3c\/0x420, .magic: dead4ead, .owner: kworker\/0:2\/217, .owner_cpu: 0 [ 15.366563] CPU: 0 PID: 217 Comm: kworker\/0:2 No contaminado 5.15.0+ #523 [ 15.373350] Cola de trabajo: events do_free_init [ 15.377615] Call Trace: [ 15.380232] [e4105ac0] [800946a4] do_raw_spin_lock+0xf8\/0x120 (unreliable) [ 15.387340] [e4105ae0] [8001f4ec] change_page_attr+0x40\/0x1d4 [ 15.393413] [e4105b10] [801424e0] __apply_to_page_range+0x164\/0x310 [ 15.400009] [e4105b60] [80169620] free_pcp_prepare+0x1e4\/0x4a0 [ 15.406045] [e4105ba0] [8016c5a0] free_unref_page+0x40\/0x2b8 [ 15.411979] [e4105be0] [8018724c] kasan_depopulate_vmalloc_pte+0x6c\/0x94 [ 15.418989] [e4105c00] [801424e0] __apply_to_page_range+0x164\/0x310 [ 15.425451] [e4105c50] [80187834] kasan_release_vmalloc+0xbc\/0x134 [ 15.431898] [e4105c70] [8015f7a8] __purge_vmap_area_lazy+0x4e4\/0xdd8 [ 15.438560] [e4105d30] [80160d10] _vm_unmap_aliases.part.0+0x17c\/0x24c [ 15.445283] [e4105d60] [801642d0] __vunmap+0x2f0\/0x5c8 [ 15.450684] [e4105db0] [800e32d0] do_free_init+0x68\/0x94 [ 15.456181] [e4105dd0] [8005d094] process_one_work+0x4bc\/0x7b8 [ 15.462283] [e4105e90] [8005d614] worker_thread+0x284\/0x6e8 [ 15.468227] [e4105f00] [8006aaec] kthread+0x1f0\/0x210 [ 15.473489] [e4105f40] [80017148] ret_from_kernel_thread+0x14\/0x1c Elimina la secuencia de lectura\/modificación\/escritura para hacer que la operación sea atómica y elimina el spin_lock() en change_page_attr(). Para hacer la operación de forma atómica, ya no podemos usar ayudantes de modificación de pte. Debido a que todas las plataformas tienen diferentes combinaciones de bits, no es fácil usar esos bits directamente. Pero todas tienen el conjunto de indicadores _PAGE_KERNEL_{RO\/ROX\/RW\/RWX}. Todo lo que necesitamos es comparar dos conjuntos para saber qué bits están configurados o borrados. Por ejemplo, al comparar _PAGE_KERNEL_ROX y _PAGE_KERNEL_RO sabes qué bit se borra y qué bit se configura al cambiar el permiso de ejecución."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6def4eaf0391f24be541633a954c0e4876858b1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ebe5ca2cbe438a688f2ae238ef5a0b0b5f3468a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96917107e67846f1d959ed03be281048efad14c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4c182ecf33584b9b2d1aa9dad073014a504c01f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47633","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.060","lastModified":"2025-02-26T06:37:05.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath5k: fix OOB in ath5k_eeprom_read_pcal_info_5111\n\nThe bug was found during fuzzing. Stacktrace locates it in\nath5k_eeprom_convert_pcal_info_5111.\nWhen none of the curve is selected in the loop, idx can go\nup to AR5K_EEPROM_N_PD_CURVES. The line makes pd out of bound.\npd = &chinfo[pier].pd_curves[idx];\n\nThere are many OOB writes using pd later in the code. So I\nadded a sanity check for idx. Checks for other loops involving\nAR5K_EEPROM_N_PD_CURVES are not needed as the loop index is not\nused outside the loops.\n\nThe patch is NOT tested with real device.\n\nThe following is the fuzzing report\n\nBUG: KASAN: slab-out-of-bounds in ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k]\nWrite of size 1 at addr ffff8880174a4d60 by task modprobe\/214\n\nCPU: 0 PID: 214 Comm: modprobe Not tainted 5.6.0 #1\nCall Trace:\n dump_stack+0x76\/0xa0\n print_address_description.constprop.0+0x16\/0x200\n ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k]\n ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k]\n __kasan_report.cold+0x37\/0x7c\n ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k]\n kasan_report+0xe\/0x20\n ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k]\n ? apic_timer_interrupt+0xa\/0x20\n ? ath5k_eeprom_init_11a_pcal_freq+0xbc0\/0xbc0 [ath5k]\n ? ath5k_pci_eeprom_read+0x228\/0x3c0 [ath5k]\n ath5k_eeprom_init+0x2513\/0x6290 [ath5k]\n ? ath5k_eeprom_init_11a_pcal_freq+0xbc0\/0xbc0 [ath5k]\n ? usleep_range+0xb8\/0x100\n ? apic_timer_interrupt+0xa\/0x20\n ? ath5k_eeprom_read_pcal_info_2413+0x2f20\/0x2f20 [ath5k]\n ath5k_hw_init+0xb60\/0x1970 [ath5k]\n ath5k_init_ah+0x6fe\/0x2530 [ath5k]\n ? kasprintf+0xa6\/0xe0\n ? ath5k_stop+0x140\/0x140 [ath5k]\n ? _dev_notice+0xf6\/0xf6\n ? apic_timer_interrupt+0xa\/0x20\n ath5k_pci_probe.cold+0x29a\/0x3d6 [ath5k]\n ? ath5k_pci_eeprom_read+0x3c0\/0x3c0 [ath5k]\n ? mutex_lock+0x89\/0xd0\n ? ath5k_pci_eeprom_read+0x3c0\/0x3c0 [ath5k]\n local_pci_probe+0xd3\/0x160\n pci_device_probe+0x23f\/0x3e0\n ? pci_device_remove+0x280\/0x280\n ? pci_device_remove+0x280\/0x280\n really_probe+0x209\/0x5d0"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ath5k: corrección de OOB en ath5k_eeprom_read_pcal_info_5111 El error se encontró durante el fuzzing. Stacktrace lo ubica en ath5k_eeprom_convert_pcal_info_5111. Cuando no se selecciona ninguna de las curvas en el bucle, idx puede llegar hasta AR5K_EEPROM_N_PD_CURVES. La línea hace que pd esté fuera de los límites. pd = &amp;chinfo[pier].pd_curves[idx]; Hay muchas escrituras OOB que usan pd más adelante en el código. Así que agregué una verificación de cordura para idx. No se necesitan verificaciones para otros bucles que involucran AR5K_EEPROM_N_PD_CURVES ya que el índice del bucle no se usa fuera de los bucles. El parche NO se prueba con un dispositivo real. El siguiente es el informe de fuzzing ERROR: KASAN: slab-out-of-limits en ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k] Escritura de tamaño 1 en la dirección ffff8880174a4d60 por la tarea modprobe\/214 CPU: 0 PID: 214 Comm: modprobe No contaminado 5.6.0 #1 Seguimiento de llamadas: dump_stack+0x76\/0xa0 print_address_description.constprop.0+0x16\/0x200 ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k] ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k] __kasan_report.cold+0x37\/0x7c ? ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k] kasan_report+0xe\/0x20 ath5k_eeprom_read_pcal_info_5111+0x126a\/0x1390 [ath5k] ? apic_timer_interrupt+0xa\/0x20 ? ath5k_eeprom_init_11a_pcal_freq+0xbc0\/0xbc0 [ath5k] ? ath5k_pci_eeprom_read+0x228\/0x3c0 [ath5k] ath5k_eeprom_init+0x2513\/0x6290 [ath5k] ? ath5k_eeprom_init_11a_pcal_freq+0xbc0\/0xbc0 [ath5k] ? usleep_range+0xb8\/0x100 ? apic_timer_interrupt+0xa\/0x20 ? ath5k_eeprom_read_pcal_info_2413+0x2f20\/0x2f20 [ath5k] ath5k_hw_init+0xb60\/0x1970 [ath5k] ath5k_init_ah+0x6fe\/0x2530 [ath5k] ? kasprintf+0xa6\/0xe0 ? ath5k_stop+0x140\/0x140 [ath5k] ? _dev_notice+0xf6\/0xf6 ? apic_timer_interrupt+0xa\/0x20 ath5k_pci_probe.cold+0x29a\/0x3d6 [ath5k] ? ath5k_pci_eeprom_read+0x3c0\/0x3c0 [ath5k] ? mutex_lock+0x89\/0xd0 ? ath5k_pci_eeprom_read+0x3c0\/0x3c0 [ath5k] local_pci_probe+0xd3\/0x160 pci_device_probe+0x23f\/0x3e0 ? pci_device_remove+0x280\/0x280 ? pci_device_remove+0x280\/0x280 realmente_probe+0x209\/0x5d0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25efc5d03455c3839249bc77fce5e29ecb54677e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/564d4eceb97eaf381dd6ef6470b06377bb50c95a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d7d83d0399e23d66fd431b553842a84ac10398f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be2f81024e7981565d90a4c9ca3067d11b6bca7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4e2f577271e158d87a916afb4e87415a88ce856","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbd96d6cad6625feba9c8d101ed4977d53e82f8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed3dfdaa8b5f0579eabfc1c5818eed30cfe1fe84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4de974019a0adf34d0e7de6b86252f1bd266b06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc8f7752a82f4accb99c0f1a868906ba1eb7b86f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47634","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.173","lastModified":"2025-02-26T06:37:05.173","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubi: Fix race condition between ctrl_cdev_ioctl and ubi_cdev_ioctl\n\nHulk Robot reported a KASAN report about use-after-free:\n ==================================================================\n BUG: KASAN: use-after-free in __list_del_entry_valid+0x13d\/0x160\n Read of size 8 at addr ffff888035e37d98 by task ubiattach\/1385\n [...]\n Call Trace:\n  klist_dec_and_del+0xa7\/0x4a0\n  klist_put+0xc7\/0x1a0\n  device_del+0x4d4\/0xed0\n  cdev_device_del+0x1a\/0x80\n  ubi_attach_mtd_dev+0x2951\/0x34b0 [ubi]\n  ctrl_cdev_ioctl+0x286\/0x2f0 [ubi]\n\n Allocated by task 1414:\n  device_add+0x60a\/0x18b0\n  cdev_device_add+0x103\/0x170\n  ubi_create_volume+0x1118\/0x1a10 [ubi]\n  ubi_cdev_ioctl+0xb7f\/0x1ba0 [ubi]\n\n Freed by task 1385:\n  cdev_device_del+0x1a\/0x80\n  ubi_remove_volume+0x438\/0x6c0 [ubi]\n  ubi_cdev_ioctl+0xbf4\/0x1ba0 [ubi]\n [...]\n ==================================================================\n\nThe lock held by ctrl_cdev_ioctl is ubi_devices_mutex, but the lock held\nby ubi_cdev_ioctl is ubi->device_mutex. Therefore, the two locks can be\nconcurrent.\n\nctrl_cdev_ioctl contains two operations: ubi_attach and ubi_detach.\nubi_detach is bug-free because it uses reference counting to prevent\nconcurrency. However, uif_init and uif_close in ubi_attach may race with\nubi_cdev_ioctl.\n\nuif_init will race with ubi_cdev_ioctl as in the following stack.\n           cpu1                   cpu2                  cpu3\n_______________________|________________________|______________________\nctrl_cdev_ioctl\n ubi_attach_mtd_dev\n  uif_init\n                           ubi_cdev_ioctl\n                            ubi_create_volume\n                             cdev_device_add\n   ubi_add_volume\n   \/\/ sysfs exist\n   kill_volumes\n                                                    ubi_cdev_ioctl\n                                                     ubi_remove_volume\n                                                      cdev_device_del\n                                                       \/\/ first free\n    ubi_free_volume\n     cdev_del\n     \/\/ double free\n   cdev_device_del\n\nAnd uif_close will race with ubi_cdev_ioctl as in the following stack.\n           cpu1                   cpu2                  cpu3\n_______________________|________________________|______________________\nctrl_cdev_ioctl\n ubi_attach_mtd_dev\n  uif_init\n                           ubi_cdev_ioctl\n                            ubi_create_volume\n                             cdev_device_add\n  ubi_debugfs_init_dev\n  \/\/error goto out_uif;\n  uif_close\n   kill_volumes\n                                                    ubi_cdev_ioctl\n                                                     ubi_remove_volume\n                                                      cdev_device_del\n                                                       \/\/ first free\n    ubi_free_volume\n    \/\/ double free\n\nThe cause of this problem is that commit 714fb87e8bc0 make device\n\"available\" before it becomes accessible via sysfs. Therefore, we\nroll back the modification. We will fix the race condition between\nubi device creation and udev by removing ubi_get_device in\nvol_attribute_show and dev_attribute_show.This avoids accessing\nuninitialized ubi_devices[ubi_num].\n\nubi_get_device is used to prevent devices from being deleted during\nsysfs execution. However, now kernfs ensures that devices will not\nbe deleted before all reference counting are released.\nThe key process is shown in the following stack.\n\ndevice_del\n  device_remove_attrs\n    device_remove_groups\n      sysfs_remove_groups\n        sysfs_remove_group\n          remove_files\n            kernfs_remove_by_name\n              kernfs_remove_by_name_ns\n                __kernfs_remove\n                  kernfs_drain"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ubi: Se corrige la condición de ejecución entre ctrl_cdev_ioctl y ubi_cdev_ioctl Hulk Robot informó un informe de KASAN sobre use-after-free: ====================================================================== ERROR: KASAN: use-after-free en __list_del_entry_valid+0x13d\/0x160 Lectura de tamaño 8 en la dirección ffff888035e37d98 por la tarea ubiattach\/1385 [...] Seguimiento de llamadas: klist_dec_and_del+0xa7\/0x4a0 klist_put+0xc7\/0x1a0 device_del+0x4d4\/0xed0 cdev_device_del+0x1a\/0x80 ubi_attach_mtd_dev+0x2951\/0x34b0 [ubi] ctrl_cdev_ioctl+0x286\/0x2f0 [ubi] Asignado por la tarea 1414: device_add+0x60a\/0x18b0 cdev_device_add+0x103\/0x170 ubi_create_volume+0x1118\/0x1a10 [ubi] ubi_cdev_ioctl+0xb7f\/0x1ba0 [ubi] Liberado por la tarea 1385: cdev_device_del+0x1a\/0x80 ubi_remove_volume+0x438\/0x6c0 [ubi] ubi_cdev_ioctl+0xbf4\/0x1ba0 [ubi] [...] ===================================================================== El bloqueo retenido por ctrl_cdev_ioctl es ubi_devices_mutex, pero el bloqueo retenido por ubi_cdev_ioctl es ubi-&gt;device_mutex. Por lo tanto, los dos bloqueos pueden ser concurrentes. ctrl_cdev_ioctl contiene dos operaciones: ubi_attach y ubi_detach. ubi_detach está libre de errores porque utiliza el conteo de referencias para evitar la concurrencia. Sin embargo, uif_init y uif_close en ubi_attach pueden competir con ubi_cdev_ioctl. uif_init competirá con ubi_cdev_ioctl como en la siguiente pila. cpu1 cpu2 cpu3 _______________________|________________________|______________________ ctrl_cdev_ioctl ubi_attach_mtd_dev uif_init ubi_cdev_ioctl ubi_create_volume cdev_device_add ubi_add_volume \/\/ sysfs existen kill_volumes ubi_cdev_ioctl ubi_remove_volume cdev_device_del \/\/ primer ubi_free_volume libre cdev_del \/\/ doble liberación cdev_device_del Y uif_close competirá con ubi_cdev_ioctl como en la siguiente pila. cpu1 cpu2 cpu3 _______________________|________________________|______________________ ctrl_cdev_ioctl ubi_attach_mtd_dev uif_init ubi_cdev_ioctl ubi_create_volume cdev_device_add ubi_debugfs_init_dev \/\/error goto out_uif; uif_close kill_volumes ubi_cdev_ioctl ubi_remove_volume cdev_device_del \/\/ primera liberación ubi_free_volume \/\/ doble liberación La causa de este problema es que la confirmación 714fb87e8bc0 hace que el dispositivo esté \"disponible\" antes de que se pueda acceder a él a través de sysfs. Por lo tanto, revertimos la modificación. Solucionaremos la condición de ejecución entre la creación del dispositivo ubi y udev eliminando ubi_get_device en vol_attribute_show y dev_attribute_show. Esto evita el acceso a ubi_devices[ubi_num] no inicializados. ubi_get_device se utiliza para evitar que se eliminen los dispositivos durante la ejecución de sysfs. Sin embargo, ahora kernfs garantiza que los dispositivos no se eliminarán antes de que se liberen todos los recuentos de referencias. El proceso clave se muestra en la siguiente pila. device_del device_remove_attrs device_remove_groups sysfs_remove_groups sysfs_remove_group remove_files kernfs_remove_by_name kernfs_remove_by_name_ns __kernfs_remove kernfs_drain"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a3f1cf87054833242fcd0218de0481cf855f888","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cbf0e392f173ba0ce425968c8374a6aa3e90f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/432b057f8e847ae5a2306515606f8d2defaca178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f9e9c223e48c264241d2f34d0bfc29e5fcb5c1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8ecee49259f8f78d91ddb329ab2be7e6fd01974","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c32fe764191b8ae8b128588beb96e3718d9179d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d727fd32cbd1abf3465f607021bc9c746f17b5a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f149b1bd213820363731aa119e5011ca892a2aac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47635","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.280","lastModified":"2025-02-26T06:37:05.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: Fix to add refcount once page is set private\n\nMM defined the rule [1] very clearly that once page was set with PG_private\nflag, we should increment the refcount in that page, also main flows like\npageout(), migrate_page() will assume there is one additional page\nreference count if page_has_private() returns true. Otherwise, we may\nget a BUG in page migration:\n\n  page:0000000080d05b9d refcount:-1 mapcount:0 mapping:000000005f4d82a8\n  index:0xe2 pfn:0x14c12\n  aops:ubifs_file_address_operations [ubifs] ino:8f1 dentry name:\"f30e\"\n  flags: 0x1fffff80002405(locked|uptodate|owner_priv_1|private|node=0|\n  zone=1|lastcpupid=0x1fffff)\n  page dumped because: VM_BUG_ON_PAGE(page_count(page) != 0)\n  ------------[ cut here ]------------\n  kernel BUG at include\/linux\/page_ref.h:184!\n  invalid opcode: 0000 [#1] SMP\n  CPU: 3 PID: 38 Comm: kcompactd0 Not tainted 5.15.0-rc5\n  RIP: 0010:migrate_page_move_mapping+0xac3\/0xe70\n  Call Trace:\n    ubifs_migrate_page+0x22\/0xc0 [ubifs]\n    move_to_new_page+0xb4\/0x600\n    migrate_pages+0x1523\/0x1cc0\n    compact_zone+0x8c5\/0x14b0\n    kcompactd+0x2bc\/0x560\n    kthread+0x18c\/0x1e0\n    ret_from_fork+0x1f\/0x30\n\nBefore the time, we should make clean a concept, what does refcount means\nin page gotten from grab_cache_page_write_begin(). There are 2 situations:\nSituation 1: refcount is 3, page is created by __page_cache_alloc.\n  TYPE_A - the write process is using this page\n  TYPE_B - page is assigned to one certain mapping by calling\n\t   __add_to_page_cache_locked()\n  TYPE_C - page is added into pagevec list corresponding current cpu by\n\t   calling lru_cache_add()\nSituation 2: refcount is 2, page is gotten from the mapping's tree\n  TYPE_B - page has been assigned to one certain mapping\n  TYPE_A - the write process is using this page (by calling\n\t   page_cache_get_speculative())\nFilesystem releases one refcount by calling put_page() in xxx_write_end(),\nthe released refcount corresponds to TYPE_A (write task is using it). If\nthere are any processes using a page, page migration process will skip the\npage by judging whether expected_page_refs() equals to page refcount.\n\nThe BUG is caused by following process:\n    PA(cpu 0)                           kcompactd(cpu 1)\n\t\t\t\tcompact_zone\nubifs_write_begin\n  page_a = grab_cache_page_write_begin\n    add_to_page_cache_lru\n      lru_cache_add\n        pagevec_add \/\/ put page into cpu 0's pagevec\n  (refcnf = 3, for page creation process)\nubifs_write_end\n  SetPagePrivate(page_a) \/\/ doesn't increase page count !\n  unlock_page(page_a)\n  put_page(page_a)  \/\/ refcnt = 2\n\t\t\t\t[...]\n\n    PB(cpu 0)\nfilemap_read\n  filemap_get_pages\n    add_to_page_cache_lru\n      lru_cache_add\n        __pagevec_lru_add \/\/ traverse all pages in cpu 0's pagevec\n\t  __pagevec_lru_add_fn\n\t    SetPageLRU(page_a)\n\t\t\t\tisolate_migratepages\n                                  isolate_migratepages_block\n\t\t\t\t    get_page_unless_zero(page_a)\n\t\t\t\t    \/\/ refcnt = 3\n                                      list_add(page_a, from_list)\n\t\t\t\tmigrate_pages(from_list)\n\t\t\t\t  __unmap_and_move\n\t\t\t\t    move_to_new_page\n\t\t\t\t      ubifs_migrate_page(page_a)\n\t\t\t\t        migrate_page_move_mapping\n\t\t\t\t\t  expected_page_refs get 3\n                                  (migration[1] + mapping[1] + private[1])\n\t release_pages\n\t   put_page_testzero(page_a) \/\/ refcnt = 3\n                                          page_ref_freeze  \/\/ refcnt = 0\n\t     page_ref_dec_and_test(0 - 1 = -1)\n                                          page_ref_unfreeze\n                                            VM_BUG_ON_PAGE(-1 != 0, page)\n\nUBIFS doesn't increase the page refcount after setting private flag, which\nleads to page migration task believes the page is not used by any other\nprocesses, so the page is migrated. This causes concurrent accessing on\npage refcount between put_page() called by other process(eg. read process\ncalls lru_cache_add) and page_ref_unfreeze() called by mi\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ubifs: Corrección para agregar refcount una vez que la página se establece como privada MM definió la regla [1] muy claramente que una vez que la página se establece con el indicador PG_private, debemos incrementar el refcount en esa página, también los flujos principales como pageout(), migrants_page() asumirán que hay un recuento de referencia de página adicional si page_has_private() devuelve verdadero. De lo contrario, podemos obtener un ERROR en la migración de la página: page:0000000080d05b9d refcount:-1 mapcount:0 mapping:000000005f4d82a8 index:0xe2 pfn:0x14c12 aops:ubifs_file_address_operations [ubifs] ino:8f1 dentry name:\"f30e\" flags: 0x1fffff80002405(locked|uptodate|owner_priv_1|private|node=0| zone=1|lastcpupid=0x1fffff) página volcada porque: VM_BUG_ON_PAGE(page_count(page) != 0) ------------[ cortar aquí ]------------ ¡ERROR del kernel en include\/linux\/page_ref.h:184! código de operación no válido: 0000 [#1] CPU SMP: 3 PID: 38 Comm: kcompactd0 No contaminado 5.15.0-rc5 RIP: 0010:migrate_page_move_mapping+0xac3\/0xe70 Rastreo de llamadas: ubifs_migrate_page+0x22\/0xc0 [ubifs] move_to_new_page+0xb4\/0x600 migrants_pages+0x1523\/0x1cc0 compact_zone+0x8c5\/0x14b0 kcompactd+0x2bc\/0x560 kthread+0x18c\/0x1e0 ret_from_fork+0x1f\/0x30 Antes de tiempo, deberíamos aclarar un concepto, qué significa refcount en la página obtenida de grab_cache_page_write_begin(). Hay 2 situaciones: Situación 1: refcount es 3, la página es creada por __page_cache_alloc. TYPE_A - el proceso de escritura está usando esta página TYPE_B - la página es asignada a un cierto mapeo llamando a __add_to_page_cache_locked() TYPE_C - la página es agregada a la lista pagevec correspondiente a la CPU actual llamando a lru_cache_add() Situación 2: refcount es 2, la página es obtenida del árbol del mapeo TYPE_B - la página ha sido asignada a un cierto mapeo TYPE_A - el proceso de escritura está usando esta página (llamando a page_cache_get_speculative()) El sistema de archivos libera un refcount llamando a put_page() en xxx_write_end(), el refcount liberado corresponde a TYPE_A (la tarea de escritura lo está usando). Si hay algún proceso usando una página, el proceso de migración de página omitirá la página al juzgar si expected_page_refs() es igual a page refcount. El ERROR es causado por el siguiente proceso: PA(cpu 0) kcompactd(cpu 1) compact_zone ubifs_write_begin page_a = grab_cache_page_write_begin add_to_page_cache_lru lru_cache_add pagevec_add \/\/ coloca la página en el pagevec de la CPU 0 (refcnf = 3, para el proceso de creación de la página) ubifs_write_end SetPagePrivate(page_a) \/\/ ¡no aumenta el número de páginas! unlock_page(page_a) put_page(page_a) \/\/ refcnt = 2 [...] PB(cpu 0) filemap_read filemap_get_pages add_to_page_cache_lru lru_cache_add __pagevec_lru_add \/\/ traverse all pages in cpu 0's pagevec __pagevec_lru_add_fn SetPageLRU(page_a) isolate_migratepages isolate_migratepages_block get_page_unless_zero(page_a) \/\/ refcnt = 3 list_add(page_a, from_list) migrate_pages(from_list) __unmap_and_move move_to_new_page ubifs_migrate_page(page_a) migrate_page_move_mapping expected_page_refs get 3 (migration[1] + mapping[1] + private[1]) release_pages put_page_testzero(page_a) \/\/ refcnt = 3 page_ref_freeze \/\/ refcnt = 0 page_ref_dec_and_test(0 - 1 = -1) page_ref_unfreeze VM_BUG_ON_PAGE(-1 != 0, page) UBIFS no aumenta el recuento de referencias de la página después de configurar el indicador privado, lo que hace que la tarea de migración de la página crea que ningún otro proceso utiliza la página, por lo que se migra la página. Esto provoca un acceso simultáneo al recuento de referencias de la página entre put_page() llamado por otro proceso (por ejemplo, el proceso de lectura llama a lru_cache_add) y page_ref_unfreeze() llamado por mi ---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b67db8a6ca83e6ff90b756d3da0c966f61cd37b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f75bab98565afd4f905059c56ec4caba88a7eec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5aaa2c0f0052b02c4a982993d4c5bb68fb7cbe22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c34ae24a2590fee96a3a7735ba2fa6cc52306221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbeb2139eed65e929ce806c6468e6601ade01b1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47636","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.377","lastModified":"2025-02-26T06:37:05.377","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: Fix read out-of-bounds in ubifs_wbuf_write_nolock()\n\nFunction ubifs_wbuf_write_nolock() may access buf out of bounds in\nfollowing process:\n\nubifs_wbuf_write_nolock():\n  aligned_len = ALIGN(len, 8);   \/\/ Assume len = 4089, aligned_len = 4096\n  if (aligned_len <= wbuf->avail) ... \/\/ Not satisfy\n  if (wbuf->used) {\n    ubifs_leb_write()  \/\/ Fill some data in avail wbuf\n    len -= wbuf->avail;   \/\/ len is still not 8-bytes aligned\n    aligned_len -= wbuf->avail;\n  }\n  n = aligned_len >> c->max_write_shift;\n  if (n) {\n    n <<= c->max_write_shift;\n    err = ubifs_leb_write(c, wbuf->lnum, buf + written,\n                          wbuf->offs, n);\n    \/\/ n > len, read out of bounds less than 8(n-len) bytes\n  }\n\n, which can be catched by KASAN:\n  =========================================================\n  BUG: KASAN: slab-out-of-bounds in ecc_sw_hamming_calculate+0x1dc\/0x7d0\n  Read of size 4 at addr ffff888105594ff8 by task kworker\/u8:4\/128\n  Workqueue: writeback wb_workfn (flush-ubifs_0_0)\n  Call Trace:\n    kasan_report.cold+0x81\/0x165\n    nand_write_page_swecc+0xa9\/0x160\n    ubifs_leb_write+0xf2\/0x1b0 [ubifs]\n    ubifs_wbuf_write_nolock+0x421\/0x12c0 [ubifs]\n    write_head+0xdc\/0x1c0 [ubifs]\n    ubifs_jnl_write_inode+0x627\/0x960 [ubifs]\n    wb_workfn+0x8af\/0xb80\n\nFunction ubifs_wbuf_write_nolock() accepts that parameter 'len' is not 8\nbytes aligned, the 'len' represents the true length of buf (which is\nallocated in 'ubifs_jnl_xxx', eg. ubifs_jnl_write_inode), so\nubifs_wbuf_write_nolock() must handle the length read from 'buf' carefully\nto write leb safely.\n\nFetch a reproducer in [Link]."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ubifs: Se corrige la lectura fuera de los límites en la función ubifs_wbuf_write_nolock() ubifs_wbuf_write_nolock() puede acceder a buf fuera de los límites en el siguiente proceso: ubifs_wbuf_write_nolock(): classified_len = ALIGN(len, 8); \/\/ Supongamos que len = 4089, classified_len = 4096 if (aligned_len &lt;= wbuf-&gt;avail) ... \/\/ No satisface if (wbuf-&gt;used) { ubifs_leb_write() \/\/ Complete algunos datos en avail wbuf len -= wbuf-&gt;avail; \/\/ len aún no está alineado a 8 bytes classified_len -= wbuf-&gt;avail; } n = classified_len &gt;&gt; c-&gt;max_write_shift; if (n) { n &lt;&lt;= c-&gt;max_write_shift; err = ubifs_leb_write(c, wbuf-&gt;lnum, buf + escrito, wbuf-&gt;offs, n); \/\/ n &gt; len, lectura fuera de los límites menor a 8(n-len) bytes }, lo cual puede ser detectado por KASAN: =========================================================== ERROR: KASAN: slab fuera de los límites en ecc_sw_hamming_calculate+0x1dc\/0x7d0 Lectura de tamaño 4 en la dirección ffff888105594ff8 por la tarea kworker\/u8:4\/128 Cola de trabajo: escritura diferida wb_workfn (flush-ubifs_0_0) Rastreo de llamadas: kasan_report.cold+0x81\/0x165 nand_write_page_swecc+0xa9\/0x160 ubifs_leb_write+0xf2\/0x1b0 [ubifs] ubifs_wbuf_write_nolock+0x421\/0x12c0 [ubifs] write_head+0xdc\/0x1c0 [ubifs] ubifs_jnl_write_inode+0x627\/0x960 [ubifs] wb_workfn+0x8af\/0xb80 La función ubifs_wbuf_write_nolock() acepta que el parámetro 'len' no esté alineado con 8 bytes, 'len' representa la longitud verdadera de buf (que está asignada en 'ubifs_jnl_xxx', p. ej. ubifs_jnl_write_inode), por lo que ubifs_wbuf_write_nolock() debe manejar la longitud leída de 'buf' con cuidado para escribir leb de forma segura. Obtenga un reproductor en [Enlace]."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07a209fadee7b53b46858538e1177597273862e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b7fb89135a20587d57f8877c02e25003e9edbdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f2262a334641e05f645364d5ade1f565c85f20b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5343575aa11c5d7044107d59d43f84aec01312b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7054aaf1909cf40489c0ec1b728fdcf79c751a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b80ccbec0e4804436c382d7dd60e943c386ed83a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e09fa5318d51f522e1af4fbaf8f74999355980c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47637","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.477","lastModified":"2025-02-26T06:37:05.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: Fix deadlock in concurrent rename whiteout and inode writeback\n\nFollowing hung tasks:\n[   77.028764] task:kworker\/u8:4    state:D stack:    0 pid:  132\n[   77.028820] Call Trace:\n[   77.029027]  schedule+0x8c\/0x1b0\n[   77.029067]  mutex_lock+0x50\/0x60\n[   77.029074]  ubifs_write_inode+0x68\/0x1f0 [ubifs]\n[   77.029117]  __writeback_single_inode+0x43c\/0x570\n[   77.029128]  writeback_sb_inodes+0x259\/0x740\n[   77.029148]  wb_writeback+0x107\/0x4d0\n[   77.029163]  wb_workfn+0x162\/0x7b0\n\n[   92.390442] task:aa              state:D stack:    0 pid: 1506\n[   92.390448] Call Trace:\n[   92.390458]  schedule+0x8c\/0x1b0\n[   92.390461]  wb_wait_for_completion+0x82\/0xd0\n[   92.390469]  __writeback_inodes_sb_nr+0xb2\/0x110\n[   92.390472]  writeback_inodes_sb_nr+0x14\/0x20\n[   92.390476]  ubifs_budget_space+0x705\/0xdd0 [ubifs]\n[   92.390503]  do_rename.cold+0x7f\/0x187 [ubifs]\n[   92.390549]  ubifs_rename+0x8b\/0x180 [ubifs]\n[   92.390571]  vfs_rename+0xdb2\/0x1170\n[   92.390580]  do_renameat2+0x554\/0x770\n\n, are caused by concurrent rename whiteout and inode writeback processes:\n\trename_whiteout(Thread 1)\t        wb_workfn(Thread2)\nubifs_rename\n  do_rename\n    lock_4_inodes (Hold ui_mutex)\n    ubifs_budget_space\n      make_free_space\n        shrink_liability\n\t  __writeback_inodes_sb_nr\n\t    bdi_split_work_to_wbs (Queue new wb work)\n\t\t\t\t\t      wb_do_writeback(wb work)\n\t\t\t\t\t\t__writeback_single_inode\n\t\t\t\t\t          ubifs_write_inode\n\t\t\t\t\t            LOCK(ui_mutex)\n\t\t\t\t\t\t\t   ↑\n\t      wb_wait_for_completion (Wait wb work) <-- deadlock!\n\nReproducer (Detail program in [Link]):\n  1. SYS_renameat2(\"\/mp\/dir\/file\", \"\/mp\/dir\/whiteout\", RENAME_WHITEOUT)\n  2. Consume out of space before kernel(mdelay) doing budget for whiteout\n\nFix it by doing whiteout space budget before locking ubifs inodes.\nBTW, it also fixes wrong goto tag 'out_release' in whiteout budget\nerror handling path(It should at least recover dir i_size and unlock\n4 ubifs inodes)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ubifs: Se corrige el bloqueo en el cambio de nombre simultáneo whiteout y la escritura diferida de inodo Siguientes tareas colgadas: [ 77.028764] task:kworker\/u8:4 state:D stack: 0 pid: 132 [ 77.028820] Seguimiento de llamadas: [ 77.029027] schedule+0x8c\/0x1b0 [ 77.029067] mutex_lock+0x50\/0x60 [ 77.029074] ubifs_write_inode+0x68\/0x1f0 [ubifs] [ 77.029117] __writeback_single_inode+0x43c\/0x570 [ 77.029128] writeback_sb_inodes+0x259\/0x740 [ 77.029148] wb_writeback+0x107\/0x4d0 [ 77.029163] wb_workfn+0x162\/0x7b0 [ 92.390442] tarea:aa estado:D pila: 0 pid: 1506 [ 92.390448] Seguimiento de llamadas: [ 92.390458] schedule+0x8c\/0x1b0 [ 92.390461] wb_wait_for_completion+0x82\/0xd0 [ 92.390469] __writeback_inodes_sb_nr+0xb2\/0x110 [ 92.390472] writeback_inodes_sb_nr+0x14\/0x20 [ 92.390476] ubifs_budget_space+0x705\/0xdd0 [ubifs] [ 92.390503] do_rename.cold+0x7f\/0x187 [ubifs] [ 92.390549] ubifs_rename+0x8b\/0x180 [ubifs] [ 92.390571] vfs_rename+0xdb2\/0x1170 [ 92.390580] do_renameat2+0x554\/0x770 , son causados por procesos simultáneos de whiteout de cambio de nombre y de escritura diferida de inodo: rename_whiteout(Subproceso 1) wb_workfn(Subproceso2) ubifs_rename do_rename lock_4_inodes (Mantener mutex ui) ubifs_budget_space make_free_space shrink_liability __writeback_inodes_sb_nr bdi_split_work_to_wbs (Poner en cola nuevo trabajo de wb) wb_do_writeback(trabajo de wb) __writeback_single_inode ubifs_write_inode LOCK(ui_mutex) ? wb_wait_for_completion (Esperar trabajo de wb) &lt;-- ¡bloqueo! Reproductor (Programa detallado en [Enlace]): 1. SYS_renameat2(\"\/mp\/dir\/file\", \"\/mp\/dir\/whiteout\", RENAME_WHITEOUT) 2. Consumir todo el espacio antes de que kernel(mdelay) haga el presupuesto para whiteout Arréglelo haciendo el presupuesto de espacio de whiteout antes de bloquear los inodos de ubifs. Por cierto, también corrige la etiqueta goto incorrecta 'out_release' en la ruta de manejo de errores del presupuesto de whiteout (al menos debería recuperar el directorio i_size y desbloquear 4 inodos de ubifs)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37bdf1ad592555ecda1d55b89f6e393e4c0589d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70e9090acc32348cedc5def0cd6d5c126efc97b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83e42a78428fc354f5e2049935b84c8d8d29b787","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b278c8dcfb565cb65eceb62a38cbf7a7c326db5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9dddc8211430fb851ddf0b168e3a00c6f66cc185","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afd427048047e8efdedab30e8888044e2be5aa9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c58af8564a7b08757173009030b74baf4b2b762b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47638","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.580","lastModified":"2025-02-26T06:37:05.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: rename_whiteout: Fix double free for whiteout_ui->data\n\n'whiteout_ui->data' will be freed twice if space budget fail for\nrename whiteout operation as following process:\n\nrename_whiteout\n  dev = kmalloc\n  whiteout_ui->data = dev\n  kfree(whiteout_ui->data)  \/\/ Free first time\n  iput(whiteout)\n    ubifs_free_inode\n      kfree(ui->data)\t    \/\/ Double free!\n\nKASAN reports:\n==================================================================\nBUG: KASAN: double-free or invalid-free in ubifs_free_inode+0x4f\/0x70\nCall Trace:\n  kfree+0x117\/0x490\n  ubifs_free_inode+0x4f\/0x70 [ubifs]\n  i_callback+0x30\/0x60\n  rcu_do_batch+0x366\/0xac0\n  __do_softirq+0x133\/0x57f\n\nAllocated by task 1506:\n  kmem_cache_alloc_trace+0x3c2\/0x7a0\n  do_rename+0x9b7\/0x1150 [ubifs]\n  ubifs_rename+0x106\/0x1f0 [ubifs]\n  do_syscall_64+0x35\/0x80\n\nFreed by task 1506:\n  kfree+0x117\/0x490\n  do_rename.cold+0x53\/0x8a [ubifs]\n  ubifs_rename+0x106\/0x1f0 [ubifs]\n  do_syscall_64+0x35\/0x80\n\nThe buggy address belongs to the object at ffff88810238bed8 which\nbelongs to the cache kmalloc-8 of size 8\n==================================================================\n\nLet ubifs_free_inode() free 'whiteout_ui->data'. BTW, delete unused\nassignment 'whiteout_ui->data_len = 0', process 'ubifs_evict_inode()\n-> ubifs_jnl_delete_inode() -> ubifs_jnl_write_inode()' doesn't need it\n(because 'inc_nlink(whiteout)' won't be excuted by 'goto out_release',\n and the nlink of whiteout inode is 0)."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ubifs: rename_whiteout: Se corrige la doble liberación para whiteout_ui-&gt;data 'whiteout_ui-&gt;data' se liberará dos veces si el presupuesto de espacio falla para la operación de cambio de nombre de whiteout como el siguiente proceso: rename_whiteout dev = kmalloc whiteout_ui-&gt;data = dev kfree(whiteout_ui-&gt;data) \/\/ Libera la primera vez iput(whiteout) ubifs_free_inode kfree(ui-&gt;data) \/\/ ¡Doble liberación! KASAN informa: ==================================================================== ERROR: KASAN: liberación doble o liberación no válida en ubifs_free_inode+0x4f\/0x70 Seguimiento de llamadas: kfree+0x117\/0x490 ubifs_free_inode+0x4f\/0x70 [ubifs] i_callback+0x30\/0x60 rcu_do_batch+0x366\/0xac0 __do_softirq+0x133\/0x57f Asignado por la tarea 1506: kmem_cache_alloc_trace+0x3c2\/0x7a0 do_rename+0x9b7\/0x1150 [ubifs] ubifs_rename+0x106\/0x1f0 [ubifs] do_syscall_64+0x35\/0x80 Liberado por la tarea 1506: kfree+0x117\/0x490 do_rename.cold+0x53\/0x8a [ubifs] ubifs_rename+0x106\/0x1f0 [ubifs] do_syscall_64+0x35\/0x80 La dirección con errores pertenece al objeto en ffff88810238bed8 que pertenece al caché kmalloc-8 de tamaño 8 ===================================================================== Deje que ubifs_free_inode() libere 'whiteout_ui-&gt;data'. Por cierto, elimine la asignación no utilizada 'whiteout_ui-&gt;data_len = 0', el proceso 'ubifs_evict_inode() -&gt; ubifs_jnl_delete_inode() -&gt; ubifs_jnl_write_inode()' no lo necesita (porque 'inc_nlink(whiteout)' no será ejecutado por 'goto out_release', y el nlink del inodo whiteout es 0)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14276d38c89a170363e90b6ac0a53c3cf61b87fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ad07009c459e56ebdcc089d850d664660fdb742","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b3236ecf96db7af5836e1366ce39ace8ce832fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40a8f0d5e7b3999f096570edab71c345da812e3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d7a158a7363c1f6604aa47ae1a280a5c65123dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b3c7be16f3f4dfd6e15ac651484e59d3fa36274","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a90e2dbe66d2647ff95a0442ad2e86482d977fd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9a937f096e608b3368c1abc920d4d640ba2c94f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47639","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.677","lastModified":"2025-02-26T06:37:05.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86\/mmu: Zap _all_ roots when unmapping gfn range in TDP MMU\n\nZap both valid and invalid roots when zapping\/unmapping a gfn range, as\nKVM must ensure it holds no references to the freed page after returning\nfrom the unmap operation.  Most notably, the TDP MMU doesn't zap invalid\nroots in mmu_notifier callbacks.  This leads to use-after-free and other\nissues if the mmu_notifier runs to completion while an invalid root\nzapper yields as KVM fails to honor the requirement that there must be\n_no_ references to the page after the mmu_notifier returns.\n\nThe bug is most easily reproduced by hacking KVM to cause a collision\nbetween set_nx_huge_pages() and kvm_mmu_notifier_release(), but the bug\nexists between kvm_mmu_notifier_invalidate_range_start() and memslot\nupdates as well.  Invalidating a root ensures pages aren't accessible by\nthe guest, and KVM won't read or write page data itself, but KVM will\ntrigger e.g. kvm_set_pfn_dirty() when zapping SPTEs, and thus completing\na zap of an invalid root _after_ the mmu_notifier returns is fatal.\n\n  WARNING: CPU: 24 PID: 1496 at arch\/x86\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:173 [kvm]\n  RIP: 0010:kvm_is_zone_device_pfn+0x96\/0xa0 [kvm]\n  Call Trace:\n   <TASK>\n   kvm_set_pfn_dirty+0xa8\/0xe0 [kvm]\n   __handle_changed_spte+0x2ab\/0x5e0 [kvm]\n   __handle_changed_spte+0x2ab\/0x5e0 [kvm]\n   __handle_changed_spte+0x2ab\/0x5e0 [kvm]\n   zap_gfn_range+0x1f3\/0x310 [kvm]\n   kvm_tdp_mmu_zap_invalidated_roots+0x50\/0x90 [kvm]\n   kvm_mmu_zap_all_fast+0x177\/0x1a0 [kvm]\n   set_nx_huge_pages+0xb4\/0x190 [kvm]\n   param_attr_store+0x70\/0x100\n   module_attr_store+0x19\/0x30\n   kernfs_fop_write_iter+0x119\/0x1b0\n   new_sync_write+0x11c\/0x1b0\n   vfs_write+0x1cc\/0x270\n   ksys_write+0x5f\/0xe0\n   do_syscall_64+0x38\/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n   <\/TASK>"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: x86\/mmu: Se eliminan _todos_ las raíces al anular la asignación del rango gfn en TDP MMU Se eliminan las raíces válidas e inválidas al hacer zapping\/anular la asignación de un rango gfn, ya que KVM debe asegurarse de que no contiene referencias a la página liberada después de regresar de la operación de anulación de la asignación. En particular, TDP MMU no elimina las raíces inválidas en las devoluciones de llamadas mmu_notifier. Esto conduce a problemas de use-after-free y otros problemas si mmu_notifier se ejecuta hasta el final mientras que un zapper de raíz inválida cede, ya que KVM no cumple con el requisito de que no debe haber _ninguna_ referencia a la página después de que mmu_notifier regrese. El error se reproduce más fácilmente pirateando KVM para provocar una colisión entre set_nx_huge_pages() y kvm_mmu_notifier_release(), pero el error también existe entre kvm_mmu_notifier_invalidate_range_start() y las actualizaciones de memslot. Invalidar una raíz garantiza que el invitado no pueda acceder a las páginas, y KVM no leerá ni escribirá datos de página por sí mismo, pero KVM activará, por ejemplo, kvm_set_pfn_dirty() al hacer zapping de SPTE, y por lo tanto, completar un zapping de una raíz no válida _después_ de que mmu_notifier regrese es fatal. ADVERTENCIA: CPU: 24 PID: 1496 en arch\/x86\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:173 [kvm] RIP: 0010:kvm_is_zone_device_pfn+0x96\/0xa0 [kvm] Rastreo de llamadas:  kvm_set_pfn_dirty+0xa8\/0xe0 [kvm] __handle_changed_spte+0x2ab\/0x5e0 [kvm] __handle_changed_spte+0x2ab\/0x5e0 [kvm] __handle_changed_spte+0x2ab\/0x5e0 [kvm] zap_gfn_range+0x1f3\/0x310 [kvm] kvm_tdp_mmu_zap_raíces_invalidadas+0x50\/0x90 [kvm] kvm_mmu_zap_all_fast+0x177\/0x1a0 [kvm] set_nx_huge_pages+0xb4\/0x190 [kvm] param_attr_store+0x70\/0x100 module_attr_store+0x19\/0x30 kernfs_fop_write_iter+0x119\/0x1b0 new_sync_write+0x11c\/0x1b0 vfs_write+0x1cc\/0x270 ksys_write+0x5f\/0xe0 do_syscall_64+0x38\/0xc0 entry_SYSCALL_64_after_hwframe+0x44\/0xae "}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c8a8da182d4333d9bbb9131d765145568c847b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cf6f98ab1d16d5e607635a0c21c4231eb15367e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af47248407c0c5ae52a752af1ab5ce5b0db91502","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d62007edf01f5c11f75d0f4b1e538fc52a5b1982","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47640","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.780","lastModified":"2025-02-26T06:37:05.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/kasan: Fix early region not updated correctly\n\nThe shadow's page table is not updated when PTE_RPN_SHIFT is 24\nand PAGE_SHIFT is 12. It not only causes false positives but\nalso false negative as shown the following text.\n\nFix it by bringing the logic of kasan_early_shadow_page_entry here.\n\n1. False Positive:\n==================================================================\nBUG: KASAN: vmalloc-out-of-bounds in pcpu_alloc+0x508\/0xa50\nWrite of size 16 at addr f57f3be0 by task swapper\/0\/1\n\nCPU: 0 PID: 1 Comm: swapper\/0 Not tainted 5.15.0-12267-gdebe436e77c7 #1\nCall Trace:\n[c80d1c20] [c07fe7b8] dump_stack_lvl+0x4c\/0x6c (unreliable)\n[c80d1c40] [c02ff668] print_address_description.constprop.0+0x88\/0x300\n[c80d1c70] [c02ff45c] kasan_report+0x1ec\/0x200\n[c80d1cb0] [c0300b20] kasan_check_range+0x160\/0x2f0\n[c80d1cc0] [c03018a4] memset+0x34\/0x90\n[c80d1ce0] [c0280108] pcpu_alloc+0x508\/0xa50\n[c80d1d40] [c02fd7bc] __kmem_cache_create+0xfc\/0x570\n[c80d1d70] [c0283d64] kmem_cache_create_usercopy+0x274\/0x3e0\n[c80d1db0] [c2036580] init_sd+0xc4\/0x1d0\n[c80d1de0] [c00044a0] do_one_initcall+0xc0\/0x33c\n[c80d1eb0] [c2001624] kernel_init_freeable+0x2c8\/0x384\n[c80d1ef0] [c0004b14] kernel_init+0x24\/0x170\n[c80d1f10] [c001b26c] ret_from_kernel_thread+0x5c\/0x64\n\nMemory state around the buggy address:\n f57f3a80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n f57f3b00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n>f57f3b80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n                                               ^\n f57f3c00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n f57f3c80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8\n==================================================================\n\n2. False Negative (with KASAN tests):\n==================================================================\nBefore fix:\n    ok 45 - kmalloc_double_kzfree\n    # vmalloc_oob: EXPECTATION FAILED at lib\/test_kasan.c:1039\n    KASAN failure expected in \"((volatile char *)area)[3100]\", but none occurred\n    not ok 46 - vmalloc_oob\n    not ok 1 - kasan\n\n==================================================================\nAfter fix:\n    ok 1 - kasan"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: powerpc\/kasan: Se solucionó que la región temprana no se actualizara correctamente La tabla de páginas de shadow no se actualiza cuando PTE_RPN_SHIFT es 24 y PAGE_SHIFT es 12. No solo causa falsos positivos sino también falsos negativos como se muestra en el siguiente texto. Arréglelo trayendo la lógica de kasan_early_shadow_page_entry aquí. 1. Falso positivo: ==================================================================== ERROR: KASAN: vmalloc fuera de los límites en pcpu_alloc+0x508\/0xa50 Escritura de tamaño 16 en la dirección f57f3be0 por la tarea swapper\/0\/1 CPU: 0 PID: 1 Comm: swapper\/0 No contaminado 5.15.0-12267-gdebe436e77c7 #1 Seguimiento de llamadas: [c80d1c20] [c07fe7b8] dump_stack_lvl+0x4c\/0x6c (no confiable) [c80d1c40] [c02ff668] print_address_description.constprop.0+0x88\/0x300 [c80d1c70] [c02ff45c] kasan_report+0x1ec\/0x200 [c80d1cb0] [c0300b20] kasan_check_range+0x160\/0x2f0 [c80d1cc0] [c03018a4] memset+0x34\/0x90 [c80d1ce0] [c0280108] pcpu_alloc+0x508\/0xa50 [c80d1d40] [c02fd7bc] __kmem_cache_create+0xfc\/0x570 [c80d1d70] [c0283d64] kmem_cache_create_usercopy+0x274\/0x3e0 [c80d1db0] [c2036580] init_sd+0xc4\/0x1d0 [c80d1de0] [c00044a0] do_one_initcall+0xc0\/0x33c [c80d1eb0] [c2001624] kernel_init_freeable+0x2c8\/0x384 [c80d1ef0] [c0004b14] kernel_init+0x24\/0x170 [c80d1f10] [c001b26c] ret_from_kernel_thread+0x5c\/0x64 Estado de la memoria alrededor de la dirección con errores: f57f3a80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f57f3b00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 &gt;f57f3b80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 ^ f57f3c80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 ===================================================================== 2. Falso negativo (con pruebas KASAN): ==================================================================== Antes de la corrección: ok 45 - kmalloc_double_kzfree # vmalloc_oob: EXPECTATIVA FALLÓ en lib\/test_kasan.c:1039 Se esperaba una falla de KASAN en \"((volatile char *)area)[3100]\", pero no ocurrió ninguna no ok 46 - vmalloc_oob no ok 1 - kasan ======================================================================== Después de la corrección: ok 1 - kasan"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a3d8f3192a409893c57808cc935e16484df1068","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f19245c3647afea8c7c41f795506ef70f64b9f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd75080aa8409ce10d50fb58981c6b59bf8707d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de56beace6648065d404cd9835aa7d30e3df519d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3d157a4b4f4e0268c98be5b7013bf4b31234bb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f39a3309393a4a484532f6ba745c6acbcfe06115","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47641","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.883","lastModified":"2025-02-26T06:37:05.883","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: cirrusfb: check pixclock to avoid divide by zero\n\nDo a sanity check on pixclock value to avoid divide by zero.\n\nIf the pixclock value is zero, the cirrusfb driver will round up\npixclock to get the derived frequency as close to maxclock as\npossible.\n\nSyzkaller reported a divide error in cirrusfb_check_pixclock.\n\ndivide error: 0000 [#1] SMP KASAN PTI\nCPU: 0 PID: 14938 Comm: cirrusfb_test Not tainted 5.15.0-rc6 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2\nRIP: 0010:cirrusfb_check_var+0x6f1\/0x1260\n\nCall Trace:\n fb_set_var+0x398\/0xf90\n do_fb_ioctl+0x4b8\/0x6f0\n fb_ioctl+0xeb\/0x130\n __x64_sys_ioctl+0x19d\/0x220\n do_syscall_64+0x3a\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: video: fbdev: cirrusfb: comprobar pixclock para evitar la división por cero Realice una comprobación de la depuración del valor de pixclock para evitar la división por cero. Si el valor de pixclock es cero, el controlador cirrusfb redondeará el valor de pixclock para obtener la frecuencia derivada lo más cercana posible a maxclock. Syzkaller informó un error de división en cirrusfb_check_pixclock. Error de división: 0000 [#1] SMP KASAN PTI CPU: 0 PID: 14938 Comm: cirrusfb_test No contaminado 5.15.0-rc6 #1 Nombre del hardware: PC estándar QEMU (i440FX + PIIX, 1996), BIOS 1.11.0-2 RIP: 0010:cirrusfb_check_var+0x6f1\/0x1260 Seguimiento de llamadas: fb_set_var+0x398\/0xf90 do_fb_ioctl+0x4b8\/0x6f0 fb_ioctl+0xeb\/0x130 __x64_sys_ioctl+0x19d\/0x220 do_syscall_64+0x3a\/0x80 entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d3fb46439ad4e8f0c5739eb33d1875ac9e0f135","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40b13e3d85744210db13457785646634e2d056bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45800c42ef000f417270bcfc08630e42486fca99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53a2088a396cfa1da92690a1da289634cd73bf0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c6f402bdcf9e7239c6bc7087eda71ac99b31379","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fe23ff94e7840097202e85c148688940b37c9b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c7e2141fb89c620ab4e41512e262fbf25b8260d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c656d04247a2654ede5cead2ecbf83431dad5261","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e498b504f8c81b07efab9febf8503448de4dc9cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47642","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:05.993","lastModified":"2025-02-26T06:37:05.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: nvidiafb: Use strscpy() to prevent buffer overflow\n\nCoverity complains of a possible buffer overflow. However,\ngiven the 'static' scope of nvidia_setup_i2c_bus() it looks\nlike that can't happen after examiniing the call sites.\n\nCID 19036 (#1 of 1): Copy into fixed size buffer (STRING_OVERFLOW)\n1. fixed_size_dest: You might overrun the 48-character fixed-size string\n  chan->adapter.name by copying name without checking the length.\n2. parameter_as_source: Note: This defect has an elevated risk because the\n  source argument is a parameter of the current function.\n 89        strcpy(chan->adapter.name, name);\n\nFix this warning by using strscpy() which will silence the warning and\nprevent any future buffer overflows should the names used to identify the\nchannel become much longer."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: video: fbdev: nvidiafb: Use strscpy() para evitar el desbordamiento del búfer Coverity se queja de un posible desbordamiento del búfer. Sin embargo, dado el alcance 'estático' de nvidia_setup_i2c_bus(), parece que eso no puede suceder después de examinar los sitios de llamada. CID 19036 (#1 de 1): Copiar en un búfer de tamaño fijo (STRING_OVERFLOW) 1. fixed_size_dest: Puede desbordar la cadena de tamaño fijo de 48 caracteres chan-&gt;adapter.name copiando name sin verificar la longitud. 2. parameter_as_source: Nota: Este defecto tiene un riesgo elevado porque el argumento source es un parámetro de la función actual. 89 strcpy(chan-&gt;adapter.name, name); Corrija esta advertencia usando strscpy() que silenciará la advertencia y evitará futuros desbordamientos del búfer si los nombres utilizados para identificar el canal se vuelven mucho más largos."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/055cdd2e7b992921424d4daaa285ced787fb205f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/08dff482012758935c185532b1ad7d584785a86e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37a1a2e6eeeb101285cd34e12e48a881524701aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41baa86b6c802cdc6ab8ff2d46c083c9be93de81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47e5533adf118afaf06d25a3e2aaaab89371b1c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/580e5d3815474b8349250c25c16416585a72c7fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a5226e544ac043bb2d8dc1bfe8920d02282f7cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72dd5c46a152136712a55bf026a9aa8c1b12b60d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ff2f7294ab0f011cd4d1b7dcd9a07d8fdf72834","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47643","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.097","lastModified":"2025-02-26T06:37:06.097","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ir_toy: free before error exiting\n\nFix leak in error path."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: ir_toy: free before error exiting Se corrige la fuga en la ruta de error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2011363c196846c083649c91ed30aeef64358d52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/382e0f6958ef34eb093127b6d74c12f3b8fd0904","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52cdb013036391d9d87aba5b4fc49cdfc6ea4b23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93ef3fdf3b6633c58f049e5a6be755777dde4340","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99e3f83539cac6884a4df02cb204a57a184ea12b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47644","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.197","lastModified":"2025-02-26T06:37:06.197","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: staging: media: zoran: move videodev alloc\n\nMove some code out of zr36057_init() and create new functions for handling\nzr->video_dev. This permit to ease code reading and fix a zr->video_dev\nmemory leak."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: staging: media: zoran: move videodev alloc Mueva parte del código de zr36057_init() y cree nuevas funciones para manejar zr-&gt;video_dev. Esto permite facilitar la lectura del código y reparar una pérdida de memoria en zr-&gt;video_dev."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e501ec38796f43e995731d1bcd4173cb1ccfce0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82e3a496eb56da0b9f29fdc5b63cedb3289e91de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd01629315ffd5b63da91d0bd529a77d30e55028","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1ba65100a359fe28cfe37e09e10c99f247cbf1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff3357bffd9fb78f59762d8955afc7382a279079","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47645","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.293","lastModified":"2025-02-26T06:37:06.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: staging: media: zoran: calculate the right buffer number for zoran_reap_stat_com\n\nOn the case tmp_dcim=1, the index of buffer is miscalculated.\nThis generate a NULL pointer dereference later.\n\nSo let's fix the calcul and add a check to prevent this to reappear."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: media: staging: media: zoran: calcula el número de búfer correcto para zoran_reap_stat_com En el caso tmp_dcim=1, el índice del búfer se calcula mal. Esto genera una desreferencia de puntero NULL más adelante. Por lo tanto, arreglemos el cálculo y agreguemos una verificación para evitar que esto vuelva a aparecer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20811bbe685ca3eddd34b0c750860427d7030910","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20db2ed1e2f9fcd417fa67853e5154f0c2537d6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e76f3ed7ab2ae026c6ef9cc23096a7554af8c52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bafec1a6ba4b187a7fcdcfce0faebdc623d4ef8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3b86f4e558cea9eed71d894df2f19b10d60a207","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47646","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.390","lastModified":"2025-02-26T06:37:06.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRevert \"Revert \"block, bfq: honor already-setup queue merges\"\"\n\nA crash [1] happened to be triggered in conjunction with commit\n2d52c58b9c9b (\"block, bfq: honor already-setup queue merges\"). The\nlatter was then reverted by commit ebc69e897e17 (\"Revert \"block, bfq:\nhonor already-setup queue merges\"\"). Yet, the reverted commit was not\nthe one introducing the bug. In fact, it actually triggered a UAF\nintroduced by a different commit, and now fixed by commit d29bd41428cf\n(\"block, bfq: reset last_bfqq_created on group change\").\n\nSo, there is no point in keeping commit 2d52c58b9c9b (\"block, bfq:\nhonor already-setup queue merges\") out. This commit restores it.\n\n[1] https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=214503"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: Revert \"Revert \"block, bfq: respetar las fusiones de colas ya configuradas\"\" Se produjo un fallo [1] junto con la confirmación 2d52c58b9c9b (\"block, bfq: respetar las fusiones de colas ya configuradas\"). Esta última se revirtió mediante la confirmación ebc69e897e17 (\"Revert \"block, bfq: respetar las fusiones de colas ya configuradas\"\"). Sin embargo, la confirmación revertida no fue la que introdujo el error. De hecho, activó una UAF introducida por una confirmación diferente, y ahora corregida por la confirmación d29bd41428cf (\"block, bfq: restablecer last_bfqq_created al cambiar de grupo\"). Por lo tanto, no tiene sentido mantener la confirmación 2d52c58b9c9b (\"block, bfq: respetar las fusiones de colas ya configuradas\"). Esta confirmación la restaura. [1] https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=214503"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15729ff8143f8135b03988a100a19e66d7cb7ecd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4083925bd6dc89216d156474a8076feec904e607","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65d8a737452e88f251fe5d925371de6d606df613","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/931aff627469a75c77b9fd3823146d0575afffd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abc2129e646af7b43025d90a071f83043f1ae76c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc051f497eac9d8a0d816cd4bffa3415f2724871","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f990f0985eda59d4f29fc83fcf300c92b1225d39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47647","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.490","lastModified":"2025-02-26T06:37:06.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: ipq8074: fix PCI-E clock oops\n\nFix PCI-E clock related kernel oops that are caused by a missing clock\nparent.\n\npcie0_rchng_clk_src has num_parents set to 2 but only one parent is\nactually set via parent_hws, it should also have \"XO\" defined.\nThis will cause the kernel to panic on a NULL pointer in\nclk_core_get_parent_by_index().\n\nSo, to fix this utilize clk_parent_data to provide gcc_xo_gpll0 parent\ndata.\nSince there is already an existing static const char * const gcc_xo_gpll0[]\nused to provide the same parents via parent_names convert those users to\nclk_parent_data as well.\n\nWithout this earlycon is needed to even catch the OOPS as it will reset\nthe board before serial is initialized with the following:\n\n[    0.232279] Unable to handle kernel paging request at virtual address 0000a00000000000\n[    0.232322] Mem abort info:\n[    0.239094]   ESR = 0x96000004\n[    0.241778]   EC = 0x25: DABT (current EL), IL = 32 bits\n[    0.244908]   SET = 0, FnV = 0\n[    0.250377]   EA = 0, S1PTW = 0\n[    0.253236]   FSC = 0x04: level 0 translation fault\n[    0.256277] Data abort info:\n[    0.261141]   ISV = 0, ISS = 0x00000004\n[    0.264262]   CM = 0, WnR = 0\n[    0.267820] [0000a00000000000] address between user and kernel address ranges\n[    0.270954] Internal error: Oops: 96000004 [#1] SMP\n[    0.278067] Modules linked in:\n[    0.282751] CPU: 1 PID: 1 Comm: swapper\/0 Not tainted 5.15.10 #0\n[    0.285882] Hardware name: Xiaomi AX3600 (DT)\n[    0.292043] pstate: 20400005 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    0.296299] pc : clk_core_get_parent_by_index+0x68\/0xec\n[    0.303067] lr : __clk_register+0x1d8\/0x820\n[    0.308273] sp : ffffffc01111b7d0\n[    0.312438] x29: ffffffc01111b7d0 x28: 0000000000000000 x27: 0000000000000040\n[    0.315919] x26: 0000000000000002 x25: 0000000000000000 x24: ffffff8000308800\n[    0.323037] x23: ffffff8000308850 x22: ffffff8000308880 x21: ffffff8000308828\n[    0.330155] x20: 0000000000000028 x19: ffffff8000309700 x18: 0000000000000020\n[    0.337272] x17: 000000005cc86990 x16: 0000000000000004 x15: ffffff80001d9d0a\n[    0.344391] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000006\n[    0.351508] x11: 0000000000000003 x10: 0101010101010101 x9 : 0000000000000000\n[    0.358626] x8 : 7f7f7f7f7f7f7f7f x7 : 6468626f5e626266 x6 : 17000a3a403c1b06\n[    0.365744] x5 : 061b3c403a0a0017 x4 : 0000000000000000 x3 : 0000000000000001\n[    0.372863] x2 : 0000a00000000000 x1 : 0000000000000001 x0 : ffffff8000309700\n[    0.379982] Call trace:\n[    0.387091]  clk_core_get_parent_by_index+0x68\/0xec\n[    0.389351]  __clk_register+0x1d8\/0x820\n[    0.394210]  devm_clk_hw_register+0x5c\/0xe0\n[    0.398030]  devm_clk_register_regmap+0x44\/0x8c\n[    0.402198]  qcom_cc_really_probe+0x17c\/0x1d0\n[    0.406711]  qcom_cc_probe+0x34\/0x44\n[    0.411224]  gcc_ipq8074_probe+0x18\/0x30\n[    0.414869]  platform_probe+0x68\/0xe0\n[    0.418776]  really_probe.part.0+0x9c\/0x30c\n[    0.422336]  __driver_probe_device+0x98\/0x144\n[    0.426329]  driver_probe_device+0x44\/0x11c\n[    0.430842]  __device_attach_driver+0xb4\/0x120\n[    0.434836]  bus_for_each_drv+0x68\/0xb0\n[    0.439349]  __device_attach+0xb0\/0x170\n[    0.443081]  device_initial_probe+0x14\/0x20\n[    0.446901]  bus_probe_device+0x9c\/0xa4\n[    0.451067]  device_add+0x35c\/0x834\n[    0.454886]  of_device_add+0x54\/0x64\n[    0.458360]  of_platform_device_create_pdata+0xc0\/0x100\n[    0.462181]  of_platform_bus_create+0x114\/0x370\n[    0.467128]  of_platform_bus_create+0x15c\/0x370\n[    0.471641]  of_platform_populate+0x50\/0xcc\n[    0.476155]  of_platform_default_populate_init+0xa8\/0xc8\n[    0.480324]  do_one_initcall+0x50\/0x1b0\n[    0.485877]  kernel_init_freeable+0x234\/0x29c\n[    0.489436]  kernel_init+0x24\/0x120\n[    0.493948]  ret_from_fork+0x10\/0x20\n[    0.497253] Code: d50323bf d65f03c0 f94002a2 b4000302 (f9400042)\n[    0.501079] ---[ end trace 4ca7e1129da2abce ]---"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: clk: qcom: ipq8074: fix PCI-E clock oops Corrige los errores del kernel relacionados con el reloj PCI-E que son causados por un reloj padre faltante. pcie0_rchng_clk_src tiene num_parents establecido en 2, pero solo un padre está realmente establecido a través de parent_hws, también debería tener \"XO\" definido. Esto hará que el kernel entre en pánico en un puntero NULL en clk_core_get_parent_by_index(). Entonces, para solucionar esto, utilice clk_parent_data para proporcionar los datos del padre gcc_xo_gpll0. Dado que ya existe un static const char * const gcc_xo_gpll0[] utilizado para proporcionar los mismos padres a través de parent_names, convierta esos usuarios a clk_parent_data también. Sin este earlycon es necesario incluso para detectar el OOPS ya que reiniciará la placa antes de que se inicialice el serial con lo siguiente: [0.232279] No se puede manejar la solicitud de paginación del kernel en la dirección virtual 0000a00000000000 [0.232322] Información de aborto de memoria: [0.239094] ESR = 0x96000004 [0.241778] EC = 0x25: DABT (EL actual), IL = 32 bits [0.244908] SET = 0, FnV = 0 [0.250377] EA = 0, S1PTW = 0 [0.253236] FSC = 0x04: falla de traducción de nivel 0 [0.256277] Información de aborto de datos: [0.261141] ISV = 0, ISS = 0x00000004 [ 0.264262] CM = 0, WnR = 0 [ 0.267820] [0000a00000000000] dirección entre los rangos de direcciones del usuario y del núcleo [ 0.270954] Error interno: Oops: 96000004 [#1] SMP [ 0.278067] Módulos vinculados en: [ 0.282751] CPU: 1 PID: 1 Comm: swapper\/0 No contaminado 5.15.10 #0 [ 0.285882] Nombre del hardware: Xiaomi AX3600 (DT) [ 0.292043] pstate: 20400005 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) [ 0,296299] pc: clk_core_get_parent_by_index+0x68\/0xec [0,303067] lr: __clk_register+0x1d8\/0x820 [0,308273] sp: ffffffc01111b7d0 [0,312438] x29: ffffffc01111b7d0 x28: 0000000000000000 x27: 0000000000000040 [0,315919] x26: 000000000000002 x25: 0000000000000000 x24: ffffff8000308800 [ 0,323037] x23: ffffff8000308850 x22: ffffff8000308880 x21: ffffff8000308828 [ 0,330155] x20: 0000000000000028 x19: ffffff8000309700 x18: 0000000000000020 [ 0,337272] x17: 000000005cc86990 x16: 0000000000000004 x15: ffffff80001d9d0a [ 0,344391] x14: 0000000000000000 x13: 00000000000000000 x12: 0000000000000006 [ 0.351508] x11: 0000000000000003 x10: 0101010101010101 x9 : 0000000000000000 [ 0.358626] x8 : 7f7f7f7f7f7f7f7f x7 : 6468626f5e626266 x6 : 17000a3a403c1b06 [ 0.365744] x5 : 061b3c403a0a0017 x4 : 000000000000000 x3 : 0000000000000001 [ 0.372863] x2 : 0000a00000000000 x1 : 0000000000000001 x0 : ffffff8000309700 [ 0.379982] Rastreo de llamadas: [ 0.387091] clk_core_get_parent_by_index+0x68\/0xec [ 0.389351] __clk_register+0x1d8\/0x820 [ 0.394210] devm_clk_hw_register+0x5c\/0xe0 [ 0.398030] devm_clk_register_regmap+0x44\/0x8c [ 0.402198] qcom_cc_really_probe+0x17c\/0x1d0 [ 0.406711] qcom_cc_probe+0x34\/0x44 [ 0.411224] gcc_ipq8074_probe+0x18\/0x30 [ 0.414869] platform_probe+0x68\/0xe0 [ 0.418776] really_probe.part.0+0x9c\/0x30c [ 0.422336] __driver_probe_device+0x98\/0x144 [ 0.426329] driver_probe_device+0x44\/0x11c [ 0.430842] __device_attach_driver+0xb4\/0x120 [ 0.434836] bus_for_each_drv+0x68\/0xb0 [ 0.439349] __device_attach+0xb0\/0x170 [ 0.443081] device_initial_probe+0x14\/0x20 [ 0.446901] bus_probe_device+0x9c\/0xa4 [ 0.451067] device_add+0x35c\/0x834 [ 0.454886] of_device_add+0x54\/0x64 [ 0.458360] of_platform_device_create_pdata+0xc0\/0x100 [ 0.462181] of_platform_bus_create+0x114\/0x370 [ 0.467128] of_platform_bus_create+0x15c\/0x370 [ 0.471641] of_platform_populate+0x50\/0xcc [ 0.476155] of_platform_default_populate_init+0xa8\/0xc8 [ 0.480324] do_one_initcall+0x50\/0x1b0 [ 0.485877] kernel_init_freeable+0x234\/0x29c [ 0.489436] kernel_init+0x24\/0x120 [ 0.493948] ret_from_fork+0x10\/0x20 [ 0.497253] Código: d50323bf d65f03c0 f94002a2 b4000302 (f9400042) [ 0.501079] ---[ fin del seguimiento 4ca7e1129da2abce ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41e360fa73a4c2f5b78f5ded78a5375b08c206a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a5576ad405c3c89fc9afb245c4dcc3e412b0aa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b89c9e68a01a19a1dd689a42aa65d545e931899","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf8f5182b8f59309809b41c1d1730ed9ca6134b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d02b3d4a8c525068bc5cfb4341e0023d8eb82ace","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47648","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.597","lastModified":"2025-02-26T06:37:06.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpu: host1x: Fix a memory leak in 'host1x_remove()'\n\nAdd a missing 'host1x_channel_list_free()' call in the remove function,\nas already done in the error handling path of the probe function."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: gpu: host1x: Se corrige una pérdida de memoria en 'host1x_remove()'. Se agrega una llamada 'host1x_channel_list_free()' faltante en la función de eliminación, como ya se hizo en la ruta de manejo de errores de la función de sonda."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/025c6643a81564f066d8381b9e2f4603e0f8438f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5124a344983e1b9670dae7add0e4d00d589aabcd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bb107332db28a0e9256c2d36a0902b85307612c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c06577a80485511b894cb688e881ef0bc2d1d296","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe1ce680560d4f0049ffa0c687de17567421c1ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47649","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.687","lastModified":"2025-02-26T06:37:06.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudmabuf: validate ubuf->pagecount\n\nSyzbot has reported GPF in sg_alloc_append_table_from_pages(). The\nproblem was in ubuf->pages == ZERO_PTR.\n\nubuf->pagecount is calculated from arguments passed from user-space. If\nuser creates udmabuf with list.size == 0 then ubuf->pagecount will be\nalso equal to zero; it causes kmalloc_array() to return ZERO_PTR.\n\nFix it by validating ubuf->pagecount before passing it to\nkmalloc_array()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: udmabuf: validar ubuf-&gt;pagecount Syzbot ha informado de un GPF en sg_alloc_append_table_from_pages(). El problema estaba en ubuf-&gt;pages == ZERO_PTR. ubuf-&gt;pagecount se calcula a partir de los argumentos pasados desde el espacio de usuario. Si el usuario crea udmabuf con list.size == 0, entonces ubuf-&gt;pagecount también será igual a cero; esto hace que kmalloc_array() devuelva ZERO_PTR. Arréglelo validando ubuf-&gt;pagecount antes de pasarlo a kmalloc_array()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b6dd600dd72573c23ea180b5b0b2f1813405882","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d50f851dd307c07ca5591297093f19967c834a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/811b667cefbea9cb7511a874b169d6a92907137e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9b4a269f84d3230f2af84ff42322db676440d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3728d32fc61eb0fe283cb8ff60b2c8f751e2202","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b267a8118c2b171bf7d67b90ed64154eeab9fae0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47650","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.780","lastModified":"2025-02-26T06:37:06.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: soc-compress: prevent the potentially use of null pointer\n\nThere is one call trace that snd_soc_register_card()\n->snd_soc_bind_card()->soc_init_pcm_runtime()\n->snd_soc_dai_compress_new()->snd_soc_new_compress().\nIn the trace the 'codec_dai' transfers from card->dai_link,\nand we can see from the snd_soc_add_pcm_runtime() in\nsnd_soc_bind_card() that, if value of card->dai_link->num_codecs\nis 0, then 'codec_dai' could be null pointer caused\nby index out of bound in 'asoc_rtd_to_codec(rtd, 0)'.\nAnd snd_soc_register_card() is called by various platforms.\nTherefore, it is better to add the check in the case of misusing.\nAnd because 'cpu_dai' has already checked in soc_init_pcm_runtime(),\nthere is no need to check again.\nAdding the check as follow, then if 'codec_dai' is null,\nsnd_soc_new_compress() will not pass through the check\n'if (playback + capture != 1)', avoiding the leftover use of\n'codec_dai'."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ASoC: soc-compress: evita el posible uso de un puntero nulo Hay un seguimiento de llamada que snd_soc_register_card() -&gt;snd_soc_bind_card()-&gt;soc_init_pcm_runtime() -&gt;snd_soc_dai_compress_new()-&gt;snd_soc_new_compress(). En el seguimiento, 'codec_dai' se transfiere desde card-&gt;dai_link, y podemos ver desde snd_soc_add_pcm_runtime() en snd_soc_bind_card() que, si el valor de card-&gt;dai_link-&gt;num_codecs es 0, entonces 'codec_dai' podría ser un puntero nulo causado por un índice fuera de los límites en 'asoc_rtd_to_codec(rtd, 0)'. Además, varias plataformas llaman a snd_soc_register_card(), por lo que es mejor agregar la verificación en caso de uso incorrecto. Y como 'cpu_dai' ya se ha verificado en soc_init_pcm_runtime(), no es necesario volver a verificar. Si se agrega la verificación de la siguiente manera, si 'codec_dai' es nulo, snd_soc_new_compress() no pasará la verificación 'if (playback + capture != 1)', lo que evita el uso sobrante de 'codec_dai'."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08af6da684b44097ea09f1d74d5858b837ed203b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4639c1d97f385f4784f44d66a3da0672f4951ada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a69ad8df959e5211ed4a8e120783b2d352ea74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de2c6f98817fa5decb9b7d3b3a8a3ab864c10588","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f69a75cb8a98c6c487d620442c68595726a69f60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc237b8d624f4bcb0f21a532627ce4e3b3a85569","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47651","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.880","lastModified":"2025-02-26T06:37:06.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: rpmpd: Check for null return of devm_kcalloc\n\nBecause of the possible failure of the allocation, data->domains might\nbe NULL pointer and will cause the dereference of the NULL pointer\nlater.\nTherefore, it might be better to check it and directly return -ENOMEM\nwithout releasing data manually if fails, because the comment of the\ndevm_kmalloc() says \"Memory allocated with this function is\nautomatically freed on driver detach.\"."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: soc: qcom: rpmpd: Verificar el retorno nulo de devm_kcalloc Debido al posible fallo de la asignación, data-&gt;domains podría ser un puntero NULL y provocará la desreferencia del puntero NULL más adelante. Por lo tanto, podría ser mejor verificarlo y devolver directamente -ENOMEM sin liberar los datos manualmente si falla, porque el comentario de devm_kmalloc() dice \"La memoria asignada con esta función se libera automáticamente al desconectar el controlador\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31b5124d742969ea8bf7a1360596f548ca23e770","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a811126d38f9767a20cc271b34db7c8efc5a46c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/724376c30af5a57686b223dbcd6188e07d2a1de2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/755dbc3d73789ac9f0017c729abf5e4b153bf799","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84b89fa877ad576e9ee8130f412cfd592f274508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5d6eba71997b6d661935d2b15094ac7f9f6132d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47652","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:06.973","lastModified":"2025-02-26T06:37:06.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: smscufx: Fix null-ptr-deref in ufx_usb_probe()\n\nI got a null-ptr-deref report:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n...\nRIP: 0010:fb_destroy_modelist+0x38\/0x100\n...\nCall Trace:\n ufx_usb_probe.cold+0x2b5\/0xac1 [smscufx]\n usb_probe_interface+0x1aa\/0x3c0 [usbcore]\n really_probe+0x167\/0x460\n...\n ret_from_fork+0x1f\/0x30\n\nIf fb_alloc_cmap() fails in ufx_usb_probe(), fb_destroy_modelist() will\nbe called to destroy modelist in the error handling path. But modelist\nhas not been initialized yet, so it will result in null-ptr-deref.\n\nInitialize modelist before calling fb_alloc_cmap() to fix this bug."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: video: fbdev: smscufx: Corregir null-ptr-deref en ufx_usb_probe() Recibí un informe de null-ptr-deref: ERROR: desreferencia de puntero NULL del kernel, dirección: 0000000000000000 ... RIP: 0010:fb_destroy_modelist+0x38\/0x100 ... Seguimiento de llamadas: ufx_usb_probe.cold+0x2b5\/0xac1 [smscufx] usb_probe_interface+0x1aa\/0x3c0 [usbcore] really_probe+0x167\/0x460 ... ret_from_fork+0x1f\/0x30 Si fb_alloc_cmap() falla en ufx_usb_probe(), fb_destroy_modelist() Se llamará a modelist para destruirlo en la ruta de manejo de errores. Pero modelist aún no se ha inicializado, por lo que dará como resultado null-ptr-deref. Inicialice modelist antes de llamar a fb_alloc_cmap() para corregir este error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fd28daec73525382e5c992db8743bf76e42cd5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1791f487f877a9e83d81c8677bd3e7b259e7cb27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64ec3e678d76419f207b9cdd338dda438ca10b1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9280ef235b05e8f19f8bc6d547b992f0a0ef398d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c420b540db4b5d69de0a36d8b9d9a6a79a04f05a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1b6a1f0c23b7164250479bf92e2893291dca539","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d396c651e2b508b6179bb678cc029f3becbf5170","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da8b269cc0a2526ebeaccbe2484c999eb0f822cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd3a6cc7385b89ec2303f39dfc3bafa4e24cec4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47653","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.080","lastModified":"2025-02-26T06:37:07.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: davinci: vpif: fix use-after-free on driver unbind\n\nThe driver allocates and registers two platform device structures during\nprobe, but the devices were never deregistered on driver unbind.\n\nThis results in a use-after-free on driver unbind as the device\nstructures were allocated using devres and would be freed by driver\ncore when remove() returns.\n\nFix this by adding the missing deregistration calls to the remove()\ncallback and failing probe on registration errors.\n\nNote that the platform device structures must be freed using a proper\nrelease callback to avoid leaking associated resources like device\nnames."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/43acb728bbc40169d2e2425e84a80068270974be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6512c3c39cb6b573b791ce45365818a38b76afbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ffc602e14d7b9f7e7cb2f67e18dfef9ef8af676","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5a3bb7f6f164eb6ee74ef4898dcd019b2063448","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47654","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.170","lastModified":"2025-02-26T06:37:07.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsamples\/landlock: Fix path_list memory leak\n\nClang static analysis reports this error\n\nsandboxer.c:134:8: warning: Potential leak of memory\n  pointed to by 'path_list'\n        ret = 0;\n              ^\npath_list is allocated in parse_path() but never freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/017196730299ccd6eed24bbfabed8af4ffd81530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20fbf100f84b9aeb9c91421abe1927bc152bc32b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49b0d8bf05809df5f87e5c03e26d74bdfdab4571","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66b513b7c64a7290c1fbb88e657f7cece992e131","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47655","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.267","lastModified":"2025-02-26T06:37:07.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: vdec: fixed possible memory leak issue\n\nThe venus_helper_alloc_dpb_bufs() implementation allows an early return\non an error path when checking the id from ida_alloc_min() which would\nnot release the earlier buffer allocation.\n\nMove the direct kfree() from the error checking of dma_alloc_attrs() to\nthe common fail path to ensure that allocations are released on all\nerror paths in this function.\n\nAddresses-Coverity: 1494120 (\"Resource leak\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55bccafc246b2e64763a155ec454470c07a54a6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cedfe8aaf1875a5305897107b7f298db4260019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f89d05ba93df9c2cdfe493843f93288e55e99eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8403fdd775858a7bf04868d43daea0acbe49ddfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47656","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.360","lastModified":"2025-02-26T06:37:07.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: fix use-after-free in jffs2_clear_xattr_subsystem\n\nWhen we mount a jffs2 image, assume that the first few blocks of\nthe image are normal and contain at least one xattr-related inode,\nbut the next block is abnormal. As a result, an error is returned\nin jffs2_scan_eraseblock(). jffs2_clear_xattr_subsystem() is then\ncalled in jffs2_build_filesystem() and then again in\njffs2_do_fill_super().\n\nFinally we can observe the following report:\n ==================================================================\n BUG: KASAN: use-after-free in jffs2_clear_xattr_subsystem+0x95\/0x6ac\n Read of size 8 at addr ffff8881243384e0 by task mount\/719\n\n Call Trace:\n  dump_stack+0x115\/0x16b\n  jffs2_clear_xattr_subsystem+0x95\/0x6ac\n  jffs2_do_fill_super+0x84f\/0xc30\n  jffs2_fill_super+0x2ea\/0x4c0\n  mtd_get_sb+0x254\/0x400\n  mtd_get_sb_by_nr+0x4f\/0xd0\n  get_tree_mtd+0x498\/0x840\n  jffs2_get_tree+0x25\/0x30\n  vfs_get_tree+0x8d\/0x2e0\n  path_mount+0x50f\/0x1e50\n  do_mount+0x107\/0x130\n  __se_sys_mount+0x1c5\/0x2f0\n  __x64_sys_mount+0xc7\/0x160\n  do_syscall_64+0x45\/0x70\n  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\n Allocated by task 719:\n  kasan_save_stack+0x23\/0x60\n  __kasan_kmalloc.constprop.0+0x10b\/0x120\n  kasan_slab_alloc+0x12\/0x20\n  kmem_cache_alloc+0x1c0\/0x870\n  jffs2_alloc_xattr_ref+0x2f\/0xa0\n  jffs2_scan_medium.cold+0x3713\/0x4794\n  jffs2_do_mount_fs.cold+0xa7\/0x2253\n  jffs2_do_fill_super+0x383\/0xc30\n  jffs2_fill_super+0x2ea\/0x4c0\n [...]\n\n Freed by task 719:\n  kmem_cache_free+0xcc\/0x7b0\n  jffs2_free_xattr_ref+0x78\/0x98\n  jffs2_clear_xattr_subsystem+0xa1\/0x6ac\n  jffs2_do_mount_fs.cold+0x5e6\/0x2253\n  jffs2_do_fill_super+0x383\/0xc30\n  jffs2_fill_super+0x2ea\/0x4c0\n [...]\n\n The buggy address belongs to the object at ffff8881243384b8\n  which belongs to the cache jffs2_xattr_ref of size 48\n The buggy address is located 40 bytes inside of\n  48-byte region [ffff8881243384b8, ffff8881243384e8)\n [...]\n ==================================================================\n\nThe triggering of the BUG is shown in the following stack:\n-----------------------------------------------------------\njffs2_fill_super\n  jffs2_do_fill_super\n    jffs2_do_mount_fs\n      jffs2_build_filesystem\n        jffs2_scan_medium\n          jffs2_scan_eraseblock        <--- ERROR\n        jffs2_clear_xattr_subsystem    <--- free\n    jffs2_clear_xattr_subsystem        <--- free again\n-----------------------------------------------------------\n\nAn error is returned in jffs2_do_mount_fs(). If the error is returned\nby jffs2_sum_init(), the jffs2_clear_xattr_subsystem() does not need to\nbe executed. If the error is returned by jffs2_build_filesystem(), the\njffs2_clear_xattr_subsystem() also does not need to be executed again.\nSo move jffs2_clear_xattr_subsystem() from 'out_inohash' to 'out_root'\nto fix this UAF problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22327bd7988f21de3a53c1373f3b81542bfe1f44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30bf7244acf32f19cb722c39f7bc1c2a9f300422","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bd2454162ec6bbb5503233c804fce6e4b6dcec5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c7c44ee1650677fbe89d86edbad9497b7679b5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a75740206af5f17e9f3efa384211cba70213da1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bb7428dd73991bf4b3a7a61b493ca50046c2b13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c0f024f29e055840a5a89fe23b96ae3f921afed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9150cb625b46f68d524f4cfd491f1aafc23e10a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b07c875fa8f906f932976460fd14798596f101","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47657","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.467","lastModified":"2025-02-26T06:37:07.467","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/virtio: Ensure that objs is not NULL in virtio_gpu_array_put_free()\n\nIf virtio_gpu_object_shmem_init() fails (e.g. due to fault injection, as it\nhappened in the bug report by syzbot), virtio_gpu_array_put_free() could be\ncalled with objs equal to NULL.\n\nEnsure that objs is not NULL in virtio_gpu_array_put_free(), or otherwise\nreturn from the function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6b79f96f4a23846516e5e6e4dd37fc06f43a60dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abc9ad36df16e27ac1c665085157f1a082d39bac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac92b474eeeed75b8660374ba1d129a121c09da8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b094fece3810c71ceee6f0921676cb65d4e68c5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47658","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.557","lastModified":"2025-02-26T06:37:07.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: fix a potential gpu_metrics_table memory leak\n\nMemory is allocated for gpu_metrics_table in renoir_init_smc_tables(),\nbut not freed in int smu_v12_0_fini_smc_tables(). Free it!"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/583637d66a70fc7090e12fb0ebbacc33d39e2214","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47659","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.640","lastModified":"2025-02-26T06:37:07.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/plane: Move range check for format_count earlier\n\nWhile the check for format_count > 64 in __drm_universal_plane_init()\nshouldn't be hit (it's a WARN_ON), in its current position it will then\nleak the plane->format_types array and fail to call\ndrm_mode_object_unregister() leaking the modeset identifier. Move it to\nthe start of the function to avoid allocating those resources in the\nfirst place."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e29d829ad51d1472dd035487953a6724b56fc33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ab7e453a3ee88c274cf97bee9487ab92a66d313","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b674dd69701c2e22e8e7770c1706a69f3b17269","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/787163d19bc3cdc6ca4b96223f62208534d1cf6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/978e3d023256bfaf34a0033d40c94e8a8e70cf3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad6dd7a2bac86118985c7b3426e175b9d3c1ec4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5cd108143513e4498027b96ec4710702d186f11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47660","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:07.733","lastModified":"2025-02-26T06:37:07.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/ntfs3: Fix some memory leaks in an error handling path of 'log_replay()'\n\nAll error handling paths lead to 'out' where many resources are freed.\n\nDo it as well here instead of a direct return, otherwise 'log', 'ra' and\n'log->one_page_buf' (at least) will leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c97519ed6b4239594c58ddacf3d0d576cf070cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc4a1d384a04c6dba9312e1421a9f9f7c03339a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8be98ab88250dc12a98efdb703792a537b0eac3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e589f9b7078e1c0191613cd736f598e81d2390de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-4453","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T06:37:29.820","lastModified":"2025-02-26T06:37:29.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: fix a potential gpu_metrics_table memory leak\n\nMemory is allocated for gpu_metrics_table in renoir_init_smc_tables(),\nbut not freed in int smu_v12_0_fini_smc_tables(). Free it!"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/222cebd995cdf11fe0d502749560f65e64990e55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/257b3bb16634fd936129fe2f57a91594a75b8751","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa464957f7e660abd554f2546a588f6533720e21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49044","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:41.680","lastModified":"2025-02-26T07:00:41.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm integrity: fix memory corruption when tag_size is less than digest size\n\nIt is possible to set up dm-integrity in such a way that the\n\"tag_size\" parameter is less than the actual digest size. In this\nsituation, a part of the digest beyond tag_size is ignored.\n\nIn this case, dm-integrity would write beyond the end of the\nic->recalc_tags array and corrupt memory. The corruption happened in\nintegrity_recalc->integrity_sector_checksum->crypto_shash_final.\n\nFix this corruption by increasing the tags array so that it has enough\npadding at the end to accomodate the loop in integrity_recalc() being\nable to write a full digest size for the last member of the tags\narray."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08c1af8f1c13bbf210f1760132f4df24d0ed46d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d485cf9b609709e45d5113e6e2b1b01254b2fe9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a95d91c0b315c965198f6ab7dec7c94129e17e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b4bf97587ef6c1927a78934b700204920655123","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f84c937222944c03f4615ca4742df6bed0e5adf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd02b2687d66f0a8e716384de4b9a0671331f1dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49045","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:41.790","lastModified":"2025-02-26T07:00:41.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Test for \"silence\" field in struct \"pcm_format_data\"\n\nSyzbot reports \"KASAN: null-ptr-deref Write in\nsnd_pcm_format_set_silence\".[1]\n\nIt is due to missing validation of the \"silence\" field of struct\n\"pcm_format_data\" in \"pcm_formats\" array.\n\nAdd a test for valid \"pat\" and, if it is not so, return -EINVAL.\n\n[1] https:\/\/lore.kernel.org\/lkml\/000000000000d188ef05dc2c7279@google.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f7a26abb8241a0208c68d22815aa247c5ddacab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/377a80ca6590f40ec8a85227b889a5d399fe26c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63038f6e96a77a0abf8083649c53e6a72c1a0124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77af45df08768401602472f3e3879dce14f55497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/912797e54c99a98f0722f21313e13a3938bb6dba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97345c90235b1bb7661e7a428d9dcb96b1d7f5d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b2f23bfe5452b00eb1c842bc71098449e4ad9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb04e3112a3516e483d60a9af9762961702a6c1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49046","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:41.890","lastModified":"2025-02-26T07:00:41.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: dev: check return value when calling dev_set_name()\n\nIf dev_set_name() fails, the dev_name() is null, check the return\nvalue of dev_set_name() to avoid the null-ptr-deref."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f345bb14ad4744950499ff222e2899209297afa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/993eb48fa199b5f476df8204e652eff63dd19361","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c74d77a2d07744147d734138acd6ce9dba715e5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49047","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:41.983","lastModified":"2025-02-26T07:00:41.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nep93xx: clock: Fix UAF in ep93xx_clk_register_gate()\n\narch\/arm\/mach-ep93xx\/clock.c:154:2: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]\narch\/arm\/mach-ep93xx\/clock.c:151:2: note: Taking true branch\nif (IS_ERR(clk))\n^\narch\/arm\/mach-ep93xx\/clock.c:152:3: note: Memory is released\nkfree(psc);\n^~~~~~~~~~\narch\/arm\/mach-ep93xx\/clock.c:154:2: note: Use of memory after it is freed\nreturn &psc->hw;\n^ ~~~~~~~~"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f12166872da46c6b57ba2f1314bbf310b3bf017","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b68b08885217abd9c57ff9b3bb3eb173eee02a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49048","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.073","lastModified":"2025-02-26T07:00:42.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix panic when forwarding a pkt with no in6 dev\n\nkongweibin reported a kernel panic in ip6_forward() when input interface\nhas no in6 dev associated.\n\nThe following tc commands were used to reproduce this panic:\ntc qdisc del dev vxlan100 root\ntc qdisc add dev vxlan100 root netem corrupt 5%"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/74b68f5249f16c5f7f675d0f604fa6ae20e3a151","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a263712ba8c9ded25dd9d2d5ced11bcea5b33a3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab2f5afb7af5c68389e8c7dd29e0a98fbeaaa435","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adee01bbf6cb5b3e4ed08be8ff866aac90f13836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3fa461d8b0e185b7da8a101fe94dfe6dd500ac0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e69fb3de87a8923e5931a272a38fa3cceb01da44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49049","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.170","lastModified":"2025-02-26T07:00:42.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/secretmem: fix panic when growing a memfd_secret\n\nWhen one tries to grow an existing memfd_secret with ftruncate, one gets\na panic [1].  For example, doing the following reliably induces the\npanic:\n\n    fd = memfd_secret();\n\n    ftruncate(fd, 10);\n    ptr = mmap(NULL, 10, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n    strcpy(ptr, \"123456789\");\n\n    munmap(ptr, 10);\n    ftruncate(fd, 20);\n\nThe basic reason for this is, when we grow with ftruncate, we call down\ninto simple_setattr, and then truncate_inode_pages_range, and eventually\nwe try to zero part of the memory.  The normal truncation code does this\nvia the direct map (i.e., it calls page_address() and hands that to\nmemset()).\n\nFor memfd_secret though, we specifically don't map our pages via the\ndirect map (i.e.  we call set_direct_map_invalid_noflush() on every\nfault).  So the address returned by page_address() isn't useful, and\nwhen we try to memset() with it we panic.\n\nThis patch avoids the panic by implementing a custom setattr for\nmemfd_secret, which detects resizes specifically (setting the size for\nthe first time works just fine, since there are no existing pages to try\nto zero), and rejects them with EINVAL.\n\nOne could argue growing should be supported, but I think that will\nrequire a significantly more lengthy change.  So, I propose a minimal\nfix for the benefit of stable kernels, and then perhaps to extend\nmemfd_secret to support growing in a separate patch.\n\n[1]:\n\n  BUG: unable to handle page fault for address: ffffa0a889277028\n  #PF: supervisor write access in kernel mode\n  #PF: error_code(0x0002) - not-present page\n  PGD afa01067 P4D afa01067 PUD 83f909067 PMD 83f8bf067 PTE 800ffffef6d88060\n  Oops: 0002 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI\n  CPU: 0 PID: 281 Comm: repro Not tainted 5.17.0-dbg-DEV #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n  RIP: 0010:memset_erms+0x9\/0x10\n  Code: c1 e9 03 40 0f b6 f6 48 b8 01 01 01 01 01 01 01 01 48 0f af c6 f3 48 ab 89 d1 f3 aa 4c 89 c8 c3 90 49 89 f9 40 88 f0 48 89 d1 <f3> aa 4c 89 c8 c3 90 49 89 fa 40 0f b6 ce 48 b8 01 01 01 01 01 01\n  RSP: 0018:ffffb932c09afbf0 EFLAGS: 00010246\n  RAX: 0000000000000000 RBX: ffffda63c4249dc0 RCX: 0000000000000fd8\n  RDX: 0000000000000fd8 RSI: 0000000000000000 RDI: ffffa0a889277028\n  RBP: ffffb932c09afc00 R08: 0000000000001000 R09: ffffa0a889277028\n  R10: 0000000000020023 R11: 0000000000000000 R12: ffffda63c4249dc0\n  R13: ffffa0a890d70d98 R14: 0000000000000028 R15: 0000000000000fd8\n  FS:  00007f7294899580(0000) GS:ffffa0af9bc00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: ffffa0a889277028 CR3: 0000000107ef6006 CR4: 0000000000370ef0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   ? zero_user_segments+0x82\/0x190\n   truncate_inode_partial_folio+0xd4\/0x2a0\n   truncate_inode_pages_range+0x380\/0x830\n   truncate_setsize+0x63\/0x80\n   simple_setattr+0x37\/0x60\n   notify_change+0x3d8\/0x4d0\n   do_sys_ftruncate+0x162\/0x1d0\n   __x64_sys_ftruncate+0x1c\/0x20\n   do_syscall_64+0x44\/0xa0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n  Modules linked in: xhci_pci xhci_hcd virtio_net net_failover failover virtio_blk virtio_balloon uhci_hcd ohci_pci ohci_hcd evdev ehci_pci ehci_hcd 9pnet_virtio 9p netfs 9pnet\n  CR2: ffffa0a889277028\n\n[lkp@intel.com: secretmem_iops can be static]\n  Signed-off-by: kernel test robot <lkp@intel.com>\n[axelrasmussen@google.com: return EINVAL]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9d3b877daf805fed29be8f61aa3d0ea37df82c7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6d17c67885a5624e96eb30c4178c65eea8374bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9b141f93659e09a52e28791ccbaf69c273b8e92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49050","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.270","lastModified":"2025-02-26T07:00:42.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: renesas-rpc-if: fix platform-device leak in error path\n\nMake sure to free the flash platform device in the event that\nregistration fails during probe."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05d1824a7fb43ab9adb1eb82404954af81d8c984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66b9b707ea4dcafca92b6261c6924652914e3b73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b452dbf24d7d9a990d70118462925f6ee287d135","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c089ffc846c85f200db34ad208338f4f81a6d82d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49051","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.363","lastModified":"2025-02-26T07:00:42.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: aqc111: Fix out-of-bounds accesses in RX fixup\n\naqc111_rx_fixup() contains several out-of-bounds accesses that can be\ntriggered by a malicious (or defective) USB device, in particular:\n\n - The metadata array (desc_offset..desc_offset+2*pkt_count) can be out of bounds,\n   causing OOB reads and (on big-endian systems) OOB endianness flips.\n - A packet can overlap the metadata array, causing a later OOB\n   endianness flip to corrupt data used by a cloned SKB that has already\n   been handed off into the network stack.\n - A packet SKB can be constructed whose tail is far beyond its end,\n   causing out-of-bounds heap data to be considered part of the SKB's\n   data.\n\nFound doing variant analysis. Tested it with another driver (ax88179_178a), since\nI don't have a aqc111 device to test it, but the code looks very similar."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36311fe98f55dea9200c69e2dd6d6ddb8fc94080","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/404998a137bcb8a926f7c949030afbe285472593","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afb8e246527536848b9b4025b40e613edf776a9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b416898442f2b6aa9f1b2f2968ce07e3abaa05f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d90df6da50c56ad8b1a132e3cf86b6cdf8f507b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49052","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.463","lastModified":"2025-02-26T07:00:42.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: fix unexpected zeroed page mapping with zram swap\n\nTwo processes under CLONE_VM cloning, user process can be corrupted by\nseeing zeroed page unexpectedly.\n\n      CPU A                        CPU B\n\n  do_swap_page                do_swap_page\n  SWP_SYNCHRONOUS_IO path     SWP_SYNCHRONOUS_IO path\n  swap_readpage valid data\n    swap_slot_free_notify\n      delete zram entry\n                              swap_readpage zeroed(invalid) data\n                              pte_lock\n                              map the *zero data* to userspace\n                              pte_unlock\n  pte_lock\n  if (!pte_same)\n    goto out_nomap;\n  pte_unlock\n  return and next refault will\n  read zeroed data\n\nThe swap_slot_free_notify is bogus for CLONE_VM case since it doesn't\nincrease the refcount of swap slot at copy_mm so it couldn't catch up\nwhether it's safe or not to discard data from backing device.  In the\ncase, only the lock it could rely on to synchronize swap slot freeing is\npage table lock.  Thus, this patch gets rid of the swap_slot_free_notify\nfunction.  With this patch, CPU A will see correct data.\n\n      CPU A                        CPU B\n\n  do_swap_page                do_swap_page\n  SWP_SYNCHRONOUS_IO path     SWP_SYNCHRONOUS_IO path\n                              swap_readpage original data\n                              pte_lock\n                              map the original data\n                              swap_free\n                                swap_range_free\n                                  bd_disk->fops->swap_slot_free_notify\n  swap_readpage read zeroed data\n                              pte_unlock\n  pte_lock\n  if (!pte_same)\n    goto out_nomap;\n  pte_unlock\n  return\n  on next refault will see mapped data by CPU B\n\nThe concern of the patch would increase memory consumption since it\ncould keep wasted memory with compressed form in zram as well as\nuncompressed form in address space.  However, most of cases of zram uses\nno readahead and do_swap_page is followed by swap_free so it will free\nthe compressed form from in zram quickly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12ba1d38115a101c45d8e0ca3aa1181fd148e57f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20ed94f8181a25212e7404e44958e234f407624b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afac4b88699a06c8b9369f9d759a1ec3c254b788","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e914d8f00391520ecc4495dd0ca0124538ab7119","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f098f8b9820fe3f2e41aefc4329dfe8a3859d1c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f86d55cf616199404c05f5b0c5c41b17351baa02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49053","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.563","lastModified":"2025-02-26T07:00:42.563","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: tcmu: Fix possible page UAF\n\ntcmu_try_get_data_page() looks up pages under cmdr_lock, but it does not\ntake refcount properly and just returns page pointer. When\ntcmu_try_get_data_page() returns, the returned page may have been freed by\ntcmu_blocks_release().\n\nWe need to get_page() under cmdr_lock to avoid concurrent\ntcmu_blocks_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a6968f7a367f128d120447360734344d5a3d5336","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9564d84ed9f6ee71017d062d0d2182154294a4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aec36b98a1bbaa84bfd8299a306e4c12314af626","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7f3b5d70c834f49f7d87a2f2ed1c6284d9a0322","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7c5d79e50be6e06b669141e3db1f977a0dd4e8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3e0e067d5b34e4a68e3cc55f8eebc413f56f8ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb7a5115422fbd6a4d505e8844f1ef5529f10489","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49054","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.667","lastModified":"2025-02-26T07:00:42.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Deactivate sysctl_record_panic_msg by default in isolated guests\n\nhv_panic_page might contain guest-sensitive information, do not dump it\nover to Hyper-V by default in isolated guests.\n\nWhile at it, update some comments in hyperv_{panic,die}_event()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b576e81d31b56b248316b8ff816b1cc5c4407c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6230bc50d6d21cae4c084766623d0a6d17958721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f8b577f7b43b2170628d6c537252785dcc2dcea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49055","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.760","lastModified":"2025-02-26T07:00:42.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Check for potential null return of kmalloc_array()\n\nAs the kmalloc_array() may return null, the 'event_waiters[i].wait' would lead to null-pointer dereference.\nTherefore, it is better to check the return value of kmalloc_array() to avoid this confusion."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a692c625e373fef692ffbc7fc41f8a025f01cb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d7a5aae884ca727d41c7ed15d4c82fdb67c040c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32cf90a521dcc0f136db7ee5ba32bfe5f79e460e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40bf32dbfef866c83a3e74800b81d79e52b6d20b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94869bb0de69a812f70231b0eb480bb2f7ae73a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7a268b33882d5feaafd29c1734456f41ba41396","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebbb7bb9e80305820dc2328a371c1b35679f2667","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2658d5966bcee8c3eb487875f459756d4f7cdfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49056","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.863","lastModified":"2025-02-26T07:00:42.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: abort file assignment prior to assigning creds\n\nWe need to either restore creds properly if we fail on the file\nassignment, or just do the file assignment first instead. Let's do\nthe latter as it's simpler, should make no difference here for\nfile assignment."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/262960775e0d2cdf97a3e33993e95e13175df4bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/701521403cfb228536b3947035c8a6eca40d8e58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49057","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:42.957","lastModified":"2025-02-26T07:00:42.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: null_blk: end timed out poll request\n\nWhen poll request is timed out, it is removed from the poll list,\nbut not completed, so the request is leaked, and never get chance\nto complete.\n\nFix the issue by ending it in timeout handler."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3e3876d322aef82416ecc496a4d4a587e0fdf7a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/407d09a22f3f685fd634aa5d05840c64b23bfebc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49058","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.047","lastModified":"2025-02-26T07:00:43.047","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: potential buffer overflow in handling symlinks\n\nSmatch printed a warning:\n\tarch\/x86\/crypto\/poly1305_glue.c:198 poly1305_update_arch() error:\n\t__memcpy() 'dctx->buf' too small (16 vs u32max)\n\nIt's caused because Smatch marks 'link_len' as untrusted since it comes\nfrom sscanf(). Add a check to ensure that 'link_len' is not larger than\nthe size of the 'link_str' buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1316c28569a80ab3596eeab05bf5e01991e7e739","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22d658c6c5affed10c8907e67160cef0b6c92186","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e582749e742e662a8e9bb37cffac62dccaaa1e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e166a41180be2f1e66bbb6d46448e80a9a5ec05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/515e7ba11ef043d6febe69389949c8ef5f25e9d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64c4a37ac04eeb43c42d272f6e6c8c12bfcf4304","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9901b07ba42b39266b34a888e48d7306fd707bee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb5f51756944735ac70cd8bb38637cc202e29c91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49059","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.150","lastModified":"2025-02-26T07:00:43.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nci: add flush_workqueue to prevent uaf\n\nOur detector found a concurrent use-after-free bug when detaching an\nNCI device. The main reason for this bug is the unexpected scheduling\nbetween the used delayed mechanism (timer and workqueue).\n\nThe race can be demonstrated below:\n\nThread-1                           Thread-2\n                                 | nci_dev_up()\n                                 |   nci_open_device()\n                                 |     __nci_request(nci_reset_req)\n                                 |       nci_send_cmd\n                                 |         queue_work(cmd_work)\nnci_unregister_device()          |\n  nci_close_device()             | ...\n    del_timer_sync(cmd_timer)[1] |\n...                              | Worker\nnci_free_device()                | nci_cmd_work()\n  kfree(ndev)[3]                 |   mod_timer(cmd_timer)[2]\n\nIn short, the cleanup routine thought that the cmd_timer has already\nbeen detached by [1] but the mod_timer can re-attach the timer [2], even\nit is already released [3], resulting in UAF.\n\nThis UAF is easy to trigger, crash trace by POC is like below\n\n[   66.703713] ==================================================================\n[   66.703974] BUG: KASAN: use-after-free in enqueue_timer+0x448\/0x490\n[   66.703974] Write of size 8 at addr ffff888009fb7058 by task kworker\/u4:1\/33\n[   66.703974]\n[   66.703974] CPU: 1 PID: 33 Comm: kworker\/u4:1 Not tainted 5.18.0-rc2 #5\n[   66.703974] Workqueue: nfc2_nci_cmd_wq nci_cmd_work\n[   66.703974] Call Trace:\n[   66.703974]  <TASK>\n[   66.703974]  dump_stack_lvl+0x57\/0x7d\n[   66.703974]  print_report.cold+0x5e\/0x5db\n[   66.703974]  ? enqueue_timer+0x448\/0x490\n[   66.703974]  kasan_report+0xbe\/0x1c0\n[   66.703974]  ? enqueue_timer+0x448\/0x490\n[   66.703974]  enqueue_timer+0x448\/0x490\n[   66.703974]  __mod_timer+0x5e6\/0xb80\n[   66.703974]  ? mark_held_locks+0x9e\/0xe0\n[   66.703974]  ? try_to_del_timer_sync+0xf0\/0xf0\n[   66.703974]  ? lockdep_hardirqs_on_prepare+0x17b\/0x410\n[   66.703974]  ? queue_work_on+0x61\/0x80\n[   66.703974]  ? lockdep_hardirqs_on+0xbf\/0x130\n[   66.703974]  process_one_work+0x8bb\/0x1510\n[   66.703974]  ? lockdep_hardirqs_on_prepare+0x410\/0x410\n[   66.703974]  ? pwq_dec_nr_in_flight+0x230\/0x230\n[   66.703974]  ? rwlock_bug.part.0+0x90\/0x90\n[   66.703974]  ? _raw_spin_lock_irq+0x41\/0x50\n[   66.703974]  worker_thread+0x575\/0x1190\n[   66.703974]  ? process_one_work+0x1510\/0x1510\n[   66.703974]  kthread+0x2a0\/0x340\n[   66.703974]  ? kthread_complete_and_exit+0x20\/0x20\n[   66.703974]  ret_from_fork+0x22\/0x30\n[   66.703974]  <\/TASK>\n[   66.703974]\n[   66.703974] Allocated by task 267:\n[   66.703974]  kasan_save_stack+0x1e\/0x40\n[   66.703974]  __kasan_kmalloc+0x81\/0xa0\n[   66.703974]  nci_allocate_device+0xd3\/0x390\n[   66.703974]  nfcmrvl_nci_register_dev+0x183\/0x2c0\n[   66.703974]  nfcmrvl_nci_uart_open+0xf2\/0x1dd\n[   66.703974]  nci_uart_tty_ioctl+0x2c3\/0x4a0\n[   66.703974]  tty_ioctl+0x764\/0x1310\n[   66.703974]  __x64_sys_ioctl+0x122\/0x190\n[   66.703974]  do_syscall_64+0x3b\/0x90\n[   66.703974]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[   66.703974]\n[   66.703974] Freed by task 406:\n[   66.703974]  kasan_save_stack+0x1e\/0x40\n[   66.703974]  kasan_set_track+0x21\/0x30\n[   66.703974]  kasan_set_free_info+0x20\/0x30\n[   66.703974]  __kasan_slab_free+0x108\/0x170\n[   66.703974]  kfree+0xb0\/0x330\n[   66.703974]  nfcmrvl_nci_unregister_dev+0x90\/0xd0\n[   66.703974]  nci_uart_tty_close+0xdf\/0x180\n[   66.703974]  tty_ldisc_kill+0x73\/0x110\n[   66.703974]  tty_ldisc_hangup+0x281\/0x5b0\n[   66.703974]  __tty_hangup.part.0+0x431\/0x890\n[   66.703974]  tty_release+0x3a8\/0xc80\n[   66.703974]  __fput+0x1f0\/0x8c0\n[   66.703974]  task_work_run+0xc9\/0x170\n[   66.703974]  exit_to_user_mode_prepare+0x194\/0x1a0\n[   66.703974]  syscall_exit_to_user_mode+0x19\/0x50\n[   66.703974]  do_syscall_64+0x48\/0x90\n[   66.703974]  entry_SYSCALL_64_after_hwframe+0x44\/0x\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a1748d0dd0f0a98535c6baeef671c8722107639","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c63ad2b0a267a524c12c88acb1ba9c2d109a801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67677050cecbe0edfdd81cd508415e9636ba7c65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d3232214ca4ea8f7d18df264c3b254aa8089d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d243aff5f7e6b04e907c617426bbdf26e996ac8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ded5ae40f4fe37fcc28f36d76bf45df20be5432","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edd4600120641e1714e30112e69a548cfb68e067","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef27324e2cb7bb24542d6cb2571740eefe6b00dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49060","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.257","lastModified":"2025-02-26T07:00:43.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: Fix NULL pointer dereference in smc_pnet_find_ib()\n\ndev_name() was called with dev.parent as argument but without to\nNULL-check it before.\nSolve this by checking the pointer before the call to dev_name()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22025513ced3d599ee8b24169141c95cf2467a4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35b91e49bc80ca944a8679c3b139ddaf2f8eea0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a523807f01455fe9a0c1a433f27cd4411ee400f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a05f5e26cb8bb4d07e0595545fcad1bb406f0085","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d22f4f977236f97e01255a80bca2ea93a8094fc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49061","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.353","lastModified":"2025-02-26T07:00:43.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: stmmac: fix altr_tse_pcs function when using a fixed-link\n\nWhen using a fixed-link, the altr_tse_pcs driver crashes\ndue to null-pointer dereference as no phy_device is provided to\ntse_pcs_fix_mac_speed function. Fix this by adding a check for\nphy_dev before calling the tse_pcs_fix_mac_speed() function.\n\nAlso clean up the tse_pcs_fix_mac_speed function a bit. There is\nno need to check for splitter_base and sgmii_adapter_base\nbecause the driver will fail if these 2 variables are not\nderived from the device tree."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d5e3e954537931c8da7428034808d202e98299","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62a48383ebe2e159fd68425dd3e16d4c6bd6599a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c020f05253df04c3480b586fe188a3582740049","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e59fdf9547c4f948d1d917ec7ffa5fb5ac53bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6aaa00324240967272b451bfa772547bd576ee6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49062","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.450","lastModified":"2025-02-26T07:00:43.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: Fix KASAN slab-out-of-bounds in cachefiles_set_volume_xattr\n\nUse the actual length of volume coherency data when setting the\nxattr to avoid the following KASAN report.\n\n BUG: KASAN: slab-out-of-bounds in cachefiles_set_volume_xattr+0xa0\/0x350 [cachefiles]\n Write of size 4 at addr ffff888101e02af4 by task kworker\/6:0\/1347\n\n CPU: 6 PID: 1347 Comm: kworker\/6:0 Kdump: loaded Not tainted 5.18.0-rc1-nfs-fscache-netfs+ #13\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-4.fc34 04\/01\/2014\n Workqueue: events fscache_create_volume_work [fscache]\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x45\/0x5a\n  print_report.cold+0x5e\/0x5db\n  ? __lock_text_start+0x8\/0x8\n  ? cachefiles_set_volume_xattr+0xa0\/0x350 [cachefiles]\n  kasan_report+0xab\/0x120\n  ? cachefiles_set_volume_xattr+0xa0\/0x350 [cachefiles]\n  kasan_check_range+0xf5\/0x1d0\n  memcpy+0x39\/0x60\n  cachefiles_set_volume_xattr+0xa0\/0x350 [cachefiles]\n  cachefiles_acquire_volume+0x2be\/0x500 [cachefiles]\n  ? __cachefiles_free_volume+0x90\/0x90 [cachefiles]\n  fscache_create_volume_work+0x68\/0x160 [fscache]\n  process_one_work+0x3b7\/0x6a0\n  worker_thread+0x2c4\/0x650\n  ? process_one_work+0x6a0\/0x6a0\n  kthread+0x16c\/0x1a0\n  ? kthread_complete_and_exit+0x20\/0x20\n  ret_from_fork+0x22\/0x30\n  <\/TASK>\n\n Allocated by task 1347:\n  kasan_save_stack+0x1e\/0x40\n  __kasan_kmalloc+0x81\/0xa0\n  cachefiles_set_volume_xattr+0x76\/0x350 [cachefiles]\n  cachefiles_acquire_volume+0x2be\/0x500 [cachefiles]\n  fscache_create_volume_work+0x68\/0x160 [fscache]\n  process_one_work+0x3b7\/0x6a0\n  worker_thread+0x2c4\/0x650\n  kthread+0x16c\/0x1a0\n  ret_from_fork+0x22\/0x30\n\n The buggy address belongs to the object at ffff888101e02af0\n which belongs to the cache kmalloc-8 of size 8\n The buggy address is located 4 bytes inside of\n 8-byte region [ffff888101e02af0, ffff888101e02af8)\n\n The buggy address belongs to the physical page:\n page:00000000a2292d70 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x101e02\n flags: 0x17ffffc0000200(slab|node=0|zone=2|lastcpupid=0x1fffff)\n raw: 0017ffffc0000200 0000000000000000 dead000000000001 ffff888100042280\n raw: 0000000000000000 0000000080660066 00000001ffffffff 0000000000000000\n page dumped because: kasan: bad access detected\n\n Memory state around the buggy address:\n ffff888101e02980: fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc\n ffff888101e02a00: 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc 00\n >ffff888101e02a80: fc fc fc fc 00 fc fc fc fc 00 fc fc fc fc 04 fc\n                                                            ^\n ffff888101e02b00: fc fc fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc\n ffff888101e02b80: fc fc 00 fc fc fc fc 00 fc fc fc fc 00 fc fc fc\n =================================================================="}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09a5df1b88c8f126c8ff9938edf160edd4e92f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b2f6c306601240635c72caa61f682e74d4591b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49063","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.547","lastModified":"2025-02-26T07:00:43.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: arfs: fix use-after-free when freeing @rx_cpu_rmap\n\nThe CI testing bots triggered the following splat:\n\n[  718.203054] BUG: KASAN: use-after-free in free_irq_cpu_rmap+0x53\/0x80\n[  718.206349] Read of size 4 at addr ffff8881bd127e00 by task sh\/20834\n[  718.212852] CPU: 28 PID: 20834 Comm: sh Kdump: loaded Tainted: G S      W IOE     5.17.0-rc8_nextqueue-devqueue-02643-g23f3121aca93 #1\n[  718.219695] Hardware name: Intel Corporation S2600WFT\/S2600WFT, BIOS SE5C620.86B.02.01.0012.070720200218 07\/07\/2020\n[  718.223418] Call Trace:\n[  718.227139]\n[  718.230783]  dump_stack_lvl+0x33\/0x42\n[  718.234431]  print_address_description.constprop.9+0x21\/0x170\n[  718.238177]  ? free_irq_cpu_rmap+0x53\/0x80\n[  718.241885]  ? free_irq_cpu_rmap+0x53\/0x80\n[  718.245539]  kasan_report.cold.18+0x7f\/0x11b\n[  718.249197]  ? free_irq_cpu_rmap+0x53\/0x80\n[  718.252852]  free_irq_cpu_rmap+0x53\/0x80\n[  718.256471]  ice_free_cpu_rx_rmap.part.11+0x37\/0x50 [ice]\n[  718.260174]  ice_remove_arfs+0x5f\/0x70 [ice]\n[  718.263810]  ice_rebuild_arfs+0x3b\/0x70 [ice]\n[  718.267419]  ice_rebuild+0x39c\/0xb60 [ice]\n[  718.270974]  ? asm_sysvec_apic_timer_interrupt+0x12\/0x20\n[  718.274472]  ? ice_init_phy_user_cfg+0x360\/0x360 [ice]\n[  718.278033]  ? delay_tsc+0x4a\/0xb0\n[  718.281513]  ? preempt_count_sub+0x14\/0xc0\n[  718.284984]  ? delay_tsc+0x8f\/0xb0\n[  718.288463]  ice_do_reset+0x92\/0xf0 [ice]\n[  718.292014]  ice_pci_err_resume+0x91\/0xf0 [ice]\n[  718.295561]  pci_reset_function+0x53\/0x80\n<...>\n[  718.393035] Allocated by task 690:\n[  718.433497] Freed by task 20834:\n[  718.495688] Last potentially related work creation:\n[  718.568966] The buggy address belongs to the object at ffff8881bd127e00\n                which belongs to the cache kmalloc-96 of size 96\n[  718.574085] The buggy address is located 0 bytes inside of\n                96-byte region [ffff8881bd127e00, ffff8881bd127e60)\n[  718.579265] The buggy address belongs to the page:\n[  718.598905] Memory state around the buggy address:\n[  718.601809]  ffff8881bd127d00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n[  718.604796]  ffff8881bd127d80: 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc\n[  718.607794] >ffff8881bd127e00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n[  718.610811]                    ^\n[  718.613819]  ffff8881bd127e80: 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc\n[  718.617107]  ffff8881bd127f00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc\n\nThis is due to that free_irq_cpu_rmap() is always being called\n*after* (devm_)free_irq() and thus it tries to work with IRQ descs\nalready freed. For example, on device reset the driver frees the\nrmap right before allocating a new one (the splat above).\nMake rmap creation and freeing function symmetrical with\n{request,free}_irq() calls i.e. do that on ifup\/ifdown instead\nof device probe\/remove\/resume. These operations can be performed\nindependently from the actual device aRFS configuration.\nAlso, make sure ice_vsi_free_irq() clears IRQ affinity notifiers\nonly when aRFS is disabled -- otherwise, CPU rmap sets and clears\nits own and they must not be touched manually."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d08d2fb6d99d82da1c63aba5c0d1c6f237e150f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7442f512b71fc63a99c8a801422dde4fbbf9f93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49064","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.637","lastModified":"2025-02-26T07:00:43.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncachefiles: unmark inode in use in error path\n\nUnmark inode in use if error encountered. If the in-use flag leakage\noccurs in cachefiles_open_file(), Cachefiles will complain \"Inode\nalready in use\" when later another cookie with the same index key is\nlooked up.\n\nIf the in-use flag leakage occurs in cachefiles_create_tmpfile(), though\nthe \"Inode already in use\" warning won't be triggered, fix the leakage\nanyway."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b2055abafd3d4ee0376fb3eed5cae866316995a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea5dc046127e857a7873ae55fd57c866e9e86fb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49065","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.723","lastModified":"2025-02-26T07:00:43.723","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix the svc_deferred_event trace class\n\nFix a NULL deref crash that occurs when an svc_rqst is deferred\nwhile the sunrpc tracing subsystem is enabled. svc_revisit() sets\ndr->xprt to NULL, so it can't be relied upon in the tracepoint to\nprovide the remote's address.\n\nUnfortunately we can't revert the \"svc_deferred_class\" hunk in\ncommit ece200ddd54b (\"sunrpc: Save remote presentation address in\nsvc_xprt for trace events\") because there is now a specific check\nof event format specifiers for unsafe dereferences. The warning\nthat check emits is:\n\n  event svc_defer_recv has unsafe dereference of argument 1\n\nA \"%pISpc\" format specifier with a \"struct sockaddr *\" is indeed\nflagged by this check.\n\nInstead, take the brute-force approach used by the svcrdma_qp_error\ntracepoint. Convert the dr::addr field into a presentation address\nin the TP_fast_assign() arm of the trace event, and store that as\na string. This fix can be backported to -stable kernels.\n\nIn the meantime, commit c6ced22997ad (\"tracing: Update print fmt\ncheck to handle new __get_sockaddr() macro\") is now in v5.18, so\nthis wonky fix can be replaced with __sockaddr() and friends\nproperly during the v5.19 merge window."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d5004451ab2218eab94a30e1841462c9316ba19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/726ae7300fcc25fefa46d188cc07eb16dc908f9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85ee17ca21cf92989e8c923e3ea4514c291e9d38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2456f470eea3bd06574d988bf6089e7c3f4c5cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49066","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.820","lastModified":"2025-02-26T07:00:43.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nveth: Ensure eth header is in skb's linear part\n\nAfter feeding a decapsulated packet to a veth device with act_mirred,\nskb_headlen() may be 0. But veth_xmit() calls __dev_forward_skb(),\nwhich expects at least ETH_HLEN byte of linear data (as\n__dev_forward_skb2() calls eth_type_trans(), which pulls ETH_HLEN bytes\nunconditionally).\n\nUse pskb_may_pull() to ensure veth_xmit() respects this constraint.\n\nkernel BUG at include\/linux\/skbuff.h:2328!\nRIP: 0010:eth_type_trans+0xcf\/0x140\nCall Trace:\n <IRQ>\n __dev_forward_skb2+0xe3\/0x160\n veth_xmit+0x6e\/0x250 [veth]\n dev_hard_start_xmit+0xc7\/0x200\n __dev_queue_xmit+0x47f\/0x520\n ? skb_ensure_writable+0x85\/0xa0\n ? skb_mpls_pop+0x98\/0x1c0\n tcf_mirred_act+0x442\/0x47e [act_mirred]\n tcf_action_exec+0x86\/0x140\n fl_classify+0x1d8\/0x1e0 [cls_flower]\n ? dma_pte_clear_level+0x129\/0x1a0\n ? dma_pte_clear_level+0x129\/0x1a0\n ? prb_fill_curr_block+0x2f\/0xc0\n ? skb_copy_bits+0x11a\/0x220\n __tcf_classify+0x58\/0x110\n tcf_classify_ingress+0x6b\/0x140\n __netif_receive_skb_core.constprop.0+0x47d\/0xfd0\n ? __iommu_dma_unmap_swiotlb+0x44\/0x90\n __netif_receive_skb_one_core+0x3d\/0xa0\n netif_receive_skb+0x116\/0x170\n be_process_rx+0x22f\/0x330 [be2net]\n be_poll+0x13c\/0x370 [be2net]\n __napi_poll+0x2a\/0x170\n net_rx_action+0x22f\/0x2f0\n __do_softirq+0xca\/0x2a8\n __irq_exit_rcu+0xc1\/0xe0\n common_interrupt+0x83\/0xa0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ef0088e43af1de4e3b365218c4d3179d9a37eec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fd90b86dff413fbf8128780c04ea9c6849c16e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3de2a02b60a4ef0ab76263216f08c7d095fc7c42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46bc359fec0c6d87b70d7a008bcd9a5e30dd6f27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/726e2c5929de841fdcef4e2bf995680688ae1b87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93940fc4cb81840dc0fa202de48cccb949a0261d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d417a859221f127e8edf09c14b76ab50f825e171","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d67c900f1947d64ba8a64f693504bcaab8d9000c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49067","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:43.927","lastModified":"2025-02-26T07:00:43.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc: Fix virt_addr_valid() for 64-bit Book3E & 32-bit\n\nmpe: On 64-bit Book3E vmalloc space starts at 0x8000000000000000.\n\nBecause of the way __pa() works we have:\n  __pa(0x8000000000000000) == 0, and therefore\n  virt_to_pfn(0x8000000000000000) == 0, and therefore\n  virt_addr_valid(0x8000000000000000) == true\n\nWhich is wrong, virt_addr_valid() should be false for vmalloc space.\nIn fact all vmalloc addresses that alias with a valid PFN will return\ntrue from virt_addr_valid(). That can cause bugs with hardened usercopy\nas described below by Kefeng Wang:\n\n  When running ethtool eth0 on 64-bit Book3E, a BUG occurred:\n\n    usercopy: Kernel memory exposure attempt detected from SLUB object not in SLUB page?! (offset 0, size 1048)!\n    kernel BUG at mm\/usercopy.c:99\n    ...\n    usercopy_abort+0x64\/0xa0 (unreliable)\n    __check_heap_object+0x168\/0x190\n    __check_object_size+0x1a0\/0x200\n    dev_ethtool+0x2494\/0x2b20\n    dev_ioctl+0x5d0\/0x770\n    sock_do_ioctl+0xf0\/0x1d0\n    sock_ioctl+0x3ec\/0x5a0\n    __se_sys_ioctl+0xf0\/0x160\n    system_call_exception+0xfc\/0x1f0\n    system_call_common+0xf8\/0x200\n\n  The code shows below,\n\n    data = vzalloc(array_size(gstrings.len, ETH_GSTRING_LEN));\n    copy_to_user(useraddr, data, gstrings.len * ETH_GSTRING_LEN))\n\n  The data is alloced by vmalloc(), virt_addr_valid(ptr) will return true\n  on 64-bit Book3E, which leads to the panic.\n\n  As commit 4dd7554a6456 (\"powerpc\/64: Add VIRTUAL_BUG_ON checks for __va\n  and __pa addresses\") does, make sure the virt addr above PAGE_OFFSET in\n  the virt_addr_valid() for 64-bit, also add upper limit check to make\n  sure the virt is below high_memory.\n\n  Meanwhile, for 32-bit PAGE_OFFSET is the virtual address of the start\n  of lowmem, high_memory is the upper low virtual address, the check is\n  suitable for 32-bit, this will fix the issue mentioned in commit\n  602946ec2f90 (\"powerpc: Set max_mapnr correctly\") too.\n\nOn 32-bit there is a similar problem with high memory, that was fixed in\ncommit 602946ec2f90 (\"powerpc: Set max_mapnr correctly\"), but that\ncommit breaks highmem and needs to be reverted.\n\nWe can't easily fix __pa(), we have code that relies on its current\nbehaviour. So for now add extra checks to virt_addr_valid().\n\nFor 64-bit Book3S the extra checks are not necessary, the combination of\nvirt_to_pfn() and pfn_valid() should yield the correct result, but they\nare harmless.\n\n[mpe: Add additional change log detail]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a3727c25eacd7e437c4f560957fa3a376fe93e6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbc065efcba000ad8f615f506ebe61b6d3c5145b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d36febbcd537fcc50284e8b89609632d0146529f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/deab81144d5a043f42804207fb76cfbd8a806978","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fddb88bd266f4513abab7c36bca98935c9148a98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffa0b64e3be58519ae472ea29a1a1ad681e32f48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49068","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.027","lastModified":"2025-02-26T07:00:44.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: release correct delalloc amount in direct IO write path\n\nRunning generic\/406 causes the following WARNING in btrfs_destroy_inode()\nwhich tells there are outstanding extents left.\n\nIn btrfs_get_blocks_direct_write(), we reserve a temporary outstanding\nextents with btrfs_delalloc_reserve_metadata() (or indirectly from\nbtrfs_delalloc_reserve_space(()). We then release the outstanding extents\nwith btrfs_delalloc_release_extents(). However, the \"len\" can be modified\nin the COW case, which releases fewer outstanding extents than expected.\n\nFix it by calling btrfs_delalloc_release_extents() for the original length.\n\nTo reproduce the warning, the filesystem should be 1 GiB.  It's\ntriggering a short-write, due to not being able to allocate a large\nextent and instead allocating a smaller one.\n\n  WARNING: CPU: 0 PID: 757 at fs\/btrfs\/inode.c:8848 btrfs_destroy_inode+0x1e6\/0x210 [btrfs]\n  Modules linked in: btrfs blake2b_generic xor lzo_compress\n  lzo_decompress raid6_pq zstd zstd_decompress zstd_compress xxhash zram\n  zsmalloc\n  CPU: 0 PID: 757 Comm: umount Not tainted 5.17.0-rc8+ #101\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS d55cb5a 04\/01\/2014\n  RIP: 0010:btrfs_destroy_inode+0x1e6\/0x210 [btrfs]\n  RSP: 0018:ffffc9000327bda8 EFLAGS: 00010206\n  RAX: 0000000000000000 RBX: ffff888100548b78 RCX: 0000000000000000\n  RDX: 0000000000026900 RSI: 0000000000000000 RDI: ffff888100548b78\n  RBP: ffff888100548940 R08: 0000000000000000 R09: ffff88810b48aba8\n  R10: 0000000000000001 R11: ffff8881004eb240 R12: ffff88810b48a800\n  R13: ffff88810b48ec08 R14: ffff88810b48ed00 R15: ffff888100490c68\n  FS:  00007f8549ea0b80(0000) GS:ffff888237c00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f854a09e733 CR3: 000000010a2e9003 CR4: 0000000000370eb0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   <TASK>\n   destroy_inode+0x33\/0x70\n   dispose_list+0x43\/0x60\n   evict_inodes+0x161\/0x1b0\n   generic_shutdown_super+0x2d\/0x110\n   kill_anon_super+0xf\/0x20\n   btrfs_kill_super+0xd\/0x20 [btrfs]\n   deactivate_locked_super+0x27\/0x90\n   cleanup_mnt+0x12c\/0x180\n   task_work_run+0x54\/0x80\n   exit_to_user_mode_prepare+0x152\/0x160\n   syscall_exit_to_user_mode+0x12\/0x30\n   do_syscall_64+0x42\/0x80\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n   RIP: 0033:0x7f854a000fb7"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07cacfd9d9dc134557ac8866c73d570a59b3d1f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d82ad13c4110e73c7b0392f00534a1502a1b520","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a04d37ddfe4be431b9e52e8504490376ab0a39a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49069","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.120","lastModified":"2025-02-26T07:00:44.120","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix by adding FPU protection for dcn30_internal_validate_bw\n\n[Why]\nBelow general protection fault observed when WebGL Aquarium is run for\nlonger duration. If drm debug logs are enabled and set to 0x1f then the\nissue is observed within 10 minutes of run.\n\n[  100.717056] general protection fault, probably for non-canonical address 0x2d33302d32323032: 0000 [#1] PREEMPT SMP NOPTI\n[  100.727921] CPU: 3 PID: 1906 Comm: DrmThread Tainted: G        W         5.15.30 #12 d726c6a2d6ebe5cf9223931cbca6892f916fe18b\n[  100.754419] RIP: 0010:CalculateSwathWidth+0x1f7\/0x44f\n[  100.767109] Code: 00 00 00 f2 42 0f 11 04 f0 48 8b 85 88 00 00 00 f2 42 0f 10 04 f0 48 8b 85 98 00 00 00 f2 42 0f 11 04 f0 48 8b 45 10 0f 57 c0 <f3> 42 0f 2a 04 b0 0f 57 c9 f3 43 0f 2a 0c b4 e8 8c e2 f3 ff 48 8b\n[  100.781269] RSP: 0018:ffffa9230079eeb0 EFLAGS: 00010246\n[  100.812528] RAX: 2d33302d32323032 RBX: 0000000000000500 RCX: 0000000000000000\n[  100.819656] RDX: 0000000000000001 RSI: ffff99deb712c49c RDI: 0000000000000000\n[  100.826781] RBP: ffffa9230079ef50 R08: ffff99deb712460c R09: ffff99deb712462c\n[  100.833907] R10: ffff99deb7124940 R11: ffff99deb7124d70 R12: ffff99deb712ae44\n[  100.841033] R13: 0000000000000001 R14: 0000000000000000 R15: ffffa9230079f0a0\n[  100.848159] FS:  00007af121212640(0000) GS:ffff99deba780000(0000) knlGS:0000000000000000\n[  100.856240] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  100.861980] CR2: 0000209000fe1000 CR3: 000000011b18c000 CR4: 0000000000350ee0\n[  100.869106] Call Trace:\n[  100.871555]  <TASK>\n[  100.873655]  ? asm_sysvec_reschedule_ipi+0x12\/0x20\n[  100.878449]  CalculateSwathAndDETConfiguration+0x1a3\/0x6dd\n[  100.883937]  dml31_ModeSupportAndSystemConfigurationFull+0x2ce4\/0x76da\n[  100.890467]  ? kallsyms_lookup_buildid+0xc8\/0x163\n[  100.895173]  ? kallsyms_lookup_buildid+0xc8\/0x163\n[  100.899874]  ? __sprint_symbol+0x80\/0x135\n[  100.903883]  ? dm_update_plane_state+0x3f9\/0x4d2\n[  100.908500]  ? symbol_string+0xb7\/0xde\n[  100.912250]  ? number+0x145\/0x29b\n[  100.915566]  ? vsnprintf+0x341\/0x5ff\n[  100.919141]  ? desc_read_finalized_seq+0x39\/0x87\n[  100.923755]  ? update_load_avg+0x1b9\/0x607\n[  100.927849]  ? compute_mst_dsc_configs_for_state+0x7d\/0xd5b\n[  100.933416]  ? fetch_pipe_params+0xa4d\/0xd0c\n[  100.937686]  ? dc_fpu_end+0x3d\/0xa8\n[  100.941175]  dml_get_voltage_level+0x16b\/0x180\n[  100.945619]  dcn30_internal_validate_bw+0x10e\/0x89b\n[  100.950495]  ? dcn31_validate_bandwidth+0x68\/0x1fc\n[  100.955285]  ? resource_build_scaling_params+0x98b\/0xb8c\n[  100.960595]  ? dcn31_validate_bandwidth+0x68\/0x1fc\n[  100.965384]  dcn31_validate_bandwidth+0x9a\/0x1fc\n[  100.970001]  dc_validate_global_state+0x238\/0x295\n[  100.974703]  amdgpu_dm_atomic_check+0x9c1\/0xbce\n[  100.979235]  ? _printk+0x59\/0x73\n[  100.982467]  drm_atomic_check_only+0x403\/0x78b\n[  100.986912]  drm_mode_atomic_ioctl+0x49b\/0x546\n[  100.991358]  ? drm_ioctl+0x1c1\/0x3b3\n[  100.994936]  ? drm_atomic_set_property+0x92a\/0x92a\n[  100.999725]  drm_ioctl_kernel+0xdc\/0x149\n[  101.003648]  drm_ioctl+0x27f\/0x3b3\n[  101.007051]  ? drm_atomic_set_property+0x92a\/0x92a\n[  101.011842]  amdgpu_drm_ioctl+0x49\/0x7d\n[  101.015679]  __se_sys_ioctl+0x7c\/0xb8\n[  101.015685]  do_syscall_64+0x5f\/0xb8\n[  101.015690]  ? __irq_exit_rcu+0x34\/0x96\n\n[How]\nIt calles populate_dml_pipes which uses doubles to initialize.\nAdding FPU protection avoids context switch and probable loss of vba context\nas there is potential contention while drm debug logs are enabled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/76f4c5e5f99ee7084b555d9a38e8ffeb16ec65a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca1198849ab0e7af5efb392ef6baf1138f6fc086","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e995c5d52ec7415644eee617fc7e906b51aec7ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49070","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.217","lastModified":"2025-02-26T07:00:44.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: Fix unregistering of framebuffers without device\n\nOF framebuffers do not have an underlying device in the Linux\ndevice hierarchy. Do a regular unregister call instead of hot\nunplugging such a non-existing device. Fixes a NULL dereference.\nAn example error message on ppc64le is shown below.\n\n  BUG: Kernel NULL pointer dereference on read at 0x00000060\n  Faulting instruction address: 0xc00000000080dfa4\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\n  [...]\n  CPU: 2 PID: 139 Comm: systemd-udevd Not tainted 5.17.0-ae085d7f9365 #1\n  NIP:  c00000000080dfa4 LR: c00000000080df9c CTR: c000000000797430\n  REGS: c000000004132fe0 TRAP: 0300   Not tainted  (5.17.0-ae085d7f9365)\n  MSR:  8000000002009033 <SF,VEC,EE,ME,IR,DR,RI,LE>  CR: 28228282  XER: 20000000\n  CFAR: c00000000000c80c DAR: 0000000000000060 DSISR: 40000000 IRQMASK: 0\n  GPR00: c00000000080df9c c000000004133280 c00000000169d200 0000000000000029\n  GPR04: 00000000ffffefff c000000004132f90 c000000004132f88 0000000000000000\n  GPR08: c0000000015658f8 c0000000015cd200 c0000000014f57d0 0000000048228283\n  GPR12: 0000000000000000 c00000003fffe300 0000000020000000 0000000000000000\n  GPR16: 0000000000000000 0000000113fc4a40 0000000000000005 0000000113fcfb80\n  GPR20: 000001000f7283b0 0000000000000000 c000000000e4a588 c000000000e4a5b0\n  GPR24: 0000000000000001 00000000000a0000 c008000000db0168 c0000000021f6ec0\n  GPR28: c0000000016d65a8 c000000004b36460 0000000000000000 c0000000016d64b0\n  NIP [c00000000080dfa4] do_remove_conflicting_framebuffers+0x184\/0x1d0\n  [c000000004133280] [c00000000080df9c] do_remove_conflicting_framebuffers+0x17c\/0x1d0 (unreliable)\n  [c000000004133350] [c00000000080e4d0] remove_conflicting_framebuffers+0x60\/0x150\n  [c0000000041333a0] [c00000000080e6f4] remove_conflicting_pci_framebuffers+0x134\/0x1b0\n  [c000000004133450] [c008000000e70438] drm_aperture_remove_conflicting_pci_framebuffers+0x90\/0x100 [drm]\n  [c000000004133490] [c008000000da0ce4] bochs_pci_probe+0x6c\/0xa64 [bochs]\n  [...]\n  [c000000004133db0] [c00000000002aaa0] system_call_exception+0x170\/0x2d0\n  [c000000004133e10] [c00000000000c3cc] system_call_common+0xec\/0x250\n\nThe bug [1] was introduced by commit 27599aacbaef (\"fbdev: Hot-unplug\nfirmware fb devices on forced removal\"). Most firmware framebuffers\nhave an underlying platform device, which can be hot-unplugged\nbefore loading the native graphics driver. OF framebuffers do not\n(yet) have that device. Fix the code by unregistering the framebuffer\nas before without a hot unplug.\n\nTested with 5.17 on qemu ppc64le emulation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f525289ff0ddeb380813bd81e0f9bdaaa1c9078","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2388f826cdc9af2651991adc0feb79de9bdf2232","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de33df481545974ba47c46f05194e769e4307843","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/feed87ff122b1640c221d4dd559442ab2cd50bb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49071","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.323","lastModified":"2025-02-26T07:00:44.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panel: ili9341: fix optional regulator handling\n\nIf the optional regulator lookup fails, reset the pointer to NULL.\nOther functions such as mipi_dbi_poweron_reset_conditional() only do\na NULL pointer check and will otherwise dereference the error pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28dc1503a9d36654f9c61adb2915682515a30f71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ea189854b1e625ed5ec80d30147870f984db44c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d14eb80e27795b7b20060f7b151cdfe39722a813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3d982c111a6c033671dd6084b07f62fbf50f76f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49072","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.423","lastModified":"2025-02-26T07:00:44.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: Restrict usage of GPIO chip irq members before initialization\n\nGPIO chip irq members are exposed before they could be completely\ninitialized and this leads to race conditions.\n\nOne such issue was observed for the gc->irq.domain variable which\nwas accessed through the I2C interface in gpiochip_to_irq() before\nit could be initialized by gpiochip_add_irqchip(). This resulted in\nKernel NULL pointer dereference.\n\nFollowing are the logs for reference :-\n\nkernel: Call Trace:\nkernel:  gpiod_to_irq+0x53\/0x70\nkernel:  acpi_dev_gpio_irq_get_by+0x113\/0x1f0\nkernel:  i2c_acpi_get_irq+0xc0\/0xd0\nkernel:  i2c_device_probe+0x28a\/0x2a0\nkernel:  really_probe+0xf2\/0x460\nkernel: RIP: 0010:gpiochip_to_irq+0x47\/0xc0\n\nTo avoid such scenarios, restrict usage of GPIO chip irq members before\nthey are completely initialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0912cf021fb5749372b3782611d8b1de4986c13a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c1fa3614795e2b24da1ba95de0b27b8f6ea4537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5467801f1fcbdc46bc7298a84dbf3ca1ff2a7320","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e88a50704b0c49ad3f2d11e8b963341cf68a89f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8dea54f74cae8c2e4d7b2952e8fed7743a85c87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49073","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.647","lastModified":"2025-02-26T07:00:44.647","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: sata_dwc_460ex: Fix crash due to OOB write\n\nthe driver uses libata's \"tag\" values from in various arrays.\nSince the mentioned patch bumped the ATA_TAG_INTERNAL to 32,\nthe value of the SATA_DWC_QCMD_MAX needs to account for that.\n\nOtherwise ATA_TAG_INTERNAL usage cause similar crashes like\nthis as reported by Tice Rex on the OpenWrt Forum and\nreproduced (with symbols) here:\n\n| BUG: Kernel NULL pointer dereference at 0x00000000\n| Faulting instruction address: 0xc03ed4b8\n| Oops: Kernel access of bad area, sig: 11 [#1]\n| BE PAGE_SIZE=4K PowerPC 44x Platform\n| CPU: 0 PID: 362 Comm: scsi_eh_1 Not tainted 5.4.163 #0\n| NIP:  c03ed4b8 LR: c03d27e8 CTR: c03ed36c\n| REGS: cfa59950 TRAP: 0300   Not tainted  (5.4.163)\n| MSR:  00021000 <CE,ME>  CR: 42000222  XER: 00000000\n| DEAR: 00000000 ESR: 00000000\n| GPR00: c03d27e8 cfa59a08 cfa55fe0 00000000 0fa46bc0 [...]\n| [..]\n| NIP [c03ed4b8] sata_dwc_qc_issue+0x14c\/0x254\n| LR [c03d27e8] ata_qc_issue+0x1c8\/0x2dc\n| Call Trace:\n| [cfa59a08] [c003f4e0] __cancel_work_timer+0x124\/0x194 (unreliable)\n| [cfa59a78] [c03d27e8] ata_qc_issue+0x1c8\/0x2dc\n| [cfa59a98] [c03d2b3c] ata_exec_internal_sg+0x240\/0x524\n| [cfa59b08] [c03d2e98] ata_exec_internal+0x78\/0xe0\n| [cfa59b58] [c03d30fc] ata_read_log_page.part.38+0x1dc\/0x204\n| [cfa59bc8] [c03d324c] ata_identify_page_supported+0x68\/0x130\n| [...]\n\nThis is because sata_dwc_dma_xfer_complete() NULLs the\ndma_pending's next neighbour \"chan\" (a *dma_chan struct) in\nthis '32' case right here (line ~735):\n> hsdevp->dma_pending[tag] = SATA_DWC_DMA_PENDING_NONE;\n\nThen the next time, a dma gets issued; dma_dwc_xfer_setup() passes\nthe NULL'd hsdevp->chan to the dmaengine_slave_config() which then\ncauses the crash.\n\nWith this patch, SATA_DWC_QCMD_MAX is now set to ATA_MAX_QUEUE + 1.\nThis avoids the OOB. But please note, there was a worthwhile discussion\non what ATA_TAG_INTERNAL and ATA_MAX_QUEUE is. And why there should not\nbe a \"fake\" 33 command-long queue size.\n\nIdeally, the dw driver should account for the ATA_TAG_INTERNAL.\nIn Damien Le Moal's words: \"... having looked at the driver, it\nis a bigger change than just faking a 33rd \"tag\" that is in fact\nnot a command tag at all.\"\n\nBugLink: https:\/\/github.com\/openwrt\/openwrt\/issues\/9505"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/234c0132f76f0676d175757f61b0025191a3d935","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a8751c0d4e24129e72dcec0139e99833b13904a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55e1465ba79562a191708a40eeae3f8082a209e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/596c7efd69aae94f4b0e91172b075eb197958b99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7aa8104a554713b685db729e66511b93d989dd6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a05a6952ecd59aaa62cbdcdaf523ae2c8f436e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc629224aa62f23849cae83717932985ac51232d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49074","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.750","lastModified":"2025-02-26T07:00:44.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/gic-v3: Fix GICR_CTLR.RWP polling\n\nIt turns out that our polling of RWP is totally wrong when checking\nfor it in the redistributors, as we test the *distributor* bit index,\nwhereas it is a different bit number in the RDs... Oopsie boo.\n\nThis is embarassing. Not only because it is wrong, but also because\nit took *8 years* to notice the blunder...\n\nJust fix the damn thing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0df6664531a12cdd8fc873f0cac0dcb40243d3e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c07cc242baf83f0bddbbd9d7945d0bee56d8b57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60e1eb4811f53f5f60c788297d978515e7a2637a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fef3e3179e6ed8fecdd004ede541674ffa7749d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7218a789abb3e033f5f3a85636ca50d9ae7b0fc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7daf1b4ad809692d5c26f33c02ed8a031066548","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff24114bb08d8b90edf2aff0a4fd0689523e6c17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49075","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.847","lastModified":"2025-02-26T07:00:44.847","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix qgroup reserve overflow the qgroup limit\n\nWe use extent_changeset->bytes_changed in qgroup_reserve_data() to record\nhow many bytes we set for EXTENT_QGROUP_RESERVED state. Currently the\nbytes_changed is set as \"unsigned int\", and it will overflow if we try to\nfallocate a range larger than 4GiB. The result is we reserve less bytes\nand eventually break the qgroup limit.\n\nUnlike regular buffered\/direct write, which we use one changeset for\neach ordered extent, which can never be larger than 256M.  For\nfallocate, we use one changeset for the whole range, thus it no longer\nrespects the 256M per extent limit, and caused the problem.\n\nThe following example test script reproduces the problem:\n\n  $ cat qgroup-overflow.sh\n  #!\/bin\/bash\n\n  DEV=\/dev\/sdj\n  MNT=\/mnt\/sdj\n\n  mkfs.btrfs -f $DEV\n  mount $DEV $MNT\n\n  # Set qgroup limit to 2GiB.\n  btrfs quota enable $MNT\n  btrfs qgroup limit 2G $MNT\n\n  # Try to fallocate a 3GiB file. This should fail.\n  echo\n  echo \"Try to fallocate a 3GiB file...\"\n  fallocate -l 3G $MNT\/3G.file\n\n  # Try to fallocate a 5GiB file.\n  echo\n  echo \"Try to fallocate a 5GiB file...\"\n  fallocate -l 5G $MNT\/5G.file\n\n  # See we break the qgroup limit.\n  echo\n  sync\n  btrfs qgroup show -r $MNT\n\n  umount $MNT\n\nWhen running the test:\n\n  $ .\/qgroup-overflow.sh\n  (...)\n\n  Try to fallocate a 3GiB file...\n  fallocate: fallocate failed: Disk quota exceeded\n\n  Try to fallocate a 5GiB file...\n\n  qgroupid         rfer         excl     max_rfer\n  --------         ----         ----     --------\n  0\/5           5.00GiB      5.00GiB      2.00GiB\n\nSince we have no control of how bytes_changed is used, it's better to\nset it to u64."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0355387ea5b02d353c9415613fab908fac5c52a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44277c50fdba5019ca25bfad1b71e2561b0de11b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b98799e181b4326a613108cf37acc1f55d21b45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bfff81286d4491f02dad7814bae5c77c9ad2320","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7941b74ed49b6db25efbef2256ebef843c11a010","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82ae73ac963cee877ce34f7c31b2b456b516e96c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b642b52d0b50f4d398cb4293f64992d0eed2e2ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3d97b22a708bf9e3f3ac2ba232bcefd0b0c136b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49076","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:44.943","lastModified":"2025-02-26T07:00:44.943","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hfi1: Fix use-after-free bug for mm struct\n\nUnder certain conditions, such as MPI_Abort, the hfi1 cleanup code may\nrepresent the last reference held on the task mm.\nhfi1_mmu_rb_unregister() then drops the last reference and the mm is freed\nbefore the final use in hfi1_release_user_pages().  A new task may\nallocate the mm structure while it is still being used, resulting in\nproblems. One manifestation is corruption of the mmap_sem counter leading\nto a hang in down_write().  Another is corruption of an mm struct that is\nin use by another task."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b7186d657ee55e2cdefae498f07d5c1961e8023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bbac98d0930e8161b1957dc0ec99de39ade1b3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a9a1b24ddb510715f8f621263938186579a965c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f54364ff6cfcd14cddf5441c4a490bb28dd69f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ca11bd8222a612de0d2f54d050bfcf61ae2883f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49077","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.043","lastModified":"2025-02-26T07:00:45.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmmremap.c: avoid pointless invalidate_range_start\/end on mremap(old_size=0)\n\nIf an mremap() syscall with old_size=0 ends up in move_page_tables(), it\nwill call invalidate_range_start()\/invalidate_range_end() unnecessarily,\ni.e.  with an empty range.\n\nThis causes a WARN in KVM's mmu_notifier.  In the past, empty ranges\nhave been diagnosed to be off-by-one bugs, hence the WARNing.  Given the\nlow (so far) number of unique reports, the benefits of detecting more\nbuggy callers seem to outweigh the cost of having to fix cases such as\nthis one, where userspace is doing something silly.  In this particular\ncase, an early return from move_page_tables() is enough to fix the\nissue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01e67e04c28170c47700c2c226d732bbfedb1ad0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/04bc13dae4a27b8d030843c85ae452bb2f1d9c1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2358aa84ef6dafcf544a557caaa6b91afb4a0bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d659cb1763ff17d1c6ee082fa6feb4267c7a30b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a04cb99c5d4668fe3f5c0e5b6da1cecd34c3f219","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a05540f3903bd8295e8c4cd90dd3d416239a115b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c19d8de4e682ec4b0ea2b04a832cd8cc0be3bb31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2c328c2a8f9de8b761bd4025b66c63120c55761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeaf28e2a0128147d687237e59d5407ee1b14693","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49078","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.153","lastModified":"2025-02-26T07:00:45.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlz4: fix LZ4_decompress_safe_partial read out of bound\n\nWhen partialDecoding, it is EOF if we've either filled the output buffer\nor can't proceed with reading an offset for following match.\n\nIn some extreme corner cases when compressed data is suitably corrupted,\nUAF will occur.  As reported by KASAN [1], LZ4_decompress_safe_partial\nmay lead to read out of bound problem during decoding.  lz4 upstream has\nfixed it [2] and this issue has been disscussed here [3] before.\n\ncurrent decompression routine was ported from lz4 v1.8.3, bumping\nlib\/lz4 to v1.9.+ is certainly a huge work to be done later, so, we'd\nbetter fix it first.\n\n[1] https:\/\/lore.kernel.org\/all\/000000000000830d1205cf7f0477@google.com\/\n[2] https:\/\/github.com\/lz4\/lz4\/commit\/c5d6f8a8be3927c0bec91bcc58667a6cfad244ad#\n[3] https:\/\/lore.kernel.org\/all\/CC666AE8-4CA4-4951-B6FB-A2EFDE3AC03B@fb.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/467d5e200ab4486b744fe1776154a43d1aa22d4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6adc01a7aa37445dafe8846faa0610a86029b253","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73953dfa9d50e5c9fe98ee13fd1d3427aa12a0a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fb8bc6cfc58773ce95414e11c9ccc8fc6ac4927","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e64dbe97c05c769525cbca099ddbd22485630235","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eafc0a02391b7b36617b36c97c4b5d6832cf5e24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49079","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.250","lastModified":"2025-02-26T07:00:45.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: zoned: traverse devices under chunk_mutex in btrfs_can_activate_zone\n\nbtrfs_can_activate_zone() can be called with the device_list_mutex already\nheld, which will lead to a deadlock:\n\ninsert_dev_extents() \/\/ Takes device_list_mutex\n`-> insert_dev_extent()\n `-> btrfs_insert_empty_item()\n  `-> btrfs_insert_empty_items()\n   `-> btrfs_search_slot()\n    `-> btrfs_cow_block()\n     `-> __btrfs_cow_block()\n      `-> btrfs_alloc_tree_block()\n       `-> btrfs_reserve_extent()\n        `-> find_free_extent()\n         `-> find_free_extent_update_loop()\n          `-> can_allocate_chunk()\n           `-> btrfs_can_activate_zone() \/\/ Takes device_list_mutex again\n\nInstead of using the RCU on fs_devices->device_list we\ncan use fs_devices->alloc_list, protected by the chunk_mutex to traverse\nthe list of active devices.\n\nWe are in the chunk allocation thread. The newer chunk allocation\nhappens from the devices in the fs_device->alloc_list protected by the\nchunk_mutex.\n\n  btrfs_create_chunk()\n    lockdep_assert_held(&info->chunk_mutex);\n    gather_device_info\n      list_for_each_entry(device, &fs_devices->alloc_list, dev_alloc_list)\n\nAlso, a device that reappears after the mount won't join the alloc_list\nyet and, it will be in the dev_list, which we don't want to consider in\nthe context of the chunk alloc.\n\n  [15.166572] WARNING: possible recursive locking detected\n  [15.167117] 5.17.0-rc6-dennis #79 Not tainted\n  [15.167487] --------------------------------------------\n  [15.167733] kworker\/u8:3\/146 is trying to acquire lock:\n  [15.167733] ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.167733]\n  [15.167733] but task is already holding lock:\n  [15.167733] ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: btrfs_create_pending_block_groups+0x20a\/0x560 [btrfs]\n  [15.167733]\n  [15.167733] other info that might help us debug this:\n  [15.167733]  Possible unsafe locking scenario:\n  [15.167733]\n  [15.171834]        CPU0\n  [15.171834]        ----\n  [15.171834]   lock(&fs_devs->device_list_mutex);\n  [15.171834]   lock(&fs_devs->device_list_mutex);\n  [15.171834]\n  [15.171834]  *** DEADLOCK ***\n  [15.171834]\n  [15.171834]  May be due to missing lock nesting notation\n  [15.171834]\n  [15.171834] 5 locks held by kworker\/u8:3\/146:\n  [15.171834]  #0: ffff888100050938 ((wq_completion)events_unbound){+.+.}-{0:0}, at: process_one_work+0x1c3\/0x5a0\n  [15.171834]  #1: ffffc9000067be80 ((work_completion)(&fs_info->async_data_reclaim_work)){+.+.}-{0:0}, at: process_one_work+0x1c3\/0x5a0\n  [15.176244]  #2: ffff88810521e620 (sb_internal){.+.+}-{0:0}, at: flush_space+0x335\/0x600 [btrfs]\n  [15.176244]  #3: ffff888102962ee0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: btrfs_create_pending_block_groups+0x20a\/0x560 [btrfs]\n  [15.176244]  #4: ffff8881152e4b78 (btrfs-dev-00){++++}-{3:3}, at: __btrfs_tree_lock+0x27\/0x130 [btrfs]\n  [15.179641]\n  [15.179641] stack backtrace:\n  [15.179641] CPU: 1 PID: 146 Comm: kworker\/u8:3 Not tainted 5.17.0-rc6-dennis #79\n  [15.179641] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1.fc35 04\/01\/2014\n  [15.179641] Workqueue: events_unbound btrfs_async_reclaim_data_space [btrfs]\n  [15.179641] Call Trace:\n  [15.179641]  <TASK>\n  [15.179641]  dump_stack_lvl+0x45\/0x59\n  [15.179641]  __lock_acquire.cold+0x217\/0x2b2\n  [15.179641]  lock_acquire+0xbf\/0x2b0\n  [15.183838]  ? find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.183838]  __mutex_lock+0x8e\/0x970\n  [15.183838]  ? find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.183838]  ? find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.183838]  ? lock_is_held_type+0xd7\/0x130\n  [15.183838]  ? find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.183838]  find_free_extent+0x15a\/0x14f0 [btrfs]\n  [15.183838]  ? _raw_spin_unlock+0x24\/0x40\n  [15.183838]  ? btrfs_get_alloc_profile+0x106\/0x230 [btrfs]\n  [15.187601]  btrfs_reserve_extent+0x131\/0x260 [btrfs]\n  [15.\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09e65ae515af2b24d6dc23af21719a3b41de83e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b9e66762aa0cda2a9c2d5542d64e04dac528fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/142f822bd945a7be442a2916ec6167cc102c4183","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49080","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.347","lastModified":"2025-02-26T07:00:45.347","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/mempolicy: fix mpol_new leak in shared_policy_replace\n\nIf mpol_new is allocated but not used in restart loop, mpol_new will be\nfreed via mpol_put before returning to the caller.  But refcnt is not\ninitialized yet, so mpol_put could not do the right things and might\nleak the unused mpol_new.  This would happen if mempolicy was updated on\nthe shared shmem file while the sp->lock has been dropped during the\nmemory allocation.\n\nThis issue could be triggered easily with the below code snippet if\nthere are many processes doing the below work at the same time:\n\n  shmid = shmget((key_t)5566, 1024 * PAGE_SIZE, 0666|IPC_CREAT);\n  shm = shmat(shmid, 0, 0);\n  loop many times {\n    mbind(shm, 1024 * PAGE_SIZE, MPOL_LOCAL, mask, maxnode, 0);\n    mbind(shm + 128 * PAGE_SIZE, 128 * PAGE_SIZE, MPOL_DEFAULT, mask,\n          maxnode, 0);\n  }"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/198932a14aeb19a15cf19e51e151d023bc4cd648","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25f506273b6ae806fd46bfcb6fdaa5b9ec81a05b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39a32f3c06f6d68a530bf9612afa19f50f12e93d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ad099559b00ac01c3726e5c95dc3108ef47d03e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e16dc5378abd749a836daa9ee4ab2c8d2668999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e00309ac716fa8225f0cbde2cd9c24f0e74ee21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8510c2346d9e47a72b7f018a36ef0c39483e53d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7e183b0a7136b6dc9c7b9b2a85a608a8feba894","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe39ac59dbbf893b73b24e3184161d0bd06d6651","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49081","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.450","lastModified":"2025-02-26T07:00:45.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhighmem: fix checks in __kmap_local_sched_{in,out}\n\nWhen CONFIG_DEBUG_KMAP_LOCAL is enabled __kmap_local_sched_{in,out} check\nthat even slots in the tsk->kmap_ctrl.pteval are unmapped.  The slots are\ninitialized with 0 value, but the check is done with pte_none.  0 pte\nhowever does not necessarily mean that pte_none will return true.  e.g.\non xtensa it returns false, resulting in the following runtime warnings:\n\n WARNING: CPU: 0 PID: 101 at mm\/highmem.c:627 __kmap_local_sched_out+0x51\/0x108\n CPU: 0 PID: 101 Comm: touch Not tainted 5.17.0-rc7-00010-gd3a1cdde80d2-dirty #13\n Call Trace:\n   dump_stack+0xc\/0x40\n   __warn+0x8f\/0x174\n   warn_slowpath_fmt+0x48\/0xac\n   __kmap_local_sched_out+0x51\/0x108\n   __schedule+0x71a\/0x9c4\n   preempt_schedule_irq+0xa0\/0xe0\n   common_exception_return+0x5c\/0x93\n   do_wp_page+0x30e\/0x330\n   handle_mm_fault+0xa70\/0xc3c\n   do_page_fault+0x1d8\/0x3c4\n   common_exception+0x7f\/0x7f\n\n WARNING: CPU: 0 PID: 101 at mm\/highmem.c:664 __kmap_local_sched_in+0x50\/0xe0\n CPU: 0 PID: 101 Comm: touch Tainted: G        W         5.17.0-rc7-00010-gd3a1cdde80d2-dirty #13\n Call Trace:\n   dump_stack+0xc\/0x40\n   __warn+0x8f\/0x174\n   warn_slowpath_fmt+0x48\/0xac\n   __kmap_local_sched_in+0x50\/0xe0\n   finish_task_switch$isra$0+0x1ce\/0x2f8\n   __schedule+0x86e\/0x9c4\n   preempt_schedule_irq+0xa0\/0xe0\n   common_exception_return+0x5c\/0x93\n   do_wp_page+0x30e\/0x330\n   handle_mm_fault+0xa70\/0xc3c\n   do_page_fault+0x1d8\/0x3c4\n   common_exception+0x7f\/0x7f\n\nFix it by replacing !pte_none(pteval) with pte_val(pteval) != 0."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66f133ceab7456c789f70a242991ed1b27ba1c3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dd5b3b97716a611fcf67d92fd2370fcb8d50372","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85550b0f5fa5dd3c30469ea702c44444ef242c83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c21d040de6225414547d9bd31cd200f290991c85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49082","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.540","lastModified":"2025-02-26T07:00:45.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpt3sas: Fix use after free in _scsih_expander_node_remove()\n\nThe function mpt3sas_transport_port_remove() called in\n_scsih_expander_node_remove() frees the port field of the sas_expander\nstructure, leading to the following use-after-free splat from KASAN when\nthe ioc_info() call following that function is executed (e.g. when doing\nrmmod of the driver module):\n\n[ 3479.371167] ==================================================================\n[ 3479.378496] BUG: KASAN: use-after-free in _scsih_expander_node_remove+0x710\/0x750 [mpt3sas]\n[ 3479.386936] Read of size 1 at addr ffff8881c037691c by task rmmod\/1531\n[ 3479.393524]\n[ 3479.395035] CPU: 18 PID: 1531 Comm: rmmod Not tainted 5.17.0-rc8+ #1436\n[ 3479.401712] Hardware name: Supermicro Super Server\/H12SSL-NT, BIOS 2.1 06\/02\/2021\n[ 3479.409263] Call Trace:\n[ 3479.411743]  <TASK>\n[ 3479.413875]  dump_stack_lvl+0x45\/0x59\n[ 3479.417582]  print_address_description.constprop.0+0x1f\/0x120\n[ 3479.423389]  ? _scsih_expander_node_remove+0x710\/0x750 [mpt3sas]\n[ 3479.429469]  kasan_report.cold+0x83\/0xdf\n[ 3479.433438]  ? _scsih_expander_node_remove+0x710\/0x750 [mpt3sas]\n[ 3479.439514]  _scsih_expander_node_remove+0x710\/0x750 [mpt3sas]\n[ 3479.445411]  ? _raw_spin_unlock_irqrestore+0x2d\/0x40\n[ 3479.452032]  scsih_remove+0x525\/0xc90 [mpt3sas]\n[ 3479.458212]  ? mpt3sas_expander_remove+0x1d0\/0x1d0 [mpt3sas]\n[ 3479.465529]  ? down_write+0xde\/0x150\n[ 3479.470746]  ? up_write+0x14d\/0x460\n[ 3479.475840]  ? kernfs_find_ns+0x137\/0x310\n[ 3479.481438]  pci_device_remove+0x65\/0x110\n[ 3479.487013]  __device_release_driver+0x316\/0x680\n[ 3479.493180]  driver_detach+0x1ec\/0x2d0\n[ 3479.498499]  bus_remove_driver+0xe7\/0x2d0\n[ 3479.504081]  pci_unregister_driver+0x26\/0x250\n[ 3479.510033]  _mpt3sas_exit+0x2b\/0x6cf [mpt3sas]\n[ 3479.516144]  __x64_sys_delete_module+0x2fd\/0x510\n[ 3479.522315]  ? free_module+0xaa0\/0xaa0\n[ 3479.527593]  ? __cond_resched+0x1c\/0x90\n[ 3479.532951]  ? lockdep_hardirqs_on_prepare+0x273\/0x3e0\n[ 3479.539607]  ? syscall_enter_from_user_mode+0x21\/0x70\n[ 3479.546161]  ? trace_hardirqs_on+0x1c\/0x110\n[ 3479.551828]  do_syscall_64+0x35\/0x80\n[ 3479.556884]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ 3479.563402] RIP: 0033:0x7f1fc482483b\n...\n[ 3479.943087] ==================================================================\n\nFix this by introducing the local variable port_id to store the port ID\nvalue before executing mpt3sas_transport_port_remove(). This local variable\nis then used in the call to ioc_info() instead of dereferencing the freed\nport structure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17d66b1c92bcb41e72271ec60069d3684aaa1c9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bb8a7fc64d63ec818e367e1b37676ea2ef2d20c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25c1353dca74ad7cf3fd7ce258fe7c957a147d5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87d663d40801dffc99a5ad3b0188ad3e2b4d1557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49083","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.643","lastModified":"2025-02-26T07:00:45.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/omap: Fix regression in probe for NULL pointer dereference\n\nCommit 3f6634d997db (\"iommu: Use right way to retrieve iommu_ops\") started\ntriggering a NULL pointer dereference for some omap variants:\n\n__iommu_probe_device from probe_iommu_group+0x2c\/0x38\nprobe_iommu_group from bus_for_each_dev+0x74\/0xbc\nbus_for_each_dev from bus_iommu_probe+0x34\/0x2e8\nbus_iommu_probe from bus_set_iommu+0x80\/0xc8\nbus_set_iommu from omap_iommu_init+0x88\/0xcc\nomap_iommu_init from do_one_initcall+0x44\/0x24\n\nThis is caused by omap iommu probe returning 0 instead of ERR_PTR(-ENODEV)\nas noted by Jason Gunthorpe <jgg@ziepe.ca>.\n\nLooks like the regression already happened with an earlier commit\n6785eb9105e3 (\"iommu\/omap: Convert to probe\/release_device() call-backs\")\nthat changed the function return type and missed converting one place."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d89f2b9eadbcf3ce93c6d7238f68299a1f84968","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47e239117bd97c8556f9187af7a9a7938db4e021","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71ff461c3f41f6465434b9e980c01782763e7ad8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd905fed87ce01ac010011bb8f44ed0140116ceb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea518578aa8a9a0280605b53cc33f707e10c8178","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49084","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.737","lastModified":"2025-02-26T07:00:45.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nqede: confirm skb is allocated before using\n\nqede_build_skb() assumes build_skb() always works and goes straight\nto skb_reserve(). However, build_skb() can fail under memory pressure.\nThis results in a kernel panic because the skb to reserve is NULL.\n\nAdd a check in case build_skb() failed to allocate and return NULL.\n\nThe NULL return is handled correctly in callers to qede_build_skb()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/034a92c6a81048128fc7b18d278d52438a13902a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e910dbe36508654a896d5735b318c0b88172570","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8928239e5e2e460d95b8a0b89f61671625e7ece0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9648adb1b3ece55c657d3a4f52bfee663b710dfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2d6b3db9d1cf80908964036dbe1c52a86b1afb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9bdce2359b5f4986eb38d1e81865b3586cc20d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1fd0c42acfa22bb34d2ab6a111484f466ab8093","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49085","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.833","lastModified":"2025-02-26T07:00:45.833","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrbd: Fix five use after free bugs in get_initial_state\n\nIn get_initial_state, it calls notify_initial_state_done(skb,..) if\ncb->args[5]==1. If genlmsg_put() failed in notify_initial_state_done(),\nthe skb will be freed by nlmsg_free(skb).\nThen get_initial_state will goto out and the freed skb will be used by\nreturn value skb->len, which is a uaf bug.\n\nWhat's worse, the same problem goes even further: skb can also be\nfreed in the notify_*_state_change -> notify_*_state calls below.\nThus 4 additional uaf bugs happened.\n\nMy patch lets the problem callee functions: notify_initial_state_done\nand notify_*_state_change return an error code if errors happen.\nSo that the error codes could be propagated and the uaf bugs can be avoid.\n\nv2 reports a compilation warning. This v3 fixed this warning and built\nsuccessfully in my local environment with no additional warnings.\nv2: https:\/\/lore.kernel.org\/patchwork\/patch\/1435218\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0489700bfeb1e53eb2039c2291c67e71b0b40103","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/188fe6b26765edbad4055611c0f788b6870f4024","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/226e993c39405292781bfcf4b039a8db56aab362","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/594205b4936771a250f9d141e7e0fff21c3dd2d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a972c768723359ec995579902473028fe3cd64b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aadb22ba2f656581b2f733deb3a467c48cc618f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6a4055036eed1f5e239ce3d8b0db1ce38bba447","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcf6be17b5c53b741898d2223b23e66d682de300","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de63e74da2333b4068bb79983e632db730fea97e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49086","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:45.940","lastModified":"2025-02-26T07:00:45.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix leak of nested actions\n\nWhile parsing user-provided actions, openvswitch module may dynamically\nallocate memory and store pointers in the internal copy of the actions.\nSo this memory has to be freed while destroying the actions.\n\nCurrently there are only two such actions: ct() and set().  However,\nthere are many actions that can hold nested lists of actions and\novs_nla_free_flow_actions() just jumps over them leaking the memory.\n\nFor example, removal of the flow with the following actions will lead\nto a leak of the memory allocated by nf_ct_tmpl_alloc():\n\n  actions:clone(ct(commit),0)\n\nNon-freed set() action may also leak the 'dst' structure for the\ntunnel info including device references.\n\nUnder certain conditions with a high rate of flow rotation that may\ncause significant memory leak problem (2MB per second in reporter's\ncase).  The problem is also hard to mitigate, because the user doesn't\nhave direct control over the datapath flows generated by OVS.\n\nFix that by iterating over all the nested actions and freeing\neverything that needs to be freed recursively.\n\nNew build time assertion should protect us from this problem if new\nactions will be added in the future.\n\nUnfortunately, openvswitch module doesn't use NLA_F_NESTED, so all\nattributes has to be explicitly checked.  sample() and clone() actions\nare mixing extra attributes into the user-provided action list.  That\nprevents some code generalization too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f30fb9166d4f15a1aa19449b9da871fe0ed4796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3554c214b83ec9a839ed574263a34218f372990c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53bce9d19b0a9d245b25cd050b81652ed974a509","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ae05b5eb58773cfec307ff88aff4cfd843c4cff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7438dc55c0709819b813f4778aec2c48b782990b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/837b96d8103938e35e7d92cd9db96af914ca4fff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef6f9ce0a79aa23b10fc5f3b3cab3814a25aac40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49087","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.043","lastModified":"2025-02-26T07:00:46.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: fix a race in rxrpc_exit_net()\n\nCurrent code can lead to the following race:\n\nCPU0                                                 CPU1\n\nrxrpc_exit_net()\n                                                     rxrpc_peer_keepalive_worker()\n                                                       if (rxnet->live)\n\n  rxnet->live = false;\n  del_timer_sync(&rxnet->peer_keepalive_timer);\n\n                                                             timer_reduce(&rxnet->peer_keepalive_timer, jiffies + delay);\n\n  cancel_work_sync(&rxnet->peer_keepalive_work);\n\nrxrpc_exit_net() exits while peer_keepalive_timer is still armed,\nleading to use-after-free.\n\nsyzbot report was:\n\nODEBUG: free active (active state 0) object type: timer_list hint: rxrpc_peer_keepalive_timeout+0x0\/0xb0\nWARNING: CPU: 0 PID: 3660 at lib\/debugobjects.c:505 debug_print_object+0x16e\/0x250 lib\/debugobjects.c:505\nModules linked in:\nCPU: 0 PID: 3660 Comm: kworker\/u4:6 Not tainted 5.17.0-syzkaller-13993-g88e6c0207623 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nWorkqueue: netns cleanup_net\nRIP: 0010:debug_print_object+0x16e\/0x250 lib\/debugobjects.c:505\nCode: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd 00 1c 26 8a 4c 89 ee 48 c7 c7 00 10 26 8a e8 b1 e7 28 05 <0f> 0b 83 05 15 eb c5 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3\nRSP: 0018:ffffc9000353fb00 EFLAGS: 00010082\nRAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000\nRDX: ffff888029196140 RSI: ffffffff815efad8 RDI: fffff520006a7f52\nRBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff815ea4ae R11: 0000000000000000 R12: ffffffff89ce23e0\nR13: ffffffff8a2614e0 R14: ffffffff816628c0 R15: dffffc0000000000\nFS:  0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fe1f2908924 CR3: 0000000043720000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n __debug_check_no_obj_freed lib\/debugobjects.c:992 [inline]\n debug_check_no_obj_freed+0x301\/0x420 lib\/debugobjects.c:1023\n kfree+0xd6\/0x310 mm\/slab.c:3809\n ops_free_list.part.0+0x119\/0x370 net\/core\/net_namespace.c:176\n ops_free_list net\/core\/net_namespace.c:174 [inline]\n cleanup_net+0x591\/0xb00 net\/core\/net_namespace.c:598\n process_one_work+0x996\/0x1610 kernel\/workqueue.c:2289\n worker_thread+0x665\/0x1080 kernel\/workqueue.c:2436\n kthread+0x2e9\/0x3a0 kernel\/kthread.c:376\n ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:298\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08ff0e74fab517dbc44e11b8bc683dd4ecc65950","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1946014ca3b19be9e485e780e862c375c6f98bad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41024a40f6c793abbb916a857f18fb009f07464c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/571d8e1d154ca18f08dcb72b69318d36e10010a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ee84d29f22de6f6c63fad6c54690517659862f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/864297ee30727ae6233f80296b7fc91442620b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd8aef1f30d1215648e4e6686cfb422004851429","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49088","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.143","lastModified":"2025-02-26T07:00:46.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndpaa2-ptp: Fix refcount leak in dpaa2_ptp_probe\n\nThis node pointer is returned by of_find_compatible_node() with\nrefcount incremented. Calling of_node_put() to aovid the refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b04bd4f03bba021959ca339314f6739710f0954","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45fdd98b70142521739615ad1bfb760401863b73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46d120f7c163706d6c31ee00baa0be64c4572b78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/599874bbc4ed832ccb578d48ac0ae7344382ef43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebd1e3458dbf6643aa0272da398cb5b537d492b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbe5f4c0dd3475178f17ddd8b8d5044ebeae0be7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49089","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.240","lastModified":"2025-02-26T07:00:46.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/rdmavt: add lock to call to rvt_error_qp to prevent a race condition\n\nThe documentation of the function rvt_error_qp says both r_lock and s_lock\nneed to be held when calling that function.  It also asserts using lockdep\nthat both of those locks are held.  However, the commit I referenced in\nFixes accidentally makes the call to rvt_error_qp in rvt_ruc_loopback no\nlonger covered by r_lock.  This results in the lockdep assertion failing\nand also possibly in a race condition."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/43c2d7890ecabe527448a6c391fb2d9a5e6bbfe0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d809f69695d4e7d1378b3a072fa9aef23123018","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57800cc36e55db0547461c49acf5cd84c0f502b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77ffb2495a41098f9d6a14f8aefde3188da75944","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a50937227c385a477177c9ffa122b4230e40666","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92f1947c0d26060e978b3a9f21f32ce7c8c9cca3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49090","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.337","lastModified":"2025-02-26T07:00:46.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narch\/arm64: Fix topology initialization for core scheduling\n\nArm64 systems rely on store_cpu_topology() to call update_siblings_masks()\nto transfer the toplogy to the various cpu masks. This needs to be done\nbefore the call to notify_cpu_starting() which tells the scheduler about\neach cpu found, otherwise the core scheduling data structures are setup\nin a way that does not match the actual topology.\n\nWith smt_mask not setup correctly we bail on `cpumask_weight(smt_mask) == 1`\nfor !leaders in:\n\n notify_cpu_starting()\n   cpuhp_invoke_callback_range()\n     sched_cpu_starting()\n       sched_core_cpu_starting()\n\nwhich leads to rq->core not being correctly set for !leader-rq's.\n\nWithout this change stress-ng (which enables core scheduling in its prctl\ntests in newer versions -- i.e. with PR_SCHED_CORE support) causes a warning\nand then a crash (trimmed for legibility):\n\n[ 1853.805168] ------------[ cut here ]------------\n[ 1853.809784] task_rq(b)->core != rq->core\n[ 1853.809792] WARNING: CPU: 117 PID: 0 at kernel\/sched\/fair.c:11102 cfs_prio_less+0x1b4\/0x1c4\n...\n[ 1854.015210] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010\n...\n[ 1854.231256] Call trace:\n[ 1854.233689]  pick_next_task+0x3dc\/0x81c\n[ 1854.237512]  __schedule+0x10c\/0x4cc\n[ 1854.240988]  schedule_idle+0x34\/0x54"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5524cbb1bfcdff0cad0aaa9f94e6092002a07259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/790c1567582bda8f1153015436e3330a7c6eb278","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87f5d66daa5f457449bb95d6b8d18bb7596aa627","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c78a1b2d0bff678570c8dc9f14035606f5e5257d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49091","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.430","lastModified":"2025-02-26T07:00:46.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/imx: Fix memory leak in imx_pd_connector_get_modes\n\nAvoid leaking the display mode variable if of_get_drm_display_mode\nfails.\n\nAddresses-Coverity-ID: 1443943 (\"Resource leak\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31e449302ed00c38d4068443cf0243279701ab28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38bf605bd8c83d942c8dcffaef3633b7d8b37549","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41624d7c0c3df71dee170c610744aaa5909327b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7526102d908ec5ae777aa77723d52fce12916093","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc23c327e1a23cc3555fa1e86288e13288515442","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bce81feb03a20fca7bbdd1c4af16b4e9d5c0e1d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c539a6a5896ed92bfb91494e46996d013f3d5967","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2c2758cfb0262637fd93350bdc8ad485fb1dd61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8b0ef0a5889890b50482b6593bd8de544736351","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49092","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.530","lastModified":"2025-02-26T07:00:46.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv4: fix route with nexthop object delete warning\n\nFRR folks have hit a kernel warning[1] while deleting routes[2] which is\ncaused by trying to delete a route pointing to a nexthop id without\nspecifying nhid but matching on an interface. That is, a route is found\nbut we hit a warning while matching it. The warning is from\nfib_info_nh() in include\/net\/nexthop.h because we run it on a fib_info\nwith nexthop object. The call chain is:\n inet_rtm_delroute -> fib_table_delete -> fib_nh_match (called with a\nnexthop fib_info and also with fc_oif set thus calling fib_info_nh on\nthe fib_info and triggering the warning). The fix is to not do any\nmatching in that branch if the fi has a nexthop object because those are\nmanaged separately. I.e. we should match when deleting without nh spec and\nshould fail when deleting a nexthop route with old-style nh spec because\nnexthop objects are managed separately, e.g.:\n $ ip r show 1.2.3.4\/32\n 1.2.3.4 nhid 12 via 192.168.11.2 dev dummy0\n\n $ ip r del 1.2.3.4\/32\n $ ip r del 1.2.3.4\/32 nhid 12\n <both should work>\n\n $ ip r del 1.2.3.4\/32 dev dummy0\n <should fail with ESRCH>\n\n[1]\n [  523.462226] ------------[ cut here ]------------\n [  523.462230] WARNING: CPU: 14 PID: 22893 at include\/net\/nexthop.h:468 fib_nh_match+0x210\/0x460\n [  523.462236] Modules linked in: dummy rpcsec_gss_krb5 xt_socket nf_socket_ipv4 nf_socket_ipv6 ip6table_raw iptable_raw bpf_preload xt_statistic ip_set ip_vs_sh ip_vs_wrr ip_vs_rr ip_vs xt_mark nf_tables xt_nat veth nf_conntrack_netlink nfnetlink xt_addrtype br_netfilter overlay dm_crypt nfsv3 nfs fscache netfs vhost_net vhost vhost_iotlb tap tun xt_CHECKSUM xt_MASQUERADE xt_conntrack 8021q garp mrp ipt_REJECT nf_reject_ipv4 ip6table_mangle ip6table_nat iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bridge stp llc rfcomm snd_seq_dummy snd_hrtimer rpcrdma rdma_cm iw_cm ib_cm ib_core ip6table_filter xt_comment ip6_tables vboxnetadp(OE) vboxnetflt(OE) vboxdrv(OE) qrtr bnep binfmt_misc xfs vfat fat squashfs loop nvidia_drm(POE) nvidia_modeset(POE) nvidia_uvm(POE) nvidia(POE) intel_rapl_msr intel_rapl_common snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio snd_hda_codec_hdmi btusb btrtl iwlmvm uvcvideo btbcm snd_hda_intel edac_mce_amd\n [  523.462274]  videobuf2_vmalloc videobuf2_memops btintel snd_intel_dspcfg videobuf2_v4l2 snd_intel_sdw_acpi bluetooth snd_usb_audio snd_hda_codec mac80211 snd_usbmidi_lib joydev snd_hda_core videobuf2_common kvm_amd snd_rawmidi snd_hwdep snd_seq videodev ccp snd_seq_device libarc4 ecdh_generic mc snd_pcm kvm iwlwifi snd_timer drm_kms_helper snd cfg80211 cec soundcore irqbypass rapl wmi_bmof i2c_piix4 rfkill k10temp pcspkr acpi_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc drm zram ip_tables crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel nvme sp5100_tco r8169 nvme_core wmi ipmi_devintf ipmi_msghandler fuse\n [  523.462300] CPU: 14 PID: 22893 Comm: ip Tainted: P           OE     5.16.18-200.fc35.x86_64 #1\n [  523.462302] Hardware name: Micro-Star International Co., Ltd. MS-7C37\/MPG X570 GAMING EDGE WIFI (MS-7C37), BIOS 1.C0 10\/29\/2020\n [  523.462303] RIP: 0010:fib_nh_match+0x210\/0x460\n [  523.462304] Code: 7c 24 20 48 8b b5 90 00 00 00 e8 bb ee f4 ff 48 8b 7c 24 20 41 89 c4 e8 ee eb f4 ff 45 85 e4 0f 85 2e fe ff ff e9 4c ff ff ff <0f> 0b e9 17 ff ff ff 3c 0a 0f 85 61 fe ff ff 48 8b b5 98 00 00 00\n [  523.462306] RSP: 0018:ffffaa53d4d87928 EFLAGS: 00010286\n [  523.462307] RAX: 0000000000000000 RBX: ffffaa53d4d87a90 RCX: ffffaa53d4d87bb0\n [  523.462308] RDX: ffff9e3d2ee6be80 RSI: ffffaa53d4d87a90 RDI: ffffffff920ed380\n [  523.462309] RBP: ffff9e3d2ee6be80 R08: 0000000000000064 R09: 0000000000000000\n [  523.462310] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000031\n [  523.462310] R13: 0000000000000020 R14: 0000000000000000 R15: ffff9e3d331054e0\n [  523.462311] FS:  00007f2455\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/63ea57478aaa3e06a597081a0f537318fc04e49f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bf92d70e690b7ff12b24f4bfff5e5434d019b82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/907c97986d6fa77318d17659dd76c94b65dd27c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcd689f9e2640c992f94eae9955b106f71c6825d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5064531c23ad646da7be8b938292b00a7e61438","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8db5743d09523c0bb35f16e13691e3b7eb5dba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49093","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.633","lastModified":"2025-02-26T07:00:46.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nskbuff: fix coalescing for page_pool fragment recycling\n\nFix a use-after-free when using page_pool with page fragments. We\nencountered this problem during normal RX in the hns3 driver:\n\n(1) Initially we have three descriptors in the RX queue. The first one\n    allocates PAGE1 through page_pool, and the other two allocate one\n    half of PAGE2 each. Page references look like this:\n\n                RX_BD1 _______ PAGE1\n                RX_BD2 _______ PAGE2\n                RX_BD3 _________\/\n\n(2) Handle RX on the first descriptor. Allocate SKB1, eventually added\n    to the receive queue by tcp_queue_rcv().\n\n(3) Handle RX on the second descriptor. Allocate SKB2 and pass it to\n    netif_receive_skb():\n\n    netif_receive_skb(SKB2)\n      ip_rcv(SKB2)\n        SKB3 = skb_clone(SKB2)\n\n    SKB2 and SKB3 share a reference to PAGE2 through\n    skb_shinfo()->dataref. The other ref to PAGE2 is still held by\n    RX_BD3:\n\n                      SKB2 ---+- PAGE2\n                      SKB3 __\/   \/\n                RX_BD3 _________\/\n\n (3b) Now while handling TCP, coalesce SKB3 with SKB1:\n\n      tcp_v4_rcv(SKB3)\n        tcp_try_coalesce(to=SKB1, from=SKB3)    \/\/ succeeds\n        kfree_skb_partial(SKB3)\n          skb_release_data(SKB3)                \/\/ drops one dataref\n\n                      SKB1 _____ PAGE1\n                           \\____\n                      SKB2 _____ PAGE2\n                                 \/\n                RX_BD3 _________\/\n\n    In skb_try_coalesce(), __skb_frag_ref() takes a page reference to\n    PAGE2, where it should instead have increased the page_pool frag\n    reference, pp_frag_count. Without coalescing, when releasing both\n    SKB2 and SKB3, a single reference to PAGE2 would be dropped. Now\n    when releasing SKB1 and SKB2, two references to PAGE2 will be\n    dropped, resulting in underflow.\n\n (3c) Drop SKB2:\n\n      af_packet_rcv(SKB2)\n        consume_skb(SKB2)\n          skb_release_data(SKB2)                \/\/ drops second dataref\n            page_pool_return_skb_page(PAGE2)    \/\/ drops one pp_frag_count\n\n                      SKB1 _____ PAGE1\n                           \\____\n                                 PAGE2\n                                 \/\n                RX_BD3 _________\/\n\n(4) Userspace calls recvmsg()\n    Copies SKB1 and releases it. Since SKB3 was coalesced with SKB1, we\n    release the SKB3 page as well:\n\n    tcp_eat_recv_skb(SKB1)\n      skb_release_data(SKB1)\n        page_pool_return_skb_page(PAGE1)\n        page_pool_return_skb_page(PAGE2)        \/\/ drops second pp_frag_count\n\n(5) PAGE2 is freed, but the third RX descriptor was still using it!\n    In our case this causes IOMMU faults, but it would silently corrupt\n    memory if the IOMMU was disabled.\n\nChange the logic that checks whether pp_recycle SKBs can be coalesced.\nWe still reject differing pp_recycle between 'from' and 'to' SKBs, but\nin order to avoid the situation described above, we also reject\ncoalescing when both 'from' and 'to' are pp_recycled and 'from' is\ncloned.\n\nThe new logic allows coalescing a cloned pp_recycle SKB into a page\nrefcounted one, because in this case the release (4) will drop the right\nreference, the one taken by skb_try_coalesce()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1effe8ca4e34c34cdd9318436a4232dcb582ebf4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72bb856d16e883437023ff2ff77d0c498018728a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba965e8605aee5387cecaa28fcf7ee9f61779a49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4fa19615806a9a7e518c295b39175aa47a685ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49094","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.747","lastModified":"2025-02-26T07:00:46.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/tls: fix slab-out-of-bounds bug in decrypt_internal\n\nThe memory size of tls_ctx->rx.iv for AES128-CCM is 12 setting in\ntls_set_sw_offload(). The return value of crypto_aead_ivsize()\nfor \"ccm(aes)\" is 16. So memcpy() require 16 bytes from 12 bytes\nmemory space will trigger slab-out-of-bounds bug as following:\n\n==================================================================\nBUG: KASAN: slab-out-of-bounds in decrypt_internal+0x385\/0xc40 [tls]\nRead of size 16 at addr ffff888114e84e60 by task tls\/10911\n\nCall Trace:\n <TASK>\n dump_stack_lvl+0x34\/0x44\n print_report.cold+0x5e\/0x5db\n ? decrypt_internal+0x385\/0xc40 [tls]\n kasan_report+0xab\/0x120\n ? decrypt_internal+0x385\/0xc40 [tls]\n kasan_check_range+0xf9\/0x1e0\n memcpy+0x20\/0x60\n decrypt_internal+0x385\/0xc40 [tls]\n ? tls_get_rec+0x2e0\/0x2e0 [tls]\n ? process_rx_list+0x1a5\/0x420 [tls]\n ? tls_setup_from_iter.constprop.0+0x2e0\/0x2e0 [tls]\n decrypt_skb_update+0x9d\/0x400 [tls]\n tls_sw_recvmsg+0x3c8\/0xb50 [tls]\n\nAllocated by task 10911:\n kasan_save_stack+0x1e\/0x40\n __kasan_kmalloc+0x81\/0xa0\n tls_set_sw_offload+0x2eb\/0xa20 [tls]\n tls_setsockopt+0x68c\/0x700 [tls]\n __sys_setsockopt+0xfe\/0x1b0\n\nReplace the crypto_aead_ivsize() with prot->iv_size + prot->salt_size\nwhen memcpy() iv value in TLS_1_3_VERSION scenario."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2304660ab6c425df64d95301b601424c6a50f28b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29be1816cbab9a0dc6243120939fd10a92753756","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b7d14c105dd8f6412eda5a91e1e6154653731e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/589154d0f18945f41d138a5b4e49e518d294474b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2f1b033b17dedda51d465861b69e58317d6343","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9381fe8c849cfbe50245ac01fc077554f6eaa0e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49095","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:46.887","lastModified":"2025-02-26T07:00:46.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: zorro7xx: Fix a resource leak in zorro7xx_remove_one()\n\nThe error handling path of the probe releases a resource that is not freed\nin the remove function. In some cases, a ioremap() must be undone.\n\nAdd the missing iounmap() call in the remove function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16ed828b872d12ccba8f07bcc446ae89ba662f9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e0c01319dedf1e63ec5df37ead048e17afd92ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34a47f7ddb4fd1cbd12397aa6f7dad1de08b4050","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a845c678e094894f38cc9526d212b21933ce44c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aefd755a96051aa56b198cb7ecd168b22ba384f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5f77b595379b5191316edd365a542f8b1526066","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce430cfad6a5385d5b7f7c1dc3fa50f10abfd41b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db863ab2baf058ed05c7b723612e3c40c9dd6885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de6aee0978f164d3d0c771ce03e3066a26c371c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49096","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.010","lastModified":"2025-02-26T07:00:47.010","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sfc: add missing xdp queue reinitialization\n\nAfter rx\/tx ring buffer size is changed, kernel panic occurs when\nit acts XDP_TX or XDP_REDIRECT.\n\nWhen tx\/rx ring buffer size is changed(ethtool -G), sfc driver\nreallocates and reinitializes rx and tx queues and their buffer\n(tx_queue->buffer).\nBut it misses reinitializing xdp queues(efx->xdp_tx_queues).\nSo, while it is acting XDP_TX or XDP_REDIRECT, it uses the uninitialized\ntx_queue->buffer.\n\nA new function efx_set_xdp_channels() is separated from efx_set_channels()\nto handle only xdp queues.\n\nSplat looks like:\n   BUG: kernel NULL pointer dereference, address: 000000000000002a\n   #PF: supervisor write access in kernel mode\n   #PF: error_code(0x0002) - not-present page\n   PGD 0 P4D 0\n   Oops: 0002 [#4] PREEMPT SMP NOPTI\n   RIP: 0010:efx_tx_map_chunk+0x54\/0x90 [sfc]\n   CPU: 2 PID: 0 Comm: swapper\/2 Tainted: G      D           5.17.0+ #55 e8beeee8289528f11357029357cf\n   Code: 48 8b 8d a8 01 00 00 48 8d 14 52 4c 8d 2c d0 44 89 e0 48 85 c9 74 0e 44 89 e2 4c 89 f6 48 80\n   RSP: 0018:ffff92f121e45c60 EFLAGS: 00010297\n   RIP: 0010:efx_tx_map_chunk+0x54\/0x90 [sfc]\n   RAX: 0000000000000040 RBX: ffff92ea506895c0 RCX: ffffffffc0330870\n   RDX: 0000000000000001 RSI: 00000001139b10ce RDI: ffff92ea506895c0\n   RBP: ffffffffc0358a80 R08: 00000001139b110d R09: 0000000000000000\n   R10: 0000000000000001 R11: ffff92ea414c0088 R12: 0000000000000040\n   R13: 0000000000000018 R14: 00000001139b10ce R15: ffff92ea506895c0\n   FS:  0000000000000000(0000) GS:ffff92f121ec0000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   Code: 48 8b 8d a8 01 00 00 48 8d 14 52 4c 8d 2c d0 44 89 e0 48 85 c9 74 0e 44 89 e2 4c 89 f6 48 80\n   CR2: 000000000000002a CR3: 00000003e6810004 CR4: 00000000007706e0\n   RSP: 0018:ffff92f121e85c60 EFLAGS: 00010297\n   PKRU: 55555554\n   RAX: 0000000000000040 RBX: ffff92ea50689700 RCX: ffffffffc0330870\n   RDX: 0000000000000001 RSI: 00000001145a90ce RDI: ffff92ea50689700\n   RBP: ffffffffc0358a80 R08: 00000001145a910d R09: 0000000000000000\n   R10: 0000000000000001 R11: ffff92ea414c0088 R12: 0000000000000040\n   R13: 0000000000000018 R14: 00000001145a90ce R15: ffff92ea50689700\n   FS:  0000000000000000(0000) GS:ffff92f121e80000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 000000000000002a CR3: 00000003e6810005 CR4: 00000000007706e0\n   PKRU: 55555554\n   Call Trace:\n    <IRQ>\n    efx_xdp_tx_buffers+0x12b\/0x3d0 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]\n    __efx_rx_packet+0x5c3\/0x930 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]\n    efx_rx_packet+0x28c\/0x2e0 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]\n    efx_ef10_ev_process+0x5f8\/0xf40 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]\n    ? enqueue_task_fair+0x95\/0x550\n    efx_poll+0xc4\/0x360 [sfc 84c94b8e32d44d296c17e10a634d3ad454de4ba5]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/059a47f1da93811d37533556d67e72f2261b1127","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8c46bc358d84701e7f7ffa054037db25f25da0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcc85e1593686e42c6749ef3d356db34759d59e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed7a824fda8732578d1014fad1f7fb0363705090","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49097","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.127","lastModified":"2025-02-26T07:00:47.127","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Avoid writeback threads getting stuck in mempool_alloc()\n\nIn a low memory situation, allow the NFS writeback code to fail without\ngetting stuck in infinite loops in mempool_alloc()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bae835b63c53f86cdc524f5962e39409585b22c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b3fa9a3c420c31e77b406ddc28f3a627100516c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6caeddd68977a1aaaf62fbd1955b41dd5c3c5d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c74e2f6ecc51bd08bb5b0335477dba954a50592e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea029e4ce760f786919d06ef52efa2e50ea92a5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49098","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.247","lastModified":"2025-02-26T07:00:47.247","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Fix potential crash on module unload\n\nThe vmbus driver relies on the panic notifier infrastructure to perform\nsome operations when a panic event is detected. Since vmbus can be built\nas module, it is required that the driver handles both registering and\nunregistering such panic notifier callback.\n\nAfter commit 74347a99e73a (\"x86\/Hyper-V: Unload vmbus channel in hv panic callback\")\nthough, the panic notifier registration is done unconditionally in the module\ninitialization routine whereas the unregistering procedure is conditionally\nguarded and executes only if HV_FEATURE_GUEST_CRASH_MSR_AVAILABLE capability\nis set.\n\nThis patch fixes that by unconditionally unregistering the panic notifier\nin the module's exit routine as well."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2133c422a103cf7c7768c37b9ac382e73b691892","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d0078f8bddd58d9bb1ad40bbe929f8633abb276","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ea98d0f5f035c1bcf1517ccec0e024ae35a48b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b4c0149a56147b29169e07000d566162892722a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/792f232d57ff28bbd5f9c4abe0466b23d5879dc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf580d2e3884dbafd6b90269b03a24d661578624","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcd6b1a624c0ffa21034d8b1e02e9d068458f596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49099","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.347","lastModified":"2025-02-26T07:00:47.347","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nDrivers: hv: vmbus: Fix initialization of device object in vmbus_device_register()\n\nInitialize the device's dma_{mask,parms} pointers and the device's\ndma_mask value before invoking device_register().  Address the\nfollowing trace with 5.17-rc7:\n\n[   49.646839] WARNING: CPU: 0 PID: 189 at include\/linux\/dma-mapping.h:543\n\tnetvsc_probe+0x37a\/0x3a0 [hv_netvsc]\n[   49.646928] Call Trace:\n[   49.646930]  <TASK>\n[   49.646935]  vmbus_probe+0x40\/0x60 [hv_vmbus]\n[   49.646942]  really_probe+0x1ce\/0x3b0\n[   49.646948]  __driver_probe_device+0x109\/0x180\n[   49.646952]  driver_probe_device+0x23\/0xa0\n[   49.646955]  __device_attach_driver+0x76\/0xe0\n[   49.646958]  ? driver_allows_async_probing+0x50\/0x50\n[   49.646961]  bus_for_each_drv+0x84\/0xd0\n[   49.646964]  __device_attach+0xed\/0x170\n[   49.646967]  device_initial_probe+0x13\/0x20\n[   49.646970]  bus_probe_device+0x8f\/0xa0\n[   49.646973]  device_add+0x41a\/0x8e0\n[   49.646975]  ? hrtimer_init+0x28\/0x80\n[   49.646981]  device_register+0x1b\/0x20\n[   49.646983]  vmbus_device_register+0x5e\/0xf0 [hv_vmbus]\n[   49.646991]  vmbus_add_channel_work+0x12d\/0x190 [hv_vmbus]\n[   49.646999]  process_one_work+0x21d\/0x3f0\n[   49.647002]  worker_thread+0x4a\/0x3b0\n[   49.647005]  ? process_one_work+0x3f0\/0x3f0\n[   49.647007]  kthread+0xff\/0x130\n[   49.647011]  ? kthread_complete_and_exit+0x20\/0x20\n[   49.647015]  ret_from_fork+0x22\/0x30\n[   49.647020]  <\/TASK>\n[   49.647021] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fe4b8631427618175a32f125062df91a5fe3f73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a5469582c241abca22500f36a9cb8e9331969cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49100","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.437","lastModified":"2025-02-26T07:00:47.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_console: eliminate anonymous module_init & module_exit\n\nEliminate anonymous module_init() and module_exit(), which can lead to\nconfusion or ambiguity when reading System.map, crashes\/oops\/bugs,\nor an initcall_debug log.\n\nGive each of these init and exit functions unique driver-specific\nnames to eliminate the anonymous names.\n\nExample 1: (System.map)\n ffffffff832fc78c t init\n ffffffff832fc79e t init\n ffffffff832fc8f8 t init\n\nExample 2: (initcall_debug log)\n calling  init+0x0\/0x12 @ 1\n initcall init+0x0\/0x12 returned 0 after 15 usecs\n calling  init+0x0\/0x60 @ 1\n initcall init+0x0\/0x60 returned 0 after 2 usecs\n calling  init+0x0\/0x9a @ 1\n initcall init+0x0\/0x9a returned 0 after 74 usecs"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f3d824bd70a1303464d5e93ee3e7afe7832fe89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3504b0a177208eda85bf472bbf7c9aa77d2b8343","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fd5dee7404ce40c79cba468bb2510115639d975","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44c2d5fbe7b2bd1f8cb114d608a591a73a5d4ae6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71612aee09ecea3475f8751dc841d75a011b1fd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7deaddb704713608e0ae559e27185581b9af71a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93e3d88321d2274fa4e26b006e19cc10fec331c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c69b442125bf009fce26e15aa5616caf8a3673c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fefb8a2a941338d871e2d83fbd65fbfa068857bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49101","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.533","lastModified":"2025-02-26T13:15:33.977","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49102","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.633","lastModified":"2025-02-26T07:00:47.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhabanalabs: fix possible memory leak in MMU DR fini\n\nThis patch fixes what seems to be copy paste error.\n\nWe will have a memory leak if the host-resident shadow is NULL (which\nwill likely happen as the DR and HR are not dependent)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12e49aefda2e04b07604f13e03f40027cbeb0dc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30058d3a83cfe8c6aacbfe5ab13c01dd0c1799e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d421fb7a9eddd8ce0a05641a3db97283fe20699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb85eec858c1a5c11d3a0bff403f6440b05b40dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49103","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.723","lastModified":"2025-02-26T07:00:47.723","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4.2: fix reference count leaks in _nfs42_proc_copy_notify()\n\n[You don't often get email from xiongx18@fudan.edu.cn. Learn why this is important at http:\/\/aka.ms\/LearnAboutSenderIdentification.]\n\nThe reference counting issue happens in two error paths in the\nfunction _nfs42_proc_copy_notify(). In both error paths, the function\nsimply returns the error code and forgets to balance the refcount of\nobject `ctx`, bumped by get_nfs_open_context() earlier, which may\ncause refcount leaks.\n\nFix it by balancing refcount of the `ctx` object before the function\nreturns in both error paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9b9feec97c1fc7dd9bb69f62c4905cddf1801599","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b37f482ba9f0e6382c188e3fccf6c4b2fdc938eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7f114edd54326f730a754547e7cfb197b5bc132","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f46f632f9cfae4b2e3635fa58840a8ec584c42e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb73bf6305f4eb8f0cf9a61ee874d55f019d6dc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49104","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.817","lastModified":"2025-02-26T07:00:47.817","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: vchiq_core: handle NULL result of find_service_by_handle\n\nIn case of an invalid handle the function find_servive_by_handle\nreturns NULL. So take care of this and avoid a NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04202f54dd8899e10f56a89c4c1ede0043fa22af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b424f6586a870b8d657c5e5419465bbe0e7b61f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42f2142a337ee372455574809fc924580a7e51b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa0b7296785312a4bfa8fac0ba8ad78698fd9fcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca225857faf237234d2fffe5d1919467dfadd822","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49105","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:47.910","lastModified":"2025-02-26T07:00:47.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: wfx: fix an error handling in wfx_init_common()\n\nOne error handler of wfx_init_common() return without calling\nieee80211_free_hw(hw), which may result in memory leak. And I add\none err label to unify the error handler, which is useful for the\nsubsequent changes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60f1d3c92dc1ef1026e5b917a329a7fa947da036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86efcb524ae1889ae73f2a2f0bb7fff2ec757ab0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93498c6e775ae91732a8109dba1bdcd324908f84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9727912e906762a63c1a667c84731d3427653f88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab0fed1fa744173433cfd1dbaf9239f200ded650","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49106","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.003","lastModified":"2025-02-26T07:00:48.003","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: vchiq_arm: Avoid NULL ptr deref in vchiq_dump_platform_instances\n\nvchiq_get_state() can return a NULL pointer. So handle this cases and\navoid a NULL pointer derefence in vchiq_dump_platform_instances."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/176df12b38c70b0a45e6392a0ee5bc83489dfc29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4627250cabaa80278d3ab01ad107893cea83799f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51e5e5c34c22c0bfec0808d8c33e0b2fcf4c7c89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa899e686d442c63d50f4d369cc02dbbf0941cb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49107","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.093","lastModified":"2025-02-26T07:00:48.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix memory leak in ceph_readdir when note_last_dentry returns error\n\nReset the last_readdir at the same time, and add a comment explaining\nwhy we don't free last_readdir when dir_emit returns false."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fe82d3254029ef9ec4e7be890125d5ef4f537de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f740ede35132d3d5d19747cad56a511d21bb156","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e792575b902a3939ca482491ee9fb3a236f99640","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4429786129648a8f4bb1e5faa143c4478cc5c4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f639d9867eea647005dc824e0e24f39ffc50d4e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49108","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.183","lastModified":"2025-02-26T07:00:48.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: Fix memory leaks on probe\n\nHandle the error branches to free memory where required.\n\nAddresses-Coverity-ID: 1491825 (\"Resource leak\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02742d1d5c95cff8b6e9379aae4ab12674f7265d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a688c91d3fd54c53e7a9edd6052cdae98dd99d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6a0b413398588fc2d8b174a79ea715b66413fca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49109","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.273","lastModified":"2025-02-26T07:00:48.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix inode reference leakage in ceph_get_snapdir()\n\nThe ceph_get_inode() will search for or insert a new inode into the\nhash for the given vino, and return a reference to it. If new is\nnon-NULL, its reference is consumed.\n\nWe should release the reference when in error handing cases."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/322794d3355c33adcc4feace0045d85a8e4ed813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ae7163598c611a8892698e0c056fe794e52b44b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cd21981dedfb4fe9f344529e4be35727cb10940","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2d9bb3f06abddefdfa740b0a604575b6797e1bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49110","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.363","lastModified":"2025-02-26T07:00:48.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: revisit gc autotuning\n\nas of commit 4608fdfc07e1\n(\"netfilter: conntrack: collect all entries in one cycle\")\nconntrack gc was changed to run every 2 minutes.\n\nOn systems where conntrack hash table is set to large value, most evictions\nhappen from gc worker rather than the packet path due to hash table\ndistribution.\n\nThis causes netlink event overflows when events are collected.\n\nThis change collects average expiry of scanned entries and\nreschedules to the average remaining value, within 1 to 60 second interval.\n\nTo avoid event overflows, reschedule after each bucket and add a\nlimit for both run time and number of evictions per run.\n\nIf more entries have to be evicted, reschedule and restart 1 jiffy\ninto the future."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cfadb761d3d0219412fd8150faea60c7e863833","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58d52743ae85d28c9335c6034d6ce350b8689951","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/592e57591826f3d09c28d755a39ea8e9d13705ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cd361d5e6d986c0d4cafb9ceaa803359048ae15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49111","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.470","lastModified":"2025-02-26T07:00:48.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix use after free in hci_send_acl\n\nThis fixes the following trace caused by receiving\nHCI_EV_DISCONN_PHY_LINK_COMPLETE which does call hci_conn_del without\nfirst checking if conn->type is in fact AMP_LINK and in case it is\ndo properly cleanup upper layers with hci_disconn_cfm:\n\n ==================================================================\n    BUG: KASAN: use-after-free in hci_send_acl+0xaba\/0xc50\n    Read of size 8 at addr ffff88800e404818 by task bluetoothd\/142\n\n    CPU: 0 PID: 142 Comm: bluetoothd Not tainted\n    5.17.0-rc5-00006-gda4022eeac1a #7\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n    rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\n    Call Trace:\n     <TASK>\n     dump_stack_lvl+0x45\/0x59\n     print_address_description.constprop.0+0x1f\/0x150\n     kasan_report.cold+0x7f\/0x11b\n     hci_send_acl+0xaba\/0xc50\n     l2cap_do_send+0x23f\/0x3d0\n     l2cap_chan_send+0xc06\/0x2cc0\n     l2cap_sock_sendmsg+0x201\/0x2b0\n     sock_sendmsg+0xdc\/0x110\n     sock_write_iter+0x20f\/0x370\n     do_iter_readv_writev+0x343\/0x690\n     do_iter_write+0x132\/0x640\n     vfs_writev+0x198\/0x570\n     do_writev+0x202\/0x280\n     do_syscall_64+0x38\/0x90\n     entry_SYSCALL_64_after_hwframe+0x44\/0xae\n    RSP: 002b:00007ffce8a099b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000014\n    Code: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3\n    0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 14 00 00 00 0f 05\n    <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 89 74 24 10\n    RDX: 0000000000000001 RSI: 00007ffce8a099e0 RDI: 0000000000000015\n    RAX: ffffffffffffffda RBX: 00007ffce8a099e0 RCX: 00007f788fc3cf77\n    R10: 00007ffce8af7080 R11: 0000000000000246 R12: 000055e4ccf75580\n    RBP: 0000000000000015 R08: 0000000000000002 R09: 0000000000000001\n    <\/TASK>\n    R13: 000055e4ccf754a0 R14: 000055e4ccf75cd0 R15: 000055e4ccf4a6b0\n\n    Allocated by task 45:\n        kasan_save_stack+0x1e\/0x40\n        __kasan_kmalloc+0x81\/0xa0\n        hci_chan_create+0x9a\/0x2f0\n        l2cap_conn_add.part.0+0x1a\/0xdc0\n        l2cap_connect_cfm+0x236\/0x1000\n        le_conn_complete_evt+0x15a7\/0x1db0\n        hci_le_conn_complete_evt+0x226\/0x2c0\n        hci_le_meta_evt+0x247\/0x450\n        hci_event_packet+0x61b\/0xe90\n        hci_rx_work+0x4d5\/0xc50\n        process_one_work+0x8fb\/0x15a0\n        worker_thread+0x576\/0x1240\n        kthread+0x29d\/0x340\n        ret_from_fork+0x1f\/0x30\n\n    Freed by task 45:\n        kasan_save_stack+0x1e\/0x40\n        kasan_set_track+0x21\/0x30\n        kasan_set_free_info+0x20\/0x30\n        __kasan_slab_free+0xfb\/0x130\n        kfree+0xac\/0x350\n        hci_conn_cleanup+0x101\/0x6a0\n        hci_conn_del+0x27e\/0x6c0\n        hci_disconn_phylink_complete_evt+0xe0\/0x120\n        hci_event_packet+0x812\/0xe90\n        hci_rx_work+0x4d5\/0xc50\n        process_one_work+0x8fb\/0x15a0\n        worker_thread+0x576\/0x1240\n        kthread+0x29d\/0x340\n        ret_from_fork+0x1f\/0x30\n\n    The buggy address belongs to the object at ffff88800c0f0500\n    The buggy address is located 24 bytes inside of\n    which belongs to the cache kmalloc-128 of size 128\n    The buggy address belongs to the page:\n    128-byte region [ffff88800c0f0500, ffff88800c0f0580)\n    flags: 0x100000000000200(slab|node=0|zone=1)\n    page:00000000fe45cd86 refcount:1 mapcount:0\n    mapping:0000000000000000 index:0x0 pfn:0xc0f0\n    raw: 0000000000000000 0000000080100010 00000001ffffffff\n    0000000000000000\n    raw: 0100000000000200 ffffea00003a2c80 dead000000000004\n    ffff8880078418c0\n    page dumped because: kasan: bad access detected\n    ffff88800c0f0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 fc fc fc\n    Memory state around the buggy address:\n    >ffff88800c0f0500: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n    ffff88800c0f0480: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n    ffff88800c0f0580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                   \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cc803804ec9a296b3156855d6c8c4ca1c6b84be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3803d896ddd97c7c16689a5381c0960040727647","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4da302b90b96c309987eb9b37c8547f939f042d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/643a6c26bd32e339d00ad97b8822b6db009e803c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/684e505406abaeabe0058e9776f9210bf2747953","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c2ea1fd444b3bb7b82bfd2c3a45418f85c2502","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c41de54b0a963e59e4dd04c029a4a6d73f45ef9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d404765dffdbd8dcd14758695d0c96c52fb2e624","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f63d24baff787e13b723d86fe036f84bdbc35045","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49112","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.577","lastModified":"2025-02-26T07:00:48.577","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: fix monitor mode crash with sdio driver\n\nmt7921s driver may receive frames with fragment buffers. If there is a\nCTS packet received in monitor mode, the payload is 10 bytes only and\nneed 6 bytes header padding after RXD buffer. However, only RXD in the\nfirst linear buffer, if we pull buffer size RXD-size+6 bytes with\nskb_pull(), that would trigger \"BUG_ON(skb->len < skb->data_len)\" in\n__skb_pull().\n\nTo avoid the nonlinear buffer issue, enlarge the RXD size from 128 to\n256 to make sure all MCU operation in linear buffer.\n\n[   52.007562] kernel BUG at include\/linux\/skbuff.h:2313!\n[   52.007578] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP\n[   52.007987] pc : skb_pull+0x48\/0x4c\n[   52.008015] lr : mt7921_queue_rx_skb+0x494\/0x890 [mt7921_common]\n[   52.008361] Call trace:\n[   52.008377]  skb_pull+0x48\/0x4c\n[   52.008400]  mt76s_net_worker+0x134\/0x1b0 [mt76_sdio 35339a92c6eb7d4bbcc806a1d22f56365565135c]\n[   52.008431]  __mt76_worker_fn+0xe8\/0x170 [mt76 ef716597d11a77150bc07e3fdd68eeb0f9b56917]\n[   52.008449]  kthread+0x148\/0x3ac\n[   52.008466]  ret_from_fork+0x10\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/123bc712b1de0805f9d683687e17b1ec2aba0b68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13946d5a68efd11dd6af2f6ef4c908f6b00158a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95e2af01669c7a3cb7a933cefa06361f9db15059","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c37b4cab3d97ef64b206fca4d9daabd9aff7356e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49113","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.677","lastModified":"2025-02-26T07:00:48.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/secvar: fix refcount leak in format_show()\n\nRefcount leak will happen when format_show returns failure in multiple\ncases. Unified management of of_node_put can fix this problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02222bf4f0a27f6eba66d1f597cdb5daadd51829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a71e3ecd829a82013cf095c55068c61d991e885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c105ffb6b9744158e37e9f81f0f38861951d1c1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d05e4265d33af60b39606c20c731e3e719bfe3d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d601fd24e6964967f115f036a840f4f28488f63f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49114","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.773","lastModified":"2025-02-26T07:00:48.773","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix use after free in fc_exch_abts_resp()\n\nfc_exch_release(ep) will decrease the ep's reference count. When the\nreference count reaches zero, it is freed. But ep is still used in the\nfollowing code, which will lead to a use after free.\n\nReturn after the fc_exch_release() call to avoid use after free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d7effe5fff9d28e45e18ac3a564067c7ddfe898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/271add11994ba1a334859069367e04d2be2ebdd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/412dd8299b02e4410fe77b8396953c1a8dde183a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/499d198494e77b6533251b9b909baf5c101129cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a131d4ea8b581ac9b01d3a72754db4848be3232","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cf2ce8967b0d98c8cfa4dc42ef4fcf080f5c836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6044ad64f41c87382cfeeca281573d1886d80cbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87909291762d08fdb60d19069d7a89b5b308d0ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f581df412bc45c95176e3c808ee2839c05b2ab0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49115","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.873","lastModified":"2025-02-26T07:00:48.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: endpoint: Fix misused goto label\n\nFix a misused goto label jump since that can result in a memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/70236a0d2d62b081d52076de22d8d017d6cbe99f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c657c0694ff690e361a13ce41c36b9dfb433ec8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf8d87c076f55b8b4dfdb6bc6c6b6dc0c2ccb487","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3642fc64276b06446290f82fd45630aeaa4b007","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc9d33b2d8d09e6478e8ef817a81cf26930acc3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49116","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:48.967","lastModified":"2025-02-26T07:00:48.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: use memset avoid memory leaks\n\nUse memset to initialize structs to prevent memory leaks\nin l2cap_ecred_connect"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42b6a39f439b6f37cc2024d91ce547d83290ff78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9567d54e70ff58c2695c2cc2e53c86c67551d3e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3715b2333e9a21692ba16ef8645eda584a9515d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d588c183a971b85c775ad66da563ee6e8bc8158f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9e55acee9b7a737ec7f5161b94a78932a5514c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49117","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.057","lastModified":"2025-02-26T07:00:49.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmips: ralink: fix a refcount leak in ill_acc_of_setup()\n\nof_node_put(np) needs to be called when pdev == NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/060a485df4ec1183d543317511cb4caa43468b5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/142ae7d4f21524acfe073e5a3da5667aa85eb970","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a0a1436053b17e50b7c88858fb0824326641793","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fb47ca3490813d3884d8ad0b2ce511aa3537551","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d7f7ef7980f287ace1c15f2ac03d6754e12f071","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c74c755daed551b9aceb8388159180861474bdfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49118","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.150","lastModified":"2025-02-26T07:00:49.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Free irq vectors in order for v3 HW\n\nIf the driver probe fails to request the channel IRQ or fatal IRQ, the\ndriver will free the IRQ vectors before freeing the IRQs in free_irq(),\nand this will cause a kernel BUG like this:\n\n------------[ cut here ]------------\nkernel BUG at drivers\/pci\/msi.c:369!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP\nCall trace:\n   free_msi_irqs+0x118\/0x13c\n   pci_disable_msi+0xfc\/0x120\n   pci_free_irq_vectors+0x24\/0x3c\n   hisi_sas_v3_probe+0x360\/0x9d0 [hisi_sas_v3_hw]\n   local_pci_probe+0x44\/0xb0\n   work_for_cpu_fn+0x20\/0x34\n   process_one_work+0x1d0\/0x340\n   worker_thread+0x2e0\/0x460\n   kthread+0x180\/0x190\n   ret_from_fork+0x10\/0x20\n---[ end trace b88990335b610c11 ]---\n\nSo we use devm_add_action() to control the order in which we free the\nvectors."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/224903cc60d045576393c3b16907742f23e6c740","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/554fb72ee34f4732c7f694f56c3c6e67790352a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b6eab9d683bae7f88dc894b8c851f866032301c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4cc04fa8f1fc3816c8494d77abab3f72b9d2292","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f05a0d8de2ea49af36821a20b0b501e20ced937e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49119","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.250","lastModified":"2025-02-26T07:00:49.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix memory leak in pm8001_chip_fw_flash_update_req()\n\nIn pm8001_chip_fw_flash_update_build(), if\npm8001_chip_fw_flash_update_build() fails, the struct fw_control_ex\nallocated must be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a25ed5f21f94f9ae4bcc8dd747e978668890c921","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d83574666bac4b1462e90df393fbed6c5f57d1a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5ecdb01952f230921aa8163d8d7f4c97c925ed8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f792a3629f4c4aa4c3703d66b43ce1edcc3ec09a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe5b8ea5583b5c3f6f68e06acba50387edf3b5d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49120","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.350","lastModified":"2025-02-26T07:00:49.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix task leak in pm8001_send_abort_all()\n\nIn pm8001_send_abort_all(), make sure to free the allocated sas task\nif pm8001_tag_alloc() or pm8001_mpi_build_cmd() fail."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/146cae06d2682d7563732544be334e8e6d3862b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2051044d7901f1a9d7be95d0d32e53b88e9548f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2290dcad6f65864dec518fb2d5fb45f67d684150","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34c79d16ee69cb53288c202bb1ab0ba0130d9674","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f90a74892f3acf0cdec5844e90fc8686ca13e7d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49121","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.450","lastModified":"2025-02-26T07:00:49.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix tag leaks on error\n\nIn pm8001_chip_set_dev_state_req(), pm8001_chip_fw_flash_update_req(),\npm80xx_chip_phy_ctl_req() and pm8001_chip_reg_dev_req() add missing calls\nto pm8001_tag_free() to free the allocated tag when pm8001_mpi_build_cmd()\nfails.\n\nSimilarly, in pm8001_exec_internal_task_abort(), if the chip ->task_abort\nmethod fails, the tag allocated for the abort request task must be\nfreed. Add the missing call to pm8001_tag_free()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/43c617eefab7077d69f5989ad3e2a273da1d728b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c8f04b1905cd4b776d0b720463c091545478ef7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cc72bcc1c096ed42c91646f130d4b4191580a4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0bb65eadbf942024226241d9d99fed17168940b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdc74815f1c39905054b7d47399e0260b201b14d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49122","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.540","lastModified":"2025-02-26T07:00:49.540","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm ioctl: prevent potential spectre v1 gadget\n\nIt appears like cmd could be a Spectre v1 gadget as it's supplied by a\nuser and used as an array index. Prevent the contents of kernel memory\nfrom being leaked to userspace via speculative execution by using\narray_index_nospec."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02cc46f397eb3691c56affbd5073e54f7a82ac32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0320bac5801b31407200227173205d017488f140","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44e6cb3ab177faae840bb2c1ebda9a2539876184","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58880025e3362024f6d8ea01cb0c7a5df6c84ba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71c8df33fd777c7628f6fbc09b14e84806c55914","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76c94651005f58885facf9c973007f5ea01ab01f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ae2c5b89da3cfaf856df880af27d3bb32a74b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd9c88da171a62c4b0f1c70e50c75845969fbc18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd86064417de828ff2102ddc6049c829bf7585b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49123","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.640","lastModified":"2025-02-26T07:00:49.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: Fix frames flush failure caused by deadlock\n\nWe are seeing below warnings:\n\nkernel: [25393.301506] ath11k_pci 0000:01:00.0: failed to flush mgmt transmit queue 0\nkernel: [25398.421509] ath11k_pci 0000:01:00.0: failed to flush mgmt transmit queue 0\nkernel: [25398.421831] ath11k_pci 0000:01:00.0: dropping mgmt frame for vdev 0, is_started 0\n\nthis means ath11k fails to flush mgmt. frames because wmi_mgmt_tx_work\nhas no chance to run in 5 seconds.\n\nBy setting \/proc\/sys\/kernel\/hung_task_timeout_secs to 20 and increasing\nATH11K_FLUSH_TIMEOUT to 50 we get below warnings:\n\nkernel: [  120.763160] INFO: task wpa_supplicant:924 blocked for more than 20 seconds.\nkernel: [  120.763169]       Not tainted 5.10.90 #12\nkernel: [  120.763177] \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\nkernel: [  120.763186] task:wpa_supplicant  state:D stack:    0 pid:  924 ppid:     1 flags:0x000043a0\nkernel: [  120.763201] Call Trace:\nkernel: [  120.763214]  __schedule+0x785\/0x12fa\nkernel: [  120.763224]  ? lockdep_hardirqs_on_prepare+0xe2\/0x1bb\nkernel: [  120.763242]  schedule+0x7e\/0xa1\nkernel: [  120.763253]  schedule_timeout+0x98\/0xfe\nkernel: [  120.763266]  ? run_local_timers+0x4a\/0x4a\nkernel: [  120.763291]  ath11k_mac_flush_tx_complete+0x197\/0x2b1 [ath11k 13c3a9bf37790f4ac8103b3decf7ab4008ac314a]\nkernel: [  120.763306]  ? init_wait_entry+0x2e\/0x2e\nkernel: [  120.763343]  __ieee80211_flush_queues+0x167\/0x21f [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763378]  __ieee80211_recalc_idle+0x105\/0x125 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763411]  ieee80211_recalc_idle+0x14\/0x27 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763441]  ieee80211_free_chanctx+0x77\/0xa2 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763473]  __ieee80211_vif_release_channel+0x100\/0x131 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763540]  ieee80211_vif_release_channel+0x66\/0x81 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763572]  ieee80211_destroy_auth_data+0xa3\/0xe6 [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763612]  ieee80211_mgd_deauth+0x178\/0x29b [mac80211 335da900954f1c5ea7f1613d92088ce83342042c]\nkernel: [  120.763654]  cfg80211_mlme_deauth+0x1a8\/0x22c [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be]\nkernel: [  120.763697]  nl80211_deauthenticate+0xfa\/0x123 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be]\nkernel: [  120.763715]  genl_rcv_msg+0x392\/0x3c2\nkernel: [  120.763750]  ? nl80211_associate+0x432\/0x432 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be]\nkernel: [  120.763782]  ? nl80211_associate+0x432\/0x432 [cfg80211 8945aa5bc2af5f6972336665d8ad6f9c191ad5be]\nkernel: [  120.763802]  ? genl_rcv+0x36\/0x36\nkernel: [  120.763814]  netlink_rcv_skb+0x89\/0xf7\nkernel: [  120.763829]  genl_rcv+0x28\/0x36\nkernel: [  120.763840]  netlink_unicast+0x179\/0x24b\nkernel: [  120.763854]  netlink_sendmsg+0x393\/0x401\nkernel: [  120.763872]  sock_sendmsg+0x72\/0x76\nkernel: [  120.763886]  ____sys_sendmsg+0x170\/0x1e6\nkernel: [  120.763897]  ? copy_msghdr_from_user+0x7a\/0xa2\nkernel: [  120.763914]  ___sys_sendmsg+0x95\/0xd1\nkernel: [  120.763940]  __sys_sendmsg+0x85\/0xbf\nkernel: [  120.763956]  do_syscall_64+0x43\/0x55\nkernel: [  120.763966]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\nkernel: [  120.763977] RIP: 0033:0x79089f3fcc83\nkernel: [  120.763986] RSP: 002b:00007ffe604f0508 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nkernel: [  120.763997] RAX: ffffffffffffffda RBX: 000059b40e987690 RCX: 000079089f3fcc83\nkernel: [  120.764006] RDX: 0000000000000000 RSI: 00007ffe604f0558 RDI: 0000000000000009\nkernel: [  120.764014] RBP: 00007ffe604f0540 R08: 0000000000000004 R09: 0000000000400000\nkernel: [  120.764023] R10: 00007ffe604f0638 R11: 0000000000000246 R12: 000059b40ea04980\nkernel: [  120.764032] R13: 00007ffe604\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/261b07519518bd14cb168b287b17e1d195f8d0c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33e723dc054edfc94da90eecca3b72cb424ce4a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49124","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.740","lastModified":"2025-02-26T07:00:49.740","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/mce: Work around an erratum on fast string copy instructions\n\nA rare kernel panic scenario can happen when the following conditions\nare met due to an erratum on fast string copy instructions:\n\n1) An uncorrected error.\n2) That error must be in first cache line of a page.\n3) Kernel must execute page_copy from the page immediately before that\npage.\n\nThe fast string copy instructions (\"REP; MOVS*\") could consume an\nuncorrectable memory error in the cache line _right after_ the desired\nregion to copy and raise an MCE.\n\nBit 0 of MSR_IA32_MISC_ENABLE can be cleared to disable fast string\ncopy and will avoid such spurious machine checks. However, that is less\npreferable due to the permanent performance impact. Considering memory\npoison is rare, it's desirable to keep fast string copy enabled until an\nMCE is seen.\n\nIntel has confirmed the following:\n1. The CPU erratum of fast string copy only applies to Skylake,\nCascade Lake and Cooper Lake generations.\n\nDirectly return from the MCE handler:\n2. Will result in complete execution of the \"REP; MOVS*\" with no data\nloss or corruption.\n3. Will not result in another MCE firing on the next poisoned cache line\ndue to \"REP; MOVS*\".\n4. Will resume execution from a correct point in code.\n5. Will result in the same instruction that triggered the MCE firing a\nsecond MCE immediately for any other software recoverable data fetch\nerrors.\n6. Is not safe without disabling the fast string copy, as the next fast\nstring copy of the same buffer on the same CPU would result in a PANIC\nMCE.\n\nThis should mitigate the erratum completely with the only caveat that\nthe fast string copy is disabled on the affected hyper thread thus\nperformance degradation.\n\nThis is still better than the OS crashing on MCEs raised on an\nirrelevant process due to \"REP; MOVS*' accesses in a kernel context,\ne.g., copy_page.\n\n\nInjected errors on 1st cache line of 8 anonymous pages of process\n'proc1' and observed MCE consumption from 'proc2' with no panic\n(directly returned).\n\nWithout the fix, the host panicked within a few minutes on a\nrandom 'proc2' process due to kernel access from copy_page.\n\n  [ bp: Fix comment style + touch ups, zap an unlikely(), improve the\n    quirk function's readability. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ca97812c3c830573f965a07bbd84223e8c5f5bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba37c73be3d5632f6fb9fa20b250ce45560ca85d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49125","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.837","lastModified":"2025-02-26T07:00:49.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/sprd: fix potential NULL dereference\n\n'drm' could be null in sprd_drm_shutdown, and drm_warn maybe dereference\nit, remove this warning log.\n\n\nv1 -> v2:\n- Split checking platform_get_resource() return value to a separate patch\n- Use dev_warn() instead of removing the warning log"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8668658aebb0a19d877d5a81c004baf716c4aaa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3acc8db1bc221604e2db9807f01d8a44b97a64d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49126","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:49.927","lastModified":"2025-02-26T07:00:49.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix memory leaks\n\nFix memory leaks related to operational reply queue's memory segments which\nare not getting freed while unloading the driver."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27fc9e90171ab0a94a411f3fdb3522ef5acb9537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d76a88b8536d75ff5362e232097e85946b8aadf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71c7ac65a084ae7d387c3c1d02d59edfdecb009f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d44b5fefb22e139408ae12b864da1ecb9ad9d1d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49127","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.023","lastModified":"2025-02-26T07:00:50.023","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nref_tracker: implement use-after-free detection\n\nWhenever ref_tracker_dir_init() is called, mark the struct ref_tracker_dir\nas dead.\n\nTest the dead status from ref_tracker_alloc() and ref_tracker_free()\n\nThis should detect buggy dev_put()\/dev_hold() happening too late\nin netdevice dismantle process."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3743c9de303fa36c2e2ca2522ab280c52bcafbd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ececfe668facd87d920b608349a32607060e66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49128","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.113","lastModified":"2025-02-26T07:00:50.113","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/bridge: Add missing pm_runtime_put_sync\n\npm_runtime_get_sync() will increase the rumtime PM counter\neven when it returns an error. Thus a pairing decrement is needed\nto prevent refcount leak. Fix this by replacing this API with\npm_runtime_resume_and_get(), which will not change the runtime\nPM counter on error. Besides, a matching decrement is needed\non the error handling path to keep the counter balanced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46f47807738441e354873546dde0b000106c068a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/792533e54cd6e89191798ccd1abd590c62b9077e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9df80dc738926a2ea4bd1ce5993c3d0f4b0e855c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff13c90d7f7ab606b37be6d15140d19013d6736c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49129","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.203","lastModified":"2025-02-26T07:00:50.203","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt7921: fix crash when startup fails.\n\nIf the nic fails to start, it is possible that the\nreset_work has already been scheduled.  Ensure the\nwork item is canceled so we do not have use-after-free\ncrash in case cleanup is called before the work item\nis executed.\n\nThis fixes crash on my x86_64 apu2 when mt7921k radio\nfails to work.  Radio still fails, but OS does not\ncrash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38fbe806645090c07aa97171f20fc62c3d7d3a98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/827e7799c61b978fbc2cc9dac66cb62401b2b3f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac1260b661c2ef0d0a56680cdb5672b931b7be8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1a5e6002ec441a3b9fb4d048b4b49ae93409a46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49130","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.300","lastModified":"2025-02-26T07:00:50.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: mhi: use mhi_sync_power_up()\n\nIf amss.bin was missing ath11k would crash during 'rmmod ath11k_pci'. The\nreason for that was that we were using mhi_async_power_up() which does not\ncheck any errors. But mhi_sync_power_up() on the other hand does check for\nerrors so let's use that to fix the crash.\n\nI was not able to find a reason why an async version was used.\nath11k_mhi_start() (which enables state ATH11K_MHI_POWER_ON) is called from\nath11k_hif_power_up(), which can sleep. So sync version should be safe to use\nhere.\n\n[  145.569731] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN PTI\n[  145.569789] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n[  145.569843] CPU: 2 PID: 1628 Comm: rmmod Kdump: loaded Tainted: G        W         5.16.0-wt-ath+ #567\n[  145.569898] Hardware name: Intel(R) Client Systems NUC8i7HVK\/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05\/28\/2021\n[  145.569956] RIP: 0010:ath11k_hal_srng_access_begin+0xb5\/0x2b0 [ath11k]\n[  145.570028] Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 ec 01 00 00 48 8b ab a8 00 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 ea 48 c1 ea 03 <0f> b6 14 02 48 89 e8 83 e0 07 83 c0 03 45 85 ed 75 48 38 d0 7c 08\n[  145.570089] RSP: 0018:ffffc900025d7ac0 EFLAGS: 00010246\n[  145.570144] RAX: dffffc0000000000 RBX: ffff88814fca2dd8 RCX: 1ffffffff50cb455\n[  145.570196] RDX: 0000000000000000 RSI: ffff88814fca2dd8 RDI: ffff88814fca2e80\n[  145.570252] RBP: 0000000000000000 R08: 0000000000000000 R09: ffffffffa8659497\n[  145.570329] R10: fffffbfff50cb292 R11: 0000000000000001 R12: ffff88814fca0000\n[  145.570410] R13: 0000000000000000 R14: ffff88814fca2798 R15: ffff88814fca2dd8\n[  145.570465] FS:  00007fa399988540(0000) GS:ffff888233e00000(0000) knlGS:0000000000000000\n[  145.570519] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  145.570571] CR2: 00007fa399b51421 CR3: 0000000137898002 CR4: 00000000003706e0\n[  145.570623] Call Trace:\n[  145.570675]  <TASK>\n[  145.570727]  ? ath11k_ce_tx_process_cb+0x34b\/0x860 [ath11k]\n[  145.570797]  ath11k_ce_tx_process_cb+0x356\/0x860 [ath11k]\n[  145.570864]  ? tasklet_init+0x150\/0x150\n[  145.570919]  ? ath11k_ce_alloc_pipes+0x280\/0x280 [ath11k]\n[  145.570986]  ? tasklet_clear_sched+0x42\/0xe0\n[  145.571042]  ? tasklet_kill+0xe9\/0x1b0\n[  145.571095]  ? tasklet_clear_sched+0xe0\/0xe0\n[  145.571148]  ? irq_has_action+0x120\/0x120\n[  145.571202]  ath11k_ce_cleanup_pipes+0x45a\/0x580 [ath11k]\n[  145.571270]  ? ath11k_pci_stop+0x10e\/0x170 [ath11k_pci]\n[  145.571345]  ath11k_core_stop+0x8a\/0xc0 [ath11k]\n[  145.571434]  ath11k_core_deinit+0x9e\/0x150 [ath11k]\n[  145.571499]  ath11k_pci_remove+0xd2\/0x260 [ath11k_pci]\n[  145.571553]  pci_device_remove+0x9a\/0x1c0\n[  145.571605]  __device_release_driver+0x332\/0x660\n[  145.571659]  driver_detach+0x1e7\/0x2c0\n[  145.571712]  bus_remove_driver+0xe2\/0x2d0\n[  145.571772]  pci_unregister_driver+0x21\/0x250\n[  145.571826]  __do_sys_delete_module+0x30a\/0x4b0\n[  145.571879]  ? free_module+0xac0\/0xac0\n[  145.571933]  ? lockdep_hardirqs_on_prepare.part.0+0x18c\/0x370\n[  145.571986]  ? syscall_enter_from_user_mode+0x1d\/0x50\n[  145.572039]  ? lockdep_hardirqs_on+0x79\/0x100\n[  145.572097]  do_syscall_64+0x3b\/0x90\n[  145.572153]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20d01a11efde2e05e47d5c66101f5c26eaca68e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/339bd0b55ecdd0f7f341e9357c4cfde799de9418","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3df6d74aedfdca919cca475d15dfdbc8b05c9e5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fd7d50384c3808b7f7fa135aa9bb5feb1cb9849","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/646d533af2911be1184eaee8c900b7eb8ecc4396","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49131","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.393","lastModified":"2025-02-26T07:00:50.393","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: fix kernel panic during unload\/load ath11k modules\n\nCall netif_napi_del() from ath11k_ahb_free_ext_irq() to fix\nthe following kernel panic when unload\/load ath11k modules\nfor few iterations.\n\n[  971.201365] Unable to handle kernel paging request at virtual address 6d97a208\n[  971.204227] pgd = 594c2919\n[  971.211478] [6d97a208] *pgd=00000000\n[  971.214120] Internal error: Oops: 5 [#1] PREEMPT SMP ARM\n[  971.412024] CPU: 2 PID: 4435 Comm: insmod Not tainted 5.4.89 #0\n[  971.434256] Hardware name: Generic DT based system\n[  971.440165] PC is at napi_by_id+0x10\/0x40\n[  971.445019] LR is at netif_napi_add+0x160\/0x1dc\n\n[  971.743127] (napi_by_id) from [<807d89a0>] (netif_napi_add+0x160\/0x1dc)\n[  971.751295] (netif_napi_add) from [<7f1209ac>] (ath11k_ahb_config_irq+0xf8\/0x414 [ath11k_ahb])\n[  971.759164] (ath11k_ahb_config_irq [ath11k_ahb]) from [<7f12135c>] (ath11k_ahb_probe+0x40c\/0x51c [ath11k_ahb])\n[  971.768567] (ath11k_ahb_probe [ath11k_ahb]) from [<80666864>] (platform_drv_probe+0x48\/0x94)\n[  971.779670] (platform_drv_probe) from [<80664718>] (really_probe+0x1c8\/0x450)\n[  971.789389] (really_probe) from [<80664cc4>] (driver_probe_device+0x15c\/0x1b8)\n[  971.797547] (driver_probe_device) from [<80664f60>] (device_driver_attach+0x44\/0x60)\n[  971.805795] (device_driver_attach) from [<806650a0>] (__driver_attach+0x124\/0x140)\n[  971.814822] (__driver_attach) from [<80662adc>] (bus_for_each_dev+0x58\/0xa4)\n[  971.823328] (bus_for_each_dev) from [<80663a2c>] (bus_add_driver+0xf0\/0x1e8)\n[  971.831662] (bus_add_driver) from [<806658a4>] (driver_register+0xa8\/0xf0)\n[  971.839822] (driver_register) from [<8030269c>] (do_one_initcall+0x78\/0x1ac)\n[  971.847638] (do_one_initcall) from [<80392524>] (do_init_module+0x54\/0x200)\n[  971.855968] (do_init_module) from [<803945b0>] (load_module+0x1e30\/0x1ffc)\n[  971.864126] (load_module) from [<803948b0>] (sys_init_module+0x134\/0x17c)\n[  971.871852] (sys_init_module) from [<80301000>] (ret_fast_syscall+0x0\/0x50)\n\nTested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.6.0.1-00760-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22b59cb965f79ee1accf83172441c9ca0ecb632a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38e488db194dc16d2eb23c77c6a8c04ff583c40d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/699e8c87e5c406af0f0606f40eeebd248c51b702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4b7653af62a9a5efe2856183d1f987c5429758b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6a815f5abdf324108799829dd19ea62fef4bf95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49132","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.497","lastModified":"2025-02-26T07:00:50.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: pci: fix crash on suspend if board file is not found\n\nMario reported that the kernel was crashing on suspend if ath11k was not able\nto find a board file:\n\n[  473.693286] PM: Suspending system (s2idle)\n[  473.693291] printk: Suspending console(s) (use no_console_suspend to debug)\n[  474.407787] BUG: unable to handle page fault for address: 0000000000002070\n[  474.407791] #PF: supervisor read access in kernel mode\n[  474.407794] #PF: error_code(0x0000) - not-present page\n[  474.407798] PGD 0 P4D 0\n[  474.407801] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[  474.407805] CPU: 2 PID: 2350 Comm: kworker\/u32:14 Tainted: G        W         5.16.0 #248\n[...]\n[  474.407868] Call Trace:\n[  474.407870]  <TASK>\n[  474.407874]  ? _raw_spin_lock_irqsave+0x2a\/0x60\n[  474.407882]  ? lock_timer_base+0x72\/0xa0\n[  474.407889]  ? _raw_spin_unlock_irqrestore+0x29\/0x3d\n[  474.407892]  ? try_to_del_timer_sync+0x54\/0x80\n[  474.407896]  ath11k_dp_rx_pktlog_stop+0x49\/0xc0 [ath11k]\n[  474.407912]  ath11k_core_suspend+0x34\/0x130 [ath11k]\n[  474.407923]  ath11k_pci_pm_suspend+0x1b\/0x50 [ath11k_pci]\n[  474.407928]  pci_pm_suspend+0x7e\/0x170\n[  474.407935]  ? pci_pm_freeze+0xc0\/0xc0\n[  474.407939]  dpm_run_callback+0x4e\/0x150\n[  474.407947]  __device_suspend+0x148\/0x4c0\n[  474.407951]  async_suspend+0x20\/0x90\ndmesg-efi-164255130401001:\nOops#1 Part1\n[  474.407955]  async_run_entry_fn+0x33\/0x120\n[  474.407959]  process_one_work+0x220\/0x3f0\n[  474.407966]  worker_thread+0x4a\/0x3d0\n[  474.407971]  kthread+0x17a\/0x1a0\n[  474.407975]  ? process_one_work+0x3f0\/0x3f0\n[  474.407979]  ? set_kthread_struct+0x40\/0x40\n[  474.407983]  ret_from_fork+0x22\/0x30\n[  474.407991]  <\/TASK>\n\nThe issue here is that board file loading happens after ath11k_pci_probe()\nsuccesfully returns (ath11k initialisation happends asynchronously) and the\nsuspend handler is still enabled, of course failing as ath11k is not properly\ninitialised. Fix this by checking ATH11K_FLAG_QMI_FAIL during both suspend and\nresume.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aeed776c00e804a0f7896db39c7c661cea34ee1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f4c56459a5c744f7f066b9fc2b54ea995030c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3c5ef433da82d257337424b3647ce9dcb37d4b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fed4cef115ab21a18faf499b3fa9b9a4b544f941","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49133","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.590","lastModified":"2025-02-26T07:00:50.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: svm range restore work deadlock when process exit\n\nkfd_process_notifier_release flush svm_range_restore_work\nwhich calls svm_range_list_lock_and_flush_work to flush deferred_list\nwork, but if deferred_list work mmput release the last user, it will\ncall exit_mmap -> notifier_release, it is deadlock with below backtrace.\n\nMove flush svm_range_restore_work to kfd_process_wq_release to avoid\ndeadlock. Then svm_range_restore_work take task->mm ref to avoid mm is\ngone while validating and mapping ranges to GPU.\n\nWorkqueue: events svm_range_deferred_list_work [amdgpu]\nCall Trace:\n wait_for_completion+0x94\/0x100\n __flush_work+0x12a\/0x1e0\n __cancel_work_timer+0x10e\/0x190\n cancel_delayed_work_sync+0x13\/0x20\n kfd_process_notifier_release+0x98\/0x2a0 [amdgpu]\n __mmu_notifier_release+0x74\/0x1f0\n exit_mmap+0x170\/0x200\n mmput+0x5d\/0x130\n svm_range_deferred_list_work+0x104\/0x230 [amdgpu]\n process_one_work+0x220\/0x3c0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6225bb3a88d22594aacea2485dc28ca12d596721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/858822905f4bf44100d63c5e22e263109976f7cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6be83086e91891081e0589e4b4645bf4643e897","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49134","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.680","lastModified":"2025-02-26T07:00:50.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum: Guard against invalid local ports\n\nWhen processing events generated by the device's firmware, the driver\nprotects itself from events reported for non-existent local ports, but\nnot for the CPU port (local port 0), which exists, but does not have all\nthe fields as any local port.\n\nThis can result in a NULL pointer dereference when trying access\n'struct mlxsw_sp_port' fields which are not initialized for CPU port.\n\nCommit 63b08b1f6834 (\"mlxsw: spectrum: Protect driver from buggy firmware\")\nalready handled such issue by bailing early when processing a PUDE event\nreported for the CPU port.\n\nGeneralize the approach by moving the check to a common function and\nmaking use of it in all relevant places."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4cad27ba2e5a5843a7fab5aa30de2b8e8c3db3a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcdfd615f83b4bd04678109bf18022d1476e4bbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49135","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.770","lastModified":"2025-02-26T07:00:50.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix memory leak\n\n[why]\nResource release is needed on the error handling path\nto prevent memory leak.\n\n[how]\nFix this by adding kfree on the error handling path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ce1497add6d17b48cc9df65095bd20202d93994","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d5c6dba2b43e28845d7d7ed32a36802329a5f52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e10369c72db7a0e2f77b2e306aadc07aef6b07a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d0bef3cc22cf250278ed45b829f062a00af9e27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49136","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.867","lastModified":"2025-02-26T07:00:50.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_sync: Fix queuing commands when HCI_UNREGISTER is set\n\nhci_cmd_sync_queue shall return an error if HCI_UNREGISTER flag has\nbeen set as that means hci_unregister_dev has been called so it will\nlikely cause a uaf after the timeout as the hdev will be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b94f2651f56b9e4aa5f012b0d7eb57308c773cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c69ef84a808676cceb69210addf5df45b741323","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49137","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:50.953","lastModified":"2025-02-26T07:00:50.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/amdgpu\/amdgpu_cs: fix refcount leak of a dma_fence obj\n\nThis issue takes place in an error path in\namdgpu_cs_fence_to_handle_ioctl(). When `info->in.what` falls into\ndefault case, the function simply returns -EINVAL, forgetting to\ndecrement the reference count of a dma_fence obj, which is bumped\nearlier by amdgpu_cs_get_fence(). This may result in reference count\nleaks.\n\nFix it by decreasing the refcount of specific object before returning\nthe error code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3edd8646cb7c11b57c90e026bda6f21076223f5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4009f104b02b223d1a11d74b36b1cc083bc37028","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72d77ddb2224ebc00648f4f78f8a9a259dccbdf7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927beb05aaa429c883cc0ec6adc48964b187e291","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6d1f7d97c81ebaf2cda9c4c943ee2e484fffdcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc2d5c0775c839e2b072884f4ee6a93ba410f107","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfced44f122c500004a48ecc8db516bb6a295a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49138","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.047","lastModified":"2025-02-26T07:00:51.047","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_event: Ignore multiple conn complete events\n\nWhen one of the three connection complete events is received multiple\ntimes for the same handle, the device is registered multiple times which\nleads to memory corruptions. Therefore, consequent events for a single\nconnection are ignored.\n\nThe conn->state can hold different values, therefore HCI_CONN_HANDLE_UNSET\nis introduced to identify new connections. To make sure the events do not\ncontain this or another invalid handle HCI_CONN_HANDLE_MAX and checks\nare introduced.\n\nBuglink: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215497"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aa1ca580e3ffe62a2c5ea1c095b609b2943c5269","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5ebaa7c5f6f688959e8d40840b2249ede63b8ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49139","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.133","lastModified":"2025-02-26T07:00:51.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: fix null ptr deref on hci_sync_conn_complete_evt\n\nThis event is just specified for SCO and eSCO link types.\nOn the reception of a HCI_Synchronous_Connection_Complete for a BDADDR\nof an existing LE connection, LE link type and a status that triggers the\nsecond case of the packet processing a NULL pointer dereference happens,\nas conn->link is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f9db1209f59844839175b5b907d3778cafde93d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c1291a84e94f6501644634c97544bb8291e9a1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3afee2118132e93e5f6fa636dfde86201a860ab3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1aa0dd52db4ce888be0bd820c3fa918d350ca0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f61c23e73dc653b957781066abfa8105c3fa3f5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49140","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.240","lastModified":"2025-02-27T02:15:09.193","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49141","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.327","lastModified":"2025-02-26T07:00:51.327","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: felix: fix possible NULL pointer dereference\n\nAs the possible failure of the allocation, kzalloc() may return NULL\npointer.\nTherefore, it should be better to check the 'sgi' in order to prevent\nthe dereference of NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/866b7a278cdb51eb158cd8513bc7438fc857804a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7ff8b5e75d4e91ec8c62d621aac8dfb84c57aa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49142","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.420","lastModified":"2025-02-26T07:00:51.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: preserve skb_end_offset() in skb_unclone_keeptruesize()\n\nsyzbot found another way to trigger the infamous WARN_ON_ONCE(delta < len)\nin skb_try_coalesce() [1]\n\nI was able to root cause the issue to kfence.\n\nWhen kfence is in action, the following assertion is no longer true:\n\nint size = xxxx;\nvoid *ptr1 = kmalloc(size, gfp);\nvoid *ptr2 = kmalloc(size, gfp);\n\nif (ptr1 && ptr2)\n\tASSERT(ksize(ptr1) == ksize(ptr2));\n\nWe attempted to fix these issues in the blamed commits, but forgot\nthat TCP was possibly shifting data after skb_unclone_keeptruesize()\nhas been used, notably from tcp_retrans_try_collapse().\n\nSo we not only need to keep same skb->truesize value,\nwe also need to make sure TCP wont fill new tailroom\nthat pskb_expand_head() was able to get from a\naddr = kmalloc(...) followed by ksize(addr)\n\nSplit skb_unclone_keeptruesize() into two parts:\n\n1) Inline skb_unclone_keeptruesize() for the common case,\n   when skb is not cloned.\n\n2) Out of line __skb_unclone_keeptruesize() for the 'slow path'.\n\nWARNING: CPU: 1 PID: 6490 at net\/core\/skbuff.c:5295 skb_try_coalesce+0x1235\/0x1560 net\/core\/skbuff.c:5295\nModules linked in:\nCPU: 1 PID: 6490 Comm: syz-executor161 Not tainted 5.17.0-rc4-syzkaller-00229-g4f12b742eb2b #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:skb_try_coalesce+0x1235\/0x1560 net\/core\/skbuff.c:5295\nCode: bf 01 00 00 00 0f b7 c0 89 c6 89 44 24 20 e8 62 24 4e fa 8b 44 24 20 83 e8 01 0f 85 e5 f0 ff ff e9 87 f4 ff ff e8 cb 20 4e fa <0f> 0b e9 06 f9 ff ff e8 af b2 95 fa e9 69 f0 ff ff e8 95 b2 95 fa\nRSP: 0018:ffffc900063af268 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 00000000ffffffd5 RCX: 0000000000000000\nRDX: ffff88806fc05700 RSI: ffffffff872abd55 RDI: 0000000000000003\nRBP: ffff88806e675500 R08: 00000000ffffffd5 R09: 0000000000000000\nR10: ffffffff872ab659 R11: 0000000000000000 R12: ffff88806dd554e8\nR13: ffff88806dd9bac0 R14: ffff88806dd9a2c0 R15: 0000000000000155\nFS:  00007f18014f9700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020002000 CR3: 000000006be7a000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n tcp_try_coalesce net\/ipv4\/tcp_input.c:4651 [inline]\n tcp_try_coalesce+0x393\/0x920 net\/ipv4\/tcp_input.c:4630\n tcp_queue_rcv+0x8a\/0x6e0 net\/ipv4\/tcp_input.c:4914\n tcp_data_queue+0x11fd\/0x4bb0 net\/ipv4\/tcp_input.c:5025\n tcp_rcv_established+0x81e\/0x1ff0 net\/ipv4\/tcp_input.c:5947\n tcp_v4_do_rcv+0x65e\/0x980 net\/ipv4\/tcp_ipv4.c:1719\n sk_backlog_rcv include\/net\/sock.h:1037 [inline]\n __release_sock+0x134\/0x3b0 net\/core\/sock.c:2779\n release_sock+0x54\/0x1b0 net\/core\/sock.c:3311\n sk_wait_data+0x177\/0x450 net\/core\/sock.c:2821\n tcp_recvmsg_locked+0xe28\/0x1fd0 net\/ipv4\/tcp.c:2457\n tcp_recvmsg+0x137\/0x610 net\/ipv4\/tcp.c:2572\n inet_recvmsg+0x11b\/0x5e0 net\/ipv4\/af_inet.c:850\n sock_recvmsg_nosec net\/socket.c:948 [inline]\n sock_recvmsg net\/socket.c:966 [inline]\n sock_recvmsg net\/socket.c:962 [inline]\n ____sys_recvmsg+0x2c4\/0x600 net\/socket.c:2632\n ___sys_recvmsg+0x127\/0x200 net\/socket.c:2674\n __sys_recvmsg+0xe2\/0x1a0 net\/socket.c:2704\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23629b673b780d967b88a850b1518cf0f0ffc6aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b88cba55883eaafbc9b7cbff0b2c7cdba71ed01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a903e516f5df44b46d526b403d93e7be1a425538","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9a6d30264327d8ff7f23da33e7a77ffb793fa3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49143","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.513","lastModified":"2025-02-26T15:15:15.857","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49144","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.600","lastModified":"2025-02-26T07:00:51.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: fix memory leak of uid in files registration\n\nWhen there are no files for __io_sqe_files_scm() to process in the\nrange, it'll free everything and return. However, it forgets to put uid."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0853bd6885c2f293d88aaa7f7f1702c959b31680","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa8b228c3f30060b9f4b24bb9aaaf41b0ae83fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b27de7011cb3ba14b047be2cee0ed8278368665b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c86d18f4aa93e0e66cda0e55827cd03eea6bc5f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6d7a517e81accf6ed22d55684baea763d2dbe43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49145","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.693","lastModified":"2025-02-26T07:00:51.693","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Avoid out of bounds access when parsing _CPC data\n\nIf the NumEntries field in the _CPC return package is less than 2, do\nnot attempt to access the \"Revision\" element of that package, because\nit may not be present then.\n\nBugLink: https:\/\/lore.kernel.org\/lkml\/20220322143534.GC32582@xsang-OptiPlex-9020\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28d5387c1994f5e1e0d41b30a1f3dd6e1f609252","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40d8abf364bcab23bc715a9221a3c8623956257b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97b5593fd1b182b3fdb180b6bbe64ec09669988b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3f15609ffa521de12244cd6af24002030dda3f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b80b19b32a432c9eee1cd200ef7aaddf608f54d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb249f8c00f40dba83b7da8207ac14ca46e9ec9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d208ea44e25b31db5a4d5e8c31df51787a3e9303","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7339f2a3938fb56b5f28d53f5345900b5fa0e74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5b681822cac1f8093759b02e16c06b2c64b6788","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49146","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.793","lastModified":"2025-02-26T07:00:51.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio: use virtio_device_ready() in virtio_device_restore()\n\nAfter waking up a suspended VM, the kernel prints the following trace\nfor virtio drivers which do not directly call virtio_device_ready() in\nthe .restore:\n\n    PM: suspend exit\n    irq 22: nobody cared (try booting with the \"irqpoll\" option)\n    Call Trace:\n     <IRQ>\n     dump_stack_lvl+0x38\/0x49\n     dump_stack+0x10\/0x12\n     __report_bad_irq+0x3a\/0xaf\n     note_interrupt.cold+0xb\/0x60\n     handle_irq_event+0x71\/0x80\n     handle_fasteoi_irq+0x95\/0x1e0\n     __common_interrupt+0x6b\/0x110\n     common_interrupt+0x63\/0xe0\n     asm_common_interrupt+0x1e\/0x40\n     ? __do_softirq+0x75\/0x2f3\n     irq_exit_rcu+0x93\/0xe0\n     sysvec_apic_timer_interrupt+0xac\/0xd0\n     <\/IRQ>\n     <TASK>\n     asm_sysvec_apic_timer_interrupt+0x12\/0x20\n     arch_cpu_idle+0x12\/0x20\n     default_idle_call+0x39\/0xf0\n     do_idle+0x1b5\/0x210\n     cpu_startup_entry+0x20\/0x30\n     start_secondary+0xf3\/0x100\n     secondary_startup_64_no_verify+0xc3\/0xcb\n     <\/TASK>\n    handlers:\n    [<000000008f9bac49>] vp_interrupt\n    [<000000008f9bac49>] vp_interrupt\n    Disabling IRQ #22\n\nThis happens because we don't invoke .enable_cbs callback in\nvirtio_device_restore(). That callback is used by some transports\n(e.g. virtio-pci) to enable interrupts.\n\nLet's fix it, by calling virtio_device_ready() as we do in\nvirtio_dev_probe(). This function calls .enable_cts callback and sets\nDRIVER_OK status bit.\n\nThis fix also avoids setting DRIVER_OK twice for those drivers that\ncall virtio_device_ready() in the .restore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ae431113179d72c668b61df320af0c06d1aa5c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d65bc9a5be3f23c5e2ab36b6b8ef40095165b18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94e9f5da39ee5f8ea31be1585de31c54f10dedce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49147","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.887","lastModified":"2025-02-26T07:00:51.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix the maximum minor value is blk_alloc_ext_minor()\n\nida_alloc_range(..., min, max, ...) returns values from min to max,\ninclusive.\n\nSo, NR_EXT_DEVT is a valid idx returned by blk_alloc_ext_minor().\n\nThis is an issue because in device_add_disk(), this value is used in:\n   ddev->devt = MKDEV(disk->major, disk->first_minor);\nand NR_EXT_DEVT is '(1 << MINORBITS)'.\n\nSo, should 'disk->first_minor' be NR_EXT_DEVT, it would overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f8cf8f5ccbad25ed6828875b222dbab29d5c272","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b9ac3727e4abb11c9cfbe9c0781fc05dfdd7cfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1868328dec5ae2cf210111025fcbc71f78dd5ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbe2cc4525480ddd20c866bb5c0578071e01451a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49148","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:51.973","lastModified":"2025-02-26T07:00:51.973","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatch_queue: Free the page array when watch_queue is dismantled\n\nCommit 7ea1a0124b6d (\"watch_queue: Free the alloc bitmap when the\nwatch_queue is torn down\") took care of the bitmap, but not the page\narray.\n\n  BUG: memory leak\n  unreferenced object 0xffff88810d9bc140 (size 32):\n  comm \"syz-executor335\", pid 3603, jiffies 4294946994 (age 12.840s)\n  hex dump (first 32 bytes):\n    40 a7 40 04 00 ea ff ff 00 00 00 00 00 00 00 00  @.@.............\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n     kmalloc_array include\/linux\/slab.h:621 [inline]\n     kcalloc include\/linux\/slab.h:652 [inline]\n     watch_queue_set_size+0x12f\/0x2e0 kernel\/watch_queue.c:251\n     pipe_ioctl+0x82\/0x140 fs\/pipe.c:632\n     vfs_ioctl fs\/ioctl.c:51 [inline]\n     __do_sys_ioctl fs\/ioctl.c:874 [inline]\n     __se_sys_ioctl fs\/ioctl.c:860 [inline]\n     __x64_sys_ioctl+0xfc\/0x140 fs\/ioctl.c:860\n     do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/375cd2536494cfbcdda84ae8b3e35bf19d0250b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3963a5d1ff75585bddf0c3a918566a6be09d7520","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4913daecd04addb41bc96a9175a885e1c19862a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7169f60110915c8b53bffd43741fa020a75eb87a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b490207017ba237d97b735b2aa66dc241ccd18f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49149","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.073","lastModified":"2025-02-26T07:00:52.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix call timer start racing with call destruction\n\nThe rxrpc_call struct has a timer used to handle various timed events\nrelating to a call.  This timer can get started from the packet input\nroutines that are run in softirq mode with just the RCU read lock held.\nUnfortunately, because only the RCU read lock is held - and neither ref or\nother lock is taken - the call can start getting destroyed at the same time\na packet comes in addressed to that call.  This causes the timer - which\nwas already stopped - to get restarted.  Later, the timer dispatch code may\nthen oops if the timer got deallocated first.\n\nFix this by trying to take a ref on the rxrpc_call struct and, if\nsuccessful, passing that ref along to the timer.  If the timer was already\nrunning, the ref is discarded.\n\nThe timer completion routine can then pass the ref along to the call's work\nitem when it queues it.  If the timer or work item where already\nqueued\/running, the extra ref is discarded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/051360e51341cd17738d82c15a8226010c7cb7f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a7f62f91933c8ae5308f9127fd8ea48188b6bc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54df5a37f1d951ed27fd47bf9b15a42279582110","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e3c11144e557a9dbf9a2f6abe444689ef9d8aae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cbf4ae7a2833767d63114573e5f9a45740cc975","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49150","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.203","lastModified":"2025-02-26T07:00:52.203","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: gamecube: Fix refcount leak in gamecube_rtc_read_offset_from_sram\n\nThe of_find_compatible_node() function returns a node pointer with\nrefcount incremented, We should use of_node_put() on it when done\nAdd the missing of_node_put() to release the refcount."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b2dc39ca024990abe36ad5d145c4fe0c06afd34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de66e4f28dfd11f954966c447b4430529ed040a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49151","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.330","lastModified":"2025-02-26T07:00:52.330","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: mcba_usb: properly check endpoint type\n\nSyzbot reported warning in usb_submit_urb() which is caused by wrong\nendpoint type. We should check that in endpoint is actually present to\nprevent this warning.\n\nFound pipes are now saved to struct mcba_priv and code uses them\ndirectly instead of making pipes in place.\n\nFail log:\n\n| usb 5-1: BOGUS urb xfer, pipe 3 != type 1\n| WARNING: CPU: 1 PID: 49 at drivers\/usb\/core\/urb.c:502 usb_submit_urb+0xed2\/0x18a0 drivers\/usb\/core\/urb.c:502\n| Modules linked in:\n| CPU: 1 PID: 49 Comm: kworker\/1:2 Not tainted 5.17.0-rc6-syzkaller-00184-g38f80f42147f #0\n| Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04\/01\/2014\n| Workqueue: usb_hub_wq hub_event\n| RIP: 0010:usb_submit_urb+0xed2\/0x18a0 drivers\/usb\/core\/urb.c:502\n| ...\n| Call Trace:\n|  <TASK>\n|  mcba_usb_start drivers\/net\/can\/usb\/mcba_usb.c:662 [inline]\n|  mcba_usb_probe+0x8a3\/0xc50 drivers\/net\/can\/usb\/mcba_usb.c:858\n|  usb_probe_interface+0x315\/0x7f0 drivers\/usb\/core\/driver.c:396\n|  call_driver_probe drivers\/base\/dd.c:517 [inline]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/136bed0bfd3bc9c95c88aafff2d22ecb3a919f23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5598442edc29e8f6f2380e4b471dc1a3fcd80508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88272b4a37913bdf6f339162a7920bd8e9b49de2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b48d1bb3f1ca337ad653022aefb5a40a47dfe5cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbd110b8dd7ad763bf413f71c0484116ae9302d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef0acc514123140157b19a9ff2e2de5d91d612bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2ec3cd0f34f8c3f94bc21fbba14868301c9c49d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa9c1f14002dc0d5293e16a2007bd89b6e79207b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49152","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.440","lastModified":"2025-02-26T07:00:52.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nXArray: Fix xas_create_range() when multi-order entry present\n\nIf there is already an entry present that is of order >= XA_CHUNK_SHIFT\nwhen we call xas_create_range(), xas_create_range() will misinterpret\nthat entry as a node and dereference xa_node->parent, generally leading\nto a crash that looks something like this:\n\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000001:\n0000 [#1] PREEMPT SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\nCPU: 0 PID: 32 Comm: khugepaged Not tainted 5.17.0-rc8-syzkaller-00003-g56e337f2cf13 #0\nRIP: 0010:xa_parent_locked include\/linux\/xarray.h:1207 [inline]\nRIP: 0010:xas_create_range+0x2d9\/0x6e0 lib\/xarray.c:725\n\nIt's deterministically reproducable once you know what the problem is,\nbut producing it in a live kernel requires khugepaged to hit a race.\nWhile the problem has been present since xas_create_range() was\nintroduced, I'm not aware of a way to hit it before the page cache was\nconverted to use multi-index entries."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18f13edf3424b3b61814b69d5269b2e14584800c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ac49c8fd49fdf53d3cd8b77eb8ffda08d7fbe22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29968329b926d238e3107ec071a250397555d264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e2852eda19ee1a400cd809d7a9322680f34a262","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e3c658055c002900982513e289398a1aad4a488","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7521a97b1929042604bef6859f62fa8b4bbc077b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49153","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.533","lastModified":"2025-02-26T07:00:52.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwireguard: socket: free skb in send6 when ipv6 is disabled\n\nI got a memory leak report:\n\nunreferenced object 0xffff8881191fc040 (size 232):\n  comm \"kworker\/u17:0\", pid 23193, jiffies 4295238848 (age 3464.870s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff814c3ef4>] slab_post_alloc_hook+0x84\/0x3b0\n    [<ffffffff814c8977>] kmem_cache_alloc_node+0x167\/0x340\n    [<ffffffff832974fb>] __alloc_skb+0x1db\/0x200\n    [<ffffffff82612b5d>] wg_socket_send_buffer_to_peer+0x3d\/0xc0\n    [<ffffffff8260e94a>] wg_packet_send_handshake_initiation+0xfa\/0x110\n    [<ffffffff8260ec81>] wg_packet_handshake_send_worker+0x21\/0x30\n    [<ffffffff8119c558>] process_one_work+0x2e8\/0x770\n    [<ffffffff8119ca2a>] worker_thread+0x4a\/0x4b0\n    [<ffffffff811a88e0>] kthread+0x120\/0x160\n    [<ffffffff8100242f>] ret_from_fork+0x1f\/0x30\n\nIn function wg_socket_send_buffer_as_reply_to_skb() or wg_socket_send_\nbuffer_to_peer(), the semantics of send6() is required to free skb. But\nwhen CONFIG_IPV6 is disable, kfree_skb() is missing. This patch adds it\nto fix this bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/096f9d35cac0a0c95ffafc00db84786b665a4837","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b19bcb753dbfb74710d12bb2761ec5ed706c726","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/402991a9771587acc2947cf6c4d689c5397f2258","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbbf962d9460194993ee1943a793a0a0af4a7fbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebcc492f4ba14bae54b898f1016a37b4282558d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49154","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.627","lastModified":"2025-02-26T07:00:52.627","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: fix panic on out-of-bounds guest IRQ\n\nAs guest_irq is coming from KVM_IRQFD API call, it may trigger\ncrash in svm_update_pi_irte() due to out-of-bounds:\n\ncrash> bt\nPID: 22218  TASK: ffff951a6ad74980  CPU: 73  COMMAND: \"vcpu8\"\n #0 [ffffb1ba6707fa40] machine_kexec at ffffffff8565b397\n #1 [ffffb1ba6707fa90] __crash_kexec at ffffffff85788a6d\n #2 [ffffb1ba6707fb58] crash_kexec at ffffffff8578995d\n #3 [ffffb1ba6707fb70] oops_end at ffffffff85623c0d\n #4 [ffffb1ba6707fb90] no_context at ffffffff856692c9\n #5 [ffffb1ba6707fbf8] exc_page_fault at ffffffff85f95b51\n #6 [ffffb1ba6707fc50] asm_exc_page_fault at ffffffff86000ace\n    [exception RIP: svm_update_pi_irte+227]\n    RIP: ffffffffc0761b53  RSP: ffffb1ba6707fd08  RFLAGS: 00010086\n    RAX: ffffb1ba6707fd78  RBX: ffffb1ba66d91000  RCX: 0000000000000001\n    RDX: 00003c803f63f1c0  RSI: 000000000000019a  RDI: ffffb1ba66db2ab8\n    RBP: 000000000000019a   R8: 0000000000000040   R9: ffff94ca41b82200\n    R10: ffffffffffffffcf  R11: 0000000000000001  R12: 0000000000000001\n    R13: 0000000000000001  R14: ffffffffffffffcf  R15: 000000000000005f\n    ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n #7 [ffffb1ba6707fdb8] kvm_irq_routing_update at ffffffffc09f19a1 [kvm]\n #8 [ffffb1ba6707fde0] kvm_set_irq_routing at ffffffffc09f2133 [kvm]\n #9 [ffffb1ba6707fe18] kvm_vm_ioctl at ffffffffc09ef544 [kvm]\n    RIP: 00007f143c36488b  RSP: 00007f143a4e04b8  RFLAGS: 00000246\n    RAX: ffffffffffffffda  RBX: 00007f05780041d0  RCX: 00007f143c36488b\n    RDX: 00007f05780041d0  RSI: 000000004008ae6a  RDI: 0000000000000020\n    RBP: 00000000000004e8   R8: 0000000000000008   R9: 00007f05780041e0\n    R10: 00007f0578004560  R11: 0000000000000246  R12: 00000000000004e0\n    R13: 000000000000001a  R14: 00007f1424001c60  R15: 00007f0578003bc0\n    ORIG_RAX: 0000000000000010  CS: 0033  SS: 002b\n\nVmx have been fix this in commit 3a8b0677fc61 (KVM: VMX: Do not BUG() on\nout-of-bounds guest IRQ), so we can just copy source from that to fix\nthis."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fb470eb48892e131d10aa3be6915239e65758f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fa2d747960521a646fc1aad7aea82e95e139a68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6ffdebfb6a9c2ffeed902b544b96fe67498210e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a80ced6ea514000d34bf1239d47553de0d1ee89e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4d153d53d9648513481eb4ef8c212e7f1f8173d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49155","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.717","lastModified":"2025-02-26T07:00:52.717","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Suppress a kernel complaint in qla_create_qpair()\n\n[   12.323788] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd\/1020\n[   12.332297] caller is qla2xxx_create_qpair+0x32a\/0x5d0 [qla2xxx]\n[   12.338417] CPU: 7 PID: 1020 Comm: systemd-udevd Tainted: G          I      --------- ---  5.14.0-29.el9.x86_64 #1\n[   12.348827] Hardware name: Dell Inc. PowerEdge R610\/0F0XJ6, BIOS 6.6.0 05\/22\/2018\n[   12.356356] Call Trace:\n[   12.358821]  dump_stack_lvl+0x34\/0x44\n[   12.362514]  check_preemption_disabled+0xd9\/0xe0\n[   12.367164]  qla2xxx_create_qpair+0x32a\/0x5d0 [qla2xxx]\n[   12.372481]  qla2x00_probe_one+0xa3a\/0x1b80 [qla2xxx]\n[   12.377617]  ? _raw_spin_lock_irqsave+0x19\/0x40\n[   12.384284]  local_pci_probe+0x42\/0x80\n[   12.390162]  ? pci_match_device+0xd7\/0x110\n[   12.396366]  pci_device_probe+0xfd\/0x1b0\n[   12.402372]  really_probe+0x1e7\/0x3e0\n[   12.408114]  __driver_probe_device+0xfe\/0x180\n[   12.414544]  driver_probe_device+0x1e\/0x90\n[   12.420685]  __driver_attach+0xc0\/0x1c0\n[   12.426536]  ? __device_attach_driver+0xe0\/0xe0\n[   12.433061]  ? __device_attach_driver+0xe0\/0xe0\n[   12.439538]  bus_for_each_dev+0x78\/0xc0\n[   12.445294]  bus_add_driver+0x12b\/0x1e0\n[   12.451021]  driver_register+0x8f\/0xe0\n[   12.456631]  ? 0xffffffffc07bc000\n[   12.461773]  qla2x00_module_init+0x1be\/0x229 [qla2xxx]\n[   12.468776]  do_one_initcall+0x44\/0x200\n[   12.474401]  ? load_module+0xad3\/0xba0\n[   12.479908]  ? kmem_cache_alloc_trace+0x45\/0x410\n[   12.486268]  do_init_module+0x5c\/0x280\n[   12.491730]  __do_sys_init_module+0x12e\/0x1b0\n[   12.497785]  do_syscall_64+0x3b\/0x90\n[   12.503029]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[   12.509764] RIP: 0033:0x7f554f73ab2e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ab81d82fb1db7ec4be4b0d04563513e6d4bcdd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43195a0c620761fbb88db04e2475313855b948a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8077a7162bc3cf658dd9ff112bc77716c08458c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c33d49ab9f3d8bd7512b3070cd2f07c4a8849d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a60447e7d451df42c7bde43af53b34f10f34f469","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a669a22aef0ceff706b885370af74b5a60a8ac85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68776f28d9134fa65056e7e63bfc734049730b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f97316dd393bc8df1cc2af6295a97b876eecf252","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49156","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.823","lastModified":"2025-02-26T07:00:52.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix scheduling while atomic\n\nThe driver makes a call into midlayer (fc_remote_port_delete) which can put\nthe thread to sleep. The thread that originates the call is in interrupt\ncontext. The combination of the two trigger a crash. Schedule the call in\nnon-interrupt context where it is more safe.\n\nkernel: BUG: scheduling while atomic: swapper\/7\/0\/0x00010000\nkernel: Call Trace:\nkernel:  <IRQ>\nkernel:  dump_stack+0x66\/0x81\nkernel:  __schedule_bug.cold.90+0x5\/0x1d\nkernel:  __schedule+0x7af\/0x960\nkernel:  schedule+0x28\/0x80\nkernel:  schedule_timeout+0x26d\/0x3b0\nkernel:  wait_for_completion+0xb4\/0x140\nkernel:  ? wake_up_q+0x70\/0x70\nkernel:  __wait_rcu_gp+0x12c\/0x160\nkernel:  ? sdev_evt_alloc+0xc0\/0x180 [scsi_mod]\nkernel:  synchronize_sched+0x6c\/0x80\nkernel:  ? call_rcu_bh+0x20\/0x20\nkernel:  ? __bpf_trace_rcu_invoke_callback+0x10\/0x10\nkernel:  sdev_evt_alloc+0xfd\/0x180 [scsi_mod]\nkernel:  starget_for_each_device+0x85\/0xb0 [scsi_mod]\nkernel:  ? scsi_init_io+0x360\/0x3d0 [scsi_mod]\nkernel:  scsi_init_io+0x388\/0x3d0 [scsi_mod]\nkernel:  device_for_each_child+0x54\/0x90\nkernel:  fc_remote_port_delete+0x70\/0xe0 [scsi_transport_fc]\nkernel:  qla2x00_schedule_rport_del+0x62\/0xf0 [qla2xxx]\nkernel:  qla2x00_mark_device_lost+0x9c\/0xd0 [qla2xxx]\nkernel:  qla24xx_handle_plogi_done_event+0x55f\/0x570 [qla2xxx]\nkernel:  qla2x00_async_login_sp_done+0xd2\/0x100 [qla2xxx]\nkernel:  qla24xx_logio_entry+0x13a\/0x3c0 [qla2xxx]\nkernel:  qla24xx_process_response_queue+0x306\/0x400 [qla2xxx]\nkernel:  qla24xx_msix_rsp_q+0x3f\/0xb0 [qla2xxx]\nkernel:  __handle_irq_event_percpu+0x40\/0x180\nkernel:  handle_irq_event_percpu+0x30\/0x80\nkernel:  handle_irq_event+0x36\/0x60"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/78225d6a2a4ffdb2250ce2b7691a9e68a3f86912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78612f2fe8e26637476d756a44f0f05cca0d97de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fef50214dd04427233a2e66cd624d468e67aecb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/826a9d4a00d1424afa961504aec6298ee92d5053","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afd438ff874ca40b74321b3fa19bd61adfd7ca0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49157","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:52.917","lastModified":"2025-02-26T07:00:52.917","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix premature hw access after PCI error\n\nAfter a recoverable PCI error has been detected and recovered, qla driver\nneeds to check to see if the error condition still persist and\/or wait\nfor the OS to give the resume signal.\n\nSep  8 22:26:03 localhost kernel: WARNING: CPU: 9 PID: 124606 at qla_tmpl.c:440\nqla27xx_fwdt_entry_t266+0x55\/0x60 [qla2xxx]\nSep  8 22:26:03 localhost kernel: RIP: 0010:qla27xx_fwdt_entry_t266+0x55\/0x60\n[qla2xxx]\nSep  8 22:26:03 localhost kernel: Call Trace:\nSep  8 22:26:03 localhost kernel: ? qla27xx_walk_template+0xb1\/0x1b0 [qla2xxx]\nSep  8 22:26:03 localhost kernel: ? qla27xx_execute_fwdt_template+0x12a\/0x160\n[qla2xxx]\nSep  8 22:26:03 localhost kernel: ? qla27xx_fwdump+0xa0\/0x1c0 [qla2xxx]\nSep  8 22:26:03 localhost kernel: ? qla2xxx_pci_mmio_enabled+0xfb\/0x120\n[qla2xxx]\nSep  8 22:26:03 localhost kernel: ? report_mmio_enabled+0x44\/0x80\nSep  8 22:26:03 localhost kernel: ? report_slot_reset+0x80\/0x80\nSep  8 22:26:03 localhost kernel: ? pci_walk_bus+0x70\/0x90\nSep  8 22:26:03 localhost kernel: ? aer_dev_correctable_show+0xc0\/0xc0\nSep  8 22:26:03 localhost kernel: ? pcie_do_recovery+0x1bb\/0x240\nSep  8 22:26:03 localhost kernel: ? aer_recover_work_func+0xaa\/0xd0\nSep  8 22:26:03 localhost kernel: ? process_one_work+0x1a7\/0x360\n..\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-8041:22: detected PCI\ndisconnect.\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-107ff:22:\nqla27xx_fwdt_entry_t262: dump ram MB failed. Area 5h start 198013h end 198013h\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-107ff:22: Unable to\ncapture FW dump\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-1015:22: cmd=0x0,\nwaited 5221 msecs\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-680d:22: mmio\nenabled returning.\nSep  8 22:26:03 localhost kernel: qla2xxx [0000:42:00.2]-d04c:22: MBX\nCommand timeout for cmd 0, iocontrol=ffffffff jiffies=10140f2e5\nmb[0-3]=[0xffff 0xffff 0xffff 0xffff]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ef6319f9882699613d5182fbd7929b017e8c5ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c125fd5ad035777f7b471553f7ddda76e8e7136","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7994dff9071555a959a168f9184dd9abae68a6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e35920ab7874d5e2faeb4f958a74bfa793f1ce5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49158","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.013","lastModified":"2025-02-26T07:00:53.013","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix warning message due to adisc being flushed\n\nFix warning message due to adisc being flushed.  Linux kernel triggered a\nwarning message where a different error code type is not matching up with\nthe expected type. Add additional translation of one error code type to\nanother.\n\nWARNING: CPU: 2 PID: 1131623 at drivers\/scsi\/qla2xxx\/qla_init.c:498\nqla2x00_async_adisc_sp_done+0x294\/0x2b0 [qla2xxx]\nCPU: 2 PID: 1131623 Comm: drmgr Not tainted 5.13.0-rc1-autotest #1\n..\nGPR28: c000000aaa9c8890 c0080000079ab678 c00000140a104800 c00000002bd19000\nNIP [c00800000790857c] qla2x00_async_adisc_sp_done+0x294\/0x2b0 [qla2xxx]\nLR [c008000007908578] qla2x00_async_adisc_sp_done+0x290\/0x2b0 [qla2xxx]\nCall Trace:\n[c00000001cdc3620] [c008000007908578] qla2x00_async_adisc_sp_done+0x290\/0x2b0 [qla2xxx] (unreliable)\n[c00000001cdc3710] [c0080000078f3080] __qla2x00_abort_all_cmds+0x1b8\/0x580 [qla2xxx]\n[c00000001cdc3840] [c0080000078f589c] qla2x00_abort_all_cmds+0x34\/0xd0 [qla2xxx]\n[c00000001cdc3880] [c0080000079153d8] qla2x00_abort_isp_cleanup+0x3f0\/0x570 [qla2xxx]\n[c00000001cdc3920] [c0080000078fb7e8] qla2x00_remove_one+0x3d0\/0x480 [qla2xxx]\n[c00000001cdc39b0] [c00000000071c274] pci_device_remove+0x64\/0x120\n[c00000001cdc39f0] [c0000000007fb818] device_release_driver_internal+0x168\/0x2a0\n[c00000001cdc3a30] [c00000000070e304] pci_stop_bus_device+0xb4\/0x100\n[c00000001cdc3a70] [c00000000070e4f0] pci_stop_and_remove_bus_device+0x20\/0x40\n[c00000001cdc3aa0] [c000000000073940] pci_hp_remove_devices+0x90\/0x130\n[c00000001cdc3b30] [c0080000070704d0] disable_slot+0x38\/0x90 [rpaphp] [\nc00000001cdc3b60] [c00000000073eb4c] power_write_file+0xcc\/0x180\n[c00000001cdc3be0] [c0000000007354bc] pci_slot_attr_store+0x3c\/0x60\n[c00000001cdc3c00] [c00000000055f820] sysfs_kf_write+0x60\/0x80 [c00000001cdc3c20]\n[c00000000055df10] kernfs_fop_write_iter+0x1a0\/0x290\n[c00000001cdc3c70] [c000000000447c4c] new_sync_write+0x14c\/0x1d0\n[c00000001cdc3d10] [c00000000044b134] vfs_write+0x224\/0x330\n[c00000001cdc3d60] [c00000000044b3f4] ksys_write+0x74\/0x130\n[c00000001cdc3db0] [c00000000002df70] system_call_exception+0x150\/0x2d0\n[c00000001cdc3e10] [c00000000000d45c] system_call_common+0xec\/0x278"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64f24af75b79cba3b86b0760e27e0fa904db570f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a3457777c4f700c64836e78dc71e6ce459f62b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b13baf97ddbc1a7e7536168383bc0d84c2204b03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8fb8da69e194e0249b3cdb746ef09ce823ae26b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49159","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.103","lastModified":"2025-02-26T07:00:53.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Implement ref count for SRB\n\nThe timeout handler and the done function are racing. When\nqla2x00_async_iocb_timeout() starts to run it can be preempted by the\nnormal response path (via the firmware?). qla24xx_async_gpsc_sp_done()\nreleases the SRB unconditionally. When scheduling back to\nqla2x00_async_iocb_timeout() qla24xx_async_abort_cmd() will access an freed\nsp->qpair pointer:\n\n  qla2xxx [0000:83:00.0]-2871:0: Async-gpsc timeout - hdl=63d portid=234500 50:06:0e:80:08:77:b6:21.\n  qla2xxx [0000:83:00.0]-2853:0: Async done-gpsc res 0, WWPN 50:06:0e:80:08:77:b6:21\n  qla2xxx [0000:83:00.0]-2854:0: Async-gpsc OUT WWPN 20:45:00:27:f8:75:33:00 speeds=2c00 speed=0400.\n  qla2xxx [0000:83:00.0]-28d8:0: qla24xx_handle_gpsc_event 50:06:0e:80:08:77:b6:21 DS 7 LS 6 rc 0 login 1|1 rscn 1|0 lid 5\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000004\n  IP: qla24xx_async_abort_cmd+0x1b\/0x1c0 [qla2xxx]\n\nObvious solution to this is to introduce a reference counter. One reference\nis taken for the normal code path (the 'good' case) and one for the timeout\npath. As we always race between the normal good case and the timeout\/abort\nhandler we need to serialize it. Also we cannot assume any order between\nthe handlers. Since this is slow path we can use proper synchronization via\nlocks.\n\nWhen we are able to cancel a timer (del_timer returns 1) we know there\ncan't be any error handling in progress because the timeout handler hasn't\nexpired yet, thus we can safely decrement the refcounter by one.\n\nIf we are not able to cancel the timer, we know an abort handler is\nrunning. We have to make sure we call sp->done() in the abort handlers\nbefore calling kref_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31e6cdbe0eae37badceb5e0d4f06cf051432fd77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ceda7f794f3dfe272491e93e3e93049f8be5f07b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e140723f78ff418c8df7d990e102e07b65c87d4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e17111dd2fda81c35f309b1e5b6ab35809a375e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49160","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.190","lastModified":"2025-02-26T07:00:53.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: qla2xxx: Fix crash during module load unload test\n\nDuring purex packet handling the driver was incorrectly freeing a\npre-allocated structure. Fix this by skipping that entry.\n\nSystem crashed with the following stack during a module unload test.\n\nCall Trace:\n\tsbitmap_init_node+0x7f\/0x1e0\n\tsbitmap_queue_init_node+0x24\/0x150\n\tblk_mq_init_bitmaps+0x3d\/0xa0\n\tblk_mq_init_tags+0x68\/0x90\n\tblk_mq_alloc_map_and_rqs+0x44\/0x120\n\tblk_mq_alloc_set_map_and_rqs+0x63\/0x150\n\tblk_mq_alloc_tag_set+0x11b\/0x230\n\tscsi_add_host_with_dma.cold+0x3f\/0x245\n\tqla2x00_probe_one+0xd5a\/0x1b80 [qla2xxx]\n\nCall Trace with slub_debug and debug kernel:\n\tkasan_report_invalid_free+0x50\/0x80\n\t__kasan_slab_free+0x137\/0x150\n\tslab_free_freelist_hook+0xc6\/0x190\n\tkfree+0xe8\/0x2e0\n\tqla2x00_free_device+0x3bb\/0x5d0 [qla2xxx]\n\tqla2x00_remove_one+0x668\/0xcf0 [qla2xxx]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0972252450f90db56dd5415a20e2aec21a08d036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/213e57b42537f1a2e5395caa9d7189854133ed12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67f744f73eba870ab96411d0310e831a4adc3713","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b7eb92dac240ab3bc83e188d83a3df834b41eb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49161","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.280","lastModified":"2025-02-26T07:00:53.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: Fix error handling in mt8183_da7219_max98357_dev_probe\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error paths.\nFix this by calling of_node_put() in error handling too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28a265a1ee11febeec5ea73a804f30dcec3181ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b9f6227e8d0c7c46b6d9d7b8a5c4e0536049fcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49162","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.373","lastModified":"2025-02-26T07:00:53.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: sm712fb: Fix crash in smtcfb_write()\n\nWhen the sm712fb driver writes three bytes to the framebuffer, the\ndriver will crash:\n\n    BUG: unable to handle page fault for address: ffffc90001ffffff\n    RIP: 0010:smtcfb_write+0x454\/0x5b0\n    Call Trace:\n     vfs_write+0x291\/0xd60\n     ? do_sys_openat2+0x27d\/0x350\n     ? __fget_light+0x54\/0x340\n     ksys_write+0xce\/0x190\n     do_syscall_64+0x43\/0x90\n     entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nFix it by removing the open-coded endianness fixup-code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ec746674296c94137f074309c26d17e644c0498","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1aea36a62f0a0ad67eccc945bac0bd6422ef720f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b36c05f68ba32d0dfb63abc9016d6fe9117829f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f01d09b2bbfbcb47b3eb305560a7f4857a32260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/809b8cde86320698661eec677222bc5c5df76176","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeb635b49530b7d19e140949753409f759ba99be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1c28577529cdfad40c8242673285f1e1e4c314e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eae90015d10f0c9a47fc4adccba4cd79dce664e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb791514acf9070225eed46e1ccbb0aa7aae5da5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49163","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.473","lastModified":"2025-02-26T07:00:53.473","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: fix a bug of accessing array out of bounds\n\nWhen error occurs in parsing jpeg, the slot isn't acquired yet, it may\nbe the default value MXC_MAX_SLOTS.\nIf the driver access the slot using the incorrect slot number, it will\naccess array out of bounds.\nThe result is the driver will change num_domains, which follows\nslot_data in struct mxc_jpeg_dev.\nThen the driver won't detach the pm domain at rmmod, which will lead to\nkernel panic when trying to insmod again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02f9f97d54ffc85b50ad77f5b1f3c8f69cd17747","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20c8b90430c5d6c4a3936eaa7c35aac670581487","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97558d170a1236280407e8d29a7d095d2c2ed554","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e209e6db2e527db6a93b14c2deedf969caca78fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49164","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.563","lastModified":"2025-02-26T07:00:53.563","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/tm: Fix more userspace r13 corruption\n\nCommit cf13435b730a (\"powerpc\/tm: Fix userspace r13 corruption\") fixes a\nproblem in treclaim where a SLB miss can occur on the\nthread_struct->ckpt_regs while SCRATCH0 is live with the saved user r13\nvalue, clobbering it with the kernel r13 and ultimately resulting in\nkernel r13 being stored in ckpt_regs.\n\nThere is an equivalent problem in trechkpt where the user r13 value is\nloaded into r13 from chkpt_regs to be recheckpointed, but a SLB miss\ncould occur on ckpt_regs accesses after that, which will result in r13\nbeing clobbered with a kernel value and that will get recheckpointed and\nthen restored to user registers.\n\nThe same memory page is accessed right before this critical window where\na SLB miss could cause corruption, so hitting the bug requires the SLB\nentry be removed within a small window of instructions, which is\npossible if a SLB related MCE hits there. PAPR also permits the\nhypervisor to discard this SLB entry (because slb_shadow->persistent is\nonly set to SLB_NUM_BOLTED) although it's not known whether any\nimplementations would do this (KVM does not). So this is an extremely\nunlikely bug, only found by inspection.\n\nFix this by also storing user r13 in a temporary location on the kernel\nstack and don't change the r13 register from kernel r13 until the RI=0\ncritical section that does not fault.\n\nThe SCRATCH0 change is not strictly part of the fix, it's only used in\nthe RI=0 section so it does not have the same problem as the previous\nSCRATCH0 bug."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5dce84f475d13b773a1a4c823581cab25044d86a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73d8082c90f17dfba57cad4ca94db5cae323f1b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d71165d3934e607070c4e48458c0cf161b1baea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49165","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.653","lastModified":"2025-02-26T07:00:53.653","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Prevent decoding NV12M jpegs into single-planar buffers\n\nIf the application queues an NV12M jpeg as output buffer, but then\nqueues a single planar capture buffer, the kernel will crash with\n\"Unable to handle kernel NULL pointer dereference\" in mxc_jpeg_addrs,\nprevent this by finishing the job with error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/417591a766b3c040c346044541ff949c0b2bb7b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4eb591c47c82a6a6ad293ed108c3cb77115fbc25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d075ede7d24f19dc817c5bd517a53f0524f9031","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eff76b180751e5e55c872d17755680c3b83ba9ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49166","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.743","lastModified":"2025-02-26T07:00:53.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nntfs: add sanity check on allocation size\n\nntfs_read_inode_mount invokes ntfs_malloc_nofs with zero allocation\nsize.  It triggers one BUG in the __ntfs_malloc function.\n\nFix this by adding sanity check on ni->attr_list_size."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07793d2e55563124108762f4e5f811db92ffe02f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/115fae2c1566eacc5ad2055f72521354612e72c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21d490232f323ed4053eb9924615e6fea291f154","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24ab2d4ef52c2dbb62a60844b87fc8872383407a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/714fbf2647b1a33d914edd695d4da92029c7e7c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b230f2d9441a34c7f483d39ab78519bcf73cc2e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd8d7daa0e53b184a2f3c6e0d47330780d0a0650","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c641087d381a08363e5f14179bc6b0a23eca7c47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe41ad8be036a3de3e4bdde709551aeb4de2fe7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49167","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.837","lastModified":"2025-02-26T07:00:53.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not double complete bio on errors during compressed reads\n\nI hit some weird panics while fixing up the error handling from\nbtrfs_lookup_bio_sums().  Turns out the compression path will complete\nthe bio we use if we set up any of the compression bios and then return\nan error, and then btrfs_submit_data_bio() will also call bio_endio() on\nthe bio.\n\nFix this by making btrfs_submit_compressed_read() responsible for\ncalling bio_endio() on the bio if there are any errors.  Currently it\nwas only doing it if we created the compression bios, otherwise it was\ndepending on btrfs_submit_data_bio() to do the right thing.  This\ncreates the above problem, so fix up btrfs_submit_compressed_read() to\nalways call bio_endio() in case of an error, and then simply return from\nbtrfs_submit_data_bio() if we had to call\nbtrfs_submit_compressed_read()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4a4ceb2b990771c374d85d496a1a45255dde48e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/987b5df1d10355d377315a26e7fb6c72ded83c9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9f15de85d74e7eef021af059ca53a15f041cdd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49168","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:53.927","lastModified":"2025-02-26T07:00:53.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not clean up repair bio if submit fails\n\nThe submit helper will always run bio_endio() on the bio if it fails to\nsubmit, so cleaning up the bio just leads to a variety of use-after-free\nand NULL pointer dereference bugs because we race with the endio\nfunction that is cleaning up the bio.  Instead just return BLK_STS_OK as\nthe repair function has to continue to process the rest of the pages,\nand the endio for the repair bio will do the appropriate cleanup for the\npage that it was given."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8cbc3001a3264d998d6b6db3e23f935c158abd4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1cb11fb45ebbb1e7dfe5e9038b32ea72c184b14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e76c78c48902dae6fa612749f59162bca0a79e0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49169","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.017","lastModified":"2025-02-26T07:00:54.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: use spin_lock to avoid hang\n\n[14696.634553] task:cat             state:D stack:    0 pid:1613738 ppid:1613735 flags:0x00000004\n[14696.638285] Call Trace:\n[14696.639038]  <TASK>\n[14696.640032]  __schedule+0x302\/0x930\n[14696.640969]  schedule+0x58\/0xd0\n[14696.641799]  schedule_preempt_disabled+0x18\/0x30\n[14696.642890]  __mutex_lock.constprop.0+0x2fb\/0x4f0\n[14696.644035]  ? mod_objcg_state+0x10c\/0x310\n[14696.645040]  ? obj_cgroup_charge+0xe1\/0x170\n[14696.646067]  __mutex_lock_slowpath+0x13\/0x20\n[14696.647126]  mutex_lock+0x34\/0x40\n[14696.648070]  stat_show+0x25\/0x17c0 [f2fs]\n[14696.649218]  seq_read_iter+0x120\/0x4b0\n[14696.650289]  ? aa_file_perm+0x12a\/0x500\n[14696.651357]  ? lru_cache_add+0x1c\/0x20\n[14696.652470]  seq_read+0xfd\/0x140\n[14696.653445]  full_proxy_read+0x5c\/0x80\n[14696.654535]  vfs_read+0xa0\/0x1a0\n[14696.655497]  ksys_read+0x67\/0xe0\n[14696.656502]  __x64_sys_read+0x1a\/0x20\n[14696.657580]  do_syscall_64+0x3b\/0xc0\n[14696.658671]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[14696.660068] RIP: 0033:0x7efe39df1cb2\n[14696.661133] RSP: 002b:00007ffc8badd948 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n[14696.662958] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007efe39df1cb2\n[14696.664757] RDX: 0000000000020000 RSI: 00007efe399df000 RDI: 0000000000000003\n[14696.666542] RBP: 00007efe399df000 R08: 00007efe399de010 R09: 00007efe399de010\n[14696.668363] R10: 0000000000000022 R11: 0000000000000246 R12: 0000000000000000\n[14696.670155] R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000\n[14696.671965]  <\/TASK>\n[14696.672826] task:umount          state:D stack:    0 pid:1614985 ppid:1614984 flags:0x00004000\n[14696.674930] Call Trace:\n[14696.675903]  <TASK>\n[14696.676780]  __schedule+0x302\/0x930\n[14696.677927]  schedule+0x58\/0xd0\n[14696.679019]  schedule_preempt_disabled+0x18\/0x30\n[14696.680412]  __mutex_lock.constprop.0+0x2fb\/0x4f0\n[14696.681783]  ? destroy_inode+0x65\/0x80\n[14696.683006]  __mutex_lock_slowpath+0x13\/0x20\n[14696.684305]  mutex_lock+0x34\/0x40\n[14696.685442]  f2fs_destroy_stats+0x1e\/0x60 [f2fs]\n[14696.686803]  f2fs_put_super+0x158\/0x390 [f2fs]\n[14696.688238]  generic_shutdown_super+0x7a\/0x120\n[14696.689621]  kill_block_super+0x27\/0x50\n[14696.690894]  kill_f2fs_super+0x7f\/0x100 [f2fs]\n[14696.692311]  deactivate_locked_super+0x35\/0xa0\n[14696.693698]  deactivate_super+0x40\/0x50\n[14696.694985]  cleanup_mnt+0x139\/0x190\n[14696.696209]  __cleanup_mnt+0x12\/0x20\n[14696.697390]  task_work_run+0x64\/0xa0\n[14696.698587]  exit_to_user_mode_prepare+0x1b7\/0x1c0\n[14696.700053]  syscall_exit_to_user_mode+0x27\/0x50\n[14696.701418]  do_syscall_64+0x48\/0xc0\n[14696.702630]  entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2eff60346e7ae1a24cd868b8fdcf58e946e7dde1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/738886004bd2885ac2db0bc63b4874aa471ca87e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98237fcda4a24e67b0a4498c17d5aa4ad4537bc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec4187d45cc1c2d69fffeee5fa6aa4cb62477cfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49170","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.110","lastModified":"2025-02-26T07:00:54.110","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to do sanity check on curseg->alloc_type\n\nAs Wenqing Liu reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215657\n\n- Overview\nUBSAN: array-index-out-of-bounds in fs\/f2fs\/segment.c:3460:2 when mount and operate a corrupted image\n\n- Reproduce\ntested on kernel 5.17-rc4, 5.17-rc6\n\n1. mkdir test_crash\n2. cd test_crash\n3. unzip tmp2.zip\n4. mkdir mnt\n5. .\/single_test.sh f2fs 2\n\n- Kernel dump\n[   46.434454] loop0: detected capacity change from 0 to 131072\n[   46.529839] F2FS-fs (loop0): Mounted with checkpoint version = 7548c2d9\n[   46.738319] ================================================================================\n[   46.738412] UBSAN: array-index-out-of-bounds in fs\/f2fs\/segment.c:3460:2\n[   46.738475] index 231 is out of range for type 'unsigned int [2]'\n[   46.738539] CPU: 2 PID: 939 Comm: umount Not tainted 5.17.0-rc6 #1\n[   46.738547] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04\/01\/2014\n[   46.738551] Call Trace:\n[   46.738556]  <TASK>\n[   46.738563]  dump_stack_lvl+0x47\/0x5c\n[   46.738581]  ubsan_epilogue+0x5\/0x50\n[   46.738592]  __ubsan_handle_out_of_bounds+0x68\/0x80\n[   46.738604]  f2fs_allocate_data_block+0xdff\/0xe60 [f2fs]\n[   46.738819]  do_write_page+0xef\/0x210 [f2fs]\n[   46.738934]  f2fs_do_write_node_page+0x3f\/0x80 [f2fs]\n[   46.739038]  __write_node_page+0x2b7\/0x920 [f2fs]\n[   46.739162]  f2fs_sync_node_pages+0x943\/0xb00 [f2fs]\n[   46.739293]  f2fs_write_checkpoint+0x7bb\/0x1030 [f2fs]\n[   46.739405]  kill_f2fs_super+0x125\/0x150 [f2fs]\n[   46.739507]  deactivate_locked_super+0x60\/0xc0\n[   46.739517]  deactivate_super+0x70\/0xb0\n[   46.739524]  cleanup_mnt+0x11a\/0x200\n[   46.739532]  __cleanup_mnt+0x16\/0x20\n[   46.739538]  task_work_run+0x67\/0xa0\n[   46.739547]  exit_to_user_mode_prepare+0x18c\/0x1a0\n[   46.739559]  syscall_exit_to_user_mode+0x26\/0x40\n[   46.739568]  do_syscall_64+0x46\/0xb0\n[   46.739584]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root cause is we missed to do sanity check on curseg->alloc_type,\nresult in out-of-bound accessing on sbi->block_count[] array, fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0748a0f7dcb9d9dddc80302d73ebcecef6782ef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/498b7088db71f9707359448cd6800bbb1882f4c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c12765e3f129b144421c80d3383df885f85ee290","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f41ee8b91c00770d718be2ff4852a80017ae9ab3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68caedf264a95c0b02dfd0d9f92ac2637d5848a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49171","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.213","lastModified":"2025-02-26T07:00:54.213","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: don't BUG if someone dirty pages without asking ext4 first\n\n[un]pin_user_pages_remote is dirtying pages without properly warning\nthe file system in advance.  A related race was noted by Jan Kara in\n2018[1]; however, more recently instead of it being a very hard-to-hit\nrace, it could be reliably triggered by process_vm_writev(2) which was\ndiscovered by Syzbot[2].\n\nThis is technically a bug in mm\/gup.c, but arguably ext4 is fragile in\nthat if some other kernel subsystem dirty pages without properly\nnotifying the file system using page_mkwrite(), ext4 will BUG, while\nother file systems will not BUG (although data will still be lost).\n\nSo instead of crashing with a BUG, issue a warning (since there may be\npotential data loss) and just mark the page as clean to avoid\nunprivileged denial of service attacks until the problem can be\nproperly fixed.  More discussion and background can be found in the\nthread starting at [2].\n\n[1] https:\/\/lore.kernel.org\/linux-mm\/20180103100430.GE4911@quack2.suse.cz\n[2] https:\/\/lore.kernel.org\/r\/Yg0m6IjcNmfaSokM@google.com"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d3a6926f7e8be3c897fa46216ce13b119a9f56a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/330d0e44fc5a47c27df958ecdd4693a3cb1d8b81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/343117559ef41e992e326f7a92da1a8f254dfa8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a016c053f426a73752c3b41b60b497b58694d48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5db60e76edf5680ff1f3a7221036fc44b308f146","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/677c9d30e8487bee6c8e3b034070319d98f6e203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0856764dc1276ad2dc7891288c2e9246bf11a37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc5095747edfb054ca2068d01af20be3fcc3634f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d666dfaa571465a19f014534a214c255ea33f301","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49172","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.313","lastModified":"2025-02-26T07:00:54.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nparisc: Fix non-access data TLB cache flush faults\n\nWhen a page is not present, we get non-access data TLB faults from\nthe fdc and fic instructions in flush_user_dcache_range_asm and\nflush_user_icache_range_asm. When these occur, the cache line is\nnot invalidated and potentially we get memory corruption. The\nproblem was hidden by the nullification of the flush instructions.\n\nThese faults also affect performance. With pa8800\/pa8900 processors,\nthere will be 32 faults per 4 KB page since the cache line is 128\nbytes.  There will be more faults with earlier processors.\n\nThe problem is fixed by using flush_cache_pages(). It does the flush\nusing a tmp alias mapping.\n\nThe flush_cache_pages() call in flush_cache_range() flushed too\nlarge a range.\n\nV2: Remove unnecessary preempt_disable() and preempt_enable() calls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b3d6adb3a49d82e4e557c5fc16f50c9ff731da5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddca4b82027e2a66333dd40fab21a4beff435c7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f839e5f1cef36ce268950c387129b1bfefdaebc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49173","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.407","lastModified":"2025-02-26T07:00:54.407","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: fsi: Implement a timeout for polling status\n\nThe data transfer routines must poll the status register to\ndetermine when more data can be shifted in or out. If the hardware\ngets into a bad state, these polling loops may never exit. Prevent\nthis by returning an error if a timeout is exceeded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/89b35e3f28514087d3f1e28e8f5634fbfd07c554","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4982ceb137e6ecd2b466a6de639790a148cf19a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dac1438f347d3b8cf892105c94e254f29c5764de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49174","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.503","lastModified":"2025-02-26T07:00:54.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix ext4_mb_mark_bb() with flex_bg with fast_commit\n\nIn case of flex_bg feature (which is by default enabled), extents for\nany given inode might span across blocks from two different block group.\next4_mb_mark_bb() only reads the buffer_head of block bitmap once for the\nstarting block group, but it fails to read it again when the extent length\nboundary overflows to another block group. Then in this below loop it\naccesses memory beyond the block group bitmap buffer_head and results\ninto a data abort.\n\n\tfor (i = 0; i < clen; i++)\n\t\tif (!mb_test_bit(blkoff + i, bitmap_bh->b_data) == !state)\n\t\t\talready++;\n\nThis patch adds this functionality for checking block group boundary in\next4_mb_mark_bb() and update the buffer_head(bitmap_bh) for every different\nblock group.\n\nw\/o this patch, I was easily able to hit a data access abort using Power platform.\n\n<...>\n[   74.327662] EXT4-fs error (device loop3): ext4_mb_generate_buddy:1141: group 11, block bitmap and bg descriptor inconsistent: 21248 vs 23294 free clusters\n[   74.533214] EXT4-fs (loop3): shut down requested (2)\n[   74.536705] Aborting journal on device loop3-8.\n[   74.702705] BUG: Unable to handle kernel data access on read at 0xc00000005e980000\n[   74.703727] Faulting instruction address: 0xc0000000007bffb8\ncpu 0xd: Vector: 300 (Data Access) at [c000000015db7060]\n    pc: c0000000007bffb8: ext4_mb_mark_bb+0x198\/0x5a0\n    lr: c0000000007bfeec: ext4_mb_mark_bb+0xcc\/0x5a0\n    sp: c000000015db7300\n   msr: 800000000280b033\n   dar: c00000005e980000\n dsisr: 40000000\n  current = 0xc000000027af6880\n  paca    = 0xc00000003ffd5200   irqmask: 0x03   irq_happened: 0x01\n    pid   = 5167, comm = mount\n<...>\nenter ? for help\n[c000000015db7380] c000000000782708 ext4_ext_clear_bb+0x378\/0x410\n[c000000015db7400] c000000000813f14 ext4_fc_replay+0x1794\/0x2000\n[c000000015db7580] c000000000833f7c do_one_pass+0xe9c\/0x12a0\n[c000000015db7710] c000000000834504 jbd2_journal_recover+0x184\/0x2d0\n[c000000015db77c0] c000000000841398 jbd2_journal_load+0x188\/0x4a0\n[c000000015db7880] c000000000804de8 ext4_fill_super+0x2638\/0x3e10\n[c000000015db7a40] c0000000005f8404 get_tree_bdev+0x2b4\/0x350\n[c000000015db7ae0] c0000000007ef058 ext4_get_tree+0x28\/0x40\n[c000000015db7b00] c0000000005f6344 vfs_get_tree+0x44\/0x100\n[c000000015db7b70] c00000000063c408 path_mount+0xdd8\/0xe70\n[c000000015db7c40] c00000000063c8f0 sys_mount+0x450\/0x550\n[c000000015db7d50] c000000000035770 system_call_exception+0x4a0\/0x4e0\n[c000000015db7e10] c00000000000c74c system_call_common+0xec\/0x250"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6a6beb074186a0452368a023a261c7d0eaebe838","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/803fb0e8240cc16585a5c9df76add1dfaa781773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b07eedd0222e9548ffc568ec429bb1f61d21a39c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfdc502a4a4c058bf4cbb1df0c297761d528f54d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd6d719534af993210306f8a13f9cb3e615f7c8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49175","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.600","lastModified":"2025-02-26T07:00:54.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPM: core: keep irq flags in device_pm_check_callbacks()\n\nThe function device_pm_check_callbacks() can be called under the spin\nlock (in the reported case it happens from genpd_add_device() ->\ndev_pm_domain_set(), when the genpd uses spinlocks rather than mutexes.\n\nHowever this function uncoditionally uses spin_lock_irq() \/\nspin_unlock_irq(), thus not preserving the CPU flags. Use the\nirqsave\/irqrestore instead.\n\nThe backtrace for the reference:\n[    2.752010] ------------[ cut here ]------------\n[    2.756769] raw_local_irq_restore() called with IRQs enabled\n[    2.762596] WARNING: CPU: 4 PID: 1 at kernel\/locking\/irqflag-debug.c:10 warn_bogus_irq_restore+0x34\/0x50\n[    2.772338] Modules linked in:\n[    2.775487] CPU: 4 PID: 1 Comm: swapper\/0 Tainted: G S                5.17.0-rc6-00384-ge330d0d82eff-dirty #684\n[    2.781384] Freeing initrd memory: 46024K\n[    2.785839] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    2.785841] pc : warn_bogus_irq_restore+0x34\/0x50\n[    2.785844] lr : warn_bogus_irq_restore+0x34\/0x50\n[    2.785846] sp : ffff80000805b7d0\n[    2.785847] x29: ffff80000805b7d0 x28: 0000000000000000 x27: 0000000000000002\n[    2.785850] x26: ffffd40e80930b18 x25: ffff7ee2329192b8 x24: ffff7edfc9f60800\n[    2.785853] x23: ffffd40e80930b18 x22: ffffd40e80930d30 x21: ffff7edfc0dffa00\n[    2.785856] x20: ffff7edfc09e3768 x19: 0000000000000000 x18: ffffffffffffffff\n[    2.845775] x17: 6572206f74206465 x16: 6c696166203a3030 x15: ffff80008805b4f7\n[    2.853108] x14: 0000000000000000 x13: ffffd40e809550b0 x12: 00000000000003d8\n[    2.860441] x11: 0000000000000148 x10: ffffd40e809550b0 x9 : ffffd40e809550b0\n[    2.867774] x8 : 00000000ffffefff x7 : ffffd40e809ad0b0 x6 : ffffd40e809ad0b0\n[    2.875107] x5 : 000000000000bff4 x4 : 0000000000000000 x3 : 0000000000000000\n[    2.882440] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff7edfc03a8000\n[    2.889774] Call trace:\n[    2.892290]  warn_bogus_irq_restore+0x34\/0x50\n[    2.896770]  _raw_spin_unlock_irqrestore+0x94\/0xa0\n[    2.901690]  genpd_unlock_spin+0x20\/0x30\n[    2.905724]  genpd_add_device+0x100\/0x2d0\n[    2.909850]  __genpd_dev_pm_attach+0xa8\/0x23c\n[    2.914329]  genpd_dev_pm_attach_by_id+0xc4\/0x190\n[    2.919167]  genpd_dev_pm_attach_by_name+0x3c\/0xd0\n[    2.924086]  dev_pm_domain_attach_by_name+0x24\/0x30\n[    2.929102]  psci_dt_attach_cpu+0x24\/0x90\n[    2.933230]  psci_cpuidle_probe+0x2d4\/0x46c\n[    2.937534]  platform_probe+0x68\/0xe0\n[    2.941304]  really_probe.part.0+0x9c\/0x2fc\n[    2.945605]  __driver_probe_device+0x98\/0x144\n[    2.950085]  driver_probe_device+0x44\/0x15c\n[    2.954385]  __device_attach_driver+0xb8\/0x120\n[    2.958950]  bus_for_each_drv+0x78\/0xd0\n[    2.962896]  __device_attach+0xd8\/0x180\n[    2.966843]  device_initial_probe+0x14\/0x20\n[    2.971144]  bus_probe_device+0x9c\/0xa4\n[    2.975092]  device_add+0x380\/0x88c\n[    2.978679]  platform_device_add+0x114\/0x234\n[    2.983067]  platform_device_register_full+0x100\/0x190\n[    2.988344]  psci_idle_init+0x6c\/0xb0\n[    2.992113]  do_one_initcall+0x74\/0x3a0\n[    2.996060]  kernel_init_freeable+0x2fc\/0x384\n[    3.000543]  kernel_init+0x28\/0x130\n[    3.004132]  ret_from_fork+0x10\/0x20\n[    3.007817] irq event stamp: 319826\n[    3.011404] hardirqs last  enabled at (319825): [<ffffd40e7eda0268>] __up_console_sem+0x78\/0x84\n[    3.020332] hardirqs last disabled at (319826): [<ffffd40e7fd6d9d8>] el1_dbg+0x24\/0x8c\n[    3.028458] softirqs last  enabled at (318312): [<ffffd40e7ec90410>] _stext+0x410\/0x588\n[    3.036678] softirqs last disabled at (318299): [<ffffd40e7ed1bf68>] __irq_exit_rcu+0x158\/0x174\n[    3.045607] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cccf9d4fb45f1acbc0bbf6d7e4d8d0fb7a10416","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2add538e57a2825c61d639260386f385c75e4166","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ec80d52b9b74b9e691997632a543c73eddfeba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/524bb1da785a7ae43dd413cd392b5071c6c367f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78c4d68b952f5f537788dbd454031ea9bf50f642","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be8bc05f38d667eda1e820bc6f69234795be7809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c29642ba72f87c0a3d7449f7db5d6d76a7ed53c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7c0ec5a1dcc3eaa1e85c804c2ccf46e457788a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ede1ef1a7de973321699736ef96d01a4b9a6fe9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49176","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.717","lastModified":"2025-02-26T07:00:54.717","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbfq: fix use-after-free in bfq_dispatch_request\n\nKASAN reports a use-after-free report when doing normal scsi-mq test\n\n[69832.239032] ==================================================================\n[69832.241810] BUG: KASAN: use-after-free in bfq_dispatch_request+0x1045\/0x44b0\n[69832.243267] Read of size 8 at addr ffff88802622ba88 by task kworker\/3:1H\/155\n[69832.244656]\n[69832.245007] CPU: 3 PID: 155 Comm: kworker\/3:1H Not tainted 5.10.0-10295-g576c6382529e #8\n[69832.246626] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\n[69832.249069] Workqueue: kblockd blk_mq_run_work_fn\n[69832.250022] Call Trace:\n[69832.250541]  dump_stack+0x9b\/0xce\n[69832.251232]  ? bfq_dispatch_request+0x1045\/0x44b0\n[69832.252243]  print_address_description.constprop.6+0x3e\/0x60\n[69832.253381]  ? __cpuidle_text_end+0x5\/0x5\n[69832.254211]  ? vprintk_func+0x6b\/0x120\n[69832.254994]  ? bfq_dispatch_request+0x1045\/0x44b0\n[69832.255952]  ? bfq_dispatch_request+0x1045\/0x44b0\n[69832.256914]  kasan_report.cold.9+0x22\/0x3a\n[69832.257753]  ? bfq_dispatch_request+0x1045\/0x44b0\n[69832.258755]  check_memory_region+0x1c1\/0x1e0\n[69832.260248]  bfq_dispatch_request+0x1045\/0x44b0\n[69832.261181]  ? bfq_bfqq_expire+0x2440\/0x2440\n[69832.262032]  ? blk_mq_delay_run_hw_queues+0xf9\/0x170\n[69832.263022]  __blk_mq_do_dispatch_sched+0x52f\/0x830\n[69832.264011]  ? blk_mq_sched_request_inserted+0x100\/0x100\n[69832.265101]  __blk_mq_sched_dispatch_requests+0x398\/0x4f0\n[69832.266206]  ? blk_mq_do_dispatch_ctx+0x570\/0x570\n[69832.267147]  ? __switch_to+0x5f4\/0xee0\n[69832.267898]  blk_mq_sched_dispatch_requests+0xdf\/0x140\n[69832.268946]  __blk_mq_run_hw_queue+0xc0\/0x270\n[69832.269840]  blk_mq_run_work_fn+0x51\/0x60\n[69832.278170]  process_one_work+0x6d4\/0xfe0\n[69832.278984]  worker_thread+0x91\/0xc80\n[69832.279726]  ? __kthread_parkme+0xb0\/0x110\n[69832.280554]  ? process_one_work+0xfe0\/0xfe0\n[69832.281414]  kthread+0x32d\/0x3f0\n[69832.282082]  ? kthread_park+0x170\/0x170\n[69832.282849]  ret_from_fork+0x1f\/0x30\n[69832.283573]\n[69832.283886] Allocated by task 7725:\n[69832.284599]  kasan_save_stack+0x19\/0x40\n[69832.285385]  __kasan_kmalloc.constprop.2+0xc1\/0xd0\n[69832.286350]  kmem_cache_alloc_node+0x13f\/0x460\n[69832.287237]  bfq_get_queue+0x3d4\/0x1140\n[69832.287993]  bfq_get_bfqq_handle_split+0x103\/0x510\n[69832.289015]  bfq_init_rq+0x337\/0x2d50\n[69832.289749]  bfq_insert_requests+0x304\/0x4e10\n[69832.290634]  blk_mq_sched_insert_requests+0x13e\/0x390\n[69832.291629]  blk_mq_flush_plug_list+0x4b4\/0x760\n[69832.292538]  blk_flush_plug_list+0x2c5\/0x480\n[69832.293392]  io_schedule_prepare+0xb2\/0xd0\n[69832.294209]  io_schedule_timeout+0x13\/0x80\n[69832.295014]  wait_for_common_io.constprop.1+0x13c\/0x270\n[69832.296137]  submit_bio_wait+0x103\/0x1a0\n[69832.296932]  blkdev_issue_discard+0xe6\/0x160\n[69832.297794]  blk_ioctl_discard+0x219\/0x290\n[69832.298614]  blkdev_common_ioctl+0x50a\/0x1750\n[69832.304715]  blkdev_ioctl+0x470\/0x600\n[69832.305474]  block_ioctl+0xde\/0x120\n[69832.306232]  vfs_ioctl+0x6c\/0xc0\n[69832.306877]  __se_sys_ioctl+0x90\/0xa0\n[69832.307629]  do_syscall_64+0x2d\/0x40\n[69832.308362]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n[69832.309382]\n[69832.309701] Freed by task 155:\n[69832.310328]  kasan_save_stack+0x19\/0x40\n[69832.311121]  kasan_set_track+0x1c\/0x30\n[69832.311868]  kasan_set_free_info+0x1b\/0x30\n[69832.312699]  __kasan_slab_free+0x111\/0x160\n[69832.313524]  kmem_cache_free+0x94\/0x460\n[69832.314367]  bfq_put_queue+0x582\/0x940\n[69832.315112]  __bfq_bfqd_reset_in_service+0x166\/0x1d0\n[69832.317275]  bfq_bfqq_expire+0xb27\/0x2440\n[69832.318084]  bfq_dispatch_request+0x697\/0x44b0\n[69832.318991]  __blk_mq_do_dispatch_sched+0x52f\/0x830\n[69832.319984]  __blk_mq_sched_dispatch_requests+0x398\/0x4f0\n[69832.321087]  blk_mq_sched_dispatch_requests+0xdf\/0x140\n[69832.322225]  __blk_mq_run_hw_queue+0xc0\/0x270\n[69832.323114]  blk_mq_run_work_fn+0x51\/0x6\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/080665e2c3cbfc68359b9a348a3546ed9b908e7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40b4ba0030e0b02cbacd424ebb9f4c8b0976c786","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5117c9ff4c2ebae0f5c2c262d42a25a8fbc086e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5687958bf18f84384d809f521210d0f5deed03b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74e610b5ee0d95e751280567100509eb11517efa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab552fcb17cc9e4afe0e4ac4df95fc7b30e8490a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df6e00b1a53c57dca82c63b5ecbcad5452231bc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49177","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.850","lastModified":"2025-02-26T07:00:54.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwrng: cavium - fix NULL but dereferenced coccicheck error\n\nFix following coccicheck warning:\n.\/drivers\/char\/hw_random\/cavium-rng-vf.c:182:17-20: ERROR:\npdev is NULL but dereferenced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e47b12f9415169eceda6770fcf45802e0c8d2a66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6205ad58a7ac194abfb33897585b38687d797fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49178","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:54.947","lastModified":"2025-02-26T07:00:54.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemstick\/mspro_block: fix handling of read-only devices\n\nUse set_disk_ro to propagate the read-only state to the block layer\ninstead of checking for it in ->open and leaking a reference in case\nof a read-only device."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/057b53c4f87690d626203acef8b63d52a9bf2f43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a0725b9d78ff6efdc95a37e4f05072e79c63918","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dab421bfe06a59bf8f212a72e34673e8acf2018","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49179","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.037","lastModified":"2025-02-26T07:00:55.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock, bfq: don't move oom_bfqq\n\nOur test report a UAF:\n\n[ 2073.019181] ==================================================================\n[ 2073.019188] BUG: KASAN: use-after-free in __bfq_put_async_bfqq+0xa0\/0x168\n[ 2073.019191] Write of size 8 at addr ffff8000ccf64128 by task rmmod\/72584\n[ 2073.019192]\n[ 2073.019196] CPU: 0 PID: 72584 Comm: rmmod Kdump: loaded Not tainted 4.19.90-yk #5\n[ 2073.019198] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02\/06\/2015\n[ 2073.019200] Call trace:\n[ 2073.019203]  dump_backtrace+0x0\/0x310\n[ 2073.019206]  show_stack+0x28\/0x38\n[ 2073.019210]  dump_stack+0xec\/0x15c\n[ 2073.019216]  print_address_description+0x68\/0x2d0\n[ 2073.019220]  kasan_report+0x238\/0x2f0\n[ 2073.019224]  __asan_store8+0x88\/0xb0\n[ 2073.019229]  __bfq_put_async_bfqq+0xa0\/0x168\n[ 2073.019233]  bfq_put_async_queues+0xbc\/0x208\n[ 2073.019236]  bfq_pd_offline+0x178\/0x238\n[ 2073.019240]  blkcg_deactivate_policy+0x1f0\/0x420\n[ 2073.019244]  bfq_exit_queue+0x128\/0x178\n[ 2073.019249]  blk_mq_exit_sched+0x12c\/0x160\n[ 2073.019252]  elevator_exit+0xc8\/0xd0\n[ 2073.019256]  blk_exit_queue+0x50\/0x88\n[ 2073.019259]  blk_cleanup_queue+0x228\/0x3d8\n[ 2073.019267]  null_del_dev+0xfc\/0x1e0 [null_blk]\n[ 2073.019274]  null_exit+0x90\/0x114 [null_blk]\n[ 2073.019278]  __arm64_sys_delete_module+0x358\/0x5a0\n[ 2073.019282]  el0_svc_common+0xc8\/0x320\n[ 2073.019287]  el0_svc_handler+0xf8\/0x160\n[ 2073.019290]  el0_svc+0x10\/0x218\n[ 2073.019291]\n[ 2073.019294] Allocated by task 14163:\n[ 2073.019301]  kasan_kmalloc+0xe0\/0x190\n[ 2073.019305]  kmem_cache_alloc_node_trace+0x1cc\/0x418\n[ 2073.019308]  bfq_pd_alloc+0x54\/0x118\n[ 2073.019313]  blkcg_activate_policy+0x250\/0x460\n[ 2073.019317]  bfq_create_group_hierarchy+0x38\/0x110\n[ 2073.019321]  bfq_init_queue+0x6d0\/0x948\n[ 2073.019325]  blk_mq_init_sched+0x1d8\/0x390\n[ 2073.019330]  elevator_switch_mq+0x88\/0x170\n[ 2073.019334]  elevator_switch+0x140\/0x270\n[ 2073.019338]  elv_iosched_store+0x1a4\/0x2a0\n[ 2073.019342]  queue_attr_store+0x90\/0xe0\n[ 2073.019348]  sysfs_kf_write+0xa8\/0xe8\n[ 2073.019351]  kernfs_fop_write+0x1f8\/0x378\n[ 2073.019359]  __vfs_write+0xe0\/0x360\n[ 2073.019363]  vfs_write+0xf0\/0x270\n[ 2073.019367]  ksys_write+0xdc\/0x1b8\n[ 2073.019371]  __arm64_sys_write+0x50\/0x60\n[ 2073.019375]  el0_svc_common+0xc8\/0x320\n[ 2073.019380]  el0_svc_handler+0xf8\/0x160\n[ 2073.019383]  el0_svc+0x10\/0x218\n[ 2073.019385]\n[ 2073.019387] Freed by task 72584:\n[ 2073.019391]  __kasan_slab_free+0x120\/0x228\n[ 2073.019394]  kasan_slab_free+0x10\/0x18\n[ 2073.019397]  kfree+0x94\/0x368\n[ 2073.019400]  bfqg_put+0x64\/0xb0\n[ 2073.019404]  bfqg_and_blkg_put+0x90\/0xb0\n[ 2073.019408]  bfq_put_queue+0x220\/0x228\n[ 2073.019413]  __bfq_put_async_bfqq+0x98\/0x168\n[ 2073.019416]  bfq_put_async_queues+0xbc\/0x208\n[ 2073.019420]  bfq_pd_offline+0x178\/0x238\n[ 2073.019424]  blkcg_deactivate_policy+0x1f0\/0x420\n[ 2073.019429]  bfq_exit_queue+0x128\/0x178\n[ 2073.019433]  blk_mq_exit_sched+0x12c\/0x160\n[ 2073.019437]  elevator_exit+0xc8\/0xd0\n[ 2073.019440]  blk_exit_queue+0x50\/0x88\n[ 2073.019443]  blk_cleanup_queue+0x228\/0x3d8\n[ 2073.019451]  null_del_dev+0xfc\/0x1e0 [null_blk]\n[ 2073.019459]  null_exit+0x90\/0x114 [null_blk]\n[ 2073.019462]  __arm64_sys_delete_module+0x358\/0x5a0\n[ 2073.019467]  el0_svc_common+0xc8\/0x320\n[ 2073.019471]  el0_svc_handler+0xf8\/0x160\n[ 2073.019474]  el0_svc+0x10\/0x218\n[ 2073.019475]\n[ 2073.019479] The buggy address belongs to the object at ffff8000ccf63f00\n which belongs to the cache kmalloc-1024 of size 1024\n[ 2073.019484] The buggy address is located 552 bytes inside of\n 1024-byte region [ffff8000ccf63f00, ffff8000ccf64300)\n[ 2073.019486] The buggy address belongs to the page:\n[ 2073.019492] page:ffff7e000333d800 count:1 mapcount:0 mapping:ffff8000c0003a00 index:0x0 compound_mapcount: 0\n[ 2073.020123] flags: 0x7ffff0000008100(slab|head)\n[ 2073.020403] raw: 07ffff0000008100 ffff7e0003334c08 ffff7e00001f5a08 ffff8000c0003a00\n[ 2073.020409] ra\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7507ead1e9d42957c2340f2c4a0e9d00034e3366","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8410f70977734f21b8ed45c37e925d311dfda2e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87fdfe8589d43e471dffb4c60f75eeb6f37afc4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f34dea99cd7761156a146a5258a67d045d862f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c01fced8d38fbccc82787065229578006f28e020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4f5a678add58a8a0e7ee5e038496b376ea6d205","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49180","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.137","lastModified":"2025-02-26T07:00:55.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLSM: general protection fault in legacy_parse_param\n\nThe usual LSM hook \"bail on fail\" scheme doesn't work for cases where\na security module may return an error code indicating that it does not\nrecognize an input.  In this particular case Smack sees a mount option\nthat it recognizes, and returns 0. A call to a BPF hook follows, which\nreturns -ENOPARAM, which confuses the caller because Smack has processed\nits data.\n\nThe SELinux hook incorrectly returns 1 on success. There was a time\nwhen this was correct, however the current expectation is that it\nreturn 0 on success. This is repaired."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00fc07fa0b4a004711b6e1a944f0d2e46f7093b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2784604c8c6fc523248f8f80a421c313a9d790b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cadae7c5e477aaafcba819b8e4a3d1c1a1503b62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddcdda888e14ca451b3ee83d11b65b2a9c8e783b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecff30575b5ad0eda149aadad247b7f75411fd47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3f93a1aaafc3032e0a9655fb43deccfb3e953a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49181","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.230","lastModified":"2025-02-26T13:15:34.087","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49182","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.333","lastModified":"2025-02-26T07:00:55.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: add vlan list lock to protect vlan list\n\nWhen adding port base VLAN, vf VLAN need to remove from HW and modify\nthe vlan state in vf VLAN list as false. If the periodicity task is\nfreeing the same node, it may cause \"use after free\" error.\nThis patch adds a vlan list lock to protect the vlan list."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09e383ca97e798f9954189b741af54b5c51e7a97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1932a624ab88ff407d1a1d567fe581faa15dc725","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30f0ff7176efe8ac6c55f85bce26ed58bb608758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f58af41deeab0f45c9c80adf5f2de489ebbac3dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49183","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.427","lastModified":"2025-02-26T07:00:55.427","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: act_ct: fix ref leak when switching zones\n\nWhen switching zones or network namespaces without doing a ct clear in\nbetween, it is now leaking a reference to the old ct entry. That's\nbecause tcf_ct_skb_nfct_cached() returns false and\ntcf_ct_flow_table_lookup() may simply overwrite it.\n\nThe fix is to, as the ct entry is not reusable, free it already at\ntcf_ct_skb_nfct_cached()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4bb42d73def9411e5cad885b9811987d72431df1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b24793a37d91aacad7cb9893b226a7924a89636a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcb74e132a76ce0502bb33d5b65533a4ed72d159","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcbf4e5c3b5b373cd61528392dd1ec8e9c0fd33d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49184","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.520","lastModified":"2025-02-26T07:00:55.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sparx5: switchdev: fix possible NULL pointer dereference\n\nAs the possible failure of the allocation, devm_kzalloc() may return NULL\npointer.\nTherefore, it should be better to check the 'db' in order to prevent\nthe dereference of NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0906f3a3df07835e37077d8971aac65347f2ed57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b375ea083fa649092cd016ac1f89a2d1fd8f8e8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c346791877e6ce923bb21e34b30c6f99326aa5a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e1fff76c4c57688dc7d53a3b6212182d5628d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49185","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.607","lastModified":"2025-02-26T07:00:55.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: nomadik: Add missing of_node_put() in nmk_pinctrl_probe\n\nThis node pointer is returned by of_parse_phandle() with refcount\nincremented in this function. Calling of_node_put() to avoid\nthe refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0067ba448f1c29ca06e5aee00d8506889ed1f9d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0356d4b64a03d23daf99a2a29d7d7d91d6ec2ea8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59250d547542f1c7765a78dc97ddfe5e6b0d2ab0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62580a40c9bef3d8a90629c64dda381344b35ffd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/669b05ff43bd7ed684379c6e2006a6dad5127b71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9511c6018cd772668def8b034bc67269847e591a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc1e29a35147c1ba6ea2b06a16cb0028f7c852d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c09ac191b1f97cfa06f394dbfd7a5db07986cefc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c52703355766c347f270df222a744e0c491a02f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49186","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.710","lastModified":"2025-02-26T07:00:55.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: visconti: prevent array overflow in visconti_clk_register_gates()\n\nThis code was using -1 to represent that there was no reset function.\nUnfortunately, the -1 was stored in u8 so the if (clks[i].rs_id >= 0)\ncondition was always true.  This lead to an out of bounds access in\nvisconti_clk_register_gates()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2723543c1d60278d5aef1c4ad732dbad24b84a81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5601e0720ce1a3ad895f94a5838530edde01ed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49187","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.803","lastModified":"2025-02-26T07:00:55.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Fix clk_hw_get_clk() when dev is NULL\n\nAny registered clk_core structure can have a NULL pointer in its dev\nfield. While never actually documented, this is evidenced by the wide\nusage of clk_register and clk_hw_register with a NULL device pointer,\nand the fact that the core of_clk_hw_register() function also passes a\nNULL device pointer.\n\nA call to clk_hw_get_clk() on a clk_hw struct whose clk_core is in that\ncase will result in a NULL pointer derefence when it calls dev_name() on\nthat NULL device pointer.\n\nAdd a test for this case and use NULL as the dev_id if the device\npointer is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c1b56df451716ba207bbf59f303473643eee4fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23f89fe005b105f0dcc55034c13eb89f9b570fac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4be3e4c05d8dd1b83b75652cad88c9e752ec7054","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d183f20cf5a7b546d4108e796b98210ceb317579","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49188","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.897","lastModified":"2025-02-26T07:00:55.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: qcom_q6v5_mss: Fix some leaks in q6v5_alloc_memory_region\n\nThe device_node pointer is returned by of_parse_phandle() or\nof_get_child_by_name() with refcount incremented.\nWe should use of_node_put() on it when done.\n\nThis function only call of_node_put(node) when of_address_to_resource\nsucceeds, missing error cases."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07a5dcc4bed9d7cae54adf5aa10ff9f037a3204b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7d988735e757e111f9722de7cf1b40a84a48b1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9df3007b3cda4936cc50f5a7d2d30505a652828","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd4771ba2cf9e18473a42b5b70175e50d67a64bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7210ca29a783c94478da02368731e4c9cf7cdb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49189","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:55.990","lastModified":"2025-02-26T07:00:55.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: qcom: clk-rcg2: Update logic to calculate D value for RCG\n\nThe display pixel clock has a requirement on certain newer platforms to\nsupport M\/N as (2\/3) and the final D value calculated results in\nunderflow errors.\nAs the current implementation does not check for D value is within\nthe accepted range for a given M & N value. Update the logic to\ncalculate the final D value based on the range."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/334720f418f57b1d969dad2117b21f9388cb9395","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34dca60982e93e69ae442aa2d36ce61c9a3bb563","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52592f9afbfe01bce8f8953e4f19cbe3bcbdbd3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58922910add18583d5273c2edcdb9fd7bf4eca02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96888f0dcf351e758b9df57e015a48427ca709c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4e2e31971354790b0d1fa3e783452a9d135fcff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49190","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.090","lastModified":"2025-02-26T07:00:56.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkernel\/resource: fix kfree() of bootmem memory again\n\nSince commit ebff7d8f270d (\"mem hotunplug: fix kfree() of bootmem\nmemory\"), we could get a resource allocated during boot via\nalloc_resource().  And it's required to release the resource using\nfree_resource().  Howerver, many people use kfree directly which will\nresult in kernel BUG.  In order to fix this without fixing every call\nsite, just leak a couple of bytes in such corner case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cbcc92917c5de80f15c24d033566539ad696892","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9e88c2618d228d7a4e7e515cf30dc0d0d813f27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab86020070999e758ce2e60c4348f20bf7ddba56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7faa04a44a0c37ac3d222fa8e0bdcbfcee9c0c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49191","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.183","lastModified":"2025-02-26T07:00:56.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmxser: fix xmit_buf leak in activate when LSR == 0xff\n\nWhen LSR is 0xff in ->activate() (rather unlike), we return an error.\nProvided ->shutdown() is not called when ->activate() fails, nothing\nactually frees the buffer in this case.\n\nFix this by properly freeing the buffer in a designated label. We jump\nthere also from the \"!info->type\" if now too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/125b7c929fc9b1e5eaa344bceb6367dfa6fd3f9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cd05c38a27bee7fb42aa4d43174d68ac55dac0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/376922045009f8ea2d20a8fa3475e95b47c41690","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/685b6d16bf89595310b5d61394c9b97cc9505c7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c9041b2f90c0eace73106f22350e1d2c98f5edc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dffc2035fbaada60ca8db59e0962e34f760370a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/996291d06851a26678a0fab488b6e1f0677c0576","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b125b08dbee3611f03f53b71471813ed4ccafcdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd3a4907ee334b40d7aa880c7ab310b154fd5cd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49192","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.287","lastModified":"2025-02-26T07:00:56.287","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: ethernet: cpsw: fix panic when interrupt coaleceing is set via ethtool\n\ncpsw_ethtool_begin directly returns the result of pm_runtime_get_sync\nwhen successful.\npm_runtime_get_sync returns -error code on failure and 0 on successful\nresume but also 1 when the device is already active. So the common case\nfor cpsw_ethtool_begin is to return 1. That leads to inconsistent calls\nto pm_runtime_put in the call-chain so that pm_runtime_put is called\none too many times and as result leaving the cpsw dev behind suspended.\n\nThe suspended cpsw dev leads to an access violation later on by\ndifferent parts of the cpsw driver.\n\nFix this by calling the return-friendly pm_runtime_resume_and_get\nfunction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2844e2434385819f674d1fb4130c308c50ba681e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30ad11bff021a94aff6dab1ec9236fdfd884fbff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/459080fab12b23c0526026e5cedbf3fabb5457cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/585dc196a08fccdcd1b7fcf473cf566b34c4b840","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49193","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.383","lastModified":"2025-02-26T07:00:56.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix 'scheduling while atomic' on aux critical err interrupt\n\nThere's a kernel BUG splat on processing aux critical error\ninterrupts in ice_misc_intr():\n\n[ 2100.917085] BUG: scheduling while atomic: swapper\/15\/0\/0x00010000\n...\n[ 2101.060770] Call Trace:\n[ 2101.063229]  <IRQ>\n[ 2101.065252]  dump_stack+0x41\/0x60\n[ 2101.068587]  __schedule_bug.cold.100+0x4c\/0x58\n[ 2101.073060]  __schedule+0x6a4\/0x830\n[ 2101.076570]  schedule+0x35\/0xa0\n[ 2101.079727]  schedule_preempt_disabled+0xa\/0x10\n[ 2101.084284]  __mutex_lock.isra.7+0x310\/0x420\n[ 2101.088580]  ? ice_misc_intr+0x201\/0x2e0 [ice]\n[ 2101.093078]  ice_send_event_to_aux+0x25\/0x70 [ice]\n[ 2101.097921]  ice_misc_intr+0x220\/0x2e0 [ice]\n[ 2101.102232]  __handle_irq_event_percpu+0x40\/0x180\n[ 2101.106965]  handle_irq_event_percpu+0x30\/0x80\n[ 2101.111434]  handle_irq_event+0x36\/0x53\n[ 2101.115292]  handle_edge_irq+0x82\/0x190\n[ 2101.119148]  handle_irq+0x1c\/0x30\n[ 2101.122480]  do_IRQ+0x49\/0xd0\n[ 2101.125465]  common_interrupt+0xf\/0xf\n[ 2101.129146]  <\/IRQ>\n...\n\nAs Andrew correctly mentioned previously[0], the following call\nladder happens:\n\nice_misc_intr() <- hardirq\n  ice_send_event_to_aux()\n    device_lock()\n      mutex_lock()\n        might_sleep()\n          might_resched() <- oops\n\nAdd a new PF state bit which indicates that an aux critical error\noccurred and serve it in ice_service_task() in process context.\nThe new ice_pf::oicr_err_reg is read-write in both hardirq and\nprocess contexts, but only 3 bits of non-critical data probably\naren't worth explicit synchronizing (and they're even in the same\nbyte [31:24]).\n\n[0] https:\/\/lore.kernel.org\/all\/YeSRUVmrdmlUXHDn@lunn.ch"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24d7ac8426306ae7ccea7f7dd612a7368fe7201d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32d53c0aa3a7b727243473949bad2a830b908edc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59e88a50afad7469c55804e46bf2924b9130281f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b77c8cf69a41d1e3851370aeaa04a9ea83b865c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49194","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.483","lastModified":"2025-02-26T07:00:56.483","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bcmgenet: Use stronger register read\/writes to assure ordering\n\nGCC12 appears to be much smarter about its dependency tracking and is\naware that the relaxed variants are just normal loads and stores and\nthis is causing problems like:\n\n[  210.074549] ------------[ cut here ]------------\n[  210.079223] NETDEV WATCHDOG: enabcm6e4ei0 (bcmgenet): transmit queue 1 timed out\n[  210.086717] WARNING: CPU: 1 PID: 0 at net\/sched\/sch_generic.c:529 dev_watchdog+0x234\/0x240\n[  210.095044] Modules linked in: genet(E) nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat]\n[  210.146561] ACPI CPPC: PCC check channel failed for ss: 0. ret=-110\n[  210.146927] CPU: 1 PID: 0 Comm: swapper\/1 Tainted: G            E     5.17.0-rc7G12+ #58\n[  210.153226] CPPC Cpufreq:cppc_scale_freq_workfn: failed to read perf counters\n[  210.161349] Hardware name: Raspberry Pi Foundation Raspberry Pi 4 Model B\/Raspberry Pi 4 Model B, BIOS EDK2-DEV 02\/08\/2022\n[  210.161353] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  210.161358] pc : dev_watchdog+0x234\/0x240\n[  210.161364] lr : dev_watchdog+0x234\/0x240\n[  210.161368] sp : ffff8000080a3a40\n[  210.161370] x29: ffff8000080a3a40 x28: ffffcd425af87000 x27: ffff8000080a3b20\n[  210.205150] x26: ffffcd425aa00000 x25: 0000000000000001 x24: ffffcd425af8ec08\n[  210.212321] x23: 0000000000000100 x22: ffffcd425af87000 x21: ffff55b142688000\n[  210.219491] x20: 0000000000000001 x19: ffff55b1426884c8 x18: ffffffffffffffff\n[  210.226661] x17: 64656d6974203120 x16: 0000000000000001 x15: 6d736e617274203a\n[  210.233831] x14: 2974656e65676d63 x13: ffffcd4259c300d8 x12: ffffcd425b07d5f0\n[  210.241001] x11: 00000000ffffffff x10: ffffcd425b07d5f0 x9 : ffffcd4258bdad9c\n[  210.248171] x8 : 00000000ffffdfff x7 : 000000000000003f x6 : 0000000000000000\n[  210.255341] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000001000\n[  210.262511] x2 : 0000000000001000 x1 : 0000000000000005 x0 : 0000000000000044\n[  210.269682] Call trace:\n[  210.272133]  dev_watchdog+0x234\/0x240\n[  210.275811]  call_timer_fn+0x3c\/0x15c\n[  210.279489]  __run_timers.part.0+0x288\/0x310\n[  210.283777]  run_timer_softirq+0x48\/0x80\n[  210.287716]  __do_softirq+0x128\/0x360\n[  210.291392]  __irq_exit_rcu+0x138\/0x140\n[  210.295243]  irq_exit_rcu+0x1c\/0x30\n[  210.298745]  el1_interrupt+0x38\/0x54\n[  210.302334]  el1h_64_irq_handler+0x18\/0x24\n[  210.306445]  el1h_64_irq+0x7c\/0x80\n[  210.309857]  arch_cpu_idle+0x18\/0x2c\n[  210.313445]  default_idle_call+0x4c\/0x140\n[  210.317470]  cpuidle_idle_call+0x14c\/0x1a0\n[  210.321584]  do_idle+0xb0\/0x100\n[  210.324737]  cpu_startup_entry+0x30\/0x8c\n[  210.328675]  secondary_start_kernel+0xe4\/0x110\n[  210.333138]  __secondary_switched+0x94\/0x98\n\nThe assumption when these were relaxed seems to be that device memory\nwould be mapped non reordering, and that other constructs\n(spinlocks\/etc) would provide the barriers to assure that packet data\nand in memory rings\/queues were ordered with respect to device\nregister reads\/writes. This itself seems a bit sketchy, but the real\nproblem with GCC12 is that it is moving the actual reads\/writes around\nat will as though they were independent operations when in truth they\nare not, but the compiler can't know that. When looking at the\nassembly dumps for many of these routines its possible to see very\nclean, but not strictly in program order operations occurring as the\ncompiler would be free to do if these weren't actually register\nreads\/write operations.\n\nIts possible to suppress the timeout with a liberal bit of dma_mb()'s\nsprinkled around but the device still seems unable to reliably\nsend\/receive data. A better plan is to use the safer readl\/writel\neverywhere.\n\nSince this partially reverts an older commit, which notes the use of\nthe relaxed variants for performance reasons. I would suggest that\nany performance problems \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06d836801cd82ded282aaf9e888ff9e7e4a88b91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d717816189fd68f9e089cf89ed1f7327d2c2e71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d3ea3d402db94b61075617e71b67459a714a502","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26091a02093104259ca64aeca73601e56160d62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f49769b462f282477ca801cf648f875b1c5b59db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49195","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.580","lastModified":"2025-02-26T07:00:56.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: fix panic on shutdown if multi-chip tree failed to probe\n\nDSA probing is atypical because a tree of devices must probe all at\nonce, so out of N switches which call dsa_tree_setup_routing_table()\nduring probe, for (N - 1) of them, \"complete\" will return false and they\nwill exit probing early. The Nth switch will set up the whole tree on\ntheir behalf.\n\nThe implication is that for (N - 1) switches, the driver binds to the\ndevice successfully, without doing anything. When the driver is bound,\nthe ->shutdown() method may run. But if the Nth switch has failed to\ninitialize the tree, there is nothing to do for the (N - 1) driver\ninstances, since the slave devices have not been created, etc. Moreover,\ndsa_switch_shutdown() expects that the calling @ds has been in fact\ninitialized, so it jumps at dereferencing the various data structures,\nwhich is incorrect.\n\nAvoid the ensuing NULL pointer dereferences by simply checking whether\nthe Nth switch has previously set \"ds->setup = true\" for the switch\nwhich is currently shutting down. The entire setup is serialized under\ndsa2_mutex which we already hold."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8fd36358ce82382519b50b05f437493e1e00c4a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95df5cd5a446df6738d2d45872e08594819080e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6e668ff43ebd87ccc8a19e5481345c428672295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b864d5350c18bea9369d0bdd9e7eb6f6172cc283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49196","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.677","lastModified":"2025-02-26T07:00:56.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/pseries: Fix use after free in remove_phb_dynamic()\n\nIn remove_phb_dynamic() we use &phb->io_resource, after we've called\ndevice_unregister(&host_bridge->dev). But the unregister may have freed\nphb, because pcibios_free_controller_deferred() is the release function\nfor the host_bridge.\n\nIf there are no outstanding references when we call device_unregister()\nthen phb will be freed out from under us.\n\nThis has gone mainly unnoticed, but with slub_debug and page_poison\nenabled it can lead to a crash:\n\n  PID: 7574   TASK: c0000000d492cb80  CPU: 13  COMMAND: \"drmgr\"\n   #0 [c0000000e4f075a0] crash_kexec at c00000000027d7dc\n   #1 [c0000000e4f075d0] oops_end at c000000000029608\n   #2 [c0000000e4f07650] __bad_page_fault at c0000000000904b4\n   #3 [c0000000e4f076c0] do_bad_slb_fault at c00000000009a5a8\n   #4 [c0000000e4f076f0] data_access_slb_common_virt at c000000000008b30\n   Data SLB Access [380] exception frame:\n   R0:  c000000000167250    R1:  c0000000e4f07a00    R2:  c000000002a46100\n   R3:  c000000002b39ce8    R4:  00000000000000c0    R5:  00000000000000a9\n   R6:  3894674d000000c0    R7:  0000000000000000    R8:  00000000000000ff\n   R9:  0000000000000100    R10: 6b6b6b6b6b6b6b6b    R11: 0000000000008000\n   R12: c00000000023da80    R13: c0000009ffd38b00    R14: 0000000000000000\n   R15: 000000011c87f0f0    R16: 0000000000000006    R17: 0000000000000003\n   R18: 0000000000000002    R19: 0000000000000004    R20: 0000000000000005\n   R21: 000000011c87ede8    R22: 000000011c87c5a8    R23: 000000011c87d3a0\n   R24: 0000000000000000    R25: 0000000000000001    R26: c0000000e4f07cc8\n   R27: c00000004d1cc400    R28: c0080000031d00e8    R29: c00000004d23d800\n   R30: c00000004d1d2400    R31: c00000004d1d2540\n   NIP: c000000000167258    MSR: 8000000000009033    OR3: c000000000e9f474\n   CTR: 0000000000000000    LR:  c000000000167250    XER: 0000000020040003\n   CCR: 0000000024088420    MQ:  0000000000000000    DAR: 6b6b6b6b6b6b6ba3\n   DSISR: c0000000e4f07920     Syscall Result: fffffffffffffff2\n   [NIP  : release_resource+56]\n   [LR   : release_resource+48]\n   #5 [c0000000e4f07a00] release_resource at c000000000167258  (unreliable)\n   #6 [c0000000e4f07a30] remove_phb_dynamic at c000000000105648\n   #7 [c0000000e4f07ab0] dlpar_remove_slot at c0080000031a09e8 [rpadlpar_io]\n   #8 [c0000000e4f07b50] remove_slot_store at c0080000031a0b9c [rpadlpar_io]\n   #9 [c0000000e4f07be0] kobj_attr_store at c000000000817d8c\n  #10 [c0000000e4f07c00] sysfs_kf_write at c00000000063e504\n  #11 [c0000000e4f07c20] kernfs_fop_write_iter at c00000000063d868\n  #12 [c0000000e4f07c70] new_sync_write at c00000000054339c\n  #13 [c0000000e4f07d10] vfs_write at c000000000546624\n  #14 [c0000000e4f07d60] ksys_write at c0000000005469f4\n  #15 [c0000000e4f07db0] system_call_exception at c000000000030840\n  #16 [c0000000e4f07e10] system_call_vectored_common at c00000000000c168\n\nTo avoid it, we can take a reference to the host_bridge->dev until we're\ndone using phb. Then when we drop the reference the phb will be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33d39efb61a84e055ca2386157d39ebbdf6b7d31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/403f9e0bc5535a0a5184d1352fa3a70e6ffacb6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/895ca4ae1f72e0a0160ab162723e59c9f265ec93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe2640bd7a62f1f7c3f55fbda31084085075bc30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49197","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.770","lastModified":"2025-02-26T07:00:56.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_netlink: Fix shift out of bounds in group mask calculation\n\nWhen a netlink message is received, netlink_recvmsg() fills in the address\nof the sender. One of the fields is the 32-bit bitfield nl_groups, which\ncarries the multicast group on which the message was received. The least\nsignificant bit corresponds to group 1, and therefore the highest group\nthat the field can represent is 32. Above that, the UB sanitizer flags the\nout-of-bounds shift attempts.\n\nWhich bits end up being set in such case is implementation defined, but\nit's either going to be a wrong non-zero value, or zero, which is at least\nnot misleading. Make the latter choice deterministic by always setting to 0\nfor higher-numbered multicast groups.\n\nTo get information about membership in groups >= 32, userspace is expected\nto use nl_pktinfo control messages[0], which are enabled by NETLINK_PKTINFO\nsocket option.\n[0] https:\/\/lwn.net\/Articles\/147608\/\n\nThe way to trigger this issue is e.g. through monitoring the BRVLAN group:\n\n\t# bridge monitor vlan &\n\t# ip link add name br type bridge\n\nWhich produces the following citation:\n\n\tUBSAN: shift-out-of-bounds in net\/netlink\/af_netlink.c:162:19\n\tshift exponent 32 is too large for 32-bit type 'int'"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0caf6d9922192dd1afa8dc2131abfb4df1443b9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41249fff507387c3323b198d0052faed08b14de4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7409ff6393a67ff9838d0ae1bd102fb5f020d07a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac5883a8890a11c00b32a19949a25d4afeaa2f5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0898362188e05b2202656058cc32d98fabf3bac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1c5d46f05aa23d740daae5cd3a6472145afac42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e23e1e981247feb3c7d0236fe58aceb685f234ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8aaf3134bc5e943048eefe9f2ddaabf41d92b1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f75f4abeec4c04b600a15b50c89a481f1e7435ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49198","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.880","lastModified":"2025-02-26T07:00:56.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: Fix crash due to tcp_tsorted_anchor was initialized before release skb\n\nGot crash when doing pressure test of mptcp:\n\n===========================================================================\ndst_release: dst:ffffa06ce6e5c058 refcnt:-1\nkernel tried to execute NX-protected page - exploit attempt? (uid: 0)\nBUG: unable to handle kernel paging request at ffffa06ce6e5c058\nPGD 190a01067 P4D 190a01067 PUD 43fffb067 PMD 22e403063 PTE 8000000226e5c063\nOops: 0011 [#1] SMP PTI\nCPU: 7 PID: 7823 Comm: kworker\/7:0 Kdump: loaded Tainted: G            E\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.2.1 04\/01\/2014\nCall Trace:\n ? skb_release_head_state+0x68\/0x100\n ? skb_release_all+0xe\/0x30\n ? kfree_skb+0x32\/0xa0\n ? mptcp_sendmsg_frag+0x57e\/0x750\n ? __mptcp_retrans+0x21b\/0x3c0\n ? __switch_to_asm+0x35\/0x70\n ? mptcp_worker+0x25e\/0x320\n ? process_one_work+0x1a7\/0x360\n ? worker_thread+0x30\/0x390\n ? create_worker+0x1a0\/0x1a0\n ? kthread+0x112\/0x130\n ? kthread_flush_work_fn+0x10\/0x10\n ? ret_from_fork+0x35\/0x40\n===========================================================================\n\nIn __mptcp_alloc_tx_skb skb was allocated and skb->tcp_tsorted_anchor will\nbe initialized, in under memory pressure situation sk_wmem_schedule will\nreturn false and then kfree_skb. In this case skb->_skb_refdst is not null\nbecause_skb_refdst and tcp_tsorted_anchor are stored in the same mem, and\nkfree_skb will try to release dst and cause crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ef3905aa3b5b3e222ee6eb0210bfd999417a8cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d54181eba4b077fb74033a7186898ad4000a7a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/752add6f5ce5305e55d8bda4ac8d69be3a09f14d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af61a8f7603926c26158153d0a0755764d82657c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49199","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:56.970","lastModified":"2025-02-26T07:00:56.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/nldev: Prevent underflow in nldev_stat_set_counter_dynamic_doit()\n\nThis code checks \"index\" for an upper bound but it does not check for\nnegatives.  Change the type to unsigned to prevent underflows."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a495ef04d5f42e6f00eb2bec1ee9075e3d5a771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87e0eacb176f9500c2063d140c0a1d7fa51ab8a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6dd8669b8299a3a536cd92a7069152a7704da1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49200","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.067","lastModified":"2025-02-26T07:00:57.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btmtksdio: Fix kernel oops in btmtksdio_interrupt\n\nFix the following kernel oops in btmtksdio_interrrupt\n\n[   14.339134]  btmtksdio_interrupt+0x28\/0x54\n[   14.339139]  process_sdio_pending_irqs+0x68\/0x1a0\n[   14.339144]  sdio_irq_work+0x40\/0x70\n[   14.339154]  process_one_work+0x184\/0x39c\n[   14.339160]  worker_thread+0x228\/0x3e8\n[   14.339168]  kthread+0x148\/0x3ac\n[   14.339176]  ret_from_fork+0x10\/0x30\n\nThat happened because hdev->power_on is already called before\nsdio_set_drvdata which btmtksdio_interrupt handler relies on is not\nproperly set up.\n\nThe details are shown as the below: hci_register_dev would run\nqueue_work(hdev->req_workqueue, &hdev->power_on) as WQ_HIGHPRI\nworkqueue_struct to complete the power-on sequeunce and thus hci_power_on\nmay run before sdio_set_drvdata is done in btmtksdio_probe.\n\nThe hci_dev_do_open in hci_power_on would initialize the device and enable\nthe interrupt and thus it is possible that btmtksdio_interrupt is being\ncalled right before sdio_set_drvdata is filled out.\n\nWhen btmtksdio_interrupt is being called and sdio_set_drvdata is not filled\n, the kernel oops is going to happen because btmtksdio_interrupt access an\nuninitialized pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d3d1f2c35a19988d3c5f0ee86038b525e830840","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d7be5afbb41c918d2f12f857f8c7efa50500be2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70a6cf749d9ff9f463490248322e5343199bc267","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/770a97d3f34b801de1b04737b43e02c55118c41a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/874eca93966a786eace87fa6dfb206c2dd9519b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b062a0b9c1dc1ff63094337dccfe1568d5b62023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49201","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.160","lastModified":"2025-02-26T07:00:57.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: fix race between xmit and reset\n\nThere is a race between reset and the transmit paths that can lead to\nibmvnic_xmit() accessing an scrq after it has been freed in the reset\npath. It can result in a crash like:\n\n\tKernel attempted to read user page (0) - exploit attempt? (uid: 0)\n\tBUG: Kernel NULL pointer dereference on read at 0x00000000\n\tFaulting instruction address: 0xc0080000016189f8\n\tOops: Kernel access of bad area, sig: 11 [#1]\n\t...\n\tNIP [c0080000016189f8] ibmvnic_xmit+0x60\/0xb60 [ibmvnic]\n\tLR [c000000000c0046c] dev_hard_start_xmit+0x11c\/0x280\n\tCall Trace:\n\t[c008000001618f08] ibmvnic_xmit+0x570\/0xb60 [ibmvnic] (unreliable)\n\t[c000000000c0046c] dev_hard_start_xmit+0x11c\/0x280\n\t[c000000000c9cfcc] sch_direct_xmit+0xec\/0x330\n\t[c000000000bfe640] __dev_xmit_skb+0x3a0\/0x9d0\n\t[c000000000c00ad4] __dev_queue_xmit+0x394\/0x730\n\t[c008000002db813c] __bond_start_xmit+0x254\/0x450 [bonding]\n\t[c008000002db8378] bond_start_xmit+0x40\/0xc0 [bonding]\n\t[c000000000c0046c] dev_hard_start_xmit+0x11c\/0x280\n\t[c000000000c00ca4] __dev_queue_xmit+0x564\/0x730\n\t[c000000000cf97e0] neigh_hh_output+0xd0\/0x180\n\t[c000000000cfa69c] ip_finish_output2+0x31c\/0x5c0\n\t[c000000000cfd244] __ip_queue_xmit+0x194\/0x4f0\n\t[c000000000d2a3c4] __tcp_transmit_skb+0x434\/0x9b0\n\t[c000000000d2d1e0] __tcp_retransmit_skb+0x1d0\/0x6a0\n\t[c000000000d2d984] tcp_retransmit_skb+0x34\/0x130\n\t[c000000000d310e8] tcp_retransmit_timer+0x388\/0x6d0\n\t[c000000000d315ec] tcp_write_timer_handler+0x1bc\/0x330\n\t[c000000000d317bc] tcp_write_timer+0x5c\/0x200\n\t[c000000000243270] call_timer_fn+0x50\/0x1c0\n\t[c000000000243704] __run_timers.part.0+0x324\/0x460\n\t[c000000000243894] run_timer_softirq+0x54\/0xa0\n\t[c000000000ea713c] __do_softirq+0x15c\/0x3e0\n\t[c000000000166258] __irq_exit_rcu+0x158\/0x190\n\t[c000000000166420] irq_exit+0x20\/0x40\n\t[c00000000002853c] timer_interrupt+0x14c\/0x2b0\n\t[c000000000009a00] decrementer_common_virt+0x210\/0x220\n\t--- interrupt: 900 at plpar_hcall_norets_notrace+0x18\/0x2c\n\nThe immediate cause of the crash is the access of tx_scrq in the following\nsnippet during a reset, where the tx_scrq can be either NULL or an address\nthat will soon be invalid:\n\n\tibmvnic_xmit()\n\t{\n\t\t...\n\t\ttx_scrq = adapter->tx_scrq[queue_num];\n\t\ttxq = netdev_get_tx_queue(netdev, queue_num);\n\t\tind_bufp = &tx_scrq->ind_buf;\n\n\t\tif (test_bit(0, &adapter->resetting)) {\n\t\t...\n\t}\n\nBut beyond that, the call to ibmvnic_xmit() itself is not safe during a\nreset and the reset path attempts to avoid this by stopping the queue in\nibmvnic_cleanup(). However just after the queue was stopped, an in-flight\nibmvnic_complete_tx() could have restarted the queue even as the reset is\nprogressing.\n\nSince the queue was restarted we could get a call to ibmvnic_xmit() which\ncan then access the bad tx_scrq (or other fields).\n\nWe cannot however simply have ibmvnic_complete_tx() check the ->resetting\nbit and skip starting the queue. This can race at the \"back-end\" of a good\nreset which just restarted the queue but has not cleared the ->resetting\nbit yet. If we skip restarting the queue due to ->resetting being true,\nthe queue would remain stopped indefinitely potentially leading to transmit\ntimeouts.\n\nIOW ->resetting is too broad for this purpose. Instead use a new flag\nthat indicates whether or not the queues are active. Only the open\/\nreset paths control when the queues are active. ibmvnic_complete_tx()\nand others wake up the queue only if the queue is marked active.\n\nSo we will have:\n\tA. reset\/open thread in ibmvnic_cleanup() and __ibmvnic_open()\n\n\t\t->resetting = true\n\t\t->tx_queues_active = false\n\t\tdisable tx queues\n\t\t...\n\t\t->tx_queues_active = true\n\t\tstart tx queues\n\n\tB. Tx interrupt in ibmvnic_complete_tx():\n\n\t\tif (->tx_queues_active)\n\t\t\tnetif_wake_subqueue();\n\nTo ensure that ->tx_queues_active and state of the queues are consistent,\nwe need a lock which:\n\n\t- must also be taken in the interrupt path (ibmvnic_complete_tx())\n\t- shared across the multiple\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bd58abf595b6cf1ba6dd47ec887c4c009155fc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4219196d1f662cb10a462eb9e076633a3fc31a15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/475f9cce98b63bc145b4efa66fa51175d4cb345f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8507c6ade73cdbbbda5c3d31d67f52f2e1cf03fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49202","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.260","lastModified":"2025-02-26T07:00:57.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_uart: add missing NULL check in h5_enqueue\n\nSyzbot hit general protection fault in __pm_runtime_resume(). The problem\nwas in missing NULL check.\n\nhu->serdev can be NULL and we should not blindly pass &serdev->dev\nsomewhere, since it will cause GPF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32cb08e958696908a9aad5e49a78d74f7e32fffb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7235485433d290367d60ae22fcdfc565e61d42ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a3896c30f542439d36303183dc96f65df8cc528","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6b6c904c0f88588b6a3ace20e4c0d61eab124f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49203","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.357","lastModified":"2025-02-26T07:00:57.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix double free during GPU reset on DC streams\n\n[Why]\nThe issue only occurs during the GPU reset code path.\n\nWe first backup the current state prior to commiting 0 streams\ninternally from DM to DC. This state backup contains valid link\nencoder assignments.\n\nDC will clear the link encoder assignments as part of current state\n(but not the backup, since it was a copied before the commit) and\nfree the extra stream reference it held.\n\nDC requires that the link encoder assignments remain cleared\/invalid\nprior to commiting. Since the backup still has valid assignments we\ncall the interface post reset to clear them. This routine also\nreleases the extra reference that the link encoder interface held -\nresulting in a double free (and eventually a NULL pointer dereference).\n\n[How]\nWe'll have to do a full DC commit anyway after GPU reset because\nthe stream count previously went to 0.\n\nWe don't need to retain the assignment that we had backed up, so\njust copy off of the now clean current state assignment after the\nreset has occcurred with the new link_enc_cfg_copy() interface."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32685b32d825ca08c5dec826477332df886c4743","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbfcdd6289ba6f00f0cd7d496946dce9f6c600ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49204","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.480","lastModified":"2025-02-26T07:00:57.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix more uncharged while msg has more_data\n\nIn tcp_bpf_send_verdict(), if msg has more data after\ntcp_bpf_sendmsg_redir():\n\ntcp_bpf_send_verdict()\n tosend = msg->sg.size  \/\/msg->sg.size = 22220\n case __SK_REDIRECT:\n  sk_msg_return()  \/\/uncharged msg->sg.size(22220) sk->sk_forward_alloc\n  tcp_bpf_sendmsg_redir() \/\/after tcp_bpf_sendmsg_redir, msg->sg.size=11000\n goto more_data;\n tosend = msg->sg.size  \/\/msg->sg.size = 11000\n case __SK_REDIRECT:\n  sk_msg_return()  \/\/uncharged msg->sg.size(11000) to sk->sk_forward_alloc\n\nThe msg->sg.size(11000) has been uncharged twice, to fix we can charge the\nremaining msg->sg.size before goto more data.\n\nThis issue can cause the following info:\nWARNING: CPU: 0 PID: 9860 at net\/core\/stream.c:208 sk_stream_kill_queues+0xd4\/0x1a0\nCall Trace:\n <TASK>\n inet_csk_destroy_sock+0x55\/0x110\n __tcp_close+0x279\/0x470\n tcp_close+0x1f\/0x60\n inet_release+0x3f\/0x80\n __sock_release+0x3d\/0xb0\n sock_close+0x11\/0x20\n __fput+0x92\/0x250\n task_work_run+0x6a\/0xa0\n do_exit+0x33b\/0xb60\n do_group_exit+0x2f\/0xa0\n get_signal+0xb6\/0x950\n arch_do_signal_or_restart+0xac\/0x2a0\n ? vfs_write+0x237\/0x290\n exit_to_user_mode_prepare+0xa9\/0x200\n syscall_exit_to_user_mode+0x12\/0x30\n do_syscall_64+0x46\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n <\/TASK>\n\nWARNING: CPU: 0 PID: 2136 at net\/ipv4\/af_inet.c:155 inet_sock_destruct+0x13c\/0x260\nCall Trace:\n <TASK>\n __sk_destruct+0x24\/0x1f0\n sk_psock_destroy+0x19b\/0x1c0\n process_one_work+0x1b3\/0x3c0\n worker_thread+0x30\/0x350\n ? process_one_work+0x3c0\/0x3c0\n kthread+0xe6\/0x110\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x22\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/168ff181f5b6e7fce684c98a30d35da1dbf8f82a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/244ce90c8d0bd10ebf957da02c6f3fcd5d920bdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b812a369e6416ab06d83cdd39d8e3f752781dd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84472b436e760ba439e1969a9e3c5ae7c86de39d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87d532d41ef937e16f61b3d2094f3a2ac49be365","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abb4caa477a5450817d2aa1198edce66450aecf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49205","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.620","lastModified":"2025-02-26T07:00:57.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix double uncharge the mem of sk_msg\n\nIf tcp_bpf_sendmsg is running during a tear down operation, psock may be\nfreed.\n\ntcp_bpf_sendmsg()\n tcp_bpf_send_verdict()\n  sk_msg_return()\n  tcp_bpf_sendmsg_redir()\n   unlikely(!psock))\n     sk_msg_free()\n\nThe mem of msg has been uncharged in tcp_bpf_send_verdict() by\nsk_msg_return(), and would be uncharged by sk_msg_free() again. When psock\nis null, we can simply returning an error code, this would then trigger\nthe sk_msg_free_nocharge in the error path of __SK_REDIRECT and would have\nthe side effect of throwing an error up to user space. This would be a\nslight change in behavior from user side but would look the same as an\nerror if the redirect on the socket threw an error.\n\nThis issue can cause the following info:\nWARNING: CPU: 0 PID: 2136 at net\/ipv4\/af_inet.c:155 inet_sock_destruct+0x13c\/0x260\nCall Trace:\n <TASK>\n __sk_destruct+0x24\/0x1f0\n sk_psock_destroy+0x19b\/0x1c0\n process_one_work+0x1b3\/0x3c0\n worker_thread+0x30\/0x350\n ? process_one_work+0x3c0\/0x3c0\n kthread+0xe6\/0x110\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x22\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/223f3c51ab163852dd4819d357dcf33039929434","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2486ab434b2c2a14e9237296db00b1e1b7ae3273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94c6ac22abcdede72bfaa0f4c22fb370891f4002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac3ecb7760c750c8e4fc09c719241d8e6e88028c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb6f141ae705af0101e819065a79e6d029f6e393","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd84ea3920aef936c559b63099ef0013ce6b2325","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49206","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.723","lastModified":"2025-02-26T07:00:57.723","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/mlx5: Fix memory leak in error flow for subscribe event routine\n\nIn case the second xa_insert() fails, the obj_event is not released.  Fix\nthe error unwind flow to free that memory to avoid a memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0174a89663a5ef83617da15bf24c0af2f62b6c7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/087f9c3f2309ed183f7e4b85ae57121d8663224d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/414b4e8738484379f18d6c4e780787c80dbf8a2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dd392e352d3269938fea32061a74655a613f929","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c98d903ff9e79c210beddea4e6bc15ac38e25aa5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d66498507801fd9a20307a15a0814a0a016c3cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49207","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.817","lastModified":"2025-02-26T07:00:57.817","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix memleak in sk_psock_queue_msg\n\nIf tcp_bpf_sendmsg is running during a tear down operation we may enqueue\ndata on the ingress msg queue while tear down is trying to free it.\n\n sk1 (redirect sk2)                         sk2\n -------------------                      ---------------\ntcp_bpf_sendmsg()\n tcp_bpf_send_verdict()\n  tcp_bpf_sendmsg_redir()\n   bpf_tcp_ingress()\n                                          sock_map_close()\n                                           lock_sock()\n    lock_sock() ... blocking\n                                           sk_psock_stop\n                                            sk_psock_clear_state(psock, SK_PSOCK_TX_ENABLED);\n                                           release_sock(sk);\n    lock_sock()\n    sk_mem_charge()\n    get_page()\n    sk_psock_queue_msg()\n     sk_psock_test_state(psock, SK_PSOCK_TX_ENABLED);\n      drop_sk_msg()\n    release_sock()\n\nWhile drop_sk_msg(), the msg has charged memory form sk by sk_mem_charge\nand has sg pages need to put. To fix we use sk_msg_free() and then kfee()\nmsg.\n\nThis issue can cause the following info:\nWARNING: CPU: 0 PID: 9202 at net\/core\/stream.c:205 sk_stream_kill_queues+0xc8\/0xe0\nCall Trace:\n <IRQ>\n inet_csk_destroy_sock+0x55\/0x110\n tcp_rcv_state_process+0xe5f\/0xe90\n ? sk_filter_trim_cap+0x10d\/0x230\n ? tcp_v4_do_rcv+0x161\/0x250\n tcp_v4_do_rcv+0x161\/0x250\n tcp_v4_rcv+0xc3a\/0xce0\n ip_protocol_deliver_rcu+0x3d\/0x230\n ip_local_deliver_finish+0x54\/0x60\n ip_local_deliver+0xfd\/0x110\n ? ip_protocol_deliver_rcu+0x230\/0x230\n ip_rcv+0xd6\/0x100\n ? ip_local_deliver+0x110\/0x110\n __netif_receive_skb_one_core+0x85\/0xa0\n process_backlog+0xa4\/0x160\n __napi_poll+0x29\/0x1b0\n net_rx_action+0x287\/0x300\n __do_softirq+0xff\/0x2fc\n do_softirq+0x79\/0x90\n <\/IRQ>\n\nWARNING: CPU: 0 PID: 531 at net\/ipv4\/af_inet.c:154 inet_sock_destruct+0x175\/0x1b0\nCall Trace:\n <TASK>\n __sk_destruct+0x24\/0x1f0\n sk_psock_destroy+0x19b\/0x1c0\n process_one_work+0x1b3\/0x3c0\n ? process_one_work+0x3c0\/0x3c0\n worker_thread+0x30\/0x350\n ? process_one_work+0x3c0\/0x3c0\n kthread+0xe6\/0x110\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x22\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03948ed6553960db62f1c33bec29e64d7c191a3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4dd2e947d3be13a4de3b3028859b9a6497266bcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/938d3480b92fa5e454b7734294f12a7b75126f09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef9785f429794567792561a584901faa9291d3ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49208","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:57.910","lastModified":"2025-02-26T07:00:57.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/irdma: Prevent some integer underflows\n\nMy static checker complains that:\n\n    drivers\/infiniband\/hw\/irdma\/ctrl.c:3605 irdma_sc_ceq_init()\n    warn: can subtract underflow 'info->dev->hmc_fpm_misc.max_ceqs'?\n\nIt appears that \"info->dev->hmc_fpm_misc.max_ceqs\" comes from the firmware\nin irdma_sc_parse_fpm_query_buf() so, yes, there is a chance that it could\nbe zero.  Even if we trust the firmware, it's easy enough to change the\ncondition just as a hardenning measure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6f6dbb819dfc1a35bcb8b709b5c83a3ea8beff75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7340c3675d7ac946f4019b84cd7c64ed542dfe4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d52dab6e03550f9c97121b0c11c0a3ed78ee76a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f21056f15bbeacab7b4b87af232f5599d1f2bff1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49209","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.007","lastModified":"2025-02-26T07:00:58.007","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix memleak in tcp_bpf_sendmsg while sk msg is full\n\nIf tcp_bpf_sendmsg() is running while sk msg is full. When sk_msg_alloc()\nreturns -ENOMEM error, tcp_bpf_sendmsg() goes to wait_for_memory. If partial\nmemory has been alloced by sk_msg_alloc(), that is, msg_tx->sg.size is\ngreater than osize after sk_msg_alloc(), memleak occurs. To fix we use\nsk_msg_trim() to release the allocated memory, then goto wait for memory.\n\nOther call paths of sk_msg_alloc() have the similar issue, such as\ntls_sw_sendmsg(), so handle sk_msg_trim logic inside sk_msg_alloc(),\nas Cong Wang suggested.\n\nThis issue can cause the following info:\nWARNING: CPU: 3 PID: 7950 at net\/core\/stream.c:208 sk_stream_kill_queues+0xd4\/0x1a0\nCall Trace:\n <TASK>\n inet_csk_destroy_sock+0x55\/0x110\n __tcp_close+0x279\/0x470\n tcp_close+0x1f\/0x60\n inet_release+0x3f\/0x80\n __sock_release+0x3d\/0xb0\n sock_close+0x11\/0x20\n __fput+0x92\/0x250\n task_work_run+0x6a\/0xa0\n do_exit+0x33b\/0xb60\n do_group_exit+0x2f\/0xa0\n get_signal+0xb6\/0x950\n arch_do_signal_or_restart+0xac\/0x2a0\n exit_to_user_mode_prepare+0xa9\/0x200\n syscall_exit_to_user_mode+0x12\/0x30\n do_syscall_64+0x46\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n <\/TASK>\n\nWARNING: CPU: 3 PID: 2094 at net\/ipv4\/af_inet.c:155 inet_sock_destruct+0x13c\/0x260\nCall Trace:\n <TASK>\n __sk_destruct+0x24\/0x1f0\n sk_psock_destroy+0x19b\/0x1c0\n process_one_work+0x1b3\/0x3c0\n kthread+0xe6\/0x110\n ret_from_fork+0x22\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6d03722c34d9603df325f67c6d30dc1b7b3c6067","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c34e38c4a870eb30b13f42f5b44f42e9d19ccb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bec34a91eba3483e1830c02bdd36f8f968642047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0b85dfc6f01d26808e2576c6537c131b590e270","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de3a8d8fab0710186f7864ec812836d8d70da3c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f677328f05f52d535cbdc15cb04476db49477eb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49210","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.107","lastModified":"2025-02-26T07:00:58.107","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nMIPS: pgalloc: fix memory leak caused by pgd_free()\n\npgd page is freed by generic implementation pgd_free() since commit\nf9cb654cb550 (\"asm-generic: pgalloc: provide generic pgd_free()\"),\nhowever, there are scenarios that the system uses more than one page as\nthe pgd table, in such cases the generic implementation pgd_free() won't\nbe applicable anymore. For example, when PAGE_SIZE_4KB is enabled and\nMIPS_VA_BITS_48 is not enabled in a 64bit system, the macro \"PGD_ORDER\"\nwill be set as \"1\", which will cause allocating two pages as the pgd\ntable. Well, at the same time, the generic implementation pgd_free()\njust free one pgd page, which will result in the memory leak.\n\nThe memory leak can be easily detected by executing shell command:\n\"while true; do ls > \/dev\/null; grep MemFree \/proc\/meminfo; done\""}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bf0d78c8cc3cf615a6e7bf33ada70b73592f0a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bc5bab9a763d520937e4f3fe8df51c6a1eceb97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a8501d34b261906e4c76ec9da679f2cb4d309ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d29cda15cab086d82d692de016f7249545d4b6b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa3d44424579972cc7c4fac3d9cf227798ebdfa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49211","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.200","lastModified":"2025-02-26T07:00:58.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmips: cdmm: Fix refcount leak in mips_cdmm_phys_base\n\nThe of_find_compatible_node() function returns a node pointer with\nrefcount incremented, We should use of_node_put() on it when done\nAdd the missing of_node_put() to release the refcount."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4528668ca331f7ce5999b7746657b46db5b3b785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4680c2ac9aabda82acd23ebbd1f900fb6a889cd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69155dc2e04777aa94207a73a8b10f12b8428a68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/721ab4be20d4448dd04c2cc8ed99cd4f3e45f765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1728e3cb9e43f38ed10cde705a7ba2b4ad2d35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49212","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.293","lastModified":"2025-02-26T07:00:58.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: atmel: fix refcount issue in atmel_nand_controller_init\n\nThe reference counting issue happens in several error handling paths\non a refcounted object \"nc->dmac\". In these paths, the function simply\nreturns the error code, forgetting to balance the reference count of\n\"nc->dmac\", increased earlier by dma_request_channel(), which may\ncause refcount leaks.\n\nFix it by decrementing the refcount of specific object in those error\npaths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0856bf27057561f42b37df111603cf5a0d040294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8baea2b96fa90af8d0f937caf4cf2105ee094d93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9843c9c98f26c6ad843260b19bfdaa2598f2ae1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b08d211db4c447eb1a07df65e45e0aa772e0fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3587259ae553e41d1ce8c7435351a5d6b299a11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1694169f3674cdf7553aed06864254635679878","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe0e2ce5c87e9c0b9485ff566362030aa55972cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fecbd4a317c95d73c849648c406bcf1b6a0ec1cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49213","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.397","lastModified":"2025-02-26T07:00:58.397","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath10k: Fix error handling in ath10k_setup_msa_resources\n\nThe device_node pointer is returned by of_parse_phandle() with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/315772133a4b960859e4f5efe0e738e347188cdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32939187f254171a5666badc058bc3787fe454af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ed37d611ea5d222c3ecb3549e4c2d34b8f3c335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74b1d41e1b6410eed5c76d00eedb262036e9eff5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9747a78d5f758a5284751a10aee13c30d02bd5f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49214","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.490","lastModified":"2025-02-26T07:00:58.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/64s: Don't use DSISR for SLB faults\n\nSince commit 46ddcb3950a2 (\"powerpc\/mm: Show if a bad page fault on data\nis read or write.\") we use page_fault_is_write(regs->dsisr) in\n__bad_page_fault() to determine if the fault is for a read or write, and\nchange the message printed accordingly.\n\nBut SLB faults, aka Data Segment Interrupts, don't set DSISR (Data\nStorage Interrupt Status Register) to a useful value. All ISA versions\nfrom v2.03 through v3.1 specify that the Data Segment Interrupt sets\nDSISR \"to an undefined value\". As far as I can see there's no mention of\nSLB faults setting DSISR in any BookIV content either.\n\nThis manifests as accesses that should be a read being incorrectly\nreported as writes, for example, using the xmon \"dump\" command:\n\n  0:mon> d 0x5deadbeef0000000\n  5deadbeef0000000\n  [359526.415354][    C6] BUG: Unable to handle kernel data access on write at 0x5deadbeef0000000\n  [359526.415611][    C6] Faulting instruction address: 0xc00000000010a300\n  cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf400]\n      pc: c00000000010a300: mread+0x90\/0x190\n\nIf we disassemble the PC, we see a load instruction:\n\n  0:mon> di c00000000010a300\n  c00000000010a300 89490000      lbz     r10,0(r9)\n\nWe can also see in exceptions-64s.S that the data_access_slb block\ndoesn't set IDSISR=1, which means it doesn't load DSISR into pt_regs. So\nthe value we're using to determine if the fault is a read\/write is some\nstale value in pt_regs from a previous page fault.\n\nRework the printing logic to separate the SLB fault case out, and only\nprint read\/write in the cases where we can determine it.\n\nThe result looks like eg:\n\n  0:mon> d 0x5deadbeef0000000\n  5deadbeef0000000\n  [  721.779525][    C6] BUG: Unable to handle kernel data access at 0x5deadbeef0000000\n  [  721.779697][    C6] Faulting instruction address: 0xc00000000014cbe0\n  cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf390]\n\n  0:mon> d 0\n  0000000000000000\n  [  742.793242][    C6] BUG: Kernel NULL pointer dereference at 0x00000000\n  [  742.793316][    C6] Faulting instruction address: 0xc00000000014cbe0\n  cpu 0x6: Vector: 380 (Data SLB Access) at [c00000000ffbf390]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/093449bb182db885dae816d62874cccab7a4c42a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a852ff9b7bea9c640540e2c1bc70bd3ba455d61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3dae36d632b2cf6eb20314273e512a96cb43c9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4679ac8ea2e5078704aa1c026db36580cc1bf9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49215","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.590","lastModified":"2025-02-26T07:00:58.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: Fix race at socket teardown\n\nFix a race in the xsk socket teardown code that can lead to a NULL pointer\ndereference splat. The current xsk unbind code in xsk_unbind_dev() starts by\nsetting xs->state to XSK_UNBOUND, sets xs->dev to NULL and then waits for any\nNAPI processing to terminate using synchronize_net(). After that, the release\ncode starts to tear down the socket state and free allocated memory.\n\n  BUG: kernel NULL pointer dereference, address: 00000000000000c0\n  PGD 8000000932469067 P4D 8000000932469067 PUD 0\n  Oops: 0000 [#1] PREEMPT SMP PTI\n  CPU: 25 PID: 69132 Comm: grpcpp_sync_ser Tainted: G          I       5.16.0+ #2\n  Hardware name: Dell Inc. PowerEdge R730\/0599V5, BIOS 1.2.10 03\/09\/2015\n  RIP: 0010:__xsk_sendmsg+0x2c\/0x690\n  [...]\n  RSP: 0018:ffffa2348bd13d50 EFLAGS: 00010246\n  RAX: 0000000000000000 RBX: 0000000000000040 RCX: ffff8d5fc632d258\n  RDX: 0000000000400000 RSI: ffffa2348bd13e10 RDI: ffff8d5fc5489800\n  RBP: ffffa2348bd13db0 R08: 0000000000000000 R09: 00007ffffffff000\n  R10: 0000000000000000 R11: 0000000000000000 R12: ffff8d5fc5489800\n  R13: ffff8d5fcb0f5140 R14: ffff8d5fcb0f5140 R15: 0000000000000000\n  FS:  00007f991cff9400(0000) GS:ffff8d6f1f700000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00000000000000c0 CR3: 0000000114888005 CR4: 00000000001706e0\n  Call Trace:\n  <TASK>\n  ? aa_sk_perm+0x43\/0x1b0\n  xsk_sendmsg+0xf0\/0x110\n  sock_sendmsg+0x65\/0x70\n  __sys_sendto+0x113\/0x190\n  ? debug_smp_processor_id+0x17\/0x20\n  ? fpregs_assert_state_consistent+0x23\/0x50\n  ? exit_to_user_mode_prepare+0xa5\/0x1d0\n  __x64_sys_sendto+0x29\/0x30\n  do_syscall_64+0x3b\/0xc0\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThere are two problems with the current code. First, setting xs->dev to NULL\nbefore waiting for all users to stop using the socket is not correct. The\nentry to the data plane functions xsk_poll(), xsk_sendmsg(), and xsk_recvmsg()\nare all guarded by a test that xs->state is in the state XSK_BOUND and if not,\nit returns right away. But one process might have passed this test but still\nhave not gotten to the point in which it uses xs->dev in the code. In this\ninterim, a second process executing xsk_unbind_dev() might have set xs->dev to\nNULL which will lead to a crash for the first process. The solution here is\njust to get rid of this NULL assignment since it is not used anymore. Before\ncommit 42fddcc7c64b (\"xsk: use state member for socket synchronization\"),\nxs->dev was the gatekeeper to admit processes into the data plane functions,\nbut it was replaced with the state variable xs->state in the aforementioned\ncommit.\n\nThe second problem is that synchronize_net() does not wait for any process in\nxsk_poll(), xsk_sendmsg(), or xsk_recvmsg() to complete, which means that the\nstate they rely on might be cleaned up prematurely. This can happen when the\nnotifier gets called (at driver unload for example) as it uses xsk_unbind_dev().\nSolve this by extending the RCU critical region from just the ndo_xsk_wakeup\nto the whole functions mentioned above, so that both the test of xs->state ==\nXSK_BOUND and the last use of any member of xs is covered by the RCU critical\nsection. This will guarantee that when synchronize_net() completes, there will\nbe no processes left executing xsk_poll(), xsk_sendmsg(), or xsk_recvmsg() and\nstate can be cleaned up safely. Note that we need to drop the RCU lock for the\nskb xmit path as it uses functions that might sleep. Due to this, we have to\nretest the xs->state after we grab the mutex that protects the skb xmit code\nfrom, among a number of things, an xsk_unbind_dev() being executed from the\nnotifier at the same time."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18b1ab7aa76bde181bdb1ab19a87fa9523c32f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a2dea162b92c322f3e42eae0c4a74b8d20aa7a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad7219cd8751bd258b9d1e69ae0654ec00f71875","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1579253ffce39986e7a6ab757ac93b2680a665f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49216","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.687","lastModified":"2025-02-26T07:00:58.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/tegra: Fix reference leak in tegra_dsi_ganged_probe\n\nThe reference taken by 'of_find_device_by_node()' must be released when\nnot needed anymore. Add put_device() call to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e2f4e434e71dffd1085c3dccd676514bd71d316","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e06710c43a090f14bb67714265a01cd1d7a37c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/221e3638feb8bc42143833c9a704fa89b6c366bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d6ae8b747fe55f54de4a4441d636974aa53f56a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e8fdb6392d945d33fef959eab73f8c34bc0a63b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/852c1f5f3119a38ee68e319bab10277fc1ab06b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a725070701883fe62266ee6d2f31d67e6cdd31df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd78b74031cbc94133965f1017deb822657fc1a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3c99c686e098300c246e5e8a1474133e3dacb05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49217","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.787","lastModified":"2025-02-26T07:00:58.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: pm8001: Fix abort all task initialization\n\nIn pm80xx_send_abort_all(), the n_elem field of the ccb used is not\ninitialized to 0. This missing initialization sometimes lead to the task\ncompletion path seeing the ccb with a non-zero n_elem resulting in the\nexecution of invalid dma_unmap_sg() calls in pm8001_ccb_task_free(),\ncausing a crash such as:\n\n[  197.676341] RIP: 0010:iommu_dma_unmap_sg+0x6d\/0x280\n[  197.700204] RSP: 0018:ffff889bbcf89c88 EFLAGS: 00010012\n[  197.705485] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff83d0bda0\n[  197.712687] RDX: 0000000000000002 RSI: 0000000000000000 RDI: ffff88810dffc0d0\n[  197.719887] RBP: 0000000000000000 R08: 0000000000000000 R09: ffff8881c790098b\n[  197.727089] R10: ffffed1038f20131 R11: 0000000000000001 R12: 0000000000000000\n[  197.734296] R13: ffff88810dffc0d0 R14: 0000000000000010 R15: 0000000000000000\n[  197.741493] FS:  0000000000000000(0000) GS:ffff889bbcf80000(0000) knlGS:0000000000000000\n[  197.749659] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  197.755459] CR2: 00007f16c1b42734 CR3: 0000000004814000 CR4: 0000000000350ee0\n[  197.762656] Call Trace:\n[  197.765127]  <IRQ>\n[  197.767162]  pm8001_ccb_task_free+0x5f1\/0x820 [pm80xx]\n[  197.772364]  ? do_raw_spin_unlock+0x54\/0x220\n[  197.776680]  pm8001_mpi_task_abort_resp+0x2ce\/0x4f0 [pm80xx]\n[  197.782406]  process_oq+0xe85\/0x7890 [pm80xx]\n[  197.786817]  ? lock_acquire+0x194\/0x490\n[  197.790697]  ? handle_irq_event+0x10e\/0x1b0\n[  197.794920]  ? mpi_sata_completion+0x2d70\/0x2d70 [pm80xx]\n[  197.800378]  ? __wake_up_bit+0x100\/0x100\n[  197.804340]  ? lock_is_held_type+0x98\/0x110\n[  197.808565]  pm80xx_chip_isr+0x94\/0x130 [pm80xx]\n[  197.813243]  tasklet_action_common.constprop.0+0x24b\/0x2f0\n[  197.818785]  __do_softirq+0x1b5\/0x82d\n[  197.822485]  ? do_raw_spin_unlock+0x54\/0x220\n[  197.826799]  __irq_exit_rcu+0x17e\/0x1e0\n[  197.830678]  irq_exit_rcu+0xa\/0x20\n[  197.834114]  common_interrupt+0x78\/0x90\n[  197.840051]  <\/IRQ>\n[  197.844236]  <TASK>\n[  197.848397]  asm_common_interrupt+0x1e\/0x40\n\nAvoid this issue by always initializing the ccb n_elem field to 0 in\npm8001_send_abort_all(), pm8001_send_read_log() and\npm80xx_send_abort_all()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16cd02e0951b520bef324adb9a35afcc92501caf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1824a21b2cedc5774a5adfa74f5f7b90472d8677","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/279f318bd7d6e04e6e0bc7b8cd8e190da8fa37a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/326d894adf89f3c707b7784becbe241830daaab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/765674e3b30121782a2b792684554baa48c61f5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f12845c8389855dbcc67baa068b6832dc4a396e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9914461db82caee6c519acfbe10a86fe11bcdeca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8db786858d895ac58342f67767b4999ae6538fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6ec4471550cc53e96485a7124c5891e6a38d1c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49218","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.890","lastModified":"2025-02-26T07:00:58.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/dp: Fix OOB read when handling Post Cursor2 register\n\nThe link_status array was not large enough to read the Adjust Request\nPost Cursor2 register, so remove the common helper function to avoid\nan OOB read, found with a -Warray-bounds build:\n\ndrivers\/gpu\/drm\/drm_dp_helper.c: In function 'drm_dp_get_adjust_request_post_cursor':\ndrivers\/gpu\/drm\/drm_dp_helper.c:59:27: error: array subscript 10 is outside array bounds of 'const u8[6]' {aka 'const unsigned char[6]'} [-Werror=array-bounds]\n   59 |         return link_status[r - DP_LANE0_1_STATUS];\n      |                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\ndrivers\/gpu\/drm\/drm_dp_helper.c:147:51: note: while referencing 'link_status'\n  147 | u8 drm_dp_get_adjust_request_post_cursor(const u8 link_status[DP_LINK_STATUS_SIZE],\n      |                                          ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nReplace the only user of the helper with an open-coded fetch and decode,\nsimilar to drivers\/gpu\/drm\/amd\/display\/dc\/core\/dc_link_dp.c."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a2151490cc6c57b368d7974ffd447a8b36ade639","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeaed9a9fe694f8b1462fb81e2d33298c929180b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49219","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:58.977","lastModified":"2025-02-26T07:00:58.977","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvfio\/pci: fix memory leak during D3hot to D0 transition\n\nIf 'vfio_pci_core_device::needs_pm_restore' is set (PCI device does\nnot have No_Soft_Reset bit set in its PMCSR config register), then\nthe current PCI state will be saved locally in\n'vfio_pci_core_device::pm_save' during D0->D3hot transition and same\nwill be restored back during D3hot->D0 transition.\nFor saving the PCI state locally, pci_store_saved_state() is being\nused and the pci_load_and_free_saved_state() will free the allocated\nmemory.\n\nBut for reset related IOCTLs, vfio driver calls PCI reset-related\nAPI's which will internally change the PCI power state back to D0. So,\nwhen the guest resumes, then it will get the current state as D0 and it\nwill skip the call to vfio_pci_set_power_state() for changing the\npower state to D0 explicitly. In this case, the memory pointed by\n'pm_save' will never be freed. In a malicious sequence, the state changing\nto D3hot followed by VFIO_DEVICE_RESET\/VFIO_DEVICE_PCI_HOT_RESET can be\nrun in a loop and it can cause an OOM situation.\n\nThis patch frees the earlier allocated memory first before overwriting\n'pm_save' to prevent the mentioned memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26ddd196e9eb264da8e1bdc4df8a94d62581c8b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4319f17fb8264ba39352b611dfa913a4d8c1d1a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8a1f8bd586ee31020614b8d48b702ece3e2ae44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eadf88ecf6ac7d6a9f47a76c6055d9a1987a8991","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49220","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.070","lastModified":"2025-02-26T07:00:59.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndax: make sure inodes are flushed before destroy cache\n\nA bug can be triggered by following command\n\n$ modprobe nd_pmem && modprobe -r nd_pmem\n\n[   10.060014] BUG dax_cache (Not tainted): Objects remaining in dax_cache on __kmem_cache_shutdown()\n[   10.060938] Slab 0x0000000085b729ac objects=9 used=1 fp=0x000000004f5ae469 flags=0x200000000010200(slab|head|node)\n[   10.062433] Call Trace:\n[   10.062673]  dump_stack_lvl+0x34\/0x44\n[   10.062865]  slab_err+0x90\/0xd0\n[   10.063619]  __kmem_cache_shutdown+0x13b\/0x2f0\n[   10.063848]  kmem_cache_destroy+0x4a\/0x110\n[   10.064058]  __x64_sys_delete_module+0x265\/0x300\n\nThis is caused by dax_fs_exit() not flushing inodes before destroy cache.\nTo fix this issue, call rcu_barrier() before destroy cache."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/770d42fff12d8595adda9025a0b92091f543e775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7e8de822e0b1979f08767c751f6c8a9c1d4ad86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b786abe7c67c6ef71410c8e23292b3091d616ad1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2951eaa9398415ac054b7bd80b8163b6838ead4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec376f5c11c88c0215d173599db8449cd4196759","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2a1e0eb70c2d954176c07d75d28742bde30e9f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49221","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.167","lastModified":"2025-02-26T07:00:59.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/dp: populate connector of struct dp_panel\n\nDP CTS test case 4.2.2.6 has valid edid with bad checksum on purpose\nand expect DP source return correct checksum. During drm edid read,\ncorrect edid checksum is calculated and stored at\nconnector::real_edid_checksum.\n\nThe problem is struct dp_panel::connector never be assigned, instead the\nconnector is stored in struct msm_dp::connector. When we run compliance\ntesting test case 4.2.2.6 dp_panel_handle_sink_request() won't have a valid\nedid set in struct dp_panel::edid so we'll try to use the connectors\nreal_edid_checksum and hit a NULL pointer dereference error because the\nconnector pointer is never assigned.\n\nChanges in V2:\n-- populate panel connector at msm_dp_modeset_init() instead of at dp_panel_read_sink_caps()\n\nChanges in V3:\n-- remove unhelpful kernel crash trace commit text\n-- remove renaming dp_display parameter to dp\n\nChanges in V4:\n-- add more details to commit text\n\nChanges in v10:\n--  group into one series\n\nChanges in v11:\n-- drop drm\/msm\/dp: dp_link_parse_sink_count() return immediately if aux read\n\nSignee-off-by: Kuogee Hsieh <quic_khsieh@quicinc.com>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/104074ebc0c3f358dd1ee944fbcde92c6e5a21dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/413c62697b61226a236c8b1f5cd64dcf42bcc12f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e602f5156910c7b19661699896cb6e3fb94fab9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9525b8bcae8b99188990b56484799cf4b1b43786","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbba600f432a360b42452fee79d1fb35d3aa8aeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49222","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.260","lastModified":"2025-02-26T07:00:59.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/bridge: anx7625: Fix overflow issue on reading EDID\n\nThe length of EDID block can be longer than 256 bytes, so we should use\n`int` instead of `u8` for the `edid_pos` variable."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64c06df2428bb7bb3d8cf5691416001af42d94dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5c6f647aec9ed524aedd04a3aec5ebc21d39007","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db1c47d299298a7c52ccb201905d6be979fd7507","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0d5d938d51af4eb08d9d8684fd9903425a0a87d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49223","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.363","lastModified":"2025-02-26T07:00:59.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/port: Hold port reference until decoder release\n\nKASAN + DEBUG_KOBJECT_RELEASE reports a potential use-after-free in\ncxl_decoder_release() where it goes to reference its parent, a cxl_port,\nto free its id back to port->decoder_ida.\n\n BUG: KASAN: use-after-free in to_cxl_port+0x18\/0x90 [cxl_core]\n Read of size 8 at addr ffff888119270908 by task kworker\/35:2\/379\n\n CPU: 35 PID: 379 Comm: kworker\/35:2 Tainted: G           OE     5.17.0-rc2+ #198\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n Workqueue: events kobject_delayed_cleanup\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x59\/0x73\n  print_address_description.constprop.0+0x1f\/0x150\n  ? to_cxl_port+0x18\/0x90 [cxl_core]\n  kasan_report.cold+0x83\/0xdf\n  ? to_cxl_port+0x18\/0x90 [cxl_core]\n  to_cxl_port+0x18\/0x90 [cxl_core]\n  cxl_decoder_release+0x2a\/0x60 [cxl_core]\n  device_release+0x5f\/0x100\n  kobject_cleanup+0x80\/0x1c0\n\nThe device core only guarantees parent lifetime until all children are\nunregistered. If a child needs a parent to complete its ->release()\ncallback that child needs to hold a reference to extend the lifetime of\nthe parent."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/49f2dab77a5e1354f5da6ccdc9346a8212697be2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/518bb96367123062b48b0a9842f2864249b565f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74be98774dfbc5b8b795db726bd772e735d2edd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0022ca445d5fc4d0c89d15dcd0f855977b22c1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49224","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.457","lastModified":"2025-02-26T07:00:59.457","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: ab8500: Fix memory leak in ab8500_fg_sysfs_init\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()：\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix memory leak by calling kobject_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19aa3c98ed7b2616e105946cec804f897837ab84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/261041097ab3470f1120b7733cbf472712304d1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31cdf7897dba1f096b74f69d840f0575b8cdb9ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41ed61364285ff38bbbe9ca8a45c8372ba72921d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a4760463dbc6b603690938c468839985189ce0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/879356a6a05559582b0a7895d86d2d4359745c08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c32f6b6196b6efc1c68990dfeaac36fb8eb3b8e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db3a61ef8e6aef3b888baa6a85926c2230c2cc56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffb8e92b4cef92bd25563cf3d8b4489eb22bc61f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49225","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.563","lastModified":"2025-02-26T07:00:59.563","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt7921s: fix a possible memory leak in mt7921_load_patch\n\nAlways release fw data at the end of mt7921_load_patch routine."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11005b18f453aa192d035d410c11d07edcba5a45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b301043384c5c2447357952be9a536c2026d8ad0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49226","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.650","lastModified":"2025-02-26T07:00:59.650","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: asix: add proper error handling of usb read errors\n\nSyzbot once again hit uninit value in asix driver. The problem still the\nsame -- asix_read_cmd() reads less bytes, than was requested by caller.\n\nSince all read requests are performed via asix_read_cmd() let's catch\nusb related error there and add __must_check notation to be sure all\ncallers actually check return value.\n\nSo, this patch adds sanity check inside asix_read_cmd(), that simply\nchecks if bytes read are not less, than was requested and adds missing\nerror handling of asix_read_cmd() all across the driver code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/662ff765470ad0d11a1153d6d8e99d69a98e60b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/920a9fa27e7805499cfe78491b36fed2322c02ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ea8d2fca8fea3b17005b4dc02f8ef15f7a2fb97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b96a7265f763b37ff3138b9ca8122a950f13b00e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49227","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.747","lastModified":"2025-02-26T07:00:59.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigc: avoid kernel warning when changing RX ring parameters\n\nCalling ethtool changing the RX ring parameters like this:\n\n  $ ethtool -G eth0 rx 1024\n\non igc triggers kernel warnings like this:\n\n[  225.198467] ------------[ cut here ]------------\n[  225.198473] Missing unregister, handled but fix driver\n[  225.198485] WARNING: CPU: 7 PID: 959 at net\/core\/xdp.c:168\nxdp_rxq_info_reg+0x79\/0xd0\n[...]\n[  225.198601] Call Trace:\n[  225.198604]  <TASK>\n[  225.198609]  igc_setup_rx_resources+0x3f\/0xe0 [igc]\n[  225.198617]  igc_ethtool_set_ringparam+0x30e\/0x450 [igc]\n[  225.198626]  ethnl_set_rings+0x18a\/0x250\n[  225.198631]  genl_family_rcv_msg_doit+0xca\/0x110\n[  225.198637]  genl_rcv_msg+0xce\/0x1c0\n[  225.198640]  ? rings_prepare_data+0x60\/0x60\n[  225.198644]  ? genl_get_cmd+0xd0\/0xd0\n[  225.198647]  netlink_rcv_skb+0x4e\/0xf0\n[  225.198652]  genl_rcv+0x24\/0x40\n[  225.198655]  netlink_unicast+0x20e\/0x330\n[  225.198659]  netlink_sendmsg+0x23f\/0x480\n[  225.198663]  sock_sendmsg+0x5b\/0x60\n[  225.198667]  __sys_sendto+0xf0\/0x160\n[  225.198671]  ? handle_mm_fault+0xb2\/0x280\n[  225.198676]  ? do_user_addr_fault+0x1eb\/0x690\n[  225.198680]  __x64_sys_sendto+0x20\/0x30\n[  225.198683]  do_syscall_64+0x38\/0x90\n[  225.198687]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[  225.198693] RIP: 0033:0x7f7ae38ac3aa\n\nigc_ethtool_set_ringparam() copies the igc_ring structure but neglects to\nreset the xdp_rxq_info member before calling igc_setup_rx_resources().\nThis in turn calls xdp_rxq_info_reg() with an already registered xdp_rxq_info.\n\nMake sure to unregister the xdp_rxq_info structure first in\nigc_setup_rx_resources."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ddb49af08094ebee250b461172ee7b8e27a35d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/453307b569a0d41bddd07f26bf41b784cd82a4c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65aebcf1e05bd97d2e7ffcdff36efea1757c9450","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab8c107470d12e7ef99030bf0911a10cdef62d16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49228","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.840","lastModified":"2025-02-26T07:00:59.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix a btf decl_tag bug when tagging a function\n\nsyzbot reported a btf decl_tag bug with stack trace below:\n\n  general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN\n  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n  CPU: 0 PID: 3592 Comm: syz-executor914 Not tainted 5.16.0-syzkaller-11424-gb7892f7d5cb2 #0\n  Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\n  RIP: 0010:btf_type_vlen include\/linux\/btf.h:231 [inline]\n  RIP: 0010:btf_decl_tag_resolve+0x83e\/0xaa0 kernel\/bpf\/btf.c:3910\n  ...\n  Call Trace:\n   <TASK>\n   btf_resolve+0x251\/0x1020 kernel\/bpf\/btf.c:4198\n   btf_check_all_types kernel\/bpf\/btf.c:4239 [inline]\n   btf_parse_type_sec kernel\/bpf\/btf.c:4280 [inline]\n   btf_parse kernel\/bpf\/btf.c:4513 [inline]\n   btf_new_fd+0x19fe\/0x2370 kernel\/bpf\/btf.c:6047\n   bpf_btf_load kernel\/bpf\/syscall.c:4039 [inline]\n   __sys_bpf+0x1cbb\/0x5970 kernel\/bpf\/syscall.c:4679\n   __do_sys_bpf kernel\/bpf\/syscall.c:4738 [inline]\n   __se_sys_bpf kernel\/bpf\/syscall.c:4736 [inline]\n   __x64_sys_bpf+0x75\/0xb0 kernel\/bpf\/syscall.c:4736\n   do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n   do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe kasan error is triggered with an illegal BTF like below:\n   type 0: void\n   type 1: int\n   type 2: decl_tag to func type 3\n   type 3: func to func_proto type 8\nThe total number of types is 4 and the type 3 is illegal\nsince its func_proto type is out of range.\n\nCurrently, the target type of decl_tag can be struct\/union, var or func.\nBoth struct\/union and var implemented their own 'resolve' callback functions\nand hence handled properly in kernel.\nBut func type doesn't have 'resolve' callback function. When\nbtf_decl_tag_resolve() tries to check func type, it tries to get\nvlen of its func_proto type, which triggered the above kasan error.\n\nTo fix the issue, btf_decl_tag_resolve() needs to do btf_func_check()\nbefore trying to accessing func_proto type.\nIn the current implementation, func type is checked with\nbtf_func_check() in the main checking function btf_check_all_types().\nTo fix the above kasan issue, let us implement 'resolve' callback\nfunc type properly. The 'resolve' callback will be also called\nin btf_check_all_types() for func types."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/796d5666f6422ddadc938fb888044fcc16f2dbe3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3bcd2110c087bc62e90fddd4a93237b049d6e68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7e7b42f4f956f2c68ad8cda87d750093dbba737","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49229","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:00:59.943","lastModified":"2025-02-26T07:00:59.943","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nptp: unregister virtual clocks when unregistering physical clock.\n\nWhen unregistering a physical clock which has some virtual clocks,\nunregister the virtual clocks with it.\n\nThis fixes the following oops, which can be triggered by unloading\na driver providing a PTP clock when it has enabled virtual clocks:\n\nBUG: unable to handle page fault for address: ffffffffc04fc4d8\nOops: 0000 [#1] PREEMPT SMP NOPTI\nRIP: 0010:ptp_vclock_read+0x31\/0xb0\nCall Trace:\n timecounter_read+0xf\/0x50\n ptp_vclock_refresh+0x2c\/0x50\n ? ptp_clock_release+0x40\/0x40\n ptp_aux_kworker+0x17\/0x30\n kthread_worker_fn+0x9b\/0x240\n ? kthread_should_park+0x30\/0x30\n kthread+0xe2\/0x110\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x22\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9c796a57cbb5daf124a665689f0b2bc9262e0ced","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2dea2a696d09163da4cd33cb598ce1f73e86597","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfcbb76b0f595ea9ede9f7a218086fef85242f10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c49eafe6249f844c26f9866886cc6719d81762df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49230","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.037","lastModified":"2025-02-26T07:01:00.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt7915: fix possible memory leak in mt7915_mcu_add_sta\n\nFree allocated skb in mt7915_mcu_add_sta routine in case of failures."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a43736cd12d82913102eb49cb56787a5553e028f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b334a245ff1d76b1e97af8cea648ea6798b9eb87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/daf02c7e3c3dc82ffa925999597bd455cf799551","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49231","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.130","lastModified":"2025-02-26T07:01:00.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtw88: fix memory overrun and memory leak during hw_scan\n\nPreviously we allocated less memory than actual required, overwrite\nto the buffer causes the mm module to complaint and raise access\nviolation faults. Along with potential memory leaks when returned\nearly. Fix these by passing the correct size and proper deinit flow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d95984b5580dcb8b1c0036577c52b609990a1dab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec5da191bfcd5fd22b95459b623694f66c1cc10b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49232","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.217","lastModified":"2025-02-26T07:01:00.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix a NULL pointer dereference in amdgpu_dm_connector_add_common_modes()\n\nIn amdgpu_dm_connector_add_common_modes(), amdgpu_dm_create_common_mode()\nis assigned to mode and is passed to drm_mode_probed_add() directly after\nthat. drm_mode_probed_add() passes &mode->head to list_add_tail(), and\nthere is a dereference of it in list_add_tail() without recoveries, which\ncould lead to NULL pointer dereference on failure of\namdgpu_dm_create_common_mode().\n\nFix this by adding a NULL check of mode.\n\nThis bug was found by a static analyzer.\n\nBuilds with 'make allyesconfig' show no new warnings,\nand our static analyzer no longer warns about this code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19a7eba284790cfbba2945deb2363cf03ce41648","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c729dec8c1e3e2892fde5ce8181553860914e74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57f4ad5e286fe4599c8fc63cf89f85f9eec7f9c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588a70177df3b1777484267584ef38ab2ca899a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/639b3b9def0a6a3f316a195d705d14113236e89c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdc7429708a0772d90c208975694f7c2133b1202","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4eaa999fec78dec2a9c2d797438e05cbffb125b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49233","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.317","lastModified":"2025-02-26T07:01:00.317","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Call dc_stream_release for remove link enc assignment\n\n[Why]\nA porting error resulted in the stream assignment for the link\nbeing retained without being released - a memory leak.\n\n[How]\nFix the porting error by adding back the dc_stream_release() intended\nas part of the original patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a28b7b6a0c827ce672edcdb5b2b5916b0beebe03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2bde8349c35d01d7c50456ea06a5c7d5e0e5ed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49234","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.407","lastModified":"2025-02-26T07:01:00.407","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: Avoid cross-chip syncing of VLAN filtering\n\nChanges to VLAN filtering are not applicable to cross-chip\nnotifications.\n\nOn a system like this:\n\n.-----.   .-----.   .-----.\n| sw1 +---+ sw2 +---+ sw3 |\n'-1-2-'   '-1-2-'   '-1-2-'\n\nBefore this change, upon sw1p1 leaving a bridge, a call to\ndsa_port_vlan_filtering would also be made to sw2p1 and sw3p1.\n\nIn this scenario:\n\n.---------.   .-----.   .-----.\n|   sw1   +---+ sw2 +---+ sw3 |\n'-1-2-3-4-'   '-1-2-'   '-1-2-'\n\nWhen sw1p4 would leave a bridge, dsa_port_vlan_filtering would be\ncalled for sw2 and sw3 with a non-existing port - leading to array\nout-of-bounds accesses and crashes on mv88e6xxx."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/108dc8741c203e9d6ce4e973367f1bac20c7192b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1f2a4dd8d433eec393d09273a78a3d3551339cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49235","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.500","lastModified":"2025-02-26T07:01:00.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath9k_htc: fix uninit value bugs\n\nSyzbot reported 2 KMSAN bugs in ath9k. All of them are caused by missing\nfield initialization.\n\nIn htc_connect_service() svc_meta_len and pad are not initialized. Based\non code it looks like in current skb there is no service data, so simply\ninitialize svc_meta_len to 0.\n\nhtc_issue_send() does not initialize htc_frame_hdr::control array. Based\non firmware code, it will initialize it by itself, so simply zero whole\narray to make KMSAN happy\n\nFail logs:\n\nBUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1\/0x2aa0 drivers\/usb\/core\/urb.c:430\n usb_submit_urb+0x6c1\/0x2aa0 drivers\/usb\/core\/urb.c:430\n hif_usb_send_regout drivers\/net\/wireless\/ath\/ath9k\/hif_usb.c:127 [inline]\n hif_usb_send+0x5f0\/0x16f0 drivers\/net\/wireless\/ath\/ath9k\/hif_usb.c:479\n htc_issue_send drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:34 [inline]\n htc_connect_service+0x143e\/0x1960 drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:275\n...\n\nUninit was created at:\n slab_post_alloc_hook mm\/slab.h:524 [inline]\n slab_alloc_node mm\/slub.c:3251 [inline]\n __kmalloc_node_track_caller+0xe0c\/0x1510 mm\/slub.c:4974\n kmalloc_reserve net\/core\/skbuff.c:354 [inline]\n __alloc_skb+0x545\/0xf90 net\/core\/skbuff.c:426\n alloc_skb include\/linux\/skbuff.h:1126 [inline]\n htc_connect_service+0x1029\/0x1960 drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:258\n...\n\nBytes 4-7 of 18 are uninitialized\nMemory access of size 18 starts at ffff888027377e00\n\nBUG: KMSAN: kernel-usb-infoleak in usb_submit_urb+0x6c1\/0x2aa0 drivers\/usb\/core\/urb.c:430\n usb_submit_urb+0x6c1\/0x2aa0 drivers\/usb\/core\/urb.c:430\n hif_usb_send_regout drivers\/net\/wireless\/ath\/ath9k\/hif_usb.c:127 [inline]\n hif_usb_send+0x5f0\/0x16f0 drivers\/net\/wireless\/ath\/ath9k\/hif_usb.c:479\n htc_issue_send drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:34 [inline]\n htc_connect_service+0x143e\/0x1960 drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:275\n...\n\nUninit was created at:\n slab_post_alloc_hook mm\/slab.h:524 [inline]\n slab_alloc_node mm\/slub.c:3251 [inline]\n __kmalloc_node_track_caller+0xe0c\/0x1510 mm\/slub.c:4974\n kmalloc_reserve net\/core\/skbuff.c:354 [inline]\n __alloc_skb+0x545\/0xf90 net\/core\/skbuff.c:426\n alloc_skb include\/linux\/skbuff.h:1126 [inline]\n htc_connect_service+0x1029\/0x1960 drivers\/net\/wireless\/ath\/ath9k\/htc_hst.c:258\n...\n\nBytes 16-17 of 18 are uninitialized\nMemory access of size 18 starts at ffff888027377e00"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b700f7d06492de34964b6f414120043364f8191","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/11f11ac281f0c0b363d2940204f28bae0422ed71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d244b731188e0b63fc40a9d2dec72e9181fb37c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5abf2b761b998063f5e2bae93fd4ab10e2a80f10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c2a6a8daa17a3f65b38b9a5574bb362c13fa1d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7da6169b6ebb75816b57be3beb829afa74f3b4b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1e0df1c57bd30871dd1c855742a7c346dbca853","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e352acdd378e9263cc4c6018e588f2dac7161d07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee4222052a76559c20e821bc3519cefb58b6d3e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49236","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.600","lastModified":"2025-02-26T07:01:00.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix UAF due to race between btf_try_get_module and load_module\n\nWhile working on code to populate kfunc BTF ID sets for module BTF from\nits initcall, I noticed that by the time the initcall is invoked, the\nmodule BTF can already be seen by userspace (and the BPF verifier). The\nexisting btf_try_get_module calls try_module_get which only fails if\nmod->state == MODULE_STATE_GOING, i.e. it can increment module reference\nwhen module initcall is happening in parallel.\n\nCurrently, BTF parsing happens from MODULE_STATE_COMING notifier\ncallback. At this point, the module initcalls have not been invoked.\nThe notifier callback parses and prepares the module BTF, allocates an\nID, which publishes it to userspace, and then adds it to the btf_modules\nlist allowing the kernel to invoke btf_try_get_module for the BTF.\n\nHowever, at this point, the module has not been fully initialized (i.e.\nits initcalls have not finished). The code in module.c can still fail\nand free the module, without caring for other users. However, nothing\nstops btf_try_get_module from succeeding between the state transition\nfrom MODULE_STATE_COMING to MODULE_STATE_LIVE.\n\nThis leads to a use-after-free issue when BPF program loads\nsuccessfully in the state transition, load_module's do_init_module call\nfails and frees the module, and BPF program fd on close calls module_put\nfor the freed module. Future patch has test case to verify we don't\nregress in this area in future.\n\nThere are multiple points after prepare_coming_module (in load_module)\nwhere failure can occur and module loading can return error. We\nillustrate and test for the race using the last point where it can\npractically occur (in module __init function).\n\nAn illustration of the race:\n\nCPU 0                           CPU 1\n\t\t\t  load_module\n\t\t\t    notifier_call(MODULE_STATE_COMING)\n\t\t\t      btf_parse_module\n\t\t\t      btf_alloc_id\t\/\/ Published to userspace\n\t\t\t      list_add(&btf_mod->list, btf_modules)\n\t\t\t    mod->init(...)\n...\t\t\t\t^\nbpf_check\t\t        |\ncheck_pseudo_btf_id             |\n  btf_try_get_module            |\n    returns true                |  ...\n...                             |  module __init in progress\nreturn prog_fd                  |  ...\n...                             V\n\t\t\t    if (ret < 0)\n\t\t\t      free_module(mod)\n\t\t\t    ...\nclose(prog_fd)\n ...\n bpf_prog_free_deferred\n  module_put(used_btf.mod) \/\/ use-after-free\n\nWe fix this issue by setting a flag BTF_MODULE_F_LIVE, from the notifier\ncallback when MODULE_STATE_LIVE state is reached for the module, so that\nwe return NULL from btf_try_get_module for modules that are not fully\nformed. Since try_module_get already checks that module is not in\nMODULE_STATE_GOING state, and that is the only transition a live module\ncan make before being removed from btf_modules list, this is enough to\nclose the race and prevent the bug.\n\nA later selftest patch crafts the race condition artifically to verify\nthat it has been fixed, and that verifier fails to load program (with\nENXIO).\n\nLastly, a couple of comments:\n\n 1. Even if this race didn't exist, it seems more appropriate to only\n    access resources (ksyms and kfuncs) of a fully formed module which\n    has been initialized completely.\n\n 2. This patch was born out of need for synchronization against module\n    initcall for the next patch, so it is needed for correctness even\n    without the aforementioned race condition. The BTF resources\n    initialized by module initcall are set up once and then only looked\n    up, so just waiting until the initcall has finished ensures correct\n    behavior."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0481baa2318cb1ab13277715da6cdbb657807b3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18688de203b47e5d8d9d0953385bf30b5949324f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51b82141fffa454abf937a8ff0b8af89e4fd0c8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7fccf264b1a785525b366a5b7f8113c756187ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49237","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.700","lastModified":"2025-02-26T07:01:00.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: add missing of_node_put() to avoid leak\n\nThe node pointer is returned by of_find_node_by_type()\nor of_parse_phandle() with refcount incremented. Calling\nof_node_put() to aovid the refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d38faef0de1756994b3d95e47b2302842f729e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d51cb010b20d70b16dc6e4341bf29d6c5b32564","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49238","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.790","lastModified":"2025-02-26T07:01:00.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: free peer for station when disconnect from AP for QCA6390\/WCN6855\n\nCommit b4a0f54156ac (\"ath11k: move peer delete after vdev stop of station\nfor QCA6390 and WCN6855\") is to fix firmware crash by changing the WMI\ncommand sequence, but actually skip all the peer delete operation, then\nit lead commit 58595c9874c6 (\"ath11k: Fixing dangling pointer issue upon\npeer delete failure\") not take effect, and then happened a use-after-free\nwarning from KASAN. because the peer->sta is not set to NULL and then used\nlater.\n\nChange to only skip the WMI_PEER_DELETE_CMDID for QCA6390\/WCN6855.\n\nlog of user-after-free:\n\n[  534.888665] BUG: KASAN: use-after-free in ath11k_dp_rx_update_peer_stats+0x912\/0xc10 [ath11k]\n[  534.888696] Read of size 8 at addr ffff8881396bb1b8 by task rtcwake\/2860\n\n[  534.888705] CPU: 4 PID: 2860 Comm: rtcwake Kdump: loaded Tainted: G        W         5.15.0-wt-ath+ #523\n[  534.888712] Hardware name: Intel(R) Client Systems NUC8i7HVK\/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05\/28\/2021\n[  534.888716] Call Trace:\n[  534.888720]  <IRQ>\n[  534.888726]  dump_stack_lvl+0x57\/0x7d\n[  534.888736]  print_address_description.constprop.0+0x1f\/0x170\n[  534.888745]  ? ath11k_dp_rx_update_peer_stats+0x912\/0xc10 [ath11k]\n[  534.888771]  kasan_report.cold+0x83\/0xdf\n[  534.888783]  ? ath11k_dp_rx_update_peer_stats+0x912\/0xc10 [ath11k]\n[  534.888810]  ath11k_dp_rx_update_peer_stats+0x912\/0xc10 [ath11k]\n[  534.888840]  ath11k_dp_rx_process_mon_status+0x529\/0xa70 [ath11k]\n[  534.888874]  ? ath11k_dp_rx_mon_status_bufs_replenish+0x3f0\/0x3f0 [ath11k]\n[  534.888897]  ? check_prev_add+0x20f0\/0x20f0\n[  534.888922]  ? __lock_acquire+0xb72\/0x1870\n[  534.888937]  ? find_held_lock+0x33\/0x110\n[  534.888954]  ath11k_dp_rx_process_mon_rings+0x297\/0x520 [ath11k]\n[  534.888981]  ? rcu_read_unlock+0x40\/0x40\n[  534.888990]  ? ath11k_dp_rx_pdev_alloc+0xd90\/0xd90 [ath11k]\n[  534.889026]  ath11k_dp_service_mon_ring+0x67\/0xe0 [ath11k]\n[  534.889053]  ? ath11k_dp_rx_process_mon_rings+0x520\/0x520 [ath11k]\n[  534.889075]  call_timer_fn+0x167\/0x4a0\n[  534.889084]  ? add_timer_on+0x3b0\/0x3b0\n[  534.889103]  ? lockdep_hardirqs_on_prepare.part.0+0x18c\/0x370\n[  534.889117]  __run_timers.part.0+0x539\/0x8b0\n[  534.889123]  ? ath11k_dp_rx_process_mon_rings+0x520\/0x520 [ath11k]\n[  534.889157]  ? call_timer_fn+0x4a0\/0x4a0\n[  534.889164]  ? mark_lock_irq+0x1c30\/0x1c30\n[  534.889173]  ? clockevents_program_event+0xdd\/0x280\n[  534.889189]  ? mark_held_locks+0xa5\/0xe0\n[  534.889203]  run_timer_softirq+0x97\/0x180\n[  534.889213]  __do_softirq+0x276\/0x86a\n[  534.889230]  __irq_exit_rcu+0x11c\/0x180\n[  534.889238]  irq_exit_rcu+0x5\/0x20\n[  534.889244]  sysvec_apic_timer_interrupt+0x8e\/0xc0\n[  534.889251]  <\/IRQ>\n[  534.889254]  <TASK>\n[  534.889259]  asm_sysvec_apic_timer_interrupt+0x12\/0x20\n[  534.889265] RIP: 0010:_raw_spin_unlock_irqrestore+0x38\/0x70\n[  534.889271] Code: 74 24 10 e8 ea c2 bf fd 48 89 ef e8 12 53 c0 fd 81 e3 00 02 00 00 75 25 9c 58 f6 c4 02 75 2d 48 85 db 74 01 fb bf 01 00 00 00 <e8> 13 a7 b5 fd 65 8b 05 cc d9 9c 5e 85 c0 74 0a 5b 5d c3 e8 a0 ee\n[  534.889276] RSP: 0018:ffffc90002e5f880 EFLAGS: 00000206\n[  534.889284] RAX: 0000000000000006 RBX: 0000000000000200 RCX: ffffffff9f256f10\n[  534.889289] RDX: 0000000000000000 RSI: ffffffffa1c6e420 RDI: 0000000000000001\n[  534.889293] RBP: ffff8881095e6200 R08: 0000000000000001 R09: ffffffffa40d2b8f\n[  534.889298] R10: fffffbfff481a571 R11: 0000000000000001 R12: ffff8881095e6e68\n[  534.889302] R13: ffffc90002e5f908 R14: 0000000000000246 R15: 0000000000000000\n[  534.889316]  ? mark_lock+0xd0\/0x14a0\n[  534.889332]  klist_next+0x1d4\/0x450\n[  534.889340]  ? dpm_wait_for_subordinate+0x2d0\/0x2d0\n[  534.889350]  device_for_each_child+0xa8\/0x140\n[  534.889360]  ? device_remove_class_symlinks+0x1b0\/0x1b0\n[  534.889370]  ? __lock_release+0x4bd\/0x9f0\n[  534.889378]  ? dpm_suspend+0x26b\/0x3f0\n[  534.889390]  dpm_wait_for_subordinate+\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/212ad7cb7d7592669c067125949e0a8e31ce6a0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/400705c50bbf184794c885d1efad7fe9ccf1471a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49239","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.887","lastModified":"2025-02-26T07:01:00.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: wcd934x: Add missing of_node_put() in wcd934x_codec_parse_data\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\nThis is similar to commit 64b92de9603f\n(\"ASoC: wcd9335: fix a leaked reference by adding missing of_node_put\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f24716e38220fc9e52e208d20591d2bc9b7f020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f44eca78cc6d4e1779eb95765ec79e433accab4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9531a631379169d57756b2411178c6238655df88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3793eeb7b94a5eeed6f5c7a44bce403c6681a12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8e89d84ea83c51ba3ba97ff154f7aa679326760","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49240","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:00.977","lastModified":"2025-02-26T07:01:00.977","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: mt8195: Fix error handling in mt8195_mt6359_rt1019_rt5682_dev_probe\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/c4b7174fe5bb875a09a78674a14a1589d1a672f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c652f8f0875b569f8afa80b8cf9762828fd6187b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49241","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.063","lastModified":"2025-02-26T07:01:01.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: atmel: Fix error handling in sam9x5_wm8731_driver_probe\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14228225091a0854b1de23e5b4fe8bdeeca9683b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/740dc3e846537c3743da98bf106f376023fd085c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90ac679aa6a01841da90ec5a4aaa4b5e0badddf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f43ad5dc43240289f4cf13c16cc506f4f7087931","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f589063b585ac6dd2081bde6c145411cf48d8d92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49242","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.153","lastModified":"2025-02-26T07:01:01.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mxs: Fix error handling in mxs_sgtl5000_probe\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error paths.\nFor example, when codec_np is NULL, saif_np[0] and saif_np[1]\nare not NULL, it will cause leaks.\n\nof_node_put() will check if the node pointer is NULL, so we can\ncall it directly to release the refcount of regular pointers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44acdaf7acb60054d872bed18ce0e7db8ce900ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67e12f1cb2f97468c12b59e21975eaa0f332e7d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ae0a4d8fec551ec581d620f0eb1fe31f755551c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/790d2628e3fcc819d8f5572eb5615113fb2e727a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86b6cf989437e694fd0a15782b5a513853a739e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d880226c86f37624e2a5f3c6d92ac0ec3375f96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2923b48d99fe663cb93d8b481c93299fcd68656","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f16ad2c0e22687f80e5981c67374023f51c204b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8d38056bcd220ea6f0802a5586d1a12ebcce849","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49243","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.250","lastModified":"2025-02-26T07:01:01.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: atmel: Add missing of_node_put() in at91sam9g20ek_audio_probe\n\nThis node pointer is returned by of_parse_phandle() with refcount\nincremented in this function.\nCalling of_node_put() to avoid the refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0325193cf40dc3a6e27d55a5b98680936deebcd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32e6ceb05f36432811753852c674a301f944a24b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4793a02deb31b71b3984abc67bf1011a03c13b18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/662ee5ac6b451aa5a27b8eebd397f2f5c7f42cec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81f266396237cea09a8c6322a6a78535f06ed345","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0bc36b247dcf4d21bf820bfc4bcbaf7f6cf19b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0c56a0071116a37c24df998166c22a7e4684626","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f590797fa3c1bccdd19e55441592a23b46aef449","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8b7b9a0594715ecfbe6f18db2328d992242654a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49244","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.350","lastModified":"2025-02-26T07:01:01.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: mt8192-mt6359: Fix error handling in mt8192_mt6359_dev_probe\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error paths.\nFix this by calling of_node_put() in error handling too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1765787ec02e824f4f5e672cf269280a5da09d2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87e04a89c31e792eef62bcba6ebb77fd323d28a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5a38629f1aaf397fd471b27e49d55289ddc0656","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e45ac7831ff3e2934d58cce319c17c8ec763c95c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49245","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.450","lastModified":"2025-02-26T07:01:01.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: rockchip: Fix PM usage reference of rockchip_i2s_tdm_resume\n\npm_runtime_get_sync will increment pm usage counter\neven it failed. Forgetting to putting operation will\nresult in reference leak here. We fix it by replacing\nit with pm_runtime_resume_and_get to keep usage counter\nbalanced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e5510219111607b1f1875ab3c3f0485ba3c381c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c1834aac759ddfd0f17c9f38db1b30adc8eb4e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc5d8ac95663a5813c696008bc524b794d471215","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49246","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.537","lastModified":"2025-02-26T07:01:01.537","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: atmel: Fix error handling in snd_proto_probe\n\nThe device_node pointer is returned by of_parse_phandle()  with refcount\nincremented. We should use of_node_put() on it when done.\n\nThis function only calls of_node_put() in the regular path.\nAnd it will cause refcount leak in error paths.\nFix this by calling of_node_put() in error handling too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f517480d5888cd54487c5662ce4da95b30ad798","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fa969cd8485031294f91fc7184399000cae6355","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0bfaf0544d08d093d6211d7ef8816fb0b5b6c75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f32ac9bf5e3f594ef9bfedb410aebc98cf784e69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49247","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.623","lastModified":"2025-02-26T07:01:01.623","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: stk1160: If start stream fails, return buffers with VB2_BUF_STATE_QUEUED\n\nIf the callback 'start_streaming' fails, then all\nqueued buffers in the driver should be returned with\nstate 'VB2_BUF_STATE_QUEUED'. Currently, they are\nreturned with 'VB2_BUF_STATE_ERROR' which is wrong.\nFix this. This also fixes the warning:\n\n[   65.583633] WARNING: CPU: 5 PID: 593 at drivers\/media\/common\/videobuf2\/videobuf2-core.c:1612 vb2_start_streaming+0xd4\/0x160 [videobuf2_common]\n[   65.585027] Modules linked in: snd_usb_audio snd_hwdep snd_usbmidi_lib snd_rawmidi snd_soc_hdmi_codec dw_hdmi_i2s_audio saa7115 stk1160 videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev mc crct10dif_ce panfrost snd_soc_simple_card snd_soc_audio_graph_card snd_soc_spdif_tx snd_soc_simple_card_utils gpu_sched phy_rockchip_pcie snd_soc_rockchip_i2s rockchipdrm analogix_dp dw_mipi_dsi dw_hdmi cec drm_kms_helper drm rtc_rk808 rockchip_saradc industrialio_triggered_buffer kfifo_buf rockchip_thermal pcie_rockchip_host ip_tables x_tables ipv6\n[   65.589383] CPU: 5 PID: 593 Comm: v4l2src0:src Tainted: G        W         5.16.0-rc4-62408-g32447129cb30-dirty #14\n[   65.590293] Hardware name: Radxa ROCK Pi 4B (DT)\n[   65.590696] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   65.591304] pc : vb2_start_streaming+0xd4\/0x160 [videobuf2_common]\n[   65.591850] lr : vb2_start_streaming+0x6c\/0x160 [videobuf2_common]\n[   65.592395] sp : ffff800012bc3ad0\n[   65.592685] x29: ffff800012bc3ad0 x28: 0000000000000000 x27: ffff800012bc3cd8\n[   65.593312] x26: 0000000000000000 x25: ffff00000d8a7800 x24: 0000000040045612\n[   65.593938] x23: ffff800011323000 x22: ffff800012bc3cd8 x21: ffff00000908a8b0\n[   65.594562] x20: ffff00000908a8c8 x19: 00000000fffffff4 x18: ffffffffffffffff\n[   65.595188] x17: 000000040044ffff x16: 00400034b5503510 x15: ffff800011323f78\n[   65.595813] x14: ffff000013163886 x13: ffff000013163885 x12: 00000000000002ce\n[   65.596439] x11: 0000000000000028 x10: 0000000000000001 x9 : 0000000000000228\n[   65.597064] x8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff726c5e78\n[   65.597690] x5 : ffff800012bc3990 x4 : 0000000000000000 x3 : ffff000009a34880\n[   65.598315] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff000007cd99f0\n[   65.598940] Call trace:\n[   65.599155]  vb2_start_streaming+0xd4\/0x160 [videobuf2_common]\n[   65.599672]  vb2_core_streamon+0x17c\/0x1a8 [videobuf2_common]\n[   65.600179]  vb2_streamon+0x54\/0x88 [videobuf2_v4l2]\n[   65.600619]  vb2_ioctl_streamon+0x54\/0x60 [videobuf2_v4l2]\n[   65.601103]  v4l_streamon+0x3c\/0x50 [videodev]\n[   65.601521]  __video_do_ioctl+0x1a4\/0x428 [videodev]\n[   65.601977]  video_usercopy+0x320\/0x828 [videodev]\n[   65.602419]  video_ioctl2+0x3c\/0x58 [videodev]\n[   65.602830]  v4l2_ioctl+0x60\/0x90 [videodev]\n[   65.603227]  __arm64_sys_ioctl+0xa8\/0xe0\n[   65.603576]  invoke_syscall+0x54\/0x118\n[   65.603911]  el0_svc_common.constprop.3+0x84\/0x100\n[   65.604332]  do_el0_svc+0x34\/0xa0\n[   65.604625]  el0_svc+0x1c\/0x50\n[   65.604897]  el0t_64_sync_handler+0x88\/0xb0\n[   65.605264]  el0t_64_sync+0x16c\/0x170\n[   65.605587] ---[ end trace 578e0ba07742170d ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03054f22d5abd80ad89547512c2bfbfb2714d3ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2874122ca4ca74adec72d6d6bf8828228ec20f15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cc050df73e3d973f1870a8dc0e177e77670bc7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d68603cc4382174bc1e7d532e10675c48c6b257","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a09e9882800fdfc5aab93f77c3f0132071d2191b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f04a520a422222fc921bf035dc67414c500a286a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f66e6fd1488d26229f11d86616de1b658c70fa8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbe04b49a54e31f4321d632270207f0e6304cd16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49248","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.727","lastModified":"2025-02-26T07:01:01.727","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: firewire-lib: fix uninitialized flag for AV\/C deferred transaction\n\nAV\/C deferred transaction was supported at a commit 00a7bb81c20f (\"ALSA:\nfirewire-lib: Add support for deferred transaction\") while 'deferrable'\nflag can be uninitialized for non-control\/notify AV\/C transactions.\nUBSAN reports it:\n\nkernel: ================================================================================\nkernel: UBSAN: invalid-load in \/build\/linux-aa0B4d\/linux-5.15.0\/sound\/firewire\/fcp.c:363:9\nkernel: load of value 158 is not a valid value for type '_Bool'\nkernel: CPU: 3 PID: 182227 Comm: irq\/35-firewire Tainted: P           OE     5.15.0-18-generic #18-Ubuntu\nkernel: Hardware name: Gigabyte Technology Co., Ltd. AX370-Gaming 5\/AX370-Gaming 5, BIOS F42b 08\/01\/2019\nkernel: Call Trace:\nkernel:  <IRQ>\nkernel:  show_stack+0x52\/0x58\nkernel:  dump_stack_lvl+0x4a\/0x5f\nkernel:  dump_stack+0x10\/0x12\nkernel:  ubsan_epilogue+0x9\/0x45\nkernel:  __ubsan_handle_load_invalid_value.cold+0x44\/0x49\nkernel:  fcp_response.part.0.cold+0x1a\/0x2b [snd_firewire_lib]\nkernel:  fcp_response+0x28\/0x30 [snd_firewire_lib]\nkernel:  fw_core_handle_request+0x230\/0x3d0 [firewire_core]\nkernel:  handle_ar_packet+0x1d9\/0x200 [firewire_ohci]\nkernel:  ? handle_ar_packet+0x1d9\/0x200 [firewire_ohci]\nkernel:  ? transmit_complete_callback+0x9f\/0x120 [firewire_core]\nkernel:  ar_context_tasklet+0xa8\/0x2e0 [firewire_ohci]\nkernel:  tasklet_action_common.constprop.0+0xea\/0xf0\nkernel:  tasklet_action+0x22\/0x30\nkernel:  __do_softirq+0xd9\/0x2e3\nkernel:  ? irq_finalize_oneshot.part.0+0xf0\/0xf0\nkernel:  do_softirq+0x75\/0xa0\nkernel:  <\/IRQ>\nkernel:  <TASK>\nkernel:  __local_bh_enable_ip+0x50\/0x60\nkernel:  irq_forced_thread_fn+0x7e\/0x90\nkernel:  irq_thread+0xba\/0x190\nkernel:  ? irq_thread_fn+0x60\/0x60\nkernel:  kthread+0x11e\/0x140\nkernel:  ? irq_thread_check_affinity+0xf0\/0xf0\nkernel:  ? set_kthread_struct+0x50\/0x50\nkernel:  ret_from_fork+0x22\/0x30\nkernel:  <\/TASK>\nkernel: ================================================================================\n\nThis commit fixes the bug. The bug has no disadvantage for the non-\ncontrol\/notify AV\/C transactions since the flag has an effect for AV\/C\nresponse with INTERIM (0x0f) status which is not used for the transactions\nin AV\/C general specification."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39d2c4a33dc1b4402cec68a3c8f82c6588b6edce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60e5d391805d70458a01998de00d0c28cba40bf3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7025f40690a235a118c87674cfb93072694aa66d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e6f5786621df060f8296f074efd275eaf20361a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99582e4b19f367fa95bdd150b3034d7ce8113342","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2b65c9013dc28836d82e25d0f0c94d794a14aba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf0cd60b7e33cf221fbe1114e4acb2c828b0af0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d07e4bbaff6fbba6f70c04b092ea7d9afcdf392e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eab74c41612083bd627b60da650e19234e4f1051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49249","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.830","lastModified":"2025-02-26T07:01:01.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: wc938x: fix accessing array out of bounds for enum type\n\nAccessing enums using integer would result in array out of bounds access\non platforms like aarch64 where sizeof(long) is 8 compared to enum size\nwhich is 4 bytes.\n\nFix this by using enumerated items instead of integers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/adafea71b49ec4dbc44e0b84ec6eb602004a7a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc587b7c8fbbe128f6bd0dad025a0caea5e6d164","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d09aee1b1da196be11ed86dd4897f228f2487613","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f03c0c94186d5876857132d97e28f20cdc100bdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49250","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:01.920","lastModified":"2025-02-26T07:01:01.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: rx-macro: fix accessing compander for aux\n\nAUX interpolator does not have compander, so check before accessing\ncompander data for this.\n\nWithout this checkan array of out bounds access will be made in\ncomp_enabled[] array."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42c709c4e1ce4c136891530646c9abd5dff3524f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aa8ef9535dbd561293406608ebe791627b10196","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87a2b44cb3005d30c3a72234d1e47b03ae3bb29a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9208ecc703b5ed5b12d7ea13c79207f4c8456638","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49251","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.013","lastModified":"2025-02-26T07:01:02.013","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: va-macro: fix accessing array out of bounds for enum type\n\nAccessing enums using integer would result in array out of bounds access\non platforms like aarch64 where sizeof(long) is 8 compared to enum size\nwhich is 4 bytes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ea5eff7c6063a8f124188424f8e4c6727f35051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a799972a283ab4ec031041304d7e2d34e1a16eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/966408e37d84b762d11978b7bfb03fff0c6222ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0099bbf8bc85d30c4cf38220fca3c8d4253fa7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49252","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.103","lastModified":"2025-02-26T07:01:02.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: rx-macro: fix accessing array out of bounds for enum type\n\nAccessing enums using integer would result in array out of bounds access\non platforms like aarch64 where sizeof(long) is 8 compared to enum size\nwhich is 4 bytes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e3629e256d1cabf801d00050550ade4d036cafe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aed43e92e4b9187029903880d5db608f7fa1c53c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcfe5f76cc4051ea3f9eb5d2c8ea621641f290a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb15c6ea692fd88d70698d874d9a0d667fb4cde9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49253","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.200","lastModified":"2025-02-26T07:01:02.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: usb: go7007: s2250-board: fix leak in probe()\n\nCall i2c_unregister_device(audio) on this error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14cd5a8e61c654828a1f1056d56f0b0a524d2c69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44973633b0064c46083833b55dd0a45e6235f8ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67e4550ecd6164bfbdff54c169e5bbf9ccfaf14d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/895364fa97e60749855f789bc4568883fc7a8b39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/948ad5e5624487079c24cb5c81c74ddd02832440","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a97130cd5b0c00eec169b10a16d922b9ea67324a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5470f3efa530b10296257bb578ce4b1769e9a04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7dd177225355da55f8d80d8e568928e0eec3608","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbdd0e15738336e6b1208304ae98525117877bbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49254","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.300","lastModified":"2025-02-26T07:01:02.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ti-vpe: cal: Fix a NULL pointer dereference in cal_ctx_v4l2_init_formats()\n\nIn cal_ctx_v4l2_init_formats(), devm_kzalloc() is assigned to\nctx->active_fmt and there is a dereference of it after that, which could\nlead to NULL pointer dereference on failure of devm_kzalloc().\n\nFix this bug by adding a NULL check of ctx->active_fmt.\n\nThis bug was found by a static analyzer.\n\nBuilds with 'make allyesconfig' show no new warnings, and our static\nanalyzer no longer warns about this code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1381f1a629a090c251965edb56f849ad648414a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e2805579ab0783eed53acc2bf9fb553e939004","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa613ac270292e102503e9767882e39200efe608","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abd77889851d2ead0d0c9c4d29f1808801477b00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49255","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.397","lastModified":"2025-02-26T07:01:02.397","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix missing free nid in f2fs_handle_failed_inode\n\nThis patch fixes xfstests\/generic\/475 failure.\n\n[  293.680694] F2FS-fs (dm-1): May loss orphan inode, run fsck to fix.\n[  293.685358] Buffer I\/O error on dev dm-1, logical block 8388592, async page read\n[  293.691527] Buffer I\/O error on dev dm-1, logical block 8388592, async page read\n[  293.691764] sh (7615): drop_caches: 3\n[  293.691819] sh (7616): drop_caches: 3\n[  293.694017] Buffer I\/O error on dev dm-1, logical block 1, async page read\n[  293.695659] sh (7618): drop_caches: 3\n[  293.696979] sh (7617): drop_caches: 3\n[  293.700290] sh (7623): drop_caches: 3\n[  293.708621] sh (7626): drop_caches: 3\n[  293.711386] sh (7628): drop_caches: 3\n[  293.711825] sh (7627): drop_caches: 3\n[  293.716738] sh (7630): drop_caches: 3\n[  293.719613] sh (7632): drop_caches: 3\n[  293.720971] sh (7633): drop_caches: 3\n[  293.727741] sh (7634): drop_caches: 3\n[  293.730783] sh (7636): drop_caches: 3\n[  293.732681] sh (7635): drop_caches: 3\n[  293.732988] sh (7637): drop_caches: 3\n[  293.738836] sh (7639): drop_caches: 3\n[  293.740568] sh (7641): drop_caches: 3\n[  293.743053] sh (7640): drop_caches: 3\n[  293.821889] ------------[ cut here ]------------\n[  293.824654] kernel BUG at fs\/f2fs\/node.c:3334!\n[  293.826226] invalid opcode: 0000 [#1] PREEMPT SMP PTI\n[  293.828713] CPU: 0 PID: 7653 Comm: umount Tainted: G           OE     5.17.0-rc1-custom #1\n[  293.830946] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n[  293.832526] RIP: 0010:f2fs_destroy_node_manager+0x33f\/0x350 [f2fs]\n[  293.833905] Code: e8 d6 3d f9 f9 48 8b 45 d0 65 48 2b 04 25 28 00 00 00 75 1a 48 81 c4 28 03 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 0f 0b\n[  293.837783] RSP: 0018:ffffb04ec31e7a20 EFLAGS: 00010202\n[  293.839062] RAX: 0000000000000001 RBX: ffff9df947db2eb8 RCX: 0000000080aa0072\n[  293.840666] RDX: 0000000000000000 RSI: ffffe86c0432a140 RDI: ffffffffc0b72a21\n[  293.842261] RBP: ffffb04ec31e7d70 R08: ffff9df94ca85780 R09: 0000000080aa0072\n[  293.843909] R10: ffff9df94ca85700 R11: ffff9df94e1ccf58 R12: ffff9df947db2e00\n[  293.845594] R13: ffff9df947db2ed0 R14: ffff9df947db2eb8 R15: ffff9df947db2eb8\n[  293.847855] FS:  00007f5a97379800(0000) GS:ffff9dfa77c00000(0000) knlGS:0000000000000000\n[  293.850647] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  293.852940] CR2: 00007f5a97528730 CR3: 000000010bc76005 CR4: 0000000000370ef0\n[  293.854680] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  293.856423] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  293.858380] Call Trace:\n[  293.859302]  <TASK>\n[  293.860311]  ? ttwu_do_wakeup+0x1c\/0x170\n[  293.861800]  ? ttwu_do_activate+0x6d\/0xb0\n[  293.863057]  ? _raw_spin_unlock_irqrestore+0x29\/0x40\n[  293.864411]  ? try_to_wake_up+0x9d\/0x5e0\n[  293.865618]  ? debug_smp_processor_id+0x17\/0x20\n[  293.866934]  ? debug_smp_processor_id+0x17\/0x20\n[  293.868223]  ? free_unref_page+0xbf\/0x120\n[  293.869470]  ? __free_slab+0xcb\/0x1c0\n[  293.870614]  ? preempt_count_add+0x7a\/0xc0\n[  293.871811]  ? __slab_free+0xa0\/0x2d0\n[  293.872918]  ? __wake_up_common_lock+0x8a\/0xc0\n[  293.874186]  ? __slab_free+0xa0\/0x2d0\n[  293.875305]  ? free_inode_nonrcu+0x20\/0x20\n[  293.876466]  ? free_inode_nonrcu+0x20\/0x20\n[  293.877650]  ? debug_smp_processor_id+0x17\/0x20\n[  293.878949]  ? call_rcu+0x11a\/0x240\n[  293.880060]  ? f2fs_destroy_stats+0x59\/0x60 [f2fs]\n[  293.881437]  ? kfree+0x1fe\/0x230\n[  293.882674]  f2fs_put_super+0x160\/0x390 [f2fs]\n[  293.883978]  generic_shutdown_super+0x7a\/0x120\n[  293.885274]  kill_block_super+0x27\/0x50\n[  293.886496]  kill_f2fs_super+0x7f\/0x100 [f2fs]\n[  293.887806]  deactivate_locked_super+0x35\/0xa0\n[  293.889271]  deactivate_super+0x40\/0x50\n[  293.890513]  cleanup_mnt+0x139\/0x190\n[  293.891689]  __cleanup_mnt+0x12\/0x20\n[  293.892850]  task_work_run+0x64\/0xa0\n[  293.894035]  exit_to_user_mode_prepare+0x1b7\/\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/005f9cdab70c915702254c5eb67a8efced80e821","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a11a873749c6375bb668953fa1a196d8538d26b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fef99b8372c1ae3d8445ab570e888b5a358dbe9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8579b413af100ec5f3592bd6cf11559312b380c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa80bf73e3b3fb7026d343c77b3ddc849e26a095","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1eaaf6cadedf638e17017b0a04d56308405ac10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49256","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.497","lastModified":"2025-02-26T07:01:02.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatch_queue: Actually free the watch\n\nfree_watch() does everything barring actually freeing the watch object.  Fix\nthis by adding the missing kfree.\n\nkmemleak produces a report something like the following.  Note that as an\naddress can be seen in the first word, the watch would appear to have gone\nthrough call_rcu().\n\nBUG: memory leak\nunreferenced object 0xffff88810ce4a200 (size 96):\n  comm \"syz-executor352\", pid 3605, jiffies 4294947473 (age 13.720s)\n  hex dump (first 32 bytes):\n    e0 82 48 0d 81 88 ff ff 00 00 00 00 00 00 00 00  ..H.............\n    80 a2 e4 0c 81 88 ff ff 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff8214e6cc>] kmalloc include\/linux\/slab.h:581 [inline]\n    [<ffffffff8214e6cc>] kzalloc include\/linux\/slab.h:714 [inline]\n    [<ffffffff8214e6cc>] keyctl_watch_key+0xec\/0x2e0 security\/keys\/keyctl.c:1800\n    [<ffffffff8214ec84>] __do_sys_keyctl+0x3c4\/0x490 security\/keys\/keyctl.c:2016\n    [<ffffffff84493a25>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n    [<ffffffff84493a25>] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n    [<ffffffff84600068>] entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31824613a42aacdcbeb325bf07a1c8247a11ebe2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d8dcf278b1ee1eff1e90be848fa2237db4c07a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e8c9b0df07a77f0d072603b8ced2677e30e1893","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d92be1a09fbb3dd65600dbfe7eedb40e7228e4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f69aecb49968e14196366bbe896eab0a904229f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49257","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.597","lastModified":"2025-02-26T07:01:02.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatch_queue: Fix NULL dereference in error cleanup\n\nIn watch_queue_set_size(), the error cleanup code doesn't take account of\nthe fact that __free_page() can't handle a NULL pointer when trying to free\nup buffer pages that did get allocated.\n\nFix this by only calling __free_page() on the pages actually allocated.\n\nWithout the fix, this can lead to something like the following:\n\nBUG: KASAN: null-ptr-deref in __free_pages+0x1f\/0x1b0 mm\/page_alloc.c:5473\nRead of size 4 at addr 0000000000000034 by task syz-executor168\/3599\n...\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n __kasan_report mm\/kasan\/report.c:446 [inline]\n kasan_report.cold+0x66\/0xdf mm\/kasan\/report.c:459\n check_region_inline mm\/kasan\/generic.c:183 [inline]\n kasan_check_range+0x13d\/0x180 mm\/kasan\/generic.c:189\n instrument_atomic_read include\/linux\/instrumented.h:71 [inline]\n atomic_read include\/linux\/atomic\/atomic-instrumented.h:27 [inline]\n page_ref_count include\/linux\/page_ref.h:67 [inline]\n put_page_testzero include\/linux\/mm.h:717 [inline]\n __free_pages+0x1f\/0x1b0 mm\/page_alloc.c:5473\n watch_queue_set_size+0x499\/0x630 kernel\/watch_queue.c:275\n pipe_ioctl+0xac\/0x2b0 fs\/pipe.c:632\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:874 [inline]\n __se_sys_ioctl fs\/ioctl.c:860 [inline]\n __x64_sys_ioctl+0x193\/0x200 fs\/ioctl.c:860\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/112a2f9b0a8457794095a0450598f150724ec456","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ae75b4ed30322b42abaa75ef1b784addfdb7dc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/695c47cea02b9101e2fc2e7d36d552128592b347","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a635415a064e77bcfbf43da413fd9dfe0bbed9cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6f5ad3e45d19f9c4ee3e8a2aff829f28d68591d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49258","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.720","lastModified":"2025-02-26T07:01:02.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: ccree - Fix use after free in cc_cipher_exit()\n\nkfree_sensitive(ctx_p->user.key) will free the ctx_p->user.key. But\nctx_p->user.key is still used in the next line, which will lead to a\nuse after free.\n\nWe can call kfree_sensitive() after dev_dbg() to avoid the uaf."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25c358efee5153dfd240d4e0d3169d5bebe9cacd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/335bf1fc74f775a8255257aa3e33763f2257b676","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d950c34074ed74d2713c3856ba01264523289e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c93017c8d5ebf55a4e453ac7c84cc84cf92ab570","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cffb5382bd8d3cf21b874ab5b84bf7618932286b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49259","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.850","lastModified":"2025-02-26T07:01:02.850","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: don't delete queue kobject before its children\n\nkobjects aren't supposed to be deleted before their child kobjects are\ndeleted.  Apparently this is usually benign; however, a WARN will be\ntriggered if one of the child kobjects has a named attribute group:\n\n    sysfs group 'modes' not found for kobject 'crypto'\n    WARNING: CPU: 0 PID: 1 at fs\/sysfs\/group.c:278 sysfs_remove_group+0x72\/0x80\n    ...\n    Call Trace:\n      sysfs_remove_groups+0x29\/0x40 fs\/sysfs\/group.c:312\n      __kobject_del+0x20\/0x80 lib\/kobject.c:611\n      kobject_cleanup+0xa4\/0x140 lib\/kobject.c:696\n      kobject_release lib\/kobject.c:736 [inline]\n      kref_put include\/linux\/kref.h:65 [inline]\n      kobject_put+0x53\/0x70 lib\/kobject.c:753\n      blk_crypto_sysfs_unregister+0x10\/0x20 block\/blk-crypto-sysfs.c:159\n      blk_unregister_queue+0xb0\/0x110 block\/blk-sysfs.c:962\n      del_gendisk+0x117\/0x250 block\/genhd.c:610\n\nFix this by moving the kobject_del() and the corresponding\nkobject_uevent() to the correct place."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b5924a14d64487ebd51127b0358d06066ef5384","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f69288253e9fc7c495047720e523b9f1aba5712","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d7e32c8da45957326f56937e0471c686d1a7711","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84fe3ca6e7910beb47ec13509d484f84fa2a41ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2001eb10f59363da930cdd6e086a2861986fa18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf0cb8686e55d9c022944bc6ba9e19e832889e83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efaa0e969261e97c1fdd8e0338e5dd3ba5b9219c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49260","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:02.967","lastModified":"2025-02-26T07:01:02.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: hisilicon\/sec - fix the aead software fallback for engine\n\nDue to the subreq pointer misuse the private context memory. The aead\nsoft crypto occasionally casues the OS panic as setting the 64K page.\nHere is fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a2a464f863187f97e96ebc6384c052cafd4a54c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40dba7c26e897c637e91312b35f664f1d4d0073c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c1149e2abe0b7489300736b8277b45b113de67f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef7b10f3cac7810ddcfd976304fd125aca33d144","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49261","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.057","lastModified":"2025-02-26T07:01:03.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/gem: add missing boundary check in vm_access\n\nA missing bounds check in vm_access() can lead to an out-of-bounds read\nor write in the adjacent memory area, since the len attribute is not\nvalidated before the memcpy later in the function, potentially hitting:\n\n[  183.637831] BUG: unable to handle page fault for address: ffffc90000c86000\n[  183.637934] #PF: supervisor read access in kernel mode\n[  183.637997] #PF: error_code(0x0000) - not-present page\n[  183.638059] PGD 100000067 P4D 100000067 PUD 100258067 PMD 106341067 PTE 0\n[  183.638144] Oops: 0000 [#2] PREEMPT SMP NOPTI\n[  183.638201] CPU: 3 PID: 1790 Comm: poc Tainted: G      D           5.17.0-rc6-ci-drm-11296+ #1\n[  183.638298] Hardware name: Intel Corporation CoffeeLake Client Platform\/CoffeeLake H DDR4 RVP, BIOS CNLSFWR1.R00.X208.B00.1905301319 05\/30\/2019\n[  183.638430] RIP: 0010:memcpy_erms+0x6\/0x10\n[  183.640213] RSP: 0018:ffffc90001763d48 EFLAGS: 00010246\n[  183.641117] RAX: ffff888109c14000 RBX: ffff888111bece40 RCX: 0000000000000ffc\n[  183.642029] RDX: 0000000000001000 RSI: ffffc90000c86000 RDI: ffff888109c14004\n[  183.642946] RBP: 0000000000000ffc R08: 800000000000016b R09: 0000000000000000\n[  183.643848] R10: ffffc90000c85000 R11: 0000000000000048 R12: 0000000000001000\n[  183.644742] R13: ffff888111bed190 R14: ffff888109c14000 R15: 0000000000001000\n[  183.645653] FS:  00007fe5ef807540(0000) GS:ffff88845b380000(0000) knlGS:0000000000000000\n[  183.646570] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  183.647481] CR2: ffffc90000c86000 CR3: 000000010ff02006 CR4: 00000000003706e0\n[  183.648384] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  183.649271] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  183.650142] Call Trace:\n[  183.650988]  <TASK>\n[  183.651793]  vm_access+0x1f0\/0x2a0 [i915]\n[  183.652726]  __access_remote_vm+0x224\/0x380\n[  183.653561]  mem_rw.isra.0+0xf9\/0x190\n[  183.654402]  vfs_read+0x9d\/0x1b0\n[  183.655238]  ksys_read+0x63\/0xe0\n[  183.656065]  do_syscall_64+0x38\/0xc0\n[  183.656882]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[  183.657663] RIP: 0033:0x7fe5ef725142\n[  183.659351] RSP: 002b:00007ffe1e81c7e8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n[  183.660227] RAX: ffffffffffffffda RBX: 0000557055dfb780 RCX: 00007fe5ef725142\n[  183.661104] RDX: 0000000000001000 RSI: 00007ffe1e81d880 RDI: 0000000000000005\n[  183.661972] RBP: 00007ffe1e81e890 R08: 0000000000000030 R09: 0000000000000046\n[  183.662832] R10: 0000557055dfc2e0 R11: 0000000000000246 R12: 0000557055dfb1c0\n[  183.663691] R13: 00007ffe1e81e980 R14: 0000000000000000 R15: 0000000000000000\n\nChanges since v1:\n     - Updated if condition with range_overflows_t [Chris Wilson]\n\n[mauld: tidy up the commit message and add Cc: stable]\n(cherry picked from commit 661412e301e2ca86799aa4f400d1cf0bd38c57c6)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/312d3d4f49e12f97260bcf972c848c3562126a18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3886a86e7e6cc6ce2ce93c440fecd8f42aed0ce7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f6e560e3e86ac053447524224e411034f41f5c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89ddcc81914ab58cc203acc844f27d55ada8ec0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f0ebea8f6e8c474264ed97d7a64c9c09ed4f5aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49262","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.153","lastModified":"2025-02-26T07:01:03.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: octeontx2 - remove CONFIG_DM_CRYPT check\n\nNo issues were found while using the driver with dm-crypt enabled. So\nCONFIG_DM_CRYPT check in the driver can be removed.\n\nThis also fixes the NULL pointer dereference in driver release if\nCONFIG_DM_CRYPT is enabled.\n\n...\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000008\n...\nCall trace:\n crypto_unregister_alg+0x68\/0xfc\n crypto_unregister_skciphers+0x44\/0x60\n otx2_cpt_crypto_exit+0x100\/0x1a0\n otx2_cptvf_remove+0xf8\/0x200\n pci_device_remove+0x3c\/0xd4\n __device_release_driver+0x188\/0x234\n device_release_driver+0x2c\/0x4c\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d841af23ae8f398c85dd1ff2dc24b5ec8ba4569","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1bf728f3388ac3a2c2dffa57e25622e90b9f6f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a462214866eebbca87e13ff6d73092b1c4895624","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6374086f249295121384bfaa7cdcc8d461146f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49263","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.243","lastModified":"2025-02-26T07:01:03.243","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbrcmfmac: pcie: Release firmwares in the brcmf_pcie_setup error path\n\nThis avoids leaking memory if brcmf_chip_get_raminfo fails. Note that\nthe CLM blob is released in the device remove path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0347bdfdb1529994ac3a4cb425087c477a74eb2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e0b507597e1a86e9b4c056ab274c427223cf8ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e90f0f3ead014867dade7a22f93958119f5efab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a88337a06966f2d733ad9a97714b874469133f14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0ab87f8dcdfe72dc1d763be3392c1fc51a1ace2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3820ddaf4f3ac80c7401ccc6a42e663c9317f31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49264","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.337","lastModified":"2025-02-26T07:01:03.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nexec: Force single empty string when argv is empty\n\nQuoting[1] Ariadne Conill:\n\n\"In several other operating systems, it is a hard requirement that the\nsecond argument to execve(2) be the name of a program, thus prohibiting\na scenario where argc < 1. POSIX 2017 also recommends this behaviour,\nbut it is not an explicit requirement[2]:\n\n    The argument arg0 should point to a filename string that is\n    associated with the process being started by one of the exec\n    functions.\n...\nInterestingly, Michael Kerrisk opened an issue about this in 2008[3],\nbut there was no consensus to support fixing this issue then.\nHopefully now that CVE-2021-4034 shows practical exploitative use[4]\nof this bug in a shellcode, we can reconsider.\n\nThis issue is being tracked in the KSPP issue tracker[5].\"\n\nWhile the initial code searches[6][7] turned up what appeared to be\nmostly corner case tests, trying to that just reject argv == NULL\n(or an immediately terminated pointer list) quickly started tripping[8]\nexisting userspace programs.\n\nThe next best approach is forcing a single empty string into argv and\nadjusting argc to match. The number of programs depending on argc == 0\nseems a smaller set than those calling execve with a NULL argv.\n\nAccount for the additional stack space in bprm_stack_limits(). Inject an\nempty string when argc == 0 (and set argc = 1). Warn about the case so\nuserspace has some notice about the change:\n\n    process '.\/argc0' launched '.\/argc0' with NULL argv: empty string added\n\nAdditionally WARN() and reject NULL argv usage for kernel threads.\n\n[1] https:\/\/lore.kernel.org\/lkml\/20220127000724.15106-1-ariadne@dereferenced.org\/\n[2] https:\/\/pubs.opengroup.org\/onlinepubs\/9699919799\/functions\/exec.html\n[3] https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=8408\n[4] https:\/\/www.qualys.com\/2022\/01\/25\/cve-2021-4034\/pwnkit.txt\n[5] https:\/\/github.com\/KSPP\/linux\/issues\/176\n[6] https:\/\/codesearch.debian.net\/search?q=execve%5C+*%5C%28%5B%5E%2C%5D%2B%2C+*NULL&literal=0\n[7] https:\/\/codesearch.debian.net\/search?q=execlp%3F%5Cs*%5C%28%5B%5E%2C%5D%2B%2C%5Cs*NULL&literal=0\n[8] https:\/\/lore.kernel.org\/lkml\/20220131144352.GE16385@xsang-OptiPlex-9020\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1290eb4412aa0f0e9f3434b406dc8e255da85f9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1fe82bfd9e4ce93399d815ca458b58505191c3e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27a6f495b63a1804cc71be45911065db7757a98c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41f6ea5b9aaa28b740d47ffe995a5013211fdbb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98e0c7c702894987732776736c99b85ade6fba45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8054d3fa5deb84b215d6be1b910a978f3cb840d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b50fb8dbc8b81aaa126387de428f4c42a7c72a73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfbfff8ce5e3d674947581f1eb9af0a1b1807950","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcd46d897adb70d63e025f175a00a89797d31a43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49265","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.437","lastModified":"2025-02-26T07:01:03.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPM: domains: Fix sleep-in-atomic bug caused by genpd_debug_remove()\n\nWhen a genpd with GENPD_FLAG_IRQ_SAFE gets removed, the following\nsleep-in-atomic bug will be seen, as genpd_debug_remove() will be called\nwith a spinlock being held.\n\n[    0.029183] BUG: sleeping function called from invalid context at kernel\/locking\/rwsem.c:1460\n[    0.029204] in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 1, name: swapper\/0\n[    0.029219] preempt_count: 1, expected: 0\n[    0.029230] CPU: 1 PID: 1 Comm: swapper\/0 Not tainted 5.17.0-rc4+ #489\n[    0.029245] Hardware name: Thundercomm TurboX CM2290 (DT)\n[    0.029256] Call trace:\n[    0.029265]  dump_backtrace.part.0+0xbc\/0xd0\n[    0.029285]  show_stack+0x3c\/0xa0\n[    0.029298]  dump_stack_lvl+0x7c\/0xa0\n[    0.029311]  dump_stack+0x18\/0x34\n[    0.029323]  __might_resched+0x10c\/0x13c\n[    0.029338]  __might_sleep+0x4c\/0x80\n[    0.029351]  down_read+0x24\/0xd0\n[    0.029363]  lookup_one_len_unlocked+0x9c\/0xcc\n[    0.029379]  lookup_positive_unlocked+0x10\/0x50\n[    0.029392]  debugfs_lookup+0x68\/0xac\n[    0.029406]  genpd_remove.part.0+0x12c\/0x1b4\n[    0.029419]  of_genpd_remove_last+0xa8\/0xd4\n[    0.029434]  psci_cpuidle_domain_probe+0x174\/0x53c\n[    0.029449]  platform_probe+0x68\/0xe0\n[    0.029462]  really_probe+0x190\/0x430\n[    0.029473]  __driver_probe_device+0x90\/0x18c\n[    0.029485]  driver_probe_device+0x40\/0xe0\n[    0.029497]  __driver_attach+0xf4\/0x1d0\n[    0.029508]  bus_for_each_dev+0x70\/0xd0\n[    0.029523]  driver_attach+0x24\/0x30\n[    0.029534]  bus_add_driver+0x164\/0x22c\n[    0.029545]  driver_register+0x78\/0x130\n[    0.029556]  __platform_driver_register+0x28\/0x34\n[    0.029569]  psci_idle_init_domains+0x1c\/0x28\n[    0.029583]  do_one_initcall+0x50\/0x1b0\n[    0.029595]  kernel_init_freeable+0x214\/0x280\n[    0.029609]  kernel_init+0x2c\/0x13c\n[    0.029622]  ret_from_fork+0x10\/0x20\n\nIt doesn't seem necessary to call genpd_debug_remove() with the lock, so\nmove it out from locking to fix the problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2039163c30f886cf5638afd6993705ae9bb34a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1b6840d8fb9b35193d45d8fe6b4d830bfd20c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6bfe8b5b2c2a5ac8bd2fc7bca3706e6c3fc26d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fee777ea77769cc5392a34805d9d73099a223fae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49266","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.527","lastModified":"2025-02-26T07:01:03.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix rq-qos breakage from skipping rq_qos_done_bio()\n\na647a524a467 (\"block: don't call rq_qos_ops->done_bio if the bio isn't\ntracked\") made bio_endio() skip rq_qos_done_bio() if BIO_TRACKED is not set.\nWhile this fixed a potential oops, it also broke blk-iocost by skipping the\ndone_bio callback for merged bios.\n\nBefore, whether a bio goes through rq_qos_throttle() or rq_qos_merge(),\nrq_qos_done_bio() would be called on the bio on completion with BIO_TRACKED\ndistinguishing the former from the latter. rq_qos_done_bio() is not called\nfor bios which wenth through rq_qos_merge(). This royally confuses\nblk-iocost as the merged bios never finish and are considered perpetually\nin-flight.\n\nOne reliably reproducible failure mode is an intermediate cgroup geting\nstuck active preventing its children from being activated due to the\nleaf-only rule, leading to loss of control. The following is from\nresctl-bench protection scenario which emulates isolating a web server like\nworkload from a memory bomb run on an iocost configuration which should\nyield a reasonable level of protection.\n\n  # cat \/sys\/block\/nvme2n1\/device\/model\n  Samsung SSD 970 PRO 512GB\n  # cat \/sys\/fs\/cgroup\/io.cost.model\n  259:0 ctrl=user model=linear rbps=834913556 rseqiops=93622 rrandiops=102913 wbps=618985353 wseqiops=72325 wrandiops=71025\n  # cat \/sys\/fs\/cgroup\/io.cost.qos\n  259:0 enable=1 ctrl=user rpct=95.00 rlat=18776 wpct=95.00 wlat=8897 min=60.00 max=100.00\n  # resctl-bench -m 29.6G -r out.json run protection::scenario=mem-hog,loops=1\n  ...\n  Memory Hog Summary\n  ==================\n\n  IO Latency: R p50=242u:336u\/2.5m p90=794u:1.4m\/7.5m p99=2.7m:8.0m\/62.5m max=8.0m:36.4m\/350m\n              W p50=221u:323u\/1.5m p90=709u:1.2m\/5.5m p99=1.5m:2.5m\/9.5m max=6.9m:35.9m\/350m\n\n  Isolation and Request Latency Impact Distributions:\n\n                min   p01   p05   p10   p25   p50   p75   p90   p95   p99   max  mean stdev\n  isol%       15.90 15.90 15.90 40.05 57.24 59.07 60.01 74.63 74.63 90.35 90.35 58.12 15.82\n  lat-imp%        0     0     0     0     0  4.55 14.68 15.54 233.5 548.1 548.1 53.88 143.6\n\n  Result: isol=58.12:15.82% lat_imp=53.88%:143.6 work_csv=100.0% missing=3.96%\n\nThe isolation result of 58.12% is close to what this device would show\nwithout any IO control.\n\nFix it by introducing a new flag BIO_QOS_MERGED to mark merged bios and\ncalling rq_qos_done_bio() on them too. For consistency and clarity, rename\nBIO_TRACKED to BIO_QOS_THROTTLED. The flag checks are moved into\nrq_qos_done_bio() so that it's next to the code paths that set the flags.\n\nWith the patch applied, the above same benchmark shows:\n\n  # resctl-bench -m 29.6G -r out.json run protection::scenario=mem-hog,loops=1\n  ...\n  Memory Hog Summary\n  ==================\n\n  IO Latency: R p50=123u:84.4u\/985u p90=322u:256u\/2.5m p99=1.6m:1.4m\/9.5m max=11.1m:36.0m\/350m\n              W p50=429u:274u\/995u p90=1.7m:1.3m\/4.5m p99=3.4m:2.7m\/11.5m max=7.9m:5.9m\/26.5m\n\n  Isolation and Request Latency Impact Distributions:\n\n                min   p01   p05   p10   p25   p50   p75   p90   p95   p99   max  mean stdev\n  isol%       84.91 84.91 89.51 90.73 92.31 94.49 96.36 98.04 98.71 100.0 100.0 94.42  2.81\n  lat-imp%        0     0     0     0     0  2.81  5.73 11.11 13.92 17.53 22.61  4.10  4.68\n\n  Result: isol=94.42:2.81% lat_imp=4.10%:4.68 work_csv=58.34% missing=0%"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09737db4c891eba25e6f6383a7c38afd4acc883f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa1b46dcdc7baaf5fec0be25782ef24b26aa209e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af9452dfdba4bf7359ef7645eee2d243a1df0649","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbd20bb904ad5731aaca8d009367a930d6ada111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49267","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.620","lastModified":"2025-02-26T07:01:03.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: core: use sysfs_emit() instead of sprintf()\n\nsprintf() (still used in the MMC core for the sysfs output) is vulnerable\nto the buffer overflow.  Use the new-fangled sysfs_emit() instead.\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/659ca56b5415c7a1d05e185c36fad80ba165d063","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4ab65738ab3e21fe519ee46b2051222bc8e32ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5d8a5fe77ce933f53eb8f2e22bb7a1a2019ea11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49268","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.710","lastModified":"2025-02-26T07:01:03.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: Intel: Fix NULL ptr dereference when ENOMEM\n\nDo not call snd_dma_free_pages() when snd_dma_alloc_pages() returns\n-ENOMEM because it leads to a NULL pointer dereference bug.\n\nThe dmesg says:\n\n  [ T1387] sof-audio-pci-intel-tgl 0000:00:1f.3: error: memory alloc failed: -12\n  [ T1387] BUG: kernel NULL pointer dereference, address: 0000000000000000\n  [ T1387] #PF: supervisor read access in kernel mode\n  [ T1387] #PF: error_code(0x0000) - not-present page\n  [ T1387] PGD 0 P4D 0\n  [ T1387] Oops: 0000 [#1] PREEMPT SMP NOPTI\n  [ T1387] CPU: 6 PID: 1387 Comm: alsa-sink-HDA A Tainted: G        W         5.17.0-rc4-superb-owl-00055-g80d47f5de5e3\n  [ T1387] Hardware name: HP HP Laptop 14s-dq2xxx\/87FD, BIOS F.15 09\/15\/2021\n  [ T1387] RIP: 0010:dma_free_noncontiguous+0x37\/0x80\n  [ T1387] Code: [... snip ...]\n  [ T1387] RSP: 0000:ffffc90002b87770 EFLAGS: 00010246\n  [ T1387] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n  [ T1387] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888101db30d0\n  [ T1387] RBP: 00000000fffffff4 R08: 0000000000000000 R09: 0000000000000000\n  [ T1387] R10: 0000000000000000 R11: ffffc90002b874d0 R12: 0000000000000001\n  [ T1387] R13: 0000000000058000 R14: ffff888105260c68 R15: ffff888105260828\n  [ T1387] FS:  00007f42e2ffd640(0000) GS:ffff888466b80000(0000) knlGS:0000000000000000\n  [ T1387] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [ T1387] CR2: 0000000000000000 CR3: 000000014acf0003 CR4: 0000000000770ee0\n  [ T1387] PKRU: 55555554\n  [ T1387] Call Trace:\n  [ T1387]  <TASK>\n  [ T1387]  cl_stream_prepare+0x10a\/0x120 [snd_sof_intel_hda_common 146addf995b9279ae7f509621078cccbe4f875e1]\n  [... snip ...]\n  [ T1387]  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01df5f7627f1624d6bb0b8c0870a569b32adfbf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09eca322d4118dc26570ca6100fa34e59e5a5143","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c307349fe060971625b856c92f0361b8ea9a120","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67f7bd9ff9079c1ee2de58e024fb582905c74c16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6094744e261083d3790c3def770ebf5060d383b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7fb0ae09009d076964afe4c1a2bde1ee2bd88a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49269","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.813","lastModified":"2025-02-26T07:01:03.813","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: isotp: sanitize CAN ID checks in isotp_bind()\n\nSyzbot created an environment that lead to a state machine status that\ncan not be reached with a compliant CAN ID address configuration.\nThe provided address information consisted of CAN ID 0x6000001 and 0xC28001\nwhich both boil down to 11 bit CAN IDs 0x001 in sending and receiving.\n\nSanitize the SFF\/EFF CAN ID values before performing the address checks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ea566422cbde9610c2734980d1286ab681bb40e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b4652fc71dcec043977a6def80ef5034c913615","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf522d741f5301223cc94b978eb1603c7590d65e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d72866a7f5326160d2a9d945a33eb6ef1883e25d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f343dbe82314ab457153c9afd970be4e9e553020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49270","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:03.907","lastModified":"2025-02-26T07:01:03.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm: fix use-after-free in dm_cleanup_zoned_dev()\n\ndm_cleanup_zoned_dev() uses queue, so it must be called\nbefore blk_cleanup_disk() starts its killing:\n\nblk_cleanup_disk->blk_cleanup_queue()->kobject_put()->blk_release_queue()->\n->...RCU...->blk_free_queue_rcu()->kmem_cache_free()\n\nOtherwise, RCU callback may be executed first and\ndm_cleanup_zoned_dev() will touch free'd memory:\n\n BUG: KASAN: use-after-free in dm_cleanup_zoned_dev+0x33\/0xd0\n Read of size 8 at addr ffff88805ac6e430 by task dmsetup\/681\n\n CPU: 4 PID: 681 Comm: dmsetup Not tainted 5.17.0-rc2+ #6\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04\/01\/2014\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x57\/0x7d\n  print_address_description.constprop.0+0x1f\/0x150\n  ? dm_cleanup_zoned_dev+0x33\/0xd0\n  kasan_report.cold+0x7f\/0x11b\n  ? dm_cleanup_zoned_dev+0x33\/0xd0\n  dm_cleanup_zoned_dev+0x33\/0xd0\n  __dm_destroy+0x26a\/0x400\n  ? dm_blk_ioctl+0x230\/0x230\n  ? up_write+0xd8\/0x270\n  dev_remove+0x156\/0x1d0\n  ctl_ioctl+0x269\/0x530\n  ? table_clear+0x140\/0x140\n  ? lock_release+0xb2\/0x750\n  ? remove_all+0x40\/0x40\n  ? rcu_read_lock_sched_held+0x12\/0x70\n  ? lock_downgrade+0x3c0\/0x3c0\n  ? rcu_read_lock_sched_held+0x12\/0x70\n  dm_ctl_ioctl+0xa\/0x10\n  __x64_sys_ioctl+0xb9\/0xf0\n  do_syscall_64+0x3b\/0x90\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n RIP: 0033:0x7fb6dfa95c27"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0987f00a76a17aa7213da492c00ed9e5a6210c73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43a043aed964659bc69ef81f266912b73c80d837","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/588b7f5df0cb64f281290c7672470c006abe7160","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdfe414ca28ddfd562c233fb27385cf820de03e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49271","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.000","lastModified":"2025-02-26T07:01:04.000","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: prevent bad output lengths in smb2_ioctl_query_info()\n\nWhen calling smb2_ioctl_query_info() with\nsmb_query_info::flags=PASSTHRU_FSCTL and\nsmb_query_info::output_buffer_length=0, the following would return\n0x10\n\n\tbuffer = memdup_user(arg + sizeof(struct smb_query_info),\n\t\t\t     qi.output_buffer_length);\n\tif (IS_ERR(buffer)) {\n\t\tkfree(vars);\n\t\treturn PTR_ERR(buffer);\n\t}\n\nrather than a valid pointer thus making IS_ERR() check fail.  This\nwould then cause a NULL ptr deference in @buffer when accessing it\nlater in smb2_ioctl_query_ioctl().  While at it, prevent having a\n@buffer smaller than 8 bytes to correctly handle SMB2_SET_INFO\nFileEndOfFileInformation requests when\nsmb_query_info::flags=PASSTHRU_SET_INFO.\n\nHere is a small C reproducer which triggers a NULL ptr in @buffer when\npassing an invalid smb_query_info::flags\n\n\t#include <stdio.h>\n\t#include <stdlib.h>\n\t#include <stdint.h>\n\t#include <unistd.h>\n\t#include <fcntl.h>\n\t#include <sys\/ioctl.h>\n\n\t#define die(s) perror(s), exit(1)\n\t#define QUERY_INFO 0xc018cf07\n\n\tint main(int argc, char *argv[])\n\t{\n\t\tint fd;\n\n\t\tif (argc < 2)\n\t\t\texit(1);\n\t\tfd = open(argv[1], O_RDONLY);\n\t\tif (fd == -1)\n\t\t\tdie(\"open\");\n\t\tif (ioctl(fd, QUERY_INFO, (uint32_t[]) { 0, 0, 0, 4, 0, 0}) == -1)\n\t\t\tdie(\"ioctl\");\n\t\tclose(fd);\n\t\treturn 0;\n\t}\n\n\tmount.cifs \/\/srv\/share \/mnt -o ...\n\tgcc repro.c && .\/a.out \/mnt\/f0\n\n\t[  114.138620] general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI\n\t[  114.139310] KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n\t[  114.139775] CPU: 2 PID: 995 Comm: a.out Not tainted 5.17.0-rc8 #1\n\t[  114.140148] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.15.0-0-g2dd4b9b-rebuilt.opensuse.org 04\/01\/2014\n\t[  114.140818] RIP: 0010:smb2_ioctl_query_info+0x206\/0x410 [cifs]\n\t[  114.141221] Code: 00 00 00 00 fc ff df 48 c1 ea 03 80 3c 02 00 0f 85 c8 01 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8b 7b 28 4c 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 9c 01 00 00 49 8b 3f e8 58 02 fb ff 48 8b 14 24\n\t[  114.142348] RSP: 0018:ffffc90000b47b00 EFLAGS: 00010256\n\t[  114.142692] RAX: dffffc0000000000 RBX: ffff888115503200 RCX: ffffffffa020580d\n\t[  114.143119] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffffa043a380\n\t[  114.143544] RBP: ffff888115503278 R08: 0000000000000001 R09: 0000000000000003\n\t[  114.143983] R10: fffffbfff4087470 R11: 0000000000000001 R12: ffff888115503288\n\t[  114.144424] R13: 00000000ffffffea R14: ffff888115503228 R15: 0000000000000000\n\t[  114.144852] FS:  00007f7aeabdf740(0000) GS:ffff888151600000(0000) knlGS:0000000000000000\n\t[  114.145338] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n\t[  114.145692] CR2: 00007f7aeacfdf5e CR3: 000000012000e000 CR4: 0000000000350ee0\n\t[  114.146131] Call Trace:\n\t[  114.146291]  <TASK>\n\t[  114.146432]  ? smb2_query_reparse_tag+0x890\/0x890 [cifs]\n\t[  114.146800]  ? cifs_mapchar+0x460\/0x460 [cifs]\n\t[  114.147121]  ? rcu_read_lock_sched_held+0x3f\/0x70\n\t[  114.147412]  ? cifs_strndup_to_utf16+0x15b\/0x250 [cifs]\n\t[  114.147775]  ? dentry_path_raw+0xa6\/0xf0\n\t[  114.148024]  ? cifs_convert_path_to_utf16+0x198\/0x220 [cifs]\n\t[  114.148413]  ? smb2_check_message+0x1080\/0x1080 [cifs]\n\t[  114.148766]  ? rcu_read_lock_sched_held+0x3f\/0x70\n\t[  114.149065]  cifs_ioctl+0x1577\/0x3320 [cifs]\n\t[  114.149371]  ? lock_downgrade+0x6f0\/0x6f0\n\t[  114.149631]  ? cifs_readdir+0x2e60\/0x2e60 [cifs]\n\t[  114.149956]  ? rcu_read_lock_sched_held+0x3f\/0x70\n\t[  114.150250]  ? __rseq_handle_notify_resume+0x80b\/0xbe0\n\t[  114.150562]  ? __up_read+0x192\/0x710\n\t[  114.150791]  ? __ia32_sys_rseq+0xf0\/0xf0\n\t[  114.151025]  ? __x64_sys_openat+0x11f\/0x1d0\n\t[  114.151296]  __x64_sys_ioctl+0x127\/0x190\n\t[  114.151549]  do_syscall_64+0x3b\/0x90\n\t[  114.151768]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\t[  114.152079] RIP: 0033:0x7f7aead043df\n\t[  114.152306] Code: 00 48 89 44 24 18 31 c0 48 8d 44 24 60 c7 04 24\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7529fbee10d82493c5cb109e51788bf74816d1c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9963ccea6087268e1275b992dca5d0dd4b938765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b92e358757b91c2827af112cae9af513f26a3f34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f143f8334fb9eb2f6c7c15b9da1472d9c965fd84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fadddfc1dc3c6f79b21cff4a7e9a6c40b84fbc53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49272","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.097","lastModified":"2025-02-26T07:01:04.097","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Fix potential AB\/BA lock with buffer_mutex and mmap_lock\n\nsyzbot caught a potential deadlock between the PCM\nruntime->buffer_mutex and the mm->mmap_lock.  It was brought by the\nrecent fix to cover the racy read\/write and other ioctls, and in that\ncommit, I overlooked a (hopefully only) corner case that may take the\nrevert lock, namely, the OSS mmap.  The OSS mmap operation\nexceptionally allows to re-configure the parameters inside the OSS\nmmap syscall, where mm->mmap_mutex is already held.  Meanwhile, the\ncopy_from\/to_user calls at read\/write operations also take the\nmm->mmap_lock internally, hence it may lead to a AB\/BA deadlock.\n\nA similar problem was already seen in the past and we fixed it with a\nrefcount (in commit b248371628aa).  The former fix covered only the\ncall paths with OSS read\/write and OSS ioctls, while we need to cover\nthe concurrent access via both ALSA and OSS APIs now.\n\nThis patch addresses the problem above by replacing the buffer_mutex\nlock in the read\/write operations with a refcount similar as we've\nused for OSS.  The new field, runtime->buffer_accessing, keeps the\nnumber of concurrent read\/write operations.  Unlike the former\nbuffer_mutex protection, this protects only around the\ncopy_from\/to_user() calls; the other codes are basically protected by\nthe PCM stream lock.  The refcount can be a negative, meaning blocked\nby the ioctls.  If a negative value is seen, the read\/write aborts\nwith -EBUSY.  In the ioctl side, OTOH, they check this refcount, too,\nand set to a negative value for blocking unless it's already being\naccessed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/40f4cffbe13a51faf136faf5f9ef6847782cd595","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7777744e92a0b30e3e0cce2758d911837011ebd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e9133607e1501c94881be35e118d8f84d96dcb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9017201e8d8c6d1472273361389ed431188584a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9661bf674d6a82b76e4ae424438a8ce1e3ed855d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abedf0d08c79d76da0d6fa0d5dbbc98871dcbc2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc55cfd5718c7c23e5524582e9fa70b4d10f2433","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be9813ad2fc8f0885f5ce6925af0d993ce5da4e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49273","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.190","lastModified":"2025-02-26T07:01:04.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: pl031: fix rtc features null pointer dereference\n\nWhen there is no interrupt line, rtc alarm feature is disabled.\n\nThe clearing of the alarm feature bit was being done prior to allocations\nof ldata->rtc device, resulting in a null pointer dereference.\n\nClear RTC_FEATURE_ALARM after the rtc device is allocated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b915703964f7e636961df04c540261dc55c6c70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd2722e411e8ab7e5ae41102f6925fa13dffdac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d274ce4a3dfd0b9a292667535578359b865765cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6af39f3da50c86367a71eb3cc674ade3ed244c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49274","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.280","lastModified":"2025-02-26T07:01:04.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: fix crash when mount with quota enabled\n\nThere is a reported crash when mounting ocfs2 with quota enabled.\n\n  RIP: 0010:ocfs2_qinfo_lock_res_init+0x44\/0x50 [ocfs2]\n  Call Trace:\n    ocfs2_local_read_info+0xb9\/0x6f0 [ocfs2]\n    dquot_load_quota_sb+0x216\/0x470\n    dquot_load_quota_inode+0x85\/0x100\n    ocfs2_enable_quotas+0xa0\/0x1c0 [ocfs2]\n    ocfs2_fill_super.cold+0xc8\/0x1bf [ocfs2]\n    mount_bdev+0x185\/0x1b0\n    legacy_get_tree+0x27\/0x40\n    vfs_get_tree+0x25\/0xb0\n    path_mount+0x465\/0xac0\n    __x64_sys_mount+0x103\/0x140\n\nIt is caused by when initializing dqi_gqlock, the corresponding dqi_type\nand dqi_sb are not properly initialized.\n\nThis issue is introduced by commit 6c85c2c72819, which wants to avoid\naccessing uninitialized variables in error cases.  So make global quota\ninfo properly initialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01931e1c4e3de5d777253acae64c0e8fd071a1dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c5312fdb1dcfdc1951b018669af88d5d6420b31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de19433423c7bedabbd4f9a25f7dbc62c5e78921","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eda31f77317647b9fbf889779ee1fb6907651865","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49275","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.370","lastModified":"2025-02-26T07:01:04.370","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_tx_handler(): fix use after free of skb\n\ncan_put_echo_skb() will clone skb then free the skb. Move the\ncan_put_echo_skb() for the m_can version 3.0.x directly before the\nstart of the xmit in hardware, similar to the 3.1.x branch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d90846e438ac22dc56fc49ec0b0d195831c5ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e8e79c416aae1de224c0f1860f2e3350fa171f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31417073493f302d26ab66b3abc098d43227b835","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4db7d6f481990dd179a9ee7126dc7aa31ea4fff3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7728d937ec403a1ceff9483023252d2cb8777f81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/869016a2938ac44f7b2fb7fc22c89edad99eb9b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3892a747ab16b1eb6593a19d29f62c3b3f020ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d93ed9aff64968f4cdad690712eb4f48ae537bde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f43e64076ff1b1dcb893fb77ad1204105f710a29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49276","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.470","lastModified":"2025-02-26T07:01:04.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: fix memory leak in jffs2_scan_medium\n\nIf an error is returned in jffs2_scan_eraseblock() and some memory\nhas been added to the jffs2_summary *s, we can observe the following\nkmemleak report:\n\n--------------------------------------------\nunreferenced object 0xffff88812b889c40 (size 64):\n  comm \"mount\", pid 692, jiffies 4294838325 (age 34.288s)\n  hex dump (first 32 bytes):\n    40 48 b5 14 81 88 ff ff 01 e0 31 00 00 00 50 00  @H........1...P.\n    00 00 01 00 00 00 01 00 00 00 02 00 00 00 09 08  ................\n  backtrace:\n    [<ffffffffae93a3a3>] __kmalloc+0x613\/0x910\n    [<ffffffffaf423b9c>] jffs2_sum_add_dirent_mem+0x5c\/0xa0\n    [<ffffffffb0f3afa8>] jffs2_scan_medium.cold+0x36e5\/0x4794\n    [<ffffffffb0f3dbe1>] jffs2_do_mount_fs.cold+0xa7\/0x2267\n    [<ffffffffaf40acf3>] jffs2_do_fill_super+0x383\/0xc30\n    [<ffffffffaf40c00a>] jffs2_fill_super+0x2ea\/0x4c0\n    [<ffffffffb0315d64>] mtd_get_sb+0x254\/0x400\n    [<ffffffffb0315f5f>] mtd_get_sb_by_nr+0x4f\/0xd0\n    [<ffffffffb0316478>] get_tree_mtd+0x498\/0x840\n    [<ffffffffaf40bd15>] jffs2_get_tree+0x25\/0x30\n    [<ffffffffae9f358d>] vfs_get_tree+0x8d\/0x2e0\n    [<ffffffffaea7a98f>] path_mount+0x50f\/0x1e50\n    [<ffffffffaea7c3d7>] do_mount+0x107\/0x130\n    [<ffffffffaea7c5c5>] __se_sys_mount+0x1c5\/0x2f0\n    [<ffffffffaea7c917>] __x64_sys_mount+0xc7\/0x160\n    [<ffffffffb10142f5>] do_syscall_64+0x45\/0x70\nunreferenced object 0xffff888114b54840 (size 32):\n  comm \"mount\", pid 692, jiffies 4294838325 (age 34.288s)\n  hex dump (first 32 bytes):\n    c0 75 b5 14 81 88 ff ff 02 e0 02 00 00 00 02 00  .u..............\n    00 00 84 00 00 00 44 00 00 00 6b 6b 6b 6b 6b a5  ......D...kkkkk.\n  backtrace:\n    [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584\/0x880\n    [<ffffffffaf423b04>] jffs2_sum_add_inode_mem+0x54\/0x90\n    [<ffffffffb0f3bd44>] jffs2_scan_medium.cold+0x4481\/0x4794\n    [...]\nunreferenced object 0xffff888114b57280 (size 32):\n  comm \"mount\", pid 692, jiffies 4294838393 (age 34.357s)\n  hex dump (first 32 bytes):\n    10 d5 6c 11 81 88 ff ff 08 e0 05 00 00 00 01 00  ..l.............\n    00 00 38 02 00 00 28 00 00 00 6b 6b 6b 6b 6b a5  ..8...(...kkkkk.\n  backtrace:\n    [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584\/0x880\n    [<ffffffffaf423c34>] jffs2_sum_add_xattr_mem+0x54\/0x90\n    [<ffffffffb0f3a24f>] jffs2_scan_medium.cold+0x298c\/0x4794\n    [...]\nunreferenced object 0xffff8881116cd510 (size 16):\n  comm \"mount\", pid 692, jiffies 4294838395 (age 34.355s)\n  hex dump (first 16 bytes):\n    00 00 00 00 00 00 00 00 09 e0 60 02 00 00 6b a5  ..........`...k.\n  backtrace:\n    [<ffffffffae93be24>] kmem_cache_alloc_trace+0x584\/0x880\n    [<ffffffffaf423cc4>] jffs2_sum_add_xref_mem+0x54\/0x90\n    [<ffffffffb0f3b2e3>] jffs2_scan_medium.cold+0x3a20\/0x4794\n    [...]\n--------------------------------------------\n\nTherefore, we should call jffs2_sum_reset_collected(s) on exit to\nrelease the memory added in s. In addition, a new tag \"out_buf\" is\nadded to prevent the NULL pointer reference caused by s being NULL.\n(thanks to Zhang Yi for this analysis)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/455f4a23490bfcbedc8e5c245c463a59b19e5ddd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51dbb5e36d59f62e34d462b801c1068248149cfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52ba0ab4f0a606f02a6163493378989faa1ec10a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82462324bf35b6b553400af1c1aa265069cee28f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b0c69182f09b70779817af4dcf89780955d5c4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cdd3128874f5fe759e2c4e1360ab7fb96a8d1df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26bbc0c122cad038831f226a4cb4de702225e16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b36bccb04e14cc0c1e2d0e92d477fe220314fad6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e711913463af916d777a4873068f415f1fe2ad33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49277","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.567","lastModified":"2025-02-26T07:01:04.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: fix memory leak in jffs2_do_mount_fs\n\nIf jffs2_build_filesystem() in jffs2_do_mount_fs() returns an error,\nwe can observe the following kmemleak report:\n\n--------------------------------------------\nunreferenced object 0xffff88811b25a640 (size 64):\n  comm \"mount\", pid 691, jiffies 4294957728 (age 71.952s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffffa493be24>] kmem_cache_alloc_trace+0x584\/0x880\n    [<ffffffffa5423a06>] jffs2_sum_init+0x86\/0x130\n    [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798\/0xac0\n    [<ffffffffa540acf3>] jffs2_do_fill_super+0x383\/0xc30\n    [<ffffffffa540c00a>] jffs2_fill_super+0x2ea\/0x4c0\n    [...]\nunreferenced object 0xffff88812c760000 (size 65536):\n  comm \"mount\", pid 691, jiffies 4294957728 (age 71.952s)\n  hex dump (first 32 bytes):\n    bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................\n    bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................\n  backtrace:\n    [<ffffffffa493a449>] __kmalloc+0x6b9\/0x910\n    [<ffffffffa5423a57>] jffs2_sum_init+0xd7\/0x130\n    [<ffffffffa5400e58>] jffs2_do_mount_fs+0x798\/0xac0\n    [<ffffffffa540acf3>] jffs2_do_fill_super+0x383\/0xc30\n    [<ffffffffa540c00a>] jffs2_fill_super+0x2ea\/0x4c0\n    [...]\n--------------------------------------------\n\nThis is because the resources allocated in jffs2_sum_init() are not\nreleased. Call jffs2_sum_exit() to release these resources to solve\nthe problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0978e9af4559a171ac7a74a1b3ef21804b0a0fa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a9d8184458562e6bf2f40d0e677fc85e2dd3834","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4392e8aeebc5a4f8073620bccba7de1b1f6d7c88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f34310d1376ca5b2ed798258def2c2ab3cc6699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/607d3aab7349f18e0d9dba4100d09d16fe27caca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a0f6610c7daedd2eace430beeb08a8b7ac80699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c94128470e6fe53d9bd9d16d2d3271813f9d37af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d051cef784de4d54835f6b6836d98a8f6935772c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbe0d0521eaa6a3d235517319266c539bb5c5112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49278","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.660","lastModified":"2025-02-26T07:01:04.660","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: Fix count check in rproc_coredump_write()\n\nCheck count for 0, to avoid a potential underflow. Make the check the\nsame as the one in rproc_recovery_write()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11572dad9fbadbd9269a2550f7e236b5b8c2d80c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34afac3c75fa08d6fabbab4c93f0a90618afaaa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8c3e53517985d69040a1b36a269e85f99cf0cea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b97b305656a7013690e7b6e310f0e827e0bbff90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f89672cc3681952f2d06314981a6b45f8b0045d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49279","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.750","lastModified":"2025-02-26T07:01:04.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: prevent integer overflow on 32 bit systems\n\nOn a 32 bit system, the \"len * sizeof(*p)\" operation can have an\ninteger overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23a9dbbe0faf124fc4c139615633b9d12a3a89ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/303cd6173dce0a28d26526c77814eb90a41bd898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a2789e8ccb4a3e2a631f6817a2d3bb98b8c4fd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79b1c54fc6ce09ee0d5fe088bb3de26ae2150e3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7af164fa2f1abc577d357d22d83a2f3490875d7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce1aa09cc14ed625104acc2d487bd92b9a88efe2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4195d27306ea468a6dc3a27af6f586709951229","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49280","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.840","lastModified":"2025-02-26T07:01:04.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: prevent underflow in nfssvc_decode_writeargs()\n\nSmatch complains:\n\n\tfs\/nfsd\/nfsxdr.c:341 nfssvc_decode_writeargs()\n\twarn: no lower bound on 'args->len'\n\nChange the type to unsigned to prevent this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/184416d4b98509fb4c3d8fc3d6dc1437896cc159","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a33e0de60feda402d05ac8a6cf409c19ea3e0b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2764af8ce0bf03cc43ee4a11897cab96bde6caae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/413d8fefafe531a9442bb623e3fe292a38f88d65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/438068f4912183a59fcb6b7496a06437f7fd4e2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/614a61e1592051cc42d3c38f899c9f7bdaad8a1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65e21cc042f4c1518c8c55283f53bc725b78419d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85259340fc9bd54e3d567b41b881ecb4d0055da1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f0f048c1bfa7867d565a95fd8c28f4484ba1043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49281","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:04.967","lastModified":"2025-02-26T07:01:04.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix handlecache and multiuser\n\nIn multiuser each individual user has their own tcon structure for the\nshare and thus their own handle for a cached directory.\nWhen we umount such a share we much make sure to release the pinned down dentry\nfor each such tcon and not just the master tcon.\n\nOtherwise we will get nasty warnings on umount that dentries are still in use:\n[ 3459.590047] BUG: Dentry 00000000115c6f41{i=12000000019d95,n=\/}  still in use\\\n (2) [unmount of cifs cifs]\n...\n[ 3459.590492] Call Trace:\n[ 3459.590500]  d_walk+0x61\/0x2a0\n[ 3459.590518]  ? shrink_lock_dentry.part.0+0xe0\/0xe0\n[ 3459.590526]  shrink_dcache_for_umount+0x49\/0x110\n[ 3459.590535]  generic_shutdown_super+0x1a\/0x110\n[ 3459.590542]  kill_anon_super+0x14\/0x30\n[ 3459.590549]  cifs_kill_sb+0xf5\/0x104 [cifs]\n[ 3459.590773]  deactivate_locked_super+0x36\/0xa0\n[ 3459.590782]  cleanup_mnt+0x131\/0x190\n[ 3459.590789]  task_work_run+0x5c\/0x90\n[ 3459.590798]  exit_to_user_mode_loop+0x151\/0x160\n[ 3459.590809]  exit_to_user_mode_prepare+0x83\/0xd0\n[ 3459.590818]  syscall_exit_to_user_mode+0x12\/0x30\n[ 3459.590828]  do_syscall_64+0x48\/0x90\n[ 3459.590833]  entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fafbc198613823943c106d1ec9b516da692059f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47178c7722ac528ea08aa82c3ef9ffa178962d7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e71f6a3a1d5c826a30384fec587ca7503ef6bde5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffa631c4bff59dde59b598011f570e27dfba3515","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49282","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.073","lastModified":"2025-02-26T07:01:05.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: quota: fix loop condition at f2fs_quota_sync()\n\ncnt should be passed to sb_has_quota_active() instead of type to check\nactive quota properly.\n\nMoreover, when the type is -1, the compiler with enough inline knowledge\ncan discard sb_has_quota_active() check altogether, causing a NULL pointer\ndereference at the following inode_lock(dqopt->files[cnt]):\n\n[    2.796010] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[    2.796024] Mem abort info:\n[    2.796025]   ESR = 0x96000005\n[    2.796028]   EC = 0x25: DABT (current EL), IL = 32 bits\n[    2.796029]   SET = 0, FnV = 0\n[    2.796031]   EA = 0, S1PTW = 0\n[    2.796032] Data abort info:\n[    2.796034]   ISV = 0, ISS = 0x00000005\n[    2.796035]   CM = 0, WnR = 0\n[    2.796046] user pgtable: 4k pages, 39-bit VAs, pgdp=00000003370d1000\n[    2.796048] [00000000000000a0] pgd=0000000000000000, pud=0000000000000000\n[    2.796051] Internal error: Oops: 96000005 [#1] PREEMPT SMP\n[    2.796056] CPU: 7 PID: 640 Comm: f2fs_ckpt-259:7 Tainted: G S                5.4.179-arter97-r8-64666-g2f16e087f9d8 #1\n[    2.796057] Hardware name: Qualcomm Technologies, Inc. Lahaina MTP lemonadep (DT)\n[    2.796059] pstate: 80c00005 (Nzcv daif +PAN +UAO)\n[    2.796065] pc : down_write+0x28\/0x70\n[    2.796070] lr : f2fs_quota_sync+0x100\/0x294\n[    2.796071] sp : ffffffa3f48ffc30\n[    2.796073] x29: ffffffa3f48ffc30 x28: 0000000000000000\n[    2.796075] x27: ffffffa3f6d718b8 x26: ffffffa415fe9d80\n[    2.796077] x25: ffffffa3f7290048 x24: 0000000000000001\n[    2.796078] x23: 0000000000000000 x22: ffffffa3f7290000\n[    2.796080] x21: ffffffa3f72904a0 x20: ffffffa3f7290110\n[    2.796081] x19: ffffffa3f77a9800 x18: ffffffc020aae038\n[    2.796083] x17: ffffffa40e38e040 x16: ffffffa40e38e6d0\n[    2.796085] x15: ffffffa40e38e6cc x14: ffffffa40e38e6d0\n[    2.796086] x13: 00000000000004f6 x12: 00162c44ff493000\n[    2.796088] x11: 0000000000000400 x10: ffffffa40e38c948\n[    2.796090] x9 : 0000000000000000 x8 : 00000000000000a0\n[    2.796091] x7 : 0000000000000000 x6 : 0000d1060f00002a\n[    2.796093] x5 : ffffffa3f48ff718 x4 : 000000000000000d\n[    2.796094] x3 : 00000000060c0000 x2 : 0000000000000001\n[    2.796096] x1 : 0000000000000000 x0 : 00000000000000a0\n[    2.796098] Call trace:\n[    2.796100]  down_write+0x28\/0x70\n[    2.796102]  f2fs_quota_sync+0x100\/0x294\n[    2.796104]  block_operations+0x120\/0x204\n[    2.796106]  f2fs_write_checkpoint+0x11c\/0x520\n[    2.796107]  __checkpoint_and_complete_reqs+0x7c\/0xd34\n[    2.796109]  issue_checkpoint_thread+0x6c\/0xb8\n[    2.796112]  kthread+0x138\/0x414\n[    2.796114]  ret_from_fork+0x10\/0x18\n[    2.796117] Code: aa0803e0 aa1f03e1 52800022 aa0103e9 (c8e97d02)\n[    2.796120] ---[ end trace 96e942e8eb6a0b53 ]---\n[    2.800116] Kernel panic - not syncing: Fatal exception\n[    2.800120] SMP: stopping secondary CPUs"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/680af5b824a52faa819167628665804a14f0e0df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/724469814d805820cd37ea789769dba94123ff1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e58ee6bd939b773675240f5d0f5b88a367c037c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9ebf1e8fc50b6a9336f9aea1082d7845e568d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1d5946d47c0827bae39e1537959ce8d6f0224c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9156db0987f1b426015d56505e2c58dee70c90d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49283","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.167","lastModified":"2025-02-26T07:01:05.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: sysfb: fix platform-device leak in error path\n\nMake sure to free the platform device also in the unlikely event that\nregistration fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/202c08914ba50dd324e42d5ad99535a89f242560","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3e38f939ab4d0d86f56bff3362c3f88c4b2ad32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb7fcbe80a013dc883181dc818c407d38558f76c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fed4df558b8cdb6f3beea38a7c977f118f082b0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49284","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.260","lastModified":"2025-02-26T07:01:05.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: syscfg: Fix memleak on registration failure in cscfg_create_device\n\ndevice_register() calls device_initialize(),\naccording to doc of device_initialize:\n\n    Use put_device() to give up your reference instead of freeing\n    * @dev directly once you have called this function.\n\nTo prevent potential memleak, use put_device() for error handling."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/412225b32986d5b11c3c1ad9234c50a3f5c52c76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a529af1f5a5c096f3e18f0d5a32cfcc3d82df1ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c61e2fc87f24cae4701f352fe9ecd4c5c143106c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfa5dbcdd7aece76f3415284569f2f384aff0253","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49285","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.360","lastModified":"2025-02-26T07:01:05.360","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: accel: mma8452: use the correct logic to get mma8452_data\n\nThe original logic to get mma8452_data is wrong, the *dev point to\nthe device belong to iio_dev. we can't use this dev to find the\ncorrect i2c_client. The original logic happen to work because it\nfinally use dev->driver_data to get iio_dev. Here use the API\nto_i2c_client() is wrong and make reader confuse. To correct the\nlogic, it should be like this\n\n  struct mma8452_data *data = iio_priv(dev_get_drvdata(dev));\n\nBut after commit 8b7651f25962 (\"iio: iio_device_alloc(): Remove\nunnecessary self drvdata\"), the upper logic also can't work.\nWhen try to show the avialable scale in userspace, will meet kernel\ndump, kernel handle NULL pointer dereference.\n\nSo use dev_to_iio_dev() to correct the logic.\n\nDual fixes tags as the second reflects when the bug was exposed, whilst\nthe first reflects when the original bug was introduced."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c0bb583a4444cce224e8661090cbffc98e2fe07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c87b7b12f48db86ac9909894f4dc0107d7df6375","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2d9ebdbff79d87d27652578e6d1638ad3b5f3bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49286","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.453","lastModified":"2025-02-26T07:01:05.453","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: use try_get_ops() in tpm-space.c\n\nAs part of the series conversion to remove nested TPM operations:\n\nhttps:\/\/lore.kernel.org\/all\/20190205224723.19671-1-jarkko.sakkinen@linux.intel.com\/\n\nexposure of the chip->tpm_mutex was removed from much of the upper\nlevel code.  In this conversion, tpm2_del_space() was missed.  This\ndidn't matter much because it's usually called closely after a\nconverted operation, so there's only a very tiny race window where the\nchip can be removed before the space flushing is done which causes a\nNULL deref on the mutex.  However, there are reports of this window\nbeing hit in practice, so fix this by converting tpm2_del_space() to\nuse tpm_try_get_ops(), which performs all the teardown checks before\nacquring the mutex."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/476ddd23f818fb94cf86fb5617f3bb9a7c92113d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b1d2561a03e534064b51c50c774657833d3d2cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95193d12f10a8a088843b25e0f5fe1d83ec6b079","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba84f9a48366dcc3cdef978599433efe101dd5bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eda1662cce964c8a65bb86321f8d9cfa6e9ceaab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5abce6b2bb5cb3d628aaa63fa821da8c4600f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49287","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.557","lastModified":"2025-02-26T07:01:05.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: fix reference counting for struct tpm_chip\n\nThe following sequence of operations results in a refcount warning:\n\n1. Open device \/dev\/tpmrm.\n2. Remove module tpm_tis_spi.\n3. Write a TPM command to the file descriptor opened at step 1.\n\n------------[ cut here ]------------\nWARNING: CPU: 3 PID: 1161 at lib\/refcount.c:25 kobject_get+0xa0\/0xa4\nrefcount_t: addition on 0; use-after-free.\nModules linked in: tpm_tis_spi tpm_tis_core tpm mdio_bcm_unimac brcmfmac\nsha256_generic libsha256 sha256_arm hci_uart btbcm bluetooth cfg80211 vc4\nbrcmutil ecdh_generic ecc snd_soc_core crc32_arm_ce libaes\nraspberrypi_hwmon ac97_bus snd_pcm_dmaengine bcm2711_thermal snd_pcm\nsnd_timer genet snd phy_generic soundcore [last unloaded: spi_bcm2835]\nCPU: 3 PID: 1161 Comm: hold_open Not tainted 5.10.0ls-main-dirty #2\nHardware name: BCM2711\n[<c0410c3c>] (unwind_backtrace) from [<c040b580>] (show_stack+0x10\/0x14)\n[<c040b580>] (show_stack) from [<c1092174>] (dump_stack+0xc4\/0xd8)\n[<c1092174>] (dump_stack) from [<c0445a30>] (__warn+0x104\/0x108)\n[<c0445a30>] (__warn) from [<c0445aa8>] (warn_slowpath_fmt+0x74\/0xb8)\n[<c0445aa8>] (warn_slowpath_fmt) from [<c08435d0>] (kobject_get+0xa0\/0xa4)\n[<c08435d0>] (kobject_get) from [<bf0a715c>] (tpm_try_get_ops+0x14\/0x54 [tpm])\n[<bf0a715c>] (tpm_try_get_ops [tpm]) from [<bf0a7d6c>] (tpm_common_write+0x38\/0x60 [tpm])\n[<bf0a7d6c>] (tpm_common_write [tpm]) from [<c05a7ac0>] (vfs_write+0xc4\/0x3c0)\n[<c05a7ac0>] (vfs_write) from [<c05a7ee4>] (ksys_write+0x58\/0xcc)\n[<c05a7ee4>] (ksys_write) from [<c04001a0>] (ret_fast_syscall+0x0\/0x4c)\nException stack(0xc226bfa8 to 0xc226bff0)\nbfa0:                   00000000 000105b4 00000003 beafe664 00000014 00000000\nbfc0: 00000000 000105b4 000103f8 00000004 00000000 00000000 b6f9c000 beafe684\nbfe0: 0000006c beafe648 0001056c b6eb6944\n---[ end trace d4b8409def9b8b1f ]---\n\nThe reason for this warning is the attempt to get the chip->dev reference\nin tpm_common_write() although the reference counter is already zero.\n\nSince commit 8979b02aaf1d (\"tpm: Fix reference count to main device\") the\nextra reference used to prevent a premature zero counter is never taken,\nbecause the required TPM_CHIP_FLAG_TPM2 flag is never set.\n\nFix this by moving the TPM 2 character device handling from\ntpm_chip_alloc() to tpm_add_char_device() which is called at a later point\nin time when the flag has been set in case of TPM2.\n\nCommit fdc915f7f719 (\"tpm: expose spaces via a device link \/dev\/tpmrm<n>\")\nalready introduced function tpm_devs_release() to release the extra\nreference but did not implement the required put on chip->devs that results\nin the call of this function.\n\nFix this by putting chip->devs in tpm_chip_unregister().\n\nFinally move the new implementation for the TPM 2 handling into a new\nfunction to avoid multiple checks for the TPM_CHIP_FLAG_TPM2 flag in the\ngood case and error cases."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/290e05f346d1829e849662c97e42d5ad984f5258","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f928c0d5c02dbab49e8c19d98725c822f6fc409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/473a66f99cb8173c14138c5a5c69bfad04e8f9ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/662893b4f6bd466ff9e1cd454c44c26d32d554fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e7baf84149fb43950631415de231b3a41915aa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e0438f83dc769465ee663bb5dcf8cc154940712","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a27ed2f3695baf15f9b34d2d7a1f9fc105539a81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb64bd038beacb4331fe464a36c8b5481e8f51e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49288","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.657","lastModified":"2025-02-26T07:01:05.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Fix races among concurrent prealloc proc writes\n\nWe have no protection against concurrent PCM buffer preallocation\nchanges via proc files, and it may potentially lead to UAF or some\nweird problem.  This patch applies the PCM open_mutex to the proc\nwrite operation for avoiding the racy proc writes and the PCM stream\nopen (and further operations)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37b12c16beb6f6c1c3c678c1aacbc46525c250f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51fce708ab8986a9879ee5da946a2cc120f1036d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ed8f8e3c4e59d0396b9ccf2e639711e24295bb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69534c48ba8ce552ce383b3dfdb271ffe51820c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a21d2f323b5a978dedf9ff1d50f101f85e39b3f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b560d670c87d7d40b3cf6949246fa4c7aa65a00a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e14dca613e0a6ddc2bf6e360f16936a9f865205b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7786c445bb67a9a6e64f66ebd6b7215b153ff7d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49289","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.757","lastModified":"2025-02-26T07:01:05.757","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nuaccess: fix integer overflow on access_ok()\n\nThree architectures check the end of a user access against the\naddress limit without taking a possible overflow into account.\nPassing a negative length or another overflow in here returns\nsuccess when it should not.\n\nUse the most common correct implementation here, which optimizes\nfor a constant 'size' argument, and turns the common case into a\nsingle comparison."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/222ca305c9fd39e5ed8104da25c09b2b79a516a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99801e2f457824955da4aadaa035913a6dede03a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1ad747fc1a0e06d1bf26b996ee8a56b5c8d02d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e65d28d4e9bf90a35ba79c06661a572a38391dec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49290","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.853","lastModified":"2025-02-26T07:01:05.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix potential double free on mesh join\n\nWhile commit 6a01afcf8468 (\"mac80211: mesh: Free ie data when leaving\nmesh\") fixed a memory leak on mesh leave \/ teardown it introduced a\npotential memory corruption caused by a double free when rejoining the\nmesh:\n\n  ieee80211_leave_mesh()\n  -> kfree(sdata->u.mesh.ie);\n  ...\n  ieee80211_join_mesh()\n  -> copy_mesh_setup()\n     -> old_ie = ifmsh->ie;\n     -> kfree(old_ie);\n\nThis double free \/ kernel panics can be reproduced by using wpa_supplicant\nwith an encrypted mesh (if set up without encryption via \"iw\" then\nifmsh->ie is always NULL, which avoids this issue). And then calling:\n\n  $ iw dev mesh0 mesh leave\n  $ iw dev mesh0 mesh join my-mesh\n\nNote that typically these commands are not used \/ working when using\nwpa_supplicant. And it seems that wpa_supplicant or wpa_cli are going\nthrough a NETDEV_DOWN\/NETDEV_UP cycle between a mesh leave and mesh join\nwhere the NETDEV_UP resets the mesh.ie to NULL via a memcpy of\ndefault_mesh_setup in cfg80211_netdev_notifier_call, which then avoids\nthe memory corruption, too.\n\nThe issue was first observed in an application which was not using\nwpa_supplicant but \"Senf\" instead, which implements its own calls to\nnl80211.\n\nFixing the issue by removing the kfree()'ing of the mesh IE in the mesh\njoin function and leaving it solely up to the mesh leave to free the\nmesh IE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12e407a8ef17623823fd0c066fbd7f103953d28d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/273ebddc5fda2967492cb0b6cdd7d81cfb821b76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bbd0000d012f92aec423b224784fbf0f7bf40f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46bb87d40683337757a2f902fcd4244b32bb4e86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a2d4496e15ea5bb5c8e83b94ca8ca7fb045e7d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/582d8c60c0c053684f7138875e8150d5749ffc17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d3ff9542a40ce034416bca03864709540a36016","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/615716af8644813355e014314a0bc1e961250f5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1d9c3628ef0a0ca197595d0f9e01cd3b5dda186","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49291","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:05.950","lastModified":"2025-02-26T07:01:05.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Fix races among concurrent hw_params and hw_free calls\n\nCurrently we have neither proper check nor protection against the\nconcurrent calls of PCM hw_params and hw_free ioctls, which may result\nin a UAF.  Since the existing PCM stream lock can't be used for\nprotecting the whole ioctl operations, we need a new mutex to protect\nthose racy calls.\n\nThis patch introduced a new mutex, runtime->buffer_mutex, and applies\nit to both hw_params and hw_free ioctl code paths.  Along with it, the\nboth functions are slightly modified (the mmap_count check is moved\ninto the state-check block) for code simplicity."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0090c13cbbdffd7da079ac56f80373a9a1be0bf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f6947f5f5208f6ebd4d76a82a4757e2839a23f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bbf82d9f961414d6c76a08f7f843ea068e0ab7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33061d0fba51d2bf70a2ef9645f703c33fe8e438","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92ee3c60ec9fe64404dc035e7c41277d74aa26cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cb6c40a6ebe4a0cfc9d6a181958211682cffea9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a42aa926843acca96c0dfbde2e835b8137f2f092","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbeb492694ce0441053de57699e1e2b7bc148a69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49292","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.047","lastModified":"2025-02-26T07:01:06.047","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: oss: Fix PCM OSS buffer allocation overflow\n\nWe've got syzbot reports hitting INT_MAX overflow at vmalloc()\nallocation that is called from snd_pcm_plug_alloc().  Although we\napply the restrictions to input parameters, it's based only on the\nhw_params of the underlying PCM device.  Since the PCM OSS layer\nallocates a temporary buffer for the data conversion, the size may\nbecome unexpectedly large when more channels or higher rates is given;\nin the reported case, it went over INT_MAX, hence it hits WARN_ON().\n\nThis patch is an attempt to avoid such an overflow and an allocation\nfor too large buffers.  First off, it adds the limit of 1MB as the\nupper bound for period bytes.  This must be large enough for all use\ncases, and we really don't want to handle a larger temporary buffer\nthan this size.  The size check is performed at two places, where the\noriginal period bytes is calculated and where the plugin buffer size\nis calculated.\n\nIn addition, the driver uses array_size() and array3_size() for\nmultiplications to catch overflows for the converted period size and\nbuffer bytes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c4190b41a69990666b4000999e27f8f1b2a426b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ce74ff7059341d8b2f4d01c3383491df63d1898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a40cbf3579a8e14849ba7ce46309c1992658d2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a63af1baf0a5e11827db60e3127f87e437cab6e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e74a069c6a7bb505f3ade141dddf85f4b0b5145a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efb6402c3c4a7c26d97c92d70186424097b6e366","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb08bf99195a87c798bc8ae1357337a981faeade","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49293","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.140","lastModified":"2025-02-26T07:01:06.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: initialize registers in nft_do_chain()\n\nInitialize registers to avoid stack leak into userspace."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06f0ff82c70241a766a811ae1acf07d6e2734dcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c74374c2e88c7b7992bf808d9f9391f7452f9d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c905f6740a365464e91467aa50916555b28213d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d28522acd1c4415c85f6b33463713a268f68965","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f24c76dd0ce53d0fa3a0bfb9aeea507c769485","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88791b79a1eb2ba94e95d039243e28433583a67b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3cc32863b175168283cb0a5fde08de6a1e27df9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd03640529204ef4b8189fbdea08217d8d98271f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fafb904156fbb8f1dd34970cd5223e00b47c33be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49294","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.237","lastModified":"2025-02-26T07:01:06.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Check if modulo is 0 before dividing.\n\n[How & Why]\nIf a value of 0 is read, then this will cause a divide-by-0 panic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07efce8269a038c37814eb656b4de14aa3015fc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/10ef82d6e0af5536ec64770c07f6bbabfdd6977c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49947b906a6bd9668eaf4f9cf691973c25c26955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96725758eff7b3805e4e94d1443a100757412720","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49295","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.333","lastModified":"2025-02-26T07:01:06.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: call genl_unregister_family() first in nbd_cleanup()\n\nOtherwise there may be race between module removal and the handling of\nnetlink command, which can lead to the oops as shown below:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000098\n  Oops: 0002 [#1] SMP PTI\n  CPU: 1 PID: 31299 Comm: nbd-client Tainted: G            E     5.14.0-rc4\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n  RIP: 0010:down_write+0x1a\/0x50\n  Call Trace:\n   start_creating+0x89\/0x130\n   debugfs_create_dir+0x1b\/0x130\n   nbd_start_device+0x13d\/0x390 [nbd]\n   nbd_genl_connect+0x42f\/0x748 [nbd]\n   genl_family_rcv_msg_doit.isra.0+0xec\/0x150\n   genl_rcv_msg+0xe5\/0x1e0\n   netlink_rcv_skb+0x55\/0x100\n   genl_rcv+0x29\/0x40\n   netlink_unicast+0x1a8\/0x250\n   netlink_sendmsg+0x21b\/0x430\n   ____sys_sendmsg+0x2a4\/0x2d0\n   ___sys_sendmsg+0x81\/0xc0\n   __sys_sendmsg+0x62\/0xb0\n   __x64_sys_sendmsg+0x1f\/0x30\n   do_syscall_64+0x3b\/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n  Modules linked in: nbd(E-)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/013a79f1b5c89290e2e97f1ebf14b14e0cf5fe5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/06c4da89c24e7023ea448cadf8e9daf06a0aae6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1be608e1ee1f222464b2856bda9b85ab5184a33e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d5da1ffba3388c2ae2e6c598855a4d887d3bf79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f505bbb8063fd3a238a4239d2d8c165e5279f6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a1435c862ea09b06be7acda325128dc08458e25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0868f6e728c3c28bef0e8bee89d2daf86a8bbca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbeafa7a79d08ecdb55f8f1d41a11323d0f709db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49296","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.433","lastModified":"2025-02-26T07:01:06.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix possible deadlock when holding Fwb to get inline_data\n\n1, mount with wsync.\n2, create a file with O_RDWR, and the request was sent to mds.0:\n\n   ceph_atomic_open()-->\n     ceph_mdsc_do_request(openc)\n     finish_open(file, dentry, ceph_open)-->\n       ceph_open()-->\n         ceph_init_file()-->\n           ceph_init_file_info()-->\n             ceph_uninline_data()-->\n             {\n               ...\n               if (inline_version == 1 || \/* initial version, no data *\/\n                   inline_version == CEPH_INLINE_NONE)\n                     goto out_unlock;\n               ...\n             }\n\nThe inline_version will be 1, which is the initial version for the\nnew create file. And here the ci->i_inline_version will keep with 1,\nit's buggy.\n\n3, buffer write to the file immediately:\n\n   ceph_write_iter()-->\n     ceph_get_caps(file, need=Fw, want=Fb, ...);\n     generic_perform_write()-->\n       a_ops->write_begin()-->\n         ceph_write_begin()-->\n           netfs_write_begin()-->\n             netfs_begin_read()-->\n               netfs_rreq_submit_slice()-->\n                 netfs_read_from_server()-->\n                   rreq->netfs_ops->issue_read()-->\n                     ceph_netfs_issue_read()-->\n                     {\n                       ...\n                       if (ci->i_inline_version != CEPH_INLINE_NONE &&\n                           ceph_netfs_issue_op_inline(subreq))\n                         return;\n                       ...\n                     }\n     ceph_put_cap_refs(ci, Fwb);\n\nThe ceph_netfs_issue_op_inline() will send a getattr(Fsr) request to\nmds.1.\n\n4, then the mds.1 will request the rd lock for CInode::filelock from\nthe auth mds.0, the mds.0 will do the CInode::filelock state transation\nfrom excl --> sync, but it need to revoke the Fxwb caps back from the\nclients.\n\nWhile the kernel client has aleady held the Fwb caps and waiting for\nthe getattr(Fsr).\n\nIt's deadlock!\n\nURL: https:\/\/tracker.ceph.com\/issues\/55377"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/292b7a7275ce535a1abfa4dd0b2e586162aaae1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/825978fd6a0defc3c29d8a38b6cea76a0938d21e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49297","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.527","lastModified":"2025-02-26T07:01:06.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix io hung while disconnecting device\n\nIn our tests, \"qemu-nbd\" triggers a io hung:\n\nINFO: task qemu-nbd:11445 blocked for more than 368 seconds.\n      Not tainted 5.18.0-rc3-next-20220422-00003-g2176915513ca #884\n\"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\ntask:qemu-nbd        state:D stack:    0 pid:11445 ppid:     1 flags:0x00000000\nCall Trace:\n <TASK>\n __schedule+0x480\/0x1050\n ? _raw_spin_lock_irqsave+0x3e\/0xb0\n schedule+0x9c\/0x1b0\n blk_mq_freeze_queue_wait+0x9d\/0xf0\n ? ipi_rseq+0x70\/0x70\n blk_mq_freeze_queue+0x2b\/0x40\n nbd_add_socket+0x6b\/0x270 [nbd]\n nbd_ioctl+0x383\/0x510 [nbd]\n blkdev_ioctl+0x18e\/0x3e0\n __x64_sys_ioctl+0xac\/0x120\n do_syscall_64+0x35\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\nRIP: 0033:0x7fd8ff706577\nRSP: 002b:00007fd8fcdfebf8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 0000000040000000 RCX: 00007fd8ff706577\nRDX: 000000000000000d RSI: 000000000000ab00 RDI: 000000000000000f\nRBP: 000000000000000f R08: 000000000000fbe8 R09: 000055fe497c62b0\nR10: 00000002aff20000 R11: 0000000000000246 R12: 000000000000006d\nR13: 0000000000000000 R14: 00007ffe82dc5e70 R15: 00007fd8fcdff9c0\n\n\"qemu-ndb -d\" will call ioctl 'NBD_DISCONNECT' first, however, following\nmessage was found:\n\nblock nbd0: Send disconnect failed -32\n\nWhich indicate that something is wrong with the server. Then,\n\"qemu-nbd -d\" will call ioctl 'NBD_CLEAR_SOCK', however ioctl can't clear\nrequests after commit 2516ab1543fd(\"nbd: only clear the queue on device\nteardown\"). And in the meantime, request can't complete through timeout\nbecause nbd_xmit_timeout() will always return 'BLK_EH_RESET_TIMER', which\nmeans such request will never be completed in this situation.\n\nNow that the flag 'NBD_CMD_INFLIGHT' can make sure requests won't\ncomplete multiple times, switch back to call nbd_clear_sock() in\nnbd_clear_sock_ioctl(), so that inflight requests can be cleared."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09dadb5985023e27d4740ebd17e6fea4640110e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/141318e62db87105b0103fccc59c9c5940da248d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54b06dc2a206b4d67349bb56b92d4bd32700b7b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62d227f67a8c25d5e16f40e5290607f9306d2188","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67e403136a0e1a55fef6a05f103a3979a39ad3fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69893d6d7f5c10d8306c1b5fc64b71efc91aa6cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4ba982bd5084fa659ef518aaf159e4dab02ecda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f72df77600a43e59b3189e53b47f8685739867d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49298","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.630","lastModified":"2025-02-26T07:01:06.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: rtl8712: fix uninit-value in r871xu_drv_init()\n\nWhen 'tmpU1b' returns from r8712_read8(padapter, EE_9346CR) is 0,\n'mac[6]' will not be initialized.\n\nBUG: KMSAN: uninit-value in r871xu_drv_init+0x2d54\/0x3070 drivers\/staging\/rtl8712\/usb_intf.c:541\n r871xu_drv_init+0x2d54\/0x3070 drivers\/staging\/rtl8712\/usb_intf.c:541\n usb_probe_interface+0xf19\/0x1600 drivers\/usb\/core\/driver.c:396\n really_probe+0x653\/0x14b0 drivers\/base\/dd.c:596\n __driver_probe_device+0x3e9\/0x530 drivers\/base\/dd.c:752\n driver_probe_device drivers\/base\/dd.c:782 [inline]\n __device_attach_driver+0x79f\/0x1120 drivers\/base\/dd.c:899\n bus_for_each_drv+0x2d6\/0x3f0 drivers\/base\/bus.c:427\n __device_attach+0x593\/0x8e0 drivers\/base\/dd.c:970\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:1017\n bus_probe_device+0x17b\/0x3e0 drivers\/base\/bus.c:487\n device_add+0x1fff\/0x26e0 drivers\/base\/core.c:3405\n usb_set_configuration+0x37e9\/0x3ed0 drivers\/usb\/core\/message.c:2170\n usb_generic_driver_probe+0x13c\/0x300 drivers\/usb\/core\/generic.c:238\n usb_probe_device+0x309\/0x570 drivers\/usb\/core\/driver.c:293\n really_probe+0x653\/0x14b0 drivers\/base\/dd.c:596\n __driver_probe_device+0x3e9\/0x530 drivers\/base\/dd.c:752\n driver_probe_device drivers\/base\/dd.c:782 [inline]\n __device_attach_driver+0x79f\/0x1120 drivers\/base\/dd.c:899\n bus_for_each_drv+0x2d6\/0x3f0 drivers\/base\/bus.c:427\n __device_attach+0x593\/0x8e0 drivers\/base\/dd.c:970\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:1017\n bus_probe_device+0x17b\/0x3e0 drivers\/base\/bus.c:487\n device_add+0x1fff\/0x26e0 drivers\/base\/core.c:3405\n usb_new_device+0x1b8e\/0x2950 drivers\/usb\/core\/hub.c:2566\n hub_port_connect drivers\/usb\/core\/hub.c:5358 [inline]\n hub_port_connect_change drivers\/usb\/core\/hub.c:5502 [inline]\n port_event drivers\/usb\/core\/hub.c:5660 [inline]\n hub_event+0x58e3\/0x89e0 drivers\/usb\/core\/hub.c:5742\n process_one_work+0xdb6\/0x1820 kernel\/workqueue.c:2307\n worker_thread+0x10b3\/0x21e0 kernel\/workqueue.c:2454\n kthread+0x3c7\/0x500 kernel\/kthread.c:377\n ret_from_fork+0x1f\/0x30\n\nLocal variable mac created at:\n r871xu_drv_init+0x1771\/0x3070 drivers\/staging\/rtl8712\/usb_intf.c:394\n usb_probe_interface+0xf19\/0x1600 drivers\/usb\/core\/driver.c:396\n\nKMSAN: uninit-value in r871xu_drv_init\nhttps:\/\/syzkaller.appspot.com\/bug?id=3cd92b1d85428b128503bfa7a250294c9ae00bd8"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0458e5428e5e959d201a40ffe71d762a79ecedc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b7371a22489cbb2e8e826ca03fb5ce92afb04fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/277faa442fe0c59f418ac53f47a78e1266addd65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52a0d88c328098b4e9fb8f2f3877fec0eff4104b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70df04433fd351ba72bc635bd0b5fe443d9ac964","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76a964ad0ea8f2b10abd69a7532e174a28258283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6535d00a9d54ce1c2a8d86a85001ffb6844f9b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f36e754a1f0bafb9feeea63463de78080acb6de0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff727ab0b7d7a56b5ef281f12abd00c4b85894e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49299","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.727","lastModified":"2025-02-26T07:01:06.727","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: gadget: don't reset gadget's driver->bus\n\nUDC driver should not touch gadget's driver internals, especially it\nshould not reset driver->bus. This wasn't harmful so far, but since\ncommit fc274c1e9973 (\"USB: gadget: Add a new bus for gadgets\") gadget\nsubsystem got it's own bus and messing with ->bus triggers the\nfollowing NULL pointer dereference:\n\ndwc2 12480000.hsotg: bound driver g_ether\n8<--- cut here ---\nUnable to handle kernel NULL pointer dereference at virtual address 00000000\n[00000000] *pgd=00000000\nInternal error: Oops: 5 [#1] SMP ARM\nModules linked in: ...\nCPU: 0 PID: 620 Comm: modprobe Not tainted 5.18.0-rc5-next-20220504 #11862\nHardware name: Samsung Exynos (Flattened Device Tree)\nPC is at module_add_driver+0x44\/0xe8\nLR is at sysfs_do_create_link_sd+0x84\/0xe0\n...\nProcess modprobe (pid: 620, stack limit = 0x(ptrval))\n...\n module_add_driver from bus_add_driver+0xf4\/0x1e4\n bus_add_driver from driver_register+0x78\/0x10c\n driver_register from usb_gadget_register_driver_owner+0x40\/0xb4\n usb_gadget_register_driver_owner from do_one_initcall+0x44\/0x1e0\n do_one_initcall from do_init_module+0x44\/0x1c8\n do_init_module from load_module+0x19b8\/0x1b9c\n load_module from sys_finit_module+0xdc\/0xfc\n sys_finit_module from ret_fast_syscall+0x0\/0x54\nException stack(0xf1771fa8 to 0xf1771ff0)\n...\ndwc2 12480000.hsotg: new device is high-speed\n---[ end trace 0000000000000000 ]---\n\nFix this by removing driver->bus entry reset."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/172cfc167c8ee6238f24f9c16efd598602af643c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3120aac6d0ecd9accf56894aeac0e265f74d3d5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5127c0f365265bb69cd776ad6e4b872c309f3fa8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/547ebdc200b862dff761ff4890f66d8217c33316","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b0c0298f7c3b57417f1729ec4071f76864b72dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bee8f9808a7e82addfc73a0973b16a8bb684205b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2159feb9d28ce496d77df98313ab454646372ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d232ca0bbc7d03144bad0ffd1792c3352bfd03fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efb15ff4a77fe053c941281775fefa91c87770e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49300","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.830","lastModified":"2025-02-26T07:01:06.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix race between nbd_alloc_config() and module removal\n\nWhen nbd module is being removing, nbd_alloc_config() may be\ncalled concurrently by nbd_genl_connect(), although try_module_get()\nwill return false, but nbd_alloc_config() doesn't handle it.\n\nThe race may lead to the leak of nbd_config and its related\nresources (e.g, recv_workq) and oops in nbd_read_stat() due\nto the unload of nbd module as shown below:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000040\n  Oops: 0000 [#1] SMP PTI\n  CPU: 5 PID: 13840 Comm: kworker\/u17:33 Not tainted 5.14.0+ #1\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n  Workqueue: knbd16-recv recv_work [nbd]\n  RIP: 0010:nbd_read_stat.cold+0x130\/0x1a4 [nbd]\n  Call Trace:\n   recv_work+0x3b\/0xb0 [nbd]\n   process_one_work+0x1ed\/0x390\n   worker_thread+0x4a\/0x3d0\n   kthread+0x12a\/0x150\n   ret_from_fork+0x22\/0x30\n\nFixing it by checking the return value of try_module_get()\nin nbd_alloc_config(). As nbd_alloc_config() may return ERR_PTR(-ENODEV),\nassign nbd->config only when nbd_alloc_config() succeeds to ensure\nthe value of nbd->config is binary (valid or NULL).\n\nAlso adding a debug message to check the reference counter\nof nbd_config during module removal."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/122e4adaff2439f1cc18cc7e931980fa7560df5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/165cf2e0019fa6cedc75b456490c41494c34abb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2573f2375b64280be977431701ed5d33b75b9ad0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2888fa41985f93ed0a6837cfbb06bcbfd7fa2314","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71c142f910da44421213ade601bcbd23ceae19fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a7da4ced236ce6637fe70f14ca18e718d4bf9e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c55b2b983b0fa012942c3eb16384b2b722caa810","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d09525720dd5201756f698bee1076de9aefd4602","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49301","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:06.923","lastModified":"2025-02-26T07:01:06.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: rtl8712: fix uninit-value in usb_read8() and friends\n\nWhen r8712_usbctrl_vendorreq() returns negative, 'data' in\nusb_read{8,16,32} will not be initialized.\n\nBUG: KMSAN: uninit-value in string_nocheck lib\/vsprintf.c:643 [inline]\nBUG: KMSAN: uninit-value in string+0x4ec\/0x6f0 lib\/vsprintf.c:725\n string_nocheck lib\/vsprintf.c:643 [inline]\n string+0x4ec\/0x6f0 lib\/vsprintf.c:725\n vsnprintf+0x2222\/0x3650 lib\/vsprintf.c:2806\n va_format lib\/vsprintf.c:1704 [inline]\n pointer+0x18e6\/0x1f70 lib\/vsprintf.c:2443\n vsnprintf+0x1a9b\/0x3650 lib\/vsprintf.c:2810\n vprintk_store+0x537\/0x2150 kernel\/printk\/printk.c:2158\n vprintk_emit+0x28b\/0xab0 kernel\/printk\/printk.c:2256\n dev_vprintk_emit+0x5ef\/0x6d0 drivers\/base\/core.c:4604\n dev_printk_emit+0x1dd\/0x21f drivers\/base\/core.c:4615\n __dev_printk+0x3be\/0x440 drivers\/base\/core.c:4627\n _dev_info+0x1ea\/0x22f drivers\/base\/core.c:4673\n r871xu_drv_init+0x1929\/0x3070 drivers\/staging\/rtl8712\/usb_intf.c:401\n usb_probe_interface+0xf19\/0x1600 drivers\/usb\/core\/driver.c:396\n really_probe+0x6c7\/0x1350 drivers\/base\/dd.c:621\n __driver_probe_device+0x3e9\/0x530 drivers\/base\/dd.c:752\n driver_probe_device drivers\/base\/dd.c:782 [inline]\n __device_attach_driver+0x79f\/0x1120 drivers\/base\/dd.c:899\n bus_for_each_drv+0x2d6\/0x3f0 drivers\/base\/bus.c:427\n __device_attach+0x593\/0x8e0 drivers\/base\/dd.c:970\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:1017\n bus_probe_device+0x17b\/0x3e0 drivers\/base\/bus.c:487\n device_add+0x1fff\/0x26e0 drivers\/base\/core.c:3405\n usb_set_configuration+0x37e9\/0x3ed0 drivers\/usb\/core\/message.c:2170\n usb_generic_driver_probe+0x13c\/0x300 drivers\/usb\/core\/generic.c:238\n usb_probe_device+0x309\/0x570 drivers\/usb\/core\/driver.c:293\n really_probe+0x6c7\/0x1350 drivers\/base\/dd.c:621\n __driver_probe_device+0x3e9\/0x530 drivers\/base\/dd.c:752\n driver_probe_device drivers\/base\/dd.c:782 [inline]\n __device_attach_driver+0x79f\/0x1120 drivers\/base\/dd.c:899\n bus_for_each_drv+0x2d6\/0x3f0 drivers\/base\/bus.c:427\n __device_attach+0x593\/0x8e0 drivers\/base\/dd.c:970\n device_initial_probe+0x4a\/0x60 drivers\/base\/dd.c:1017\n bus_probe_device+0x17b\/0x3e0 drivers\/base\/bus.c:487\n device_add+0x1fff\/0x26e0 drivers\/base\/core.c:3405\n usb_new_device+0x1b91\/0x2950 drivers\/usb\/core\/hub.c:2566\n hub_port_connect drivers\/usb\/core\/hub.c:5363 [inline]\n hub_port_connect_change drivers\/usb\/core\/hub.c:5507 [inline]\n port_event drivers\/usb\/core\/hub.c:5665 [inline]\n hub_event+0x58e3\/0x89e0 drivers\/usb\/core\/hub.c:5747\n process_one_work+0xdb6\/0x1820 kernel\/workqueue.c:2289\n worker_thread+0x10d0\/0x2240 kernel\/workqueue.c:2436\n kthread+0x3c7\/0x500 kernel\/kthread.c:376\n ret_from_fork+0x1f\/0x30\n\nLocal variable data created at:\n usb_read8+0x5d\/0x130 drivers\/staging\/rtl8712\/usb_ops.c:33\n r8712_read8+0xa5\/0xd0 drivers\/staging\/rtl8712\/rtl8712_io.c:29\n\nKMSAN: uninit-value in r871xu_drv_init\nhttps:\/\/syzkaller.appspot.com\/bug?id=3cd92b1d85428b128503bfa7a250294c9ae00bd8"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33ef21d55418ab6a62a63fd550b2dbe297433372","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58762f1c63c75cbe1dc393eed3c9cf8e38310ca1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95b0f54f8a898072a2810c05fab34d971f23a612","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1b57669732d09da7e13ef86d058dab0cd57f6e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7ed3c85da0b230bcdf5329acfe012ed093f3daa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de075af8c404f7d59ed34df230aedd9f645fb846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49302","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.027","lastModified":"2025-02-26T07:01:07.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: host: isp116x: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/134a3408c2d3f7e23eb0e4556e0a2d9f36c2614e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3592cfd8b848bf0c4d7740d78a87a7b8f6e1fa9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3825db88d8c704e7992b685618a03f82bffcf2ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bffda1560a6f255fdf504e059fbbdb5d46b9e44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/804de302ada3544699c5f48c5314b249af76faa3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82a101f14943f479fd190b1e5b40d91c77e2ac1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aca0cab0e9ed33b6371aafb519a6c38f2850ffc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c91a74b1f0f2d2d7e728742ae55e3ffe9ba7853d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee105039d3653444de4d3ede642383c92855dc1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49303","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.123","lastModified":"2025-02-26T07:01:07.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: staging: rtl8192eu: Fix deadlock in rtw_joinbss_event_prehandle\n\nThere is a deadlock in rtw_joinbss_event_prehandle(), which is shown below:\n\n   (Thread 1)                |      (Thread 2)\n                             | _set_timer()\nrtw_joinbss_event_prehandle()|  mod_timer()\n spin_lock_bh() \/\/(1)        |  (wait a time)\n ...                         | rtw_join_timeout_handler()\n                             |  _rtw_join_timeout_handler()\n del_timer_sync()            |   spin_lock_bh() \/\/(2)\n (wait timer to stop)        |   ...\n\nWe hold pmlmepriv->lock in position (1) of thread 1 and\nuse del_timer_sync() to wait timer to stop, but timer handler\nalso need pmlmepriv->lock in position (2) of thread 2.\nAs a result, rtw_joinbss_event_prehandle() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_bh(), which could let timer handler to obtain\nthe needed lock. What`s more, we change spin_lock_bh() to\nspin_lock_irq() in _rtw_join_timeout_handler() in order to\nprevent deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fcddf9c7c10202946d5b19409efbdff744fba88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25cf414b0610fea29d8e045f315648d9007c9a46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49304","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.213","lastModified":"2025-02-26T07:01:07.213","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: tty: serial: Fix deadlock in sa1100_set_termios()\n\nThere is a deadlock in sa1100_set_termios(), which is shown\nbelow:\n\n   (Thread 1)              |      (Thread 2)\n                           | sa1100_enable_ms()\nsa1100_set_termios()       |  mod_timer()\n spin_lock_irqsave() \/\/(1) |  (wait a time)\n ...                       | sa1100_timeout()\n del_timer_sync()          |  spin_lock_irqsave() \/\/(2)\n (wait timer to stop)      |  ...\n\nWe hold sport->port.lock in position (1) of thread 1 and\nuse del_timer_sync() to wait timer to stop, but timer handler\nalso need sport->port.lock in position (2) of thread 2. As a result,\nsa1100_set_termios() will block forever.\n\nThis patch moves del_timer_sync() before spin_lock_irqsave()\nin order to prevent the deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0976808d0d171ec837d4bd3e9f4ad4a00ab703b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09a5958a2452ad22d0cb638711ef34ea1863a829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cbfc38df580bff5b2fe19f21c1a7520efcc4b3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34d91e555e5582cffdbcbb75517bc9217866823e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/553213432ef0c295becdc08c0207d2094468f673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62b2caef400c1738b6d22f636c628d9f85cd4c4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2273eefab54a521d9c59efb6e1114e742bdf41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85e20f8bd31a46d8c60103d0274a8ebe8f47f2b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/920f0ae7a129ffee98a106e3bbdfd61a2a59e939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49305","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.310","lastModified":"2025-02-26T07:01:07.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: staging: rtl8192u: Fix deadlock in ieee80211_beacons_stop()\n\nThere is a deadlock in ieee80211_beacons_stop(), which is shown below:\n\n   (Thread 1)              |      (Thread 2)\n                           | ieee80211_send_beacon()\nieee80211_beacons_stop()   |  mod_timer()\n spin_lock_irqsave() \/\/(1) |  (wait a time)\n ...                       | ieee80211_send_beacon_cb()\n del_timer_sync()          |  spin_lock_irqsave() \/\/(2)\n (wait timer to stop)      |  ...\n\nWe hold ieee->beacon_lock in position (1) of thread 1 and use\ndel_timer_sync() to wait timer to stop, but timer handler\nalso need ieee->beacon_lock in position (2) of thread 2.\nAs a result, ieee80211_beacons_stop() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_irqsave(), which could let timer handler to obtain\nthe needed lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/042915c1bfedd684c1d98a841794ee203200571a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1fbe033c52480f7954c057510040fa6286c4ea25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66f769762f65d957f688f3258755c6ec410bf710","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/806c7b53414934ba2a39449b31fd1a038e500273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b34cb54923a6e5ddefbaf358c85c922c6ab456e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b465bb2ebf666116c1ac745cb80c65154dc0d27e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffc9cab7243f8151be37966301307bfd3cda2db3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49306","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.413","lastModified":"2025-02-26T07:01:07.413","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: host: Stop setting the ACPI companion\n\nIt is no longer needed. The sysdev pointer is now used when\nassigning the ACPI companions to the xHCI ports and USB\ndevices.\n\nAssigning the ACPI companion here resulted in the\nfwnode->secondary pointer to be replaced also for the parent\ndwc3 device since the primary fwnode (the ACPI companion)\nwas shared. That was unintentional and it created potential\nside effects like resource leaks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7fd069d65da2e20b1caec3b7bcf9dfbe28c04bb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c185fde906a48368bd2d2a8c17d4b6fb3d670af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7f35934f7ab67bfd9adabc84207e59da9c19108","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49307","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.503","lastModified":"2025-02-26T07:01:07.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: synclink_gt: Fix null-pointer-dereference in slgt_clean()\n\nWhen the driver fails at alloc_hdlcdev(), and then we remove the driver\nmodule, we will get the following splat:\n\n[   25.065966] general protection fault, probably for non-canonical address 0xdffffc0000000182: 0000 [#1] PREEMPT SMP KASAN PTI\n[   25.066914] KASAN: null-ptr-deref in range [0x0000000000000c10-0x0000000000000c17]\n[   25.069262] RIP: 0010:detach_hdlc_protocol+0x2a\/0x3e0\n[   25.077709] Call Trace:\n[   25.077924]  <TASK>\n[   25.078108]  unregister_hdlc_device+0x16\/0x30\n[   25.078481]  slgt_cleanup+0x157\/0x9f0 [synclink_gt]\n\nFix this by checking whether the 'info->netdev' is a null pointer first."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/078212ad15dbd88840c82c97f12c93d83703c8fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ceb4ca9543a8a788febf6bc8dad2e605e172d5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50c341f9a2adc4c32a8ad5a39eb99d9c4a419e0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/689ca31c542687709ba21ec2195c1fbce34fd029","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a95696bdc0e13f8980f05b54a3b9081963d1256","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba08cbc5b53e151d0acf1930fb526fc65b7f3e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d68d5e68b7f64de7170f8e04dd9b995c36b2c71c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddd67751ab86c6a65f95c35293c42f85a42ac05d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6e07eb7ebec53ffe81fc2489589320fbe4a6b75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49308","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.607","lastModified":"2025-02-26T07:01:07.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nextcon: Modify extcon device to be created after driver data is set\n\nCurrently, someone can invoke the sysfs such as state_show()\nintermittently before dev_set_drvdata() is done.\nAnd it can be a cause of kernel Oops because of edev is Null at that time.\nSo modified the driver registration to after setting drviver data.\n\n- Oops's backtrace.\n\nBacktrace:\n[<c067865c>] (state_show) from [<c05222e8>] (dev_attr_show)\n[<c05222c0>] (dev_attr_show) from [<c02c66e0>] (sysfs_kf_seq_show)\n[<c02c6648>] (sysfs_kf_seq_show) from [<c02c496c>] (kernfs_seq_show)\n[<c02c4938>] (kernfs_seq_show) from [<c025e2a0>] (seq_read)\n[<c025e11c>] (seq_read) from [<c02c50a0>] (kernfs_fop_read)\n[<c02c5064>] (kernfs_fop_read) from [<c0231cac>] (__vfs_read)\n[<c0231c5c>] (__vfs_read) from [<c0231ee0>] (vfs_read)\n[<c0231e34>] (vfs_read) from [<c0232464>] (ksys_read)\n[<c02323f0>] (ksys_read) from [<c02324fc>] (sys_read)\n[<c02324e4>] (sys_read) from [<c00091d0>] (__sys_trace_return)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/033ec4e7e59ae5e1ef1e8c10bc6552926044ed1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35ff1ac55d301efb3f467cf5426faaeb3452994b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/368e68ad6da4317fc4170e8d92b51c13d1bfe7a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dcc2afe716d69f5112ce035cb14f007461ff189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e721f3ad0535b24f19a62420f4da95212cf069c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abf3b222614f49f98e606fccdd269161c0d70204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb81ea998c461868d1168411a867d8ffee12f23f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d472c78cc82999d07bd09193a6718016ce9cd386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49309","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.700","lastModified":"2025-02-26T07:01:07.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: staging: rtl8723bs: Fix deadlock in rtw_surveydone_event_callback()\n\nThere is a deadlock in rtw_surveydone_event_callback(),\nwhich is shown below:\n\n   (Thread 1)                  |      (Thread 2)\n                               | _set_timer()\nrtw_surveydone_event_callback()|  mod_timer()\n spin_lock_bh() \/\/(1)          |  (wait a time)\n ...                           | rtw_scan_timeout_handler()\n del_timer_sync()              |  spin_lock_bh() \/\/(2)\n (wait timer to stop)          |  ...\n\nWe hold pmlmepriv->lock in position (1) of thread 1 and use\ndel_timer_sync() to wait timer to stop, but timer handler\nalso need pmlmepriv->lock in position (2) of thread 2.\nAs a result, rtw_surveydone_event_callback() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_bh(), which could let timer handler to obtain\nthe needed lock. What`s more, we change spin_lock_bh() in\nrtw_scan_timeout_handler() to spin_lock_irq(). Otherwise,\nspin_lock_bh() will also cause deadlock() in timer handler."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c41f5c341853f84b7bc2f32605d4e2782e8c279","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc7ad0d77b51c872d629bcd98aea463a3c4109e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce129d3efd181da5fd56f4360cc8827122afa67e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f89f6c3ebf69623b8ea48200bd690e9e210335a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49310","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.793","lastModified":"2025-02-26T07:01:07.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nchar: xillybus: fix a refcount leak in cleanup_dev()\n\nusb_get_dev is called in xillyusb_probe. So it is better to call\nusb_put_dev before xdev is released."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21f1f167d727f3f857e26d509ef5a6d47fd31bc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b67d19662fdee275c479d21853bc1239600a798f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc8fceda3b89006e8a7dda8a097d36045d044c25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e277b95acdab84cd5d2f8d537a37aef6d21e988b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49311","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.887","lastModified":"2025-02-26T07:01:07.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: staging: rtl8192bs: Fix deadlock in rtw_joinbss_event_prehandle()\n\nThere is a deadlock in rtw_joinbss_event_prehandle(), which is shown\nbelow:\n\n   (Thread 1)                |      (Thread 2)\n                             | _set_timer()\nrtw_joinbss_event_prehandle()|  mod_timer()\n spin_lock_bh() \/\/(1)        |  (wait a time)\n ...                         | _rtw_join_timeout_handler()\n del_timer_sync()            |  spin_lock_bh() \/\/(2)\n (wait timer to stop)        |  ...\n\nWe hold pmlmepriv->lock in position (1) of thread 1 and\nuse del_timer_sync() to wait timer to stop, but timer handler\nalso need pmlmepriv->lock in position (2) of thread 2.\nAs a result, rtw_joinbss_event_prehandle() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_bh(), which could let timer handler to obtain\nthe needed lock. What`s more, we change spin_lock_bh() to\nspin_lock_irq() in _rtw_join_timeout_handler() in order to\nprevent deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/041879b12ddb0c6c83ed9c0bdd10dc82a056f2fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f6c99b94ca3caad346876b3e22e3ca3d25bc8ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae60744d5fad840b9d056d35b4b652d95e755846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eca9748d9267a38d532464e3305a38629e9c35a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49312","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:07.997","lastModified":"2025-02-26T07:01:07.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: rtl8712: fix a potential memory leak in r871xu_drv_init()\n\nIn r871xu_drv_init(), if r8712_init_drv_sw() fails, then the memory\nallocated by r8712_alloc_io_queue() in r8712_usb_dvobj_init() is not\nproperly released as there is no action will be performed by\nr8712_usb_dvobj_deinit().\nTo properly release it, we should call r8712_free_io_queue() in\nr8712_usb_dvobj_deinit().\n\nBesides, in r871xu_dev_remove(), r8712_usb_dvobj_deinit() will be called\nby r871x_dev_unload() under condition `padapter->bup` and\nr8712_free_io_queue() is called by r8712_free_drv_sw().\nHowever, r8712_usb_dvobj_deinit() does not rely on `padapter->bup` and\ncalling r8712_free_io_queue() in r8712_free_drv_sw() is negative for\nbetter understading the code.\nSo I move r8712_usb_dvobj_deinit() into r871xu_dev_remove(), and remove\nr8712_free_io_queue() from r8712_free_drv_sw()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/205e039fead72e87ad2838f5e649a4c4834f648b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a89a92efc342dd7c44b6056da87debc598f9c73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7288ff561de650d4139fab80e9cb0da9b5b32434","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8eb42d6d10f8fe509117859defddf9e72b4fa4d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2882b8baad068d21c99fb2ab5a85a2bdbd5b834","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49313","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.143","lastModified":"2025-02-26T07:01:08.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: usb: host: Fix deadlock in oxu_bus_suspend()\n\nThere is a deadlock in oxu_bus_suspend(), which is shown below:\n\n   (Thread 1)              |      (Thread 2)\n                           | timer_action()\noxu_bus_suspend()          |  mod_timer()\n spin_lock_irq() \/\/(1)     |  (wait a time)\n ...                       | oxu_watchdog()\n del_timer_sync()          |  spin_lock_irq() \/\/(2)\n (wait timer to stop)      |  ...\n\nWe hold oxu->lock in position (1) of thread 1, and use\ndel_timer_sync() to wait timer to stop, but timer handler\nalso need oxu->lock in position (2) of thread 2. As a result,\noxu_bus_suspend() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_irq(), which could let timer handler to obtain\nthe needed lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dcec0bc142be2096af71a5703d63237127db204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4187b291a76664a3c03d3f0d9bfadc8322881868","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d378f2ae58138d4c55684e1d274e7dd94aa6524","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b58d255f27b0ed6a2e43208960864d67579db58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3d380188bde8900c3f604e82b56572896499124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b97aae8b43b718314012e8170b7e03dbfd2e7677","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d888753872190abd18f68a7d77b9c7c367f0a7ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8242044c91cafbba9e320b0fb31abf2429a3221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffe9440d698274c6462d2e304562c6ddfc8c84df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49314","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.270","lastModified":"2025-02-26T07:01:08.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: Fix a possible resource leak in icom_probe\n\nWhen pci_read_config_dword failed, call pci_release_regions() and\npci_disable_device() to recycle the resource previously allocated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23e155b51d403c0ccedc60c0d6c3c452afed07fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f9b2e4ca88cab1a96b86ecd45544e488ca43faf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c014373f178a4f13a08e045ef63bdb23f62e892","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a8305f357a8d03698fc7bc855ff9c6865d5486b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2df0b4d080cc770b4da7bff487048c803dfd07e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb7147afd328c07edeeee287710d8d96ac0459f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d703d912a985c1c5b50dd38c3181fc3540fa77cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee157a79e7c82b01ae4c25de0ac75899801f322c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4c836d90da1ece88905d62ce2ce39a962f25d1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49315","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.373","lastModified":"2025-02-26T07:01:08.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: staging: rtl8192e: Fix deadlock in rtllib_beacons_stop()\n\nThere is a deadlock in rtllib_beacons_stop(), which is shown\nbelow:\n\n   (Thread 1)              |      (Thread 2)\n                           | rtllib_send_beacon()\nrtllib_beacons_stop()      |  mod_timer()\n spin_lock_irqsave() \/\/(1) |  (wait a time)\n ...                       | rtllib_send_beacon_cb()\n del_timer_sync()          |  spin_lock_irqsave() \/\/(2)\n (wait timer to stop)      |  ...\n\nWe hold ieee->beacon_lock in position (1) of thread 1 and\nuse del_timer_sync() to wait timer to stop, but timer handler\nalso need ieee->beacon_lock in position (2) of thread 2.\nAs a result, rtllib_beacons_stop() will block forever.\n\nThis patch extracts del_timer_sync() from the protection of\nspin_lock_irqsave(), which could let timer handler to obtain\nthe needed lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08bacf871c019163ccd1389d0bc957a43324967a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0f69d7d5e918aa43423d86bd17ddb11b1b5e8ada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/381045dc64d23a2229c47c5524c06bfc33d34446","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4681129fda9e8555392eaaadb239ec6a6e2b3e12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46c861009bf437a18417df24cea0d181741b7d72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64b05fa212c7e4d057676e8b7e7120c6eb2f615b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b6bdbd9337de3917945847bde262a34a87a6303","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fef451f0fbbe85dbd2962b18379d02e2965610db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffd4c4d5293e4985092ea45ba21cad9326e2e434","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49316","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.470","lastModified":"2025-02-26T07:01:08.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Don't hold the layoutget locks across multiple RPC calls\n\nWhen doing layoutget as part of the open() compound, we have to be\ncareful to release the layout locks before we can call any further RPC\ncalls, such as setattr(). The reason is that those calls could trigger\na recall, which could deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d7a26d115cc7892668baa9750f64bd8baca29b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ee5b9644f06b4d3cdcd9544f43f63312e425a4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6949493884fe88500de4af182588e071cf1544ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b3fc1496e7227cd6a39a80bbfb7588ef7c7a010","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b3be930e79cc5d9d829f158e31172b2043f0cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4c2a041ed3ba114502d5ed6ace5b1a48d637a8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea759ae0a9ae5acee677d722129710ac89cc59c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49317","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.567","lastModified":"2025-02-26T07:01:08.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: avoid infinite loop to flush node pages\n\nxfstests\/generic\/475 can give EIO all the time which give an infinite loop\nto flush node page like below. Let's avoid it.\n\n[16418.518551] Call Trace:\n[16418.518553]  ? dm_submit_bio+0x48\/0x400\n[16418.518574]  ? submit_bio_checks+0x1ac\/0x5a0\n[16418.525207]  __submit_bio+0x1a9\/0x230\n[16418.525210]  ? kmem_cache_alloc+0x29e\/0x3c0\n[16418.525223]  submit_bio_noacct+0xa8\/0x2b0\n[16418.525226]  submit_bio+0x4d\/0x130\n[16418.525238]  __submit_bio+0x49\/0x310 [f2fs]\n[16418.525339]  ? bio_add_page+0x6a\/0x90\n[16418.525344]  f2fs_submit_page_bio+0x134\/0x1f0 [f2fs]\n[16418.525365]  read_node_page+0x125\/0x1b0 [f2fs]\n[16418.525388]  __get_node_page.part.0+0x58\/0x3f0 [f2fs]\n[16418.525409]  __get_node_page+0x2f\/0x60 [f2fs]\n[16418.525431]  f2fs_get_dnode_of_data+0x423\/0x860 [f2fs]\n[16418.525452]  ? asm_sysvec_apic_timer_interrupt+0x12\/0x20\n[16418.525458]  ? __mod_memcg_state.part.0+0x2a\/0x30\n[16418.525465]  ? __mod_memcg_lruvec_state+0x27\/0x40\n[16418.525467]  ? __xa_set_mark+0x57\/0x70\n[16418.525472]  f2fs_do_write_data_page+0x10e\/0x7b0 [f2fs]\n[16418.525493]  f2fs_write_single_data_page+0x555\/0x830 [f2fs]\n[16418.525514]  ? sysvec_apic_timer_interrupt+0x4e\/0x90\n[16418.525518]  ? asm_sysvec_apic_timer_interrupt+0x12\/0x20\n[16418.525523]  f2fs_write_cache_pages+0x303\/0x880 [f2fs]\n[16418.525545]  ? blk_flush_plug_list+0x47\/0x100\n[16418.525548]  f2fs_write_data_pages+0xfd\/0x320 [f2fs]\n[16418.525569]  do_writepages+0xd5\/0x210\n[16418.525648]  filemap_fdatawrite_wbc+0x7d\/0xc0\n[16418.525655]  filemap_fdatawrite+0x50\/0x70\n[16418.525658]  f2fs_sync_dirty_inodes+0xa4\/0x230 [f2fs]\n[16418.525679]  f2fs_write_checkpoint+0x16d\/0x1720 [f2fs]\n[16418.525699]  ? ttwu_do_wakeup+0x1c\/0x160\n[16418.525709]  ? ttwu_do_activate+0x6d\/0xd0\n[16418.525711]  ? __wait_for_common+0x11d\/0x150\n[16418.525715]  kill_f2fs_super+0xca\/0x100 [f2fs]\n[16418.525733]  deactivate_locked_super+0x3b\/0xb0\n[16418.525739]  deactivate_super+0x40\/0x50\n[16418.525741]  cleanup_mnt+0x139\/0x190\n[16418.525747]  __cleanup_mnt+0x12\/0x20\n[16418.525749]  task_work_run+0x6d\/0xa0\n[16418.525765]  exit_to_user_mode_prepare+0x1ad\/0x1b0\n[16418.525771]  syscall_exit_to_user_mode+0x27\/0x50\n[16418.525774]  do_syscall_64+0x48\/0xc0\n[16418.525776]  entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a7b8618aa2f0f926ce85f2486ac835a85c753ca7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd47ea5d776d8b524fb6f60de3240f95603901dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49318","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.660","lastModified":"2025-02-26T07:01:08.660","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: remove WARN_ON in f2fs_is_valid_blkaddr\n\nSyzbot triggers two WARNs in f2fs_is_valid_blkaddr and\n__is_bitmap_valid. For example, in f2fs_is_valid_blkaddr,\nif type is DATA_GENERIC_ENHANCE or DATA_GENERIC_ENHANCE_READ,\nit invokes WARN_ON if blkaddr is not in the right range.\nThe call trace is as follows:\n\n f2fs_get_node_info+0x45f\/0x1070\n read_node_page+0x577\/0x1190\n __get_node_page.part.0+0x9e\/0x10e0\n __get_node_page\n f2fs_get_node_page+0x109\/0x180\n do_read_inode\n f2fs_iget+0x2a5\/0x58b0\n f2fs_fill_super+0x3b39\/0x7ca0\n\nFix these two WARNs by replacing WARN_ON with dump_stack."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a7a1fc7e71eecf2e5053a6c312c9f0dcbb9b8fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32bea51fe4c6e92c00403739f7547c89219bea88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c62c5e26345c34d199b4b8c8e69255ba3d0e751","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99c09b298e47ebbe345a6da9f268b32a6b0f4582","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd6374af36cc548464d8c47a93fdba7303bb82a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc2f78e2d4cc844a1458653d57ce1b54d4a29f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49319","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.750","lastModified":"2025-02-26T07:01:08.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu-v3: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/54c1e0e3bbcab2abe25b2874a43050ae5df87831","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54cf47da0c7532d151d76e5d63f5936191698c44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b131fa8c1d2afd05d0b7598621114674289c2fbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db728a891f9177b044aaca89b678f6b5e24d5cc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb0f1c5eb8d60b3e018ba7c87da249b52674ebe6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49320","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.840","lastModified":"2025-02-26T07:01:08.840","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: zynqmp_dma: In struct zynqmp_dma_chan fix desc_size data type\n\nIn zynqmp_dma_alloc\/free_chan_resources functions there is a\npotential overflow in the below expressions.\n\ndma_alloc_coherent(chan->dev, (2 * chan->desc_size *\n\t\t   ZYNQMP_DMA_NUM_DESCS),\n\t\t   &chan->desc_pool_p, GFP_KERNEL);\n\ndma_free_coherent(chan->dev,(2 * ZYNQMP_DMA_DESC_SIZE(chan) *\n                 ZYNQMP_DMA_NUM_DESCS),\n                chan->desc_pool_v, chan->desc_pool_p);\n\nThe arguments desc_size and ZYNQMP_DMA_NUM_DESCS were 32 bit. Though\nthis overflow condition is not observed but it is a potential problem\nin the case of 32-bit multiplication. Hence fix it by changing the\ndesc_size data type to size_t.\n\nIn addition to coverity fix it also reuse ZYNQMP_DMA_DESC_SIZE macro in\ndma_alloc_coherent API argument.\n\nAddresses-Coverity: Event overflow_before_widen."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4838969e4d95d2bd2995d1605b20d3144fcb3e74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b5488f4721fed6e121e661e165bab06ae2f8675","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83960276ffc9bf5570d4106490346b61e61be5f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90aefae2e3a770a6909d339f5d8a988c0b0ceaf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95a0ba85c1b51b36e909841c02d205cd223ab753","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9a9f43a62a04ec3183fb0da9226c7706eed0115","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49321","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:08.933","lastModified":"2025-02-26T07:01:08.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxprtrdma: treat all calls not a bcall when bc_serv is NULL\n\nWhen a rdma server returns a fault format reply, nfs v3 client may\ntreats it as a bcall when bc service is not exist.\n\nThe debug message at rpcrdma_bc_receive_call are,\n\n[56579.837169] RPC:       rpcrdma_bc_receive_call: callback XID\n00000001, length=20\n[56579.837174] RPC:       rpcrdma_bc_receive_call: 00 00 00 01 00 00 00\n00 00 00 00 00 00 00 00 00 00 00 00 04\n\nAfter that, rpcrdma_bc_receive_call will meets NULL pointer as,\n\n[  226.057890] BUG: unable to handle kernel NULL pointer dereference at\n00000000000000c8\n...\n[  226.058704] RIP: 0010:_raw_spin_lock+0xc\/0x20\n...\n[  226.059732] Call Trace:\n[  226.059878]  rpcrdma_bc_receive_call+0x138\/0x327 [rpcrdma]\n[  226.060011]  __ib_process_cq+0x89\/0x170 [ib_core]\n[  226.060092]  ib_cq_poll_work+0x26\/0x80 [ib_core]\n[  226.060257]  process_one_work+0x1a7\/0x360\n[  226.060367]  ? create_worker+0x1a0\/0x1a0\n[  226.060440]  worker_thread+0x30\/0x390\n[  226.060500]  ? create_worker+0x1a0\/0x1a0\n[  226.060574]  kthread+0x116\/0x130\n[  226.060661]  ? kthread_flush_work_fn+0x10\/0x10\n[  226.060724]  ret_from_fork+0x35\/0x40\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11270e7ca268e8d61b5d9e5c3a54bd1550642c9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dbae5affbdbf524b48000f9d357925bb001e5f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e3943c50764dc7c5f25911970c3ff062ec1f18c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90c4f73104016748533a5707ecd15930fbeff402","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91784f3d77b73885e1b2e6b59d3cbf0de0a1126a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/998d35a2aff4b81a1c784f3aa45cd3afff6814c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3fc8051ee061e31db13e2fe011e8e0b71a7f815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da99331fa62131a38a0947a8204c5208de7b0454","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49322","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.030","lastModified":"2025-02-26T07:01:09.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix sleeping function called from invalid context on RT kernel\n\nWhen setting bootparams=\"trace_event=initcall:initcall_start tp_printk=1\" in the\ncmdline, the output_printk() was called, and the spin_lock_irqsave() was called in the\natomic and irq disable interrupt context suitation. On the PREEMPT_RT kernel,\nthese locks are replaced with sleepable rt-spinlock, so the stack calltrace will\nbe triggered.\nFix it by raw_spin_lock_irqsave when PREEMPT_RT and \"trace_event=initcall:initcall_start\ntp_printk=1\" enabled.\n\n BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:46\n in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1, name: swapper\/0\n preempt_count: 2, expected: 0\n RCU nest depth: 0, expected: 0\n Preemption disabled at:\n [<ffffffff8992303e>] try_to_wake_up+0x7e\/0xba0\n CPU: 0 PID: 1 Comm: swapper\/0 Not tainted 5.17.1-rt17+ #19 34c5812404187a875f32bee7977f7367f9679ea7\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04\/01\/2014\n Call Trace:\n  <TASK>\n  dump_stack_lvl+0x60\/0x8c\n  dump_stack+0x10\/0x12\n  __might_resched.cold+0x11d\/0x155\n  rt_spin_lock+0x40\/0x70\n  trace_event_buffer_commit+0x2fa\/0x4c0\n  ? map_vsyscall+0x93\/0x93\n  trace_event_raw_event_initcall_start+0xbe\/0x110\n  ? perf_trace_initcall_finish+0x210\/0x210\n  ? probe_sched_wakeup+0x34\/0x40\n  ? ttwu_do_wakeup+0xda\/0x310\n  ? trace_hardirqs_on+0x35\/0x170\n  ? map_vsyscall+0x93\/0x93\n  do_one_initcall+0x217\/0x3c0\n  ? trace_event_raw_event_initcall_level+0x170\/0x170\n  ? push_cpu_stop+0x400\/0x400\n  ? cblist_init_generic+0x241\/0x290\n  kernel_init_freeable+0x1ac\/0x347\n  ? _raw_spin_unlock_irq+0x65\/0x80\n  ? rest_init+0xf0\/0xf0\n  kernel_init+0x1e\/0x150\n  ret_from_fork+0x22\/0x30\n  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12025abdc8539ed9d5014e2d647a3fd1bd3de5cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1788e6dbb61286215442b1af99e51405a6206762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40f9fde06b25884baa0c4bd138b909a9b67218b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43bfc4dccc416c964b53cbdc430e814f8b6f770b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48c6ee7d6c614f09b2c8553a95eefef6ecf196e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9abf3db8bdb63ab545034148ef2118f4d088ca59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b534640a2c6a8d88168febc82ec6d161184f2ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be1f323fb9d9b14a505ca22d742d321769454de1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49323","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.130","lastModified":"2025-02-26T07:01:09.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu: fix possible null-ptr-deref in arm_smmu_device_probe()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref.\nAnd use devm_platform_get_and_ioremap_resource() to simplify code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3660db29b0305f9a1d95979c7af0f5db6ea99f5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/449fc4561762ad9ad85362d5f01f0d0df397457a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80776a71340f57d6a4952635fc89f0342072f3ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98dd53a92825747395649f54d23512a13c3ed471","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9ed8af1dee37f181096631fb03729ece98ba816","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49324","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.223","lastModified":"2025-02-26T07:01:09.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmips: cpc: Fix refcount leak in mips_cpc_default_phys_base\n\nAdd the missing of_node_put() to release the refcount incremented\nby of_find_compatible_node()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1699ec1bfb59304a788901474f6bb003f7831b61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4107fa700f314592850e2c64608f6ede4c077476","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f843cdfc202caaa5d67db3395d893e56362e43a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/961ee8a6eeef4632a215d995d837b204f8c7c2d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aae6b4bb63c694bc91714412718f15468407fe51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bed702566dcdb6ebe300bc0c62bf3600cf4d5874","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c667b3872a4c435a3f29d4e15971cd8c378b0043","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc0aed22d33ced9e266c50bdf1cbe668c5acfdf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49325","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.323","lastModified":"2025-02-26T07:01:09.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: add accessors to read\/set tp->snd_cwnd\n\nWe had various bugs over the years with code\nbreaking the assumption that tp->snd_cwnd is greater\nthan zero.\n\nLately, syzbot reported the WARN_ON_ONCE(!tp->prior_cwnd) added\nin commit 8b8a321ff72c (\"tcp: fix zero cwnd in tcp_cwnd_reduction\")\ncan trigger, and without a repro we would have to spend\nconsiderable time finding the bug.\n\nInstead of complaining too late, we want to catch where\nand when tp->snd_cwnd is set to an illegal value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3308676ec525901bf1656014003c443a60730a04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40570375356c874b1578e05c1dcc3ff7c1322dbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41e191fe72282e193a7744e2fc1786b23156c9e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5aba0ad44fb4a7fb78c5076c313456de199a3c29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49326","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.417","lastModified":"2025-02-26T07:01:09.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtl818x: Prevent using not initialized queues\n\nUsing not existing queues can panic the kernel with rtl8180\/rtl8185 cards.\nIgnore the skb priority for those cards, they only have one tx queue. Pierre\nAsselin (pa@panix.com) reported the kernel crash in the Gentoo forum:\n\nhttps:\/\/forums.gentoo.org\/viewtopic-t-1147832-postdays-0-postorder-asc-start-25.html\n\nHe also confirmed that this patch fixes the issue. In summary this happened:\n\nAfter updating wpa_supplicant from 2.9 to 2.10 the kernel crashed with a\n\"divide error: 0000\" when connecting to an AP. Control port tx now tries to\nuse IEEE80211_AC_VO for the priority, which wpa_supplicants starts to use in\n2.10.\n\nSince only the rtl8187se part of the driver supports QoS, the priority\nof the skb is set to IEEE80211_AC_BE (2) by mac80211 for rtl8180\/rtl8185\ncards.\n\nrtl8180 is then unconditionally reading out the priority and finally crashes on\ndrivers\/net\/wireless\/realtek\/rtl818x\/rtl8180\/dev.c line 544 without this\npatch:\n\tidx = (ring->idx + skb_queue_len(&ring->queue)) % ring->entries\n\n\"ring->entries\" is zero for rtl8180\/rtl8185 cards, tx_ring[2] never got\ninitialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6ad81ad0cf5744738ce94c8e64051ddd80a1734c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/746285cf81dc19502ab238249d75f5990bd2d231","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/769ec2a824deae2f1268dfda14999a4d14d0d0c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98e55b0b876bde3353f4e074883d66ecb55c65a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ad1981fc4de3afb7db3e8eb5a6a52d4c7d0d577","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d5e96cc1f1720019ce27b127a31695148d38bb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5dca2cd3f0239512da808598b4e70557eb4c2a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8ce58ab80faaea015c206382041ff3bcf5495ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7e30dfc166d33470bba31a42f9bbc346e5409d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49327","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.510","lastModified":"2025-02-26T07:01:09.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: avoid journal no-space deadlock by reserving 1 journal bucket\n\nThe journal no-space deadlock was reported time to time. Such deadlock\ncan happen in the following situation.\n\nWhen all journal buckets are fully filled by active jset with heavy\nwrite I\/O load, the cache set registration (after a reboot) will load\nall active jsets and inserting them into the btree again (which is\ncalled journal replay). If a journaled bkey is inserted into a btree\nnode and results btree node split, new journal request might be\ntriggered. For example, the btree grows one more level after the node\nsplit, then the root node record in cache device super block will be\nupgrade by bch_journal_meta() from bch_btree_set_root(). But there is no\nspace in journal buckets, the journal replay has to wait for new journal\nbucket to be reclaimed after at least one journal bucket replayed. This\nis one example that how the journal no-space deadlock happens.\n\nThe solution to avoid the deadlock is to reserve 1 journal bucket in\nrun time, and only permit the reserved journal bucket to be used during\ncache set registration procedure for things like journal replay. Then\nthe journal space will never be fully filled, there is no chance for\njournal no-space deadlock to happen anymore.\n\nThis patch adds a new member \"bool do_reserve\" in struct journal, it is\ninititalized to 0 (false) when struct journal is allocated, and set to\n1 (true) by bch_journal_space_reserve() when all initialization done in\nrun_cache_set(). In the run time when journal_reclaim() tries to\nallocate a new journal bucket, free_journal_buckets() is called to check\nwhether there are enough free journal buckets to use. If there is only\n1 free journal bucket and journal->do_reserve is 1 (true), the last\nbucket is reserved and free_journal_buckets() will return 0 to indicate\nno free journal bucket. Then journal_reclaim() will give up, and try\nnext time to see whetheer there is free journal bucket to allocate. By\nthis method, there is always 1 jouranl bucket reserved in run time.\n\nDuring the cache set registration, journal->do_reserve is 0 (false), so\nthe reserved journal bucket can be used to avoid the no-space deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1dda32aed6f62c163f38ff947ef5b3360e329159","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32feee36c30ea06e38ccb8ae6e5c44c6eec790a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5607652823ac65e2c6885e73bd46d5a4f9a20363","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59afd4f287900c8187e968a4153ed35e6b48efce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6332ea3e35efa12dc08f0cbf5faea5e6e8eb0497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49328","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.610","lastModified":"2025-02-26T07:01:09.610","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: fix use-after-free by removing a non-RCU wcid pointer\n\nFixes an issue caught by KASAN about use-after-free in mt76_txq_schedule\nby protecting mtxq->wcid with rcu_lock between mt76_txq_schedule and\nsta_info_[alloc, free].\n\n[18853.876689] ==================================================================\n[18853.876751] BUG: KASAN: use-after-free in mt76_txq_schedule+0x204\/0xaf8 [mt76]\n[18853.876773] Read of size 8 at addr ffffffaf989a2138 by task mt76-tx phy0\/883\n[18853.876786]\n[18853.876810] CPU: 5 PID: 883 Comm: mt76-tx phy0 Not tainted 5.10.100-fix-510-56778d365941-kasan #5 0b01fbbcf41a530f52043508fec2e31a4215\n\n[18853.876840] Call trace:\n[18853.876861]  dump_backtrace+0x0\/0x3ec\n[18853.876878]  show_stack+0x20\/0x2c\n[18853.876899]  dump_stack+0x11c\/0x1ac\n[18853.876918]  print_address_description+0x74\/0x514\n[18853.876934]  kasan_report+0x134\/0x174\n[18853.876948]  __asan_report_load8_noabort+0x44\/0x50\n[18853.876976]  mt76_txq_schedule+0x204\/0xaf8 [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2]\n[18853.877002]  mt76_txq_schedule_all+0x2c\/0x48 [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2]\n[18853.877030]  mt7921_tx_worker+0xa0\/0x1cc [mt7921_common f0875ebac9d7b4754e1010549e7db50fbd90a047]\n[18853.877054]  __mt76_worker_fn+0x190\/0x22c [mt76 074e03e4640e97fe7405ee1fab547b81c4fa45d2]\n[18853.877071]  kthread+0x2f8\/0x3b8\n[18853.877087]  ret_from_fork+0x10\/0x30\n[18853.877098]\n[18853.877112] Allocated by task 941:\n[18853.877131]  kasan_save_stack+0x38\/0x68\n[18853.877147]  __kasan_kmalloc+0xd4\/0xfc\n[18853.877163]  kasan_kmalloc+0x10\/0x1c\n[18853.877177]  __kmalloc+0x264\/0x3c4\n[18853.877294]  sta_info_alloc+0x460\/0xf88 [mac80211]\n[18853.877410]  ieee80211_prep_connection+0x204\/0x1ee0 [mac80211]\n[18853.877523]  ieee80211_mgd_auth+0x6c4\/0xa4c [mac80211]\n[18853.877635]  ieee80211_auth+0x20\/0x2c [mac80211]\n[18853.877733]  rdev_auth+0x7c\/0x438 [cfg80211]\n[18853.877826]  cfg80211_mlme_auth+0x26c\/0x390 [cfg80211]\n[18853.877919]  nl80211_authenticate+0x6d4\/0x904 [cfg80211]\n[18853.877938]  genl_rcv_msg+0x748\/0x93c\n[18853.877954]  netlink_rcv_skb+0x160\/0x2a8\n[18853.877969]  genl_rcv+0x3c\/0x54\n[18853.877985]  netlink_unicast_kernel+0x104\/0x1ec\n[18853.877999]  netlink_unicast+0x178\/0x268\n[18853.878015]  netlink_sendmsg+0x3cc\/0x5f0\n[18853.878030]  sock_sendmsg+0xb4\/0xd8\n[18853.878043]  ____sys_sendmsg+0x2f8\/0x53c\n[18853.878058]  ___sys_sendmsg+0xe8\/0x150\n[18853.878071]  __sys_sendmsg+0xc4\/0x1f4\n[18853.878087]  __arm64_compat_sys_sendmsg+0x88\/0x9c\n[18853.878101]  el0_svc_common+0x1b4\/0x390\n[18853.878115]  do_el0_svc_compat+0x8c\/0xdc\n[18853.878131]  el0_svc_compat+0x10\/0x1c\n[18853.878146]  el0_sync_compat_handler+0xa8\/0xcc\n[18853.878161]  el0_sync_compat+0x188\/0x1c0\n[18853.878171]\n[18853.878183] Freed by task 10927:\n[18853.878200]  kasan_save_stack+0x38\/0x68\n[18853.878215]  kasan_set_track+0x28\/0x3c\n[18853.878228]  kasan_set_free_info+0x24\/0x48\n[18853.878244]  __kasan_slab_free+0x11c\/0x154\n[18853.878259]  kasan_slab_free+0x14\/0x24\n[18853.878273]  slab_free_freelist_hook+0xac\/0x1b0\n[18853.878287]  kfree+0x104\/0x390\n[18853.878402]  sta_info_free+0x198\/0x210 [mac80211]\n[18853.878515]  __sta_info_destroy_part2+0x230\/0x2d4 [mac80211]\n[18853.878628]  __sta_info_flush+0x300\/0x37c [mac80211]\n[18853.878740]  ieee80211_set_disassoc+0x2cc\/0xa7c [mac80211]\n[18853.878851]  ieee80211_mgd_deauth+0x4a4\/0x10a0 [mac80211]\n[18853.878962]  ieee80211_deauth+0x20\/0x2c [mac80211]\n[18853.879057]  rdev_deauth+0x7c\/0x438 [cfg80211]\n[18853.879150]  cfg80211_mlme_deauth+0x274\/0x414 [cfg80211]\n[18853.879243]  cfg80211_mlme_down+0xe4\/0x118 [cfg80211]\n[18853.879335]  cfg80211_disconnect+0x218\/0x2d8 [cfg80211]\n[18853.879427]  __cfg80211_leave+0x17c\/0x240 [cfg80211]\n[18853.879519]  cfg80211_leave+0x3c\/0x58 [cfg80211]\n[18853.879611]  wiphy_suspend+0xdc\/0x200 [cfg80211]\n[18853.879628]  dpm_run_callback+0x58\/0x408\n[18853.879642]  __device_suspend+0x4cc\/0x864\n[18853.879658]  async_suspend+0x34\/0xf4\n[18\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4448327b41738dbfcda680eb4935ff835568f468","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51fb1278aa57ae0fc54adaa786e1965362bed4fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5f77f1dbb59feae81f88e44551e8e1d8a802d9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e55bcdd0bf34a8b10d45ce80ebb3164c5292a17d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49329","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.703","lastModified":"2025-02-26T07:01:09.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvduse: Fix NULL pointer dereference on sysfs access\n\nThe control device has no drvdata. So we will get a\nNULL pointer dereference when accessing control\ndevice's msg_timeout attribute via sysfs:\n\n[ 132.841881][ T3644] BUG: kernel NULL pointer dereference, address: 00000000000000f8\n[ 132.850619][ T3644] RIP: 0010:msg_timeout_show (drivers\/vdpa\/vdpa_user\/vduse_dev.c:1271)\n[ 132.869447][ T3644] dev_attr_show (drivers\/base\/core.c:2094)\n[ 132.870215][ T3644] sysfs_kf_seq_show (fs\/sysfs\/file.c:59)\n[ 132.871164][ T3644] ? device_remove_bin_file (drivers\/base\/core.c:2088)\n[ 132.872082][ T3644] kernfs_seq_show (fs\/kernfs\/file.c:164)\n[ 132.872838][ T3644] seq_read_iter (fs\/seq_file.c:230)\n[ 132.873578][ T3644] ? __vmalloc_area_node (mm\/vmalloc.c:3041)\n[ 132.874532][ T3644] kernfs_fop_read_iter (fs\/kernfs\/file.c:238)\n[ 132.875513][ T3644] __kernel_read (fs\/read_write.c:440 (discriminator 1))\n[ 132.876319][ T3644] kernel_read (fs\/read_write.c:459)\n[ 132.877129][ T3644] kernel_read_file (fs\/kernel_read_file.c:94)\n[ 132.877978][ T3644] kernel_read_file_from_fd (include\/linux\/file.h:45 fs\/kernel_read_file.c:186)\n[ 132.879019][ T3644] __do_sys_finit_module (kernel\/module.c:4207)\n[ 132.879930][ T3644] __ia32_sys_finit_module (kernel\/module.c:4189)\n[ 132.880930][ T3644] do_int80_syscall_32 (arch\/x86\/entry\/common.c:112 arch\/x86\/entry\/common.c:132)\n[ 132.881847][ T3644] entry_INT80_compat (arch\/x86\/entry\/entry_64_compat.S:419)\n\nTo fix it, don't create the unneeded attribute for\ncontrol device anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30fd1b56621e187346f65d01fe34870634b15188","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a7a81f4835dfda11f39fdd27586da14331896eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b22fdee17ec62604060fb0fda5e1414b634666e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b27ee76c74dc831d6e092eaebc2dfc9c0beed1c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49330","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.797","lastModified":"2025-02-26T07:01:09.797","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: fix tcp_mtup_probe_success vs wrong snd_cwnd\n\nsyzbot got a new report [1] finally pointing to a very old bug,\nadded in initial support for MTU probing.\n\ntcp_mtu_probe() has checks about starting an MTU probe if\ntcp_snd_cwnd(tp) >= 11.\n\nBut nothing prevents tcp_snd_cwnd(tp) to be reduced later\nand before the MTU probe succeeds.\n\nThis bug would lead to potential zero-divides.\n\nDebugging added in commit 40570375356c (\"tcp: add accessors\nto read\/set tp->snd_cwnd\") has paid off :)\n\nWhile we are at it, address potential overflows in this code.\n\n[1]\nWARNING: CPU: 1 PID: 14132 at include\/net\/tcp.h:1219 tcp_mtup_probe_success+0x366\/0x570 net\/ipv4\/tcp_input.c:2712\nModules linked in:\nCPU: 1 PID: 14132 Comm: syz-executor.2 Not tainted 5.18.0-syzkaller-07857-gbabf0bb978e3 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:tcp_snd_cwnd_set include\/net\/tcp.h:1219 [inline]\nRIP: 0010:tcp_mtup_probe_success+0x366\/0x570 net\/ipv4\/tcp_input.c:2712\nCode: 74 08 48 89 ef e8 da 80 17 f9 48 8b 45 00 65 48 ff 80 80 03 00 00 48 83 c4 30 5b 41 5c 41 5d 41 5e 41 5f 5d c3 e8 aa b0 c5 f8 <0f> 0b e9 16 fe ff ff 48 8b 4c 24 08 80 e1 07 38 c1 0f 8c c7 fc ff\nRSP: 0018:ffffc900079e70f8 EFLAGS: 00010287\nRAX: ffffffff88c0f7f6 RBX: ffff8880756e7a80 RCX: 0000000000040000\nRDX: ffffc9000c6c4000 RSI: 0000000000031f9e RDI: 0000000000031f9f\nRBP: 0000000000000000 R08: ffffffff88c0f606 R09: ffffc900079e7520\nR10: ffffed101011226d R11: 1ffff1101011226c R12: 1ffff1100eadcf50\nR13: ffff8880756e72c0 R14: 1ffff1100eadcf89 R15: dffffc0000000000\nFS:  00007f643236e700(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f1ab3f1e2a0 CR3: 0000000064fe7000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n tcp_clean_rtx_queue+0x223a\/0x2da0 net\/ipv4\/tcp_input.c:3356\n tcp_ack+0x1962\/0x3c90 net\/ipv4\/tcp_input.c:3861\n tcp_rcv_established+0x7c8\/0x1ac0 net\/ipv4\/tcp_input.c:5973\n tcp_v6_do_rcv+0x57b\/0x1210 net\/ipv6\/tcp_ipv6.c:1476\n sk_backlog_rcv include\/net\/sock.h:1061 [inline]\n __release_sock+0x1d8\/0x4c0 net\/core\/sock.c:2849\n release_sock+0x5d\/0x1c0 net\/core\/sock.c:3404\n sk_stream_wait_memory+0x700\/0xdc0 net\/core\/stream.c:145\n tcp_sendmsg_locked+0x111d\/0x3fc0 net\/ipv4\/tcp.c:1410\n tcp_sendmsg+0x2c\/0x40 net\/ipv4\/tcp.c:1448\n sock_sendmsg_nosec net\/socket.c:714 [inline]\n sock_sendmsg net\/socket.c:734 [inline]\n __sys_sendto+0x439\/0x5c0 net\/socket.c:2119\n __do_sys_sendto net\/socket.c:2131 [inline]\n __se_sys_sendto net\/socket.c:2127 [inline]\n __x64_sys_sendto+0xda\/0xf0 net\/socket.c:2127\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x2b\/0x70 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x46\/0xb0\nRIP: 0033:0x7f6431289109\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f643236e168 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 00007f643139c100 RCX: 00007f6431289109\nRDX: 00000000d0d0c2ac RSI: 0000000020000080 RDI: 000000000000000a\nRBP: 00007f64312e308d R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007fff372533af R14: 00007f643236e300 R15: 0000000000022000"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11825765291a93d8e7f44230da67b9f607c777bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29e13f6b38f0816af2012e0725507754e8f4569c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38ca71a24cd4845021eed35fd2594d89dba9a5a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42726877453afdbe1508a8a96884ea907741d9a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/602b338e3c3cd7f935f3f5011882961d074e5ac1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90385f2b65d0cd2b3b1ac8909f0cc6dd31062cfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ba2b4ac35935f05ac98cff722f36ba07d62270e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa7f333efd1138a68517a6a6a69ae540dd59d800","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2845e1504a3bc4f3381394f057e8b63cb5f3f7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49331","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.900","lastModified":"2025-02-26T07:01:09.900","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: st21nfca: fix memory leaks in EVT_TRANSACTION handling\n\nError paths do not free previously allocated memory. Add devm_kfree() to\nthose failure paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3eca2c42daa4659965db6817479027cbc6df7899","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54423649bc0ed464b75807a7cf2857a5871f738f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55904086041ba4ee4070187b36590f8f8d6df4cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/593773088d615a46a42c97e01a0550d192bb7f74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fce324b530dd74750ad870699e33eeed1029ded","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/996419e0594abb311fb958553809f24f38e7abbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d221ce54ce331c1a23be71eebf57f6a088632383","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db836b97464d44340b568e041fd24602858713f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f444ecd3f57f4ba5090fe8b6756933e37de4226e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49332","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:09.997","lastModified":"2025-02-26T07:01:09.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Address NULL pointer dereference after starget_to_rport()\n\nCalls to starget_to_rport() may return NULL.  Add check for NULL rport\nbefore dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/68fcff1127e4995ddbd4b6861892a25c23db3f70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f808bd78e8296b4ded813b7182988d57e1f6176","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49333","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.090","lastModified":"2025-02-26T07:01:10.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: E-Switch, pair only capable devices\n\nOFFLOADS paring using devcom is possible only on devices\nthat support LAG. Filter based on lag capabilities.\n\nThis fixes an issue where mlx5_get_next_phys_dev() was\ncalled without holding the interface lock.\n\nThis issue was found when commit\nbc4c2f2e0179 (\"net\/mlx5: Lag, filter non compatible devices\")\nadded an assert that verifies the interface lock is held.\n\nWARNING: CPU: 9 PID: 1706 at drivers\/net\/ethernet\/mellanox\/mlx5\/core\/dev.c:642 mlx5_get_next_phys_dev+0xd2\/0x100 [mlx5_core]\nModules linked in: mlx5_vdpa vringh vhost_iotlb vdpa mlx5_ib mlx5_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_umad ib_ipoib ib_cm ib_uverbs ib_core overlay fuse [last unloaded: mlx5_core]\nCPU: 9 PID: 1706 Comm: devlink Not tainted 5.18.0-rc7+ #11\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:mlx5_get_next_phys_dev+0xd2\/0x100 [mlx5_core]\nCode: 02 00 75 48 48 8b 85 80 04 00 00 5d c3 31 c0 5d c3 be ff ff ff ff 48 c7 c7 08 41 5b a0 e8 36 87 28 e3 85 c0 0f 85 6f ff ff ff <0f> 0b e9 68 ff ff ff 48 c7 c7 0c 91 cc 84 e8 cb 36 6f e1 e9 4d ff\nRSP: 0018:ffff88811bf47458 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88811b398000 RCX: 0000000000000001\nRDX: 0000000080000000 RSI: ffffffffa05b4108 RDI: ffff88812daaaa78\nRBP: ffff88812d050380 R08: 0000000000000001 R09: ffff88811d6b3437\nR10: 0000000000000001 R11: 00000000fddd3581 R12: ffff88815238c000\nR13: ffff88812d050380 R14: ffff8881018aa7e0 R15: ffff88811d6b3428\nFS:  00007fc82e18ae80(0000) GS:ffff88842e080000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f9630d1b421 CR3: 0000000149802004 CR4: 0000000000370ea0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n mlx5_esw_offloads_devcom_event+0x99\/0x3b0 [mlx5_core]\n mlx5_devcom_send_event+0x167\/0x1d0 [mlx5_core]\n esw_offloads_enable+0x1153\/0x1500 [mlx5_core]\n ? mlx5_esw_offloads_controller_valid+0x170\/0x170 [mlx5_core]\n ? wait_for_completion_io_timeout+0x20\/0x20\n ? mlx5_rescan_drivers_locked+0x318\/0x810 [mlx5_core]\n mlx5_eswitch_enable_locked+0x586\/0xc50 [mlx5_core]\n ? mlx5_eswitch_disable_pf_vf_vports+0x1d0\/0x1d0 [mlx5_core]\n ? mlx5_esw_try_lock+0x1b\/0xb0 [mlx5_core]\n ? mlx5_eswitch_enable+0x270\/0x270 [mlx5_core]\n ? __debugfs_create_file+0x260\/0x3e0\n mlx5_devlink_eswitch_mode_set+0x27e\/0x870 [mlx5_core]\n ? mutex_lock_io_nested+0x12c0\/0x12c0\n ? esw_offloads_disable+0x250\/0x250 [mlx5_core]\n ? devlink_nl_cmd_trap_get_dumpit+0x470\/0x470\n ? rcu_read_lock_sched_held+0x3f\/0x70\n devlink_nl_cmd_eswitch_set_doit+0x217\/0x620"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cef0b7eb044bb8cfdaff4c1db55a8fd442f6bc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3008e6a0049361e731b803c60fe8f3ab44e1d73f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdbcdddb8076a09aa6ddaf20fd911fc787dca0e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49334","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.180","lastModified":"2025-02-26T07:01:10.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/huge_memory: Fix xarray node memory leak\n\nIf xas_split_alloc() fails to allocate the necessary nodes to complete the\nxarray entry split, it sets the xa_state to -ENOMEM, which xas_nomem()\nthen interprets as \"Please allocate more memory\", not as \"Please free\nany unnecessary memory\" (which was the intended outcome).  It's confusing\nto use xas_nomem() to free memory in this context, so call xas_destroy()\ninstead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/69a37a8ba1b408a1c7616494aa7018e4b3844cbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95c8181b4947e000f3b9b8e5918d899fce77b93d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0c84962e297927ba57fd6ddc2bb000c9d149655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49335","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.270","lastModified":"2025-02-26T07:01:10.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu\/cs: make commands with 0 chunks illegal behaviour.\n\nSubmitting a cs with 0 chunks, causes an oops later, found trying\nto execute the wrong userspace driver.\n\nMESA_LOADER_DRIVER_OVERRIDE=v3d glxinfo\n\n[172536.665184] BUG: kernel NULL pointer dereference, address: 00000000000001d8\n[172536.665188] #PF: supervisor read access in kernel mode\n[172536.665189] #PF: error_code(0x0000) - not-present page\n[172536.665191] PGD 6712a0067 P4D 6712a0067 PUD 5af9ff067 PMD 0\n[172536.665195] Oops: 0000 [#1] SMP NOPTI\n[172536.665197] CPU: 7 PID: 2769838 Comm: glxinfo Tainted: P           O      5.10.81 #1-NixOS\n[172536.665199] Hardware name: To be filled by O.E.M. To be filled by O.E.M.\/CROSSHAIR V FORMULA-Z, BIOS 2201 03\/23\/2015\n[172536.665272] RIP: 0010:amdgpu_cs_ioctl+0x96\/0x1ce0 [amdgpu]\n[172536.665274] Code: 75 18 00 00 4c 8b b2 88 00 00 00 8b 46 08 48 89 54 24 68 49 89 f7 4c 89 5c 24 60 31 d2 4c 89 74 24 30 85 c0 0f 85 c0 01 00 00 <48> 83 ba d8 01 00 00 00 48 8b b4 24 90 00 00 00 74 16 48 8b 46 10\n[172536.665276] RSP: 0018:ffffb47c0e81bbe0 EFLAGS: 00010246\n[172536.665277] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n[172536.665278] RDX: 0000000000000000 RSI: ffffb47c0e81be28 RDI: ffffb47c0e81bd68\n[172536.665279] RBP: ffff936524080010 R08: 0000000000000000 R09: ffffb47c0e81be38\n[172536.665281] R10: ffff936524080010 R11: ffff936524080000 R12: ffffb47c0e81bc40\n[172536.665282] R13: ffffb47c0e81be28 R14: ffff9367bc410000 R15: ffffb47c0e81be28\n[172536.665283] FS:  00007fe35e05d740(0000) GS:ffff936c1edc0000(0000) knlGS:0000000000000000\n[172536.665284] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[172536.665286] CR2: 00000000000001d8 CR3: 0000000532e46000 CR4: 00000000000406e0\n[172536.665287] Call Trace:\n[172536.665322]  ? amdgpu_cs_find_mapping+0x110\/0x110 [amdgpu]\n[172536.665332]  drm_ioctl_kernel+0xaa\/0xf0 [drm]\n[172536.665338]  drm_ioctl+0x201\/0x3b0 [drm]\n[172536.665369]  ? amdgpu_cs_find_mapping+0x110\/0x110 [amdgpu]\n[172536.665372]  ? selinux_file_ioctl+0x135\/0x230\n[172536.665399]  amdgpu_drm_ioctl+0x49\/0x80 [amdgpu]\n[172536.665403]  __x64_sys_ioctl+0x83\/0xb0\n[172536.665406]  do_syscall_64+0x33\/0x40\n[172536.665409]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nBug: https:\/\/gitlab.freedesktop.org\/drm\/amd\/-\/issues\/2018"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15c3bcc9b5349d40207e5f8d4d799b8b4b7d13b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20b947e5a3c74c5084d661c097517a554989d462","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31ab27b14daaa75541a415c6794d6f3567fea44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70276460e914d560e96bfc208695a872fe9469c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7086a23890d255bb5761604e39174b20d06231a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8189f44270db1be78169e11eec51a3eeb980bc63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa25acbe96692e4bf8482311c293f72d8c6034c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be585921f29df5422a39c952d188b418ad48ffab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c12984cdb077b9042d2dc20ca18cb16a87bcc774","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49336","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.370","lastModified":"2025-02-26T07:01:10.370","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/etnaviv: check for reaped mapping in etnaviv_iommu_unmap_gem\n\nWhen the mapping is already reaped the unmap must be a no-op, as we\nwould otherwise try to remove the mapping twice, corrupting the involved\ndata structures."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03bd455a79f69d97fee3e3b212ab754442f10e5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19323b3671a85788569d15685c8f83a05ec48cbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/436cff507f2a41230baacc3e2ef1d3b2d2653f40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/461c0fdf9434188875da9f10cfc86065866bb797","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f4edec081cb7c97c5e928529d0e1b0dbbffb83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e168c25526cd0368af098095c2ded4a008007e1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49337","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.457","lastModified":"2025-02-26T07:01:10.457","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: dlmfs: fix error handling of user_dlm_destroy_lock\n\nWhen user_dlm_destroy_lock failed, it didn't clean up the flags it set\nbefore exit.  For USER_LOCK_IN_TEARDOWN, if this function fails because of\nlock is still in used, next time when unlink invokes this function, it\nwill return succeed, and then unlink will remove inode and dentry if lock\nis not in used(file closed), but the dlm lock is still linked in dlm lock\nresource, then when bast come in, it will trigger a panic due to\nuser-after-free.  See the following panic call trace.  To fix this,\nUSER_LOCK_IN_TEARDOWN should be reverted if fail.  And also error should\nbe returned if USER_LOCK_IN_TEARDOWN is set to let user know that unlink\nfail.\n\nFor the case of ocfs2_dlm_unlock failure, besides USER_LOCK_IN_TEARDOWN,\nUSER_LOCK_BUSY is also required to be cleared.  Even though spin lock is\nreleased in between, but USER_LOCK_IN_TEARDOWN is still set, for\nUSER_LOCK_BUSY, if before every place that waits on this flag,\nUSER_LOCK_IN_TEARDOWN is checked to bail out, that will make sure no flow\nwaits on the busy flag set by user_dlm_destroy_lock(), then we can\nsimplely revert USER_LOCK_BUSY when ocfs2_dlm_unlock fails.  Fix\nuser_dlm_cluster_lock() which is the only function not following this.\n\n[  941.336392] (python,26174,16):dlmfs_unlink:562 ERROR: unlink\n004fb0000060000b5a90b8c847b72e1, error -16 from destroy\n[  989.757536] ------------[ cut here ]------------\n[  989.757709] kernel BUG at fs\/ocfs2\/dlmfs\/userdlm.c:173!\n[  989.757876] invalid opcode: 0000 [#1] SMP\n[  989.758027] Modules linked in: ksplice_2zhuk2jr_ib_ipoib_new(O)\nksplice_2zhuk2jr(O) mptctl mptbase xen_netback xen_blkback xen_gntalloc\nxen_gntdev xen_evtchn cdc_ether usbnet mii ocfs2 jbd2 rpcsec_gss_krb5\nauth_rpcgss nfsv4 nfsv3 nfs_acl nfs fscache lockd grace ocfs2_dlmfs\nocfs2_stack_o2cb ocfs2_dlm ocfs2_nodemanager ocfs2_stackglue configfs bnx2fc\nfcoe libfcoe libfc scsi_transport_fc sunrpc ipmi_devintf bridge stp llc\nrds_rdma rds bonding ib_sdp ib_ipoib rdma_ucm ib_ucm ib_uverbs ib_umad\nrdma_cm ib_cm iw_cm falcon_lsm_serviceable(PE) falcon_nf_netcontain(PE)\nmlx4_vnic falcon_kal(E) falcon_lsm_pinned_13402(E) mlx4_ib ib_sa ib_mad\nib_core ib_addr xenfs xen_privcmd dm_multipath iTCO_wdt iTCO_vendor_support\npcspkr sb_edac edac_core i2c_i801 lpc_ich mfd_core ipmi_ssif i2c_core ipmi_si\nipmi_msghandler\n[  989.760686]  ioatdma sg ext3 jbd mbcache sd_mod ahci libahci ixgbe dca ptp\npps_core vxlan udp_tunnel ip6_udp_tunnel megaraid_sas mlx4_core crc32c_intel\nbe2iscsi bnx2i cnic uio cxgb4i cxgb4 cxgb3i libcxgbi ipv6 cxgb3 mdio\nlibiscsi_tcp qla4xxx iscsi_boot_sysfs libiscsi scsi_transport_iscsi wmi\ndm_mirror dm_region_hash dm_log dm_mod [last unloaded:\nksplice_2zhuk2jr_ib_ipoib_old]\n[  989.761987] CPU: 10 PID: 19102 Comm: dlm_thread Tainted: P           OE\n4.1.12-124.57.1.el6uek.x86_64 #2\n[  989.762290] Hardware name: Oracle Corporation ORACLE SERVER\nX5-2\/ASM,MOTHERBOARD,1U, BIOS 30350100 06\/17\/2021\n[  989.762599] task: ffff880178af6200 ti: ffff88017f7c8000 task.ti:\nffff88017f7c8000\n[  989.762848] RIP: e030:[<ffffffffc07d4316>]  [<ffffffffc07d4316>]\n__user_dlm_queue_lockres.part.4+0x76\/0x80 [ocfs2_dlmfs]\n[  989.763185] RSP: e02b:ffff88017f7cbcb8  EFLAGS: 00010246\n[  989.763353] RAX: 0000000000000000 RBX: ffff880174d48008 RCX:\n0000000000000003\n[  989.763565] RDX: 0000000000120012 RSI: 0000000000000003 RDI:\nffff880174d48170\n[  989.763778] RBP: ffff88017f7cbcc8 R08: ffff88021f4293b0 R09:\n0000000000000000\n[  989.763991] R10: ffff880179c8c000 R11: 0000000000000003 R12:\nffff880174d48008\n[  989.764204] R13: 0000000000000003 R14: ffff880179c8c000 R15:\nffff88021db7a000\n[  989.764422] FS:  0000000000000000(0000) GS:ffff880247480000(0000)\nknlGS:ffff880247480000\n[  989.764685] CS:  e033 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  989.764865] CR2: ffff8000007f6800 CR3: 0000000001ae0000 CR4:\n0000000000042660\n[  989.765081] Stack:\n[  989.765167]  00000000000\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02480e2e82ae0e5588374bbbcf4fa6e4959fa174","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1434cd71ad9f3a6beda3036972983b6c4869207c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c5e26a626fe46675bceba853e12aaf13c712e10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/337e36550788dbe03254f0593a231c1c4873b20d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/733a35c00ef363a1c774d7ea486e0735b7c13a15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82bf8e7271fade40184177cb406203addc34c4a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/863e0d81b6683c4cbc588ad831f560c90e494bef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c96238fac045b289993d7bc5aae7b2d72b25c76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efb54ec548829e1d3605f0434526f86e345b1b28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49338","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.560","lastModified":"2025-02-26T07:01:10.560","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: CT: Fix cleanup of CT before cleanup of TC ct rules\n\nCT cleanup assumes that all tc rules were deleted first, and so\nis free to delete the CT shared resources (e.g the dr_action\nfwd_action which is shared for all tuples). But currently for\nuplink, this is happens in reverse, causing the below trace.\n\nCT cleanup is called from:\nmlx5e_cleanup_rep_tx()->mlx5e_cleanup_uplink_rep_tx()->\nmlx5e_rep_tc_cleanup()->mlx5e_tc_esw_cleanup()->\nmlx5_tc_ct_clean()\n\nOnly afterwards, tc cleanup is called from:\nmlx5e_cleanup_rep_tx()->mlx5e_tc_ht_cleanup()\nwhich would have deleted all the tc ct rules, and so delete\nall the offloaded tuples.\n\nFix this reversing the order of init and on cleanup, which\nwill result in tc cleanup then ct cleanup.\n\n[ 9443.593347] WARNING: CPU: 2 PID: 206774 at drivers\/net\/ethernet\/mellanox\/mlx5\/core\/steering\/dr_action.c:1882 mlx5dr_action_destroy+0x188\/0x1a0 [mlx5_core]\n[ 9443.593349] Modules linked in: act_ct nf_flow_table rdma_ucm(O) rdma_cm(O) iw_cm(O) ib_ipoib(O) ib_cm(O) ib_umad(O) mlx5_core(O-) mlxfw(O) mlxdevm(O) auxiliary(O) ib_uverbs(O) psample ib_core(O) mlx_compat(O) ip_gre gre ip_tunnel act_vlan bonding geneve esp6_offload esp6 esp4_offload esp4 act_tunnel_key vxlan ip6_udp_tunnel udp_tunnel act_mirred act_skbedit act_gact cls_flower sch_ingress nfnetlink_cttimeout nfnetlink xfrm_user xfrm_algo 8021q garp stp ipmi_devintf mrp ipmi_msghandler llc openvswitch nsh nf_conncount nf_nat mst_pciconf(O) dm_multipath sbsa_gwdt uio_pdrv_genirq uio mlxbf_pmc mlxbf_pka mlx_trio mlx_bootctl(O) bluefield_edac sch_fq_codel ip_tables ipv6 crc_ccitt btrfs zstd_compress raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor xor_neon raid6_pq raid1 raid0 crct10dif_ce i2c_mlxbf gpio_mlxbf2 mlxbf_gige aes_neon_bs aes_neon_blk [last unloaded: mlx5_ib]\n[ 9443.593419] CPU: 2 PID: 206774 Comm: modprobe Tainted: G           O      5.4.0-1023.24.gc14613d-bluefield #1\n[ 9443.593422] Hardware name: https:\/\/www.mellanox.com BlueField SoC\/BlueField SoC, BIOS BlueField:143ebaf Jan 11 2022\n[ 9443.593424] pstate: 20000005 (nzCv daif -PAN -UAO)\n[ 9443.593489] pc : mlx5dr_action_destroy+0x188\/0x1a0 [mlx5_core]\n[ 9443.593545] lr : mlx5_ct_fs_smfs_destroy+0x24\/0x30 [mlx5_core]\n[ 9443.593546] sp : ffff8000135dbab0\n[ 9443.593548] x29: ffff8000135dbab0 x28: ffff0003a6ab8e80\n[ 9443.593550] x27: 0000000000000000 x26: ffff0003e07d7000\n[ 9443.593552] x25: ffff800009609de0 x24: ffff000397fb2120\n[ 9443.593554] x23: ffff0003975c0000 x22: 0000000000000000\n[ 9443.593556] x21: ffff0003975f08c0 x20: ffff800009609de0\n[ 9443.593558] x19: ffff0003c8a13380 x18: 0000000000000014\n[ 9443.593560] x17: 0000000067f5f125 x16: 000000006529c620\n[ 9443.593561] x15: 000000000000000b x14: 0000000000000000\n[ 9443.593563] x13: 0000000000000002 x12: 0000000000000001\n[ 9443.593565] x11: ffff800011108868 x10: 0000000000000000\n[ 9443.593567] x9 : 0000000000000000 x8 : ffff8000117fb270\n[ 9443.593569] x7 : ffff0003ebc01288 x6 : 0000000000000000\n[ 9443.593571] x5 : ffff800009591ab8 x4 : fffffe000f6d9a20\n[ 9443.593572] x3 : 0000000080040001 x2 : fffffe000f6d9a20\n[ 9443.593574] x1 : ffff8000095901d8 x0 : 0000000000000025\n[ 9443.593577] Call trace:\n[ 9443.593634]  mlx5dr_action_destroy+0x188\/0x1a0 [mlx5_core]\n[ 9443.593688]  mlx5_ct_fs_smfs_destroy+0x24\/0x30 [mlx5_core]\n[ 9443.593743]  mlx5_tc_ct_clean+0x34\/0xa8 [mlx5_core]\n[ 9443.593797]  mlx5e_tc_esw_cleanup+0x58\/0x88 [mlx5_core]\n[ 9443.593851]  mlx5e_rep_tc_cleanup+0x24\/0x30 [mlx5_core]\n[ 9443.593905]  mlx5e_cleanup_rep_tx+0x6c\/0x78 [mlx5_core]\n[ 9443.593959]  mlx5e_detach_netdev+0x74\/0x98 [mlx5_core]\n[ 9443.594013]  mlx5e_netdev_change_profile+0x70\/0x180 [mlx5_core]\n[ 9443.594067]  mlx5e_netdev_attach_nic_profile+0x34\/0x40 [mlx5_core]\n[ 9443.594122]  mlx5e_vport_rep_unload+0x15c\/0x1a8 [mlx5_core]\n[ 9443.594177]  mlx5_eswitch_unregister_vport_reps+0x228\/0x298 [mlx5_core]\n[ 9443.594231]  mlx5e_rep_remove+0x2c\/0x38\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11bcc79f4bcd244145e6a2c04d5dc755303492a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/15ef9efa855cf405fadd78272e1e5d04e09a1cf3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49339","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.657","lastModified":"2025-02-26T07:01:10.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: unexport __init-annotated seg6_hmac_init()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because the caller (net\/ipv6\/seg6.c)\nand the callee (net\/ipv6\/seg6_hmac.c) belong to the same module.\nIt seems an internal function call in ipv6.ko."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1084716f76c8045eadf92a9d9a62641f3c8d8c90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/317260b3eb6384a05a8af212308fa50f3b2e8290","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e6de5037148c5a93a436b1e8d2edad3dac11755","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5801f064e35181c71857a80ff18af4dbec3c5f5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d9c1b081ad28c852a97e10dd75412546497694a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64aef8efe96c1616142c4476a05731306fc4494e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ba4416b831eeb4d185e88e73488d1d21288e63a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab8b2c2de273ec1d698a18e399896a6febb5cda0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49340","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.753","lastModified":"2025-02-26T07:01:10.753","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip_gre: test csum_start instead of transport header\n\nGRE with TUNNEL_CSUM will apply local checksum offload on\nCHECKSUM_PARTIAL packets.\n\nipgre_xmit must validate csum_start after an optional skb_pull,\nelse lco_csum may trigger an overflow. The original check was\n\n\tif (csum && skb_checksum_start(skb) < skb->data)\n\t\treturn -EINVAL;\n\nThis had false positives when skb_checksum_start is undefined:\nwhen ip_summed is not CHECKSUM_PARTIAL. A discussed refinement\nwas straightforward\n\n\tif (csum && skb->ip_summed == CHECKSUM_PARTIAL &&\n\t    skb_checksum_start(skb) < skb->data)\n\t\treturn -EINVAL;\n\nBut was eventually revised more thoroughly:\n- restrict the check to the only branch where needed, in an\n  uncommon GRE path that uses header_ops and calls skb_pull.\n- test skb_transport_header, which is set along with csum_start\n  in skb_partial_csum_set in the normal header_ops datapath.\n\nTurns out skbs can arrive in this branch without the transport\nheader set, e.g., through BPF redirection.\n\nRevise the check back to check csum_start directly, and only if\nCHECKSUM_PARTIAL. Do leave the check in the updated location.\nCheck field regardless of whether TUNNEL_CSUM is configured."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c92d813c7c9ca2212ecd879232e7d87362fce98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ffa268724656633af5f37a38c212326d98ebe8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d08bc3a5d9b2106f5c8bcf1adb73147824aa006","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7596bd7920985f7fc8579a92e48bc53ce4475b21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d21e9963bec1aad2280cdd034c8993033ef2948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6b6f98fc7605c06c0a3baa70f62c534d7b4ce58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbeb8dfa8b87ef259eef0c89e39b53962a3cf604","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49341","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.857","lastModified":"2025-02-26T07:01:10.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, arm64: Clear prog->jited_len along prog->jited\n\nsyzbot reported an illegal copy_to_user() attempt\nfrom bpf_prog_get_info_by_fd() [1]\n\nThere was no repro yet on this bug, but I think\nthat commit 0aef499f3172 (\"mm\/usercopy: Detect vmalloc overruns\")\nis exposing a prior bug in bpf arm64.\n\nbpf_prog_get_info_by_fd() looks at prog->jited_len\nto determine if the JIT image can be copied out to user space.\n\nMy theory is that syzbot managed to get a prog where prog->jited_len\nhas been set to 43, while prog->bpf_func has ben cleared.\n\nIt is not clear why copy_to_user(uinsns, NULL, ulen) is triggering\nthis particular warning.\n\nI thought find_vma_area(NULL) would not find a vm_struct.\nAs we do not hold vmap_area_lock spinlock, it might be possible\nthat the found vm_struct was garbage.\n\n[1]\nusercopy: Kernel memory exposure attempt detected from vmalloc (offset 792633534417210172, size 43)!\nkernel BUG at mm\/usercopy.c:101!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 25002 Comm: syz-executor.1 Not tainted 5.18.0-syzkaller-10139-g8291eaafed36 #0\nHardware name: linux,dummy-virt (DT)\npstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : usercopy_abort+0x90\/0x94 mm\/usercopy.c:101\nlr : usercopy_abort+0x90\/0x94 mm\/usercopy.c:89\nsp : ffff80000b773a20\nx29: ffff80000b773a30 x28: faff80000b745000 x27: ffff80000b773b48\nx26: 0000000000000000 x25: 000000000000002b x24: 0000000000000000\nx23: 00000000000000e0 x22: ffff80000b75db67 x21: 0000000000000001\nx20: 000000000000002b x19: ffff80000b75db3c x18: 00000000fffffffd\nx17: 2820636f6c6c616d x16: 76206d6f72662064 x15: 6574636574656420\nx14: 74706d6574746120 x13: 2129333420657a69 x12: 73202c3237313031\nx11: 3237313434333533 x10: 3336323937207465 x9 : 657275736f707865\nx8 : ffff80000a30c550 x7 : ffff80000b773830 x6 : ffff80000b773830\nx5 : 0000000000000000 x4 : ffff00007fbbaa10 x3 : 0000000000000000\nx2 : 0000000000000000 x1 : f7ff000028fc0000 x0 : 0000000000000064\nCall trace:\n usercopy_abort+0x90\/0x94 mm\/usercopy.c:89\n check_heap_object mm\/usercopy.c:186 [inline]\n __check_object_size mm\/usercopy.c:252 [inline]\n __check_object_size+0x198\/0x36c mm\/usercopy.c:214\n check_object_size include\/linux\/thread_info.h:199 [inline]\n check_copy_size include\/linux\/thread_info.h:235 [inline]\n copy_to_user include\/linux\/uaccess.h:159 [inline]\n bpf_prog_get_info_by_fd.isra.0+0xf14\/0xfdc kernel\/bpf\/syscall.c:3993\n bpf_obj_get_info_by_fd+0x12c\/0x510 kernel\/bpf\/syscall.c:4253\n __sys_bpf+0x900\/0x2150 kernel\/bpf\/syscall.c:4956\n __do_sys_bpf kernel\/bpf\/syscall.c:5021 [inline]\n __se_sys_bpf kernel\/bpf\/syscall.c:5019 [inline]\n __arm64_sys_bpf+0x28\/0x40 kernel\/bpf\/syscall.c:5019\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:38 [inline]\n invoke_syscall+0x48\/0x114 arch\/arm64\/kernel\/syscall.c:52\n el0_svc_common.constprop.0+0x44\/0xec arch\/arm64\/kernel\/syscall.c:142\n do_el0_svc+0xa0\/0xc0 arch\/arm64\/kernel\/syscall.c:206\n el0_svc+0x44\/0xb0 arch\/arm64\/kernel\/entry-common.c:624\n el0t_64_sync_handler+0x1ac\/0x1b0 arch\/arm64\/kernel\/entry-common.c:642\n el0t_64_sync+0x198\/0x19c arch\/arm64\/kernel\/entry.S:581\nCode: aa0003e3 d00038c0 91248000 97fff65f (d4210000)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cf7aaff290cdc4d7cee683d4a18138b0dacac48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/10f3b29c65bb2fe0d47c2945cd0b4087be1c5218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f4d5e727aeaa610688d46c9f101f78b7f712583","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41f7c4f85d402043687e863627a1a84fa867c62d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c25a3040bc0486c41a7b63a1fb0de7cdb846ad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaf61a312af63e1cfe2264c4c5b8cd4ea3626025","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e412b3d178ea4bf746f6b8ee086761613704c6be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49342","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:10.953","lastModified":"2025-02-26T07:01:10.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: bgmac: Fix refcount leak in bcma_mdio_mii_register\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7fb1fe7d9a167205413f1de8db9f7d0f82c78286","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b51996e35bbfcc7a27d94dfeed5cc2429b2c0df4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8d91399775c55162073bb2aca061ec42e3d4bc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49343","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.040","lastModified":"2025-02-26T07:01:11.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid cycles in directory h-tree\n\nA maliciously corrupted filesystem can contain cycles in the h-tree\nstored inside a directory. That can easily lead to the kernel corrupting\ntree nodes that were already verified under its hands while doing a node\nsplit and consequently accessing unallocated memory. Fix the problem by\nverifying traversed block numbers are unique."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24b8206fec1db21d7e82f21f0b2ff5e5672cf5b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a3ce941645407cd0b0b7f01ad9e2ea3770f46cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ba733f879c2a88910744647e41edeefbc0d92b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6084240bfc44bf265ab6ae7d96980469b05be0f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3ad9ff6f06c1dc6abf7437691c88ca3d6da3ac0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5a16a6df2c16eaf4de04948553ef0089dee463f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e157c8f87e8fac112d6c955e69a60cdb9bc80a60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff4cafa51762da3824881a9000ca421d4b78b138","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49344","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.140","lastModified":"2025-02-26T07:01:11.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Fix a data-race in unix_dgram_peer_wake_me().\n\nunix_dgram_poll() calls unix_dgram_peer_wake_me() without `other`'s\nlock held and check if its receive queue is full.  Here we need to\nuse unix_recvq_full_lockless() instead of unix_recvq_full(), otherwise\nKCSAN will report a data-race."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/556720013c36c193d9cbfb06e7b33e51f0c39fbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/662a80946ce13633ae90a55379f1346c10f0c432","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71e8bfc7f838cabc60cba24e09ca84c4f8321ab2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8801eb3ccd2e4e3b1a01449383e3321ae6dbd9d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95f0ba806277733bf6024e23e27e1be773701cca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c61848500a3fd6867dfa4834b8c7f97133eceb9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c926ae58f24f7bd55aa2ea4add9f952032507913","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49345","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.237","lastModified":"2025-02-26T07:01:11.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: xfrm: unexport __init-annotated xfrm4_protocol_init()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because the only in-tree call-site,\nnet\/ipv4\/xfrm4_policy.c is never compiled as modular.\n(CONFIG_XFRM is boolean)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b253fbc9f7b5db18d716436bdcf8ecef09fd63d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31f3c6a4dcd3260a386e62cef2d5b36e902600a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a388f08d8784af48f352193d2b72aaf167a57a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85a055c03691e51499123194a14a0c249cf33227","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be3884d5cd04ccd58294b83a02d70b7c5fca19d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c58d82a1264813e69119c13e9804e2e60b664ad5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e04d59cfe0c0129df7aba7ef7bb17b96be2a64f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e53cd3814504b2cadaba4d5a8a07eeea9ddacd03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef6d2354de238b065d8799c80da4be9a6af18e39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49346","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.340","lastModified":"2025-02-26T07:01:11.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: lantiq_gswip: Fix refcount leak in gswip_gphy_fw_list\n\nEvery iteration of for_each_available_child_of_node() decrements\nthe reference count of the previous node.\nwhen breaking early from a for_each_available_child_of_node() loop,\nwe need to explicitly call of_node_put() on the gphy_fw_np.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0737e018a05e2aa352828c52bdeed3b02cff2930","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e007ac6fa7c9c94ad84da075c5c504afad690a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32cd78c5610f02a929f63cac985e73692d05f33e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54d6802c4d83fa8de7696cfec06f475d5fd92d27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c8df6fad43d9d5d77f281f794b2a93cd02fd1a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2ae49a113a5344232f1ebb93bcf18bbd11e9c39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49347","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.433","lastModified":"2025-02-26T07:01:11.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug_on in ext4_writepages\n\nwe got issue as follows:\nEXT4-fs error (device loop0): ext4_mb_generate_buddy:1141: group 0, block bitmap and bg descriptor inconsistent: 25 vs 31513 free cls\n------------[ cut here ]------------\nkernel BUG at fs\/ext4\/inode.c:2708!\ninvalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 2 PID: 2147 Comm: rep Not tainted 5.18.0-rc2-next-20220413+ #155\nRIP: 0010:ext4_writepages+0x1977\/0x1c10\nRSP: 0018:ffff88811d3e7880 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000001 RCX: ffff88811c098000\nRDX: 0000000000000000 RSI: ffff88811c098000 RDI: 0000000000000002\nRBP: ffff888128140f50 R08: ffffffffb1ff6387 R09: 0000000000000000\nR10: 0000000000000007 R11: ffffed10250281ea R12: 0000000000000001\nR13: 00000000000000a4 R14: ffff88811d3e7bb8 R15: ffff888128141028\nFS:  00007f443aed9740(0000) GS:ffff8883aef00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020007200 CR3: 000000011c2a4000 CR4: 00000000000006e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n do_writepages+0x130\/0x3a0\n filemap_fdatawrite_wbc+0x83\/0xa0\n filemap_flush+0xab\/0xe0\n ext4_alloc_da_blocks+0x51\/0x120\n __ext4_ioctl+0x1534\/0x3210\n __x64_sys_ioctl+0x12c\/0x170\n do_syscall_64+0x3b\/0x90\n\nIt may happen as follows:\n1. write inline_data inode\nvfs_write\n  new_sync_write\n    ext4_file_write_iter\n      ext4_buffered_write_iter\n        generic_perform_write\n          ext4_da_write_begin\n            ext4_da_write_inline_data_begin -> If inline data size too\n            small will allocate block to write, then mapping will has\n            dirty page\n                ext4_da_convert_inline_data_to_extent ->clear EXT4_STATE_MAY_INLINE_DATA\n2. fallocate\ndo_vfs_ioctl\n  ioctl_preallocate\n    vfs_fallocate\n      ext4_fallocate\n        ext4_convert_inline_data\n          ext4_convert_inline_data_nolock\n            ext4_map_blocks -> fail will goto restore data\n            ext4_restore_inline_data\n              ext4_create_inline_data\n              ext4_write_inline_data\n              ext4_set_inode_state -> set inode EXT4_STATE_MAY_INLINE_DATA\n3. writepages\n__ext4_ioctl\n  ext4_alloc_da_blocks\n    filemap_flush\n      filemap_fdatawrite_wbc\n        do_writepages\n          ext4_writepages\n            if (ext4_has_inline_data(inode))\n              BUG_ON(ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA))\n\nThe root cause of this issue is we destory inline data until call\next4_writepages under delay allocation mode.  But there maybe already\nconvert from inline to extent.  To solve this issue, we call\nfilemap_flush first.."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/013f12bdedb96816aaa27ee04349f4433d361f52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18a759f7f99f0b65a08ff5b7e745fc405a42bde4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19918ec7717d87d5ab825884a46b26b21375d7ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b061af037646c9cdb0afd8a8d2f1e1c06285866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1cde35417edc0370fb0179a4e38b78a15350a8d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73fd5b19285197078ee8a2e651d75d5b094a4de9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2b78f5bf2d453dda3903955efee059260787a42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de1732b5c1693ad489c5d254f124f67cb775f37d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef09ed5d37b84d18562b30cf7253e57062d0db05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49348","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.533","lastModified":"2025-02-26T07:01:11.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: filter out EXT4_FC_REPLAY from on-disk superblock field s_state\n\nThe EXT4_FC_REPLAY bit in sbi->s_mount_state is used to indicate that\nwe are in the middle of replay the fast commit journal.  This was\nactually a mistake, since the sbi->s_mount_info is initialized from\nes->s_state.  Arguably s_mount_state is misleadingly named, but the\nname is historical --- s_mount_state and s_state dates back to ext2.\n\nWhat should have been used is the ext4_{set,clear,test}_mount_flag()\ninline functions, which sets EXT4_MF_* bits in sbi->s_mount_flags.\n\nThe problem with using EXT4_FC_REPLAY is that a maliciously corrupted\nsuperblock could result in EXT4_FC_REPLAY getting set in\ns_mount_state.  This bypasses some sanity checks, and this can trigger\na BUG() in ext4_es_cache_extent().  As a easy-to-backport-fix, filter\nout the EXT4_FC_REPLAY bit for now.  We should eventually transition\naway from EXT4_FC_REPLAY to something like EXT4_MF_REPLAY."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55b4dbb29054a05d839562f6d635ce05669b016d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af2f1932743fb52ebcb008ad7ac500d9df0aa796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b99fd73418350dea360da8311e87a6a7b0e15a4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c878bea3c9d724ddfa05a813f30de3d25a0ba83f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc5b09cb6dacd4b32640537929ab4ee8fb2b9e04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49349","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.623","lastModified":"2025-02-26T07:01:11.623","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix use-after-free in ext4_rename_dir_prepare\n\nWe got issue as follows:\nEXT4-fs (loop0): mounted filesystem without journal. Opts: ,errors=continue\next4_get_first_dir_block: bh->b_data=0xffff88810bee6000 len=34478\next4_get_first_dir_block: *parent_de=0xffff88810beee6ae bh->b_data=0xffff88810bee6000\next4_rename_dir_prepare: [1] parent_de=0xffff88810beee6ae\n==================================================================\nBUG: KASAN: use-after-free in ext4_rename_dir_prepare+0x152\/0x220\nRead of size 4 at addr ffff88810beee6ae by task rep\/1895\n\nCPU: 13 PID: 1895 Comm: rep Not tainted 5.10.0+ #241\nCall Trace:\n dump_stack+0xbe\/0xf9\n print_address_description.constprop.0+0x1e\/0x220\n kasan_report.cold+0x37\/0x7f\n ext4_rename_dir_prepare+0x152\/0x220\n ext4_rename+0xf44\/0x1ad0\n ext4_rename2+0x11c\/0x170\n vfs_rename+0xa84\/0x1440\n do_renameat2+0x683\/0x8f0\n __x64_sys_renameat+0x53\/0x60\n do_syscall_64+0x33\/0x40\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\nRIP: 0033:0x7f45a6fc41c9\nRSP: 002b:00007ffc5a470218 EFLAGS: 00000246 ORIG_RAX: 0000000000000108\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f45a6fc41c9\nRDX: 0000000000000005 RSI: 0000000020000180 RDI: 0000000000000005\nRBP: 00007ffc5a470240 R08: 00007ffc5a470160 R09: 0000000020000080\nR10: 00000000200001c0 R11: 0000000000000246 R12: 0000000000400bb0\nR13: 00007ffc5a470320 R14: 0000000000000000 R15: 0000000000000000\n\nThe buggy address belongs to the page:\npage:00000000440015ce refcount:0 mapcount:0 mapping:0000000000000000 index:0x1 pfn:0x10beee\nflags: 0x200000000000000()\nraw: 0200000000000000 ffffea00043ff4c8 ffffea0004325608 0000000000000000\nraw: 0000000000000001 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff88810beee580: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n ffff88810beee600: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n>ffff88810beee680: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n                                  ^\n ffff88810beee700: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n ffff88810beee780: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n==================================================================\nDisabling lock debugging due to kernel taint\next4_rename_dir_prepare: [2] parent_de->inode=3537895424\next4_rename_dir_prepare: [3] dir=0xffff888124170140\next4_rename_dir_prepare: [4] ino=2\next4_rename_dir_prepare: ent->dir->i_ino=2 parent=-757071872\n\nReason is first directory entry which 'rec_len' is 34478, then will get illegal\nparent entry. Now, we do not check directory entry after read directory block\nin 'ext4_get_first_dir_block'.\nTo solve this issue, check directory entry in 'ext4_get_first_dir_block'.\n\n[ Trigger an ext4_error() instead of just warning if the directory is\n  missing a '.' or '..' entry.   Also make sure we return an error code\n  if the file system is corrupted.  -TYT ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0be698ecbe4471fcad80e81ec6a05001421041b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ff38b99fa075ddd246487a28cb9af049f4ceef1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/10801095224de0d0ab06ae60698680c1f883a3ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a3a15bf6f9963d755270cbdb282863b84839195","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/364380c00912bed9b5d99eb485018360b0ecf64f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a2bea60cf7ff957b3eda0b17750d483876a02fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97f802a652a749422dede32071d29a53cf4bd034","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd887f83ea54aea5b780a84527e23ab95f777fed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaecf7ebfd5dd09038a80b14be46b844f54cfc5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49350","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.723","lastModified":"2025-02-26T07:01:11.723","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdio: unexport __init-annotated mdio_bus_init()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because the only in-tree call-site,\ndrivers\/net\/phy\/phy_device.c is never compiled as modular.\n(CONFIG_PHYLIB is boolean)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35b42dce619701f1300fb8498dae82c9bb1f0263","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5534bcd7c40299862237c4a8fd9c5031b3db1538","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59fa94cddf9eef8d8dae587373eed8b8f4eb11d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a90a44d53428a3bf01bd80df9ba78b19959270c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7759c3222815b945a94b212bc0c6cdec475cfec2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab64ec2c75683f30ccde9eaaf0761002f901aa12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2f0f8c18b60ca64ff50892ed899cf1c77864755","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5c68137f1191ba3fcf6260ec71b30be2e2bf4c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49351","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.823","lastModified":"2025-02-26T07:01:11.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: altera: Fix refcount leak in altera_tse_mdio_create\n\nEvery iteration of for_each_child_of_node() decrements\nthe reference count of the previous node.\nWhen break from a for_each_child_of_node() loop,\nwe need to explicitly call of_node_put() on the child node when\nnot need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11ec18b1d8d92b9df307d31950dcba0b3dd7283c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1fd12298a0e0ca23478c715e672ee64c85670584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f850fe0a32c3f1e19b76996a3b1ca32637a14de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cd0e22fa11f4a21a8c09cc258f20b1474c95801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/803b217f1fb49a2dbb2123acdb45111b9c48b8be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8174acbef87b8dd8bf3731eba2a5af1ac857e239","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96bf5ed057df2d157274d4e2079002f9a9404bb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a013fa884d8738ad8455aa1a843b8c9d80c6c833","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e31d9ba169860687dba19bdc8fccbfd34077f655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49352","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:11.920","lastModified":"2025-02-26T07:01:11.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix warning in ext4_handle_inode_extension\n\nWe got issue as follows:\nEXT4-fs error (device loop0) in ext4_reserve_inode_write:5741: Out of memory\nEXT4-fs error (device loop0): ext4_setattr:5462: inode #13: comm syz-executor.0: mark_inode_dirty error\nEXT4-fs error (device loop0) in ext4_setattr:5519: Out of memory\nEXT4-fs error (device loop0): ext4_ind_map_blocks:595: inode #13: comm syz-executor.0: Can't allocate blocks for non-extent mapped inodes with bigalloc\n------------[ cut here ]------------\nWARNING: CPU: 1 PID: 4361 at fs\/ext4\/file.c:301 ext4_file_write_iter+0x11c9\/0x1220\nModules linked in:\nCPU: 1 PID: 4361 Comm: syz-executor.0 Not tainted 5.10.0+ #1\nRIP: 0010:ext4_file_write_iter+0x11c9\/0x1220\nRSP: 0018:ffff924d80b27c00 EFLAGS: 00010282\nRAX: ffffffff815a3379 RBX: 0000000000000000 RCX: 000000003b000000\nRDX: ffff924d81601000 RSI: 00000000000009cc RDI: 00000000000009cd\nRBP: 000000000000000d R08: ffffffffbc5a2c6b R09: 0000902e0e52a96f\nR10: ffff902e2b7c1b40 R11: ffff902e2b7c1b40 R12: 000000000000000a\nR13: 0000000000000001 R14: ffff902e0e52aa10 R15: ffffffffffffff8b\nFS:  00007f81a7f65700(0000) GS:ffff902e3bc80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffffff600400 CR3: 000000012db88001 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n do_iter_readv_writev+0x2e5\/0x360\n do_iter_write+0x112\/0x4c0\n do_pwritev+0x1e5\/0x390\n __x64_sys_pwritev2+0x7e\/0xa0\n do_syscall_64+0x37\/0x50\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nAbove issue may happen as follows:\nAssume\ninode.i_size=4096\nEXT4_I(inode)->i_disksize=4096\n\nstep 1: set inode->i_isize = 8192\next4_setattr\n  if (attr->ia_size != inode->i_size)\n    EXT4_I(inode)->i_disksize = attr->ia_size;\n    rc = ext4_mark_inode_dirty\n       ext4_reserve_inode_write\n          ext4_get_inode_loc\n            __ext4_get_inode_loc\n              sb_getblk --> return -ENOMEM\n   ...\n   if (!error)  ->will not update i_size\n     i_size_write(inode, attr->ia_size);\nNow:\ninode.i_size=4096\nEXT4_I(inode)->i_disksize=8192\n\nstep 2: Direct write 4096 bytes\next4_file_write_iter\n ext4_dio_write_iter\n   iomap_dio_rw ->return error\n if (extend)\n   ext4_handle_inode_extension\n     WARN_ON_ONCE(i_size_read(inode) < EXT4_I(inode)->i_disksize);\n->Then trigger warning.\n\nTo solve above issue, if mark inode dirty failed in ext4_setattr just\nset 'EXT4_I(inode)->i_disksize' with old value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ab308d72af7548f21e4499d025c25887da0c26a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bcce88da60eccc946c0f4ed942b0f08cd565778","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adf490083ca52ebfb0b2fe64ff1ead00c0452dd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b81d2ff6885e38fc745eeaf9565775055778fc0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e383c2aa5f02ab571530dc5c5696479672478c25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4534c9fc94d22383f187b9409abb3f9df2e3db3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49353","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.013","lastModified":"2025-02-26T07:01:12.013","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/papr_scm: don't requests stats with '0' sized stats buffer\n\nSachin reported [1] that on a POWER-10 lpar he is seeing a kernel panic being\nreported with vPMEM when papr_scm probe is being called. The panic is of the\nform below and is observed only with following option disabled(profile) for the\nsaid LPAR 'Enable Performance Information Collection' in the HMC:\n\n Kernel attempted to write user page (1c) - exploit attempt? (uid: 0)\n BUG: Kernel NULL pointer dereference on write at 0x0000001c\n Faulting instruction address: 0xc008000001b90844\n Oops: Kernel access of bad area, sig: 11 [#1]\n<snip>\n NIP [c008000001b90844] drc_pmem_query_stats+0x5c\/0x270 [papr_scm]\n LR [c008000001b92794] papr_scm_probe+0x2ac\/0x6ec [papr_scm]\n Call Trace:\n       0xc00000000941bca0 (unreliable)\n       papr_scm_probe+0x2ac\/0x6ec [papr_scm]\n       platform_probe+0x98\/0x150\n       really_probe+0xfc\/0x510\n       __driver_probe_device+0x17c\/0x230\n<snip>\n ---[ end trace 0000000000000000 ]---\n Kernel panic - not syncing: Fatal exception\n\nOn investigation looks like this panic was caused due to a 'stat_buffer' of\nsize==0 being provided to drc_pmem_query_stats() to fetch all performance\nstats-ids of an NVDIMM. However drc_pmem_query_stats() shouldn't have been called\nsince the vPMEM NVDIMM doesn't support and performance stat-id's. This was caused\ndue to missing check for 'p->stat_buffer_len' at the beginning of\npapr_scm_pmu_check_events() which indicates that the NVDIMM doesn't support\nperformance-stats.\n\nFix this by introducing the check for 'p->stat_buffer_len' at the beginning of\npapr_scm_pmu_check_events().\n\n[1] https:\/\/lore.kernel.org\/all\/6B3A522A-6A5F-4CC9-B268-0C63AA6E07D3@linux.ibm.com"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07bf9431b1590d1cd7a8d62075d0b50b073f0495","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1295aab2ebcda1c1a9ed342baedc080e5c393e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49354","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.103","lastModified":"2025-02-26T07:01:12.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: pata_octeon_cf: Fix refcount leak in octeon_cf_probe\n\nof_find_device_by_node() takes reference, we should use put_device()\nto release it when not need anymore.\nAdd missing put_device() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10d6bdf532902be1d8aa5900b3c03c5671612aa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19cb3ece14547cb1ca2021798aaf49a3f82643d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bd85c5ba1687daf54e3b6907673c3604b1e75cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/888312dc297a8a103f6371ef668c7e04f57a7679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d8ad067b90f231b8fdb14acee673ca4012f6045","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4d3e5f1d7d4f8b5e3834fec0f057a762c55806b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9782e1b21bee4b783a64b2a91e7e71406c21a21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5a1e7f33c88780b279835d63665d7e38ccb671f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb2cb409b504bb3a69e65a17f3120328c8e50219","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49355","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.200","lastModified":"2025-02-26T13:15:34.157","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49356","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.300","lastModified":"2025-02-26T07:01:12.300","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Trap RDMA segment overflows\n\nPrevent svc_rdma_build_writes() from walking off the end of a Write\nchunk's segment array. Caught with KASAN.\n\nThe test that this fix replaces is invalid, and might have been left\nover from an earlier prototype of the PCL work."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/659f7568e09593945c221bf20217a82ebdfe1328","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/812c13521d4a72469c78ce06d8cdc8dc5b5557b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea26bf5eca1459b5a7824997d7823409ce38214e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f012e95b377c73c0283f009823c633104dedb337","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49357","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.390","lastModified":"2025-02-26T07:01:12.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nefi: Do not import certificates from UEFI Secure Boot for T2 Macs\n\nOn Apple T2 Macs, when Linux attempts to read the db and dbx efi variables\nat early boot to load UEFI Secure Boot certificates, a page fault occurs\nin Apple firmware code and EFI runtime services are disabled with the\nfollowing logs:\n\n[Firmware Bug]: Page fault caused by firmware at PA: 0xffffb1edc0068000\nWARNING: CPU: 3 PID: 104 at arch\/x86\/platform\/efi\/quirks.c:735 efi_crash_gracefully_on_page_fault+0x50\/0xf0\n(Removed some logs from here)\nCall Trace:\n <TASK>\n page_fault_oops+0x4f\/0x2c0\n ? search_bpf_extables+0x6b\/0x80\n ? search_module_extables+0x50\/0x80\n ? search_exception_tables+0x5b\/0x60\n kernelmode_fixup_or_oops+0x9e\/0x110\n __bad_area_nosemaphore+0x155\/0x190\n bad_area_nosemaphore+0x16\/0x20\n do_kern_addr_fault+0x8c\/0xa0\n exc_page_fault+0xd8\/0x180\n asm_exc_page_fault+0x1e\/0x30\n(Removed some logs from here)\n ? __efi_call+0x28\/0x30\n ? switch_mm+0x20\/0x30\n ? efi_call_rts+0x19a\/0x8e0\n ? process_one_work+0x222\/0x3f0\n ? worker_thread+0x4a\/0x3d0\n ? kthread+0x17a\/0x1a0\n ? process_one_work+0x3f0\/0x3f0\n ? set_kthread_struct+0x40\/0x40\n ? ret_from_fork+0x22\/0x30\n <\/TASK>\n---[ end trace 1f82023595a5927f ]---\nefi: Froze efi_rts_wq and disabled EFI Runtime Services\nintegrity: Couldn't get size: 0x8000000000000015\nintegrity: MODSIGN: Couldn't get UEFI db list\nefi: EFI Runtime Services are disabled!\nintegrity: Couldn't get size: 0x8000000000000015\nintegrity: Couldn't get UEFI dbx list\nintegrity: Couldn't get size: 0x8000000000000015\nintegrity: Couldn't get mokx list\nintegrity: Couldn't get size: 0x80000000\n\nSo we avoid reading these UEFI variables and thus prevent the crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/155ca952c7ca19aa32ecfb7373a32bbc2e1ec6eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f7264f0510f519b4e4f575a8f0579ea65e7592e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65237307f88f5200782ae7f243bdd385e37cde5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1cda6dd2c44771f042d65f0d17bec322ef99a0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b34786b25d75f9c119696e6bdf3827f54ae3601b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c072cab98bac11f6ef9db640fb51834d9552e2e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49358","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.487","lastModified":"2025-02-26T07:01:12.487","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: memleak flow rule from commit path\n\nAbort path release flow rule object, however, commit path does not.\nUpdate code to destroy these objects before releasing the transaction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/330c0c6cd2150a2d7f47af16aa590078b0d2f736","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b8d63489c3b701eb2a76f848ec94d8cbc9373b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80de9ea1f5b808a6601e91111fae601df2b26369","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9dd732e0bdf538b1b76dc7c157e2b5e560ff30d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab9f34a30c23f656e76f4c5b83125a4e7b53c86e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e33d9bd563e71f6c6528b96008d65524a459c4dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49359","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.583","lastModified":"2025-02-26T07:01:12.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panfrost: Job should reference MMU not file_priv\n\nFor a while now it's been allowed for a MMU context to outlive it's\ncorresponding panfrost_priv, however the job structure still references\npanfrost_priv to get hold of the MMU context. If panfrost_priv has been\nfreed this is a use-after-free which I've been able to trigger resulting\nin a splat.\n\nTo fix this, drop the reference to panfrost_priv in the job structure\nand add a direct reference to the MMU structure which is what's actually\nneeded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/472dd7ea5e19a1aeabf1711ddc756777e05ee7c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e516faf04317db2c46cbec4e3b78b4653a5b109","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c8e8cc91a6ffc79865108279a74fd57d9070a17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49360","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.677","lastModified":"2025-02-26T07:01:12.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to do sanity check on total_data_blocks\n\nAs Yanming reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215916\n\nThe kernel message is shown below:\n\nkernel BUG at fs\/f2fs\/segment.c:2560!\nCall Trace:\n allocate_segment_by_default+0x228\/0x440\n f2fs_allocate_data_block+0x13d1\/0x31f0\n do_write_page+0x18d\/0x710\n f2fs_outplace_write_data+0x151\/0x250\n f2fs_do_write_data_page+0xef9\/0x1980\n move_data_page+0x6af\/0xbc0\n do_garbage_collect+0x312f\/0x46f0\n f2fs_gc+0x6b0\/0x3bc0\n f2fs_balance_fs+0x921\/0x2260\n f2fs_write_single_data_page+0x16be\/0x2370\n f2fs_write_cache_pages+0x428\/0xd00\n f2fs_write_data_pages+0x96e\/0xd50\n do_writepages+0x168\/0x550\n __writeback_single_inode+0x9f\/0x870\n writeback_sb_inodes+0x47d\/0xb20\n __writeback_inodes_wb+0xb2\/0x200\n wb_writeback+0x4bd\/0x660\n wb_workfn+0x5f3\/0xab0\n process_one_work+0x79f\/0x13e0\n worker_thread+0x89\/0xf60\n kthread+0x26a\/0x300\n ret_from_fork+0x22\/0x30\nRIP: 0010:new_curseg+0xe8d\/0x15f0\n\nThe root cause is: ckpt.valid_block_count is inconsistent with SIT table,\nstat info indicates filesystem has free blocks, but SIT table indicates\nfilesystem has no free segment.\n\nSo that during garbage colloection, it triggers panic when LFS allocator\nfails to find free segment.\n\nThis patch tries to fix this issue by checking consistency in between\nckpt.valid_block_count and block accounted from SIT."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/071b1269a3b3ad9cec16ed76a48015bfffd9aee8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b8beca0edd32075a769bfe4178ca00c0dcd22a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9e4cd5b0ccd7168801d6a811919171b185c5cf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc8c9df19971e59ebbe669ce710080e347dfec32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef221b738b26d8c9f7e7967f4586db2dd3bd5288","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49361","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.770","lastModified":"2025-02-26T07:01:12.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to do sanity check for inline inode\n\nYanming reported a kernel bug in Bugzilla kernel [1], which can be\nreproduced. The bug message is:\n\nThe kernel message is shown below:\n\nkernel BUG at fs\/inode.c:611!\nCall Trace:\n evict+0x282\/0x4e0\n __dentry_kill+0x2b2\/0x4d0\n dput+0x2dd\/0x720\n do_renameat2+0x596\/0x970\n __x64_sys_rename+0x78\/0x90\n do_syscall_64+0x3b\/0x90\n\n[1] https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215895\n\nThe bug is due to fuzzed inode has both inline_data and encrypted flags.\nDuring f2fs_evict_inode(), as the inode was deleted by rename(), it\nwill cause inline data conversion due to conflicting flags. The page\ncache will be polluted and the panic will be triggered in clear_inode().\n\nTry fixing the bug by doing more sanity checks for inline data inode in\nsanity_check_inode()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11c1cd032df85df3c096a57a7f27d57819956e4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/198fd9faa271dd54dca6fc8eb6873f42dfd3b4d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/677a82b44ebf263d4f9a0cfbd576a6ade797a07b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cfe2d43becaf76e562b9617d2c2d9b445f86761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efdefbe8b7564602ab446474788225a1f2a323b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49362","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.860","lastModified":"2025-02-26T07:01:12.860","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: Fix potential use-after-free in nfsd_file_put()\n\nnfsd_file_put_noref() can free @nf, so don't dereference @nf\nimmediately upon return from nfsd_file_put_noref()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/261eabe19cb28e4a8587a4442d257b543d7c2d57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/333dcc94ebf53f79f3dc0e7a7c16700bc7ff7e57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada1757b259f353cade47037ee0a0249b4cddad3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6c71c66b0ad8f2b59d9bc08c7a5079b110bec01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49363","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:12.953","lastModified":"2025-02-26T07:01:12.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to do sanity check on block address in f2fs_do_zero_range()\n\nAs Yanming reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215894\n\nI have encountered a bug in F2FS file system in kernel v5.17.\n\nI have uploaded the system call sequence as case.c, and a fuzzed image can\nbe found in google net disk\n\nThe kernel should enable CONFIG_KASAN=y and CONFIG_KASAN_INLINE=y. You can\nreproduce the bug by running the following commands:\n\nkernel BUG at fs\/f2fs\/segment.c:2291!\nCall Trace:\n f2fs_invalidate_blocks+0x193\/0x2d0\n f2fs_fallocate+0x2593\/0x4a70\n vfs_fallocate+0x2a5\/0xac0\n ksys_fallocate+0x35\/0x70\n __x64_sys_fallocate+0x8e\/0xf0\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root cause is, after image was fuzzed, block mapping info in inode\nwill be inconsistent with SIT table, so in f2fs_fallocate(), it will cause\npanic when updating SIT with invalid blkaddr.\n\nLet's fix the issue by adding sanity check on block address before updating\nSIT table with it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25f8236213a91efdf708b9d77e9e51b6fc3e141c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/470493be19a5730ed432e3ac0f29a2ee7fc6c557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7361c9f2bd6a8f0cbb41cdea9aff04765ff23f67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/805b48b234a2803cb7daec7f158af12f0fbaefac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a34d7b49894b0533222188a52e2958750f830efd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2e1c38b5ac64eb1a16a89c52fb419409d12c25b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49364","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.043","lastModified":"2025-02-26T07:01:13.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to clear dirty inode in f2fs_evict_inode()\n\nAs Yanming reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215904\n\nThe kernel message is shown below:\n\nkernel BUG at fs\/f2fs\/inode.c:825!\nCall Trace:\n evict+0x282\/0x4e0\n __dentry_kill+0x2b2\/0x4d0\n shrink_dentry_list+0x17c\/0x4f0\n shrink_dcache_parent+0x143\/0x1e0\n do_one_tree+0x9\/0x30\n shrink_dcache_for_umount+0x51\/0x120\n generic_shutdown_super+0x5c\/0x3a0\n kill_block_super+0x90\/0xd0\n kill_f2fs_super+0x225\/0x310\n deactivate_locked_super+0x78\/0xc0\n cleanup_mnt+0x2b7\/0x480\n task_work_run+0xc8\/0x150\n exit_to_user_mode_prepare+0x14a\/0x150\n syscall_exit_to_user_mode+0x1d\/0x40\n do_syscall_64+0x48\/0x90\n\nThe root cause is: inode node and dnode node share the same nid,\nso during f2fs_evict_inode(), dnode node truncation will invalidate\nits NAT entry, so when truncating inode node, it fails due to\ninvalid NAT entry, result in inode is still marked as dirty, fix\nthis issue by clearing dirty for inode and setting SBI_NEED_FSCK\nflag in filesystem.\n\noutput from dump.f2fs:\n[print_node_info: 354] Node ID [0xf:15] is inode\ni_nid[0]                      \t\t[0x       f : 15]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03c9373b15fa1c245ec99b2b5e7ba209eae4ef42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54c116615c99e22aa08aa950757ed726e2f60821","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c469953917b319d415fd621b9e5d0ea5203565cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9196d21359be8c7ee231029d13682273925fd00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd58045beb997544b94558a9156be4742628491","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2db71053dc0409fae785096ad19cce4c8a95af7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49365","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.140","lastModified":"2025-02-26T07:01:13.140","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Off by one in dm_dmub_outbox1_low_irq()\n\nThe > ARRAY_SIZE() should be >= ARRAY_SIZE() to prevent an out of bounds\naccess."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/607c5cd1a08e196d9f2bd3b25a8083ed27ad7ceb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a35faec3db0e13aac8ea720bc1a3503081dd5a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0808b7a04157b3f56e919f27023fec37a075fad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec9ec3bc08b18c5b1b2feafd306ea7c348013898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49366","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.230","lastModified":"2025-02-26T07:01:13.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix reference count leak in smb_check_perm_dacl()\n\nThe issue happens in a specific path in smb_check_perm_dacl(). When\n\"id\" and \"uid\" have the same value, the function simply jumps out of\nthe loop without decrementing the reference count of the object\n\"posix_acls\", which is increased by get_acl() earlier. This may\nresult in memory leaks.\n\nFix it by decreasing the reference count of \"posix_acls\" before\njumping to label \"check_access_bits\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/248d71b440aef829f5cc5f6545ca113ef5062900","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9758a6653c27867d810de02b4e5697163dda9883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf824b95c12a1abacadbc2d069931963221a3414","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d21a580dafc69aa04f46e6099616146a536b0724","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49367","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.353","lastModified":"2025-02-26T07:01:13.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: Fix refcount leak in mv88e6xxx_mdios_register\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\n\nmv88e6xxx_mdio_register() pass the device node to of_mdiobus_register().\nWe don't need the device node after it.\n\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02ded5a173619b11728b8bf75a3fd995a2c1ff28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42658e47f1abbbe592007d3ba303de466114d0bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86c3c5f8e4bd1325e24f6fba9017cade29933377","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a1a1255152da4fb934290e7ababc66f24985520","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a101793994c0a14c70bb4e44c7fda597eeebba0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1df9cb756e5a9ba1841648c44ee5d92306b9c65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc1cf8c6f9793546696fded437a5b4c84944c48b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d763d0c7665c7897e4f5a0847ab0c82543345f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49368","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.483","lastModified":"2025-02-26T07:01:13.483","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: mtk_eth_soc: out of bounds read in mtk_hwlro_get_fdir_entry()\n\nThe \"fsp->location\" variable comes from user via ethtool_get_rxnfc().\nCheck that it is valid to prevent an out of bounds read."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b238f75b65ed4462ef4cdfa718cac0ac7fce3b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bd1faedb74dc2a2be3972abcd4239b75a3e7b00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cde554c70d7397cfa2e4116bacb4accdfb6fd48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ba81f82607ead85fe36f50869fc4f5661359ab8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/657e7174603f0aab2cdedc64ac81edffd2a87afe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71ae30662ec610b92644d13f79c78f76f17873b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b24ca1cf846273361d5bd73a35de95a486a54b6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f0e57ea0d867aacffad7999527e48bd4ea9293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e7104e2d5ddf3806a28695670f21bef471f1e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49369","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.583","lastModified":"2025-02-26T07:01:13.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\namt: fix possible memory leak in amt_rcv()\n\nIf an amt receives packets and it finds socket.\nIf it can't find a socket, it should free a received skb.\nBut it doesn't.\nSo, a memory leak would possibly occur."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a1a0e80e005cbdc2c250fc858e1d8570f4e4acb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b8032d39b276c52db57ff834c300405b9da2691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60d9c020c69977e138727b3577bc6a0458325e9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49370","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.677","lastModified":"2025-02-26T07:01:13.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: dmi-sysfs: Fix memory leak in dmi_sysfs_register_handle\n\nkobject_init_and_add() takes reference even when it fails.\nAccording to the doc of kobject_init_and_add()\n\n   If this function returns an error, kobject_put() must be called to\n   properly clean up the memory associated with the object.\n\nFix this issue by calling kobject_put()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ba359ebe914ac3f8c6c832b28007c14c39d3766","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/660ba678f9998aca6db74f2dd912fa5124f0fa31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/985706bd3bbeffc8737bc05965ca8d24837bc7db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a724634b2a49f6ff0177a9e19a5a92fc1545e1b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9bfb37d6ba7c376b0d53337a4c5f5ff324bd725","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c66cc3c62870a27ea8f060a7e4c1ad8d26dd3f0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec752973aa721ee281d5441e497364637c626c7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed38d04342dfbe9e5aca745c8b5eb4188a74f0ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdffa4ad8f6bf1ece877edfb807f2b2c729d8578","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49371","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.777","lastModified":"2025-02-26T07:01:13.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: fix deadlock in __device_attach\n\nIn __device_attach function, The lock holding logic is as follows:\n...\n__device_attach\ndevice_lock(dev)      \/\/ get lock dev\n  async_schedule_dev(__device_attach_async_helper, dev); \/\/ func\n    async_schedule_node\n      async_schedule_node_domain(func)\n        entry = kzalloc(sizeof(struct async_entry), GFP_ATOMIC);\n\t\/* when fail or work limit, sync to execute func, but\n\t   __device_attach_async_helper will get lock dev as\n\t   well, which will lead to A-A deadlock.  *\/\n\tif (!entry || atomic_read(&entry_count) > MAX_WORK) {\n\t  func;\n\telse\n\t  queue_work_node(node, system_unbound_wq, &entry->work)\n  device_unlock(dev)\n\nAs shown above, when it is allowed to do async probes, because of\nout of memory or work limit, async work is not allowed, to do\nsync execute instead. it will lead to A-A deadlock because of\n__device_attach_async_helper getting lock dev.\n\nTo fix the deadlock, move the async_schedule_dev outside device_lock,\nas we can see, in async_schedule_node_domain, the parameter of\nqueue_work_node is system_unbound_wq, so it can accept concurrent\noperations. which will also not change the code logic, and will\nnot lead to deadlock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/34fdd9b7def9d2fcb71bb7b0bc4848dd7313767e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36ee9ffca8ef56c302f2855c4a5fccf61c0c1ada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/593b595332bd2d65e1a5c1ae7897996c157f5468","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b232b02bf3c205b13a26dcec08e53baddd8e59ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d53a227bfcd5160ce1b61d9954901968a20651e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df6de52b80aa3b46f5ac804412355ffe2e1df93e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49372","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.870","lastModified":"2025-02-26T07:01:13.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: tcp_rtx_synack() can be called from process context\n\nLaurent reported the enclosed report [1]\n\nThis bug triggers with following coditions:\n\n0) Kernel built with CONFIG_DEBUG_PREEMPT=y\n\n1) A new passive FastOpen TCP socket is created.\n   This FO socket waits for an ACK coming from client to be a complete\n   ESTABLISHED one.\n2) A socket operation on this socket goes through lock_sock()\n   release_sock() dance.\n3) While the socket is owned by the user in step 2),\n   a retransmit of the SYN is received and stored in socket backlog.\n4) At release_sock() time, the socket backlog is processed while\n   in process context.\n5) A SYNACK packet is cooked in response of the SYN retransmit.\n6) -> tcp_rtx_synack() is called in process context.\n\nBefore blamed commit, tcp_rtx_synack() was always called from BH handler,\nfrom a timer handler.\n\nFix this by using TCP_INC_STATS() & NET_INC_STATS()\nwhich do not assume caller is in non preemptible context.\n\n[1]\nBUG: using __this_cpu_add() in preemptible [00000000] code: epollpep\/2180\ncaller is tcp_rtx_synack.part.0+0x36\/0xc0\nCPU: 10 PID: 2180 Comm: epollpep Tainted: G           OE     5.16.0-0.bpo.4-amd64 #1  Debian 5.16.12-1~bpo11+1\nHardware name: Supermicro SYS-5039MC-H8TRF\/X11SCD-F, BIOS 1.7 11\/23\/2021\nCall Trace:\n <TASK>\n dump_stack_lvl+0x48\/0x5e\n check_preemption_disabled+0xde\/0xe0\n tcp_rtx_synack.part.0+0x36\/0xc0\n tcp_rtx_synack+0x8d\/0xa0\n ? kmem_cache_alloc+0x2e0\/0x3e0\n ? apparmor_file_alloc_security+0x3b\/0x1f0\n inet_rtx_syn_ack+0x16\/0x30\n tcp_check_req+0x367\/0x610\n tcp_rcv_state_process+0x91\/0xf60\n ? get_nohz_timer_target+0x18\/0x1a0\n ? lock_timer_base+0x61\/0x80\n ? preempt_count_add+0x68\/0xa0\n tcp_v4_do_rcv+0xbd\/0x270\n __release_sock+0x6d\/0xb0\n release_sock+0x2b\/0x90\n sock_setsockopt+0x138\/0x1140\n ? __sys_getsockname+0x7e\/0xc0\n ? aa_sk_perm+0x3e\/0x1a0\n __sys_setsockopt+0x198\/0x1e0\n __x64_sys_setsockopt+0x21\/0x30\n do_syscall_64+0x38\/0xc0\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a0f7f84148445c9f02f226928803a870139d820","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a375c822497ed6ad6b5da0792a12a6f1af10c0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3db889f883e65bbd3b1401279bfc1e9ed255c481","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58bd38cbc961fd799842b7be8c5222310f04b908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88cd232146207ff1d41dededed5e77c0d4438113","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdc28a8fb43cc476e33b11519235adb816ce00e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c348b0f8d035fc4bdc040796889beec7218bd1b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d05c2fdf8e10528bb6751bd95243e862d5402a9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8e1bc6029acac796293310aacef7b7336f35b6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49373","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:13.970","lastModified":"2025-02-26T07:01:13.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: ts4800_wdt: Fix refcount leak in ts4800_wdt_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd  missing of_node_put() in some error paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b110d940417942bc87d9e4bea6d4f24e05ed483","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d24df3d690809952528e7a19a43d84bc5b99d44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a4afd8a003d6abf1f5d159c2bb67e6b7cbde253","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/910b1cdf6c50ae8fb222e46657d04fb181577017","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91fa5aa53f68b85e779164b3127c7e23cad5c457","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f067b5286edfd83d2d3903e8578b561599d62539","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49374","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.060","lastModified":"2025-02-26T07:01:14.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: check attribute length for bearer name\n\nsyzbot reported uninit-value:\n=====================================================\nBUG: KMSAN: uninit-value in string_nocheck lib\/vsprintf.c:644 [inline]\nBUG: KMSAN: uninit-value in string+0x4f9\/0x6f0 lib\/vsprintf.c:725\n string_nocheck lib\/vsprintf.c:644 [inline]\n string+0x4f9\/0x6f0 lib\/vsprintf.c:725\n vsnprintf+0x2222\/0x3650 lib\/vsprintf.c:2806\n vprintk_store+0x537\/0x2150 kernel\/printk\/printk.c:2158\n vprintk_emit+0x28b\/0xab0 kernel\/printk\/printk.c:2256\n vprintk_default+0x86\/0xa0 kernel\/printk\/printk.c:2283\n vprintk+0x15f\/0x180 kernel\/printk\/printk_safe.c:50\n _printk+0x18d\/0x1cf kernel\/printk\/printk.c:2293\n tipc_enable_bearer net\/tipc\/bearer.c:371 [inline]\n __tipc_nl_bearer_enable+0x2022\/0x22a0 net\/tipc\/bearer.c:1033\n tipc_nl_bearer_enable+0x6c\/0xb0 net\/tipc\/bearer.c:1042\n genl_family_rcv_msg_doit net\/netlink\/genetlink.c:731 [inline]\n\n- Do sanity check the attribute length for TIPC_NLA_BEARER_NAME.\n- Do not use 'illegal name' in printing message."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/292be63c382ce20673ee61dff1ee9ed4a3dcaae7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3af15272cde28fe5c8489174b8624e232c1775ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f36f798f89bf32c0164049cb0e3fd1af613d0bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b91d0dfc839e67708c905648cd0e7507a2263e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92a930fcf4250fe961f6238b99af0bc405799f39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8fac8e321044a9ac50f7185b4e9d91a7745e4b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f07670871f4d19e613740eebe210e7e9ea535973","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49375","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.160","lastModified":"2025-02-26T07:01:14.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: mt6397: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3867f0bbb94773d41e789257abec0d14f37da217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58a729c55ce3a432eb827fdaa24c7909cd3b0a6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ecd4d5c28408df36a1a6f0b1973f633c949ac1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79fa3f5758d8712df0678df98161f948fc4370e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82bfea344e8f7e9a0e0b1bf9af27552baa756620","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/865051de2d9eaa50630e055b73921ceaf3c4a7fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3b43eb505bffb8e4cdf6800c15660c001553fe6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d77f28c1bc9d3043a52069fe42e4a26fbf961ebd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da38e86d6cf6dd3bc65c602d998f357145aa1a0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49376","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.260","lastModified":"2025-02-26T07:01:14.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sd: Fix potential NULL pointer dereference\n\nIf sd_probe() sees an early error before sdkp->device is initialized,\nsd_zbc_release_disk() is called. This causes a NULL pointer dereference\nwhen sd_is_zoned() is called inside that function. Avoid this by removing\nthe call to sd_zbc_release_disk() in sd_probe() error path.\n\nThis change is safe and does not result in zone information memory leakage\nbecause the zone information for a zoned disk is allocated only when\nsd_revalidate_disk() is called, at which point sdkp->disk_dev is fully set,\nresulting in sd_disk_release() being called when needed to cleanup a disk\nzone information using sd_zbc_release_disk()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05fbde3a77a4f1d62e4c4428f384288c1f1a0be5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fcb0b131cc90c8f523a293d84c58d0c7273c96f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3733439593ad12f7b54ae35c273ea6f15d692de3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78f8e96df06e2d04d82d4071c299b59d28744f47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1f0187025905e9981000d44a92e159468b561a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49377","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.357","lastModified":"2025-02-26T07:01:14.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: don't touch ->tagset in blk_mq_get_sq_hctx\n\nblk_mq_run_hw_queues() could be run when there isn't queued request and\nafter queue is cleaned up, at that time tagset is freed, because tagset\nlifetime is covered by driver, and often freed after blk_cleanup_queue()\nreturns.\n\nSo don't touch ->tagset for figuring out current default hctx by the mapping\nbuilt in request queue, so use-after-free on tagset can be avoided. Meantime\nthis way should be fast than retrieving mapping from tagset."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/460aa288c5cd0544dcf933a2f0ad0e8c6d2d35ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d05426e2d5fd7df8afc866b78c36b37b00188b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70fdd922c7bf8949f8df109cf2635dff64c90392","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b140bac470b4f707cda59c7266214246238661df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49378","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.450","lastModified":"2025-02-26T07:01:14.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix considering that all channels have TX queues\n\nNormally, all channels have RX and TX queues, but this is not true if\nmodparam efx_separate_tx_channels=1 is used. In that cases, some\nchannels only have RX queues and others only TX queues (or more\npreciselly, they have them allocated, but not initialized).\n\nFix efx_channel_has_tx_queues to return the correct value for this case\ntoo.\n\nMessages shown at probe time before the fix:\n sfc 0000:03:00.0 ens6f0np0: MC command 0x82 inlen 544 failed rc=-22 (raw=0) arg=0\n ------------[ cut here ]------------\n netdevice: ens6f0np0: failed to initialise TXQ -1\n WARNING: CPU: 1 PID: 626 at drivers\/net\/ethernet\/sfc\/ef10.c:2393 efx_ef10_tx_init+0x201\/0x300 [sfc]\n [...] stripped\n RIP: 0010:efx_ef10_tx_init+0x201\/0x300 [sfc]\n [...] stripped\n Call Trace:\n  efx_init_tx_queue+0xaa\/0xf0 [sfc]\n  efx_start_channels+0x49\/0x120 [sfc]\n  efx_start_all+0x1f8\/0x430 [sfc]\n  efx_net_open+0x5a\/0xe0 [sfc]\n  __dev_open+0xd0\/0x190\n  __dev_change_flags+0x1b3\/0x220\n  dev_change_flags+0x21\/0x60\n [...] stripped\n\nMessages shown at remove time before the fix:\n sfc 0000:03:00.0 ens6f0np0: failed to flush 10 queues\n sfc 0000:03:00.0 ens6f0np0: failed to flush queues"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e102b53f8a778f872dc137f4c7ac548705817aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5567d69b95b9c07e1c56f15cf0301251d12e5f97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f81a4113e1e574d2cbde4f2cd599380a9189c0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/913d45f02d346ce41c4aad057eaf53a8ed449dc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e8d5e25dc762b70f9c88ec6b7d451d0816eead","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49379","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.543","lastModified":"2025-02-26T07:01:14.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: Fix wait_for_device_probe() & deferred_probe_timeout interaction\n\nMounting NFS rootfs was timing out when deferred_probe_timeout was\nnon-zero [1].  This was because ip_auto_config() initcall times out\nwaiting for the network interfaces to show up when\ndeferred_probe_timeout was non-zero. While ip_auto_config() calls\nwait_for_device_probe() to make sure any currently running deferred\nprobe work or asynchronous probe finishes, that wasn't sufficient to\naccount for devices being deferred until deferred_probe_timeout.\n\nCommit 35a672363ab3 (\"driver core: Ensure wait_for_device_probe() waits\nuntil the deferred_probe_timeout fires\") tried to fix that by making\nsure wait_for_device_probe() waits for deferred_probe_timeout to expire\nbefore returning.\n\nHowever, if wait_for_device_probe() is called from the kernel_init()\ncontext:\n\n- Before deferred_probe_initcall() [2], it causes the boot process to\n  hang due to a deadlock.\n\n- After deferred_probe_initcall() [3], it blocks kernel_init() from\n  continuing till deferred_probe_timeout expires and beats the point of\n  deferred_probe_timeout that's trying to wait for userspace to load\n  modules.\n\nNeither of this is good. So revert the changes to\nwait_for_device_probe().\n\n[1] - https:\/\/lore.kernel.org\/lkml\/TYAPR01MB45443DF63B9EF29054F7C41FD8C60@TYAPR01MB4544.jpnprd01.prod.outlook.com\/\n[2] - https:\/\/lore.kernel.org\/lkml\/YowHNo4sBjr9ijZr@dev-arch.thelio-3990X\/\n[3] - https:\/\/lore.kernel.org\/lkml\/Yo3WvGnNk3LvLb7R@linutronix.de\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29357883a89193863f3cc6a2c5e0b42ceb022761","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ad6af07efcca85369c21e4897b3020cff2c170b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/528229474e1cbb1b3451cb713d94aecb5f6ee264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee76c256e928455212ab759c51d198fedbe7523","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71cbce75031aed26c72c2dc8a83111d181685f1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49380","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.633","lastModified":"2025-02-26T07:01:14.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid f2fs_bug_on() in dec_valid_node_count()\n\nAs Yanming reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215897\n\nI have encountered a bug in F2FS file system in kernel v5.17.\n\nThe kernel should enable CONFIG_KASAN=y and CONFIG_KASAN_INLINE=y. You can\nreproduce the bug by running the following commands:\n\nThe kernel message is shown below:\n\nkernel BUG at fs\/f2fs\/f2fs.h:2511!\nCall Trace:\n f2fs_remove_inode_page+0x2a2\/0x830\n f2fs_evict_inode+0x9b7\/0x1510\n evict+0x282\/0x4e0\n do_unlinkat+0x33a\/0x540\n __x64_sys_unlinkat+0x8e\/0xd0\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root cause is: .total_valid_block_count or .total_valid_node_count\ncould fuzzed to zero, then once dec_valid_node_count() was called, it\nwill cause BUG_ON(), this patch fixes to print warning info and set\nSBI_NEED_FSCK into CP instead of panic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2766ddaf45b69252bb8fe526b5b6e56904a9ae7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d17e6fe9293d57081ffdc11e1cf313e25e8fd9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89d9a48d0cd30429463ea4e37ca83be6773ed5eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bce859358d3d5940aa858e40ceee70ee6e76130e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccffa99ae6a1f44797b57444c6a80382a42928fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8b3c3fcf33105bc1ee7788e3b51b0a1ae42ae53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49381","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.727","lastModified":"2025-02-26T07:01:14.727","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njffs2: fix memory leak in jffs2_do_fill_super\n\nIf jffs2_iget() or d_make_root() in jffs2_do_fill_super() returns\nan error, we can observe the following kmemleak report:\n\n--------------------------------------------\nunreferenced object 0xffff888105a65340 (size 64):\n  comm \"mount\", pid 710, jiffies 4302851558 (age 58.239s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff859c45e5>] kmem_cache_alloc_trace+0x475\/0x8a0\n    [<ffffffff86160146>] jffs2_sum_init+0x96\/0x1a0\n    [<ffffffff86140e25>] jffs2_do_mount_fs+0x745\/0x2120\n    [<ffffffff86149fec>] jffs2_do_fill_super+0x35c\/0x810\n    [<ffffffff8614aae9>] jffs2_fill_super+0x2b9\/0x3b0\n    [...]\nunreferenced object 0xffff8881bd7f0000 (size 65536):\n  comm \"mount\", pid 710, jiffies 4302851558 (age 58.239s)\n  hex dump (first 32 bytes):\n    bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................\n    bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb bb  ................\n  backtrace:\n    [<ffffffff858579ba>] kmalloc_order+0xda\/0x110\n    [<ffffffff85857a11>] kmalloc_order_trace+0x21\/0x130\n    [<ffffffff859c2ed1>] __kmalloc+0x711\/0x8a0\n    [<ffffffff86160189>] jffs2_sum_init+0xd9\/0x1a0\n    [<ffffffff86140e25>] jffs2_do_mount_fs+0x745\/0x2120\n    [<ffffffff86149fec>] jffs2_do_fill_super+0x35c\/0x810\n    [<ffffffff8614aae9>] jffs2_fill_super+0x2b9\/0x3b0\n    [...]\n--------------------------------------------\n\nThis is because the resources allocated in jffs2_sum_init() are not\nreleased. Call jffs2_sum_exit() to release these resources to solve\nthe problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28048a4cf3813b7cf5cc8cce629dfdc7951cb1c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3252d327f977b14663a10967f3b0930d6c325687","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ba7bbeab8009faf3a726e565d98816593ddd5b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4da8763a3d2b684c773b72ed80fad40bc264bc40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69295267c481545f636b69ff341b8db75aa136b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c14adb1cf70a984ed081c67e9d27bc3caad9537c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf9db013e167bc8fc2ecd7a13ed97a37df0c9dab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3a4fff1e7e408c32649030daa7c2c42a7e19a95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecc53e58596542791e82eff00702f8af7a313f70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49382","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.823","lastModified":"2025-02-26T07:01:14.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: rockchip: Fix refcount leak in rockchip_grf_init\n\nof_find_matching_node_and_match returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/042571fe1d171773655ad706715ecc865913d9a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28133325526b92921f3269fdf97a20d90b92b217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b3e990f85eb034faa461e691e719e8ce9e2a3c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69a30b2ed620c2206cbbd1e9c112e4fc584e02bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f64e84924604bb969ee1fbc4b8d7d09b9214889","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b59588d8be91c96bfb0371e912ceb4f16315dbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aab25b669cb9fd3698c2631be4435f4fe92d9e59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5422f323858cad3ac3581075f9a3a5e0d41c0d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49383","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:14.917","lastModified":"2025-02-26T07:01:14.917","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: rzg2l_wdt: Fix 'BUG: Invalid wait context'\n\nThis patch fixes the issue 'BUG: Invalid wait context' during restart()\ncallback by using clk_prepare_enable() instead of pm_runtime_get_sync()\nfor turning on the clocks during restart.\n\nThis issue is noticed when testing with renesas_defconfig.\n\n[   42.213802] reboot: Restarting system\n[   42.217860]\n[   42.219364] =============================\n[   42.223368] [ BUG: Invalid wait context ]\n[   42.227372] 5.17.0-rc5-arm64-renesas-00002-g10393723e35e #522 Not tainted\n[   42.234153] -----------------------------\n[   42.238155] systemd-shutdow\/1 is trying to lock:\n[   42.242766] ffff00000a650828 (&genpd->mlock){+.+.}-{3:3}, at: genpd_lock_mtx+0x14\/0x20\n[   42.250709] other info that might help us debug this:\n[   42.255753] context-{4:4}\n[   42.258368] 2 locks held by systemd-shutdow\/1:\n[   42.262806]  #0: ffff80000944e1c8 (system_transition_mutex#2){+.+.}-{3:3}, at: __do_sys_reboot+0xd0\/0x250\n[   42.272388]  #1: ffff8000094c4e40 (rcu_read_lock){....}-{1:2}, at: atomic_notifier_call_chain+0x0\/0x150\n[   42.281795] stack backtrace:\n[   42.284672] CPU: 0 PID: 1 Comm: systemd-shutdow Not tainted 5.17.0-rc5-arm64-renesas-00002-g10393723e35e #522\n[   42.294577] Hardware name: Renesas SMARC EVK based on r9a07g044c2 (DT)\n[   42.301096] Call trace:\n[   42.303538]  dump_backtrace+0xcc\/0xd8\n[   42.307203]  show_stack+0x14\/0x30\n[   42.310517]  dump_stack_lvl+0x88\/0xb0\n[   42.314180]  dump_stack+0x14\/0x2c\n[   42.317492]  __lock_acquire+0x1b24\/0x1b50\n[   42.321502]  lock_acquire+0x120\/0x3a8\n[   42.325162]  __mutex_lock+0x84\/0x8f8\n[   42.328737]  mutex_lock_nested+0x30\/0x58\n[   42.332658]  genpd_lock_mtx+0x14\/0x20\n[   42.336319]  genpd_runtime_resume+0xc4\/0x228\n[   42.340587]  __rpm_callback+0x44\/0x170\n[   42.344337]  rpm_callback+0x64\/0x70\n[   42.347824]  rpm_resume+0x4e0\/0x6b8\n[   42.351310]  __pm_runtime_resume+0x50\/0x78\n[   42.355404]  rzg2l_wdt_restart+0x28\/0x68\n[   42.359329]  watchdog_restart_notifier+0x1c\/0x30\n[   42.363943]  atomic_notifier_call_chain+0x94\/0x150\n[   42.368732]  do_kernel_restart+0x24\/0x30\n[   42.372652]  machine_restart+0x44\/0x70\n[   42.376399]  kernel_restart+0x3c\/0x60\n[   42.380058]  __do_sys_reboot+0x228\/0x250\n[   42.383977]  __arm64_sys_reboot+0x20\/0x28\n[   42.387983]  invoke_syscall+0x40\/0xf8"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a635239cd5484d8f2e702713ccc49ec82aa7594","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6505541e5298cea2b79da68ee626f583f8e18784","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4cf89596c1f1e33309556699f910ced4abbaf44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49384","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.007","lastModified":"2025-02-26T07:01:15.007","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix double free of io_acct_set bioset\n\nNow io_acct_set is alloc and free in personality. Remove the codes that\nfree io_acct_set in md_free and md_stop."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36a2fc44c574a59ee3b5e2cb327182f227b2b07e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42b805af102471f53e3c7867b8c2b502ea4eef7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea7d7bd90079d96f9c86bdaf0b106e0cd2a70661","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f99d5b5dc8a42c807b5f1176b925aa45d61962ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49385","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.103","lastModified":"2025-02-26T07:01:15.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver: base: fix UAF when driver_attach failed\n\nWhen driver_attach(drv); failed, the driver_private will be freed.\nBut it has been added to the bus, which caused a UAF.\n\nTo fix it, we need to delete it from the bus when failed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/310862e574001a97ad02272bac0fd13f75f42a27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5389101257828d1913d713d9a40acbe14f5961df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d709f58c743166fe1c6914b9de0ae8868600d9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/823f24f2e329babd0330200d0b74882516fe57f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c059665c84feab46b7173d3a1bf36c2fb7f9df86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdf1a683a01583bca4b618dd16223cbd6e462e21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49386","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.233","lastModified":"2025-02-26T07:01:15.233","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: ti: am65-cpsw-nuss: Fix some refcount leaks\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nam65_cpsw_init_cpts() and am65_cpsw_nuss_probe() don't release\nthe refcount in error case.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e44f21c384503562713b7d3b673c40bed20af3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dd89d2fc438457811cbbec07999ce0d80051ff5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78aca10a16f001c9f49f1cc4dadfee8d444bb173","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4b7ef3b159805ba6be061d0cd2403d84b9b0063","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7ba2cc57f404d2d9f26fb85bd3833d35a477829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49387","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.343","lastModified":"2025-02-26T07:01:15.343","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: rzg2l_wdt: Fix 32bit overflow issue\n\nThe value of timer_cycle_us can be 0 due to 32bit overflow.\nFor eg:- If we assign the counter value \"0xfff\" for computing\nmaxval.\n\nThis patch fixes this issue by appending ULL to 1024, so that\nit is promoted to 64bit.\n\nThis patch also fixes the warning message, 'watchdog: Invalid min and\nmax timeout values, resetting to 0!'."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b95a47667d34e76c2c9013f8e3b1e5039a5a0b76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e07b9fa0dc32b492de85528caaf9f0c605d8424f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea2949df22a533cdf75e4583c00b1ce94cd5a83b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49388","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.430","lastModified":"2025-02-26T07:01:15.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubi: ubi_create_volume: Fix use-after-free when volume creation failed\n\nThere is an use-after-free problem for 'eba_tbl' in ubi_create_volume()'s\nerror handling path:\n\n  ubi_eba_replace_table(vol, eba_tbl)\n    vol->eba_tbl = tbl\nout_mapping:\n  ubi_eba_destroy_table(eba_tbl)   \/\/ Free 'eba_tbl'\nout_unlock:\n  put_device(&vol->dev)\n    vol_release\n      kfree(tbl->entries)\t  \/\/ UAF\n\nFix it by removing redundant 'eba_tbl' releasing.\nFetch a reproducer in [Link]."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1174ab8ba36a48025b68b5ff1085000b1e510217","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25ff1e3a1351c0d936dd1ac2f9e58231ea1510c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ff2514e4fb55dcf3d88294686040ca73ea0c1a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d8d3f68cbecfd31925796f0fb668eb21ab06734","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8302620aeb940f386817321d272b12411ae7d39f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c03a1c21d72210f81cb369cc528e3fde4b45411","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abb67043060f2bf4c03d7c3debb9ae980e2b6db3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e27ecf325e51abd06aaefba57a6322a46fa4178b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49389","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.527","lastModified":"2025-02-26T07:01:15.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: usbip: fix a refcount leak in stub_probe()\n\nusb_get_dev() is called in stub_device_alloc(). When stub_probe() fails\nafter that, usb_put_dev() needs to be called to release the reference.\n\nFix this by moving usb_put_dev() to sdev_free error path handling.\n\nFind this by code review."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11c65408bd0ba1d9cd1307caa38169292de9cdfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/247d3809e45a34d9e1a3a2bb7012e31ed8b46031","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f0ae93ec33c8456cdfbf7876b80403a6318ebce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51422046be504515eb5a591adf0f424b62f46804","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bafee2f18af5e5ac125e42960bc65496d0e56a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8afb048800919d0ab10c57983940eba956339f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ec4cbf1cc55d126759051acfe328d489c5d6e60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcbb795a9e78180d74c6ab21518da87e803dfdce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f20d2d3b3364ce6525c050a8b6b4c54c8c19674d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49390","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.620","lastModified":"2025-02-26T07:01:15.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmacsec: fix UAF bug for real_dev\n\nCreate a new macsec device but not get reference to real_dev. That can\nnot ensure that real_dev is freed after macsec. That will trigger the\nUAF bug for real_dev as following:\n\n==================================================================\nBUG: KASAN: use-after-free in macsec_get_iflink+0x5f\/0x70 drivers\/net\/macsec.c:3662\nCall Trace:\n ...\n macsec_get_iflink+0x5f\/0x70 drivers\/net\/macsec.c:3662\n dev_get_iflink+0x73\/0xe0 net\/core\/dev.c:637\n default_operstate net\/core\/link_watch.c:42 [inline]\n rfc2863_policy+0x233\/0x2d0 net\/core\/link_watch.c:54\n linkwatch_do_dev+0x2a\/0x150 net\/core\/link_watch.c:161\n\nAllocated by task 22209:\n ...\n alloc_netdev_mqs+0x98\/0x1100 net\/core\/dev.c:10549\n rtnl_create_link+0x9d7\/0xc00 net\/core\/rtnetlink.c:3235\n veth_newlink+0x20e\/0xa90 drivers\/net\/veth.c:1748\n\nFreed by task 8:\n ...\n kfree+0xd6\/0x4d0 mm\/slub.c:4552\n kvfree+0x42\/0x50 mm\/util.c:615\n device_release+0x9f\/0x240 drivers\/base\/core.c:2229\n kobject_cleanup lib\/kobject.c:673 [inline]\n kobject_release lib\/kobject.c:704 [inline]\n kref_put include\/linux\/kref.h:65 [inline]\n kobject_put+0x1c8\/0x540 lib\/kobject.c:721\n netdev_run_todo+0x72e\/0x10b0 net\/core\/dev.c:10327\n\nAfter commit faab39f63c1f (\"net: allow out-of-order netdev unregistration\")\nand commit e5f80fcf869a (\"ipv6: give an IPv6 dev to blackhole_netdev\"), we\ncan add dev_hold_track() in macsec_dev_init() and dev_put_track() in\nmacsec_free_netdev() to fix the problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/196a888ca6571deb344468e1d7138e3273206335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78933cbc143b82d02330e00900d2fd08f2682f4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d130282179aa6051449ac8f8df1115769998a665","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49391","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.713","lastModified":"2025-02-26T07:01:15.713","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: mtk_scp: Fix a potential double free\n\n'scp->rproc' is allocated using devm_rproc_alloc(), so there is no need\nto free it explicitly in the remove function."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/adc02700236613b344a947a897fc2741d52a43b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eac3e5b1c12f85732e60f5f8b985444d273866bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49392","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.803","lastModified":"2025-02-26T07:01:15.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250_aspeed_vuart: Fix potential NULL dereference in aspeed_vuart_probe\n\nplatform_get_resource() may fail and return NULL, so we should\nbetter check it's return value to avoid a NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e0fd55719fa081de6f9e5d9e6cef48efb04d34a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90a6b6fc52bfdcfe9698454bf5bea26112abbcd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/923d34ce069e8e51a4d003caa6b66a8cd6ecd0ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5f1275f101e0e8a172d300d897f5a12e87e3485","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49393","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.890","lastModified":"2025-02-26T07:01:15.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: fix list iterator in fastrpc_req_mem_unmap_impl\n\nThis is another instance of incorrect use of list iterator and\nchecking it for NULL.\n\nThe list iterator value 'map' will *always* be set and non-NULL\nby list_for_each_entry(), so it is incorrect to assume that the\niterator value will be NULL if the list is empty (in this case, the\ncheck 'if (!map) {' will always be false and never exit as expected).\n\nTo fix the bug, use a new variable 'iter' as the list iterator,\nwhile use the original variable 'map' as a dedicated pointer to\npoint to the found element.\n\nWithout this patch, Kernel crashes with below trace:\n\nUnable to handle kernel access to user memory outside uaccess routines\n at virtual address 0000ffff7fb03750\n...\nCall trace:\n fastrpc_map_create+0x70\/0x290 [fastrpc]\n fastrpc_req_mem_map+0xf0\/0x2dc [fastrpc]\n fastrpc_device_ioctl+0x138\/0xc60 [fastrpc]\n __arm64_sys_ioctl+0xa8\/0xec\n invoke_syscall+0x48\/0x114\n el0_svc_common.constprop.0+0xd4\/0xfc\n do_el0_svc+0x28\/0x90\n el0_svc+0x3c\/0x130\n el0t_64_sync_handler+0xa4\/0x130\n el0t_64_sync+0x18c\/0x190\nCode: 14000016 f94000a5 eb05029f 54000260 (b94018a6)\n---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d12905aad462383f4e7a5fdb024d2b7ae2d10cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5c07c5958cf0c9af6e76813e6de15d42ee49822","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49394","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:15.983","lastModified":"2025-02-26T07:01:15.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-iolatency: Fix inflight count imbalances and IO hangs on offline\n\niolatency needs to track the number of inflight IOs per cgroup. As this\ntracking can be expensive, it is disabled when no cgroup has iolatency\nconfigured for the device. To ensure that the inflight counters stay\nbalanced, iolatency_set_limit() freezes the request_queue while manipulating\nthe enabled counter, which ensures that no IO is in flight and thus all\ncounters are zero.\n\nUnfortunately, iolatency_set_limit() isn't the only place where the enabled\ncounter is manipulated. iolatency_pd_offline() can also dec the counter and\ntrigger disabling. As this disabling happens without freezing the q, this\ncan easily happen while some IOs are in flight and thus leak the counts.\n\nThis can be easily demonstrated by turning on iolatency on an one empty\ncgroup while IOs are in flight in other cgroups and then removing the\ncgroup. Note that iolatency shouldn't have been enabled elsewhere in the\nsystem to ensure that removing the cgroup disables iolatency for the whole\ndevice.\n\nThe following keeps flipping on and off iolatency on sda:\n\n  echo +io > \/sys\/fs\/cgroup\/cgroup.subtree_control\n  while true; do\n      mkdir -p \/sys\/fs\/cgroup\/test\n      echo '8:0 target=100000' > \/sys\/fs\/cgroup\/test\/io.latency\n      sleep 1\n      rmdir \/sys\/fs\/cgroup\/test\n      sleep 1\n  done\n\nand there's concurrent fio generating direct rand reads:\n\n  fio --name test --filename=\/dev\/sda --direct=1 --rw=randread \\\n      --runtime=600 --time_based --iodepth=256 --numjobs=4 --bs=4k\n\nwhile monitoring with the following drgn script:\n\n  while True:\n    for css in css_for_each_descendant_pre(prog['blkcg_root'].css.address_of_()):\n        for pos in hlist_for_each(container_of(css, 'struct blkcg', 'css').blkg_list):\n            blkg = container_of(pos, 'struct blkcg_gq', 'blkcg_node')\n            pd = blkg.pd[prog['blkcg_policy_iolatency'].plid]\n            if pd.value_() == 0:\n                continue\n            iolat = container_of(pd, 'struct iolatency_grp', 'pd')\n            inflight = iolat.rq_wait.inflight.counter.value_()\n            if inflight:\n                print(f'inflight={inflight} {disk_name(blkg.q.disk).decode(\"utf-8\")} '\n                      f'{cgroup_path(css.cgroup).decode(\"utf-8\")}')\n    time.sleep(1)\n\nThe monitoring output looks like the following:\n\n  inflight=1 sda \/user.slice\n  inflight=1 sda \/user.slice\n  ...\n  inflight=14 sda \/user.slice\n  inflight=13 sda \/user.slice\n  inflight=17 sda \/user.slice\n  inflight=15 sda \/user.slice\n  inflight=18 sda \/user.slice\n  inflight=17 sda \/user.slice\n  inflight=20 sda \/user.slice\n  inflight=19 sda \/user.slice <- fio stopped, inflight stuck at 19\n  inflight=19 sda \/user.slice\n  inflight=19 sda \/user.slice\n\nIf a cgroup with stuck inflight ends up getting throttled, the throttled IOs\nwill never get issued as there's no completion event to wake it up leading\nto an indefinite hang.\n\nThis patch fixes the bug by unifying enable handling into a work item which\nis automatically kicked off from iolatency_set_min_lat_nsec() which is\ncalled from both iolatency_set_limit() and iolatency_pd_offline() paths.\nPunting to a work item is necessary as iolatency_pd_offline() is called\nunder spinlocks while freezing a request_queue requires a sleepable context.\n\nThis also simplifies the code reducing LOC sans the comments and avoids the\nunnecessary freezes which were happening whenever a cgroup's latency target\nis newly set or cleared."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/515d077ee3085ae343b6bea7fd031f9906645f38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b0ff3ebbef791341695b718f8d2870869cf1d01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77692c02e1517c54f2fd0535f41aa4286ac9f140","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a177a36da6c54c98b8685d4f914cb3637d53c0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/968f7a239c590454ffba79c126fbe0e963a0ba78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a30acbb5dfb7bcc813ad6a18ca31011ac44e5547","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d19fa8f252000d141f9199ca32959c50314e1f05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49395","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.080","lastModified":"2025-02-26T07:01:16.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\num: Fix out-of-bounds read in LDT setup\n\nsyscall_stub_data() expects the data_count parameter to be the number of\nlongs, not bytes.\n\n ==================================================================\n BUG: KASAN: stack-out-of-bounds in syscall_stub_data+0x70\/0xe0\n Read of size 128 at addr 000000006411f6f0 by task swapper\/1\n\n CPU: 0 PID: 1 Comm: swapper Not tainted 5.18.0+ #18\n Call Trace:\n  show_stack.cold+0x166\/0x2a7\n  __dump_stack+0x3a\/0x43\n  dump_stack_lvl+0x1f\/0x27\n  print_report.cold+0xdb\/0xf81\n  kasan_report+0x119\/0x1f0\n  kasan_check_range+0x3a3\/0x440\n  memcpy+0x52\/0x140\n  syscall_stub_data+0x70\/0xe0\n  write_ldt_entry+0xac\/0x190\n  init_new_ldt+0x515\/0x960\n  init_new_context+0x2c4\/0x4d0\n  mm_init.constprop.0+0x5ed\/0x760\n  mm_alloc+0x118\/0x170\n  0x60033f48\n  do_one_initcall+0x1d7\/0x860\n  0x60003e7b\n  kernel_init+0x6e\/0x3d4\n  new_thread_handler+0x1e7\/0x2c0\n\n The buggy address belongs to stack of task swapper\/1\n  and is located at offset 64 in frame:\n  init_new_ldt+0x0\/0x960\n\n This frame has 2 objects:\n  [32, 40) 'addr'\n  [64, 80) 'desc'\n =================================================================="}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10995a382271254bd276627ec74136da4a23c4a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24ca648bf5f72ed8878cf09b5d4431935779681e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a4a62a14be1947fa945c5c11ebf67326381a568","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3549ab4b962cf619e8c55484a0d870a34b3f845f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/668ca34a428d6ffc0f99a1a6a9b661a288d4183b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e5ba2af2d729d5126aefd5aa3eadc69b8426e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9caad70819aef3431abaf73ba5163b55b161aba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf0dabc37446c5ee538ae7b4c467ab0e53fa5463","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1dc929a1e5fa1b2d842256db9fb8710d3be910","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49396","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.173","lastModified":"2025-02-26T07:01:16.173","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: qcom-qmp: fix reset-controller leak on probe errors\n\nMake sure to release the lane reset controller in case of a late probe\nerror (e.g. probe deferral).\n\nNote that due to the reset controller being defined in devicetree in\n\"lane\" child nodes, devm_reset_control_get_exclusive() cannot be used\ndirectly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2156dc390402043ba5982489c6625adcb0b0975c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d2900f20edfe541f75756a00deeb2ffe7c66bc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ac21b24af859c097eb4034e93430056068f8f31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c03eb0c8982677b4e17174073a011788891304d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a39d9eccb333b8c07c43ebea1c6dfda122378a0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7b5fbcaac5355e2e695dc0c08a0fcf248250388","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba173a6f8d8dffed64bb13ab23081bdddfb464f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/feb05b10b3ed3ae21b851520a0d0b71685439517","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49397","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.270","lastModified":"2025-02-26T07:01:16.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: qcom-qmp: fix struct clk leak on probe errors\n\nMake sure to release the pipe clock reference in case of a late probe\nerror (e.g. probe deferral)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1668ad103679306ba2ef37f758d704e58a3ef1a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/621a4bcfb7aa031e7760d7b156bad7a45df58387","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f3673c8d8eff0c4ab5a5ee0d3ca9717d85419b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad9b0fad02f9b3a06ad5ac7df11f244e316a6254","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b246695636a861a09f0e2cde92bb2dd8f114f024","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b999d48b0869b8599de532ff6081575a7ab5358a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0a4bc38a12f5a0cc5ad68670d9480e91e6a94df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8d23895a41243c6a8dbf392e531fff9497bb023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49398","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.377","lastModified":"2025-02-26T07:01:16.377","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: gadget: Replace list_for_each_entry_safe() if using giveback\n\nThe list_for_each_entry_safe() macro saves the current item (n) and\nthe item after (n+1), so that n can be safely removed without\ncorrupting the list.  However, when traversing the list and removing\nitems using gadget giveback, the DWC3 lock is briefly released,\nallowing other routines to execute.  There is a situation where, while\nitems are being removed from the cancelled_list using\ndwc3_gadget_ep_cleanup_cancelled_requests(), the pullup disable\nroutine is running in parallel (due to UDC unbind).  As the cleanup\nroutine removes n, and the pullup disable removes n+1, once the\ncleanup retakes the DWC3 lock, it references a request who was already\nremoved\/handled.  With list debug enabled, this leads to a panic.\nEnsure all instances of the macro are replaced where gadget giveback\nis used.\n\nExample call stack:\n\nThread#1:\n__dwc3_gadget_ep_set_halt() - CLEAR HALT\n  -> dwc3_gadget_ep_cleanup_cancelled_requests()\n    ->list_for_each_entry_safe()\n    ->dwc3_gadget_giveback(n)\n      ->dwc3_gadget_del_and_unmap_request()- n deleted[cancelled_list]\n      ->spin_unlock\n      ->Thread#2 executes\n      ...\n    ->dwc3_gadget_giveback(n+1)\n      ->Already removed!\n\nThread#2:\ndwc3_gadget_pullup()\n  ->waiting for dwc3 spin_lock\n  ...\n  ->Thread#1 released lock\n  ->dwc3_stop_active_transfers()\n    ->dwc3_remove_requests()\n      ->fetches n+1 item from cancelled_list (n removed by Thread#1)\n      ->dwc3_gadget_giveback()\n        ->dwc3_gadget_del_and_unmap_request()- n+1 deleted[cancelled_list]\n        ->spin_unlock"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c6e5dc3b639c96e6839a8d1b8e951923fdfd34a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2424307cdf421ac72075a1384eae4e4199ab6457","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26a7e6832afe9d9a991cfd9015177f083cf959cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf594d1d0c1d7b895954018043536ffd327844f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49399","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.470","lastModified":"2025-02-26T07:01:16.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: goldfish: Use tty_port_destroy() to destroy port\n\nIn goldfish_tty_probe(), the port initialized through tty_port_init()\nshould be destroyed in error paths.In goldfish_tty_remove(), qtty->port\nalso should be destroyed or else might leak resources.\n\nFix the above by calling tty_port_destroy()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/241fcb79dd1df276d80b19f5f6acc9eaaaa63309","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/326192b99c903a2193d820c30ed936cc2402382c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f6ce70abfb7ccf9d787781cbc4c03294a775a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4639d1b992de8f37d66f698056875c274efcd45f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/507b05063d1b7a1fcb9f7d7c47586fc4f3508f98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ae3d073f7db5578ae1907544f0c15947e9678e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da64f419d7f78272bfe40dde1262602d4ff6b32c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee6c33b29e624f515202a31bf6ef0437f26a1867","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49400","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.570","lastModified":"2025-02-26T07:01:16.570","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmd: Don't set mddev private to NULL in raid0 pers->free\n\nIn normal stop process, it does like this:\n   do_md_stop\n      |\n   __md_stop (pers->free(); mddev->private=NULL)\n      |\n   md_free (free mddev)\n__md_stop sets mddev->private to NULL after pers->free. The raid device\nwill be stopped and mddev memory is free. But in reshape, it doesn't\nfree the mddev and mddev will still be used in new raid.\n\nIn reshape, it first sets mddev->private to new_pers and then runs\nold_pers->free(). Now raid0 sets mddev->private to NULL in raid0_free.\nThe new raid can't work anymore. It will panic when dereference\nmddev->private because of NULL pointer dereference.\n\nIt can panic like this:\n[63010.814972] kernel BUG at drivers\/md\/raid10.c:928!\n[63010.819778] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[63010.825011] CPU: 3 PID: 44437 Comm: md0_resync Kdump: loaded Not tainted 5.14.0-86.el9.x86_64 #1\n[63010.833789] Hardware name: Dell Inc. PowerEdge R6415\/07YXFK, BIOS 1.15.0 09\/11\/2020\n[63010.841440] RIP: 0010:raise_barrier+0x161\/0x170 [raid10]\n[63010.865508] RSP: 0018:ffffc312408bbc10 EFLAGS: 00010246\n[63010.870734] RAX: 0000000000000000 RBX: ffffa00bf7d39800 RCX: 0000000000000000\n[63010.877866] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffffa00bf7d39800\n[63010.884999] RBP: 0000000000000000 R08: fffffa4945e74400 R09: 0000000000000000\n[63010.892132] R10: ffffa00eed02f798 R11: 0000000000000000 R12: ffffa00bbc435200\n[63010.899266] R13: ffffa00bf7d39800 R14: 0000000000000400 R15: 0000000000000003\n[63010.906399] FS:  0000000000000000(0000) GS:ffffa00eed000000(0000) knlGS:0000000000000000\n[63010.914485] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[63010.920229] CR2: 00007f5cfbe99828 CR3: 0000000105efe000 CR4: 00000000003506e0\n[63010.927363] Call Trace:\n[63010.929822]  ? bio_reset+0xe\/0x40\n[63010.933144]  ? raid10_alloc_init_r10buf+0x60\/0xa0 [raid10]\n[63010.938629]  raid10_sync_request+0x756\/0x1610 [raid10]\n[63010.943770]  md_do_sync.cold+0x3e4\/0x94c\n[63010.947698]  md_thread+0xab\/0x160\n[63010.951024]  ? md_write_inc+0x50\/0x50\n[63010.954688]  kthread+0x149\/0x170\n[63010.957923]  ? set_kthread_struct+0x40\/0x40\n[63010.962107]  ret_from_fork+0x22\/0x30\n\nRemoving the code that sets mddev->private to NULL in raid0 can fix\nproblem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f2571ad7a30ff6b33cde142439f9378669f8b4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7da3454a65f8a56e65dfb44fa0ccac08cbc2f5a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7a51df785031cc49caf1c59766ca89cfa97b54b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f63fd1e0e0fc158023cc67ea6a07e278019061ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49401","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.660","lastModified":"2025-02-26T07:01:16.660","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/page_owner: use strscpy() instead of strlcpy()\n\ncurrent->comm[] is not a string (no guarantee for a zero byte in it).\n\nstrlcpy(s1, s2, l) is calling strlen(s2), potentially\ncausing out-of-bound access, as reported by syzbot:\n\ndetected buffer overflow in __fortify_strlen\n------------[ cut here ]------------\nkernel BUG at lib\/string_helpers.c:980!\ninvalid opcode: 0000 [#1] PREEMPT SMP KASAN\nCPU: 0 PID: 4087 Comm: dhcpcd-run-hooks Not tainted 5.18.0-rc3-syzkaller-01537-g20b87e7c29df #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:fortify_panic+0x18\/0x1a lib\/string_helpers.c:980\nCode: 8c e8 c5 ba e1 fa e9 23 0f bf fa e8 0b 5d 8c f8 eb db 55 48 89 fd e8 e0 49 40 f8 48 89 ee 48 c7 c7 80 f5 26 8a e8 99 09 f1 ff <0f> 0b e8 ca 49 40 f8 48 8b 54 24 18 4c 89 f1 48 c7 c7 00 00 27 8a\nRSP: 0018:ffffc900000074a8 EFLAGS: 00010286\n\nRAX: 000000000000002c RBX: ffff88801226b728 RCX: 0000000000000000\nRDX: ffff8880198e0000 RSI: ffffffff81600458 RDI: fffff52000000e87\nRBP: ffffffff89da2aa0 R08: 000000000000002c R09: 0000000000000000\nR10: ffffffff815fae2e R11: 0000000000000000 R12: ffff88801226b700\nR13: ffff8880198e0830 R14: 0000000000000000 R15: 0000000000000000\nFS:  0000000000000000(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f5876ad6ff8 CR3: 000000001a48c000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\nCall Trace:\n <IRQ>\n __fortify_strlen include\/linux\/fortify-string.h:128 [inline]\n strlcpy include\/linux\/fortify-string.h:143 [inline]\n __set_page_owner_handle+0x2b1\/0x3e0 mm\/page_owner.c:171\n __set_page_owner+0x3e\/0x50 mm\/page_owner.c:190\n prep_new_page mm\/page_alloc.c:2441 [inline]\n get_page_from_freelist+0xba2\/0x3e00 mm\/page_alloc.c:4182\n __alloc_pages+0x1b2\/0x500 mm\/page_alloc.c:5408\n alloc_pages+0x1aa\/0x310 mm\/mempolicy.c:2272\n alloc_slab_page mm\/slub.c:1799 [inline]\n allocate_slab+0x26c\/0x3c0 mm\/slub.c:1944\n new_slab mm\/slub.c:2004 [inline]\n ___slab_alloc+0x8df\/0xf20 mm\/slub.c:3005\n __slab_alloc.constprop.0+0x4d\/0xa0 mm\/slub.c:3092\n slab_alloc_node mm\/slub.c:3183 [inline]\n slab_alloc mm\/slub.c:3225 [inline]\n __kmem_cache_alloc_lru mm\/slub.c:3232 [inline]\n kmem_cache_alloc+0x360\/0x3b0 mm\/slub.c:3242\n dst_alloc+0x146\/0x1f0 net\/core\/dst.c:92"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5cd9900a1ac8b0a4ff3cd97d4d77b7711be435bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd8c1fd8cdd14158f2d8bea2d1bfe8015dccfa3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49402","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.750","lastModified":"2025-02-26T07:01:16.750","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Clean up hash direct_functions on register failures\n\nWe see the following GPF when register_ftrace_direct fails:\n\n[ ] general protection fault, probably for non-canonical address \\\n  0x200000000000010: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI\n[...]\n[ ] RIP: 0010:ftrace_find_rec_direct+0x53\/0x70\n[ ] Code: 48 c1 e0 03 48 03 42 08 48 8b 10 31 c0 48 85 d2 74 [...]\n[ ] RSP: 0018:ffffc9000138bc10 EFLAGS: 00010206\n[ ] RAX: 0000000000000000 RBX: ffffffff813e0df0 RCX: 000000000000003b\n[ ] RDX: 0200000000000000 RSI: 000000000000000c RDI: ffffffff813e0df0\n[ ] RBP: ffffffffa00a3000 R08: ffffffff81180ce0 R09: 0000000000000001\n[ ] R10: ffffc9000138bc18 R11: 0000000000000001 R12: ffffffff813e0df0\n[ ] R13: ffffffff813e0df0 R14: ffff888171b56400 R15: 0000000000000000\n[ ] FS:  00007fa9420c7780(0000) GS:ffff888ff6a00000(0000) knlGS:000000000\n[ ] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ ] CR2: 000000000770d000 CR3: 0000000107d50003 CR4: 0000000000370ee0\n[ ] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ ] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ ] Call Trace:\n[ ]  <TASK>\n[ ]  register_ftrace_direct+0x54\/0x290\n[ ]  ? render_sigset_t+0xa0\/0xa0\n[ ]  bpf_trampoline_update+0x3f5\/0x4a0\n[ ]  ? 0xffffffffa00a3000\n[ ]  bpf_trampoline_link_prog+0xa9\/0x140\n[ ]  bpf_tracing_prog_attach+0x1dc\/0x450\n[ ]  bpf_raw_tracepoint_open+0x9a\/0x1e0\n[ ]  ? find_held_lock+0x2d\/0x90\n[ ]  ? lock_release+0x150\/0x430\n[ ]  __sys_bpf+0xbd6\/0x2700\n[ ]  ? lock_is_held_type+0xd8\/0x130\n[ ]  __x64_sys_bpf+0x1c\/0x20\n[ ]  do_syscall_64+0x3a\/0x80\n[ ]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ ] RIP: 0033:0x7fa9421defa9\n[ ] Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 9 f8 [...]\n[ ] RSP: 002b:00007ffed743bd78 EFLAGS: 00000246 ORIG_RAX: 0000000000000141\n[ ] RAX: ffffffffffffffda RBX: 00000000069d2480 RCX: 00007fa9421defa9\n[ ] RDX: 0000000000000078 RSI: 00007ffed743bd80 RDI: 0000000000000011\n[ ] RBP: 00007ffed743be00 R08: 0000000000bb7270 R09: 0000000000000000\n[ ] R10: 00000000069da210 R11: 0000000000000246 R12: 0000000000000001\n[ ] R13: 00007ffed743c4b0 R14: 00000000069d2480 R15: 0000000000000001\n[ ]  <\/TASK>\n[ ] Modules linked in: klp_vm(OK)\n[ ] ---[ end trace 0000000000000000 ]---\n\nOne way to trigger this is:\n  1. load a livepatch that patches kernel function xxx;\n  2. run bpftrace -e 'kfunc:xxx {}', this will fail (expected for now);\n  3. repeat #2 => gpf.\n\nThis is because the entry is added to direct_functions, but not removed.\nFix this by remove the entry from direct_functions when\nregister_ftrace_direct fails.\n\nAlso remove the last trailing space from ftrace.c, so we don't have to\nworry about it anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7d54c15cb89a29a5f59e5ffc9ee62e6591769ef1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/805e87af946d8d2954171361e64d143ff37a441b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82c888e51c2176a06f8b4541cf748ee81aac6e7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0392833a178cf109a57c2a9d4d531bdfc6cd98f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cae2978d6907ef2c08b9b15f704e783f7c284713","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49403","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.847","lastModified":"2025-02-26T07:01:16.847","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlib\/string_helpers: fix not adding strarray to device's resource list\n\nAdd allocated strarray to device's resource list. This is a must to\nautomatically release strarray when the device disappears.\n\nWithout this fix we have a memory leak in the few drivers which use\ndevm_kasprintf_strarray()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a152eb42fcecfe41239c3c6695342f3a128593e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf29edab0c9ff3d2633b8306a67d04c357e2a385","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd290a9839cee2f6641558877e707bd373c8f6f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49404","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:16.937","lastModified":"2025-02-26T07:01:16.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hfi1: Fix potential integer multiplication overflow errors\n\nWhen multiplying of different types, an overflow is possible even when\nstoring the result in a larger type. This is because the conversion is\ndone after the multiplication. So arithmetic overflow and thus in\nincorrect value is possible.\n\nCorrect an instance of this in the inter packet delay calculation.  Fix by\nensuring one of the operands is u64 which will promote the other to u64 as\nwell ensuring no overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06039d8afefdbac05bcea5f397188407eba2996d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/252f4afd4557a2e7075f793a5c80fe6dd9e9ee4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31dca00d0cc9f4133320d72eb7e3720badc6d6e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f09ec80f115d2875d747ed28adc1773037e0f8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79c164e61f818054cd6012e9035701840d895c51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8858284dd74906fa00f04f0252c75df4893a7959","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a89cb7ddf6a89bab6012e19da38b7cdb26175c19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef5ab2e48a5f9960e2352332b7cdb7064bb49032","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f93e91a0372c922c20d5bee260b0f43b4b8a1bee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49405","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.037","lastModified":"2025-02-26T07:01:17.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: r8188eu: prevent ->Ssid overflow in rtw_wx_set_scan()\n\nThis code has a check to prevent read overflow but it needs another\ncheck to prevent writing beyond the end of the ->Ssid[] array."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/476bfda0be0f9669add92bff604ca78226cf53d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac2eab7de458f5e1210ce1237afab40a307075c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc10916e890948d8927a5c8c40fb5dc44be5e1b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4bd6b72df4f01aa866ceb298466d6d07a6bd525","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49406","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.123","lastModified":"2025-02-26T07:01:17.123","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix potential deadlock in blk_ia_range_sysfs_show()\n\nWhen being read, a sysfs attribute is already protected against removal\nwith the kobject node active reference counter. As a result, in\nblk_ia_range_sysfs_show(), there is no need to take the queue sysfs\nlock when reading the value of a range attribute. Using the queue sysfs\nlock in this function creates a potential deadlock situation with the\ndisk removal, something that a lockdep signals with a splat when the\ndevice is removed:\n\n[  760.703551]  Possible unsafe locking scenario:\n[  760.703551]\n[  760.703554]        CPU0                    CPU1\n[  760.703556]        ----                    ----\n[  760.703558]   lock(&q->sysfs_lock);\n[  760.703565]                                lock(kn->active#385);\n[  760.703573]                                lock(&q->sysfs_lock);\n[  760.703579]   lock(kn->active#385);\n[  760.703587]\n[  760.703587]  *** DEADLOCK ***\n\nSolve this by removing the mutex_lock()\/mutex_unlock() calls from\nblk_ia_range_sysfs_show()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41e46b3c2aa24f755b2ae9ec4ce931ba5f0d8532","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/717b078bc745ba9a262abebed9806a17e8bbb77b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc107c805cde709866b59867ef72b9390199205e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49407","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.217","lastModified":"2025-02-26T07:01:17.217","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndlm: fix plock invalid read\n\nThis patch fixes an invalid read showed by KASAN. A unlock will allocate a\n\"struct plock_op\" and a followed send_op() will append it to a global\nsend_list data structure. In some cases a followed dev_read() moves it\nto recv_list and dev_write() will cast it to \"struct plock_xop\" and access\nfields which are only available in those structures. At this point an\ninvalid read happens by accessing those fields.\n\nTo fix this issue the \"callback\" field is moved to \"struct plock_op\" to\nindicate that a cast to \"plock_xop\" is allowed and does the additional\n\"plock_xop\" handling if set.\n\nExample of the KASAN output which showed the invalid read:\n\n[ 2064.296453] ==================================================================\n[ 2064.304852] BUG: KASAN: slab-out-of-bounds in dev_write+0x52b\/0x5a0 [dlm]\n[ 2064.306491] Read of size 8 at addr ffff88800ef227d8 by task dlm_controld\/7484\n[ 2064.308168]\n[ 2064.308575] CPU: 0 PID: 7484 Comm: dlm_controld Kdump: loaded Not tainted 5.14.0+ #9\n[ 2064.310292] Hardware name: Red Hat KVM, BIOS 0.5.1 01\/01\/2011\n[ 2064.311618] Call Trace:\n[ 2064.312218]  dump_stack_lvl+0x56\/0x7b\n[ 2064.313150]  print_address_description.constprop.8+0x21\/0x150\n[ 2064.314578]  ? dev_write+0x52b\/0x5a0 [dlm]\n[ 2064.315610]  ? dev_write+0x52b\/0x5a0 [dlm]\n[ 2064.316595]  kasan_report.cold.14+0x7f\/0x11b\n[ 2064.317674]  ? dev_write+0x52b\/0x5a0 [dlm]\n[ 2064.318687]  dev_write+0x52b\/0x5a0 [dlm]\n[ 2064.319629]  ? dev_read+0x4a0\/0x4a0 [dlm]\n[ 2064.320713]  ? bpf_lsm_kernfs_init_security+0x10\/0x10\n[ 2064.321926]  vfs_write+0x17e\/0x930\n[ 2064.322769]  ? __fget_light+0x1aa\/0x220\n[ 2064.323753]  ksys_write+0xf1\/0x1c0\n[ 2064.324548]  ? __ia32_sys_read+0xb0\/0xb0\n[ 2064.325464]  do_syscall_64+0x3a\/0x80\n[ 2064.326387]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ 2064.327606] RIP: 0033:0x7f807e4ba96f\n[ 2064.328470] Code: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 39 87 f8 ff 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 7c 87 f8 ff 48\n[ 2064.332902] RSP: 002b:00007ffd50cfe6e0 EFLAGS: 00000293 ORIG_RAX: 0000000000000001\n[ 2064.334658] RAX: ffffffffffffffda RBX: 000055cc3886eb30 RCX: 00007f807e4ba96f\n[ 2064.336275] RDX: 0000000000000040 RSI: 00007ffd50cfe7e0 RDI: 0000000000000010\n[ 2064.337980] RBP: 00007ffd50cfe7e0 R08: 0000000000000000 R09: 0000000000000001\n[ 2064.339560] R10: 000055cc3886eb30 R11: 0000000000000293 R12: 000055cc3886eb80\n[ 2064.341237] R13: 000055cc3886eb00 R14: 000055cc3886f590 R15: 0000000000000001\n[ 2064.342857]\n[ 2064.343226] Allocated by task 12438:\n[ 2064.344057]  kasan_save_stack+0x1c\/0x40\n[ 2064.345079]  __kasan_kmalloc+0x84\/0xa0\n[ 2064.345933]  kmem_cache_alloc_trace+0x13b\/0x220\n[ 2064.346953]  dlm_posix_unlock+0xec\/0x720 [dlm]\n[ 2064.348811]  do_lock_file_wait.part.32+0xca\/0x1d0\n[ 2064.351070]  fcntl_setlk+0x281\/0xbc0\n[ 2064.352879]  do_fcntl+0x5e4\/0xfe0\n[ 2064.354657]  __x64_sys_fcntl+0x11f\/0x170\n[ 2064.356550]  do_syscall_64+0x3a\/0x80\n[ 2064.358259]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ 2064.360745]\n[ 2064.361511] Last potentially related work creation:\n[ 2064.363957]  kasan_save_stack+0x1c\/0x40\n[ 2064.365811]  __kasan_record_aux_stack+0xaf\/0xc0\n[ 2064.368100]  call_rcu+0x11b\/0xf70\n[ 2064.369785]  dlm_process_incoming_buffer+0x47d\/0xfd0 [dlm]\n[ 2064.372404]  receive_from_sock+0x290\/0x770 [dlm]\n[ 2064.374607]  process_recv_sockets+0x32\/0x40 [dlm]\n[ 2064.377290]  process_one_work+0x9a8\/0x16e0\n[ 2064.379357]  worker_thread+0x87\/0xbf0\n[ 2064.381188]  kthread+0x3ac\/0x490\n[ 2064.383460]  ret_from_fork+0x22\/0x30\n[ 2064.385588]\n[ 2064.386518] Second to last potentially related work creation:\n[ 2064.389219]  kasan_save_stack+0x1c\/0x40\n[ 2064.391043]  __kasan_record_aux_stack+0xaf\/0xc0\n[ 2064.393303]  call_rcu+0x11b\/0xf70\n[ 2064.394885]  dlm_process_incoming_buffer+0x47d\/0xfd0 [dlm]\n[ 2064.397694]  receive_from_sock+0x290\/0x770 \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c55155cc365861044d9e6e80e342693e8805e33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42252d0d2aa9b94d168241710a761588b3959019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49cd9eb7b9a7b88124b31e31f8e539acaf1b3a6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56aa8d1fbd02357f3bf81bdfba1cde87ce8402fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a1765adf9855cf0f6d3f7e0eb4b78ca66f70dee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72f2f68970f9bdc252d59e119b385a6441b0b155","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/899bc4429174861122f0c236588700a4710c1fec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acdad5bc9827922ec2f2e84fd198718aa8e8ab92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e421872fa17542cf33747071fb141b0130ce9ef7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49408","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.323","lastModified":"2025-02-26T07:01:17.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix memory leak in parse_apply_sb_mount_options()\n\nIf processing the on-disk mount options fails after any memory was\nallocated in the ext4_fs_context, e.g. s_qf_names, then this memory is\nleaked.  Fix this by calling ext4_fc_free() instead of kfree() directly.\n\nReproducer:\n\n    mkfs.ext4 -F \/dev\/vdc\n    tune2fs \/dev\/vdc -E mount_opts=usrjquota=file\n    echo clear > \/sys\/kernel\/debug\/kmemleak\n    mount \/dev\/vdc \/vdc\n    echo scan > \/sys\/kernel\/debug\/kmemleak\n    sleep 5\n    echo scan > \/sys\/kernel\/debug\/kmemleak\n    cat \/sys\/kernel\/debug\/kmemleak"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9ea3e6168948189cec31d0678d2b55b395f88491","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c069db76ed7b681c69159f44be96d2137e9ca989","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f92ded66e9d0aa20b883a2a5183973abc8f41815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49409","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.420","lastModified":"2025-02-26T07:01:17.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug_on in __es_tree_search\n\nHulk Robot reported a BUG_ON:\n==================================================================\nkernel BUG at fs\/ext4\/extents_status.c:199!\n[...]\nRIP: 0010:ext4_es_end fs\/ext4\/extents_status.c:199 [inline]\nRIP: 0010:__es_tree_search+0x1e0\/0x260 fs\/ext4\/extents_status.c:217\n[...]\nCall Trace:\n ext4_es_cache_extent+0x109\/0x340 fs\/ext4\/extents_status.c:766\n ext4_cache_extents+0x239\/0x2e0 fs\/ext4\/extents.c:561\n ext4_find_extent+0x6b7\/0xa20 fs\/ext4\/extents.c:964\n ext4_ext_map_blocks+0x16b\/0x4b70 fs\/ext4\/extents.c:4384\n ext4_map_blocks+0xe26\/0x19f0 fs\/ext4\/inode.c:567\n ext4_getblk+0x320\/0x4c0 fs\/ext4\/inode.c:980\n ext4_bread+0x2d\/0x170 fs\/ext4\/inode.c:1031\n ext4_quota_read+0x248\/0x320 fs\/ext4\/super.c:6257\n v2_read_header+0x78\/0x110 fs\/quota\/quota_v2.c:63\n v2_check_quota_file+0x76\/0x230 fs\/quota\/quota_v2.c:82\n vfs_load_quota_inode+0x5d1\/0x1530 fs\/quota\/dquot.c:2368\n dquot_enable+0x28a\/0x330 fs\/quota\/dquot.c:2490\n ext4_quota_enable fs\/ext4\/super.c:6137 [inline]\n ext4_enable_quotas+0x5d7\/0x960 fs\/ext4\/super.c:6163\n ext4_fill_super+0xa7c9\/0xdc00 fs\/ext4\/super.c:4754\n mount_bdev+0x2e9\/0x3b0 fs\/super.c:1158\n mount_fs+0x4b\/0x1e4 fs\/super.c:1261\n[...]\n==================================================================\n\nAbove issue may happen as follows:\n-------------------------------------\next4_fill_super\n ext4_enable_quotas\n  ext4_quota_enable\n   ext4_iget\n    __ext4_iget\n     ext4_ext_check_inode\n      ext4_ext_check\n       __ext4_ext_check\n        ext4_valid_extent_entries\n         Check for overlapping extents does't take effect\n   dquot_enable\n    vfs_load_quota_inode\n     v2_check_quota_file\n      v2_read_header\n       ext4_quota_read\n        ext4_bread\n         ext4_getblk\n          ext4_map_blocks\n           ext4_ext_map_blocks\n            ext4_find_extent\n             ext4_cache_extents\n              ext4_es_cache_extent\n               ext4_es_cache_extent\n                __es_tree_search\n                 ext4_es_end\n                  BUG_ON(es->es_lblk + es->es_len < es->es_lblk)\n\nThe error ext4 extents is as follows:\n0af3 0300 0400 0000 00000000    extent_header\n00000000 0100 0000 12000000     extent1\n00000000 0100 0000 18000000     extent2\n02000000 0400 0000 14000000     extent3\n\nIn the ext4_valid_extent_entries function,\nif prev is 0, no error is returned even if lblock<=prev.\nThis was intended to skip the check on the first extent, but\nin the error image above, prev=0+1-1=0 when checking the second extent,\nso even though lblock<=prev, the function does not return an error.\nAs a result, bug_ON occurs in __es_tree_search and the system panics.\n\nTo solve this problem, we only need to check that:\n1. The lblock of the first extent is not less than 0.\n2. The lblock of the next extent  is not less than\n   the next block of the previous extent.\nThe same applies to extent_idx."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c617827cd51018bc377bd2954e176920ddbcfad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fd58b5cf118d2d9038a0b8c9cc0e43096297686","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59cf2fabbfe76de29d88dd7ae69858a25735b59f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0083459e2b6b07ebd78bea2fe684a19cc0f3d0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d36f6ed761b53933b0b4126486c10d3da7751e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6ea18b3ab0c0d7fefffb3c4d27df758b1c790a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49410","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.517","lastModified":"2025-02-26T07:01:17.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix potential double free in create_var_ref()\n\nIn create_var_ref(), init_var_ref() is called to initialize the fields\nof variable ref_field, which is allocated in the previous function call\nto create_hist_field(). Function init_var_ref() allocates the\ncorresponding fields such as ref_field->system, but frees these fields\nwhen the function encounters an error. The caller later calls\ndestroy_hist_field() to conduct error handling, which frees the fields\nand the variable itself. This results in double free of the fields which\nare already freed in the previous function.\n\nFix this by storing NULL to the corresponding fields when they are freed\nin init_var_ref()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/058cb6d86b9789377216c936506b346aaa1eb581","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37443b3508b8cce6832f8d25cb4550b2f7801f50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fdfb15e08598711dbf50daf56a33965232daf0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99696a2592bca641eb88cc9a80c90e591afebd0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd83ff3bbfb003832481c9bff999d12385f396ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c27f744ceefadc7bbeb14233b6abc150ced617d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8b383f83cb573152c577eca1ef101e89995b72a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49411","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.613","lastModified":"2025-02-26T07:01:17.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbfq: Make sure bfqg for which we are queueing requests is online\n\nBios queued into BFQ IO scheduler can be associated with a cgroup that\nwas already offlined. This may then cause insertion of this bfq_group\ninto a service tree. But this bfq_group will get freed as soon as last\nbio associated with it is completed leading to use after free issues for\nservice tree users. Fix the problem by making sure we always operate on\nonline bfq_group. If the bfq_group associated with the bio is not\nonline, we pick the first online parent."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/075a53b78b815301f8d3dd1ee2cd99554e34f0dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51f724bffa3403a5236597e6b75df7329c1ec6e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ee0868b0c3ccead5907685fcdcdd0c08dfe4b0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7781c38552e6cc54ed8e9040279561340516b881","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97bd6c56bdcb41079e488e31df56809e3b2ce628","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccddf8cd411c1800863ed357064e56ceffd356bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49412","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.703","lastModified":"2025-02-26T07:01:17.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbfq: Avoid merging queues with different parents\n\nIt can happen that the parent of a bfqq changes between the moment we\ndecide two queues are worth to merge (and set bic->stable_merge_bfqq)\nand the moment bfq_setup_merge() is called. This can happen e.g. because\nthe process submitted IO for a different cgroup and thus bfqq got\nreparented. It can even happen that the bfqq we are merging with has\nparent cgroup that is already offline and going to be destroyed in which\ncase the merge can lead to use-after-free issues such as:\n\nBUG: KASAN: use-after-free in __bfq_deactivate_entity+0x9cb\/0xa50\nRead of size 8 at addr ffff88800693c0c0 by task runc:[2:INIT]\/10544\n\nCPU: 0 PID: 10544 Comm: runc:[2:INIT] Tainted: G            E     5.15.2-0.g5fb85fd-default #1 openSUSE Tumbleweed (unreleased) f1f3b891c72369aebecd2e43e4641a6358867c70\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a-rebuilt.opensuse.org 04\/01\/2014\nCall Trace:\n <IRQ>\n dump_stack_lvl+0x46\/0x5a\n print_address_description.constprop.0+0x1f\/0x140\n ? __bfq_deactivate_entity+0x9cb\/0xa50\n kasan_report.cold+0x7f\/0x11b\n ? __bfq_deactivate_entity+0x9cb\/0xa50\n __bfq_deactivate_entity+0x9cb\/0xa50\n ? update_curr+0x32f\/0x5d0\n bfq_deactivate_entity+0xa0\/0x1d0\n bfq_del_bfqq_busy+0x28a\/0x420\n ? resched_curr+0x116\/0x1d0\n ? bfq_requeue_bfqq+0x70\/0x70\n ? check_preempt_wakeup+0x52b\/0xbc0\n __bfq_bfqq_expire+0x1a2\/0x270\n bfq_bfqq_expire+0xd16\/0x2160\n ? try_to_wake_up+0x4ee\/0x1260\n ? bfq_end_wr_async_queues+0xe0\/0xe0\n ? _raw_write_unlock_bh+0x60\/0x60\n ? _raw_spin_lock_irq+0x81\/0xe0\n bfq_idle_slice_timer+0x109\/0x280\n ? bfq_dispatch_request+0x4870\/0x4870\n __hrtimer_run_queues+0x37d\/0x700\n ? enqueue_hrtimer+0x1b0\/0x1b0\n ? kvm_clock_get_cycles+0xd\/0x10\n ? ktime_get_update_offsets_now+0x6f\/0x280\n hrtimer_interrupt+0x2c8\/0x740\n\nFix the problem by checking that the parent of the two bfqqs we are\nmerging in bfq_setup_merge() is the same."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ee21edaed09e6b25f2c007b3f326752bc89bacf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d172b9dc913e161d8ff88770eea01701ff553de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8abc8763b11c35e03cc91d59fd0cd28d39f88ca9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97be7d13fbd4001eeab49b1be6399f23a8c66160","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a16c65cca7d2c7ff965fdd3adc8df2156529caf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1cee4ab36acef271be9101590756ed0c0c374d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49413","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.800","lastModified":"2025-02-26T07:01:17.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbfq: Update cgroup information before merging bio\n\nWhen the process is migrated to a different cgroup (or in case of\nwriteback just starts submitting bios associated with a different\ncgroup) bfq_merge_bio() can operate with stale cgroup information in\nbic. Thus the bio can be merged to a request from a different cgroup or\nit can result in merging of bfqqs for different cgroups or bfqqs of\nalready dead cgroups and causing possible use-after-free issues. Fix the\nproblem by updating cgroup information in bfq_merge_bio()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a1077f17169a6059992a0bbdb330e0abad1e6d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b06691af08b41dfd81052a3362514d9827b44bb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9165200c5627a2cf4408eefabdf0058bdf95e1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da9f3025d595956410ceaab2bea01980d7775948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8821f45612f2e6d9adb9c6ba0fb4184f57692aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea591cd4eb270393810e7be01feb8fde6a34fbbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49414","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.890","lastModified":"2025-02-26T07:01:17.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix race condition between ext4_write and ext4_convert_inline_data\n\nHulk Robot reported a BUG_ON:\n ==================================================================\n EXT4-fs error (device loop3): ext4_mb_generate_buddy:805: group 0,\n block bitmap and bg descriptor inconsistent: 25 vs 31513 free clusters\n kernel BUG at fs\/ext4\/ext4_jbd2.c:53!\n invalid opcode: 0000 [#1] SMP KASAN PTI\n CPU: 0 PID: 25371 Comm: syz-executor.3 Not tainted 5.10.0+ #1\n RIP: 0010:ext4_put_nojournal fs\/ext4\/ext4_jbd2.c:53 [inline]\n RIP: 0010:__ext4_journal_stop+0x10e\/0x110 fs\/ext4\/ext4_jbd2.c:116\n [...]\n Call Trace:\n  ext4_write_inline_data_end+0x59a\/0x730 fs\/ext4\/inline.c:795\n  generic_perform_write+0x279\/0x3c0 mm\/filemap.c:3344\n  ext4_buffered_write_iter+0x2e3\/0x3d0 fs\/ext4\/file.c:270\n  ext4_file_write_iter+0x30a\/0x11c0 fs\/ext4\/file.c:520\n  do_iter_readv_writev+0x339\/0x3c0 fs\/read_write.c:732\n  do_iter_write+0x107\/0x430 fs\/read_write.c:861\n  vfs_writev fs\/read_write.c:934 [inline]\n  do_pwritev+0x1e5\/0x380 fs\/read_write.c:1031\n [...]\n ==================================================================\n\nAbove issue may happen as follows:\n           cpu1                     cpu2\n__________________________|__________________________\ndo_pwritev\n vfs_writev\n  do_iter_write\n   ext4_file_write_iter\n    ext4_buffered_write_iter\n     generic_perform_write\n      ext4_da_write_begin\n                           vfs_fallocate\n                            ext4_fallocate\n                             ext4_convert_inline_data\n                              ext4_convert_inline_data_nolock\n                               ext4_destroy_inline_data_nolock\n                                clear EXT4_STATE_MAY_INLINE_DATA\n                               ext4_map_blocks\n                                ext4_ext_map_blocks\n                                 ext4_mb_new_blocks\n                                  ext4_mb_regular_allocator\n                                   ext4_mb_good_group_nolock\n                                    ext4_mb_init_group\n                                     ext4_mb_init_cache\n                                      ext4_mb_generate_buddy  --> error\n       ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA)\n                                ext4_restore_inline_data\n                                 set EXT4_STATE_MAY_INLINE_DATA\n       ext4_block_write_begin\n      ext4_da_write_end\n       ext4_test_inode_state(inode, EXT4_STATE_MAY_INLINE_DATA)\n       ext4_write_inline_data_end\n        handle=NULL\n        ext4_journal_stop(handle)\n         __ext4_journal_stop\n          ext4_put_nojournal(handle)\n           ref_cnt = (unsigned long)handle\n           BUG_ON(ref_cnt == 0)  ---> BUG_ON\n\nThe lock held by ext4_convert_inline_data is xattr_sem, but the lock\nheld by generic_perform_write is i_rwsem. Therefore, the two locks can\nbe concurrent.\n\nTo solve above issue, we add inode_lock() for ext4_convert_inline_data().\nAt the same time, move ext4_convert_inline_data() in front of\next4_punch_hole(), remove similar handling from ext4_punch_hole()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14602353b350950b551eccc6b46411aa3b12ffe2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18881d7e517169193d9ef6c89c7f322e3e164277","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/725e00cb7039eae291890f1bb19bc867176745f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91f90b571f1a23f5b8a9c2b68a9aa5d6981a3c3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccc6639f831bee91aa8b41c8a1cdd020ecfb9f32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f87c7a4b084afc13190cbb263538e444cb2b392a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49415","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:17.987","lastModified":"2025-02-26T07:01:17.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipmi:ipmb: Fix refcount leak in ipmi_ipmb_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a508e33956b538e034ed5df619a73ec7c15bda72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f22068357acc268148bd55ce77f0a3e5c86701b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49416","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.073","lastModified":"2025-02-26T07:01:18.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix use-after-free in chanctx code\n\nIn ieee80211_vif_use_reserved_context(), when we have an\nold context and the new context's replace_state is set to\nIEEE80211_CHANCTX_REPLACE_NONE, we free the old context\nin ieee80211_vif_use_reserved_reassign(). Therefore, we\ncannot check the old_ctx anymore, so we should set it to\nNULL after this point.\n\nHowever, since the new_ctx replace state is clearly not\nIEEE80211_CHANCTX_REPLACES_OTHER, we're not going to do\nanything else in this function and can just return to\navoid accessing the freed old_ctx."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/265bec4779a38b65e86a25120370f200822dfa76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2965c4cdf7ad9ce0796fac5e57debb9519ea721e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ba81e794f0fad6234f644c2da1ae14d5b95e1c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f05a9e15edcdf5b97e0d86ab6ecd5f187289f6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6118bbdf69f4718b02d26bbcf2e497eb66004331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82c8e7bbdd06c7ed58e22450cc5b37f33a25bb2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88cc8f963febe192d6ded9df7217f92f380b449a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f1e5cc85ad77e52f54049a94db0407445ae2a34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b79110f2bf6022e60e590d2e094728a8eec3e79e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49417","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.170","lastModified":"2025-02-26T07:01:18.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niwlwifi: mei: fix potential NULL-ptr deref\n\nIf SKB allocation fails, continue rather than using the NULL\npointer.\n\nCoverity CID: 1497650"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29b81de94d62b5e2704bb5106b3e701ca8d7c7a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d8d06fd3a02919100b28f927bcb76481ec0a0e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78488a64aea94a3336ee97f345c1496e9bc5ebdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49418","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.260","lastModified":"2025-02-26T07:01:18.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Fix free of uninitialized nfs4_label on referral lookup.\n\nSend along the already-allocated fattr along with nfs4_fs_locations, and\ndrop the memcpy of fattr.  We end up growing two more allocations, but this\nfixes up a crash as:\n\nPID: 790    TASK: ffff88811b43c000  CPU: 0   COMMAND: \"ls\"\n #0 [ffffc90000857920] panic at ffffffff81b9bfde\n #1 [ffffc900008579c0] do_trap at ffffffff81023a9b\n #2 [ffffc90000857a10] do_error_trap at ffffffff81023b78\n #3 [ffffc90000857a58] exc_stack_segment at ffffffff81be1f45\n #4 [ffffc90000857a80] asm_exc_stack_segment at ffffffff81c009de\n #5 [ffffc90000857b08] nfs_lookup at ffffffffa0302322 [nfs]\n #6 [ffffc90000857b70] __lookup_slow at ffffffff813a4a5f\n #7 [ffffc90000857c60] walk_component at ffffffff813a86c4\n #8 [ffffc90000857cb8] path_lookupat at ffffffff813a9553\n #9 [ffffc90000857cf0] filename_lookup at ffffffff813ab86b"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6015292653d95ba9f72906e2b65e536aa5807d64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3ed222745d9ad7b69299b349a64ba533c64a34f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb1fe9600b86c24a789046bfc5c6851dda119280","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49419","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.350","lastModified":"2025-02-26T07:01:18.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: vesafb: Fix a use-after-free due early fb_info cleanup\n\nCommit b3c9a924aab6 (\"fbdev: vesafb: Cleanup fb_info in .fb_destroy rather\nthan .remove\") fixed a use-after-free error due the vesafb driver freeing\nthe fb_info in the .remove handler instead of doing it in .fb_destroy.\n\nThis can happen if the .fb_destroy callback is executed after the .remove\ncallback, since the former tries to access a pointer freed by the latter.\n\nBut that change didn't take into account that another possible scenario is\nthat .fb_destroy is called before the .remove callback. For example, if no\nprocess has the fbdev chardev opened by the time the driver is removed.\n\nIf that's the case, fb_info will be freed when unregister_framebuffer() is\ncalled, making the fb_info pointer accessed in vesafb_remove() after that\nto no longer be valid.\n\nTo prevent that, move the expression containing the info->par to happen\nbefore the unregister_framebuffer() function call."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fac5f8fb1bc2fc4f8714bf5e743c9cc3f547c63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acde4003efc16480375543638484d8f13f2e99a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d260cad015945d1f4bb9b028a096f648506106a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f605f5558ecc175ec70016a3c15f007cb6386531","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49420","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.440","lastModified":"2025-02-26T07:01:18.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: annotate races around sk->sk_bound_dev_if\n\nUDP sendmsg() is lockless, and reads sk->sk_bound_dev_if while\nthis field can be changed by another thread.\n\nAdds minimal annotations to avoid KCSAN splats for UDP.\nFollowing patches will add more annotations to potential lockless readers.\n\nBUG: KCSAN: data-race in __ip6_datagram_connect \/ udpv6_sendmsg\n\nwrite to 0xffff888136d47a94 of 4 bytes by task 7681 on cpu 0:\n __ip6_datagram_connect+0x6e2\/0x930 net\/ipv6\/datagram.c:221\n ip6_datagram_connect+0x2a\/0x40 net\/ipv6\/datagram.c:272\n inet_dgram_connect+0x107\/0x190 net\/ipv4\/af_inet.c:576\n __sys_connect_file net\/socket.c:1900 [inline]\n __sys_connect+0x197\/0x1b0 net\/socket.c:1917\n __do_sys_connect net\/socket.c:1927 [inline]\n __se_sys_connect net\/socket.c:1924 [inline]\n __x64_sys_connect+0x3d\/0x50 net\/socket.c:1924\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x2b\/0x50 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nread to 0xffff888136d47a94 of 4 bytes by task 7670 on cpu 1:\n udpv6_sendmsg+0xc60\/0x16e0 net\/ipv6\/udp.c:1436\n inet6_sendmsg+0x5f\/0x80 net\/ipv6\/af_inet6.c:652\n sock_sendmsg_nosec net\/socket.c:705 [inline]\n sock_sendmsg net\/socket.c:725 [inline]\n ____sys_sendmsg+0x39a\/0x510 net\/socket.c:2413\n ___sys_sendmsg net\/socket.c:2467 [inline]\n __sys_sendmmsg+0x267\/0x4c0 net\/socket.c:2553\n __do_sys_sendmmsg net\/socket.c:2582 [inline]\n __se_sys_sendmmsg net\/socket.c:2579 [inline]\n __x64_sys_sendmmsg+0x53\/0x60 net\/socket.c:2579\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x2b\/0x50 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nvalue changed: 0x00000000 -> 0xffffff9b\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 1 PID: 7670 Comm: syz-executor.3 Tainted: G        W         5.18.0-rc1-syzkaller-dirty #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\n\nI chose to not add Fixes: tag because race has minor consequences\nand stable teams busy enough."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20b2f61797873a2b18b5ff1a304ad2674fa1e0a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c971d2f3548e4f11b1460ac048f5307e4b39fdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49421","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.533","lastModified":"2025-02-26T07:01:18.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: clcdfb: Fix refcount leak in clcdfb_of_vram_setup\n\nof_parse_phandle() returns a node pointer with refcount incremented, we should\nuse of_node_put() on it when not need anymore.  Add missing of_node_put() to\navoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e2e2c71b2642289438392edbf5d08cdbc0b138b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38d245cebf545338a6bc1c7762023de3fbecd7b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51eb1bb6baeb478538dd4ec6459fd68c44a855b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c92711db7c90f78e0b67ac2a8944d0fe7e12d83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8db59df7f5826e104db82cfddbf22a33a151193e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b23789a59fa6f00e98a319291819f91fbba0deb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbb2a24e863b6a10129546a0a4ceea2f07deec39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1c4405222b6fc98c16e8c2aa679c14e41d81465","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2dfb4ab887d67be7d0892ba041d3c8d738d3356","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49422","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.657","lastModified":"2025-02-26T07:01:18.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Fix the error handling path in idxd_cdev_register()\n\nIf a call to alloc_chrdev_region() fails, the already allocated resources\nare leaking.\n\nAdd the needed error handling path to fix the leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e88561eceb34ae3f88451c2b8e30fe403484189","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6073af78156b8c3fc1198f8bcc190b7ac3ac0143","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aab08c1aac01097815fbcf10fce7021d2396a31f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c7b5d08e9d5b2ff31c03078c00ecf11042419f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c308a2e711a52a47f4b45e7add2b5200169e429a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49423","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.783","lastModified":"2025-02-26T07:01:18.783","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtla: Avoid record NULL pointer dereference\n\nFix the following null\/deref_null.cocci errors:\n.\/tools\/tracing\/rtla\/src\/osnoise_hist.c:870:31-36: ERROR: record is NULL but dereferenced.\n.\/tools\/tracing\/rtla\/src\/osnoise_top.c:650:31-36: ERROR: record is NULL but dereferenced.\n.\/tools\/tracing\/rtla\/src\/timerlat_hist.c:905:31-36: ERROR: record is NULL but dereferenced.\n.\/tools\/tracing\/rtla\/src\/timerlat_top.c:700:31-36: ERROR: record is NULL but dereferenced.\n\n\"record\" is NULL before calling osnoise_init_trace_tool.\nAdd a tag \"out_free\" to avoid dereferring a NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a6b52ed72c822b5ee146a6a00ea66614fe02653","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0f1c686baff74d5df10f2f46670ef4e24a75756","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49424","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.880","lastModified":"2025-02-26T07:01:18.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/mediatek: Fix NULL pointer dereference when printing dev_name\n\nWhen larbdev is NULL (in the case I hit, the node is incorrectly set\niommus = <&iommu NUM>), it will cause device_link_add() fail and\nkernel crashes when we try to print dev_name(larbdev).\n\nLet's fail the probe if a larbdev is NULL to avoid invalid inputs from\ndts.\n\nIt should work for normal correct setting and avoid the crash caused\nby my incorrect setting.\n\nError log:\n[   18.189042][  T301] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000050\n...\n[   18.344519][  T301] pstate: a0400005 (NzCv daif +PAN -UAO)\n[   18.345213][  T301] pc : mtk_iommu_probe_device+0xf8\/0x118 [mtk_iommu]\n[   18.346050][  T301] lr : mtk_iommu_probe_device+0xd0\/0x118 [mtk_iommu]\n[   18.346884][  T301] sp : ffffffc00a5635e0\n[   18.347392][  T301] x29: ffffffc00a5635e0 x28: ffffffd44a46c1d8\n[   18.348156][  T301] x27: ffffff80c39a8000 x26: ffffffd44a80cc38\n[   18.348917][  T301] x25: 0000000000000000 x24: ffffffd44a80cc38\n[   18.349677][  T301] x23: ffffffd44e4da4c6 x22: ffffffd44a80cc38\n[   18.350438][  T301] x21: ffffff80cecd1880 x20: 0000000000000000\n[   18.351198][  T301] x19: ffffff80c439f010 x18: ffffffc00a50d0c0\n[   18.351959][  T301] x17: ffffffffffffffff x16: 0000000000000004\n[   18.352719][  T301] x15: 0000000000000004 x14: ffffffd44eb5d420\n[   18.353480][  T301] x13: 0000000000000ad2 x12: 0000000000000003\n[   18.354241][  T301] x11: 00000000fffffad2 x10: c0000000fffffad2\n[   18.355003][  T301] x9 : a0d288d8d7142d00 x8 : a0d288d8d7142d00\n[   18.355763][  T301] x7 : ffffffd44c2bc640 x6 : 0000000000000000\n[   18.356524][  T301] x5 : 0000000000000080 x4 : 0000000000000001\n[   18.357284][  T301] x3 : 0000000000000000 x2 : 0000000000000005\n[   18.358045][  T301] x1 : 0000000000000000 x0 : 0000000000000000\n[   18.360208][  T301] Hardware name: MT6873 (DT)\n[   18.360771][  T301] Call trace:\n[   18.361168][  T301]  dump_backtrace+0xf8\/0x1f0\n[   18.361737][  T301]  dump_stack_lvl+0xa8\/0x11c\n[   18.362305][  T301]  dump_stack+0x1c\/0x2c\n[   18.362816][  T301]  mrdump_common_die+0x184\/0x40c [mrdump]\n[   18.363575][  T301]  ipanic_die+0x24\/0x38 [mrdump]\n[   18.364230][  T301]  atomic_notifier_call_chain+0x128\/0x2b8\n[   18.364937][  T301]  die+0x16c\/0x568\n[   18.365394][  T301]  __do_kernel_fault+0x1e8\/0x214\n[   18.365402][  T301]  do_page_fault+0xb8\/0x678\n[   18.366934][  T301]  do_translation_fault+0x48\/0x64\n[   18.368645][  T301]  do_mem_abort+0x68\/0x148\n[   18.368652][  T301]  el1_abort+0x40\/0x64\n[   18.368660][  T301]  el1h_64_sync_handler+0x54\/0x88\n[   18.368668][  T301]  el1h_64_sync+0x68\/0x6c\n[   18.368673][  T301]  mtk_iommu_probe_device+0xf8\/0x118 [mtk_iommu]\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8837c2682b9b2eed83e6212bcf79850c593a6fee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3c2734e28d7fac50228c4d2b8896e8695adf304","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de78657e16f41417da9332f09c2d67d100096939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9c63c0f73a1bbfd02624f5eae7e881df8b6830f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49425","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:18.977","lastModified":"2025-02-26T07:01:18.977","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix dereference of stale list iterator after loop body\n\nThe list iterator variable will be a bogus pointer if no break was hit.\nDereferencing it (cur->page in this case) could load an out-of-bounds\/undefined\nvalue making it unsafe to use that in the comparision to determine if the\nspecific element was found.\n\nSince 'cur->page' *can* be out-ouf-bounds it cannot be guaranteed that\nby chance (or intention of an attacker) it matches the value of 'page'\neven though the correct element was not found.\n\nThis is fixed by using a separate list iterator variable for the loop\nand only setting the original variable if a suitable element was found.\nThen determing if the element was found is simply checking if the\nvariable is set."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2aaf51dd39afb6d01d13f1e6fe20b684733b37d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/385edd3ce5b4b1e9d31f474a5e35a39779ec1110","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45b2b7d7108ae1e25a5036cab04ab9273e792332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51d584704d18e60fa473823654f35611c777b291","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e47a7add3dda7f236548c5ec3017776dc2a729f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26e1c777890e4b938136deb8ec07a29f33862e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed7efc472c00986dcd6903ab6ed165c7fa167674","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49426","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.073","lastModified":"2025-02-26T07:01:19.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu-v3-sva: Fix mm use-after-free\n\nWe currently call arm64_mm_context_put() without holding a reference to\nthe mm, which can result in use-after-free. Call mmgrab()\/mmdrop() to\nensure the mm only gets freed after we unpinned the ASID."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9aa215450888cf29af0c479e14a712dc6b0c506c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbd23144f7662b00bcde32a938c4a4057e476d68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3cbbdbff8a4db5d053c53fd71be62ccccdb52b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc90f13ea0dcd960e5002d204fa55cec4e0db2fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49427","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.187","lastModified":"2025-02-26T07:01:19.187","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/mediatek: Remove clk_disable in mtk_iommu_remove\n\nAfter the commit b34ea31fe013 (\"iommu\/mediatek: Always enable the clk on\nresume\"), the iommu clock is controlled by the runtime callback.\nthus remove the clk control in the mtk_iommu_remove.\n\nOtherwise, it will warning like:\n\necho 14018000.iommu > \/sys\/bus\/platform\/drivers\/mtk-iommu\/unbind\n\n[   51.413044] ------------[ cut here ]------------\n[   51.413648] vpp0_smi_iommu already disabled\n[   51.414233] WARNING: CPU: 2 PID: 157 at *\/v5.15-rc1\/kernel\/mediatek\/\n                          drivers\/clk\/clk.c:952 clk_core_disable+0xb0\/0xb8\n[   51.417174] Hardware name: MT8195V\/C(ENG) (DT)\n[   51.418635] pc : clk_core_disable+0xb0\/0xb8\n[   51.419177] lr : clk_core_disable+0xb0\/0xb8\n...\n[   51.429375] Call trace:\n[   51.429694]  clk_core_disable+0xb0\/0xb8\n[   51.430193]  clk_core_disable_lock+0x24\/0x40\n[   51.430745]  clk_disable+0x20\/0x30\n[   51.431189]  mtk_iommu_remove+0x58\/0x118\n[   51.431705]  platform_remove+0x28\/0x60\n[   51.432197]  device_release_driver_internal+0x110\/0x1f0\n[   51.432873]  device_driver_detach+0x18\/0x28\n[   51.433418]  unbind_store+0xd4\/0x108\n[   51.433886]  drv_attr_store+0x24\/0x38\n[   51.434363]  sysfs_kf_write+0x40\/0x58\n[   51.434843]  kernfs_fop_write_iter+0x164\/0x1e0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/053465ab20dcd324a43a1811ee98e5721e6a3e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6eaa046c696c83542c56765cdde564d9818ff1fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98df772bdd1c4ce717a26289efea15cbbe4b64ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b3bd97acb4f8954b8a43a5d63ed9050d463b4e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49428","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.290","lastModified":"2025-02-26T07:01:19.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to do sanity check on inline_dots inode\n\nAs Wenqing reported in bugzilla:\n\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=215765\n\nIt will cause a kernel panic with steps:\n- mkdir mnt\n- mount tmp40.img mnt\n- ls mnt\n\nfolio_mark_dirty+0x33\/0x50\nf2fs_add_regular_entry+0x541\/0xad0 [f2fs]\nf2fs_add_dentry+0x6c\/0xb0 [f2fs]\nf2fs_do_add_link+0x182\/0x230 [f2fs]\n__recover_dot_dentries+0x2d6\/0x470 [f2fs]\nf2fs_lookup+0x5af\/0x6a0 [f2fs]\n__lookup_slow+0xac\/0x200\nlookup_slow+0x45\/0x70\nwalk_component+0x16c\/0x250\npath_lookupat+0x8b\/0x1f0\nfilename_lookup+0xef\/0x250\nuser_path_at_empty+0x46\/0x70\nvfs_statx+0x98\/0x190\n__do_sys_newlstat+0x41\/0x90\n__x64_sys_newlstat+0x1a\/0x30\ndo_syscall_64+0x37\/0xb0\nentry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root cause is for special file: e.g. character, block, fifo or\nsocket file, f2fs doesn't assign address space operations pointer array\nfor mapping->a_ops field, so, in a fuzzed image, if inline_dots flag was\ntagged in special file, during lookup(), when f2fs runs into\n__recover_dot_dentries(), it will cause NULL pointer access once\nf2fs_add_regular_entry() calls a_ops->set_dirty_page()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12662d19467b391b5b509ac5e9ab4f583c6dde16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/250e5a6be52a6b9d82fe91976c83cc158868b4e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f46160d0a19b13bfe96c0dd50eed5c5d253ab7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34f48ce5d5936eea33e3b6415403e57eb84aff97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49429","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.383","lastModified":"2025-02-26T07:01:19.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hfi1: Prevent panic when SDMA is disabled\n\nIf the hfi1 module is loaded with HFI1_CAP_SDMA off, a call to\nhfi1_write_iter() will dereference a NULL pointer and panic. A typical\nstack frame is:\n\n  sdma_select_user_engine [hfi1]\n  hfi1_user_sdma_process_request [hfi1]\n  hfi1_write_iter [hfi1]\n  do_iter_readv_writev\n  do_iter_write\n  vfs_writev\n  do_writev\n  do_syscall_64\n\nThe fix is to test for SDMA in hfi1_write_iter() and fail the I\/O with\nEINVAL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e4dda8b3f4c07ee9ea670a10ea3171a5e63a86f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22e7e400fd1a890db2ea13686324aff50e972f4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29952ab85d6c3fe0b7909d9a737f10c58bf6824d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32e6aea33944f364d51cd263e4cd236393a188b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33794e8e9bcb4affc0ebff9cdec85acc8b8a1762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/629e052d0c98e46dde9f0824f0aa437f678d9b8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc80d3c37cec9d6ddb140483647901bc7cc6c31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e60ad83f645ee6fadd5a8057ba267aeec54f08fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49430","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.480","lastModified":"2025-02-26T07:01:19.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: gpio-keys - cancel delayed work only in case of GPIO\n\ngpio_keys module can either accept gpios or interrupts. The module\ninitializes delayed work in case of gpios only and is only used if\ndebounce timer is not used, so make sure cancel_delayed_work_sync()\nis called only when its gpio-backed and debounce_use_hrtimer is false.\n\nThis fixes the issue seen below when the gpio_keys module is unloaded and\nan interrupt pin is used instead of GPIO:\n\n[  360.297569] ------------[ cut here ]------------\n[  360.302303] WARNING: CPU: 0 PID: 237 at kernel\/workqueue.c:3066 __flush_work+0x414\/0x470\n[  360.310531] Modules linked in: gpio_keys(-)\n[  360.314797] CPU: 0 PID: 237 Comm: rmmod Not tainted 5.18.0-rc5-arm64-renesas-00116-g73636105874d-dirty #166\n[  360.324662] Hardware name: Renesas SMARC EVK based on r9a07g054l2 (DT)\n[  360.331270] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  360.338318] pc : __flush_work+0x414\/0x470\n[  360.342385] lr : __cancel_work_timer+0x140\/0x1b0\n[  360.347065] sp : ffff80000a7fba00\n[  360.350423] x29: ffff80000a7fba00 x28: ffff000012b9c5c0 x27: 0000000000000000\n[  360.357664] x26: ffff80000a7fbb80 x25: ffff80000954d0a8 x24: 0000000000000001\n[  360.364904] x23: ffff800009757000 x22: 0000000000000000 x21: ffff80000919b000\n[  360.372143] x20: ffff00000f5974e0 x19: ffff00000f5974e0 x18: ffff8000097fcf48\n[  360.379382] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000053f40\n[  360.386622] x14: ffff800009850e88 x13: 0000000000000002 x12: 000000000000a60c\n[  360.393861] x11: 000000000000a610 x10: 0000000000000000 x9 : 0000000000000008\n[  360.401100] x8 : 0101010101010101 x7 : 00000000a473c394 x6 : 0080808080808080\n[  360.408339] x5 : 0000000000000001 x4 : 0000000000000000 x3 : ffff80000919b458\n[  360.415578] x2 : ffff8000097577f0 x1 : 0000000000000001 x0 : 0000000000000000\n[  360.422818] Call trace:\n[  360.425299]  __flush_work+0x414\/0x470\n[  360.429012]  __cancel_work_timer+0x140\/0x1b0\n[  360.433340]  cancel_delayed_work_sync+0x10\/0x18\n[  360.437931]  gpio_keys_quiesce_key+0x28\/0x58 [gpio_keys]\n[  360.443327]  devm_action_release+0x10\/0x18\n[  360.447481]  release_nodes+0x8c\/0x1a0\n[  360.451194]  devres_release_all+0x90\/0x100\n[  360.455346]  device_unbind_cleanup+0x14\/0x60\n[  360.459677]  device_release_driver_internal+0xe8\/0x168\n[  360.464883]  driver_detach+0x4c\/0x90\n[  360.468509]  bus_remove_driver+0x54\/0xb0\n[  360.472485]  driver_unregister+0x2c\/0x58\n[  360.476462]  platform_driver_unregister+0x10\/0x18\n[  360.481230]  gpio_keys_exit+0x14\/0x828 [gpio_keys]\n[  360.486088]  __arm64_sys_delete_module+0x1e0\/0x270\n[  360.490945]  invoke_syscall+0x40\/0xf8\n[  360.494661]  el0_svc_common.constprop.3+0xf0\/0x110\n[  360.499515]  do_el0_svc+0x20\/0x78\n[  360.502877]  el0_svc+0x48\/0xf8\n[  360.505977]  el0t_64_sync_handler+0x88\/0xb0\n[  360.510216]  el0t_64_sync+0x148\/0x14c\n[  360.513930] irq event stamp: 4306\n[  360.517288] hardirqs last  enabled at (4305): [<ffff8000080b0300>] __cancel_work_timer+0x130\/0x1b0\n[  360.526359] hardirqs last disabled at (4306): [<ffff800008d194fc>] el1_dbg+0x24\/0x88\n[  360.534204] softirqs last  enabled at (4278): [<ffff8000080104a0>] _stext+0x4a0\/0x5e0\n[  360.542133] softirqs last disabled at (4267): [<ffff8000080932ac>] irq_exit_rcu+0x18c\/0x1b0\n[  360.550591] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4160e09619086fc155b51ccdb3462a3f233a5f4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b1ae300c2953257c146b5f0757537935c0b6027","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96c460687813915dedca9dd7d04ae0e90607fd79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cee409bbba0d1bd3fb73064fb480ff365f453b5d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49431","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.573","lastModified":"2025-02-26T07:01:19.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/iommu: Add missing of_node_put in iommu_init_early_dart\n\nThe device_node pointer is returned by of_find_compatible_node\nwith refcount incremented. We should use of_node_put() to avoid\nthe refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/57b742a5b8945118022973e6416b71351df512fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e3f1dfb9e21733d7276bc9ccea4daada163f2ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8657e8ea23325949091da72453ba84fb73cc2bd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb4f2dc513e99c5d0485661f114e4dda73612d10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df6d8b689252c0acc0448d4ae3d33f2d6db048ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfc308d6f29aa28463deb9a12278a85a382385ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49432","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.667","lastModified":"2025-02-26T07:01:19.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/xics: fix refcount leak in icp_opal_init()\n\nThe of_find_compatible_node() function returns a node pointer with\nrefcount incremented, use of_node_put() on it when done."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d5c8cea85fb1680eae8d645b96b92146cb4633c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2357bd7499a81c70b460e2191852bbfc7b63c354","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/537a317e5ff45d1f5a0ecaf6a0d7c8043c878cb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53f3f7f73e609b934083f896cb7ca2c2cb009b9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dd9e27ea4a39f7edd4bf81e9e70208e7ac0b7c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a61a97106279c2aa16fbbb2a171fd5dde127d23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/977dbc81d0f866ef63b93c127b7404f07734b3cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a42bc2494fadb453de00ce61042e588563ddc6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df802880a7f9cd96b921b00639b00871f18a9a57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49433","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.763","lastModified":"2025-02-26T07:01:19.763","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hfi1: Prevent use of lock before it is initialized\n\nIf there is a failure during probe of hfi1 before the sdma_map_lock is\ninitialized, the call to hfi1_free_devdata() will attempt to use a lock\nthat has not been initialized. If the locking correctness validator is on\nthen an INFO message and stack trace resembling the following may be seen:\n\n  INFO: trying to register non-static key.\n  The code is fine but needs lockdep annotation, or maybe\n  you didn't initialize this object before use?\n  turning off the locking correctness validator.\n  Call Trace:\n  register_lock_class+0x11b\/0x880\n  __lock_acquire+0xf3\/0x7930\n  lock_acquire+0xff\/0x2d0\n  _raw_spin_lock_irq+0x46\/0x60\n  sdma_clean+0x42a\/0x660 [hfi1]\n  hfi1_free_devdata+0x3a7\/0x420 [hfi1]\n  init_one+0x867\/0x11a0 [hfi1]\n  pci_device_probe+0x40e\/0x8d0\n\nThe use of sdma_map_lock in sdma_clean() is for freeing the sdma_map\nmemory, and sdma_map is not allocated\/initialized until after\nsdma_map_lock has been initialized. This code only needs to be run if\nsdma_map is not NULL, and so checking for that condition will avoid trying\nto use the lock before it is initialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05c03dfd09c069c4ffd783b47b2da5dcc9421f2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/288d198f50434f29b4a26a9de4394ae2305ad8af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30eb275e7ed588270ae159cc590a96658e0cfd8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66090815a24ce14cf51ef5453fc0218fe8a39bc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/addb192000d8819c0b1553453994df9bb54c28db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca55150bff5817af4f857a746ecab9862c23e12a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc0750e659db7b315bf6348902cc8ca3cdd4b8d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49434","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.863","lastModified":"2025-02-26T07:01:19.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: Avoid pci_dev_lock() AB\/BA deadlock with sriov_numvfs_store()\n\nThe sysfs sriov_numvfs_store() path acquires the device lock before the\nconfig space access lock:\n\n  sriov_numvfs_store\n    device_lock                 # A (1) acquire device lock\n    sriov_configure\n      vfio_pci_sriov_configure  # (for example)\n        vfio_pci_core_sriov_configure\n          pci_disable_sriov\n            sriov_disable\n              pci_cfg_access_lock\n                pci_wait_cfg    # B (4) wait for dev->block_cfg_access == 0\n\nPreviously, pci_dev_lock() acquired the config space access lock before the\ndevice lock:\n\n  pci_dev_lock\n    pci_cfg_access_lock\n      dev->block_cfg_access = 1 # B (2) set dev->block_cfg_access = 1\n    device_lock                 # A (3) wait for device lock\n\nAny path that uses pci_dev_lock(), e.g., pci_reset_function(), may\ndeadlock with sriov_numvfs_store() if the operations occur in the sequence\n(1) (2) (3) (4).\n\nAvoid the deadlock by reversing the order in pci_dev_lock() so it acquires\nthe device lock before the config space access lock, the same as the\nsriov_numvfs_store() path.\n\n[bhelgaas: combined and adapted commit log from Jay Zhou's independent\nsubsequent posting:\nhttps:\/\/lore.kernel.org\/r\/20220404062539.1710-1-jianjay.zhou@huawei.com]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cdd5284035322795b0964f899eefba254cfe483","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59ea6b3ae51df7cd6bfd84c9c0030609b9315622","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a91ee0e9fca9d7501286cfbced9b30a33e52740a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aed6d4d519210c28817948f34c53b6e058e0456c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3c6dc1853b8bf3c718f96fd8480a6eb09ba4831","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9a81f9ed6ae3554621d6a50220b1bc74b67d81e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da9792920ab525b8a932aa9aeee34529ad7b83f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea047f51172aa68841adef7f52d375002438b8f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eff3587b9c01439b738298475e555c028ac9f55e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49435","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:19.957","lastModified":"2025-02-26T07:01:19.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: davinci_voicecodec: Fix possible null-ptr-deref davinci_vc_probe()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref.\nAnd use devm_platform_get_and_ioremap_resource() to simplify code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d00158a06efe6bbcd020108634ea0f2ed8b32f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/311242c7703df0da14c206260b7e855f69cb0264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49c1e32e7b3f301642a60448700ec531df981269","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5289795824b77489803b0802cd9edc13824a2d0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/579944b9f38727d9ff570b58f83bc424e8af8398","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1d4941d9a24999f680799f9bbde7f57351ca637","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49436","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.057","lastModified":"2025-02-26T07:01:20.057","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/papr_scm: Fix leaking nvdimm_events_map elements\n\nRight now 'char *' elements allocated for individual 'stat_id' in\n'papr_scm_priv.nvdimm_events_map[]' during papr_scm_pmu_check_events(), get\nleaked in papr_scm_remove() and papr_scm_pmu_register(),\npapr_scm_pmu_check_events() error paths.\n\nAlso individual 'stat_id' arent NULL terminated 'char *' instead they are fixed\n8-byte sized identifiers. However papr_scm_pmu_register() assumes it to be a\nNULL terminated 'char *' and at other places it assumes it to be a\n'papr_scm_perf_stat.stat_id' sized string which is 8-byes in size.\n\nFix this by allocating the memory for papr_scm_priv.nvdimm_events_map to also\ninclude space for 'stat_id' entries. This is possible since number of available\nevents\/stat_ids are known upfront. This saves some memory and one extra level of\nindirection from 'nvdimm_events_map' to 'stat_id'. Also rest of the code\ncan continue to call 'kfree(papr_scm_priv.nvdimm_events_map)' without needing to\niterate over the array and free up individual elements."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e0946e22f3665d27325d389ff45ade6e93f3678","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b073096df4dec70d0436321b7093bad27ae91f9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49437","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.150","lastModified":"2025-02-26T07:01:20.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/xive: Fix refcount leak in xive_spapr_init\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d1fb9618bdd5a5fbf9a9eb75133da301d33721c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65f11ccdd746e0e7f0b469cc989ba43d4f30ecfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e806485d851986a2445267608f27cb4ba2ed774","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc62dde2a5f4ba14016fd9caec76f08d388f4b9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49438","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.240","lastModified":"2025-02-26T07:01:20.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: sparcspkr - fix refcount leak in bbc_beep_probe\n\nof_find_node_by_path() calls of_find_node_opts_by_path(),\nwhich returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1124e39fea0e2fdb4202f95b716cb97cc7de7cc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f51db16cb740ff90086189a1ef2581eab665591","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/353bc58ac6c782d4dcde9136a91d1f90867938fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/418b6a3e12f75638abc5673eb76cb32127d0ab13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e07ccc7d56130f760d23f67a70c45366c07debc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73d6f42d8d86648bec2e73d34fe1648cb6d23e08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbc2b0ce6042dd3117827f10ea8cb67e0ab786da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8994b30d71d64d5dcc9bc0edbfdf367171aa96f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f13064b0f2c651a3fbb0749932795c6fd21556a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49439","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.337","lastModified":"2025-02-26T07:01:20.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/fsl_rio: Fix refcount leak in fsl_rio_setup\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46fd994763cf6884b88a2da712af918f3ed54d7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51e25fbf20c9152d84a34b7afac15a41fe5c9116","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5607a77a365df8c0fd5ff43ac424812b95775527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b8aa2ba38c010f47c965dd9bb5a8561813ed649","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b668a59ddfb32727e39b06fdf52b28e58c684e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcb6c4c5eb4836a21411dfe8247bf9951eb6e7c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c70dd353d37158e06bf8d450d4b31a7091609924","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcee96924ba1596ca80a6770b2567ca546f9a482","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49440","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.430","lastModified":"2025-02-26T07:01:20.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/rtas: Keep MSR[RI] set when calling RTAS\n\nRTAS runs in real mode (MSR[DR] and MSR[IR] unset) and in 32-bit big\nendian mode (MSR[SF,LE] unset).\n\nThe change in MSR is done in enter_rtas() in a relatively complex way,\nsince the MSR value could be hardcoded.\n\nFurthermore, a panic has been reported when hitting the watchdog interrupt\nwhile running in RTAS, this leads to the following stack trace:\n\n  watchdog: CPU 24 Hard LOCKUP\n  watchdog: CPU 24 TB:997512652051031, last heartbeat TB:997504470175378 (15980ms ago)\n  ...\n  Supported: No, Unreleased kernel\n  CPU: 24 PID: 87504 Comm: drmgr Kdump: loaded Tainted: G            E  X    5.14.21-150400.71.1.bz196362_2-default #1 SLE15-SP4 (unreleased) 0d821077ef4faa8dfaf370efb5fdca1fa35f4e2c\n  NIP:  000000001fb41050 LR: 000000001fb4104c CTR: 0000000000000000\n  REGS: c00000000fc33d60 TRAP: 0100   Tainted: G            E  X     (5.14.21-150400.71.1.bz196362_2-default)\n  MSR:  8000000002981000 <SF,VEC,VSX,ME>  CR: 48800002  XER: 20040020\n  CFAR: 000000000000011c IRQMASK: 1\n  GPR00: 0000000000000003 ffffffffffffffff 0000000000000001 00000000000050dc\n  GPR04: 000000001ffb6100 0000000000000020 0000000000000001 000000001fb09010\n  GPR08: 0000000020000000 0000000000000000 0000000000000000 0000000000000000\n  GPR12: 80040000072a40a8 c00000000ff8b680 0000000000000007 0000000000000034\n  GPR16: 000000001fbf6e94 000000001fbf6d84 000000001fbd1db0 000000001fb3f008\n  GPR20: 000000001fb41018 ffffffffffffffff 000000000000017f fffffffffffff68f\n  GPR24: 000000001fb18fe8 000000001fb3e000 000000001fb1adc0 000000001fb1cf40\n  GPR28: 000000001fb26000 000000001fb460f0 000000001fb17f18 000000001fb17000\n  NIP [000000001fb41050] 0x1fb41050\n  LR [000000001fb4104c] 0x1fb4104c\n  Call Trace:\n  Instruction dump:\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  Oops: Unrecoverable System Reset, sig: 6 [#1]\n  LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\n  ...\n  Supported: No, Unreleased kernel\n  CPU: 24 PID: 87504 Comm: drmgr Kdump: loaded Tainted: G            E  X    5.14.21-150400.71.1.bz196362_2-default #1 SLE15-SP4 (unreleased) 0d821077ef4faa8dfaf370efb5fdca1fa35f4e2c\n  NIP:  000000001fb41050 LR: 000000001fb4104c CTR: 0000000000000000\n  REGS: c00000000fc33d60 TRAP: 0100   Tainted: G            E  X     (5.14.21-150400.71.1.bz196362_2-default)\n  MSR:  8000000002981000 <SF,VEC,VSX,ME>  CR: 48800002  XER: 20040020\n  CFAR: 000000000000011c IRQMASK: 1\n  GPR00: 0000000000000003 ffffffffffffffff 0000000000000001 00000000000050dc\n  GPR04: 000000001ffb6100 0000000000000020 0000000000000001 000000001fb09010\n  GPR08: 0000000020000000 0000000000000000 0000000000000000 0000000000000000\n  GPR12: 80040000072a40a8 c00000000ff8b680 0000000000000007 0000000000000034\n  GPR16: 000000001fbf6e94 000000001fbf6d84 000000001fbd1db0 000000001fb3f008\n  GPR20: 000000001fb41018 ffffffffffffffff 000000000000017f fffffffffffff68f\n  GPR24: 000000001fb18fe8 000000001fb3e000 000000001fb1adc0 000000001fb1cf40\n  GPR28: 000000001fb26000 000000001fb460f0 000000001fb17f18 000000001fb17000\n  NIP [000000001fb41050] 0x1fb41050\n  LR [000000001fb4104c] 0x1fb4104c\n  Call Trace:\n  Instruction dump:\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n  ---[ end trace 3ddec07f638c34a2 ]---\n\nThis happens because MSR[RI] is unset when entering RTAS but there is no\nvalid reason to not set it here.\n\nRTAS is expected to be called with MSR[RI] as specified in PAPR+ section\n\"7.2.1 Machine State\":\n\n  R1–7.2.1–9. If called with MSR[RI] equal to 1, then RTAS must protect\n  its own critical regions from recursion by setting the MSR[RI] bit to\n  0 when in the critical regions.\n\nFixing this by reviewing the way MSR is compute before calling RTAS. Now a\nhardcoded value meaning real \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ca40fcf0da0ce2b5bc44e7d8b036535955f2e3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f4367448f6817c8a0e94dc9736ed84fa8eee4a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6b1c3ce06ca438eb24e0f45bf0e63ecad0369f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9c41f0273826a13ac93124e66a4ff45df281ba0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49441","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.523","lastModified":"2025-02-26T07:01:20.523","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: fix deadlock caused by calling printk() under tty_port->lock\n\npty_write() invokes kmalloc() which may invoke a normal printk() to print\nfailure message.  This can cause a deadlock in the scenario reported by\nsyz-bot below:\n\n       CPU0              CPU1                    CPU2\n       ----              ----                    ----\n                         lock(console_owner);\n                                                 lock(&port_lock_key);\n  lock(&port->lock);\n                         lock(&port_lock_key);\n                                                 lock(&port->lock);\n  lock(console_owner);\n\nAs commit dbdda842fe96 (\"printk: Add console owner and waiter logic to\nload balance console writes\") said, such deadlock can be prevented by\nusing printk_deferred() in kmalloc() (which is invoked in the section\nguarded by the port->lock).  But there are too many printk() on the\nkmalloc() path, and kmalloc() can be called from anywhere, so changing\nprintk() to printk_deferred() is too complicated and inelegant.\n\nTherefore, this patch chooses to specify __GFP_NOWARN to kmalloc(), so\nthat printk() will not be called, and this deadlock problem can be\navoided.\n\nSyzbot reported the following lockdep error:\n\n======================================================\nWARNING: possible circular locking dependency detected\n5.4.143-00237-g08ccc19a-dirty #10 Not tainted\n------------------------------------------------------\nsyz-executor.4\/29420 is trying to acquire lock:\nffffffff8aedb2a0 (console_owner){....}-{0:0}, at: console_trylock_spinning kernel\/printk\/printk.c:1752 [inline]\nffffffff8aedb2a0 (console_owner){....}-{0:0}, at: vprintk_emit+0x2ca\/0x470 kernel\/printk\/printk.c:2023\n\nbut task is already holding lock:\nffff8880119c9158 (&port->lock){-.-.}-{2:2}, at: pty_write+0xf4\/0x1f0 drivers\/tty\/pty.c:120\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #2 (&port->lock){-.-.}-{2:2}:\n       __raw_spin_lock_irqsave include\/linux\/spinlock_api_smp.h:110 [inline]\n       _raw_spin_lock_irqsave+0x35\/0x50 kernel\/locking\/spinlock.c:159\n       tty_port_tty_get drivers\/tty\/tty_port.c:288 [inline]          \t\t<-- lock(&port->lock);\n       tty_port_default_wakeup+0x1d\/0xb0 drivers\/tty\/tty_port.c:47\n       serial8250_tx_chars+0x530\/0xa80 drivers\/tty\/serial\/8250\/8250_port.c:1767\n       serial8250_handle_irq.part.0+0x31f\/0x3d0 drivers\/tty\/serial\/8250\/8250_port.c:1854\n       serial8250_handle_irq drivers\/tty\/serial\/8250\/8250_port.c:1827 [inline] \t<-- lock(&port_lock_key);\n       serial8250_default_handle_irq+0xb2\/0x220 drivers\/tty\/serial\/8250\/8250_port.c:1870\n       serial8250_interrupt+0xfd\/0x200 drivers\/tty\/serial\/8250\/8250_core.c:126\n       __handle_irq_event_percpu+0x109\/0xa50 kernel\/irq\/handle.c:156\n       [...]\n\n-> #1 (&port_lock_key){-.-.}-{2:2}:\n       __raw_spin_lock_irqsave include\/linux\/spinlock_api_smp.h:110 [inline]\n       _raw_spin_lock_irqsave+0x35\/0x50 kernel\/locking\/spinlock.c:159\n       serial8250_console_write+0x184\/0xa40 drivers\/tty\/serial\/8250\/8250_port.c:3198\n\t\t\t\t\t\t\t\t\t\t<-- lock(&port_lock_key);\n       call_console_drivers kernel\/printk\/printk.c:1819 [inline]\n       console_unlock+0x8cb\/0xd00 kernel\/printk\/printk.c:2504\n       vprintk_emit+0x1b5\/0x470 kernel\/printk\/printk.c:2024\t\t\t<-- lock(console_owner);\n       vprintk_func+0x8d\/0x250 kernel\/printk\/printk_safe.c:394\n       printk+0xba\/0xed kernel\/printk\/printk.c:2084\n       register_console+0x8b3\/0xc10 kernel\/printk\/printk.c:2829\n       univ8250_console_init+0x3a\/0x46 drivers\/tty\/serial\/8250\/8250_core.c:681\n       console_init+0x49d\/0x6d3 kernel\/printk\/printk.c:2915\n       start_kernel+0x5e9\/0x879 init\/main.c:713\n       secondary_startup_64+0xa4\/0xb0 arch\/x86\/kernel\/head_64.S:241\n\n-> #0 (console_owner){....}-{0:0}:\n       [...]\n       lock_acquire+0x127\/0x340 kernel\/locking\/lockdep.c:4734\n       console_trylock_spinning kernel\/printk\/printk.c:1773 \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04ee31678c128a6cc7bb057ea189a8624ba5a314","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0bcf44903ef4df742dcada86ccaedd25374ffb50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18ca0d55e8639b911df8aae1b47598b13f9acded","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3219ac364ac3d8d30771612a6010f1e0b7fa0a28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4af21b12a60ed2d3642284f4f85b42d7dc6ac246","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c253caf9264d2aa47ee806a87986dd8eb91a5d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b9dbedbe3499fef862c4dff5217cf91f34e43b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9834b13e8b962caa28fbcf1f422dd82413da4ede","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c974501d0c32258ae0e04e5cc3fb92383b40f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49442","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.630","lastModified":"2025-02-26T07:01:20.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers\/base\/node.c: fix compaction sysfs file leak\n\nCompaction sysfs file is created via compaction_register_node in\nregister_node.  But we forgot to remove it in unregister_node.  Thus\ncompaction sysfs file is leaked.  Using compaction_unregister_node to fix\nthis issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/386e69e068177ee91cac27f2f0e6ebda1515f5ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/39642b0feddb9c39faa6de469a94bfeb4dc0d3a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/466134df7561aeb801baddf6666b512e0e1a1707","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/606732650a2c88e66c59c22dd5464ea0d820250e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6905be93d1ab54f73718047536fec0ca488d5315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3fcf1f583b1a0946d9d9bfb7362c9c186801775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8a5bdc767f17281da648555cdbd286f98fd98ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da63dc84befaa9e6079a0bc363ff0eaa975f9073","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f76ddc8fcf6d81fe89bfa4d3efcbc4fe69a91d48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49443","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.730","lastModified":"2025-02-26T07:01:20.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlist: fix a data-race around ep->rdllist\n\nep_poll() first calls ep_events_available() with no lock held and checks\nif ep->rdllist is empty by list_empty_careful(), which reads\nrdllist->prev.  Thus all accesses to it need some protection to avoid\nstore\/load-tearing.\n\nNote INIT_LIST_HEAD_RCU() already has the annotation for both prev\nand next.\n\nCommit bf3b9f6372c4 (\"epoll: Add busy poll support to epoll with socket\nfds.\") added the first lockless ep_events_available(), and commit\nc5a282e9635e (\"fs\/epoll: reduce the scope of wq lock in epoll_wait()\")\nmade some ep_events_available() calls lockless and added single call under\na lock, finally commit e59d3c64cba6 (\"epoll: eliminate unnecessary lock\nfor zero timeout\") made the last ep_events_available() lockless.\n\nBUG: KCSAN: data-race in do_epoll_wait \/ do_epoll_wait\n\nwrite to 0xffff88810480c7d8 of 8 bytes by task 1802 on cpu 0:\n INIT_LIST_HEAD include\/linux\/list.h:38 [inline]\n list_splice_init include\/linux\/list.h:492 [inline]\n ep_start_scan fs\/eventpoll.c:622 [inline]\n ep_send_events fs\/eventpoll.c:1656 [inline]\n ep_poll fs\/eventpoll.c:1806 [inline]\n do_epoll_wait+0x4eb\/0xf40 fs\/eventpoll.c:2234\n do_epoll_pwait fs\/eventpoll.c:2268 [inline]\n __do_sys_epoll_pwait fs\/eventpoll.c:2281 [inline]\n __se_sys_epoll_pwait+0x12b\/0x240 fs\/eventpoll.c:2275\n __x64_sys_epoll_pwait+0x74\/0x80 fs\/eventpoll.c:2275\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x44\/0xd0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nread to 0xffff88810480c7d8 of 8 bytes by task 1799 on cpu 1:\n list_empty_careful include\/linux\/list.h:329 [inline]\n ep_events_available fs\/eventpoll.c:381 [inline]\n ep_poll fs\/eventpoll.c:1797 [inline]\n do_epoll_wait+0x279\/0xf40 fs\/eventpoll.c:2234\n do_epoll_pwait fs\/eventpoll.c:2268 [inline]\n __do_sys_epoll_pwait fs\/eventpoll.c:2281 [inline]\n __se_sys_epoll_pwait+0x12b\/0x240 fs\/eventpoll.c:2275\n __x64_sys_epoll_pwait+0x74\/0x80 fs\/eventpoll.c:2275\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x44\/0xd0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nvalue changed: 0xffff88810480c7d0 -> 0xffff888103c15098\n\nReported by Kernel Concurrency Sanitizer on:\nCPU: 1 PID: 1799 Comm: syz-fuzzer Tainted: G        W         5.17.0-rc7-syzkaller-dirty #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d5d993f16be15d124be7b8ec71b28ef7b7dc3af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb3e48f7a35033deb9455abe3932e63cb500b9eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d679ae94fdd5d3ab00c35078f5af5f37e068b03d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e039c0b5985999b150594126225e1ee51df7b4c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49444","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.820","lastModified":"2025-02-26T07:01:20.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmodule: fix [e_shstrndx].sh_size=0 OOB access\n\nIt is trivial to craft a module to trigger OOB access in this line:\n\n\tif (info->secstrings[strhdr->sh_size - 1] != '\\0') {\n\nBUG: unable to handle page fault for address: ffffc90000aa0fff\nPGD 100000067 P4D 100000067 PUD 100066067 PMD 10436f067 PTE 0\nOops: 0000 [#1] PREEMPT SMP PTI\nCPU: 7 PID: 1215 Comm: insmod Not tainted 5.18.0-rc5-00007-g9bf578647087-dirty #10\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04\/01\/2014\nRIP: 0010:load_module+0x19b\/0x2391\n\n[rebased patch onto modules-next]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09cb6663618a74fe5572a4931ecbf098832e79ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/391e982bfa632b8315235d8be9c0a81374c6a19c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45a76414b6d8b8b39c23fea53b9d20e831ae72a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/921630e2e5124a04158129a8f22f4b425e61a858","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49445","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:20.913","lastModified":"2025-02-26T07:01:20.913","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: renesas: core: Fix possible null-ptr-deref in sh_pfc_map_resources()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref.\nAnd use devm_platform_get_and_ioremap_resource() to simplify code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5376e3d904532e657fd7ca1a9b1ff3d351527b90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ed0519d425619b435150372cce2ffeec71581fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3a1ad8fd0ac11f4fa1260c23b5db71a25473254","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f991879762392c19661af5b722578089a12b305f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb4f022b3ad1f3ff3cafdbc7d51896090ae17701","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49446","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.010","lastModified":"2025-02-26T07:01:21.010","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvdimm: Fix firmware activation deadlock scenarios\n\nLockdep reports the following deadlock scenarios for CXL root device\npower-management, device_prepare(), operations, and device_shutdown()\noperations for 'nd_region' devices:\n\n Chain exists of:\n   &nvdimm_region_key --> &nvdimm_bus->reconfig_mutex --> system_transition_mutex\n\n  Possible unsafe locking scenario:\n\n        CPU0                    CPU1\n        ----                    ----\n   lock(system_transition_mutex);\n                                lock(&nvdimm_bus->reconfig_mutex);\n                                lock(system_transition_mutex);\n   lock(&nvdimm_region_key);\n\n Chain exists of:\n   &cxl_nvdimm_bridge_key --> acpi_scan_lock --> &cxl_root_key\n\n  Possible unsafe locking scenario:\n\n        CPU0                    CPU1\n        ----                    ----\n   lock(&cxl_root_key);\n                                lock(acpi_scan_lock);\n                                lock(&cxl_root_key);\n   lock(&cxl_nvdimm_bridge_key);\n\nThese stem from holding nvdimm_bus_lock() over hibernate_quiet_exec()\nwhich walks the entire system device topology taking device_lock() along\nthe way. The nvdimm_bus_lock() is protecting against unregistration,\nmultiple simultaneous ops callers, and preventing activate_show() from\nracing activate_store(). For the first 2, the lock is redundant.\nUnregistration already flushes all ops users, and sysfs already prevents\nmultiple threads to be active in an ops handler at the same time. For\nthe last userspace should already be waiting for its last\nactivate_store() to complete, and does not need activate_show() to flush\nthe write side, so this lock usage can be deleted in these attributes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f97ebc58d5fc83ca1528cd553fa725472ab3ca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fd853fdb40afc052de338693df1372f2ead7be7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/641649f31e20df630310f5c22f26c071acc676d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ceb924ee16b2c8e48dcac3d9ad6be01c40b5a228","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6829d1bd3c4b58296ee9e412f7ed4d6cb390192","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49447","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.103","lastModified":"2025-02-26T07:01:21.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: hisi: Add missing of_node_put after of_find_compatible_node\n\nof_find_compatible_node  will increment the refcount of the returned\ndevice_node. Calling of_node_put() to avoid the refcount leak"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21a3effe446dd6dc5eed7fe897c2f9b88c9a5d6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45d211668d33c49d73f5213e8c2b58468108647c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46cb7868811d025c3d29c10d18b3422db1cf20d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bc72e47d4630d58a840a66a869c56b29554cfe4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3265a9440030068547a20dfee646666f3ca5278","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cafaaae4bb9ce84a2791fa29bf6907a9466c3883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd4be8ecfb41a29e7c4e551b4e866157ce4a3429","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e109058165137ef42841abd989f080adfefa14fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8da78b2bae1f54746647a2bb44f8bd6025c57af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49448","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.200","lastModified":"2025-02-26T07:01:21.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: bcm: Check for NULL return of devm_kzalloc()\n\nAs the potential failure of allocation, devm_kzalloc() may return NULL.  Then\nthe 'pd->pmb' and the follow lines of code may bring null pointer dereference.\n\nTherefore, it is better to check the return value of devm_kzalloc() to avoid\nthis confusion."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36339ea7bae4943be01c8e9545e46e334591fecd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5650e103bfc70156001615861fb8aafb3947da6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b48b98743b568bb219152ba2e15af6ef0d3d8a9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4bd2aafacce48db26b0a213d849818d940556dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49449","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.290","lastModified":"2025-02-26T07:01:21.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: renesas: rzn1: Fix possible null-ptr-deref in sh_pfc_map_resources()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref.\nAnd use devm_platform_get_and_ioremap_resource() to simplify code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01f9e02e0f13df3fd291676dc80054e977be1601","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f661477c2bb8068194dbba9738d05219f111c6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34c719b8fdfbd0c7c54cae56e6b0f16e9f8bf03e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b646e0cfeb38bf5f1944fd548f1dfa9b129fa00c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c16b59d445135c8026a04e388d8b2762feaa3b3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49450","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.390","lastModified":"2025-02-26T07:01:21.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix listen() setting the bar too high for the prealloc rings\n\nAF_RXRPC's listen() handler lets you set the backlog up to 32 (if you bump\nup the sysctl), but whilst the preallocation circular buffers have 32 slots\nin them, one of them has to be a dead slot because we're using CIRC_CNT().\n\nThis means that listen(rxrpc_sock, 32) will cause an oops when the socket\nis closed because rxrpc_service_prealloc_one() allocated one too many calls\nand rxrpc_discard_prealloc() won't then be able to get rid of them because\nit'll think the ring is empty.  rxrpc_release_calls_on_socket() then tries\nto abort them, but oopses because call->peer isn't yet set.\n\nFix this by setting the maximum backlog to RXRPC_BACKLOG_MAX - 1 to match\nthe ring capacity.\n\n BUG: kernel NULL pointer dereference, address: 0000000000000086\n ...\n RIP: 0010:rxrpc_send_abort_packet+0x73\/0x240 [rxrpc]\n Call Trace:\n  <TASK>\n  ? __wake_up_common_lock+0x7a\/0x90\n  ? rxrpc_notify_socket+0x8e\/0x140 [rxrpc]\n  ? rxrpc_abort_call+0x4c\/0x60 [rxrpc]\n  rxrpc_release_calls_on_socket+0x107\/0x1a0 [rxrpc]\n  rxrpc_release+0xc9\/0x1c0 [rxrpc]\n  __sock_release+0x37\/0xa0\n  sock_close+0x11\/0x20\n  __fput+0x89\/0x240\n  task_work_run+0x59\/0x90\n  do_exit+0x319\/0xaa0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/369de57492c4f1a42563c5a3bd365822ca3bfc79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a3a78b7918bdd723d8c7c9786522ca969bffcc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4826657d36c218e9f08e8d3223b0edce3de88f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/616f76498d5ddf26b997caf64a95cda3c8a55533","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61fb38cfbb1d54d3dafd0c25752f684b3cd00b32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88e22159750b0d55793302eeed8ee603f5c1a95c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91b34bf0409f43bb60453bab23c5beadd726d022","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3a9b227d5e7467b8518160ff034ea22bb9de573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e198f1930050e3115c80b67d9249f80f98a27c67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49451","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.490","lastModified":"2025-02-26T07:01:21.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Fix list protocols enumeration in the base protocol\n\nWhile enumerating protocols implemented by the SCMI platform using\nBASE_DISCOVER_LIST_PROTOCOLS, the number of returned protocols is\ncurrently validated in an improper way since the check employs a sum\nbetween unsigned integers that could overflow and cause the check itself\nto be silently bypassed if the returned value 'loop_num_ret' is big\nenough.\n\nFix the validation avoiding the addition."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1052f22e127d0c34c3387bb389424ba1c61491ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ccfcd7a09c826516edcfe464b05071961aada3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/444a2d27fe9867d0da4b28fc45b793f32e099ab8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e7978695f4a6cbd83616b5a702b77fa2087b247","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8009120e0354a67068e920eb10dce532391361d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98342148a8cd242855d7e257f298c966c96dba9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0e4bafac8963c2d85ee18d3d01f393735acceec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49452","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.587","lastModified":"2025-02-26T07:01:21.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndpaa2-eth: retrieve the virtual address before dma_unmap\n\nThe TSO header was DMA unmapped before the virtual address was retrieved\nand then used to free the buffer. This meant that we were actually\nremoving the DMA map and then trying to search for it to help in\nretrieving the virtual address. This lead to a invalid virtual address\nbeing used in the kfree call.\n\nFix this by calling dpaa2_iova_to_virt() prior to the dma_unmap call.\n\n[  487.231819] Unable to handle kernel paging request at virtual address fffffd9807000008\n\n(...)\n\n[  487.354061] Hardware name: SolidRun LX2160A Honeycomb (DT)\n[  487.359535] pstate: a0400005 (NzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  487.366485] pc : kfree+0xac\/0x304\n[  487.369799] lr : kfree+0x204\/0x304\n[  487.373191] sp : ffff80000c4eb120\n[  487.376493] x29: ffff80000c4eb120 x28: ffff662240c46400 x27: 0000000000000001\n[  487.383621] x26: 0000000000000001 x25: ffff662246da0cc0 x24: ffff66224af78000\n[  487.390748] x23: ffffad184f4ce008 x22: ffffad1850185000 x21: ffffad1838d13cec\n[  487.397874] x20: ffff6601c0000000 x19: fffffd9807000000 x18: 0000000000000000\n[  487.405000] x17: ffffb910cdc49000 x16: ffffad184d7d9080 x15: 0000000000004000\n[  487.412126] x14: 0000000000000008 x13: 000000000000ffff x12: 0000000000000000\n[  487.419252] x11: 0000000000000004 x10: 0000000000000001 x9 : ffffad184d7d927c\n[  487.426379] x8 : 0000000000000000 x7 : 0000000ffffffd1d x6 : ffff662240a94900\n[  487.433505] x5 : 0000000000000003 x4 : 0000000000000009 x3 : ffffad184f4ce008\n[  487.440632] x2 : ffff662243eec000 x1 : 0000000100000100 x0 : fffffc0000000000\n[  487.447758] Call trace:\n[  487.450194]  kfree+0xac\/0x304\n[  487.453151]  dpaa2_eth_free_tx_fd.isra.0+0x33c\/0x3e0 [fsl_dpaa2_eth]\n[  487.459507]  dpaa2_eth_tx_conf+0x100\/0x2e0 [fsl_dpaa2_eth]\n[  487.464989]  dpaa2_eth_poll+0xdc\/0x380 [fsl_dpaa2_eth]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06d129946a71f3159b3b40ee95549183edf2c79d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba5fe3dd4833bbc03609c5c0c2dd2cea5fa5addf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49453","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.673","lastModified":"2025-02-26T07:01:21.673","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: ti: ti_sci_pm_domains: Check for null return of devm_kcalloc\n\nThe allocation funciton devm_kcalloc may fail and return a null pointer,\nwhich would cause a null-pointer dereference later.\nIt might be better to check it and directly return -ENOMEM just like the\nusage of devm_kcalloc in previous code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01ba41a359622ab256ce4d4f8b94c67165ae3daf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/05efc4591f80582b6fe53366b70b6a35a42fd255","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cef9274fa1b8506949d74bc45aef072b890824a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba56291e297d28aa6eb82c5c1964fae2d7594746","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4e188869406b47ac3350920bf165be303cb1c96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49454","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.767","lastModified":"2025-02-26T07:01:21.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: mediatek: Fix refcount leak in mtk_pcie_subsys_powerup()\n\nThe of_find_compatible_node() function returns a node pointer with\nrefcount incremented, We should use of_node_put() on it when done\nAdd the missing of_node_put() to release the refcount."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09b2d906d78ddf5042b1f3e0091835fc6997e8a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/214e0d8fe4a813ae6ffd62bc2dfe7544c20914f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cef4237d6c37257cb6ddc397723e9c0dded0efe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad1c9d13e04509ae24fae8dd2897148657323519","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49455","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.857","lastModified":"2025-02-26T07:01:21.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: ocxl: fix possible double free in ocxl_file_register_afu\n\ninfo_release() will be called in device_unregister() when info->dev's\nreference count is 0. So there is no need to call ocxl_afu_put() and\nkfree() again.\n\nFix this by adding free_minor() and return to err_unregister error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/252768d32e92c1214aeebb5fec0844ca479bcf5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb674216835e1f0c143762696d645facebb4685","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/950cf957fe34d40d63dfa3bf3968210430b6491e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9087cf34ee69f4e95d146ac29385d6e367a97b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de65c32ace9aa70d51facc61ba986607075e3a25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee89d8dee55ab4b3b8ad8b70866b2841ba334767","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49456","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:21.950","lastModified":"2025-02-26T07:01:21.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: fix missed rcu protection\n\nWhen removing the rcu_read_lock in bond_ethtool_get_ts_info() as\ndiscussed [1], I didn't notice it could be called via setsockopt,\nwhich doesn't hold rcu lock, as syzbot pointed:\n\n  stack backtrace:\n  CPU: 0 PID: 3599 Comm: syz-executor317 Not tainted 5.18.0-rc5-syzkaller-01392-g01f4685797a5 #0\n  Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\n  Call Trace:\n   <TASK>\n   __dump_stack lib\/dump_stack.c:88 [inline]\n   dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n   bond_option_active_slave_get_rcu include\/net\/bonding.h:353 [inline]\n   bond_ethtool_get_ts_info+0x32c\/0x3a0 drivers\/net\/bonding\/bond_main.c:5595\n   __ethtool_get_ts_info+0x173\/0x240 net\/ethtool\/common.c:554\n   ethtool_get_phc_vclocks+0x99\/0x110 net\/ethtool\/common.c:568\n   sock_timestamping_bind_phc net\/core\/sock.c:869 [inline]\n   sock_set_timestamping+0x3a3\/0x7e0 net\/core\/sock.c:916\n   sock_setsockopt+0x543\/0x2ec0 net\/core\/sock.c:1221\n   __sys_setsockopt+0x55e\/0x6a0 net\/socket.c:2223\n   __do_sys_setsockopt net\/socket.c:2238 [inline]\n   __se_sys_setsockopt net\/socket.c:2235 [inline]\n   __x64_sys_setsockopt+0xba\/0x150 net\/socket.c:2235\n   do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n   do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n  RIP: 0033:0x7f8902c8eb39\n\nFix it by adding rcu_read_lock and take a ref on the real_dev.\nSince dev_hold() and dev_put() can take NULL these days, we can\nskip checking if real_dev exist.\n\n[1] https:\/\/lore.kernel.org\/netdev\/27565.1642742439@famine\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b66a533c47d29b38af8e05fbb53b609a5ba3a4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85eed460681da71b359ed906bce4d800081db854","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b80ccda233fa6c59de411bf889cc4d0e028f2c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49457","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.043","lastModified":"2025-02-26T07:01:22.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: versatile: Add missing of_node_put in dcscb_init\n\nThe device_node pointer is returned by of_find_compatible_node\nwith refcount incremented. We should use of_node_put() to avoid\nthe refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23b44f9c649bbef10b45fa33080cd8b4166800ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d7b23db35254b7d46e852967090c64cdccf24da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c6006faed9aba5144b33176d061031a9be66954","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83c329b980bddbc8c6a3d287d91f2103a4d4a860","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0fc05cd17617e63fc13ad0c01f3f0afd890d8ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbdfb7d4f036118d36415a2575efa6f5246505ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d146e2a9864ade19914494de3fb520390b415d58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6de7b181c29cd4578ec139aafb5eac062abbe1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcd1999ba97445a12cc394f5f42ffd9116bf0185","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49458","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.133","lastModified":"2025-02-26T07:01:22.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm: don't free the IRQ if it was not requested\n\nAs msm_drm_uninit() is called from the msm_drm_init() error path,\nadditional care should be necessary as not to call the free_irq() for\nthe IRQ that was not requested before (because an error occured earlier\nthan the request_irq() call).\n\nThis fixed the issue reported with the following backtrace:\n\n[    8.571329] Trying to free already-free IRQ 187\n[    8.571339] WARNING: CPU: 0 PID: 76 at kernel\/irq\/manage.c:1895 free_irq+0x1e0\/0x35c\n[    8.588746] Modules linked in: pmic_glink pdr_interface fastrpc qrtr_smd snd_soc_hdmi_codec msm fsa4480 gpu_sched drm_dp_aux_bus qrtr i2c_qcom_geni crct10dif_ce qcom_stats qcom_q6v5_pas drm_display_helper gpi qcom_pil_info drm_kms_helper qcom_q6v5 qcom_sysmon qcom_common qcom_glink_smem qcom_rng mdt_loader qmi_helpers phy_qcom_qmp ufs_qcom typec qnoc_sm8350 socinfo rmtfs_mem fuse drm ipv6\n[    8.624154] CPU: 0 PID: 76 Comm: kworker\/u16:2 Not tainted 5.18.0-rc5-next-20220506-00033-g6cee8cab6089-dirty #419\n[    8.624161] Hardware name: Qualcomm Technologies, Inc. SM8350 HDK (DT)\n[    8.641496] Workqueue: events_unbound deferred_probe_work_func\n[    8.647510] pstate: 604000c5 (nZCv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    8.654681] pc : free_irq+0x1e0\/0x35c\n[    8.658454] lr : free_irq+0x1e0\/0x35c\n[    8.662228] sp : ffff800008ab3950\n[    8.665642] x29: ffff800008ab3950 x28: 0000000000000000 x27: ffff16350f56a700\n[    8.672994] x26: ffff1635025df080 x25: ffff16350251badc x24: ffff16350251bb90\n[    8.680343] x23: 0000000000000000 x22: 00000000000000bb x21: ffff16350e8f9800\n[    8.687690] x20: ffff16350251ba00 x19: ffff16350cbd5880 x18: ffffffffffffffff\n[    8.695039] x17: 0000000000000000 x16: ffffa2dd12179434 x15: ffffa2dd1431d02d\n[    8.702391] x14: 0000000000000000 x13: ffffa2dd1431d028 x12: 662d79646165726c\n[    8.709740] x11: ffffa2dd13fd2438 x10: 000000000000000a x9 : 00000000000000bb\n[    8.717111] x8 : ffffa2dd13fd23f0 x7 : ffff800008ab3750 x6 : 00000000fffff202\n[    8.724487] x5 : ffff16377e870a18 x4 : 00000000fffff202 x3 : ffff735a6ae1b000\n[    8.731851] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff1635015f8000\n[    8.739217] Call trace:\n[    8.741755]  free_irq+0x1e0\/0x35c\n[    8.745198]  msm_drm_uninit.isra.0+0x14c\/0x294 [msm]\n[    8.750548]  msm_drm_bind+0x28c\/0x5d0 [msm]\n[    8.755081]  try_to_bring_up_aggregate_device+0x164\/0x1d0\n[    8.760657]  __component_add+0xa0\/0x170\n[    8.764626]  component_add+0x14\/0x20\n[    8.768337]  dp_display_probe+0x2a4\/0x464 [msm]\n[    8.773242]  platform_probe+0x68\/0xe0\n[    8.777043]  really_probe.part.0+0x9c\/0x28c\n[    8.781368]  __driver_probe_device+0x98\/0x144\n[    8.785871]  driver_probe_device+0x40\/0x140\n[    8.790191]  __device_attach_driver+0xb4\/0x120\n[    8.794788]  bus_for_each_drv+0x78\/0xd0\n[    8.798751]  __device_attach+0xdc\/0x184\n[    8.802713]  device_initial_probe+0x14\/0x20\n[    8.807031]  bus_probe_device+0x9c\/0xa4\n[    8.810991]  deferred_probe_work_func+0x88\/0xc0\n[    8.815667]  process_one_work+0x1d0\/0x320\n[    8.819809]  worker_thread+0x14c\/0x444\n[    8.823688]  kthread+0x10c\/0x110\n[    8.827036]  ret_from_fork+0x10\/0x20\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/485422\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/577e2a9dfc8fba7938aaf75db63fae7e328cc3cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59023c4fb1ab3de0fa001681650f662c253c7fd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b288ec4439c1dad304c1862bf6b0be78d9b1b2b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/beb81c13d020ceb7f8693e65464162e5f249218e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49459","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.230","lastModified":"2025-02-26T07:01:22.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal\/drivers\/broadcom: Fix potential NULL dereference in sr_thermal_probe\n\nplatform_get_resource() may return NULL, add proper check to\navoid potential NULL dereferencing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61621e042c22b47d1eadee617bdd26835294b425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79098339ac2065f4b4352ef5921628970b6f47e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3461ccaa5d2588568d865faee285512ad448049","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e20d136ec7d6f309989c447638365840d3424c8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee9b6b02e8c140323ed46d6602d805ea735c7719","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1235c6514a58f274246cf4a2d5f4e40af539ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49460","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.327","lastModified":"2025-02-26T07:01:22.327","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPM \/ devfreq: rk3399_dmc: Disable edev on remove()\n\nOtherwise we hit an unablanced enable-count when unbinding the DFI\ndevice:\n\n[ 1279.659119] ------------[ cut here ]------------\n[ 1279.659179] WARNING: CPU: 2 PID: 5638 at drivers\/devfreq\/devfreq-event.c:360 devfreq_event_remove_edev+0x84\/0x8c\n...\n[ 1279.659352] Hardware name: Google Kevin (DT)\n[ 1279.659363] pstate: 80400005 (Nzcv daif +PAN -UAO -TCO BTYPE=--)\n[ 1279.659371] pc : devfreq_event_remove_edev+0x84\/0x8c\n[ 1279.659380] lr : devm_devfreq_event_release+0x1c\/0x28\n...\n[ 1279.659571] Call trace:\n[ 1279.659582]  devfreq_event_remove_edev+0x84\/0x8c\n[ 1279.659590]  devm_devfreq_event_release+0x1c\/0x28\n[ 1279.659602]  release_nodes+0x1cc\/0x244\n[ 1279.659611]  devres_release_all+0x44\/0x60\n[ 1279.659621]  device_release_driver_internal+0x11c\/0x1ac\n[ 1279.659629]  device_driver_detach+0x20\/0x2c\n[ 1279.659641]  unbind_store+0x7c\/0xb0\n[ 1279.659650]  drv_attr_store+0x2c\/0x40\n[ 1279.659663]  sysfs_kf_write+0x44\/0x58\n[ 1279.659672]  kernfs_fop_write_iter+0xf4\/0x190\n[ 1279.659684]  vfs_write+0x2b0\/0x2e4\n[ 1279.659693]  ksys_write+0x80\/0xec\n[ 1279.659701]  __arm64_sys_write+0x24\/0x30\n[ 1279.659714]  el0_svc_common+0xf0\/0x1d8\n[ 1279.659724]  do_el0_svc_compat+0x28\/0x3c\n[ 1279.659738]  el0_svc_compat+0x10\/0x1c\n[ 1279.659746]  el0_sync_compat_handler+0xa8\/0xcc\n[ 1279.659758]  el0_sync_compat+0x188\/0x1c0\n[ 1279.659768] ---[ end trace cec200e5094155b4 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2fccf9e6050e0e3b8b4cd275d41daf7f7fa22804","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/664736e2cc09e504ce58ec61164d029d1f2651bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86b091b6894c449d2734de7aa7d79ccb33ffd97d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0180e324a9a63de8f770da300477b48cb4a53f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9c2b23a7ac6ab19214cad8cac8af8608a4d9cef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb1be1d4be18fe286ba5a67d928598378fd7fbe5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb089b6f21de03a685dd31df3789bbb01c59f8e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49461","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.423","lastModified":"2025-02-26T07:01:22.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\namt: fix memory leak for advertisement message\n\nWhen a gateway receives an advertisement message, it extracts relay\ninformation and then it should be freed.\nBut the advertisement handler doesn't free it.\nSo, memory leak would occur."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19bb2d57eac86a368839a92117d8a10ab7183623","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7322da399fb86a2072f008b56f7160afa1b2051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe29794c3585d039fefebaa2b5a4932a627ad4fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49462","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.517","lastModified":"2025-02-26T07:01:22.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/a6xx: Fix refcount leak in a6xx_gpu_init\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\n\na6xx_gmu_init() passes the node to of_find_device_by_node()\nand of_dma_configure(), of_find_device_by_node() will takes its\nreference, of_dma_configure() doesn't need the node after usage.\n\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06907a374f1b74f8f2fb30720dc6df81331e4fb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48e82ce8cdb19c20a5020fa446b286d6a147450c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65ddbc0d26824e2a5d6154d01d8cf39344900213","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6832e36f156ea35a6ed74bca72727806116effdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c56de483093d7ad0782327f95dda7da97bc4c315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edff4c1af831d0c02e654eed9da7d74174de49d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49463","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.603","lastModified":"2025-02-26T07:01:22.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal\/drivers\/imx_sc_thermal: Fix refcount leak in imx_sc_thermal_probe\n\nof_find_node_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09700c504d8e63faffd2a2235074e8c5d130cb8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ec10303c10833c1bcba7a1bde2f297e494d5464","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ade442ea5d3512a3c67984489ab4d8a6fb3b29f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bbf522a2c51ef939d0e8835e236bfcd252193af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec0925b731697db7cab5944a3e55d2d58bb3d075","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49464","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.697","lastModified":"2025-02-26T07:01:22.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerofs: fix buffer copy overflow of ztailpacking feature\n\nI got some KASAN report as below:\n\n[   46.959738] ==================================================================\n[   46.960430] BUG: KASAN: use-after-free in z_erofs_shifted_transform+0x2bd\/0x370\n[   46.960430] Read of size 4074 at addr ffff8880300c2f8e by task fssum\/188\n...\n[   46.960430] Call Trace:\n[   46.960430]  <TASK>\n[   46.960430]  dump_stack_lvl+0x41\/0x5e\n[   46.960430]  print_report.cold+0xb2\/0x6b7\n[   46.960430]  ? z_erofs_shifted_transform+0x2bd\/0x370\n[   46.960430]  kasan_report+0x8a\/0x140\n[   46.960430]  ? z_erofs_shifted_transform+0x2bd\/0x370\n[   46.960430]  kasan_check_range+0x14d\/0x1d0\n[   46.960430]  memcpy+0x20\/0x60\n[   46.960430]  z_erofs_shifted_transform+0x2bd\/0x370\n[   46.960430]  z_erofs_decompress_pcluster+0xaae\/0x1080\n\nThe root cause is that the tail pcluster won't be a complete filesystem\nblock anymore. So if ztailpacking is used, the second part of an\nuncompressed tail pcluster may not be ``rq->pageofs_out``."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d53a625f29074e7b8236c2c0e0922edb7608df9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b59e1907f58cf877c563dcf013159eb9f994b64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcbe6803fffd387f72b48c2373b5f5ed12a5804b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49465","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.787","lastModified":"2025-02-26T07:01:22.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-throttle: Set BIO_THROTTLED when bio has been throttled\n\n1.In current process, all bio will set the BIO_THROTTLED flag\nafter __blk_throtl_bio().\n\n2.If bio needs to be throttled, it will start the timer and\nstop submit bio directly. Bio will submit in\nblk_throtl_dispatch_work_fn() when the timer expires.But in\nthe current process, if bio is throttled. The BIO_THROTTLED\nwill be set to bio after timer start. If the bio has been\ncompleted, it may cause use-after-free blow.\n\nBUG: KASAN: use-after-free in blk_throtl_bio+0x12f0\/0x2c70\nRead of size 2 at addr ffff88801b8902d4 by task fio\/26380\n\n dump_stack+0x9b\/0xce\n print_address_description.constprop.6+0x3e\/0x60\n kasan_report.cold.9+0x22\/0x3a\n blk_throtl_bio+0x12f0\/0x2c70\n submit_bio_checks+0x701\/0x1550\n submit_bio_noacct+0x83\/0xc80\n submit_bio+0xa7\/0x330\n mpage_readahead+0x380\/0x500\n read_pages+0x1c1\/0xbf0\n page_cache_ra_unbounded+0x471\/0x6f0\n do_page_cache_ra+0xda\/0x110\n ondemand_readahead+0x442\/0xae0\n page_cache_async_ra+0x210\/0x300\n generic_file_buffered_read+0x4d9\/0x2130\n generic_file_read_iter+0x315\/0x490\n blkdev_read_iter+0x113\/0x1b0\n aio_read+0x2ad\/0x450\n io_submit_one+0xc8e\/0x1d60\n __se_sys_io_submit+0x125\/0x350\n do_syscall_64+0x2d\/0x40\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nAllocated by task 26380:\n kasan_save_stack+0x19\/0x40\n __kasan_kmalloc.constprop.2+0xc1\/0xd0\n kmem_cache_alloc+0x146\/0x440\n mempool_alloc+0x125\/0x2f0\n bio_alloc_bioset+0x353\/0x590\n mpage_alloc+0x3b\/0x240\n do_mpage_readpage+0xddf\/0x1ef0\n mpage_readahead+0x264\/0x500\n read_pages+0x1c1\/0xbf0\n page_cache_ra_unbounded+0x471\/0x6f0\n do_page_cache_ra+0xda\/0x110\n ondemand_readahead+0x442\/0xae0\n page_cache_async_ra+0x210\/0x300\n generic_file_buffered_read+0x4d9\/0x2130\n generic_file_read_iter+0x315\/0x490\n blkdev_read_iter+0x113\/0x1b0\n aio_read+0x2ad\/0x450\n io_submit_one+0xc8e\/0x1d60\n __se_sys_io_submit+0x125\/0x350\n do_syscall_64+0x2d\/0x40\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nFreed by task 0:\n kasan_save_stack+0x19\/0x40\n kasan_set_track+0x1c\/0x30\n kasan_set_free_info+0x1b\/0x30\n __kasan_slab_free+0x111\/0x160\n kmem_cache_free+0x94\/0x460\n mempool_free+0xd6\/0x320\n bio_free+0xe0\/0x130\n bio_put+0xab\/0xe0\n bio_endio+0x3a6\/0x5d0\n blk_update_request+0x590\/0x1370\n scsi_end_request+0x7d\/0x400\n scsi_io_completion+0x1aa\/0xe50\n scsi_softirq_done+0x11b\/0x240\n blk_mq_complete_request+0xd4\/0x120\n scsi_mq_done+0xf0\/0x200\n virtscsi_vq_done+0xbc\/0x150\n vring_interrupt+0x179\/0x390\n __handle_irq_event_percpu+0xf7\/0x490\n handle_irq_event_percpu+0x7b\/0x160\n handle_irq_event+0xcc\/0x170\n handle_edge_irq+0x215\/0xb20\n common_interrupt+0x60\/0x120\n asm_common_interrupt+0x1e\/0x40\n\nFix this by move BIO_THROTTLED set into the queue_lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cfc8a0fb07cde61915e4a77c4794c47de3114a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a011f889b4832aa80c2a872a5aade5c48d2756f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/935fa666534d7b7185e8c6b0191cd06281be4290","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49466","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.880","lastModified":"2025-02-26T07:01:22.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: scmi: Fix refcount leak in scmi_regulator_probe\n\nof_find_node_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/299a002161c7bfb72e99ba45e5b660aecc344ea0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a59c763ef9b68c711dc2fd2ef4a6648da5480ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68d6c8476fd4f448e70e0ab31ff972838ac41dae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ebbfa73d69909b7c737f599fd4ebd42318fc881","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49467","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:22.967","lastModified":"2025-02-26T07:01:22.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: msm: fix possible memory leak in mdp5_crtc_cursor_set()\n\ndrm_gem_object_lookup will call drm_gem_object_get inside. So cursor_bo\nneeds to be put when msm_gem_get_and_pin_iova fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33546183c16c7b9650682dc610bedd732d9c6919","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/449374565f349d4233beec811d4286fdfe5de44b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/656aa3c51fc662064f17179b38ec3ce43af53bca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/947a844bb3ebff0f4736d244d792ce129f6700d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d544880482a5558ec06393b1b3d5dc9275b7a32b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d63ffe3fb3f8327ca21cf91b6a14a2961bc629b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8cd192752a1f613b14eee77783c6f0aebb49691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49468","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.063","lastModified":"2025-02-26T07:01:23.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal\/core: Fix memory leak in __thermal_cooling_device_register()\n\nI got memory leak as follows when doing fault injection test:\n\nunreferenced object 0xffff888010080000 (size 264312):\n  comm \"182\", pid 102533, jiffies 4296434960 (age 10.100s)\n  hex dump (first 32 bytes):\n    00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........\n    ff ff ff ff ff ff ff ff 40 7f 1f b9 ff ff ff ff  ........@.......\n  backtrace:\n    [<0000000038b2f4fc>] kmalloc_order_trace+0x1d\/0x110 mm\/slab_common.c:969\n    [<00000000ebcb8da5>] __kmalloc+0x373\/0x420 include\/linux\/slab.h:510\n    [<0000000084137f13>] thermal_cooling_device_setup_sysfs+0x15d\/0x2d0 include\/linux\/slab.h:586\n    [<00000000352b8755>] __thermal_cooling_device_register+0x332\/0xa60 drivers\/thermal\/thermal_core.c:927\n    [<00000000fb9f331b>] devm_thermal_of_cooling_device_register+0x6b\/0xf0 drivers\/thermal\/thermal_core.c:1041\n    [<000000009b8012d2>] max6650_probe.cold+0x557\/0x6aa drivers\/hwmon\/max6650.c:211\n    [<00000000da0b7e04>] i2c_device_probe+0x472\/0xac0 drivers\/i2c\/i2c-core-base.c:561\n\nIf device_register() fails, thermal_cooling_device_destroy_sysfs() need be called\nto free the memory allocated in thermal_cooling_device_setup_sysfs()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18530bedd221160823f63ccc20dd55c7a03edbcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21ccc58b671aea924f2481cf5c1cf0ebbfd3552d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3802171f0b5b8b831f4ade5c827547cb323a5bb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98a160e898c0f4a979af9de3ab48b4b1d42d1dbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9abdf0c0184230f0cb5c6685aabf33dda89aa9fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49469","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.157","lastModified":"2025-02-26T07:01:23.157","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix anon_dev leak in create_subvol()\n\nWhen btrfs_qgroup_inherit(), btrfs_alloc_tree_block, or\nbtrfs_insert_root() fail in create_subvol(), we return without freeing\nanon_dev. Reorganize the error handling in create_subvol() to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2256e901f5bddc56e24089c96f27b77da932dfcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a875ad8706f0903a0e812e0dd701956ee9826ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d887b3de318834f9aa637ecf79c6bc66cba7c69a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49470","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.240","lastModified":"2025-02-26T07:01:23.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btmtksdio: fix use-after-free at btmtksdio_recv_event\n\nWe should not access skb buffer data anymore after hci_recv_frame was\ncalled.\n\n[   39.634809] BUG: KASAN: use-after-free in btmtksdio_recv_event+0x1b0\n[   39.634855] Read of size 1 at addr ffffff80cf28a60d by task kworker\n[   39.634962] Call trace:\n[   39.634974]  dump_backtrace+0x0\/0x3b8\n[   39.634999]  show_stack+0x20\/0x2c\n[   39.635016]  dump_stack_lvl+0x60\/0x78\n[   39.635040]  print_address_description+0x70\/0x2f0\n[   39.635062]  kasan_report+0x154\/0x194\n[   39.635079]  __asan_report_load1_noabort+0x44\/0x50\n[   39.635099]  btmtksdio_recv_event+0x1b0\/0x1c4\n[   39.635129]  btmtksdio_txrx_work+0x6cc\/0xac4\n[   39.635157]  process_one_work+0x560\/0xc5c\n[   39.635177]  worker_thread+0x7ec\/0xcc0\n[   39.635195]  kthread+0x2d0\/0x3d0\n[   39.635215]  ret_from_fork+0x10\/0x20\n[   39.635247] Allocated by task 0:\n[   39.635260] (stack is not available)\n[   39.635281] Freed by task 2392:\n[   39.635295]  kasan_save_stack+0x38\/0x68\n[   39.635319]  kasan_set_track+0x28\/0x3c\n[   39.635338]  kasan_set_free_info+0x28\/0x4c\n[   39.635357]  ____kasan_slab_free+0x104\/0x150\n[   39.635374]  __kasan_slab_free+0x18\/0x28\n[   39.635391]  slab_free_freelist_hook+0x114\/0x248\n[   39.635410]  kfree+0xf8\/0x2b4\n[   39.635427]  skb_free_head+0x58\/0x98\n[   39.635447]  skb_release_data+0x2f4\/0x410\n[   39.635464]  skb_release_all+0x50\/0x60\n[   39.635481]  kfree_skb+0xc8\/0x25c\n[   39.635498]  hci_event_packet+0x894\/0xca4 [bluetooth]\n[   39.635721]  hci_rx_work+0x1c8\/0x68c [bluetooth]\n[   39.635925]  process_one_work+0x560\/0xc5c\n[   39.635951]  worker_thread+0x7ec\/0xcc0\n[   39.635970]  kthread+0x2d0\/0x3d0\n[   39.635990]  ret_from_fork+0x10\/0x20\n[   39.636021] The buggy address belongs to the object at ffffff80cf28a600\n                which belongs to the cache kmalloc-512 of size 512\n[   39.636039] The buggy address is located 13 bytes inside of\n                512-byte region [ffffff80cf28a600, ffffff80cf28a800)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01c6a899fa6be4f4cbf60c4f44f0f6691155415f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/02ba31e09a26e8cd4582ac8e6163d80284997727","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fab6361c4ba17d1b43a991bef4238a3c1754d35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3cec8a42fcd11d05313c724f27e01b1db77522c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49471","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.333","lastModified":"2025-02-26T07:01:23.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtw89: cfo: check mac_id to avoid out-of-bounds\n\nSomehow, hardware reports incorrect mac_id and pollute memory. Check index\nbefore we access the array.\n\n  UBSAN: array-index-out-of-bounds in rtw89\/phy.c:2517:23\n  index 188 is out of range for type 's32 [64]'\n  CPU: 1 PID: 51550 Comm: irq\/35-rtw89_pc Tainted: G           OE\n  Call Trace:\n   <IRQ>\n   show_stack+0x52\/0x58\n   dump_stack_lvl+0x4c\/0x63\n   dump_stack+0x10\/0x12\n   ubsan_epilogue+0x9\/0x45\n   __ubsan_handle_out_of_bounds.cold+0x44\/0x49\n   ? __alloc_skb+0x92\/0x1d0\n   rtw89_phy_cfo_parse+0x44\/0x7f [rtw89_core]\n   rtw89_core_rx+0x261\/0x871 [rtw89_core]\n   ? __alloc_skb+0xee\/0x1d0\n   rtw89_pci_napi_poll+0x3fa\/0x4ea [rtw89_pci]\n   __napi_poll+0x33\/0x1a0\n   net_rx_action+0x126\/0x260\n   ? __queue_work+0x217\/0x4c0\n   __do_softirq+0xd9\/0x315\n   ? disable_irq_nosync+0x10\/0x10\n   do_softirq.part.0+0x6d\/0x90\n   <\/IRQ>\n   <TASK>\n   __local_bh_enable_ip+0x62\/0x70\n   rtw89_pci_interrupt_threadfn+0x182\/0x1a6 [rtw89_pci]\n   irq_thread_fn+0x28\/0x60\n   irq_thread+0xc8\/0x190\n   ? irq_thread_fn+0x60\/0x60\n   kthread+0x16b\/0x190\n   ? irq_thread_check_affinity+0xe0\/0xe0\n   ? set_kthread_struct+0x50\/0x50\n   ret_from_fork+0x22\/0x30\n   <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03ed236480aeec8c2fd327a1ea6d711364c495e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97df85871a5b187609d30fca6d85b912d9e02f29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c32fafe68298bb599e825c298e1d0ba30186f0a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49472","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.423","lastModified":"2025-02-26T07:01:23.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: micrel: Allow probing without .driver_data\n\nCurrently, if the .probe element is present in the phy_driver structure\nand the .driver_data is not, a NULL pointer dereference happens.\n\nAllow passing .probe without .driver_data by inserting NULL checks\nfor priv->type."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/143878e18001c5a61fcc7ae5c5240323753bb641","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e5fbfc2a6f384e3195446c14bbd3bc298eb88c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/660dfa033ccc9afb032015b6dc76e846bba42cfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dcb404662839a4ed1a9703658fee979eb894ca4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e720b32cba25fa58eaa4c88fe957009cffe9f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abb5594ae2ba7b82cce85917cc6337ec5d774837","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd219273b4e004a3f853da72e111fc8f81357501","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2ef6f7539c68c6bd6c32323d8845ee102b7c450","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49473","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.517","lastModified":"2025-02-26T07:01:23.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ti: j721e-evm: Fix refcount leak in j721e_soc_probe_*\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not needed anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a3966b950b37a6f10c5f9caee15b4cdcf5a7413","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/510e879420b410d88c612aecc6ca15dc6fe77473","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/554df0f70bff1ace6d2df2fcaddbc9b7bd509de2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a34840c4eb3278a7c29c9c57a65ce7541c66f9f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d748ff8fbb3a5296bddd586445dc692b079cbe3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49474","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.613","lastModified":"2025-02-26T07:01:23.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: fix dangling sco_conn and use-after-free in sco_sock_timeout\n\nConnecting the same socket twice consecutively in sco_sock_connect()\ncould lead to a race condition where two sco_conn objects are created\nbut only one is associated with the socket. If the socket is closed\nbefore the SCO connection is established, the timer associated with the\ndangling sco_conn object won't be canceled. As the sock object is being\nfreed, the use-after-free problem happens when the timer callback\nfunction sco_sock_timeout() accesses the socket. Here's the call trace:\n\ndump_stack+0x107\/0x163\n? refcount_inc+0x1c\/\nprint_address_description.constprop.0+0x1c\/0x47e\n? refcount_inc+0x1c\/0x7b\nkasan_report+0x13a\/0x173\n? refcount_inc+0x1c\/0x7b\ncheck_memory_region+0x132\/0x139\nrefcount_inc+0x1c\/0x7b\nsco_sock_timeout+0xb2\/0x1ba\nprocess_one_work+0x739\/0xbd1\n? cancel_delayed_work+0x13f\/0x13f\n? __raw_spin_lock_init+0xf0\/0xf0\n? to_kthread+0x59\/0x85\nworker_thread+0x593\/0x70e\nkthread+0x346\/0x35a\n? drain_workqueue+0x31a\/0x31a\n? kthread_bind+0x4b\/0x4b\nret_from_fork+0x1f\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36c644c63bfcaee2d3a426f45e89a9cd09799318","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/390d82733a953c1fabf3de9c9618091a7a9c90a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/537f619dea4e3fa8ed1f8f938abffe3615794bcc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65d347cb39e2e6bd0c2a745ad7c928998ebb0162","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f55fac0af3531cf60d11369454c41f5fc81ab3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7aa1e7d15f8a5b65f67bacb100d8fc033b21efa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d61dbd7311ab978d8ddac1749a758de4de00374","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99df16007f4bbf9abfc3478cb17d10f0d7f8906e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9de3dc09e56f8deacd2bdbf4cecb71e11a312405","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49475","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.713","lastModified":"2025-02-26T07:01:23.713","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-fsl-qspi: check return value after calling platform_get_resource_byname()\n\nIt will cause null-ptr-deref if platform_get_resource_byname() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10f537219629769498ecb8515e096be213224c24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33dda87d04598ac5d9a849218a373443f7d3de66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/560dcbe1c7a78f597f2167371ebdbe2bca3d0735","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d9c84825c3ec359b165c762a424cfdefe87fdd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b331ac11e1cac56f5b7d367e9f3c5796deaaed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49476","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.800","lastModified":"2025-02-26T07:01:23.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt7921: fix kernel crash at mt7921_pci_remove\n\nThe crash log shown it is possible that mt7921_irq_handler is called while\ndevm_free_irq is being handled so mt76_free_device need to be postponed\nuntil devm_free_irq is completed to solve the crash we free the mt76 device\ntoo early.\n\n[ 9299.339655] BUG: kernel NULL pointer dereference, address: 0000000000000008\n[ 9299.339705] #PF: supervisor read access in kernel mode\n[ 9299.339735] #PF: error_code(0x0000) - not-present page\n[ 9299.339768] PGD 0 P4D 0\n[ 9299.339786] Oops: 0000 [#1] SMP PTI\n[ 9299.339812] CPU: 1 PID: 1624 Comm: prepare-suspend Not tainted 5.15.14-1.fc32.qubes.x86_64 #1\n[ 9299.339863] Hardware name: Xen HVM domU, BIOS 4.14.3 01\/20\/2022\n[ 9299.339901] RIP: 0010:mt7921_irq_handler+0x1e\/0x70 [mt7921e]\n[ 9299.340048] RSP: 0018:ffffa81b80c27cb0 EFLAGS: 00010082\n[ 9299.340081] RAX: 0000000000000000 RBX: ffff98a4cb752020 RCX: ffffffffa96211c5\n[ 9299.340123] RDX: 0000000000000000 RSI: 00000000000d4204 RDI: ffff98a4cb752020\n[ 9299.340165] RBP: ffff98a4c28a62a4 R08: ffff98a4c37a96c0 R09: 0000000080150011\n[ 9299.340207] R10: 0000000040000000 R11: 0000000000000000 R12: ffff98a4c4eaa080\n[ 9299.340249] R13: ffff98a4c28a6360 R14: ffff98a4cb752020 R15: ffff98a4c28a6228\n[ 9299.340297] FS: 00007260840d3740(0000) GS:ffff98a4ef700000(0000) knlGS:0000000000000000\n[ 9299.340345] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 9299.340383] CR2: 0000000000000008 CR3: 0000000004c56001 CR4: 0000000000770ee0\n[ 9299.340432] PKRU: 55555554\n[ 9299.340449] Call Trace:\n[ 9299.340467] <TASK>\n[ 9299.340485] __free_irq+0x221\/0x350\n[ 9299.340527] free_irq+0x30\/0x70\n[ 9299.340553] devm_free_irq+0x55\/0x80\n[ 9299.340579] mt7921_pci_remove+0x2f\/0x40 [mt7921e]\n[ 9299.340616] pci_device_remove+0x3b\/0xa0\n[ 9299.340651] __device_release_driver+0x17a\/0x240\n[ 9299.340686] device_driver_detach+0x3c\/0xa0\n[ 9299.340714] unbind_store+0x113\/0x130\n[ 9299.340740] kernfs_fop_write_iter+0x124\/0x1b0\n[ 9299.340775] new_sync_write+0x15c\/0x1f0\n[ 9299.340806] vfs_write+0x1d2\/0x270\n[ 9299.340831] ksys_write+0x67\/0xe0\n[ 9299.340857] do_syscall_64+0x3b\/0x90\n[ 9299.340887] entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09693f5b636fb3f6dd56fd943226fc1bbc600b51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/677e669973bf5460705bc65033445ea9f6615999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad483ed9dd5193a54293269c852a29051813b7bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49477","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:23.920","lastModified":"2025-02-26T07:01:23.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: samsung: Fix refcount leak in aries_audio_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nIf extcon_find_edev_by_node() fails, it doesn't call of_node_put()\nCalling of_node_put() after extcon_find_edev_by_node() to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46d1b310a2d571811c4e08041ce287babb60b86a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70130bde3457d28c02c76b6cacc5d40a72dd6e17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85d899f396622d3034643bf89615a78f9be7c91a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf4a9b2467b775717d0e9034ad916888e19713a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cacea459f95be22b3750f3b25b7a1c5897a68206","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49478","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.050","lastModified":"2025-02-26T07:01:24.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pvrusb2: fix array-index-out-of-bounds in pvr2_i2c_core_init\n\nSyzbot reported that -1 is used as array index. The problem was in\nmissing validation check.\n\nhdw->unit_number is initialized with -1 and then if init table walk fails\nthis value remains unchanged. Since code blindly uses this member for\narray indexing adding sanity check is the easiest fix for that.\n\nhdw->workpoll initialization moved upper to prevent warning in\n__flush_work."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1310fc3538dcc375a2f46ef0a438512c2ca32827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24e807541e4a9263ed928e6ae3498de3ad43bd1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e004fe914b243db41fa96f9e583385f360ea58e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3309c2c574e13b21b44729f5bdbf21f60189b79a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4351bfe36aba9fa7dc9d68d498d25d41a0f45e67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/471bec68457aaf981add77b4f590d65dd7da1059","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3304766d9384886e6d3092c776273526947a2e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3660e06675bccec4bf149c7229ea1d491ba10d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f99a8b1ec0eddc2931aeaa4f490277a15b39f511","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49479","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.153","lastModified":"2025-02-26T07:01:24.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: fix tx status related use-after-free race on station removal\n\nThere is a small race window where ongoing tx activity can lead to a skb\ngetting added to the status tracking idr after that idr has already been\ncleaned up, which will keep the wcid linked in the status poll list.\nFix this by only adding status skbs if the wcid pointer is still assigned\nin dev->wcid, which gets cleared early by mt76_sta_pre_rcu_remove"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ddd426d72aca4054045a9bd3b80a4ce1d398f11f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef7f9f894cfd0b2e471206409a529af4a26ddd55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcfe1b5e162bf473c1d47760962cec8523c00466","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49480","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.243","lastModified":"2025-02-26T07:01:24.243","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: imx-hdmi: Fix refcount leak in imx_hdmi_probe\n\nof_find_device_by_node() takes reference, we should use put_device()\nto release it. when devm_kzalloc() fails, it doesn't have a\nput_device(), it will cause refcount leak.\nAdd missing put_device() to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/81b7edaabd44ba133006ad72056914eb36828d60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8205a0114db10ec41bd2b748cdd7528632082eca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf760e494ee5fa6bc2dc222f0098c741ad460801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed46731d8e86c8d65f5fc717671e1f1f6c3146d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49481","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.340","lastModified":"2025-02-26T07:01:24.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: pfuze100: Fix refcount leak in pfuze_parse_regulators_dt\n\nof_node_get() returns a node with refcount incremented.\nCalling of_node_put() to drop the reference when not needed anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0be5d9da5743b9825a95baec85a67500b2c1d362","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d785baeb91568332197be356d138e5e59c7ddb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56ab0c01027492cd161c64148e1dc892c56887ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/671be14fc31374b1a10a3abd93db6a8480838fc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ca675f4abbc74bc991d154a1ecc8b384dc2aae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/984cfef0675ed7398814e14af2c5323911723e1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f564e29a51210a49df3d925117777c157a17d6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afaa7b933ef00a2d3262f4d1252087613fb5c06d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b74c0dd9179d21b7260260e075d597b23970100c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49482","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.433","lastModified":"2025-02-26T07:01:24.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mxs-saif: Fix refcount leak in mxs_saif_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18b907ff0ae4bf20120aae1538f7156b9d08e3a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24491124406666bf0dcb9ee10c5575c6ce6a1730","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a0da7641e1f17a744ac7b3f76471388c97b63dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2be84f73785fa9ed6443e3c5b158730266f1c2ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30d110ca703ce60162ec337aa564a3e4da30715f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e2a1bcc51bdebed48176f6e88c150f175983f9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c933829cbf3338b684869e6c4c8931abf5d68fbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d42601e93fce7802bb8d70dd59b60cfeefa20469","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d855505851ee8ba666eb204149b49f906130dc17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49483","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.527","lastModified":"2025-02-26T07:01:24.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/disp\/dpu1: avoid clearing hw interrupts if hw_intr is null during drm uninit\n\nIf edp modeset init is failed due to panel being not ready and\nprobe defers during drm bind, avoid clearing irqs and dereference\nhw_intr when hw_intr is null.\n\nBUG: Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n\nCall trace:\n dpu_core_irq_uninstall+0x50\/0xb0\n dpu_irq_uninstall+0x18\/0x24\n msm_drm_uninit+0xd8\/0x16c\n msm_drm_bind+0x580\/0x5fc\n try_to_bring_up_master+0x168\/0x1c0\n __component_add+0xb4\/0x178\n component_add+0x1c\/0x28\n dp_display_probe+0x38c\/0x400\n platform_probe+0xb0\/0xd0\n really_probe+0xcc\/0x2c8\n __driver_probe_device+0xbc\/0xe8\n driver_probe_device+0x48\/0xf0\n __device_attach_driver+0xa0\/0xc8\n bus_for_each_drv+0x8c\/0xd8\n __device_attach+0xc4\/0x150\n device_initial_probe+0x1c\/0x28\n\nChanges in V2:\n- Update commit message and coreect fixes tag.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/484430\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01013ba9bbddc62f7d011163cebfd7ed06bb698b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7ca30c3a8b2e8bda65f2b922d382ac056be8aa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a800701429313149afde18d98821554fbfcb3164","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49484","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.620","lastModified":"2025-02-26T07:01:24.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmt76: mt7915: fix possible NULL pointer dereference in mt7915_mac_fill_rx_vector\n\nFix possible NULL pointer dereference in mt7915_mac_fill_rx_vector\nroutine if the chip does not support dbdc and the hw reports band_idx\nset to 1."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/268e8ef187eb8780d021b0e4f5ffa92dee5c4983","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62fdc974894eec80d678523458cf99bbdb887e22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49485","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.710","lastModified":"2025-02-26T07:01:24.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/v3d: Fix null pointer dereference of pointer perfmon\n\nIn the unlikely event that pointer perfmon is null the WARN_ON return path\noccurs after the pointer has already been deferenced. Fix this by only\ndereferencing perfmon after it has been null checked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1df8f8901babcc8c8eea2c067179e455b5c828fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b72deb784a7d4ae8519a5c584cd87c4b57aa6c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4be045434923e549a50846a066a04b7b6c1d6d33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce7a1ecf3f9f1fccaf67295307614511d8e11b13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49486","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.803","lastModified":"2025-02-26T07:01:24.803","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: fsl: Fix refcount leak in imx_sgtl5000_probe\n\nof_find_i2c_device_by_node() takes a reference,\nIn error paths, we should call put_device() to drop\nthe reference to aviod refount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41cd312dfe980af869c3503b4d38e62ed20dd3b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bfbbfdb3d761323127a67d7d765abe2f77d7b21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f75e9f629ef54a0845b43889d8ab9dd6e280dd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/922bccdb1796a9e7b989f2bc6d9ada7b499a4329","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96fc3da6184af5687e153d420cd7dcdeefdd2f9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e84aaf23ca82753d765bf84d05295d9d9c5fed29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49487","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.897","lastModified":"2025-02-26T07:01:24.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: intel: fix possible null-ptr-deref in ebu_nand_probe()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/daa5166450b447415aeeaac0199e445bae7bd0f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf66aefd685fd46500b9917333e1b1e118276dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5b1e419cdb6dd8709eb05ed34039a3ded8e6003","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8e262eb7575a4a2412f30f7a1b293875aceba80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49488","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:24.990","lastModified":"2025-02-26T07:01:24.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/mdp5: Return error code in mdp5_mixer_release when deadlock is detected\n\nThere is a possibility for mdp5_get_global_state to return\n-EDEADLK when acquiring the modeset lock, but currently global_state in\nmdp5_mixer_release doesn't check for if an error is returned.\n\nTo avoid a NULL dereference error, let's have mdp5_mixer_release\ncheck if an error is returned and propagate that error.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/485181\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09bdeedc1fc53e64b8282e1de67752c69e43bdba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a5d1474026ea4f1a6f931075ca2adb884af39cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22d8424913b1348c6324916745fadaeea5273f0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46e5ce63924a96af452c4fc5ee0bb3b241e1b9f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47e393061049aff6818d1b9fdca7351411a23fc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/883f1d52a57bf51e1d7a80c432345e2c6222477e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca75f6f7c6f89365e40f10f641b15981b1f07c31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49489","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.083","lastModified":"2025-02-26T07:01:25.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/disp\/dpu1: set vbif hw config to NULL to avoid use after memory free during pm runtime resume\n\nBUG: Unable to handle kernel paging request at virtual address 006b6b6b6b6b6be3\n\nCall trace:\n  dpu_vbif_init_memtypes+0x40\/0xb8\n  dpu_runtime_resume+0xcc\/0x1c0\n  pm_generic_runtime_resume+0x30\/0x44\n  __genpd_runtime_resume+0x68\/0x7c\n  genpd_runtime_resume+0x134\/0x258\n  __rpm_callback+0x98\/0x138\n  rpm_callback+0x30\/0x88\n  rpm_resume+0x36c\/0x49c\n  __pm_runtime_resume+0x80\/0xb0\n  dpu_core_irq_uninstall+0x30\/0xb0\n  dpu_irq_uninstall+0x18\/0x24\n  msm_drm_uninit+0xd8\/0x16c\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/483255\/\n[DB: fixed Fixes tag]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/134760263f6441741db0b2970e7face6b34b6d1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b0adf5cbf3b74721e4e4c4e0cadc91b8df8bcc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97ac682b6f7d36be5d934f86c9911066540a68f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa4cb188988dc6f1b3f4917d4dbc452150a5d871","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef10d0c68e8608848cd58fca2589685718426607","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef4bdaac7cb5416f236613ed9337ff0ea8ee329b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa5186b279ecf44b14fb435540d2065be91cb1ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49490","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.183","lastModified":"2025-02-26T07:01:25.183","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/mdp5: Return error code in mdp5_pipe_release when deadlock is detected\n\nmdp5_get_global_state runs the risk of hitting a -EDEADLK when acquiring\nthe modeset lock, but currently mdp5_pipe_release doesn't check for if\nan error is returned. Because of this, there is a possibility of\nmdp5_pipe_release hitting a NULL dereference error.\n\nTo avoid this, let's have mdp5_pipe_release check if\nmdp5_get_global_state returns an error and propogate that error.\n\nChanges since v1:\n- Separated declaration and initialization of *new_state to avoid\n  compiler warning\n- Fixed some spelling mistakes in commit message\n\nChanges since v2:\n- Return 0 in case where hwpipe is NULL as this is considered normal\n  behavior\n- Added 2nd patch in series to fix a similar NULL dereference issue in\n  mdp5_mixer_release\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/485179\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04bef5f1ba8ea6d7c1c8f5f65e0395c62db59cb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19964dfb39bda4d7716a71009488f0668ecbcf52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33dc5aac46e0fad8f5eb193e5906ed0eb6b66ceb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49dc28b4b2e28ef7564e355c91487996c1cbebd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/776f5c58bfe16cf322d71eeed3c5dda1eeac7e6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2aa2c4efe93e2580d6a8774b04fe2b99756a322","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d59be579fa932c46b908f37509f319cbd4ca9a68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49491","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.280","lastModified":"2025-02-26T07:01:25.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/rockchip: vop: fix possible null-ptr-deref in vop_bind()\n\nIt will cause null-ptr-deref in resource_size(), if platform_get_resource()\nreturns NULL, move calling resource_size() after devm_ioremap_resource() that\nwill check 'res' to avoid null-ptr-deref."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3451852312303d54a003c73bd0ae39cebb960bd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/452922955df215a417c80d09dab72bbc667a1861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ff986e057bf28e2f7690dad410768b2270f9453","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/769c53bb6116d0eaec0f1fe4ec4b27a74465cad1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9b4599665e437de8a1152799c34841b799a2e1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b54926bd558d97c888c3d2d87886f3c159d3254a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecfa52654d0c9c333c1fe1611f47105f6bce9591","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8c242908ad15bbd604d3bcb54961b7d454c43f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcd6a886443730c39170b8383411e52118aec0a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49492","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.410","lastModified":"2025-02-26T07:01:25.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-pci: fix a NULL pointer dereference in nvme_alloc_admin_tags\n\nIn nvme_alloc_admin_tags, the admin_q can be set to an error (typically\n-ENOMEM) if the blk_mq_init_queue call fails to set up the queue, which\nis checked immediately after the call. However, when we return the error\nmessage up the stack, to nvme_reset_work the error takes us to\nnvme_remove_dead_ctrl()\n  nvme_dev_disable()\n   nvme_suspend_queue(&dev->queues[0]).\n\nHere, we only check that the admin_q is non-NULL, rather than not\nan error or NULL, and begin quiescing a queue that never existed, leading\nto bad \/ NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/54a4c1e47d1b2585e74920399455bd9abbfb2bd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a28556082d1fbcbc599baf1c24252dfc73efefc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8321b17789f614414206af07e17ce4751c95dc76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8da2b7bdb47e94bbc4062a3978c708926bcb022c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/906c81dba8ee8057523859b5e1a2479e9fd34860","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e649471b396fa0139d53919354ce1eace9b9a24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af98940dd33c9f9e1beb4f71c0a39260100e2a65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da42761181627e9bdc37d18368b827948a583929","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f76729662650cd7bc8f8194e057af381370349a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49493","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.520","lastModified":"2025-02-26T07:01:25.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: rt5645: Fix errorenous cleanup order\n\nThere is a logic error when removing rt5645 device as the function\nrt5645_i2c_remove() first cancel the &rt5645->jack_detect_work and\ndelete the &rt5645->btn_check_timer latter. However, since the timer\nhandler rt5645_btn_check_callback() will re-queue the jack_detect_work,\nthis cleanup order is buggy.\n\nThat is, once the del_timer_sync in rt5645_i2c_remove is concurrently\nrun with the rt5645_btn_check_callback, the canceled jack_detect_work\nwill be rescheduled again, leading to possible use-after-free.\n\nThis patch fix the issue by placing the del_timer_sync function before\nthe cancel_delayed_work_sync."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/061a6159cea583f1155f67d1915917a6b9282662","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0941150100173d4eaf3fe08ff4b16740e7c3026f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a5a3dfd9f172dcb115072f0aea5e27d3083c20e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/236d29c5857f02e0a53fdf15d3dce1536c4322ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2def44d3aec59e38d2701c568d65540783f90f2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/453f0920ffc1a28e28ddb9c3cd5562472b2895b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d801e807536a9a9c2146c5f4a5836f154517ed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88c09e4812d72c3153afc8e5a45ecac2d0eae3ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abe7554da62cb489712a54de69ef5665c250e564","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49494","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.613","lastModified":"2025-02-26T07:01:25.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: cadence: fix possible null-ptr-deref in cadence_nand_dt_probe()\n\nIt will cause null-ptr-deref when using 'res', if platform_get_resource()\nreturns NULL, so move using 'res' after devm_ioremap_resource() that\nwill check it to avoid null-ptr-deref.\nAnd use devm_platform_get_and_ioremap_resource() to simplify code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/069af5e27c1b0f7677ef76d8d3102e503ca4f80b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0cfee868b89ffa945f3d535ee5c985cb40c5a0f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13b60d3dc84b47307669edb66b633b18466014b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81f1ddffdc22ca5789e33b9d4712914e302090c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a28ed09dafee20da51eb26452950839633afd824","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49495","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.707","lastModified":"2025-02-26T07:01:25.707","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/hdmi: check return value after calling platform_get_resource_byname()\n\nIt will cause null-ptr-deref if platform_get_resource_byname() returns NULL,\nwe need check the return value.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/482992\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0978fcce91b90b561b8c82e7c492ba9fc8440eef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b3ed7547b1a052209da6c4ab886ffe0eed88c42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cd66a8016b872a153bf892fe4258cbc0dacf5b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6369dda4a2209142ab819f01d3d2076d81e3ebdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cb1ee33efccb8b107ee04b7b3441820de3fd2da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f5495a5c51c1d11c6ffc13aa2befffec0c2651a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a36e506711548df923ceb7ec9f6001375be799a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1bfacf0daf25a5fc7d667399d6ff2dffda84cd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9cb951d11a4ace4de5c50b1178ad211de17079e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49496","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.800","lastModified":"2025-02-26T07:01:25.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: prevent kernel crash when rmmod mtk-vcodec-dec.ko\n\nIf the driver support subdev mode, the parameter \"dev->pm.dev\" will be\nNULL in mtk_vcodec_dec_remove. Kernel will crash when try to rmmod\nmtk-vcodec-dec.ko.\n\n[ 4380.702726] pc : do_raw_spin_trylock+0x4\/0x80\n[ 4380.707075] lr : _raw_spin_lock_irq+0x90\/0x14c\n[ 4380.711509] sp : ffff80000819bc10\n[ 4380.714811] x29: ffff80000819bc10 x28: ffff3600c03e4000 x27: 0000000000000000\n[ 4380.721934] x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n[ 4380.729057] x23: ffff3600c0f34930 x22: ffffd5e923549000 x21: 0000000000000220\n[ 4380.736179] x20: 0000000000000208 x19: ffffd5e9213e8ebc x18: 0000000000000020\n[ 4380.743298] x17: 0000002000000000 x16: ffffd5e9213e8e90 x15: 696c346f65646976\n[ 4380.750420] x14: 0000000000000000 x13: 0000000000000001 x12: 0000000000000040\n[ 4380.757542] x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n[ 4380.764664] x8 : 0000000000000000 x7 : ffff3600c7273ae8 x6 : ffffd5e9213e8ebc\n[ 4380.771786] x5 : 0000000000000000 x4 : 0000000000000001 x3 : 0000000000000000\n[ 4380.778908] x2 : 0000000000000000 x1 : ffff3600c03e4000 x0 : 0000000000000208\n[ 4380.786031] Call trace:\n[ 4380.788465]  do_raw_spin_trylock+0x4\/0x80\n[ 4380.792462]  __pm_runtime_disable+0x2c\/0x1b0\n[ 4380.796723]  mtk_vcodec_dec_remove+0x5c\/0xa0 [mtk_vcodec_dec]\n[ 4380.802466]  platform_remove+0x2c\/0x60\n[ 4380.806204]  __device_release_driver+0x194\/0x250\n[ 4380.810810]  driver_detach+0xc8\/0x15c\n[ 4380.814462]  bus_remove_driver+0x5c\/0xb0\n[ 4380.818375]  driver_unregister+0x34\/0x64\n[ 4380.822288]  platform_driver_unregister+0x18\/0x24\n[ 4380.826979]  mtk_vcodec_dec_driver_exit+0x1c\/0x888 [mtk_vcodec_dec]\n[ 4380.833240]  __arm64_sys_delete_module+0x190\/0x224\n[ 4380.838020]  invoke_syscall+0x48\/0x114\n[ 4380.841760]  el0_svc_common.constprop.0+0x60\/0x11c\n[ 4380.846540]  do_el0_svc+0x28\/0x90\n[ 4380.849844]  el0_svc+0x4c\/0x100\n[ 4380.852975]  el0t_64_sync_handler+0xec\/0xf0\n[ 4380.857148]  el0t_64_sync+0x190\/0x194\n[ 4380.860801] Code: 94431515 17ffffca d503201f d503245f (b9400004)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fa37b00dc55a061a3eb82e378849862b4aeca9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c10c0086db688c95bb4e0e378e523818dff1551d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49497","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.893","lastModified":"2025-02-26T07:01:25.893","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: remove two BUG() from skb_checksum_help()\n\nI have a syzbot report that managed to get a crash in skb_checksum_help()\n\nIf syzbot can trigger these BUG(), it makes sense to replace\nthem with more friendly WARN_ON_ONCE() since skb_checksum_help()\ncan instead return an error code.\n\nNote that syzbot will still crash there, until real bug is fixed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/312c43e98ed190bd8fd7a71a0addf9539d5b8ab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6320ae1b5876c30bf98203b6a5abe8b5c45e6a04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1320c9a4d30ff54b824a8ad6036e0b5fb4c5e73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5281245f3502e960cb6b89348767b935379cee3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7ea0d9df2a6265b2b180d17ebc64b38105968fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49498","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:25.987","lastModified":"2025-02-26T07:01:25.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Check for null pointer of pointer substream before dereferencing it\n\nPointer substream is being dereferenced on the assignment of pointer card\nbefore substream is being null checked with the macro PCM_RUNTIME_CHECK.\nAlthough PCM_RUNTIME_CHECK calls BUG_ON, it still is useful to perform the\nthe pointer check before card is assigned."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/011b559be832194f992f73d6c0d5485f5925a10b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f2e28857be1e5c7db39bbc221332215fc5467e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7784d22f81a29df2ec57ca90d54f93a35cbcd1a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2421a196cb0911ea95aec1050a0b830464c8fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b41ef7ad9238c22aa2e142f5ce4ce1a1a0d48123","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2c68c52898f623fe84518da4606538d193b0cca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49499","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.077","lastModified":"2025-02-26T07:01:26.077","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm: Fix null pointer dereferences without iommu\n\nCheck if 'aspace' is set before using it as it will stay null without\nIOMMU, such as on msm8974."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36a1d1bda77e1851bddfa9cf4e8ada94476dbaff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f09937e80f9bc792965476c9a528f26c8fdc9179","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49500","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.163","lastModified":"2025-02-26T07:01:26.163","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwl1251: dynamically allocate memory used for DMA\n\nWith introduction of vmap'ed stacks, stack parameters can no\nlonger be used for DMA and now leads to kernel panic.\n\nIt happens at several places for the wl1251 (e.g. when\naccessed through SDIO) making it unuseable on e.g. the\nOpenPandora.\n\nWe solve this by allocating temporary buffers or use wl1251_read32().\n\nTested on v5.18-rc5 with OpenPandora."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/454744754cbf2c21b3fc7344e46e10bee2768094","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da03bbfbf5acd1ab0b074617e865ad1e8a5779ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49501","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.257","lastModified":"2025-02-26T07:01:26.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: Run unregister_netdev() before unbind() again\n\nCommit 2c9d6c2b871d (\"usbnet: run unbind() before unregister_netdev()\")\nsought to fix a use-after-free on disconnect of USB Ethernet adapters.\n\nIt turns out that a different fix is necessary to address the issue:\nhttps:\/\/lore.kernel.org\/netdev\/18b3541e5372bc9b9fc733d422f4e698c089077c.1650177997.git.lukas@wunner.de\/\n\nSo the commit was not necessary.\n\nThe commit made binding and unbinding of USB Ethernet asymmetrical:\nBefore, usbnet_probe() first invoked the ->bind() callback and then\nregister_netdev().  usbnet_disconnect() mirrored that by first invoking\nunregister_netdev() and then ->unbind().\n\nSince the commit, the order in usbnet_disconnect() is reversed and no\nlonger mirrors usbnet_probe().\n\nOne consequence is that a PHY disconnected (and stopped) in ->unbind()\nis afterwards stopped once more by unregister_netdev() as it closes the\nnetdev before unregistering.  That necessitates a contortion in ->stop()\nbecause the PHY may only be stopped if it hasn't already been\ndisconnected.\n\nReverting the commit allows making the call to phy_stop() unconditional\nin ->stop()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6d5deb242874d924beccf7eb3cef04c1c3b0da79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/969a1b3ea3cb7d58a16fe12fd1b04bfc0ea40509","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1408f6b4dd78fb1b9e26bcf64477984e5f85409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbda837107f9bd4ec658d2aa88c6856dba606f06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49502","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.353","lastModified":"2025-02-26T07:01:26.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: rga: fix possible memory leak in rga_probe\n\nrga->m2m_dev needs to be freed when rga_probe fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1cdc768468c25d6b10ab83ec1efd4a8554532d69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ddc89437ccefa18279918c19a61fd81527f40b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a71eb6025305192e646040cd76ccacb5bd48a1b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7bbca4d08471bc8404a946bab1aa017dd05199b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeb4819e94aa69767b9e5591e70c63e8b7c5786a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49503","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.447","lastModified":"2025-02-26T07:01:26.447","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath9k_htc: fix potential out of bounds access with invalid rxstatus->rs_keyix\n\nThe \"rxstatus->rs_keyix\" eventually gets passed to test_bit() so we need to\nensure that it is within the bitmap.\n\ndrivers\/net\/wireless\/ath\/ath9k\/common.c:46 ath9k_cmn_rx_accept()\nerror: passing untrusted data 'rx_stats->rs_keyix' to 'test_bit()'"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bcb528402cd5e1a6e1833e956fd58a12d509e8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2326d398ccd41ba6d93b8346532dfa432ab00fee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2dc509305cf956381532792cb8dceef2b1504765","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dad3fed5672828c7fb0465cb66a3d9a70952fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/461e4c1f199076275f16bf6f3d3e42c6b6c79f33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bdcf32c965c27f55ccc4ee71c1927131115b0bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f6defe0fabc79f29603c6fa3c80e4fe0456a3e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a048e0c3caa852397b7b50d4c82a0415c05f7ac3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eda518db7db16c360bc84379d90675650daa3048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49504","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.543","lastModified":"2025-02-26T07:01:26.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Inhibit aborts if external loopback plug is inserted\n\nAfter running a short external loopback test, when the external loopback is\nremoved and a normal cable inserted that is directly connected to a target\ndevice, the system oops in the llpfc_set_rrq_active() routine.\n\nWhen the loopback was inserted an FLOGI was transmit. As we're looped back,\nwe receive the FLOGI request. The FLOGI is ABTS'd as we recognize the same\nwppn thus understand it's a loopback. However, as the ABTS sends address\ninformation the port is not set to (fffffe), the ABTS is dropped on the\nwire. A short 1 frame loopback test is run and completes before the ABTS\ntimes out. The looback is unplugged and the new cable plugged in, and the\nan FLOGI to the new device occurs and completes. Due to a mixup in ref\ncounting the completion of the new FLOGI releases the fabric ndlp. Then the\noriginal ABTS completes and references the released ndlp generating the\noops.\n\nCorrect by no-op'ing the ABTS when in loopback mode (it will be dropped\nanyway). Added a flag to track the mode to recognize when it should be\nno-op'd."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a1516930cb605caee3bc7b4f3b7994b88c0b8505","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ead76d4c09b89f4c8d632648026a476a5a34fde8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49505","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.633","lastModified":"2025-02-26T07:01:26.633","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: NULL out the dev->rfkill to prevent UAF\n\nCommit 3e3b5dfcd16a (\"NFC: reorder the logic in nfc_{un,}register_device\")\nassumes the device_is_registered() in function nfc_dev_up() will help\nto check when the rfkill is unregistered. However, this check only\ntake effect when device_del(&dev->dev) is done in nfc_unregister_device().\nHence, the rfkill object is still possible be dereferenced.\n\nThe crash trace in latest kernel (5.18-rc2):\n\n[   68.760105] ==================================================================\n[   68.760330] BUG: KASAN: use-after-free in __lock_acquire+0x3ec1\/0x6750\n[   68.760756] Read of size 8 at addr ffff888009c93018 by task fuzz\/313\n[   68.760756]\n[   68.760756] CPU: 0 PID: 313 Comm: fuzz Not tainted 5.18.0-rc2 #4\n[   68.760756] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04\/01\/2014\n[   68.760756] Call Trace:\n[   68.760756]  <TASK>\n[   68.760756]  dump_stack_lvl+0x57\/0x7d\n[   68.760756]  print_report.cold+0x5e\/0x5db\n[   68.760756]  ? __lock_acquire+0x3ec1\/0x6750\n[   68.760756]  kasan_report+0xbe\/0x1c0\n[   68.760756]  ? __lock_acquire+0x3ec1\/0x6750\n[   68.760756]  __lock_acquire+0x3ec1\/0x6750\n[   68.760756]  ? lockdep_hardirqs_on_prepare+0x410\/0x410\n[   68.760756]  ? register_lock_class+0x18d0\/0x18d0\n[   68.760756]  lock_acquire+0x1ac\/0x4f0\n[   68.760756]  ? rfkill_blocked+0xe\/0x60\n[   68.760756]  ? lockdep_hardirqs_on_prepare+0x410\/0x410\n[   68.760756]  ? mutex_lock_io_nested+0x12c0\/0x12c0\n[   68.760756]  ? nla_get_range_signed+0x540\/0x540\n[   68.760756]  ? _raw_spin_lock_irqsave+0x4e\/0x50\n[   68.760756]  _raw_spin_lock_irqsave+0x39\/0x50\n[   68.760756]  ? rfkill_blocked+0xe\/0x60\n[   68.760756]  rfkill_blocked+0xe\/0x60\n[   68.760756]  nfc_dev_up+0x84\/0x260\n[   68.760756]  nfc_genl_dev_up+0x90\/0xe0\n[   68.760756]  genl_family_rcv_msg_doit+0x1f4\/0x2f0\n[   68.760756]  ? genl_family_rcv_msg_attrs_parse.constprop.0+0x230\/0x230\n[   68.760756]  ? security_capable+0x51\/0x90\n[   68.760756]  genl_rcv_msg+0x280\/0x500\n[   68.760756]  ? genl_get_cmd+0x3c0\/0x3c0\n[   68.760756]  ? lock_acquire+0x1ac\/0x4f0\n[   68.760756]  ? nfc_genl_dev_down+0xe0\/0xe0\n[   68.760756]  ? lockdep_hardirqs_on_prepare+0x410\/0x410\n[   68.760756]  netlink_rcv_skb+0x11b\/0x340\n[   68.760756]  ? genl_get_cmd+0x3c0\/0x3c0\n[   68.760756]  ? netlink_ack+0x9c0\/0x9c0\n[   68.760756]  ? netlink_deliver_tap+0x136\/0xb00\n[   68.760756]  genl_rcv+0x1f\/0x30\n[   68.760756]  netlink_unicast+0x430\/0x710\n[   68.760756]  ? memset+0x20\/0x40\n[   68.760756]  ? netlink_attachskb+0x740\/0x740\n[   68.760756]  ? __build_skb_around+0x1f4\/0x2a0\n[   68.760756]  netlink_sendmsg+0x75d\/0xc00\n[   68.760756]  ? netlink_unicast+0x710\/0x710\n[   68.760756]  ? netlink_unicast+0x710\/0x710\n[   68.760756]  sock_sendmsg+0xdf\/0x110\n[   68.760756]  __sys_sendto+0x19e\/0x270\n[   68.760756]  ? __ia32_sys_getpeername+0xa0\/0xa0\n[   68.760756]  ? fd_install+0x178\/0x4c0\n[   68.760756]  ? fd_install+0x195\/0x4c0\n[   68.760756]  ? kernel_fpu_begin_mask+0x1c0\/0x1c0\n[   68.760756]  __x64_sys_sendto+0xd8\/0x1b0\n[   68.760756]  ? lockdep_hardirqs_on+0xbf\/0x130\n[   68.760756]  ? syscall_enter_from_user_mode+0x1d\/0x50\n[   68.760756]  do_syscall_64+0x3b\/0x90\n[   68.760756]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[   68.760756] RIP: 0033:0x7f67fb50e6b3\n...\n[   68.760756] RSP: 002b:00007f67fa91fe90 EFLAGS: 00000293 ORIG_RAX: 000000000000002c\n[   68.760756] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f67fb50e6b3\n[   68.760756] RDX: 000000000000001c RSI: 0000559354603090 RDI: 0000000000000003\n[   68.760756] RBP: 00007f67fa91ff00 R08: 00007f67fa91fedc R09: 000000000000000c\n[   68.760756] R10: 0000000000000000 R11: 0000000000000293 R12: 00007ffe824d496e\n[   68.760756] R13: 00007ffe824d496f R14: 00007f67fa120000 R15: 0000000000000003\n\n[   68.760756]  <\/TASK>\n[   68.760756]\n[   68.760756] Allocated by task 279:\n[   68.760756]  kasan_save_stack+0x1e\/0x40\n[\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1632be63862f183cd5cf1cc094e698e6ec005dfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b0e81416a24d6e9b8c2341e22e8bf48f8b8bfc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a1b5110c95e4d49c8c3906270dfcde680a5a7be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a68938f43b7c2663e4c90bb9bbe29ac8b9a42a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f5d71930f41be78557f9714393179025baacd65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6abfaca8711803d0d7cc8c0fac1070a88509d463","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8e03bcad52dc9afabf650fdbad84f739cec9efa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f81270125b50532624400063281e6611ecd61ddf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbf9c4c714d3cdeb98b6a18e4d057f931cad1d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49506","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.737","lastModified":"2025-02-26T07:01:26.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/mediatek: Add vblank register\/unregister callback functions\n\nWe encountered a kernel panic issue that callback data will be NULL when\nit's using in ovl irq handler. There is a timing issue between\nmtk_disp_ovl_irq_handler() and mtk_ovl_disable_vblank().\n\nTo resolve this issue, we use the flow to register\/unregister vblank cb:\n- Register callback function and callback data when crtc creates.\n- Unregister callback function and callback data when crtc destroies.\n\nWith this solution, we can assure callback data will not be NULL when\nvblank is disable."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a4027b5971fe2a94e32754f007d9d3c12c68ad1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a265d9838bc3c63579002d55c2b2c655c4f8f26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a2dbdeccef6de47565638abdf3c25f41cdffc37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b74d921b900b6ce38c6247c0a1c86be9f3746493","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49507","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.830","lastModified":"2025-02-26T07:01:26.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: da9121: Fix uninit-value in da9121_assign_chip_model()\n\nKASAN report slab-out-of-bounds in __regmap_init as follows:\n\nBUG: KASAN: slab-out-of-bounds in __regmap_init drivers\/base\/regmap\/regmap.c:841\nRead of size 1 at addr ffff88803678cdf1 by task xrun\/9137\n\nCPU: 0 PID: 9137 Comm: xrun Tainted: G        W         5.18.0-rc2\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0xe8\/0x15a lib\/dump_stack.c:88\n print_report.cold+0xcd\/0x69b mm\/kasan\/report.c:313\n kasan_report+0x8e\/0xc0 mm\/kasan\/report.c:491\n __regmap_init+0x4540\/0x4ba0 drivers\/base\/regmap\/regmap.c:841\n __devm_regmap_init+0x7a\/0x100 drivers\/base\/regmap\/regmap.c:1266\n __devm_regmap_init_i2c+0x65\/0x80 drivers\/base\/regmap\/regmap-i2c.c:394\n da9121_i2c_probe+0x386\/0x6d1 drivers\/regulator\/da9121-regulator.c:1039\n i2c_device_probe+0x959\/0xac0 drivers\/i2c\/i2c-core-base.c:563\n\nThis happend when da9121 device is probe by da9121_i2c_id, but with\ninvalid dts. Thus, chip->subvariant_id is set to -EINVAL, and later\nda9121_assign_chip_model() will access 'regmap' without init it.\n\nFix it by return -EINVAL from da9121_assign_chip_model() if\n'chip->subvariant_id' is invalid."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60f21eda69f1b5727a97d2077da766eb27fcc21f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7da64c7c82c9b29b628a62c88a8c2fb06990563d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bab76514aca36bc513224525d5598da676938218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be96baa0c79588084e0d7a4fa21c574cec9a57f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49508","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:26.923","lastModified":"2025-02-26T07:01:26.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: elan: Fix potential double free in elan_input_configured\n\n'input' is a managed resource allocated with devm_input_allocate_device(),\nso there is no need to call input_free_device() explicitly or\nthere will be a double free.\n\nAccording to the doc of devm_input_allocate_device():\n * Managed input devices do not need to be explicitly unregistered or\n * freed as it will be done automatically when owner device unbinds from\n * its driver (or binding fails)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1af20714fedad238362571620be0bd690ded05b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24f9dfdaece9bd75bb8dbfdba83eddeefdf7dc47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5291451851feeb66fd4bf0826710f482f3b1ab38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d0726725c7c560495f5ff364862a2cefea542e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bb1716507ebf12d50bbf181764481de3b6bc7fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c92ec22a991778a096342cf1a917ae36c5c86a90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1d4f19a796551edc6679a681ea1756b8c578c08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49509","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.017","lastModified":"2025-02-26T07:01:27.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: max9286: fix kernel oops when removing module\n\nWhen removing the max9286 module we get a kernel oops:\n\nUnable to handle kernel paging request at virtual address 000000aa00000094\nMem abort info:\n  ESR = 0x96000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004\n  CM = 0, WnR = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=0000000880d85000\n[000000aa00000094] pgd=0000000000000000, p4d=0000000000000000\nInternal error: Oops: 96000004 [#1] PREEMPT SMP\nModules linked in: fsl_jr_uio caam_jr rng_core libdes caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine max9271 authenc crct10dif_ce mxc_jpeg_encdec\nCPU: 2 PID: 713 Comm: rmmod Tainted: G         C        5.15.5-00057-gaebcd29c8ed7-dirty #5\nHardware name: Freescale i.MX8QXP MEK (DT)\npstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : i2c_mux_del_adapters+0x24\/0xf0\nlr : max9286_remove+0x28\/0xd0 [max9286]\nsp : ffff800013a9bbf0\nx29: ffff800013a9bbf0 x28: ffff00080b6da940 x27: 0000000000000000\nx26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\nx23: ffff000801a5b970 x22: ffff0008048b0890 x21: ffff800009297000\nx20: ffff0008048b0f70 x19: 000000aa00000064 x18: 0000000000000000\nx17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\nx14: 0000000000000014 x13: 0000000000000000 x12: ffff000802da49e8\nx11: ffff000802051918 x10: ffff000802da4920 x9 : ffff000800030098\nx8 : 0101010101010101 x7 : 7f7f7f7f7f7f7f7f x6 : fefefeff6364626d\nx5 : 8080808000000000 x4 : 0000000000000000 x3 : 0000000000000000\nx2 : ffffffffffffffff x1 : ffff00080b6da940 x0 : 0000000000000000\nCall trace:\n i2c_mux_del_adapters+0x24\/0xf0\n max9286_remove+0x28\/0xd0 [max9286]\n i2c_device_remove+0x40\/0x110\n __device_release_driver+0x188\/0x234\n driver_detach+0xc4\/0x150\n bus_remove_driver+0x60\/0xe0\n driver_unregister+0x34\/0x64\n i2c_del_driver+0x58\/0xa0\n max9286_i2c_driver_exit+0x1c\/0x490 [max9286]\n __arm64_sys_delete_module+0x194\/0x260\n invoke_syscall+0x48\/0x114\n el0_svc_common.constprop.0+0xd4\/0xfc\n do_el0_svc+0x2c\/0x94\n el0_svc+0x28\/0x80\n el0t_64_sync_handler+0xa8\/0x130\n el0t_64_sync+0x1a0\/0x1a4\n\nThe Oops happens because the I2C client data does not point to\nmax9286_priv anymore but to v4l2_subdev. The change happened in\nmax9286_init() which calls v4l2_i2c_subdev_init() later on...\n\nBesides fixing the max9286_remove() function, remove the call to\ni2c_set_clientdata() in max9286_probe(), to avoid confusion, and make\nthe necessary changes to max9286_init() so that it doesn't have to use\ni2c_get_clientdata() in order to fetch the pointer to priv."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/365ab7ebc24eebb42b9e020aeb440d51af8960cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/579c77595dbbdfe4f2edf335899f86ac51eca4e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9dd783274c89c21a038d967b52a858a297e767f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4ec75df70575cdf33d9638c7844e729bfe6ce24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49510","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.107","lastModified":"2025-02-26T07:01:27.107","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/omap: fix NULL but dereferenced coccicheck error\n\nFix the following coccicheck warning:\n.\/drivers\/gpu\/drm\/omapdrm\/omap_overlay.c:89:22-25: ERROR: r_ovl is NULL\nbut dereferenced.\n\nHere should be ovl->idx rather than r_ovl->idx."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d9a75eab594ca508a440db7c73064498d26687","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f2a3970c969d0d8d7289a4c65edcedafc16fd92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2507be660310bb9bcca918f81f49b8bba07e462","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49511","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.193","lastModified":"2025-02-26T07:01:27.193","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: defio: fix the pagelist corruption\n\nEasily hit the below list corruption:\n==\nlist_add corruption. prev->next should be next (ffffffffc0ceb090), but\nwas ffffec604507edc8. (prev=ffffec604507edc8).\nWARNING: CPU: 65 PID: 3959 at lib\/list_debug.c:26\n__list_add_valid+0x53\/0x80\nCPU: 65 PID: 3959 Comm: fbdev Tainted: G     U\nRIP: 0010:__list_add_valid+0x53\/0x80\nCall Trace:\n <TASK>\n fb_deferred_io_mkwrite+0xea\/0x150\n do_page_mkwrite+0x57\/0xc0\n do_wp_page+0x278\/0x2f0\n __handle_mm_fault+0xdc2\/0x1590\n handle_mm_fault+0xdd\/0x2c0\n do_user_addr_fault+0x1d3\/0x650\n exc_page_fault+0x77\/0x180\n ? asm_exc_page_fault+0x8\/0x30\n asm_exc_page_fault+0x1e\/0x30\nRIP: 0033:0x7fd98fc8fad1\n==\n\nFigure out the race happens when one process is adding &page->lru into\nthe pagelist tail in fb_deferred_io_mkwrite(), another process is\nre-initializing the same &page->lru in fb_deferred_io_fault(), which is\nnot protected by the lock.\n\nThis fix is to init all the page lists one time during initialization,\nit not only fixes the list corruption, but also avoids INIT_LIST_HEAD()\nredundantly.\n\nV2: change \"int i\" to \"unsigned int i\" (Geert Uytterhoeven)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6a9ae2fe887042f76fd3d334349e64e8ab3c55a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/856082f021a28221db2c32bd0531614a8382be67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e79b2b2aadeffe1db54a6b569b9b621575c3eb07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49512","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.287","lastModified":"2025-02-26T07:01:27.287","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: denali: Use managed device resources\n\nAll of the resources used by this driver has managed interfaces, so use\nthem. Otherwise we will get the following splat:\n\n[    4.472703] denali-nand-pci 0000:00:05.0: timeout while waiting for irq 0x1000\n[    4.474071] denali-nand-pci: probe of 0000:00:05.0 failed with error -5\n[    4.473538] nand: No NAND device found\n[    4.474068] BUG: unable to handle page fault for address: ffffc90005000410\n[    4.475169] #PF: supervisor write access in kernel mode\n[    4.475579] #PF: error_code(0x0002) - not-present page\n[    4.478362] RIP: 0010:iowrite32+0x9\/0x50\n[    4.486068] Call Trace:\n[    4.486269]  <IRQ>\n[    4.486443]  denali_isr+0x15b\/0x300 [denali]\n[    4.486788]  ? denali_direct_write+0x50\/0x50 [denali]\n[    4.487189]  __handle_irq_event_percpu+0x161\/0x3b0\n[    4.487571]  handle_irq_event+0x7d\/0x1b0\n[    4.487884]  handle_fasteoi_irq+0x2b0\/0x770\n[    4.488219]  __common_interrupt+0xc8\/0x1b0\n[    4.488549]  common_interrupt+0x9a\/0xc0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3830dbdfb9a4aec680e43ed80b9f23db7a88eac9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a745b51cddafade99aaea1b93aad31e9614e230","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c68daf4a368cd9e63ae5a2145c9e4a6f838c166","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87149cf9186201a63f0e0b93d9fa93d480bcb771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efea1dd176edd17c8252051b7de6957f06efc394","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49513","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.380","lastModified":"2025-02-26T07:01:27.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: governor: Use kobject release() method to free dbs_data\n\nThe struct dbs_data embeds a struct gov_attr_set and\nthe struct gov_attr_set embeds a kobject. Since every kobject must have\na release() method and we can't use kfree() to free it directly,\nso introduce cpufreq_dbs_data_release() to release the dbs_data via\nthe kobject::release() method. This fixes the calltrace like below:\n\n  ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0\/0x34\n  WARNING: CPU: 12 PID: 810 at lib\/debugobjects.c:505 debug_print_object+0xb8\/0x100\n  Modules linked in:\n  CPU: 12 PID: 810 Comm: sh Not tainted 5.16.0-next-20220120-yocto-standard+ #536\n  Hardware name: Marvell OcteonTX CN96XX board (DT)\n  pstate: 60400009 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : debug_print_object+0xb8\/0x100\n  lr : debug_print_object+0xb8\/0x100\n  sp : ffff80001dfcf9a0\n  x29: ffff80001dfcf9a0 x28: 0000000000000001 x27: ffff0001464f0000\n  x26: 0000000000000000 x25: ffff8000090e3f00 x24: ffff80000af60210\n  x23: ffff8000094dfb78 x22: ffff8000090e3f00 x21: ffff0001080b7118\n  x20: ffff80000aeb2430 x19: ffff800009e8f5e0 x18: 0000000000000000\n  x17: 0000000000000002 x16: 00004d62e58be040 x15: 013590470523aff8\n  x14: ffff8000090e1828 x13: 0000000001359047 x12: 00000000f5257d14\n  x11: 0000000000040591 x10: 0000000066c1ffea x9 : ffff8000080d15e0\n  x8 : ffff80000a1765a8 x7 : 0000000000000000 x6 : 0000000000000001\n  x5 : ffff800009e8c000 x4 : ffff800009e8c760 x3 : 0000000000000000\n  x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff0001474ed040\n  Call trace:\n   debug_print_object+0xb8\/0x100\n   __debug_check_no_obj_freed+0x1d0\/0x25c\n   debug_check_no_obj_freed+0x24\/0xa0\n   kfree+0x11c\/0x440\n   cpufreq_dbs_governor_exit+0xa8\/0xac\n   cpufreq_exit_governor+0x44\/0x90\n   cpufreq_set_policy+0x29c\/0x570\n   store_scaling_governor+0x110\/0x154\n   store+0xb0\/0xe0\n   sysfs_kf_write+0x58\/0x84\n   kernfs_fop_write_iter+0x12c\/0x1c0\n   new_sync_write+0xf0\/0x18c\n   vfs_write+0x1cc\/0x220\n   ksys_write+0x74\/0x100\n   __arm64_sys_write+0x28\/0x3c\n   invoke_syscall.constprop.0+0x58\/0xf0\n   do_el0_svc+0x70\/0x170\n   el0_svc+0x54\/0x190\n   el0t_64_sync_handler+0xa4\/0x130\n   el0t_64_sync+0x1a0\/0x1a4\n  irq event stamp: 189006\n  hardirqs last  enabled at (189005): [<ffff8000080849d0>] finish_task_switch.isra.0+0xe0\/0x2c0\n  hardirqs last disabled at (189006): [<ffff8000090667a4>] el1_dbg+0x24\/0xa0\n  softirqs last  enabled at (188966): [<ffff8000080106d0>] __do_softirq+0x4b0\/0x6a0\n  softirqs last disabled at (188957): [<ffff80000804a618>] __irq_exit_rcu+0x108\/0x1a4\n\n[ rjw: Because can be freed by the gov_attr_set_put() in\n  cpufreq_dbs_governor_exit() now, it is also necessary to put the\n  invocation of the governor ->exit() callback into the new\n  cpufreq_dbs_data_release() function. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e32083f327184b6226ce320ef30085ce785ea4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1964688582d26af1328e19b658933659fb54337","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a85ee6401a47ae3fc64ba506cacb3e7873823c65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49514","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.470","lastModified":"2025-02-26T07:01:27.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: Fix error handling in mt8173_max98090_dev_probe\n\nCall of_node_put(platform_node) to avoid refcount leak in\nthe error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a1901f34f775b83ea4b8dbb5ed992147b9b8531","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e932aba3c7628c9f880ee9c2cfcc2ae3ba0c01e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23f340ed906c758cec6527376768e3bc1474ac30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48889eb3cce91d7f58e02bc07277b7f724b7a54a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f4e0454e226de3bf4efd7e7924d1edc571c52d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98d5afe868df998b0244f4c229ab758b4083684a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc43b9fdca519c5b13be6a717bacbebccd628cf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebd5cb4f1f3f10b839e7575219e0f17b60c23113","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb66e0512e5ccc093070e21cf88cce8d98c181b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49515","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.567","lastModified":"2025-02-26T07:01:27.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: cs35l41: Fix an out-of-bounds access in otp_packed_element_t\n\nThe CS35L41_NUM_OTP_ELEM is 100, but only 99 entries are defined in\nthe array otp_map_1\/2[CS35L41_NUM_OTP_ELEM], this will trigger UBSAN\nto report a shift-out-of-bounds warning in the cs35l41_otp_unpack()\nsince the last entry in the array will result in GENMASK(-1, 0).\n\nUBSAN reports this problem:\n UBSAN: shift-out-of-bounds in \/home\/hwang4\/build\/jammy\/jammy\/sound\/soc\/codecs\/cs35l41-lib.c:836:8\n shift exponent 64 is too large for 64-bit type 'long unsigned int'\n CPU: 10 PID: 595 Comm: systemd-udevd Not tainted 5.15.0-23-generic #23\n Hardware name: LENOVO \\x02MFG_IN_GO\/\\x02MFG_IN_GO, BIOS N3GET19W (1.00 ) 03\/11\/2022\n Call Trace:\n  <TASK>\n  show_stack+0x52\/0x58\n  dump_stack_lvl+0x4a\/0x5f\n  dump_stack+0x10\/0x12\n  ubsan_epilogue+0x9\/0x45\n  __ubsan_handle_shift_out_of_bounds.cold+0x61\/0xef\n  ? regmap_unlock_mutex+0xe\/0x10\n  cs35l41_otp_unpack.cold+0x1c6\/0x2b2 [snd_soc_cs35l41_lib]\n  cs35l41_hda_probe+0x24f\/0x33a [snd_hda_scodec_cs35l41]\n  cs35l41_hda_i2c_probe+0x65\/0x90 [snd_hda_scodec_cs35l41_i2c]\n  ? cs35l41_hda_i2c_remove+0x20\/0x20 [snd_hda_scodec_cs35l41_i2c]\n  i2c_device_probe+0x252\/0x2b0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9f342904216f378e88008bb0ce1ae200a4b99fe8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a59b9958416096dd21dc4f62b0c5be525d459ca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dbc35268e14d5d89c7a9db72009ad4dcd9ede646","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49516","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.653","lastModified":"2025-02-26T07:01:27.653","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: always check VF VSI pointer values\n\nThe ice_get_vf_vsi function can return NULL in some cases, such as if\nhandling messages during a reset where the VSI is being removed and\nrecreated.\n\nSeveral places throughout the driver do not bother to check whether this\nVSI pointer is valid. Static analysis tools maybe report issues because\nthey detect paths where a potentially NULL pointer could be dereferenced.\n\nFix this by checking the return value of ice_get_vf_vsi everywhere."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/baeb705fd6a7245cc1fa69ed991a9cffdf44a174","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7be3877589d539c52e5d1d23a625f889b541b9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49517","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.740","lastModified":"2025-02-26T07:01:27.740","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: mediatek: Fix missing of_node_put in mt2701_wm8960_machine_probe\n\nThis node pointer is returned by of_parse_phandle() with\nrefcount incremented in this function.\nCalling of_node_put() to avoid the refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05654431a18fe24e5e46a375d98904134628a102","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/318afb1442eeef089fe7f8a8297d97c0302ff6f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61a85a20e8df5e0a92cfe169c92425c7bae0753b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9345122f5fb9f97a206f440f38bb656e53f46912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94587aa17abf8b26f543d2b29c44abc21bc36836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc2afecaabd2a2c9f17e43b4793a30e3461bfb29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c71494f5f2b444adfd992a7359a0d2a791642b39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f279c49f17ce10866087ea6c0c57382158974b63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49518","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.837","lastModified":"2025-02-26T07:01:27.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: ipc3-topology: Correct get_control_data for non bytes payload\n\nIt is possible to craft a topology where sof_get_control_data() would do\nout of bounds access because it expects that it is only called when the\npayload is bytes type.\nConfusingly it also handles other types of controls, but the payload\nparsing implementation is only valid for bytes.\n\nFix the code to count the non bytes controls and instead of storing a\npointer to sof_abi_hdr in sof_widget_data (which is only valid for bytes),\nstore the pointer to the data itself and add a new member to save the size\nof the data.\n\nIn case of non bytes controls we store the pointer to the chanv itself,\nwhich is just an array of values at the end.\n\nIn case of bytes control, drop the wrong cdata->data (wdata[i].pdata) check\nagainst NULL since it is incorrect and invalid in this context.\nThe data is pointing to the end of cdata struct, so it should never be\nnull."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/896b03bb7c7010042786cfae2115083d4c241dd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a962890a5a3cce903ff7c7a19fadee63ed9efdc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49519","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:27.923","lastModified":"2025-02-26T07:01:27.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath10k: skip ath10k_halt during suspend for driver state RESTARTING\n\nDouble free crash is observed when FW recovery(caused by wmi\ntimeout\/crash) is followed by immediate suspend event. The FW recovery\nis triggered by ath10k_core_restart() which calls driver clean up via\nath10k_halt(). When the suspend event occurs between the FW recovery,\nthe restart worker thread is put into frozen state until suspend completes.\nThe suspend event triggers ath10k_stop() which again triggers ath10k_halt()\nThe double invocation of ath10k_halt() causes ath10k_htt_rx_free() to be\ncalled twice(Note: ath10k_htt_rx_alloc was not called by restart worker\nthread because of its frozen state), causing the crash.\n\nTo fix this, during the suspend flow, skip call to ath10k_halt() in\nath10k_stop() when the current driver state is ATH10K_STATE_RESTARTING.\nAlso, for driver state ATH10K_STATE_RESTARTING, call\nath10k_wait_for_suspend() in ath10k_stop(). This is because call to\nath10k_wait_for_suspend() is skipped later in\n[ath10k_halt() > ath10k_core_stop()] for the driver state\nATH10K_STATE_RESTARTING.\n\nThe frozen restart worker thread will be cancelled during resume when the\ndevice comes out of suspend.\n\nBelow is the crash stack for reference:\n\n[  428.469167] ------------[ cut here ]------------\n[  428.469180] kernel BUG at mm\/slub.c:4150!\n[  428.469193] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[  428.469219] Workqueue: events_unbound async_run_entry_fn\n[  428.469230] RIP: 0010:kfree+0x319\/0x31b\n[  428.469241] RSP: 0018:ffffa1fac015fc30 EFLAGS: 00010246\n[  428.469247] RAX: ffffedb10419d108 RBX: ffff8c05262b0000\n[  428.469252] RDX: ffff8c04a8c07000 RSI: 0000000000000000\n[  428.469256] RBP: ffffa1fac015fc78 R08: 0000000000000000\n[  428.469276] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  428.469285] Call Trace:\n[  428.469295]  ? dma_free_attrs+0x5f\/0x7d\n[  428.469320]  ath10k_core_stop+0x5b\/0x6f\n[  428.469336]  ath10k_halt+0x126\/0x177\n[  428.469352]  ath10k_stop+0x41\/0x7e\n[  428.469387]  drv_stop+0x88\/0x10e\n[  428.469410]  __ieee80211_suspend+0x297\/0x411\n[  428.469441]  rdev_suspend+0x6e\/0xd0\n[  428.469462]  wiphy_suspend+0xb1\/0x105\n[  428.469483]  ? name_show+0x2d\/0x2d\n[  428.469490]  dpm_run_callback+0x8c\/0x126\n[  428.469511]  ? name_show+0x2d\/0x2d\n[  428.469517]  __device_suspend+0x2e7\/0x41b\n[  428.469523]  async_suspend+0x1f\/0x93\n[  428.469529]  async_run_entry_fn+0x3d\/0xd1\n[  428.469535]  process_one_work+0x1b1\/0x329\n[  428.469541]  worker_thread+0x213\/0x372\n[  428.469547]  kthread+0x150\/0x15f\n[  428.469552]  ? pr_cont_work+0x58\/0x58\n[  428.469558]  ? kthread_blkcg+0x31\/0x31\n\nTested-on: QCA6174 hw3.2 PCI WLAN.RM.4.4.1-00288-QCARMSWPZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5321e5211b5dc873e2e3d0deb749e69ecf4dbfe5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7eb14cb604f49e58b7cf6faa87961a865a3c8649","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aa3750986ffcf73e0692db3b40dd3a8e8c0c575","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b72a4aff947ba807177bdabb43debaf2c66bee05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2272428090d0d215a3f017cbbbad731c07eee53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49520","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.017","lastModified":"2025-02-26T07:01:28.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: compat: Do not treat syscall number as ESR_ELx for a bad syscall\n\nIf a compat process tries to execute an unknown system call above the\n__ARM_NR_COMPAT_END number, the kernel sends a SIGILL signal to the\noffending process. Information about the error is printed to dmesg in\ncompat_arm_syscall() -> arm64_notify_die() -> arm64_force_sig_fault() ->\narm64_show_signal().\n\narm64_show_signal() interprets a non-zero value for\ncurrent->thread.fault_code as an exception syndrome and displays the\nmessage associated with the ESR_ELx.EC field (bits 31:26).\ncurrent->thread.fault_code is set in compat_arm_syscall() ->\narm64_notify_die() with the bad syscall number instead of a valid ESR_ELx\nvalue. This means that the ESR_ELx.EC field has the value that the user set\nfor the syscall number and the kernel can end up printing bogus exception\nmessages*. For example, for the syscall number 0x68000000, which evaluates\nto ESR_ELx.EC value of 0x1A (ESR_ELx_EC_FPAC) the kernel prints this error:\n\n[   18.349161] syscall[300]: unhandled exception: ERET\/ERETAA\/ERETAB, ESR 0x68000000, Oops - bad compat syscall(2) in syscall[10000+50000]\n[   18.350639] CPU: 2 PID: 300 Comm: syscall Not tainted 5.18.0-rc1 #79\n[   18.351249] Hardware name: Pine64 RockPro64 v2.0 (DT)\n[..]\n\nwhich is misleading, as the bad compat syscall has nothing to do with\npointer authentication.\n\nStop arm64_show_signal() from printing exception syndrome information by\nhaving compat_arm_syscall() set the ESR_ELx value to 0, as it has no\nmeaning for an invalid system call number. The example above now becomes:\n\n[   19.935275] syscall[301]: unhandled exception: Oops - bad compat syscall(2) in syscall[10000+50000]\n[   19.936124] CPU: 1 PID: 301 Comm: syscall Not tainted 5.18.0-rc1-00005-g7e08006d4102 #80\n[   19.936894] Hardware name: Pine64 RockPro64 v2.0 (DT)\n[..]\n\nwhich although shows less information because the syscall number,\nwrongfully advertised as the ESR value, is missing, it is better than\nshowing plainly wrong information. The syscall number can be easily\nobtained with strace.\n\n*A 32-bit value above or equal to 0x8000_0000 is interpreted as a negative\ninteger in compat_arm_syscal() and the condition scno < __ARM_NR_COMPAT_END\nevaluates to true; the syscall will exit to userspace in this case with the\nENOSYS error code instead of arm64_notify_die() being called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/095e975f8150ccd7f852eb578c1cdbdd2f517c7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3910ae71cb963fa2b68e684489d4fc3d105afda0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fed9e551417b84038b15117732ea4505eee386b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/621916afe8cd4f322eb12759b64a2f938d4e551d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad97425d23af3c3b8d4f6a2bb666cb485087c007","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efd183d988b416fcdf6f7c298a17ced4859ca77d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49521","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.113","lastModified":"2025-02-26T07:01:28.113","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix resource leak in lpfc_sli4_send_seq_to_ulp()\n\nIf no handler is found in lpfc_complete_unsol_iocb() to match the rctl of a\nreceived frame, the frame is dropped and resources are leaked.\n\nFix by returning resources when discarding an unhandled frame type.  Update\nlpfc_fc_frame_check() handling of NOP basic link service."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08709769ff2fb6c5ffedcda3742700d8ea1618a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40cf4ea4d2d497f7732c87d350ba5c3f5e8a43a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/646db1a560f44236b7278b822ca99a1d3b6ea72c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7860d8f8082605b57596aa82d3d438c1fdad9a9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa1b509d41c5433672f72c0615cf4aefa0611c99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49522","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.210","lastModified":"2025-02-26T07:01:28.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: jz4740: Apply DMA engine limits to maximum segment size\n\nDo what is done in other DMA-enabled MMC host drivers (cf. host\/mmci.c) and\nlimit the maximum segment size based on the DMA engine's capabilities. This\nis needed to avoid warnings like the following with CONFIG_DMA_API_DEBUG=y.\n\n------------[ cut here ]------------\nWARNING: CPU: 0 PID: 21 at kernel\/dma\/debug.c:1162 debug_dma_map_sg+0x2f4\/0x39c\nDMA-API: jz4780-dma 13420000.dma-controller: mapping sg segment longer than device claims to support [len=98304] [max=65536]\nCPU: 0 PID: 21 Comm: kworker\/0:1H Not tainted 5.18.0-rc1 #19\nWorkqueue: kblockd blk_mq_run_work_fn\nStack : 81575aec 00000004 80620000 80620000 80620000 805e7358 00000009 801537ac\n        814c832c 806276e3 806e34b4 80620000 81575aec 00000001 81575ab8 09291444\n        00000000 00000000 805e7358 81575958 ffffffea 8157596c 00000000 636f6c62\n        6220646b 80387a70 0000000f 6d5f6b6c 80620000 00000000 81575ba4 00000009\n        805e170c 80896640 00000001 00010000 00000000 00000000 00006098 806e0000\n        ...\nCall Trace:\n[<80107670>] show_stack+0x84\/0x120\n[<80528cd8>] __warn+0xb8\/0xec\n[<80528d78>] warn_slowpath_fmt+0x6c\/0xb8\n[<8016f1d4>] debug_dma_map_sg+0x2f4\/0x39c\n[<80169d4c>] __dma_map_sg_attrs+0xf0\/0x118\n[<8016a27c>] dma_map_sg_attrs+0x14\/0x28\n[<804f66b4>] jz4740_mmc_prepare_dma_data+0x74\/0xa4\n[<804f6714>] jz4740_mmc_pre_request+0x30\/0x54\n[<804f4ff4>] mmc_blk_mq_issue_rq+0x6e0\/0x7bc\n[<804f5590>] mmc_mq_queue_rq+0x220\/0x2d4\n[<8038b2c0>] blk_mq_dispatch_rq_list+0x480\/0x664\n[<80391040>] blk_mq_do_dispatch_sched+0x2dc\/0x370\n[<80391468>] __blk_mq_sched_dispatch_requests+0xec\/0x164\n[<80391540>] blk_mq_sched_dispatch_requests+0x44\/0x94\n[<80387900>] __blk_mq_run_hw_queue+0xb0\/0xcc\n[<80134c14>] process_one_work+0x1b8\/0x264\n[<80134ff8>] worker_thread+0x2ec\/0x3b8\n[<8013b13c>] kthread+0x104\/0x10c\n[<80101dcc>] ret_from_kernel_thread+0x14\/0x1c\n\n---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/353298cadbd4c7d8e8a16d6000066414694933c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7923f95997a79cef2ad161a2facae64c25a0bca0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/807f90f1960a59dc557542b818c484a8db9ac978","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90281cadf5077f2d2bec8b08c2ead1f8cd12660e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a828920b9ec0d89d3011198d482b7fe224d2de19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afadb04f1d6e74b18a253403f5274cde5e3fd7bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49523","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.310","lastModified":"2025-02-26T07:01:28.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: disable spectral scan during spectral deinit\n\nWhen ath11k modules are removed using rmmod with spectral scan enabled,\ncrash is observed. Different crash trace is observed for each crash.\n\nSend spectral scan disable WMI command to firmware before cleaning\nthe spectral dbring in the spectral_deinit API to avoid this crash.\n\ncall trace from one of the crash observed:\n[ 1252.880802] Unable to handle kernel NULL pointer dereference at virtual address 00000008\n[ 1252.882722] pgd = 0f42e886\n[ 1252.890955] [00000008] *pgd=00000000\n[ 1252.893478] Internal error: Oops: 5 [#1] PREEMPT SMP ARM\n[ 1253.093035] CPU: 0 PID: 0 Comm: swapper\/0 Not tainted 5.4.89 #0\n[ 1253.115261] Hardware name: Generic DT based system\n[ 1253.121149] PC is at ath11k_spectral_process_data+0x434\/0x574 [ath11k]\n[ 1253.125940] LR is at 0x88e31017\n[ 1253.132448] pc : [<7f9387b8>]    lr : [<88e31017>]    psr: a0000193\n[ 1253.135488] sp : 80d01bc8  ip : 00000001  fp : 970e0000\n[ 1253.141737] r10: 88e31000  r9 : 970ec000  r8 : 00000080\n[ 1253.146946] r7 : 94734040  r6 : a0000113  r5 : 00000057  r4 : 00000000\n[ 1253.152159] r3 : e18cb694  r2 : 00000217  r1 : 1df1f000  r0 : 00000001\n[ 1253.158755] Flags: NzCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment user\n[ 1253.165266] Control: 10c0383d  Table: 5e71006a  DAC: 00000055\n[ 1253.172472] Process swapper\/0 (pid: 0, stack limit = 0x60870141)\n[ 1253.458055] [<7f9387b8>] (ath11k_spectral_process_data [ath11k]) from [<7f917fdc>] (ath11k_dbring_buffer_release_event+0x214\/0x2e4 [ath11k])\n[ 1253.466139] [<7f917fdc>] (ath11k_dbring_buffer_release_event [ath11k]) from [<7f8ea3c4>] (ath11k_wmi_tlv_op_rx+0x1840\/0x29cc [ath11k])\n[ 1253.478807] [<7f8ea3c4>] (ath11k_wmi_tlv_op_rx [ath11k]) from [<7f8fe868>] (ath11k_htc_rx_completion_handler+0x180\/0x4e0 [ath11k])\n[ 1253.490699] [<7f8fe868>] (ath11k_htc_rx_completion_handler [ath11k]) from [<7f91308c>] (ath11k_ce_per_engine_service+0x2c4\/0x3b4 [ath11k])\n[ 1253.502386] [<7f91308c>] (ath11k_ce_per_engine_service [ath11k]) from [<7f9a4198>] (ath11k_pci_ce_tasklet+0x28\/0x80 [ath11k_pci])\n[ 1253.514811] [<7f9a4198>] (ath11k_pci_ce_tasklet [ath11k_pci]) from [<8032227c>] (tasklet_action_common.constprop.2+0x64\/0xe8)\n[ 1253.526476] [<8032227c>] (tasklet_action_common.constprop.2) from [<803021e8>] (__do_softirq+0x130\/0x2d0)\n[ 1253.537756] [<803021e8>] (__do_softirq) from [<80322610>] (irq_exit+0xcc\/0xe8)\n[ 1253.547304] [<80322610>] (irq_exit) from [<8036a4a4>] (__handle_domain_irq+0x60\/0xb4)\n[ 1253.554428] [<8036a4a4>] (__handle_domain_irq) from [<805eb348>] (gic_handle_irq+0x4c\/0x90)\n[ 1253.562321] [<805eb348>] (gic_handle_irq) from [<80301a78>] (__irq_svc+0x58\/0x8c)\n\nTested-on: QCN6122 hw1.0 AHB WLAN.HK.2.6.0.1-00851-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/161c64de239c7018e0295e7e0520a19f00aa32dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/451b9076903a057b7b8d5b24dc84b3e436a1c743","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b9c54caef58d2b55074710952cda70540722c01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60afa4f4e1350c876d8a061182a70c224de275dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f15e67af9bec5a69e815e0230a70cffddae371a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49524","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.407","lastModified":"2025-02-26T07:01:28.407","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: pci: cx23885: Fix the error handling in cx23885_initdev()\n\nWhen the driver fails to call the dma_set_mask(), the driver will get\nthe following splat:\n\n[   55.853884] BUG: KASAN: use-after-free in __process_removed_driver+0x3c\/0x240\n[   55.854486] Read of size 8 at addr ffff88810de60408 by task modprobe\/590\n[   55.856822] Call Trace:\n[   55.860327]  __process_removed_driver+0x3c\/0x240\n[   55.861347]  bus_for_each_dev+0x102\/0x160\n[   55.861681]  i2c_del_driver+0x2f\/0x50\n\nThis is because the driver has initialized the i2c related resources\nin cx23885_dev_setup() but not released them in error handling, fix this\nbug by modifying the error path that jumps after failing to call the\ndma_set_mask()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/453514a874c78df1e7804e6e3aaa60c8d8deb6a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6041d1a0365baa729b6adfb6ed5386d9388018db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b9978e1c94e569d65a0e7e719abb9340f5db4a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86bd6a579c6c60547706cabf299cd2c9feab3332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98106f100f50c487469903b9cf6d966785fc9cc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca17e7a532d1a55466cc007b3f4d319541a27493","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8123311cf06d7dae71e8c5fe78e0510d20cd30b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa636e9ee4442215cd9a2e079cd5a8e1fe0cb8ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49525","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.500","lastModified":"2025-02-26T07:01:28.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: cx25821: Fix the warning when removing the module\n\nWhen removing the module, we will get the following warning:\n\n[   14.746697] remove_proc_entry: removing non-empty directory 'irq\/21', leaking at least 'cx25821[1]'\n[   14.747449] WARNING: CPU: 4 PID: 368 at fs\/proc\/generic.c:717 remove_proc_entry+0x389\/0x3f0\n[   14.751611] RIP: 0010:remove_proc_entry+0x389\/0x3f0\n[   14.759589] Call Trace:\n[   14.759792]  <TASK>\n[   14.759975]  unregister_irq_proc+0x14c\/0x170\n[   14.760340]  irq_free_descs+0x94\/0xe0\n[   14.760640]  mp_unmap_irq+0xb6\/0x100\n[   14.760937]  acpi_unregister_gsi_ioapic+0x27\/0x40\n[   14.761334]  acpi_pci_irq_disable+0x1d3\/0x320\n[   14.761688]  pci_disable_device+0x1ad\/0x380\n[   14.762027]  ? _raw_spin_unlock_irqrestore+0x2d\/0x60\n[   14.762442]  ? cx25821_shutdown+0x20\/0x9f0 [cx25821]\n[   14.762848]  cx25821_finidev+0x48\/0xc0 [cx25821]\n[   14.763242]  pci_device_remove+0x92\/0x240\n\nFix this by freeing the irq before call pci_disable_device()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/005fd553f5f10fe8618d92f94ad10f9051eac331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f0fc1dfb5fdd456657519a97fab83691b96c6a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2203436a4d24302871617373a7eb21bc17e38762","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/222292930c8ecc3516e03ec1f9fa8448be7ff496","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/258639bc55a586ee6df92d89786ccf1c71546d70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f94169affa33c9db4a439d88f09cb2ed3a33332","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d6295b6d986476232332fffd08575b185f90d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5beb85ff7d005ddb7bf604a4f2dc76f01b84b318","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d92291698e5cc35a2b8a1106a01ddd7d60ade2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49526","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.593","lastModified":"2025-02-26T07:01:28.593","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmd\/bitmap: don't set sb values if can't pass sanity check\n\nIf bitmap area contains invalid data, kernel will crash then mdadm\ntriggers \"Segmentation fault\".\nThis is cluster-md speical bug. In non-clustered env, mdadm will\nhandle broken metadata case. In clustered array, only kernel space\nhandles bitmap slot info. But even this bug only happened in clustered\nenv, current sanity check is wrong, the code should be changed.\n\nHow to trigger: (faulty injection)\n\ndd if=\/dev\/zero bs=1M count=1 oflag=direct of=\/dev\/sda\ndd if=\/dev\/zero bs=1M count=1 oflag=direct of=\/dev\/sdb\nmdadm -C \/dev\/md0 -b clustered -e 1.2 -n 2 -l mirror \/dev\/sda \/dev\/sdb\nmdadm -Ss\necho aaa > magic.txt\n == below modifying slot 2 bitmap data ==\ndd if=magic.txt of=\/dev\/sda seek=16384 bs=1 count=3 <== destroy magic\ndd if=\/dev\/zero of=\/dev\/sda seek=16436 bs=1 count=4 <== ZERO chunksize\nmdadm -A \/dev\/md0 \/dev\/sda \/dev\/sdb\n == kernel crashes. mdadm outputs \"Segmentation fault\" ==\n\nReason of kernel crash:\n\nIn md_bitmap_read_sb (called by md_bitmap_create), bad bitmap magic didn't\nblock chunksize assignment, and zero value made DIV_ROUND_UP_SECTOR_T()\ntrigger \"divide error\".\n\nCrash log:\n\nkernel: md: md0 stopped.\nkernel: md\/raid1:md0: not clean -- starting background reconstruction\nkernel: md\/raid1:md0: active with 2 out of 2 mirrors\nkernel: dlm: ... ...\nkernel: md-cluster: Joined cluster 44810aba-38bb-e6b8-daca-bc97a0b254aa slot 1\nkernel: md0: invalid bitmap file superblock: bad magic\nkernel: md_bitmap_copy_from_slot can't get bitmap from slot 2\nkernel: md-cluster: Could not gather bitmaps from slot 2\nkernel: divide error: 0000 [#1] SMP NOPTI\nkernel: CPU: 0 PID: 1603 Comm: mdadm Not tainted 5.14.6-1-default\nkernel: Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nkernel: RIP: 0010:md_bitmap_create+0x1d1\/0x850 [md_mod]\nkernel: RSP: 0018:ffffc22ac0843ba0 EFLAGS: 00010246\nkernel: ... ...\nkernel: Call Trace:\nkernel:  ? dlm_lock_sync+0xd0\/0xd0 [md_cluster 77fe..7a0]\nkernel:  md_bitmap_copy_from_slot+0x2c\/0x290 [md_mod 24ea..d3a]\nkernel:  load_bitmaps+0xec\/0x210 [md_cluster 77fe..7a0]\nkernel:  md_bitmap_load+0x81\/0x1e0 [md_mod 24ea..d3a]\nkernel:  do_md_run+0x30\/0x100 [md_mod 24ea..d3a]\nkernel:  md_ioctl+0x1290\/0x15a0 [md_mod 24ea....d3a]\nkernel:  ? mddev_unlock+0xaa\/0x130 [md_mod 24ea..d3a]\nkernel:  ? blkdev_ioctl+0xb1\/0x2b0\nkernel:  block_ioctl+0x3b\/0x40\nkernel:  __x64_sys_ioctl+0x7f\/0xb0\nkernel:  do_syscall_64+0x59\/0x80\nkernel:  ? exit_to_user_mode_prepare+0x1ab\/0x230\nkernel:  ? syscall_exit_to_user_mode+0x18\/0x40\nkernel:  ? do_syscall_64+0x69\/0x80\nkernel:  entry_SYSCALL_64_after_hwframe+0x44\/0xae\nkernel: RIP: 0033:0x7f4a15fa722b\nkernel: ... ...\nkernel: ---[ end trace 8afa7612f559c868 ]---\nkernel: RIP: 0010:md_bitmap_create+0x1d1\/0x850 [md_mod]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0959aa00f9765bd8c654b1365012e41b51c733cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27f672af28a8e9b783ff7f0eaf7ef2fbd5a2f4ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/422e8f7ba1e08c8e0e88d375bcb550bc2bbfe96d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf9392282a2cf5a8d83dd1c5aa1a097e12f172bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8f1558e1daf54f53a90b4c5700ae3e3a4b13412","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e68cb83a57a458b01c9739e2ad9cb70b04d1e6d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e69e93120f6219b9cc4fba3b515b6ababd8548aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49527","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.690","lastModified":"2025-02-26T07:01:28.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: avoid null dereference in deinit\n\nIf venus_probe fails at pm_runtime_put_sync the error handling first\ncalls hfi_destroy and afterwards hfi_core_deinit. As hfi_destroy sets\ncore->ops to NULL, hfi_core_deinit cannot call the core_deinit function\nanymore.\n\nAvoid this null pointer derefence by skipping the call when necessary."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ac84ab50712879eac3c1dd2598440652a85d3d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ed5a643b1a4a46b9b7bfba5d468c10cc30e1359","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2533acb652359c9e097dfa33587896af782e8a91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27ad46da44177a78a4a0cae6fe03906888c61aa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86594f6af867b5165d2ba7b5a71fae3a5961e56c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c385b961d4c378228e80f6abea8509cb67feab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a21d15dde21d7e8ae047eb8368677407db45d840","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b73ed0510bb8d9647cd8e8a4c4c8772bbe545c3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49528","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.780","lastModified":"2025-02-26T07:01:28.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: dw9714: Disable the regulator when the driver fails to probe\n\nWhen the driver fails to probe, we will get the following splat:\n\n[   59.305988] ------------[ cut here ]------------\n[   59.306417] WARNING: CPU: 2 PID: 395 at drivers\/regulator\/core.c:2257 _regulator_put+0x3ec\/0x4e0\n[   59.310345] RIP: 0010:_regulator_put+0x3ec\/0x4e0\n[   59.318362] Call Trace:\n[   59.318582]  <TASK>\n[   59.318765]  regulator_put+0x1f\/0x30\n[   59.319058]  devres_release_group+0x319\/0x3d0\n[   59.319420]  i2c_device_probe+0x766\/0x940\n\nFix this by disabling the regulator in error handling."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02276e18defa2fccf16413b44440277d98c2b1ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa83ea1de5b3efd87fe01408d5db1fd2ff4767fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49529","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.873","lastModified":"2025-02-26T07:01:28.873","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu\/pm: fix the null pointer while the smu is disabled\n\nIt needs to check if the pp_funcs is initialized while release the\ncontext, otherwise it will trigger null pointer panic while the software\nsmu is not enabled.\n\n[ 1109.404555] BUG: kernel NULL pointer dereference, address: 0000000000000078\n[ 1109.404609] #PF: supervisor read access in kernel mode\n[ 1109.404638] #PF: error_code(0x0000) - not-present page\n[ 1109.404657] PGD 0 P4D 0\n[ 1109.404672] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[ 1109.404701] CPU: 7 PID: 9150 Comm: amdgpu_test Tainted: G           OEL    5.16.0-custom #1\n[ 1109.404732] Hardware name: innotek GmbH VirtualBox\/VirtualBox, BIOS VirtualBox 12\/01\/2006\n[ 1109.404765] RIP: 0010:amdgpu_dpm_force_performance_level+0x1d\/0x170 [amdgpu]\n[ 1109.405109] Code: 5d c3 44 8b a3 f0 80 00 00 eb e5 66 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 41 55 41 54 53 48 83 ec 08 4c 8b b7 f0 7d 00 00 <49> 83 7e 78 00 0f 84 f2 00 00 00 80 bf 87 80 00 00 00 48 89 fb 0f\n[ 1109.405176] RSP: 0018:ffffaf3083ad7c20 EFLAGS: 00010282\n[ 1109.405203] RAX: 0000000000000000 RBX: ffff9796b1c14600 RCX: 0000000002862007\n[ 1109.405229] RDX: ffff97968591c8c0 RSI: 0000000000000001 RDI: ffff9796a3700000\n[ 1109.405260] RBP: ffffaf3083ad7c50 R08: ffffffff9897de00 R09: ffff979688d9db60\n[ 1109.405286] R10: 0000000000000000 R11: ffff979688d9db90 R12: 0000000000000001\n[ 1109.405316] R13: ffff9796a3700000 R14: 0000000000000000 R15: ffff9796a3708fc0\n[ 1109.405345] FS:  00007ff055cff180(0000) GS:ffff9796bfdc0000(0000) knlGS:0000000000000000\n[ 1109.405378] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1109.405400] CR2: 0000000000000078 CR3: 000000000a394000 CR4: 00000000000506e0\n[ 1109.405434] Call Trace:\n[ 1109.405445]  <TASK>\n[ 1109.405456]  ? delete_object_full+0x1d\/0x20\n[ 1109.405480]  amdgpu_ctx_set_stable_pstate+0x7c\/0xa0 [amdgpu]\n[ 1109.405698]  amdgpu_ctx_fini.part.0+0xcb\/0x100 [amdgpu]\n[ 1109.405911]  amdgpu_ctx_do_release+0x71\/0x80 [amdgpu]\n[ 1109.406121]  amdgpu_ctx_ioctl+0x52d\/0x550 [amdgpu]\n[ 1109.406327]  ? _raw_spin_unlock+0x1a\/0x30\n[ 1109.406354]  ? drm_gem_handle_delete+0x81\/0xb0 [drm]\n[ 1109.406400]  ? amdgpu_ctx_get_entity+0x2c0\/0x2c0 [amdgpu]\n[ 1109.406609]  drm_ioctl_kernel+0xb6\/0x140 [drm]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/49ec3441aa5e5940f3e82dd2f0205b9c856e399d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eea5c7b3390c6e006ba4cbd906447dd8cea8cfbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49530","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:28.967","lastModified":"2025-02-26T07:01:28.967","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: fix double free in si_parse_power_table()\n\nIn function si_parse_power_table(), array adev->pm.dpm.ps and its member\nis allocated. If the allocation of each member fails, the array itself\nis freed and returned with an error code. However, the array is later\nfreed again in si_dpm_fini() function which is called when the function\nreturns an error.\n\nThis leads to potential double free of the array adev->pm.dpm.ps, as\nwell as leak of its array members, since the members are not freed in\nthe allocation function and the array is not nulled when freed.\nIn addition adev->pm.dpm.num_ps, which keeps track of the allocated\narray member, is not updated until the member allocation is\nsuccessfully finished, this could also lead to either use after free,\nor uninitialized variable access in si_dpm_fini().\n\nFix this by postponing the free of the array until si_dpm_fini() and\nincrement adev->pm.dpm.num_ps everytime the array member is allocated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2615464854505188f909d0c07c37a6623693b5c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43eb9b667b95f2a31c63e8949b0d2161b9be59c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c5bdaa1325be7f04b79ea992ab216739192d342","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5ce7051db044290b1a95045ff03c249005a3aa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af832028af6f44c6c45645757079c4ed6884ade5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0e811c4ccf3b42705976285e3a94cc82dea7300","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca1ce206894dd976275c78ee38dbc19873f22de9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3fa2becf2fc25b6ac7cf8d8b1a2e4a86b3b72bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd2eff8b9dcbe469c3b7bbbc7083ab5ed94de07b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49531","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.067","lastModified":"2025-02-26T07:01:29.067","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nloop: implement ->free_disk\n\nEnsure that the lo_device which is stored in the gendisk private\ndata is valid until the gendisk is freed.  Currently the loop driver\nuses a lot of effort to make sure a device is not freed when it is\nstill in use, but to to fix a potential deadlock this will be relaxed\na bit soon."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aadd1443aae7fe8956e3b11157827067f034406a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2c7f56f8b5256d57f9e3fc7794c31361d43bdd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49532","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.170","lastModified":"2025-02-26T07:01:29.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/virtio: fix NULL pointer dereference in virtio_gpu_conn_get_modes\n\ndrm_cvt_mode may return NULL and we should check it.\n\nThis bug is found by syzkaller:\n\nFAULT_INJECTION stacktrace:\n[  168.567394] FAULT_INJECTION: forcing a failure.\nname failslab, interval 1, probability 0, space 0, times 1\n[  168.567403] CPU: 1 PID: 6425 Comm: syz Kdump: loaded Not tainted 4.19.90-vhulk2201.1.0.h1035.kasan.eulerosv2r10.aarch64 #1\n[  168.567406] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02\/06\/2015\n[  168.567408] Call trace:\n[  168.567414]  dump_backtrace+0x0\/0x310\n[  168.567418]  show_stack+0x28\/0x38\n[  168.567423]  dump_stack+0xec\/0x15c\n[  168.567427]  should_fail+0x3ac\/0x3d0\n[  168.567437]  __should_failslab+0xb8\/0x120\n[  168.567441]  should_failslab+0x28\/0xc0\n[  168.567445]  kmem_cache_alloc_trace+0x50\/0x640\n[  168.567454]  drm_mode_create+0x40\/0x90\n[  168.567458]  drm_cvt_mode+0x48\/0xc78\n[  168.567477]  virtio_gpu_conn_get_modes+0xa8\/0x140 [virtio_gpu]\n[  168.567485]  drm_helper_probe_single_connector_modes+0x3a4\/0xd80\n[  168.567492]  drm_mode_getconnector+0x2e0\/0xa70\n[  168.567496]  drm_ioctl_kernel+0x11c\/0x1d8\n[  168.567514]  drm_ioctl+0x558\/0x6d0\n[  168.567522]  do_vfs_ioctl+0x160\/0xf30\n[  168.567525]  ksys_ioctl+0x98\/0xd8\n[  168.567530]  __arm64_sys_ioctl+0x50\/0xc8\n[  168.567536]  el0_svc_common+0xc8\/0x320\n[  168.567540]  el0_svc_handler+0xf8\/0x160\n[  168.567544]  el0_svc+0x10\/0x218\n\nKASAN stacktrace:\n[  168.567561] BUG: KASAN: null-ptr-deref in virtio_gpu_conn_get_modes+0xb4\/0x140 [virtio_gpu]\n[  168.567565] Read of size 4 at addr 0000000000000054 by task syz\/6425\n[  168.567566]\n[  168.567571] CPU: 1 PID: 6425 Comm: syz Kdump: loaded Not tainted 4.19.90-vhulk2201.1.0.h1035.kasan.eulerosv2r10.aarch64 #1\n[  168.567573] Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02\/06\/2015\n[  168.567575] Call trace:\n[  168.567578]  dump_backtrace+0x0\/0x310\n[  168.567582]  show_stack+0x28\/0x38\n[  168.567586]  dump_stack+0xec\/0x15c\n[  168.567591]  kasan_report+0x244\/0x2f0\n[  168.567594]  __asan_load4+0x58\/0xb0\n[  168.567607]  virtio_gpu_conn_get_modes+0xb4\/0x140 [virtio_gpu]\n[  168.567612]  drm_helper_probe_single_connector_modes+0x3a4\/0xd80\n[  168.567617]  drm_mode_getconnector+0x2e0\/0xa70\n[  168.567621]  drm_ioctl_kernel+0x11c\/0x1d8\n[  168.567624]  drm_ioctl+0x558\/0x6d0\n[  168.567628]  do_vfs_ioctl+0x160\/0xf30\n[  168.567632]  ksys_ioctl+0x98\/0xd8\n[  168.567636]  __arm64_sys_ioctl+0x50\/0xc8\n[  168.567641]  el0_svc_common+0xc8\/0x320\n[  168.567645]  el0_svc_handler+0xf8\/0x160\n[  168.567649]  el0_svc+0x10\/0x218"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f8bc147a963686b7351aa35d1701124ffacac08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/194d250cdc4a40ccbd179afd522a9e9846957402","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32e10aabc287f09a148ff759bb9ce70b01b0012c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/848dd072744ea662ab3097e3c8282bee552df218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c51d00472fa54b9b05c17789ed665c17adf3a25d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0828456578cc8ba0a69147f7ae3428392eec287","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edafcad84c4134ebec4bc24b29ca4497a1184eea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f85cb059fad03a3b33a50023be91e944bb065ae8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fadc626cae99aaa1325094edc6a9e2b883f3e562","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49533","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.293","lastModified":"2025-02-26T07:01:29.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: Change max no of active probe SSID and BSSID to fw capability\n\nThe maximum number of SSIDs in a for active probe requests is currently\nreported as 16 (WLAN_SCAN_PARAMS_MAX_SSID) when registering the driver.\nThe scan_req_params structure only has the capacity to hold 10 SSIDs.\nThis leads to a buffer overflow which can be triggered from\nwpa_supplicant in userspace. When copying the SSIDs into the\nscan_req_params structure in the ath11k_mac_op_hw_scan route, it can\noverwrite the extraie pointer.\n\nFirmware supports 16 ssid * 4 bssid, for each ssid 4 bssid combo probe\nrequest will be sent, so totally 64 probe requests supported. So\nset both max ssid and bssid to 16 and 4 respectively. Remove the\nredundant macros of ssid and bssid.\n\nTested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.7.0.1-01300-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/210505788f1d243232e21ef660efcd4838890ce8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50dc9ce9f80554a88e33b73c30851acf2be36ed3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec5dfa1d66f2f71a48dab027d26a9fa78eb0f58f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49534","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.400","lastModified":"2025-02-26T07:01:29.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Protect memory leak for NPIV ports sending PLOGI_RJT\n\nThere is a potential memory leak in lpfc_ignore_els_cmpl() and\nlpfc_els_rsp_reject() that was allocated from NPIV PLOGI_RJT\n(lpfc_rcv_plogi()'s login_mbox).\n\nCheck if cmdiocb->context_un.mbox was allocated in lpfc_ignore_els_cmpl(),\nand then free it back to phba->mbox_mem_pool along with mbox->ctx_buf for\nservice parameters.\n\nFor lpfc_els_rsp_reject() failure, free both the ctx_buf for service\nparameters and the login_mbox."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/672d1cb40551ea9c95efad43ab6d45e4ab4e015f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c00df0f34a6d5e14da379f96ea67e501ce67b002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49535","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.490","lastModified":"2025-02-26T07:01:29.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix null pointer dereference after failing to issue FLOGI and PLOGI\n\nIf lpfc_issue_els_flogi() fails and returns non-zero status, the node\nreference count is decremented to trigger the release of the nodelist\nstructure. However, if there is a prior registration or dev-loss-evt work\npending, the node may be released prematurely.  When dev-loss-evt\ncompletes, the released node is referenced causing a use-after-free null\npointer dereference.\n\nSimilarly, when processing non-zero ELS PLOGI completion status in\nlpfc_cmpl_els_plogi(), the ndlp flags are checked for a transport\nregistration before triggering node removal.  If dev-loss-evt work is\npending, the node may be released prematurely and a subsequent call to\nlpfc_dev_loss_tmo_handler() results in a use after free ndlp dereference.\n\nAdd test for pending dev-loss before decrementing the node reference count\nfor FLOGI, PLOGI, PRLI, and ADISC handling."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10663ebec0ad5c78493a0dd34c9ee4d73d7ca0df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/577a942df3de2666f6947bdd3a5c9e8d30073424","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49536","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.580","lastModified":"2025-02-26T07:01:29.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix SCSI I\/O completion and abort handler deadlock\n\nDuring stress I\/O tests with 500+ vports, hard LOCKUP call traces are\nobserved.\n\nCPU A:\n native_queued_spin_lock_slowpath+0x192\n _raw_spin_lock_irqsave+0x32\n lpfc_handle_fcp_err+0x4c6\n lpfc_fcp_io_cmd_wqe_cmpl+0x964\n lpfc_sli4_fp_handle_cqe+0x266\n __lpfc_sli4_process_cq+0x105\n __lpfc_sli4_hba_process_cq+0x3c\n lpfc_cq_poll_hdler+0x16\n irq_poll_softirq+0x76\n __softirqentry_text_start+0xe4\n irq_exit+0xf7\n do_IRQ+0x7f\n\nCPU B:\n native_queued_spin_lock_slowpath+0x5b\n _raw_spin_lock+0x1c\n lpfc_abort_handler+0x13e\n scmd_eh_abort_handler+0x85\n process_one_work+0x1a7\n worker_thread+0x30\n kthread+0x112\n ret_from_fork+0x1f\n\nDiagram of lockup:\n\nCPUA                            CPUB\n----                            ----\nlpfc_cmd->buf_lock\n                            phba->hbalock\n                            lpfc_cmd->buf_lock\nphba->hbalock\n\nFix by reordering the taking of the lpfc_cmd->buf_lock and phba->hbalock in\nlpfc_abort_handler routine so that it tries to take the lpfc_cmd->buf_lock\nfirst before phba->hbalock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03cbbd7c2f5ee288f648f4aeedc765a181188553","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c4eed901285b9cae36a622f32bea3e92490da6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21c0d469349957b5dc811c41200a2a998996ca8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7625e81de2164a082810e1f27547d388406da610","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49537","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.667","lastModified":"2025-02-26T07:01:29.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Fix call trace observed during I\/O with CMF enabled\n\nThe following was seen with CMF enabled:\n\nBUG: using smp_processor_id() in preemptible\ncode: systemd-udevd\/31711\nkernel: caller is lpfc_update_cmf_cmd+0x214\/0x420  [lpfc]\nkernel: CPU: 12 PID: 31711 Comm: systemd-udevd\nkernel: Call Trace:\nkernel: <TASK>\nkernel: dump_stack_lvl+0x44\/0x57\nkernel: check_preemption_disabled+0xbf\/0xe0\nkernel: lpfc_update_cmf_cmd+0x214\/0x420 [lpfc]\nkernel: lpfc_nvme_fcp_io_submit+0x23b4\/0x4df0 [lpfc]\n\nthis_cpu_ptr() calls smp_processor_id() in a preemptible context.\n\nFix by using per_cpu_ptr() with raw_smp_processor_id() instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/517e0835cfb2007713ff16c4fb8479f08b16aec7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae373d66c427812754db5292eb1481b181daf9ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd7f899de4b1b829125d72ee6fbfd878b637b815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6d45f67a11136cb88a70a29ab22ea6db8ae6bd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49538","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.760","lastModified":"2025-02-26T07:01:29.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: jack: Access input_dev under mutex\n\nIt is possible when using ASoC that input_dev is unregistered while\ncalling snd_jack_report, which causes NULL pointer dereference.\nIn order to prevent this serialize access to input_dev using mutex lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b6a6fc5280e97559287b61eade2d4b363e836f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/582aea6084cc59fec881204f026816d1219f2348","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cc6f623f4818c7d7e9e966a45ebf324901ca9c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74bab3bcf422593c582e47130aa8eb41ebb2dc09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8487a88136d54a1a4d3f26f1399685db648ab879","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e6a73b0c0f2014eb89249fb1640c5a3d58221c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c093b62c40027c21d649c5534ad7aa3605a99b00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2b8681769f6e205382f026b907d28aa5ec9d59a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f68bed124c7699e23ffb4ce4fcc84671e9193cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49539","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.857","lastModified":"2025-02-26T07:01:29.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtw89: ser: fix CAM leaks occurring in L2 reset\n\nThe CAM, meaning address CAM and bssid CAM here, will get leaks during\nSER (system error recover) L2 reset process and ieee80211_restart_hw()\nwhich is called by L2 reset process eventually.\n\nThe normal flow would be like\n-> add interface (acquire 1)\n-> enter ips (release 1)\n-> leave ips (acquire 1)\n-> connection (occupy 1) <(A) 1 leak after L2 reset if non-sec connection>\n\nThe ieee80211_restart_hw() flow (under connection)\n-> ieee80211 reconfig\n-> add interface (acquire 1)\n-> leave ips (acquire 1)\n-> connection (occupy (A) + 2) <(B) 1 more leak>\n\nOriginally, CAM is released before HW restart only if connection is under\nsecurity. Now, release CAM whatever connection it is to fix leak in (A).\nOTOH, check if CAM is already valid to avoid acquiring multiple times to\nfix (B).\n\nBesides, if AP mode, release address CAM of all stations before HW restart."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b169f877f001a474fb89939842c390518160bcc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6aff772c9978844529618d86aafb53e5d3ae161","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49540","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:29.947","lastModified":"2025-02-26T07:01:29.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrcu-tasks: Fix race in schedule and flush work\n\nWhile booting secondary CPUs, cpus_read_[lock\/unlock] is not keeping\nonline cpumask stable. The transient online mask results in below\ncalltrace.\n\n[    0.324121] CPU1: Booted secondary processor 0x0000000001 [0x410fd083]\n[    0.346652] Detected PIPT I-cache on CPU2\n[    0.347212] CPU2: Booted secondary processor 0x0000000002 [0x410fd083]\n[    0.377255] Detected PIPT I-cache on CPU3\n[    0.377823] CPU3: Booted secondary processor 0x0000000003 [0x410fd083]\n[    0.379040] ------------[ cut here ]------------\n[    0.383662] WARNING: CPU: 0 PID: 10 at kernel\/workqueue.c:3084 __flush_work+0x12c\/0x138\n[    0.384850] Modules linked in:\n[    0.385403] CPU: 0 PID: 10 Comm: rcu_tasks_rude_ Not tainted 5.17.0-rc3-v8+ #13\n[    0.386473] Hardware name: Raspberry Pi 4 Model B Rev 1.4 (DT)\n[    0.387289] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    0.388308] pc : __flush_work+0x12c\/0x138\n[    0.388970] lr : __flush_work+0x80\/0x138\n[    0.389620] sp : ffffffc00aaf3c60\n[    0.390139] x29: ffffffc00aaf3d20 x28: ffffffc009c16af0 x27: ffffff80f761df48\n[    0.391316] x26: 0000000000000004 x25: 0000000000000003 x24: 0000000000000100\n[    0.392493] x23: ffffffffffffffff x22: ffffffc009c16b10 x21: ffffffc009c16b28\n[    0.393668] x20: ffffffc009e53861 x19: ffffff80f77fbf40 x18: 00000000d744fcc9\n[    0.394842] x17: 000000000000000b x16: 00000000000001c2 x15: ffffffc009e57550\n[    0.396016] x14: 0000000000000000 x13: ffffffffffffffff x12: 0000000100000000\n[    0.397190] x11: 0000000000000462 x10: ffffff8040258008 x9 : 0000000100000000\n[    0.398364] x8 : 0000000000000000 x7 : ffffffc0093c8bf4 x6 : 0000000000000000\n[    0.399538] x5 : 0000000000000000 x4 : ffffffc00a976e40 x3 : ffffffc00810444c\n[    0.400711] x2 : 0000000000000004 x1 : 0000000000000000 x0 : 0000000000000000\n[    0.401886] Call trace:\n[    0.402309]  __flush_work+0x12c\/0x138\n[    0.402941]  schedule_on_each_cpu+0x228\/0x278\n[    0.403693]  rcu_tasks_rude_wait_gp+0x130\/0x144\n[    0.404502]  rcu_tasks_kthread+0x220\/0x254\n[    0.405264]  kthread+0x174\/0x1ac\n[    0.405837]  ret_from_fork+0x10\/0x20\n[    0.406456] irq event stamp: 102\n[    0.406966] hardirqs last  enabled at (101): [<ffffffc0093c8468>] _raw_spin_unlock_irq+0x78\/0xb4\n[    0.408304] hardirqs last disabled at (102): [<ffffffc0093b8270>] el1_dbg+0x24\/0x5c\n[    0.409410] softirqs last  enabled at (54): [<ffffffc0081b80c8>] local_bh_enable+0xc\/0x2c\n[    0.410645] softirqs last disabled at (50): [<ffffffc0081b809c>] local_bh_disable+0xc\/0x2c\n[    0.411890] ---[ end trace 0000000000000000 ]---\n[    0.413000] smp: Brought up 1 node, 4 CPUs\n[    0.413762] SMP: Total of 4 processors activated.\n[    0.414566] CPU features: detected: 32-bit EL0 Support\n[    0.415414] CPU features: detected: 32-bit EL1 Support\n[    0.416278] CPU features: detected: CRC32 instructions\n[    0.447021] Callback from call_rcu_tasks_rude() invoked.\n[    0.506693] Callback from call_rcu_tasks() invoked.\n\nThis commit therefore fixes this issue by applying a single-CPU\noptimization to the RCU Tasks Rude grace-period process.  The key point\nhere is that the purpose of this RCU flavor is to force a schedule on\neach online CPU since some past event.  But the rcu_tasks_rude_wait_gp()\nfunction runs in the context of the RCU Tasks Rude's grace-period kthread,\nso there must already have been a context switch on the current CPU since\nthe call to either synchronize_rcu_tasks_rude() or call_rcu_tasks_rude().\nSo if there is only a single CPU online, RCU Tasks Rude's grace-period\nkthread does not need to anything at all.\n\nIt turns out that the rcu_tasks_rude_wait_gp() function's call to\nschedule_on_each_cpu() causes problems during early boot.  During that\ntime, there is only one online CPU, namely the boot CPU.  Therefore,\napplying this single-CPU optimization fixes early-boot instances of\nthis problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c6c3f2336642fb3074593911f5176565f47ec41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/230bf5878af6038dfb63d9184272a58475236580","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f49a8758b5cd541bd7aa9a0d0d11c7426141c0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba722d061bc4b54802d701fc63fc2fd988934603","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f75fd4b9221d93177c50dcfde671b2e907f53e86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49541","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.043","lastModified":"2025-02-26T07:01:30.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: fix potential double free during failed mount\n\nRHBZ: https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=2088799"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8378a51e3f8140f60901fb27208cc7a6e47047b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a167fc440e5693c1cdd7f07071e05658bd9d89d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce0008a0e410cdd95f0d8cd81b2902ec10a660c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee71f8f1cd3c8c4a251fd3e8abc89215ae3457cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49542","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.133","lastModified":"2025-02-26T07:01:30.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Move cfg_log_verbose check before calling lpfc_dmp_dbg()\n\nIn an attempt to log message 0126 with LOG_TRACE_EVENT, the following hard\nlockup call trace hangs the system.\n\nCall Trace:\n _raw_spin_lock_irqsave+0x32\/0x40\n lpfc_dmp_dbg.part.32+0x28\/0x220 [lpfc]\n lpfc_cmpl_els_fdisc+0x145\/0x460 [lpfc]\n lpfc_sli_cancel_jobs+0x92\/0xd0 [lpfc]\n lpfc_els_flush_cmd+0x43c\/0x670 [lpfc]\n lpfc_els_flush_all_cmd+0x37\/0x60 [lpfc]\n lpfc_sli4_async_event_proc+0x956\/0x1720 [lpfc]\n lpfc_do_work+0x1485\/0x1d70 [lpfc]\n kthread+0x112\/0x130\n ret_from_fork+0x1f\/0x40\nKernel panic - not syncing: Hard LOCKUP\n\nThe same CPU tries to claim the phba->port_list_lock twice.\n\nMove the cfg_log_verbose checks as part of the lpfc_printf_vlog() and\nlpfc_printf_log() macros before calling lpfc_dmp_dbg().  There is no need\nto take the phba->port_list_lock within lpfc_dmp_dbg()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09c772557a4fd9490fed1bfb133268313ea22213","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/271725e4028559ae7974d762a8467dc9de412f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc6501afccec55b8b6c90584cbf71f1fefa77d1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e294647b1aed4247fe52851f3a3b2b19ae906228","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49543","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.220","lastModified":"2025-02-26T07:01:30.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nath11k: fix the warning of dev_wake in mhi_pm_disable_transition()\n\nWhen test device recovery with below command, it has warning in message\nas below.\necho assert > \/sys\/kernel\/debug\/ath11k\/wcn6855\\ hw2.0\/simulate_fw_crash\necho assert > \/sys\/kernel\/debug\/ath11k\/qca6390\\ hw2.0\/simulate_fw_crash\n\nwarning message:\n[ 1965.642121] ath11k_pci 0000:06:00.0: simulating firmware assert crash\n[ 1968.471364] ieee80211 phy0: Hardware restart was requested\n[ 1968.511305] ------------[ cut here ]------------\n[ 1968.511368] WARNING: CPU: 3 PID: 1546 at drivers\/bus\/mhi\/core\/pm.c:505 mhi_pm_disable_transition+0xb37\/0xda0 [mhi]\n[ 1968.511443] Modules linked in: ath11k_pci ath11k mac80211 libarc4 cfg80211 qmi_helpers qrtr_mhi mhi qrtr nvme nvme_core\n[ 1968.511563] CPU: 3 PID: 1546 Comm: kworker\/u17:0 Kdump: loaded Tainted: G        W         5.17.0-rc3-wt-ath+ #579\n[ 1968.511629] Hardware name: Intel(R) Client Systems NUC8i7HVK\/NUC8i7HVB, BIOS HNKBLi70.86A.0067.2021.0528.1339 05\/28\/2021\n[ 1968.511704] Workqueue: mhi_hiprio_wq mhi_pm_st_worker [mhi]\n[ 1968.511787] RIP: 0010:mhi_pm_disable_transition+0xb37\/0xda0 [mhi]\n[ 1968.511870] Code: a9 fe ff ff 4c 89 ff 44 89 04 24 e8 03 46 f6 e5 44 8b 04 24 41 83 f8 01 0f 84 21 fe ff ff e9 4c fd ff ff 0f 0b e9 af f8 ff ff <0f> 0b e9 5c f8 ff ff 48 89 df e8 da 9e ee e3 e9 12 fd ff ff 4c 89\n[ 1968.511923] RSP: 0018:ffffc900024efbf0 EFLAGS: 00010286\n[ 1968.511969] RAX: 00000000ffffffff RBX: ffff88811d241250 RCX: ffffffffc0176922\n[ 1968.512014] RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff888118a90a24\n[ 1968.512059] RBP: ffff888118a90800 R08: 0000000000000000 R09: ffff888118a90a27\n[ 1968.512102] R10: ffffed1023152144 R11: 0000000000000001 R12: ffff888118a908ac\n[ 1968.512229] R13: ffff888118a90928 R14: dffffc0000000000 R15: ffff888118a90a24\n[ 1968.512310] FS:  0000000000000000(0000) GS:ffff888234200000(0000) knlGS:0000000000000000\n[ 1968.512405] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1968.512493] CR2: 00007f5538f443a8 CR3: 000000016dc28001 CR4: 00000000003706e0\n[ 1968.512587] Call Trace:\n[ 1968.512672]  <TASK>\n[ 1968.512751]  ? _raw_spin_unlock_irq+0x1f\/0x40\n[ 1968.512859]  mhi_pm_st_worker+0x3ac\/0x790 [mhi]\n[ 1968.512959]  ? mhi_pm_mission_mode_transition.isra.0+0x7d0\/0x7d0 [mhi]\n[ 1968.513063]  process_one_work+0x86a\/0x1400\n[ 1968.513184]  ? pwq_dec_nr_in_flight+0x230\/0x230\n[ 1968.513312]  ? move_linked_works+0x125\/0x290\n[ 1968.513416]  worker_thread+0x6db\/0xf60\n[ 1968.513536]  ? process_one_work+0x1400\/0x1400\n[ 1968.513627]  kthread+0x241\/0x2d0\n[ 1968.513733]  ? kthread_complete_and_exit+0x20\/0x20\n[ 1968.513821]  ret_from_fork+0x22\/0x30\n[ 1968.513924]  <\/TASK>\n\nReason is mhi_deassert_dev_wake() from mhi_device_put() is called\nbut mhi_assert_dev_wake() from __mhi_device_get_sync() is not called\nin progress of recovery. Commit 8e0559921f9a (\"bus: mhi: core:\nSkip device wake in error or shutdown state\") add check for the\npm_state of mhi in __mhi_device_get_sync(), and the pm_state is not\nthe normal state untill recovery is completed, so it leads the\ndev_wake is not 0 and above warning print in mhi_pm_disable_transition()\nwhile checking mhi_cntrl->dev_wake.\n\nAdd check in ath11k_pci_write32()\/ath11k_pci_read32() to skip call\nmhi_device_put() if mhi_device_get_sync() does not really do wake,\nthen the warning gone.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03003-QCAHSPSWPL_V1_V2_SILICONZ_LITE-2"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d7a8a6204ea9271f1d0a8c66a9fd2f54d2e3cbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f18206cddae033c488e4879f198699092ca0524","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2d9b7357469949ad02f511fc69f8fa3a1afbf89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49544","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.313","lastModified":"2025-02-26T07:01:30.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipw2x00: Fix potential NULL dereference in libipw_xmit()\n\ncrypt and crypt->ops could be null, so we need to checking null\nbefore dereference"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/167affc11781d7d35c4c3a7630a549ac74dd0b21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ff6b0727c8988f25eeb670b6c038c1120bb58dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48d4a820fd33f012e5f63735a59d15b5a3882882","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/528d2023ccf4748fd542582955236c1634a7d293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f7ea274e88c0eeffe6bd6dbf6cf5c479d356af6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb1b9beb085bb767ae43e441db5ac6fcd66a04d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98d1dc32f890642476dbb78ed3437a456bf421b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4628e0d3754ab2fc98ee6e3d21851ba45798077","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8366bbabe1d207cf7c5b11ae50e223ae6fc278b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49545","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.410","lastModified":"2025-02-26T07:01:30.410","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Cancel pending work at closing a MIDI substream\n\nAt closing a USB MIDI output substream, there might be still a pending\nwork, which would eventually access the rawmidi runtime object that is\nbeing released.  For fixing the race, make sure to cancel the pending\nwork at closing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0125de38122f0f66bf61336158d12a1aabfe6425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/11868ca21585561659c2575b0d6508ef8e9c4291","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40bdb5ec957aca5c5c1924602bef6b0ab18e22d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/517dcef4d2dda0132648f1e4c079ed17bba4d1a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e5fe2b6065541c6216a7a003b0cddf386be0d2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49546","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.500","lastModified":"2025-02-26T07:01:30.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/kexec: fix memory leak of elf header buffer\n\nThis is reported by kmemleak detector:\n\nunreferenced object 0xffffc900002a9000 (size 4096):\n  comm \"kexec\", pid 14950, jiffies 4295110793 (age 373.951s)\n  hex dump (first 32 bytes):\n    7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00  .ELF............\n    04 00 3e 00 01 00 00 00 00 00 00 00 00 00 00 00  ..>.............\n  backtrace:\n    [<0000000016a8ef9f>] __vmalloc_node_range+0x101\/0x170\n    [<000000002b66b6c0>] __vmalloc_node+0xb4\/0x160\n    [<00000000ad40107d>] crash_prepare_elf64_headers+0x8e\/0xcd0\n    [<0000000019afff23>] crash_load_segments+0x260\/0x470\n    [<0000000019ebe95c>] bzImage64_load+0x814\/0xad0\n    [<0000000093e16b05>] arch_kexec_kernel_image_load+0x1be\/0x2a0\n    [<000000009ef2fc88>] kimage_file_alloc_init+0x2ec\/0x5a0\n    [<0000000038f5a97a>] __do_sys_kexec_file_load+0x28d\/0x530\n    [<0000000087c19992>] do_syscall_64+0x3b\/0x90\n    [<0000000066e063a4>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nIn crash_prepare_elf64_headers(), a buffer is allocated via vmalloc() to\nstore elf headers.  While it's not freed back to system correctly when\nkdump kernel is reloaded or unloaded.  Then memory leak is caused.  Fix it\nby introducing x86 specific function arch_kimage_file_post_load_cleanup(),\nand freeing the buffer there.\n\nAnd also remove the incorrect elf header buffer freeing code.  Before\ncalling arch specific kexec_file loading function, the image instance has\nbeen initialized.  So 'image->elf_headers' must be NULL.  It doesn't make\nsense to free the elf header buffer in the place.\n\nThree different people have reported three bugs about the memory leak on\nx86_64 inside Redhat."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/115ee42a4c2f26ba2b4ace2668a3f004621f6833","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8765a423a87d74ef24ea02b43b2728fe4039f248","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3e34a47f98974d0844444c5121aaff123004e57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f675e3a9189d84a9324ab45b0cb19906c2bc8fcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49547","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.590","lastModified":"2025-02-26T07:01:30.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix deadlock between concurrent dio writes when low on free data space\n\nWhen reserving data space for a direct IO write we can end up deadlocking\nif we have multiple tasks attempting a write to the same file range, there\nare multiple extents covered by that file range, we are low on available\nspace for data and the writes don't expand the inode's i_size.\n\nThe deadlock can happen like this:\n\n1) We have a file with an i_size of 1M, at offset 0 it has an extent with\n   a size of 128K and at offset 128K it has another extent also with a\n   size of 128K;\n\n2) Task A does a direct IO write against file range [0, 256K), and because\n   the write is within the i_size boundary, it takes the inode's lock (VFS\n   level) in shared mode;\n\n3) Task A locks the file range [0, 256K) at btrfs_dio_iomap_begin(), and\n   then gets the extent map for the extent covering the range [0, 128K).\n   At btrfs_get_blocks_direct_write(), it creates an ordered extent for\n   that file range ([0, 128K));\n\n4) Before returning from btrfs_dio_iomap_begin(), it unlocks the file\n   range [0, 256K);\n\n5) Task A executes btrfs_dio_iomap_begin() again, this time for the file\n   range [128K, 256K), and locks the file range [128K, 256K);\n\n6) Task B starts a direct IO write against file range [0, 256K) as well.\n   It also locks the inode in shared mode, as it's within the i_size limit,\n   and then tries to lock file range [0, 256K). It is able to lock the\n   subrange [0, 128K) but then blocks waiting for the range [128K, 256K),\n   as it is currently locked by task A;\n\n7) Task A enters btrfs_get_blocks_direct_write() and tries to reserve data\n   space. Because we are low on available free space, it triggers the\n   async data reclaim task, and waits for it to reserve data space;\n\n8) The async reclaim task decides to wait for all existing ordered extents\n   to complete (through btrfs_wait_ordered_roots()).\n   It finds the ordered extent previously created by task A for the file\n   range [0, 128K) and waits for it to complete;\n\n9) The ordered extent for the file range [0, 128K) can not complete\n   because it blocks at btrfs_finish_ordered_io() when trying to lock the\n   file range [0, 128K).\n\n   This results in a deadlock, because:\n\n   - task B is holding the file range [0, 128K) locked, waiting for the\n     range [128K, 256K) to be unlocked by task A;\n\n   - task A is holding the file range [128K, 256K) locked and it's waiting\n     for the async data reclaim task to satisfy its space reservation\n     request;\n\n   - the async data reclaim task is waiting for ordered extent [0, 128K)\n     to complete, but the ordered extent can not complete because the\n     file range [0, 128K) is currently locked by task B, which is waiting\n     on task A to unlock file range [128K, 256K) and task A waiting\n     on the async data reclaim task.\n\n   This results in a deadlock between 4 task: task A, task B, the async\n   data reclaim task and the task doing ordered extent completion (a work\n   queue task).\n\nThis type of deadlock can sporadically be triggered by the test case\ngeneric\/300 from fstests, and results in a stack trace like the following:\n\n[12084.033689] INFO: task kworker\/u16:7:123749 blocked for more than 241 seconds.\n[12084.034877]       Not tainted 5.18.0-rc2-btrfs-next-115 #1\n[12084.035562] \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n[12084.036548] task:kworker\/u16:7   state:D stack:    0 pid:123749 ppid:     2 flags:0x00004000\n[12084.036554] Workqueue: btrfs-flush_delalloc btrfs_work_helper [btrfs]\n[12084.036599] Call Trace:\n[12084.036601]  <TASK>\n[12084.036606]  __schedule+0x3cb\/0xed0\n[12084.036616]  schedule+0x4e\/0xb0\n[12084.036620]  btrfs_start_ordered_extent+0x109\/0x1c0 [btrfs]\n[12084.036651]  ? prepare_to_wait_exclusive+0xc0\/0xc0\n[12084.036659]  btrfs_run_ordered_extent_work+0x1a\/0x30 [btrfs]\n[12084.036688]  btrfs_work_helper+0xf8\/0x400 [btrfs]\n[12084.0367\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/cfae6f765b3c40882ee90dae8fbf9325c8de9c35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5585f4f0ef5b17026bbd60fbff6fcc91b99d5bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49548","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.683","lastModified":"2025-02-26T07:01:30.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix potential array overflow in bpf_trampoline_get_progs()\n\nThe cnt value in the 'cnt >= BPF_MAX_TRAMP_PROGS' check does not\ninclude BPF_TRAMP_MODIFY_RETURN bpf programs, so the number of\nthe attached BPF_TRAMP_MODIFY_RETURN bpf programs in a trampoline\ncan exceed BPF_MAX_TRAMP_PROGS.\n\nWhen this happens, the assignment '*progs++ = aux->prog' in\nbpf_trampoline_get_progs() will cause progs array overflow as the\nprogs field in the bpf_tramp_progs struct can only hold at most\nBPF_MAX_TRAMP_PROGS bpf programs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32c4559c61652f24c9fdd5440342196fe37453bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f8897bcc20b9ae44758e0572538d741ab66f0dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f845de2863334bed4f362e95853f5e7bc323737","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2aa95b71c9bbec793b5c5fa50f0a80d882b3e8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e36452d5da6325df7c10cffc60a9e68d21e2606d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49549","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.773","lastModified":"2025-02-26T07:01:30.773","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/MCE\/AMD: Fix memory leak when threshold_create_bank() fails\n\nIn mce_threshold_create_device(), if threshold_create_bank() fails, the\npreviously allocated threshold banks array @bp will be leaked because\nthe call to mce_threshold_remove_device() will not free it.\n\nThis happens because mce_threshold_remove_device() fetches the pointer\nthrough the threshold_banks per-CPU variable but bp is written there\nonly after the bank creation is successful, and not before, when\nthreshold_create_bank() fails.\n\nAdd a helper which unwinds all the bank creation work previously done\nand pass into it the previously allocated threshold banks array for\nfreeing.\n\n  [ bp: Massage. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/396b8e7ab2a99ddac57d3522b3da5e58cb608d37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9708f1956eeb70c86943e0bc62fa3b0101b59616","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4acb8e7f1594607bc9017ef0aacb40b24a003d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc0dd4456f9573bf8af9b4d8754433918e809e1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5f28623ceb103e13fc3d7bd45edf9818b227fd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49550","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.863","lastModified":"2025-02-26T07:01:30.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/ntfs3: provide block_invalidate_folio to fix memory leak\n\nThe ntfs3 filesystem lacks the 'invalidate_folio' method and it causes\nmemory leak. If you write to the filesystem and then unmount it, the\ncached written data are not freed and they are permanently leaked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0753245a72ec99824677586499ee2e0919164b3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/724bbe49c5e427cb077357d72d240a649f2e4054","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49551","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:30.950","lastModified":"2025-02-26T07:01:30.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: isp1760: Fix out-of-bounds array access\n\nRunning the driver through kasan gives an interesting splat:\n\n  BUG: KASAN: global-out-of-bounds in isp1760_register+0x180\/0x70c\n  Read of size 20 at addr f1db2e64 by task swapper\/0\/1\n  (...)\n  isp1760_register from isp1760_plat_probe+0x1d8\/0x220\n  (...)\n\nThis happens because the loop reading the regmap fields for the\ndifferent ISP1760 variants look like this:\n\n  for (i = 0; i < HC_FIELD_MAX; i++) { ... }\n\nMeaning it expects the arrays to be at least HC_FIELD_MAX - 1 long.\n\nHowever the arrays isp1760_hc_reg_fields[], isp1763_hc_reg_fields[],\nisp1763_hc_volatile_ranges[] and isp1763_dc_volatile_ranges[] are\ndynamically sized during compilation.\n\nFix this by putting an empty assignment to the [HC_FIELD_MAX]\nand [DC_FIELD_MAX] array member at the end of each array.\nThis will make the array one member longer than it needs to be,\nbut avoids the risk of overwriting whatever is inside\n[HC_FIELD_MAX - 1] and is simple and intuitive to read. Also\nadd comments explaining what is going on."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/26ae2c942b5702f2e43d36b2a4389cfb7d616b6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/463bddd3ff1acf4036ddb80c34a715eb99debf46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47d39cb57e8669e507d17d9e0d067d2b3e3a87ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf2558bbdce3ab1d6bcba09f354914e4515d0a2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49552","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.040","lastModified":"2025-02-26T07:01:31.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix combination of jit blinding and pointers to bpf subprogs.\n\nThe combination of jit blinding and pointers to bpf subprogs causes:\n[   36.989548] BUG: unable to handle page fault for address: 0000000100000001\n[   36.990342] #PF: supervisor instruction fetch in kernel mode\n[   36.990968] #PF: error_code(0x0010) - not-present page\n[   36.994859] RIP: 0010:0x100000001\n[   36.995209] Code: Unable to access opcode bytes at RIP 0xffffffd7.\n[   37.004091] Call Trace:\n[   37.004351]  <TASK>\n[   37.004576]  ? bpf_loop+0x4d\/0x70\n[   37.004932]  ? bpf_prog_3899083f75e4c5de_F+0xe3\/0x13b\n\nThe jit blinding logic didn't recognize that ld_imm64 with an address\nof bpf subprogram is a special instruction and proceeded to randomize it.\nBy itself it wouldn't have been an issue, but jit_subprogs() logic\nrelies on two step process to JIT all subprogs and then JIT them\nagain when addresses of all subprogs are known.\nBlinding process in the first JIT phase caused second JIT to miss\nadjustment of special ld_imm64.\n\nFix this issue by ignoring special ld_imm64 instructions that don't have\nuser controlled constants and shouldn't be blinded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b6313cf99b0d51b49aeaea98ec76ca8161ecb80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a029b02b47dd5bb87a21550d9d9a80cb4dd3f714","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d106a3e96fca30e44081eae9c27aab28fc132a46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49553","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.133","lastModified":"2025-02-26T07:01:31.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/ntfs3: validate BOOT sectors_per_clusters\n\nWhen the NTFS BOOT sectors_per_clusters field is > 0x80, it represents a\nshift value.  Make sure that the shift value is not too large before using\nit (NTFS max cluster size is 2MB).  Return -EVINVAL if it too large.\n\nThis prevents negative shift values and shift values that are larger than\nthe field size.\n\nPrevents this UBSAN error:\n\n UBSAN: shift-out-of-bounds in ..\/fs\/ntfs3\/super.c:673:16\n shift exponent -192 is negative"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4746c49b11b2403f5b5b07c6eac9e60663dcd9a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58cf68a1886d14ffdc5c892ce483a82156769e88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b6986316a2d106f6951e76db70fa4b2fde64a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3b774342fa752a5290c0de36375289dfcf4a260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49554","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.223","lastModified":"2025-02-26T07:01:31.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nzsmalloc: fix races between asynchronous zspage free and page migration\n\nThe asynchronous zspage free worker tries to lock a zspage's entire page\nlist without defending against page migration.  Since pages which haven't\nyet been locked can concurrently migrate off the zspage page list while\nlock_zspage() churns away, lock_zspage() can suffer from a few different\nlethal races.\n\nIt can lock a page which no longer belongs to the zspage and unsafely\ndereference page_private(), it can unsafely dereference a torn pointer to\nthe next page (since there's a data race), and it can observe a spurious\nNULL pointer to the next page and thus not lock all of the zspage's pages\n(since a single page migration will reconstruct the entire page list, and\ncreate_page_chain() unconditionally zeroes out each list pointer in the\nprocess).\n\nFix the races by using migrate_read_lock() in lock_zspage() to synchronize\nwith page migration."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2505a981114dcb715f8977b8433f7540854851d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3674d8a8dadd03a447dd21069d4dacfc3399b63b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ec459c8810e658401be428d3168eacfc380bdd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/645996efc2ae391246d595832aaa6f9d3cc338c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ba7b7c1dad1f6503c541778f31b33f7f62eb966","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5402fb5f71f1a725f1e55d9c6799c0c7bec308f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fae05b2314b147a78fbed1dc4c645d9a66313758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc658c083904427abbf8f18280d517ee2668677c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49555","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.313","lastModified":"2025-02-26T07:01:31.313","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_qca: Use del_timer_sync() before freeing\n\nWhile looking at a crash report on a timer list being corrupted, which\nusually happens when a timer is freed while still active. This is\ncommonly triggered by code calling del_timer() instead of\ndel_timer_sync() just before freeing.\n\nOne possible culprit is the hci_qca driver, which does exactly that.\n\nEric mentioned that wake_retrans_timer could be rearmed via the work\nqueue, so also move the destruction of the work queue before\ndel_timer_sync()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2717654ae022e6ea959a4b7b762702fe1a4690c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37d17f63d085d601011964ade7371aeebeb6ed4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4989bb03342941f2b730b37dfa38bce27b543661","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72ef98445aca568a81c2da050532500a8345ad3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db03727b4bbbbb36e6ef4cb655c670eefb6448e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49556","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.407","lastModified":"2025-02-26T07:01:31.407","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Use kzalloc for sev ioctl interfaces to prevent kernel data leak\n\nFor some sev ioctl interfaces, the length parameter that is passed maybe\nless than or equal to SEV_FW_BLOB_MAX_SIZE, but larger than the data\nthat PSP firmware returns. In this case, kmalloc will allocate memory\nthat is the size of the input rather than the size of the data.\nSince PSP firmware doesn't fully overwrite the allocated buffer, these\nsev ioctl interface may return uninitialized kernel slab memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/401bef1f95de92c3a8c6eece46e02fa88d7285ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57a01725339f9d82b099102ba2751621b1caab93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbdcc644b59e01e98c68894a9fab42b9687f42b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d22d2474e3953996f03528b84b7f52cc26a39403","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8fdb4b24097472ff6b3c0559448200d420b1418","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49557","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.503","lastModified":"2025-02-26T07:01:31.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/fpu: KVM: Set the base guest FPU uABI size to sizeof(struct kvm_xsave)\n\nSet the starting uABI size of KVM's guest FPU to 'struct kvm_xsave',\ni.e. to KVM's historical uABI size.  When saving FPU state for usersapce,\nKVM (well, now the FPU) sets the FP+SSE bits in the XSAVE header even if\nthe host doesn't support XSAVE.  Setting the XSAVE header allows the VM\nto be migrated to a host that does support XSAVE without the new host\nhaving to handle FPU state that may or may not be compatible with XSAVE.\n\nSetting the uABI size to the host's default size results in out-of-bounds\nwrites (setting the FP+SSE bits) and data corruption (that is thankfully\ncaught by KASAN) when running on hosts without XSAVE, e.g. on Core2 CPUs.\n\nWARN if the default size is larger than KVM's historical uABI size; all\nfeatures that can push the FPU size beyond the historical size must be\nopt-in.\n\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in fpu_copy_uabi_to_guest_fpstate+0x86\/0x130\n  Read of size 8 at addr ffff888011e33a00 by task qemu-build\/681\n  CPU: 1 PID: 681 Comm: qemu-build Not tainted 5.18.0-rc5-KASAN-amd64 #1\n  Hardware name:  \/DG35EC, BIOS ECG3510M.86A.0118.2010.0113.1426 01\/13\/2010\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x34\/0x45\n   print_report.cold+0x45\/0x575\n   kasan_report+0x9b\/0xd0\n   fpu_copy_uabi_to_guest_fpstate+0x86\/0x130\n   kvm_arch_vcpu_ioctl+0x72a\/0x1c50 [kvm]\n   kvm_vcpu_ioctl+0x47f\/0x7b0 [kvm]\n   __x64_sys_ioctl+0x5de\/0xc90\n   do_syscall_64+0x31\/0x50\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n   <\/TASK>\n  Allocated by task 0:\n  (stack is not available)\n  The buggy address belongs to the object at ffff888011e33800\n   which belongs to the cache kmalloc-512 of size 512\n  The buggy address is located 0 bytes to the right of\n   512-byte region [ffff888011e33800, ffff888011e33a00)\n  The buggy address belongs to the physical page:\n  page:0000000089cd4adb refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x11e30\n  head:0000000089cd4adb order:2 compound_mapcount:0 compound_pincount:0\n  flags: 0x4000000000010200(slab|head|zone=1)\n  raw: 4000000000010200 dead000000000100 dead000000000122 ffff888001041c80\n  raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000\n  page dumped because: kasan: bad access detected\n  Memory state around the buggy address:\n   ffff888011e33900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   ffff888011e33980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  >ffff888011e33a00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                     ^\n   ffff888011e33a80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n   ffff888011e33b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n  ==================================================================\n  Disabling lock debugging due to kernel taint"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9cf15ebb7dedfe2f27120743b8ea8441c99ac73c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c181acbd1a427859d5fda543b95fbae28f7f6068","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d187ba5312307d51818beafaad87d28a7d939adf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49558","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.597","lastModified":"2025-02-26T07:01:31.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: double hook unregistration in netns path\n\n__nft_release_hooks() is called from pre_netns exit path which\nunregisters the hooks, then the NETDEV_UNREGISTER event is triggered\nwhich unregisters the hooks again.\n\n[  565.221461] WARNING: CPU: 18 PID: 193 at net\/netfilter\/core.c:495 __nf_unregister_net_hook+0x247\/0x270\n[...]\n[  565.246890] CPU: 18 PID: 193 Comm: kworker\/u64:1 Tainted: G            E     5.18.0-rc7+ #27\n[  565.253682] Workqueue: netns cleanup_net\n[  565.257059] RIP: 0010:__nf_unregister_net_hook+0x247\/0x270\n[...]\n[  565.297120] Call Trace:\n[  565.300900]  <TASK>\n[  565.304683]  nf_tables_flowtable_event+0x16a\/0x220 [nf_tables]\n[  565.308518]  raw_notifier_call_chain+0x63\/0x80\n[  565.312386]  unregister_netdevice_many+0x54f\/0xb50\n\nUnregister and destroy netdev hook from netns pre_exit via kfree_rcu\nso the NETDEV_UNREGISTER path see unregistered hooks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3fac8ce48fa9fd61ee9056d3ed48b2edefca8b82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86c0154f4c3a56c5db8b9dd09e3ce885382c2c19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c413a8c8bb49cc16796371805ecb260e885bb2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3940dcf552f2393d1e8f263b386593f98abe829","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b09e6ccf0d12f9356e8e3508d3e3dce126298538","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c73955a09408e7374d9abfd0e78ce3de9cda0635","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9a43007d3f7ba76d5e7f9421094f00f2ef202f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49559","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.687","lastModified":"2025-02-26T07:01:31.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Drop WARNs that assert a triple fault never \"escapes\" from L2\n\nRemove WARNs that sanity check that KVM never lets a triple fault for L2\nescape and incorrectly end up in L1.  In normal operation, the sanity\ncheck is perfectly valid, but it incorrectly assumes that it's impossible\nfor userspace to induce KVM_REQ_TRIPLE_FAULT without bouncing through\nKVM_RUN (which guarantees kvm_check_nested_state() will see and handle\nthe triple fault).\n\nThe WARN can currently be triggered if userspace injects a machine check\nwhile L2 is active and CR4.MCE=0.  And a future fix to allow save\/restore\nof KVM_REQ_TRIPLE_FAULT, e.g. so that a synthesized triple fault isn't\nlost on migration, will make it trivially easy for userspace to trigger\nthe WARN.\n\nClearing KVM_REQ_TRIPLE_FAULT when forcibly leaving guest mode is\ntempting, but wrong, especially if\/when the request is saved\/restored,\ne.g. if userspace restores events (including a triple fault) and then\nrestores nested state (which may forcibly leave guest mode).  Ignoring\nthe fact that KVM doesn't currently provide the necessary APIs, it's\nuserspace's responsibility to manage pending events during save\/restore.\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 7 PID: 1399 at arch\/x86\/kvm\/vmx\/nested.c:4522 nested_vmx_vmexit+0x7fe\/0xd90 [kvm_intel]\n  Modules linked in: kvm_intel kvm irqbypass\n  CPU: 7 PID: 1399 Comm: state_test Not tainted 5.17.0-rc3+ #808\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n  RIP: 0010:nested_vmx_vmexit+0x7fe\/0xd90 [kvm_intel]\n  Call Trace:\n   <TASK>\n   vmx_leave_nested+0x30\/0x40 [kvm_intel]\n   vmx_set_nested_state+0xca\/0x3e0 [kvm_intel]\n   kvm_arch_vcpu_ioctl+0xf49\/0x13e0 [kvm]\n   kvm_vcpu_ioctl+0x4b9\/0x660 [kvm]\n   __x64_sys_ioctl+0x83\/0xb0\n   do_syscall_64+0x3b\/0xc0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n   <\/TASK>\n  ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45846661d10422ce9e22da21f8277540b29eca22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7de373c9b48229e428ecdb8fbde269c5a8617fd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d3a2aa0976f57320ba89baf9d57fb158dd0cd0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f476a59d5c86c02a79eef893c6da86735f2977ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49560","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.780","lastModified":"2025-02-26T07:01:31.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: check if cluster num is valid\n\nSyzbot reported slab-out-of-bounds read in exfat_clear_bitmap.\nThis was triggered by reproducer calling truncute with size 0,\nwhich causes the following trace:\n\nBUG: KASAN: slab-out-of-bounds in exfat_clear_bitmap+0x147\/0x490 fs\/exfat\/balloc.c:174\nRead of size 8 at addr ffff888115aa9508 by task syz-executor251\/365\n\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack_lvl+0x1e2\/0x24b lib\/dump_stack.c:118\n print_address_description+0x81\/0x3c0 mm\/kasan\/report.c:233\n __kasan_report mm\/kasan\/report.c:419 [inline]\n kasan_report+0x1a4\/0x1f0 mm\/kasan\/report.c:436\n __asan_report_load8_noabort+0x14\/0x20 mm\/kasan\/report_generic.c:309\n exfat_clear_bitmap+0x147\/0x490 fs\/exfat\/balloc.c:174\n exfat_free_cluster+0x25a\/0x4a0 fs\/exfat\/fatent.c:181\n __exfat_truncate+0x99e\/0xe00 fs\/exfat\/file.c:217\n exfat_truncate+0x11b\/0x4f0 fs\/exfat\/file.c:243\n exfat_setattr+0xa03\/0xd40 fs\/exfat\/file.c:339\n notify_change+0xb76\/0xe10 fs\/attr.c:336\n do_truncate+0x1ea\/0x2d0 fs\/open.c:65\n\nMove the is_valid_cluster() helper from fatent.c to a common\nheader to make it reusable in other *.c files. And add is_valid_cluster()\nto validate if cluster number is within valid range in exfat_clear_bitmap()\nand exfat_set_bitmap()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2193286402df2d9c53294f7a858d5e6fd7346e08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64ba4b15e5c045f8b746c6da5fc9be9a6b00b61d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c58b14b6f9cde9f69e7fa053ab73f6e013a7131","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82f723b8a5adf497f9e34c702a30ca7298615654","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c504167adc3248095a905fa0700a9693897cb5ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49561","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.877","lastModified":"2025-02-26T07:01:31.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: re-fetch conntrack after insertion\n\nIn case the conntrack is clashing, insertion can free skb->_nfct and\nset skb->_nfct to the already-confirmed entry.\n\nThis wasn't found before because the conntrack entry and the extension\nspace used to free'd after an rcu grace period, plus the race needs\nevents enabled to trigger."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01989d7eebb61c99bd4b88ebc8e261bd2f02caed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/04e4a11dc723c52db7a36dc58f0d69ce6426f8f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/04f9e9104c969d8ce10a4a43634f641ed082092d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56b14ecec97f39118bf85c9ac2438c5a949509ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91a36ec160ec1a0c8f5352b772dffcbb0b6023e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92a999d1963eed0df666284e20055136ceabd12f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b16bb373988da3ceb0308381634117e18b6ec60d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e97222b785e70e8973281666d709baad6523d8af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49562","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:31.970","lastModified":"2025-02-26T07:01:31.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Use __try_cmpxchg_user() to update guest PTE A\/D bits\n\nUse the recently introduced __try_cmpxchg_user() to update guest PTE A\/D\nbits instead of mapping the PTE into kernel address space.  The VM_PFNMAP\npath is broken as it assumes that vm_pgoff is the base pfn of the mapped\nVMA range, which is conceptually wrong as vm_pgoff is the offset relative\nto the file and has nothing to do with the pfn.  The horrific hack worked\nfor the original use case (backing guest memory with \/dev\/mem), but leads\nto accessing \"random\" pfns for pretty much any other VM_PFNMAP case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38b888911e8dc89b89d8147cfb1d2dbe6373bf78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8089e5e1d18402fb8152d6b6815450a36fffa9b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f122dfe4476890d60b8c679128cd2259ec96a24c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49563","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.060","lastModified":"2025-02-26T07:01:32.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - add param check for RSA\n\nReject requests with a source buffer that is bigger than the size of the\nkey. This is to prevent a possible integer underflow that might happen\nwhen copying the source scatterlist into a linear buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d6d2adce08788b7667a6e58002682ea1bbf6a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9714061423b8b24b8afb31b8eb4df977c63f19c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f993321e50ba7a8ba4f5b19939e1772a921a1c42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49564","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.150","lastModified":"2025-02-26T07:01:32.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - add param check for DH\n\nReject requests with a source buffer that is bigger than the size of the\nkey. This is to prevent a possible integer underflow that might happen\nwhen copying the source scatterlist into a linear buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2acbb8771f6ac82422886e63832ee7a0f4b1635b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76c9216833e7c20a67c987cf89719a3f01666aaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7f979ed51f96495328157df663c835b17db1e30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49565","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.240","lastModified":"2025-02-26T07:01:32.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/x86\/intel\/lbr: Fix unchecked MSR access error on HSW\n\nThe fuzzer triggers the below trace.\n\n[ 7763.384369] unchecked MSR access error: WRMSR to 0x689\n(tried to write 0x1fffffff8101349e) at rIP: 0xffffffff810704a4\n(native_write_msr+0x4\/0x20)\n[ 7763.397420] Call Trace:\n[ 7763.399881]  <TASK>\n[ 7763.401994]  intel_pmu_lbr_restore+0x9a\/0x1f0\n[ 7763.406363]  intel_pmu_lbr_sched_task+0x91\/0x1c0\n[ 7763.410992]  __perf_event_task_sched_in+0x1cd\/0x240\n\nOn a machine with the LBR format LBR_FORMAT_EIP_FLAGS2, when the TSX is\ndisabled, a TSX quirk is required to access LBR from registers.\nThe lbr_from_signext_quirk_needed() is introduced to determine whether\nthe TSX quirk should be applied. However, the\nlbr_from_signext_quirk_needed() is invoked before the\nintel_pmu_lbr_init(), which parses the LBR format information. Without\nthe correct LBR format information, the TSX quirk never be applied.\n\nMove the lbr_from_signext_quirk_needed() into the intel_pmu_lbr_init().\nChecking x86_pmu.lbr_has_tsx in the lbr_from_signext_quirk_needed() is\nnot required anymore.\n\nBoth LBR_FORMAT_EIP_FLAGS2 and LBR_FORMAT_INFO have LBR_TSX flag, but\nonly the LBR_FORMAT_EIP_FLAGS2 requirs the quirk. Update the comments\naccordingly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/625bcd0685a1612225df83468c83412fc0edb3d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0380e13502adf7dd8be4c47d622c3522aae6c63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49566","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.333","lastModified":"2025-02-26T07:01:32.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: qat - fix memory leak in RSA\n\nWhen an RSA key represented in form 2 (as defined in PKCS #1 V2.1) is\nused, some components of the private key persist even after the TFM is\nreleased.\nReplace the explicit calls to free the buffers in qat_rsa_exit_tfm()\nwith a call to qat_rsa_clear_ctx() which frees all buffers referenced in\nthe TFM context."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f967fdc09955221a1951a279481b0bf4d359941","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80a52e1ee7757b742f96bfb0d58f0c14eb6583d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a843925e0287eebb4aa808666bf22c664dfe4c53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49567","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.420","lastModified":"2025-02-26T07:01:32.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/mempolicy: fix uninit-value in mpol_rebind_policy()\n\nmpol_set_nodemask()(mm\/mempolicy.c) does not set up nodemask when\npol->mode is MPOL_LOCAL.  Check pol->mode before access\npol->w.cpuset_mems_allowed in mpol_rebind_policy()(mm\/mempolicy.c).\n\nBUG: KMSAN: uninit-value in mpol_rebind_policy mm\/mempolicy.c:352 [inline]\nBUG: KMSAN: uninit-value in mpol_rebind_task+0x2ac\/0x2c0 mm\/mempolicy.c:368\n mpol_rebind_policy mm\/mempolicy.c:352 [inline]\n mpol_rebind_task+0x2ac\/0x2c0 mm\/mempolicy.c:368\n cpuset_change_task_nodemask kernel\/cgroup\/cpuset.c:1711 [inline]\n cpuset_attach+0x787\/0x15e0 kernel\/cgroup\/cpuset.c:2278\n cgroup_migrate_execute+0x1023\/0x1d20 kernel\/cgroup\/cgroup.c:2515\n cgroup_migrate kernel\/cgroup\/cgroup.c:2771 [inline]\n cgroup_attach_task+0x540\/0x8b0 kernel\/cgroup\/cgroup.c:2804\n __cgroup1_procs_write+0x5cc\/0x7a0 kernel\/cgroup\/cgroup-v1.c:520\n cgroup1_tasks_write+0x94\/0xb0 kernel\/cgroup\/cgroup-v1.c:539\n cgroup_file_write+0x4c2\/0x9e0 kernel\/cgroup\/cgroup.c:3852\n kernfs_fop_write_iter+0x66a\/0x9f0 fs\/kernfs\/file.c:296\n call_write_iter include\/linux\/fs.h:2162 [inline]\n new_sync_write fs\/read_write.c:503 [inline]\n vfs_write+0x1318\/0x2030 fs\/read_write.c:590\n ksys_write+0x28b\/0x510 fs\/read_write.c:643\n __do_sys_write fs\/read_write.c:655 [inline]\n __se_sys_write fs\/read_write.c:652 [inline]\n __x64_sys_write+0xdb\/0x120 fs\/read_write.c:652\n do_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\n do_syscall_64+0x54\/0xd0 arch\/x86\/entry\/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nUninit was created at:\n slab_post_alloc_hook mm\/slab.h:524 [inline]\n slab_alloc_node mm\/slub.c:3251 [inline]\n slab_alloc mm\/slub.c:3259 [inline]\n kmem_cache_alloc+0x902\/0x11c0 mm\/slub.c:3264\n mpol_new mm\/mempolicy.c:293 [inline]\n do_set_mempolicy+0x421\/0xb70 mm\/mempolicy.c:853\n kernel_set_mempolicy mm\/mempolicy.c:1504 [inline]\n __do_sys_set_mempolicy mm\/mempolicy.c:1510 [inline]\n __se_sys_set_mempolicy+0x44c\/0xb60 mm\/mempolicy.c:1507\n __x64_sys_set_mempolicy+0xd8\/0x110 mm\/mempolicy.c:1507\n do_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\n do_syscall_64+0x54\/0xd0 arch\/x86\/entry\/common.c:82\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nKMSAN: uninit-value in mpol_rebind_task (2)\nhttps:\/\/syzkaller.appspot.com\/bug?id=d6eb90f952c2a5de9ea718a1b873c55cb13b59dc\n\nThis patch seems to fix below bug too.\nKMSAN: uninit-value in mpol_rebind_mm (2)\nhttps:\/\/syzkaller.appspot.com\/bug?id=f2fecd0d7013f54ec4162f60743a2b28df40926b\n\nThe uninit-value is pol->w.cpuset_mems_allowed in mpol_rebind_policy().\nWhen syzkaller reproducer runs to the beginning of mpol_new(),\n\n\t    mpol_new() mm\/mempolicy.c\n\t  do_mbind() mm\/mempolicy.c\n\tkernel_mbind() mm\/mempolicy.c\n\n`mode` is 1(MPOL_PREFERRED), nodes_empty(*nodes) is `true` and `flags`\nis 0. Then\n\n\tmode = MPOL_LOCAL;\n\t...\n\tpolicy->mode = mode;\n\tpolicy->flags = flags;\n\nwill be executed. So in mpol_set_nodemask(),\n\n\t    mpol_set_nodemask() mm\/mempolicy.c\n\t  do_mbind()\n\tkernel_mbind()\n\npol->mode is 4 (MPOL_LOCAL), that `nodemask` in `pol` is not initialized,\nwhich will be accessed in mpol_rebind_policy()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/018160ad314d75b1409129b2247b614a9f35894c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13d51565cec1aa432a6ab363edc2bbc53c6f49cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5735845906fb1d90fe597f8b503fc0a857d475e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/777e563f10e91e91130fe06bee85220d508e7b9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c5429a04ccd8dbcc3c753dab2f4126774ec28d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1f8765f68bc9bf5744b365bb9f5e0b6db93edfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaa1c5d635a6fca2043513ffb5be169f9cd17d9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddb3f0b68863bd1c5f43177eea476bce316d4993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49568","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.517","lastModified":"2025-02-26T07:01:32.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: Don't null dereference ops->destroy\n\nA KVM device cleanup happens in either of two callbacks:\n1) destroy() which is called when the VM is being destroyed;\n2) release() which is called when a device fd is closed.\n\nMost KVM devices use 1) but Book3s's interrupt controller KVM devices\n(XICS, XIVE, XIVE-native) use 2) as they need to close and reopen during\nthe machine execution. The error handling in kvm_ioctl_create_device()\nassumes destroy() is always defined which leads to NULL dereference as\ndiscovered by Syzkaller.\n\nThis adds a checks for destroy!=NULL and adds a missing release().\n\nThis is not changing kvm_destroy_devices() as devices with defined\nrelease() should have been removed from the KVM devices list by then."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/170465715a60cbb7876e6b961b21bd3225469da8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3616776bc51cd3262bb1be60cc01c72e0a1959cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4a5a79b780891c5cbdfdc6124d46fdf8d13dba1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8bc2427018826e02add7b0ed0fc625a60390ae5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e91665fbbf3ccb268b268a7d71a6513538d813ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49569","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.607","lastModified":"2025-02-26T07:01:32.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: bcm2835: bcm2835_spi_handle_err(): fix NULL pointer deref for non DMA transfers\n\nIn case a IRQ based transfer times out the bcm2835_spi_handle_err()\nfunction is called. Since commit 1513ceee70f2 (\"spi: bcm2835: Drop\ndma_pending flag\") the TX and RX DMA transfers are unconditionally\ncanceled, leading to NULL pointer derefs if ctlr->dma_tx or\nctlr->dma_rx are not set.\n\nFix the NULL pointer deref by checking that ctlr->dma_tx and\nctlr->dma_rx are valid pointers before accessing them."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/49ffa473218012e765682343de2052eb4c1f06a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ceaa684459d414992acbefb4e4c31f2dfc50641","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58466e05390043d2805685c70f55f3f59711bdf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/684896e675edd8b669fd3e9f547c5038222d85bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76668d2a2f367d25ff448e6d7087406af7d7bb2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49570","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.693","lastModified":"2025-02-26T07:01:32.693","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: gpio-xilinx: Fix integer overflow\n\nCurrent implementation is not able to configure more than 32 pins\ndue to incorrect data type. So type casting with unsigned long\nto avoid it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32c094a09d5829ad9b02cdf667569aefa8de0ea6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f16a5390640807dde420ee5ccbc4c95577aea6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e129e5486b981d324057e6986059f852658b0d00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49571","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.780","lastModified":"2025-02-26T07:01:32.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_max_reordering.\n\nWhile reading sysctl_tcp_max_reordering, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/064852663308c801861bd54789d81421fa4c2928","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46deb91ac8a790286ad6d24cf92e7ab0ab2582bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50a1d3d097503a90cf84ebe120afcde37e9c33b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e38cee24f19d19280c68f1ac8bf6790d607f60a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a11e5b3e7a59fde1a90b0eaeaa82320495cf8cae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce3731c61589ed73364a5b55ce34131762ef9b60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49572","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.877","lastModified":"2025-02-26T07:01:32.877","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_slow_start_after_idle.\n\nWhile reading sysctl_tcp_slow_start_after_idle, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e3f82a03ec8c3808e87283e12946227415706c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/369d99c2b89f54473adcf9acdf40ea562b5a6e0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b26e11b07a09b31247688bec61e2925d4a571b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41aeba4506f6b70ec7500c6fe202731a4ba29fe5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4845b5713ab18a1bb6e31d1fbb4d600240b8b691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68b6f9506747d507c7bfa374d178929b4157e8c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49573","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:32.970","lastModified":"2025-02-26T07:01:32.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_early_retrans.\n\nWhile reading sysctl_tcp_early_retrans, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11e8b013d16e5db63f8f76acceb5b86964098aaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/488d3ad98ef7cddce7054193dbae6b4349c6807d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5037ca9e4b169cc9aed0174d658c3d81fdaf8ea5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52e65865deb6a36718a463030500f16530eaab74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83767fe800a311370330d4ec83aa76093b744a80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5975f6376ce90c2c483ae36bf88c9cface4c13b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49574","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.063","lastModified":"2025-02-26T07:01:33.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_recovery.\n\nWhile reading sysctl_tcp_recovery, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/52ee7f5c4811ce6be1becd14d38ba1f8a8a0df81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92c35113c63306091df9211375eebd0abd8c2160","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a31e2d0cb5cfa2aae3144cac04f25031d5d20fb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7a492db1f7c37c758a66915908677bd8bc5d368","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8781f7cd04091744f474a2bada74772084b9dc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7d2ef837e14a971a05f60ea08c47f3fed1a36e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49575","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.157","lastModified":"2025-02-26T07:01:33.157","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_thin_linear_timeouts.\n\nWhile reading sysctl_tcp_thin_linear_timeouts, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/404c53ccdebd11f96954f4070cffac8e0b4d5cb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/492f3713b282c0e67e951cd804edd22eccc25412","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c6f2a86ca590d5187a073d987e9599985fb1c7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0f96c4f179cb3560078cefccef105e8f1701210","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc133e4f4bc225079198192623945bb872c08143","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4b0295be9a3c4260de4585fac4062e602a88ac7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49576","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.243","lastModified":"2025-02-26T07:01:33.243","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: Fix data-races around sysctl_fib_multipath_hash_fields.\n\nWhile reading sysctl_fib_multipath_hash_fields, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36f5b86f309b3b11295d087cd7433f1c897caf94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/548d6678c4a3d43667e59686665f8674b82440a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8895a9c2ac76fb9d3922fed4fe092c8ec5e5cccc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49577","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.333","lastModified":"2025-02-26T07:01:33.333","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudp: Fix a data-race around sysctl_udp_l3mdev_accept.\n\nWhile reading sysctl_udp_l3mdev_accept, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d72bb4188c708bb16758c60822fc4dda7a95174","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f2ac2d6511bb0652abf4d7388d65bb9ff1c641c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb0d28934ca10f99c47e2c6f451405d6c954fe48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f39b03bd727a8fea62e82f10fe2e0d753b9930ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcaef69c79ec222e55643e666b80b221e70fa6a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49578","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.433","lastModified":"2025-02-26T07:01:33.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip: Fix data-races around sysctl_ip_prot_sock.\n\nsysctl_ip_prot_sock is accessed concurrently, and there is always a chance\nof data-race.  So, all readers and writers need some basic protection to\navoid load\/store-tearing."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/95724fe897a4ecf2be51452ef96e818568071664","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9add240f76af6d141d2eebd3a1558a0e503a993d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b55c20f83369dd54541d9ddbe3a018a8377f451","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef699813d99cc29e6e25c9f6da7766526cc8bd6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49579","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.520","lastModified":"2025-02-26T07:01:33.520","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: Fix data-races around sysctl_fib_multipath_hash_policy.\n\nWhile reading sysctl_fib_multipath_hash_policy, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21fb844bc1dc1461f5038d655aa1a14f39e13049","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7998c12a08c97cc26660532c9f90a34bd7d8da5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/918ee6592ab9a2ff5316d06cfd4aaef60ccabec6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49580","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.610","lastModified":"2025-02-26T07:01:33.610","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: Fix a data-race around sysctl_fib_multipath_use_neigh.\n\nWhile reading sysctl_fib_multipath_use_neigh, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14e996577ed2799a1ed6ffeb71c76d63acb28444","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6727f39e99e0f545d815edebb6c94228485427ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87507bcb4f5de16bb419e9509d874f4db6c0ad0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8d345db03b4deffb4f04219a51d3b1e94171b76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e045d672ba06e1d35bacb56374d350de0ac99066","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49581","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.703","lastModified":"2025-02-26T07:01:33.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbe2net: Fix buffer overflow in be_get_module_eeprom\n\nbe_cmd_read_port_transceiver_data assumes that it is given a buffer that\nis at least PAGE_DATA_LEN long, or twice that if the module supports SFF\n8472. However, this is not always the case.\n\nFix this by passing the desired offset and length to\nbe_cmd_read_port_transceiver_data so that we only copy the bytes once."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18043da94c023f3ef09c15017bdb04e8f695ef10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/665cbe91de2f7c97c51ca8fce39aae26477c1948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ff4f9df73e5c551a72ee6034886c17e8de6596d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5a8fc0679a8fd58d47aa2ebcfc5742631f753f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8569f76df7ec5b4b51155c57523a0b356db5741","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aba8ff847f4f927ad7a1a1ee4a9f29989a1a728f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7241f679a59cfe27f92cb5c6272cb429fb1f7ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe4473fc7940f14c4a12db873b9729134c212654","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49582","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.807","lastModified":"2025-02-26T07:01:33.807","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: fix NULL pointer dereference in dsa_port_reset_vlan_filtering\n\nThe \"ds\" iterator variable used in dsa_port_reset_vlan_filtering() ->\ndsa_switch_for_each_port() overwrites the \"dp\" received as argument,\nwhich is later used to call dsa_port_vlan_filtering() proper.\n\nAs a result, switches which do enter that code path (the ones with\nvlan_filtering_is_global=true) will dereference an invalid dp in\ndsa_port_reset_vlan_filtering() after leaving a VLAN-aware bridge.\n\nUse a dedicated \"other_dp\" iterator variable to avoid this from\nhappening."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1699b4d502eda3c7ea4070debad3ee570b5091b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3240e12fe203a3a79b9814e83327106b770ed7b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49583","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.897","lastModified":"2025-02-26T07:01:33.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niavf: Fix handling of dummy receive descriptors\n\nFix memory leak caused by not handling dummy receive descriptor properly.\niavf_get_rx_buffer now sets the rx_buffer return value for dummy receive\ndescriptors. Without this patch, when the hardware writes a dummy\ndescriptor, iavf would not free the page allocated for the previous receive\nbuffer. This is an unlikely event but can still happen.\n\n[Jesse: massaged commit message]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2918419c06088f6709ceb543feb01752779ade4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6edb818732fc05fda495f5b3a749bd1cee01398b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9f49e0060301a9bfebeca76739158d0cf91cdf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6af94324911ef0846af1a5ce5e049ca736db34b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d88d59faf4e6f9cc4767664206afdb999b10ec77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49584","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:33.987","lastModified":"2025-02-26T07:01:33.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nixgbe: Add locking to prevent panic when setting sriov_numvfs to zero\n\nIt is possible to disable VFs while the PF driver is processing requests\nfrom the VF driver.  This can result in a panic.\n\nBUG: unable to handle kernel paging request at 000000000000106c\nPGD 0 P4D 0\nOops: 0000 [#1] SMP NOPTI\nCPU: 8 PID: 0 Comm: swapper\/8 Kdump: loaded Tainted: G I      --------- -\nHardware name: Dell Inc. PowerEdge R740\/06WXJT, BIOS 2.8.2 08\/27\/2020\nRIP: 0010:ixgbe_msg_task+0x4c8\/0x1690 [ixgbe]\nCode: 00 00 48 8d 04 40 48 c1 e0 05 89 7c 24 24 89 fd 48 89 44 24 10 83 ff\n01 0f 84 b8 04 00 00 4c 8b 64 24 10 4d 03 a5 48 22 00 00 <41> 80 7c 24 4c\n00 0f 84 8a 03 00 00 0f b7 c7 83 f8 08 0f 84 8f 0a\nRSP: 0018:ffffb337869f8df8 EFLAGS: 00010002\nRAX: 0000000000001020 RBX: 0000000000000000 RCX: 000000000000002b\nRDX: 0000000000000002 RSI: 0000000000000008 RDI: 0000000000000006\nRBP: 0000000000000006 R08: 0000000000000002 R09: 0000000000029780\nR10: 00006957d8f42832 R11: 0000000000000000 R12: 0000000000001020\nR13: ffff8a00e8978ac0 R14: 000000000000002b R15: ffff8a00e8979c80\nFS:  0000000000000000(0000) GS:ffff8a07dfd00000(0000) knlGS:00000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000000000106c CR3: 0000000063e10004 CR4: 00000000007726e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <IRQ>\n ? ttwu_do_wakeup+0x19\/0x140\n ? try_to_wake_up+0x1cd\/0x550\n ? ixgbevf_update_xcast_mode+0x71\/0xc0 [ixgbevf]\n ixgbe_msix_other+0x17e\/0x310 [ixgbe]\n __handle_irq_event_percpu+0x40\/0x180\n handle_irq_event_percpu+0x30\/0x80\n handle_irq_event+0x36\/0x53\n handle_edge_irq+0x82\/0x190\n handle_irq+0x1c\/0x30\n do_IRQ+0x49\/0xd0\n common_interrupt+0xf\/0xf\n\nThis can be eventually be reproduced with the following script:\n\nwhile :\ndo\n    echo 63 > \/sys\/class\/net\/<devname>\/device\/sriov_numvfs\n    sleep 1\n    echo 0 > \/sys\/class\/net\/<devname>\/device\/sriov_numvfs\n    sleep 1\ndone\n\nAdd lock when disabling SR-IOV to prevent process VF mailbox communication."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/031af9e617a6f51075d97e56fc9e712c7dde2508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16f929a5e76fd047fd8697e1e568bdd7d771955c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e53834ce541d4fe271cdcca7703e50be0a44f8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d925d2dc82cec2bcbd8625457645d8a548ab22e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b82de63f8f817b5735480293dda8e92ba8170c52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49585","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.080","lastModified":"2025-02-26T07:01:34.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_fastopen_blackhole_timeout.\n\nWhile reading sysctl_tcp_fastopen_blackhole_timeout, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/021266ec640c7a4527e6cd4b7349a512b351de1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0dc2f19d8c2636cebda7976b5ea40c6d69f0d891","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8afa5604e295046c02b79ccf9e2bbbf8d969d60e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a77a75a0e7f397550ab039f96115103e78dd5c69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49586","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.167","lastModified":"2025-02-26T07:01:34.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_fastopen.\n\nWhile reading sysctl_tcp_fastopen, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03da610696a32578fc4f986479341ce9d430df08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22938534c611136f35e2ca545bb668073ca5ef49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25d53d858a6c0b89a6e69e376c2a57c4f4c2c8cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/448ab998947996a0a451f8229f19087964cf2670","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/539d9ab79eba3974b479cad61a8688c41fe62e12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a54213318c43f4009ae158347aa6016e3b9b55a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49587","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.260","lastModified":"2025-02-26T07:01:34.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_notsent_lowat.\n\nWhile reading sysctl_tcp_notsent_lowat, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f75343584ee474303e17efe0610bdd170af1d13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55be873695ed8912eb77ff46d1d1cadf028bd0f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62e56cfeb2ae4b53ae9ca24c80f54093250ce64a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80d4d0c461674eea87f0977e12a2ecd334b9b79c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e21df688f8a75255ca9c459da39ac96300113a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1b85c5a34294f7444c13bf828e0e84b0a0eed85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9362a993886613ef0284c2a4911c6017c97d803","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd6f1284e380c377932186042ff0b5c987fb2b92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49588","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.367","lastModified":"2025-02-26T07:01:34.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_migrate_req.\n\nWhile reading sysctl_tcp_migrate_req, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4177f545895b1da08447a80692f30617154efa6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e569a11eea20a1ccebc3c4e6366bf0574a449e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcf6c6d8aeffebca66f37b17ef1b57112e5e09c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49589","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.470","lastModified":"2025-02-26T07:01:34.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigmp: Fix data-races around sysctl_igmp_qrv.\n\nWhile reading sysctl_igmp_qrv, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers.\n\nThis test can be packed into a helper, so such changes will be in the\nfollow-up series after net is merged into net-next.\n\n  qrv ?: READ_ONCE(net->ipv4.sysctl_igmp_qrv);"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ebcc62c738f68688ee7c6fec2efe5bc6d3d7e60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9eeb3a7702998bdccbfcc37997b5dd9215b9a7f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b399ffafffba39f47b731b26a5da1dc0ffc4b3ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2954671010cd1127d1ffa328c6e6f8e99930982","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c721324afc589f8ea54bae04756b150aeaae5fa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e20dd1b0e0ea15bee1e528536a0840dba972ca0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49590","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.573","lastModified":"2025-02-26T07:01:34.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigmp: Fix data-races around sysctl_igmp_llm_reports.\n\nWhile reading sysctl_igmp_llm_reports, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers.\n\nThis test can be packed into a helper, so such changes will be in the\nfollow-up series after net is merged into net-next.\n\n  if (ipv4_is_local_multicast(pmc->multiaddr) &&\n      !READ_ONCE(net->ipv4.sysctl_igmp_llm_reports))"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1656ecaddf90e2a070ec2d2404cdae3edf80faca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/260446eb8e5541402b271343a4516f2b33dec1e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46307adceb67bdf2ec38408dd9cebc378a6b5c46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/473aad9ad57ff760005377e6f45a2ad4210e08ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a84b4afaca2573ed3aed1f8854aefe3ca5a82e72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d77969e7d4ccc26bf1f414a39ef35050a83ba6d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed876e99ccf417b8bd7fd8408ba5e8b008e46cc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6da2267e71106474fbc0943dc24928b9cb79119","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49591","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.667","lastModified":"2025-02-26T07:01:34.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: microchip: ksz_common: Fix refcount leak bug\n\nIn ksz_switch_register(), we should call of_node_put() for the\nreference returned by of_get_child_by_name() which has increased\nthe refcount."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4165e02716518bbbe9c9104b39530d40928bc7ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88ec2ff42da3ac93b2437dc52fe25cd4372148e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a14bd7475452c51835dd5a0cee4c8fa48dd0b539","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49592","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.760","lastModified":"2025-02-26T07:01:34.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: fix dma queue left shift overflow issue\n\nWhen queue number is > 4, left shift overflows due to 32 bits\ninteger variable. Mask calculation is wrong for MTL_RXQ_DMA_MAP1.\n\nIf CONFIG_UBSAN is enabled, kernel dumps below warning:\n[   10.363842] ==================================================================\n[   10.363882] UBSAN: shift-out-of-bounds in \/build\/linux-intel-iotg-5.15-8e6Tf4\/\nlinux-intel-iotg-5.15-5.15.0\/drivers\/net\/ethernet\/stmicro\/stmmac\/dwmac4_core.c:224:12\n[   10.363929] shift exponent 40 is too large for 32-bit type 'unsigned int'\n[   10.363953] CPU: 1 PID: 599 Comm: NetworkManager Not tainted 5.15.0-1003-intel-iotg\n[   10.363956] Hardware name: ADLINK Technology Inc. LEC-EL\/LEC-EL, BIOS 0.15.11 12\/22\/2021\n[   10.363958] Call Trace:\n[   10.363960]  <TASK>\n[   10.363963]  dump_stack_lvl+0x4a\/0x5f\n[   10.363971]  dump_stack+0x10\/0x12\n[   10.363974]  ubsan_epilogue+0x9\/0x45\n[   10.363976]  __ubsan_handle_shift_out_of_bounds.cold+0x61\/0x10e\n[   10.363979]  ? wake_up_klogd+0x4a\/0x50\n[   10.363983]  ? vprintk_emit+0x8f\/0x240\n[   10.363986]  dwmac4_map_mtl_dma.cold+0x42\/0x91 [stmmac]\n[   10.364001]  stmmac_mtl_configuration+0x1ce\/0x7a0 [stmmac]\n[   10.364009]  ? dwmac410_dma_init_channel+0x70\/0x70 [stmmac]\n[   10.364020]  stmmac_hw_setup.cold+0xf\/0xb14 [stmmac]\n[   10.364030]  ? page_pool_alloc_pages+0x4d\/0x70\n[   10.364034]  ? stmmac_clear_tx_descriptors+0x6e\/0xe0 [stmmac]\n[   10.364042]  stmmac_open+0x39e\/0x920 [stmmac]\n[   10.364050]  __dev_open+0xf0\/0x1a0\n[   10.364054]  __dev_change_flags+0x188\/0x1f0\n[   10.364057]  dev_change_flags+0x26\/0x60\n[   10.364059]  do_setlink+0x908\/0xc40\n[   10.364062]  ? do_setlink+0xb10\/0xc40\n[   10.364064]  ? __nla_validate_parse+0x4c\/0x1a0\n[   10.364068]  __rtnl_newlink+0x597\/0xa10\n[   10.364072]  ? __nla_reserve+0x41\/0x50\n[   10.364074]  ? __kmalloc_node_track_caller+0x1d0\/0x4d0\n[   10.364079]  ? pskb_expand_head+0x75\/0x310\n[   10.364082]  ? nla_reserve_64bit+0x21\/0x40\n[   10.364086]  ? skb_free_head+0x65\/0x80\n[   10.364089]  ? security_sock_rcv_skb+0x2c\/0x50\n[   10.364094]  ? __cond_resched+0x19\/0x30\n[   10.364097]  ? kmem_cache_alloc_trace+0x15a\/0x420\n[   10.364100]  rtnl_newlink+0x49\/0x70\n\nThis change fixes MTL_RXQ_DMA_MAP1 mask issue and channel\/queue\nmapping warning.\n\nBugLink: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=216195"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/508d86ead36cbd8dfb60773a33276790d668c473","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/573768dede0e2b7de38ecbc11cb3ee47643902dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/613b065ca32e90209024ec4a6bb5ca887ee70980","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c687a893f5cae5ca40d189635602e93af9bab73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3ac79f38d354b10925824899cdbd2caadce55ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad2febdfbd01e1d092a08bfdba92ede79ea05ff3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e846bde09677fa3b203057846620b7ed96540f5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49593","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.853","lastModified":"2025-02-26T07:01:34.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_probe_interval.\n\nWhile reading sysctl_tcp_probe_interval, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a85388f1d94a9f8b5a529118a2c5eaa0520d85c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73a11588751a2c13f25d9da8117efc9a79b1843f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80dabd089086e6553b7acfcff2ec223bdada87a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b14cc8afbbcbc6dce4797913c0b85266b897f541","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3798d3519eda9c409bb0815b0102f27ec42468d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c61aede097d350d890fa1edc9521b0072e14a0b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6b6f027e2854a51f345a5e3e808d7a88001d4f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49594","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:34.947","lastModified":"2025-02-26T07:01:34.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_mtu_probe_floor.\n\nWhile reading sysctl_tcp_mtu_probe_floor, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/033963b220633ed1602d458e7e4ac06afa9fefb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e92d4423615a5257d0d871fc067aa561f597deb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc36c37f5fe066c4708e623ead96dc8f57224bf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5bece4df6090395f891110ef52a6f82d16685db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2ecbf3f0aa88277d43908c53b99399d55729ff9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49595","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.040","lastModified":"2025-02-26T07:01:35.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_probe_threshold.\n\nWhile reading sysctl_tcp_probe_threshold, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/44768749980d53bc01980d9c060f736808d11af0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92c0aa4175474483d6cf373314343d4e624e882a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96900fa61777402eb5056269d8000aace33a8b6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b5dc7ad6da1373d3c60d4b869d688f996e5d219","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b04817c94fbd285a967d9b830b274fe9998c9c0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d452ce36f2d4c402fa3f5275c9677f80166e7fc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f524c3e7f6cdad66b3b6a912cef47b656f8b0de3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa5fb2cf9393db898772db8cb897ed5fd265eb78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49596","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.133","lastModified":"2025-02-26T07:01:35.133","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_min_snd_mss.\n\nWhile reading sysctl_tcp_min_snd_mss, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d8a39feb58910a7f7746b1770ee5578cc551fe6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fc9357282df055e30990b29f4b7afa53ab42cdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78eb166cdefcc3221c8c7c1e2d514e91a2eb5014","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97992e8feff33b3ae154a113ec398546bbacda80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdb96b69f5909ffcdd6f1e0902219fc6d7689ff7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49597","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.220","lastModified":"2025-02-26T07:01:35.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_base_mss.\n\nWhile reading sysctl_tcp_base_mss, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30b73edc1d2459ba2c71cb58fbf84a1a6e640fbf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d7dea651b7fe0322be95054f64e3711afccc543","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/514d2254c7b8aa2d257f5ffc79f0d96be2d6bfda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88d78bc097cd8ebc6541e93316c9d9bf651b13e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ca18116bc16ec31b9a3ce28ea1350badfa36128","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49598","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.310","lastModified":"2025-02-26T07:01:35.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_mtu_probing.\n\nWhile reading sysctl_tcp_mtu_probing, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/77a04845f0d28a3561494a5f3121488470a968a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e8fc428a7f680f1c4994a40e52d7f95a9a93038","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aabe9438fdfe004e021d5a206227ec105dbe2416","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0920ca09d9ce19980c8391b9002455baa9c1417","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f47d00e077e7d61baf69e46dde3210c886360207","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f966773e13cdd3f12baa90071b7b660f6c633ccb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49599","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.403","lastModified":"2025-02-26T07:01:35.403","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix data-races around sysctl_tcp_l3mdev_accept.\n\nWhile reading sysctl_tcp_l3mdev_accept, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08a75f10679470552a3a443f9aefd1399604d31d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d9c81833dec46ccb52a1d0db970fefb7c4fa071","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d38d86b818104cf88961f3aebea34da89364a8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ba9cd43b5776c27d25e5a32dde9e80bdeb1c6a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49600","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.497","lastModified":"2025-02-26T07:01:35.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip: Fix a data-race around sysctl_ip_autobind_reuse.\n\nWhile reading sysctl_ip_autobind_reuse, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0db232765887d9807df8bcb7b6f29b2871539eab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/611ba70e5aca252ef43374dda97ed4cf1c47a07c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87ceaa199a72c5856d49a030941fabcd5c3928d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa7cdcf9b28d13aac1eeb34b948db8a18e041341","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49601","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.603","lastModified":"2025-02-26T07:01:35.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp\/dccp: Fix a data-race around sysctl_tcp_fwmark_accept.\n\nWhile reading sysctl_tcp_fwmark_accept, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13207f9485b5de68decf296ceb0046f5eabb2485","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a0008f9df59451d0a17806c1ee1a19857032fa8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45fc82706a97242539d6b841ddd7a077ec20757b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/526d8cf8824f613c72dba2155542295e70135f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7386602a2fe2f6192477e8ede291a815da09d81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abf70de2ec026ae8d7da4e79bec61888a880e00b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf3134feffe61b7a0e21f60a04743f8da0958b53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4f65615db7fca3df9f7e79eadf937e6ddb03c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49602","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.717","lastModified":"2025-02-26T07:01:35.717","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip: Fix a data-race around sysctl_fwmark_reflect.\n\nWhile reading sysctl_fwmark_reflect, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ee76fe01ff3c0b4efaa500aecc90d7c8d3a8860","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25a635a67c830766110410fea88ec4e6ee29684b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e7a1be3e68deef250ad43cc91f7bb8d7d758b48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85d0b4dbd74b95cc492b1f4e34497d3f894f5d9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9096edcf4854289f92252e086cf6e498c7f8c21d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a475ecc9ad919aa3ebdd4e4a6ee612b793bf74b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dccf8a67f30e18980d13f07006e5a536bbd1e136","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc92e3b4bebfdd986ef1d2c5019f236837b0b982","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49603","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.817","lastModified":"2025-02-26T07:01:35.817","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip: Fix data-races around sysctl_ip_fwd_update_priority.\n\nWhile reading sysctl_ip_fwd_update_priority, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11038fa781ab916535c53351537b22d6d405667d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/351f81f7d7185d18a9ff76f8f8c2fa8c4eea563b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bf9e18d9a5e99e3c83482973557e9f047b051e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcc03369d3277ae075ed421f0c8bf4adb5e65b74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49604","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:35.910","lastModified":"2025-02-26T07:01:35.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nip: Fix data-races around sysctl_ip_fwd_use_pmtu.\n\nWhile reading sysctl_ip_fwd_use_pmtu, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60c158dc7b1f0558f6cadd5b50d0386da0000d50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7828309df0f89419a9349761a37c7d1b0da45697","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93fbc06da1d819f3981a7bd7928c3641ea67b364","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b96ed5ccb09ae71103023ed13acefb194f609794","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e364b5f6ffbfc457a997ad09a7baa16c19581edc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb15262128b793e4b1d1c4514d3e6d19c3959764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49605","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.000","lastModified":"2025-02-26T07:01:36.000","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigc: Reinstate IGC_REMOVED logic and implement it properly\n\nThe initially merged version of the igc driver code (via commit\n146740f9abc4, \"igc: Add support for PF\") contained the following\nIGC_REMOVED checks in the igc_rd32\/wr32() MMIO accessors:\n\n\tu32 igc_rd32(struct igc_hw *hw, u32 reg)\n\t{\n\t\tu8 __iomem *hw_addr = READ_ONCE(hw->hw_addr);\n\t\tu32 value = 0;\n\n\t\tif (IGC_REMOVED(hw_addr))\n\t\t\treturn ~value;\n\n\t\tvalue = readl(&hw_addr[reg]);\n\n\t\t\/* reads should not return all F's *\/\n\t\tif (!(~value) && (!reg || !(~readl(hw_addr))))\n\t\t\thw->hw_addr = NULL;\n\n\t\treturn value;\n\t}\n\nAnd:\n\n\t#define wr32(reg, val) \\\n\tdo { \\\n\t\tu8 __iomem *hw_addr = READ_ONCE((hw)->hw_addr); \\\n\t\tif (!IGC_REMOVED(hw_addr)) \\\n\t\t\twritel((val), &hw_addr[(reg)]); \\\n\t} while (0)\n\nE.g. igb has similar checks in its MMIO accessors, and has a similar\nmacro E1000_REMOVED, which is implemented as follows:\n\n\t#define E1000_REMOVED(h) unlikely(!(h))\n\nThese checks serve to detect and take note of an 0xffffffff MMIO read\nreturn from the device, which can be caused by a PCIe link flap or some\nother kind of PCI bus error, and to avoid performing MMIO reads and\nwrites from that point onwards.\n\nHowever, the IGC_REMOVED macro was not originally implemented:\n\n\t#ifndef IGC_REMOVED\n\t#define IGC_REMOVED(a) (0)\n\t#endif \/* IGC_REMOVED *\/\n\nThis led to the IGC_REMOVED logic to be removed entirely in a\nsubsequent commit (commit 3c215fb18e70, \"igc: remove IGC_REMOVED\nfunction\"), with the rationale that such checks matter only for\nvirtualization and that igc does not support virtualization -- but a\nPCIe device can become detached even without virtualization being in\nuse, and without proper checks, a PCIe bus error affecting an igc\nadapter will lead to various NULL pointer dereferences, as the first\naccess after the error will set hw->hw_addr to NULL, and subsequent\naccesses will blindly dereference this now-NULL pointer.\n\nThis patch reinstates the IGC_REMOVED checks in igc_rd32\/wr32(), and\nimplements IGC_REMOVED the way it is done for igb, by checking for the\nunlikely() case of hw_addr being NULL.  This change prevents the oopses\nseen when a PCIe link flap occurs on an igc adapter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16cb6717f4f42487ef10583eb8bc98e7d1e33d65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70965b6e5c03aa70cc754af1226b9f9cde0c4bf3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77836dbe35382aaf8108489060c5c89530c77494","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c1ddcee5311f3315096217881d2dbe47cc683f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e75b73081f1ec169518773626c2ff3950476660b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49606","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.093","lastModified":"2025-02-26T07:01:36.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/irdma: Fix sleep from invalid context BUG\n\nTaking the qos_mutex to process RoCEv2 QP's on netdev events causes a\nkernel splat.\n\nFix this by removing the handling for RoCEv2 in\nirdma_cm_teardown_connections that uses the mutex. This handling is only\nneeded for iWARP to avoid having connections established while the link is\ndown or having connections remain functional after the IP address is\nremoved.\n\n  BUG: sleeping function called from invalid context at kernel\/locking\/mutex.\n  Call Trace:\n  kernel: dump_stack+0x66\/0x90\n  kernel: ___might_sleep.cold.92+0x8d\/0x9a\n  kernel: mutex_lock+0x1c\/0x40\n  kernel: irdma_cm_teardown_connections+0x28e\/0x4d0 [irdma]\n  kernel: ? check_preempt_curr+0x7a\/0x90\n  kernel: ? select_idle_sibling+0x22\/0x3c0\n  kernel: ? select_task_rq_fair+0x94c\/0xc90\n  kernel: ? irdma_exec_cqp_cmd+0xc27\/0x17c0 [irdma]\n  kernel: ? __wake_up_common+0x7a\/0x190\n  kernel: irdma_if_notify+0x3cc\/0x450 [irdma]\n  kernel: ? sched_clock_cpu+0xc\/0xb0\n  kernel: irdma_inet6addr_event+0xc6\/0x150 [irdma]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cae7e519032e4b4672cb9204d5586a441924364","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4c5115140ed1833197bad9a6b80265840ff427f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc0315564d6eec91c716d314b743321be24c70b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49607","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.180","lastModified":"2025-02-26T07:01:36.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/core: Fix data race between perf_event_set_output() and perf_mmap_close()\n\nYang Jihing reported a race between perf_event_set_output() and\nperf_mmap_close():\n\n\tCPU1\t\t\t\t\tCPU2\n\n\tperf_mmap_close(e2)\n\t  if (atomic_dec_and_test(&e2->rb->mmap_count)) \/\/ 1 - > 0\n\t    detach_rest = true\n\n\t\t\t\t\t\tioctl(e1, IOC_SET_OUTPUT, e2)\n\t\t\t\t\t\t  perf_event_set_output(e1, e2)\n\n\t  ...\n\t  list_for_each_entry_rcu(e, &e2->rb->event_list, rb_entry)\n\t    ring_buffer_attach(e, NULL);\n\t    \/\/ e1 isn't yet added and\n\t    \/\/ therefore not detached\n\n\t\t\t\t\t\t    ring_buffer_attach(e1, e2->rb)\n\t\t\t\t\t\t      list_add_rcu(&e1->rb_entry,\n\t\t\t\t\t\t\t\t   &e2->rb->event_list)\n\nAfter this; e1 is attached to an unmapped rb and a subsequent\nperf_mmap() will loop forever more:\n\n\tagain:\n\t\tmutex_lock(&e->mmap_mutex);\n\t\tif (event->rb) {\n\t\t\t...\n\t\t\tif (!atomic_inc_not_zero(&e->rb->mmap_count)) {\n\t\t\t\t...\n\t\t\t\tmutex_unlock(&e->mmap_mutex);\n\t\t\t\tgoto again;\n\t\t\t}\n\t\t}\n\nThe loop in perf_mmap_close() holds e2->mmap_mutex, while the attach\nin perf_event_set_output() holds e1->mmap_mutex. As such there is no\nserialization to avoid this race.\n\nChange perf_event_set_output() to take both e1->mmap_mutex and\ne2->mmap_mutex to alleviate that problem. Additionally, have the loop\nin perf_mmap() detach the rb directly, this avoids having to wait for\nthe concurrent perf_mmap_close() to get around to doing it to make\nprogress."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17f5417194136517ee9bbd6511249e5310e5617c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bbd868099287ff9027db59029b502fcfa2202a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43128b3eee337824158f34da6648163d2f2fb937","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68e3c69803dada336893640110cb87221bb01dcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98c3c8fd0d4c560e0f8335b79c407bbf7fc9462c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9391ff7a7c5f113d6f2bf6621d49110950de49c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da3c256e2d0ebc87c7db0c605c9692b6f1722074","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f836f9ac95df15f1e0af4beb0ec20021e8c91998","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49608","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.270","lastModified":"2025-02-26T07:01:36.270","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: ralink: Check for null return of devm_kcalloc\n\nBecause of the possible failure of the allocation, data->domains might\nbe NULL pointer and will cause the dereference of the NULL pointer\nlater.\nTherefore, it might be better to check it and directly return -ENOMEM\nwithout releasing data manually if fails, because the comment of the\ndevm_kmalloc() says \"Memory allocated with this function is\nautomatically freed on driver detach.\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13596e6c9e541e90e5fc2c52b23f08b951370da9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44016a85419ca0d4f1e4d0127b330f8e4e2a57d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5595d30c4dc27d939635c3188c68203b6ece1711","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5694b162f275fb9a9f89422701b2b963be11e496","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6194c021496addc11763d1ffa89ce5751889fe3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b821e8e406d5650e587b7ac624ac24e9b780a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49609","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.363","lastModified":"2025-02-26T07:01:36.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npower\/reset: arm-versatile: Fix refcount leak in versatile_reboot_probe\n\nof_find_matching_node_and_match() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/493ceca3271316e74639c89ff8ac35883de64256","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49fa778ee044b00471dd9ccae5f6a121fffea1ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6689754b121bd487f99680280102b3a5cd7374af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71ab83ac65e2d671552374123bf920c1d698335a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78bdf732cf5d74d1c6ecda06830a91f80a4aef6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80192eff64eee9b3bc0594a47381937b94b9d65a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9ed3ad3a8d1dfbc829d86edb3236873a315db11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4d224eec96a18fa8959512cd9e5b6a50bd16a41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49610","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.463","lastModified":"2025-02-26T07:01:36.463","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Prevent RSB underflow before vmenter\n\nOn VMX, there are some balanced returns between the time the guest's\nSPEC_CTRL value is written, and the vmenter.\n\nBalanced returns (matched by a preceding call) are usually ok, but it's\nat least theoretically possible an NMI with a deep call stack could\nempty the RSB before one of the returns.\n\nFor maximum paranoia, don't allow *any* returns (balanced or otherwise)\nbetween the SPEC_CTRL write and the vmenter.\n\n  [ bp: Fix 32-bit build. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07853adc29a058c5fd143c14e5ac528448a72ed9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afd743f6dde87296c6f3414706964c491bb85862","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49611","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.553","lastModified":"2025-02-26T07:01:36.553","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/speculation: Fill RSB on vmexit for IBRS\n\nPrevent RSB underflow\/poisoning attacks with RSB.  While at it, add a\nbunch of comments to attempt to document the current state of tribal\nknowledge about RSB attacks and what exactly is being mitigated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17a9fc4a7b91f8599223631bb6ae6416bc0de1c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d323b99ff5c8c57005184056d65f6af5b0479d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d7f72b6e1bc630bec7e4cd51814bc2b092bf153","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c38306e2e9257af4af2819aa287a4711ff36329","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d5cff499a6d740c91ff37963907e0e983c37f0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9756bba28470722dacb79ffce554336dd1f6a6cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f744b88dfc201bf8092833ec70b23c720188b527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49612","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.653","lastModified":"2025-02-26T07:01:36.653","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npower: supply: core: Fix boundary conditions in interpolation\n\nThe functions power_supply_temp2resist_simple and power_supply_ocv2cap_simple\nhandle boundary conditions incorrectly.\nThe change was introduced in a4585ba2050f460f749bbaf2b67bd56c41e30283\n(\"power: supply: core: Use library interpolation\").\nThere are two issues: First, the lines \"high = i - 1\" and \"high = i\" in ocv2cap\nhave the wrong order compared to temp2resist. As a consequence, ocv2cap\nsets high=-1 if ocv>table[0].ocv, which causes an out-of-bounds read.\nSecond, the logic of temp2resist is also not correct.\nConsider the case table[] = {{20, 100}, {10, 80}, {0, 60}}.\nFor temp=5, we expect a resistance of 70% by interpolation.\nHowever, temp2resist sets high=low=2 and returns 60."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/093d27bb6f2d1963f927ef59c9a2d37059175426","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a762cee5d933fe4e2e1b773d60fc74fb8248d8c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49613","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.747","lastModified":"2025-02-26T07:01:36.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nserial: 8250: Fix PM usage_count for console handover\n\nWhen console is enabled, univ8250_console_setup() calls\nserial8250_console_setup() before .dev is set to uart_port. Therefore,\nit will not call pm_runtime_get_sync(). Later, when the actual driver\nis going to take over univ8250_console_exit() is called. As .dev is\nalready set, serial8250_console_exit() makes pm_runtime_put_sync() call\nwith usage count being zero triggering PM usage count warning\n(extra debug for univ8250_console_setup(), univ8250_console_exit(), and\nserial8250_register_ports()):\n\n[    0.068987] univ8250_console_setup ttyS0 nodev\n[    0.499670] printk: console [ttyS0] enabled\n[    0.717955] printk: console [ttyS0] printing thread started\n[    1.960163] serial8250_register_ports assigned dev for ttyS0\n[    1.976830] printk: console [ttyS0] disabled\n[    1.976888] printk: console [ttyS0] printing thread stopped\n[    1.977073] univ8250_console_exit ttyS0 usage:0\n[    1.977075] serial8250 serial8250: Runtime PM usage count underflow!\n[    1.977429] dw-apb-uart.6: ttyS0 at MMIO 0x4010006000 (irq = 33, base_baud = 115200) is a 16550A\n[    1.977812] univ8250_console_setup ttyS0 usage:2\n[    1.978167] printk: console [ttyS0] printing thread started\n[    1.978203] printk: console [ttyS0] enabled\n\nTo fix the issue, call pm_runtime_get_sync() in\nserial8250_register_ports() as soon as .dev is set for an uart_port\nif it has console enabled.\n\nThis problem became apparent only recently because 82586a721595 (\"PM:\nruntime: Avoid device usage count underflows\") added the warning\nprintout. I confirmed this problem also occurs with v5.18 (w\/o the\nwarning printout, obviously)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/190ce5cdc55d1b66ea582ac2be6fd5a72e3cc486","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5df66302f03f87ae8953785a882d78e911f00c55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9cb6fabc90102f9e61fe35bd0160db88f4f53b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9b11229b79c0fb2100b5bb4628a101b1d37fbf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49614","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.837","lastModified":"2025-02-26T07:01:36.837","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme: use struct group for generic command dwords\n\nThis will allow the trace event to know the full size of the data\nintended to be copied and silence read overflow checks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d8b35387e01cab217dc4691a6f770cbb6ed852c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c629dc9609dc43492a7bc8060cc6120875bf096","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49615","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:36.927","lastModified":"2025-02-26T07:01:36.927","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: rt711-sdca: fix kernel NULL pointer dereference when IO error\n\nThe initial settings will be written before the codec probe function.\nBut, the rt711->component doesn't be assigned yet.\nIf IO error happened during initial settings operations, it will cause the kernel panic.\nThis patch changed component->dev to slave->dev to fix this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1df793d479bef546569fc2e409ff8bb3f0fb8e99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/269be8b2907378adf72d7347cfa43ef230351a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bb71133cae88d3003a3490b97864af76533072b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49616","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.017","lastModified":"2025-02-26T07:01:37.017","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: rt7*-sdw: harden jack_detect_handler\n\nRealtek headset codec drivers typically check if the card is\ninstantiated before proceeding with the jack detection.\n\nThe rt700, rt711 and rt711-sdca are however missing a check on the\ncard pointer, which can lead to NULL dereferences encountered in\ndriver bind\/unbind tests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0484271ab0ce50649329fa9dc23c50853c5b26a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/07a606e1389a63b61cb8cd591026f30529117573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d75b73ec6d6b705cca528b36d8315e43e8d7fa5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49617","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.107","lastModified":"2025-02-26T07:01:37.107","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: sof_sdw: handle errors on card registration\n\nIf the card registration fails, typically because of deferred probes,\nthe device properties added for headset codecs are not removed, which\nleads to kernel oopses in driver bind\/unbind tests.\n\nWe already clean-up the device properties when the card is removed,\nthis code can be moved as a helper and called upon card registration\nerrors."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09bca0ffc95c50369f1345d80ecfaca51864126f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2556ce6b35ae0fc72000a4daa21ded12665e2f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe154c4ff376bc31041c6441958a08243df09c99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49618","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.197","lastModified":"2025-02-26T07:01:37.197","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: aspeed: Fix potential NULL dereference in aspeed_pinmux_set_mux()\n\npdesc could be null but still dereference pdesc->name and it will lead to\na null pointer access. So we move a null check before dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3cb392b64304a05bf647e2e44efacd9a1f3c3c6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84a85d3fef2e75b1fe9fc2af6f5267122555a1ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e162a24f1dd06c0dcae71f2565c9f3da2827b98e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1e38532f4b2f0f3b460e938a2e7076c3bed5ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49619","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.290","lastModified":"2025-02-26T07:01:37.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sfp: fix memory leak in sfp_probe()\n\nsfp_probe() allocates a memory chunk from sfp with sfp_alloc(). When\ndevm_add_action() fails, sfp is not freed, which leads to a memory leak.\n\nWe should use devm_add_action_or_reset() instead of devm_add_action()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a18d802d65cf662644fd1d369c86d84a5630652","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1545bc727625ea6e8decd717e5d1e8cc704ccf8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/204543581a2f26bb3b997a304c0bd06926ba7f15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67dc32542a1fb7790d0853cf4a5cf859ac6a2002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ec5a97f327a89031fce6cfc3e95543c53936638","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ede990cfc42775bd0141e21f37ee365dcaeeb50f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f22ddc8a5278d7fb6369a0aeb0d8775a0aefaaee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49620","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.387","lastModified":"2025-02-26T07:01:37.387","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tipc: fix possible refcount leak in tipc_sk_create()\n\nFree sk in case tipc_sk_insert() fails."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00aff3590fc0a73bddd3b743863c14e76fd35c0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b2957fc09fe1ac7f07f40dd50dd5f93e3f3a7a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4919d82f7041157a421ca9bf39a78551d5ad8a1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/638fa20b618b2bbcf86da71231624cc82121a036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bc9e7f70bc57d8f02ffea2a42094281effb15ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/833ecd0eae76eadf81d6d747bb5bc992d1151867","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef488669b2652bde5b6ee5a409a5b048a2a50db4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efa78f2ae363428525fb4981bb63c555ee79f3c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49621","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.487","lastModified":"2025-02-26T07:01:37.487","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: pmac32-cpufreq: Fix refcount leak bug\n\nIn pmac_cpufreq_init_MacRISC3(), we need to add corresponding\nof_node_put() for the three node pointers whose refcount have\nbeen incremented by of_find_node_by_name()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37c16fc2cb13a13f3c0193bfc6f2edef7d7df7d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ea9dbf7c2f436952bca331c6f5d72f75aca224e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4513018d0bd739097570d26a7760551cba3deb56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4585890ab2dbf455d80e254d3d859d4c1e357920","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f242486bf46d314b2e3838cc64b56f008a3c4d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57289b6601fe78c09921599b042a0b430fb420ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dda30f81c751b01cd71f2cfaeef26ad4393b1d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd7567d4b6cf187fdfa55f003a9e461ee629e36","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49622","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.580","lastModified":"2025-02-26T07:01:37.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: avoid skb access on nf_stolen\n\nWhen verdict is NF_STOLEN, the skb might have been freed.\n\nWhen tracing is enabled, this can result in a use-after-free:\n1. access to skb->nf_trace\n2. access to skb->mark\n3. computation of trace id\n4. dump of packet payload\n\nTo avoid 1, keep a cached copy of skb->nf_trace in the\ntrace state struct.\nRefresh this copy whenever verdict is != STOLEN.\n\nAvoid 2 by skipping skb->mark access if verdict is STOLEN.\n\n3 is avoided by precomputing the trace id.\n\nOnly dump the packet when verdict is not \"STOLEN\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0016d5d46d7440729a3132f61a8da3bf7f84e2ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e34b9ed96ce3b06c79bf884009b16961ca478f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49623","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.663","lastModified":"2025-02-26T07:01:37.663","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/xive\/spapr: correct bitmap allocation size\n\nkasan detects access beyond the end of the xibm->bitmap allocation:\n\nBUG: KASAN: slab-out-of-bounds in _find_first_zero_bit+0x40\/0x140\nRead of size 8 at addr c00000001d1d0118 by task swapper\/0\/1\n\nCPU: 0 PID: 1 Comm: swapper\/0 Not tainted 5.19.0-rc2-00001-g90df023b36dd #28\nCall Trace:\n[c00000001d98f770] [c0000000012baab8] dump_stack_lvl+0xac\/0x108 (unreliable)\n[c00000001d98f7b0] [c00000000068faac] print_report+0x37c\/0x710\n[c00000001d98f880] [c0000000006902c0] kasan_report+0x110\/0x354\n[c00000001d98f950] [c000000000692324] __asan_load8+0xa4\/0xe0\n[c00000001d98f970] [c0000000011c6ed0] _find_first_zero_bit+0x40\/0x140\n[c00000001d98f9b0] [c0000000000dbfbc] xive_spapr_get_ipi+0xcc\/0x260\n[c00000001d98fa70] [c0000000000d6d28] xive_setup_cpu_ipi+0x1e8\/0x450\n[c00000001d98fb30] [c000000004032a20] pSeries_smp_probe+0x5c\/0x118\n[c00000001d98fb60] [c000000004018b44] smp_prepare_cpus+0x944\/0x9ac\n[c00000001d98fc90] [c000000004009f9c] kernel_init_freeable+0x2d4\/0x640\n[c00000001d98fd90] [c0000000000131e8] kernel_init+0x28\/0x1d0\n[c00000001d98fe10] [c00000000000cd54] ret_from_kernel_thread+0x5c\/0x64\n\nAllocated by task 0:\n kasan_save_stack+0x34\/0x70\n __kasan_kmalloc+0xb4\/0xf0\n __kmalloc+0x268\/0x540\n xive_spapr_init+0x4d0\/0x77c\n pseries_init_irq+0x40\/0x27c\n init_IRQ+0x44\/0x84\n start_kernel+0x2a4\/0x538\n start_here_common+0x1c\/0x20\n\nThe buggy address belongs to the object at c00000001d1d0118\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 0 bytes inside of\n 8-byte region [c00000001d1d0118, c00000001d1d0120)\n\nThe buggy address belongs to the physical page:\npage:c00c000000074740 refcount:1 mapcount:0 mapping:0000000000000000 index:0xc00000001d1d0558 pfn:0x1d1d\nflags: 0x7ffff000000200(slab|node=0|zone=0|lastcpupid=0x7ffff)\nraw: 007ffff000000200 c00000001d0003c8 c00000001d0003c8 c00000001d010480\nraw: c00000001d1d0558 0000000001e1000a 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n c00000001d1d0000: fc 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n c00000001d1d0080: fc fc 00 fc fc fc fc fc fc fc fc fc fc fc fc fc\n>c00000001d1d0100: fc fc fc 02 fc fc fc fc fc fc fc fc fc fc fc fc\n                            ^\n c00000001d1d0180: fc fc fc fc 04 fc fc fc fc fc fc fc fc fc fc fc\n c00000001d1d0200: fc fc fc fc fc 04 fc fc fc fc fc fc fc fc fc fc\n\nThis happens because the allocation uses the wrong unit (bits) when it\nshould pass (BITS_TO_LONGS(count) * sizeof(long)) or equivalent. With small\nnumbers of bits, the allocated object can be smaller than sizeof(long),\nwhich results in invalid accesses.\n\nUse bitmap_zalloc() to allocate and initialize the irq bitmap, paired with\nbitmap_free() for consistency."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10f2cd373e65bcd3be8f3cdc71c330c25763dfd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19fc5bb93c6bbdce8292b4d7eed04e2fa118d2fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99d1c36bddd93919072b5a51a89297bbb5ad6a6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49624","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.753","lastModified":"2025-02-26T07:01:37.753","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atlantic: remove aq_nic_deinit() when resume\n\naq_nic_deinit() has been called while suspending, so we don't have to call\nit again on resume.\nActually, call it again leads to another hang issue when resuming from\nS3.\n\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992345] Call Trace:\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992346] <TASK>\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992348] aq_nic_deinit+0xb4\/0xd0 [atlantic]\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992356] aq_pm_thaw+0x7f\/0x100 [atlantic]\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992362] pci_pm_resume+0x5c\/0x90\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992366] ? pci_pm_thaw+0x80\/0x80\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992368] dpm_run_callback+0x4e\/0x120\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992371] device_resume+0xad\/0x200\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992373] async_resume+0x1e\/0x40\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992374] async_run_entry_fn+0x33\/0x120\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992377] process_one_work+0x220\/0x3c0\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992380] worker_thread+0x4d\/0x3f0\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992382] ? process_one_work+0x3c0\/0x3c0\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992384] kthread+0x12a\/0x150\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992386] ? set_kthread_struct+0x40\/0x40\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992387] ret_from_fork+0x22\/0x30\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992391] <\/TASK>\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992392] ---[ end trace 1ec8c79604ed5e0d ]---\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992394] PM: dpm_run_callback(): pci_pm_resume+0x0\/0x90 returns -110\nJul 8 03:09:44 u-Precision-7865-Tower kernel: [ 5910.992397] atlantic 0000:02:00.0: PM: failed to resume async: error -110"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e15c51fefaffaf9f72255eaef4fada05055e4c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58c90993933e7a76305519bc70da8c0cd2907c1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/702419db7ded2e3686fbc05040b61d7428d611d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2978d0124f26e453ed30fda6a37f62d8c7f19cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49625","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.847","lastModified":"2025-02-26T07:01:37.847","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix kernel panic when creating VF\n\nWhen creating VFs a kernel panic can happen when calling to\nefx_ef10_try_update_nic_stats_vf.\n\nWhen releasing a DMA coherent buffer, sometimes, I don't know in what\nspecific circumstances, it has to unmap memory with vunmap. It is\ndisallowed to do that in IRQ context or with BH disabled. Otherwise, we\nhit this line in vunmap, causing the crash:\n  BUG_ON(in_interrupt());\n\nThis patch reenables BH to release the buffer.\n\nLog messages when the bug is hit:\n kernel BUG at mm\/vmalloc.c:2727!\n invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n CPU: 6 PID: 1462 Comm: NetworkManager Kdump: loaded Tainted: G          I      --------- ---  5.14.0-119.el9.x86_64 #1\n Hardware name: Dell Inc. PowerEdge R740\/06WXJT, BIOS 2.8.2 08\/27\/2020\n RIP: 0010:vunmap+0x2e\/0x30\n ...skip...\n Call Trace:\n  __iommu_dma_free+0x96\/0x100\n  efx_nic_free_buffer+0x2b\/0x40 [sfc]\n  efx_ef10_try_update_nic_stats_vf+0x14a\/0x1c0 [sfc]\n  efx_ef10_update_stats_vf+0x18\/0x40 [sfc]\n  efx_start_all+0x15e\/0x1d0 [sfc]\n  efx_net_open+0x5a\/0xe0 [sfc]\n  __dev_open+0xe7\/0x1a0\n  __dev_change_flags+0x1d7\/0x240\n  dev_change_flags+0x21\/0x60\n  ...skip..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16662524ec5da801fb78a1afcaf6e782f1cf103a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68e5f32f0de9594629ff9e599294d9801c6187de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82bcb730f856086f033e6c04082eb4503d4c2fa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada74c5539eba06cf8b47d068f92e0b3963a9a6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b82e4ad58a7fb72456503958a93060f87896e629","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9072305270579a9d6afc9b926166231e5b1a7c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9840212a9c00507347c703f4fdeda16400407e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da346adcf5573fd8663cabfdfe8371009629a906","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49626","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:37.937","lastModified":"2025-02-26T07:01:37.937","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix use after free when disabling sriov\n\nUse after free is detected by kfence when disabling sriov. What was read\nafter being freed was vf->pci_dev: it was freed from pci_disable_sriov\nand later read in efx_ef10_sriov_free_vf_vports, called from\nefx_ef10_sriov_free_vf_vswitching.\n\nSet the pointer to NULL at release time to not trying to read it later.\n\nReproducer and dmesg log (note that kfence doesn't detect it every time):\n$ echo 1 > \/sys\/class\/net\/enp65s0f0np0\/device\/sriov_numvfs\n$ echo 0 > \/sys\/class\/net\/enp65s0f0np0\/device\/sriov_numvfs\n\n BUG: KFENCE: use-after-free read in efx_ef10_sriov_free_vf_vswitching+0x82\/0x170 [sfc]\n\n Use-after-free read at 0x00000000ff3c1ba5 (in kfence-#224):\n  efx_ef10_sriov_free_vf_vswitching+0x82\/0x170 [sfc]\n  efx_ef10_pci_sriov_disable+0x38\/0x70 [sfc]\n  efx_pci_sriov_configure+0x24\/0x40 [sfc]\n  sriov_numvfs_store+0xfe\/0x140\n  kernfs_fop_write_iter+0x11c\/0x1b0\n  new_sync_write+0x11f\/0x1b0\n  vfs_write+0x1eb\/0x280\n  ksys_write+0x5f\/0xe0\n  do_syscall_64+0x5c\/0x80\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\n kfence-#224: 0x00000000edb8ef95-0x00000000671f5ce1, size=2792, cache=kmalloc-4k\n\n allocated by task 6771 on cpu 10 at 3137.860196s:\n  pci_alloc_dev+0x21\/0x60\n  pci_iov_add_virtfn+0x2a2\/0x320\n  sriov_enable+0x212\/0x3e0\n  efx_ef10_sriov_configure+0x67\/0x80 [sfc]\n  efx_pci_sriov_configure+0x24\/0x40 [sfc]\n  sriov_numvfs_store+0xba\/0x140\n  kernfs_fop_write_iter+0x11c\/0x1b0\n  new_sync_write+0x11f\/0x1b0\n  vfs_write+0x1eb\/0x280\n  ksys_write+0x5f\/0xe0\n  do_syscall_64+0x5c\/0x80\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\n freed by task 6771 on cpu 12 at 3170.991309s:\n  device_release+0x34\/0x90\n  kobject_cleanup+0x3a\/0x130\n  pci_iov_remove_virtfn+0xd9\/0x120\n  sriov_disable+0x30\/0xe0\n  efx_ef10_pci_sriov_disable+0x57\/0x70 [sfc]\n  efx_pci_sriov_configure+0x24\/0x40 [sfc]\n  sriov_numvfs_store+0xfe\/0x140\n  kernfs_fop_write_iter+0x11c\/0x1b0\n  new_sync_write+0x11f\/0x1b0\n  vfs_write+0x1eb\/0x280\n  ksys_write+0x5f\/0xe0\n  do_syscall_64+0x5c\/0x80\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3199e34912d84cdfb8a93a984c5ae5c73fb13e84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58d93e9d160c0de6d867c7eb4c2206671a351eb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c854ae512b89229aeee93849e9bd4c115b37909","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcad880865bfb421885364b1f0c7351280fe2b97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2240500817b3b4b996cdf2a461a3a5679f49b94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9e75bb22a26e391f189f5a5133dd63dcb57fdaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e435c4aeeaa073091f7f3b7735af2ef5c97d63f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebe41da5d47ac0fff877e57bd14c54dccf168827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49627","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.030","lastModified":"2025-02-26T07:01:38.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nima: Fix potential memory leak in ima_init_crypto()\n\nOn failure to allocate the SHA1 tfm, IMA fails to initialize and exits\nwithout freeing the ima_algo_array. Add the missing kfree() for\nima_algo_array to avoid the potential memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/067d2521874135267e681c19d42761c601d503d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/601ae26aa2802a4c10c94d7388a99eabdbefab2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/830de9667b3ada0a75a3f098dfc7159709fe397b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1d9702ceb4a091da6bee380627596d1fba09274","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49628","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.117","lastModified":"2025-02-26T07:01:38.117","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: fix leaks in probe\n\nThese two error paths should clean up before returning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/23aa6d5088e3bd65de77c5c307237b9937f8b48a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd91bc60f305610401b2196bedb573693d6c8e46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4bd3202a2b4194ab6c0ce61628095d54f994db4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49629","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.200","lastModified":"2025-02-26T07:01:38.200","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnexthop: Fix data-races around nexthop_compat_mode.\n\nWhile reading nexthop_compat_mode, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d17723afea3ae8c9f245c9bbd2ba5945b77e812","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a51040d4b120f3520df64fb0b9c63b31d69bea9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae3054f6fbccc90f14ecd6cf9b2c09a2401c64fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdf00bf24bef9be1ca641a6390fd5487873e0d2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49630","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.290","lastModified":"2025-02-26T07:01:38.290","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: Fix a data-race around sysctl_tcp_ecn_fallback.\n\nWhile reading sysctl_tcp_ecn_fallback, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/12b8d9ca7e678abc48195294494f1815b555d658","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ec3d6c2626ee6e1b36b7bd006873a271406ba61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bcf7339f2cf70ea4461df6ea045d1aadfabfa11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49631","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.380","lastModified":"2025-02-26T07:01:38.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nraw: Fix a data-race around sysctl_raw_l3mdev_accept.\n\nWhile reading sysctl_raw_l3mdev_accept, it can be changed concurrently.\nThus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/038a87b3e460d2ee579c8b1bd3890d816d6687b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dace014928e6e385363032d359a04dee9158af0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46e9c46203fd4676720ddca0fef7eff26826648e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab5adca2e17d6595f3fc0e25ccb6bcbe2e01ca4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc9540ba5b3652c473af7e54892a48cdced87983","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49632","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.470","lastModified":"2025-02-26T07:01:38.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nicmp: Fix a data-race around sysctl_icmp_errors_use_inbound_ifaddr.\n\nWhile reading sysctl_icmp_errors_use_inbound_ifaddr, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its reader."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d2efabce81db7eed1c98fa1a3f203f0edd738ac3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de9490c32bc10020efdd1509689a28f197d6dfb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9617844e4d5d6331dbce3fb19a24e5bda201e58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49633","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.560","lastModified":"2025-02-26T07:01:38.560","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nicmp: Fix data-races around sysctl_icmp_echo_enable_probe.\n\nWhile reading sysctl_icmp_echo_enable_probe, it can be changed\nconcurrently.  Thus, we need to add READ_ONCE() to its readers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05c615033174f1d19374f42285ccd8e9af13e427","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a2f7083cc6cb72dade9a63699ca352fad26d1cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cce955efa0ab81f7fb72e22beed372054c86005c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49634","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.647","lastModified":"2025-02-26T07:01:38.647","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix data-races in proc_dou8vec_minmax().\n\nA sysctl variable is accessed concurrently, and there is always a chance\nof data-race.  So, all readers and writers need some basic protection to\navoid load\/store-tearing.\n\nThis patch changes proc_dou8vec_minmax() to use READ_ONCE() and\nWRITE_ONCE() internally to fix data-races on the sysctl side.  For now,\nproc_dou8vec_minmax() itself is tolerant to a data-race, but we still\nneed to add annotations on the other subsystem's side."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5f776daef0b5354615ec4b4234cd9539ca05f273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7dee5d7747a69aa2be41f04c6a7ecfe3ac8cdf18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e58b02e445463065b4078bf621561da75197853f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f177b382c33900d0e5a9766493c11a1074076f78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49635","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.733","lastModified":"2025-02-26T07:01:38.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/selftests: fix subtraction overflow bug\n\nOn some machines hole_end can be small enough to cause subtraction\noverflow. On the other side (addr + 2 * min_alignment) can overflow\nin case of mock tests. This patch should handle both cases.\n\n(cherry picked from commit ab3edc679c552a466e4bf0b11af3666008bd65a2)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/333991c4e66b3d4b5613315f18016da80344f659","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8997d2d6b8d764e12489f1af2a1ce1d7384ca2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49636","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.827","lastModified":"2025-02-26T07:01:38.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvlan: fix memory leak in vlan_newlink()\n\nBlamed commit added back a bug I fixed in commit 9bbd917e0bec\n(\"vlan: fix memory leak in vlan_dev_set_egress_priority\")\n\nIf a memory allocation fails in vlan_changelink() after other allocations\nsucceeded, we need to call vlan_dev_free_egress_priority()\nto free all allocated memory because after a failed ->newlink()\nwe do not call any methods like ndo_uninit() or dev->priv_destructor().\n\nIn following example, if the allocation for last element 2000:2001 fails,\nwe need to free eight prior allocations:\n\nip link add link dummy0 dummy0.100 type vlan id 100 \\\n\tegress-qos-map 1:2 2:3 3:4 4:5 5:6 6:7 7:8 8:9 2000:2001\n\nsyzbot report was:\n\nBUG: memory leak\nunreferenced object 0xffff888117bd1060 (size 32):\ncomm \"syz-executor408\", pid 3759, jiffies 4294956555 (age 34.090s)\nhex dump (first 32 bytes):\n09 00 00 00 00 a0 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\nbacktrace:\n[<ffffffff83fc60ad>] kmalloc include\/linux\/slab.h:600 [inline]\n[<ffffffff83fc60ad>] vlan_dev_set_egress_priority+0xed\/0x170 net\/8021q\/vlan_dev.c:193\n[<ffffffff83fc6628>] vlan_changelink+0x178\/0x1d0 net\/8021q\/vlan_netlink.c:128\n[<ffffffff83fc67c8>] vlan_newlink+0x148\/0x260 net\/8021q\/vlan_netlink.c:185\n[<ffffffff838b1278>] rtnl_newlink_create net\/core\/rtnetlink.c:3363 [inline]\n[<ffffffff838b1278>] __rtnl_newlink+0xa58\/0xdc0 net\/core\/rtnetlink.c:3580\n[<ffffffff838b1629>] rtnl_newlink+0x49\/0x70 net\/core\/rtnetlink.c:3593\n[<ffffffff838ac66c>] rtnetlink_rcv_msg+0x21c\/0x5c0 net\/core\/rtnetlink.c:6089\n[<ffffffff839f9c37>] netlink_rcv_skb+0x87\/0x1d0 net\/netlink\/af_netlink.c:2501\n[<ffffffff839f8da7>] netlink_unicast_kernel net\/netlink\/af_netlink.c:1319 [inline]\n[<ffffffff839f8da7>] netlink_unicast+0x397\/0x4c0 net\/netlink\/af_netlink.c:1345\n[<ffffffff839f9266>] netlink_sendmsg+0x396\/0x710 net\/netlink\/af_netlink.c:1921\n[<ffffffff8384dbf6>] sock_sendmsg_nosec net\/socket.c:714 [inline]\n[<ffffffff8384dbf6>] sock_sendmsg+0x56\/0x80 net\/socket.c:734\n[<ffffffff8384e15c>] ____sys_sendmsg+0x36c\/0x390 net\/socket.c:2488\n[<ffffffff838523cb>] ___sys_sendmsg+0x8b\/0xd0 net\/socket.c:2542\n[<ffffffff838525b8>] __sys_sendmsg net\/socket.c:2571 [inline]\n[<ffffffff838525b8>] __do_sys_sendmsg net\/socket.c:2580 [inline]\n[<ffffffff838525b8>] __se_sys_sendmsg net\/socket.c:2578 [inline]\n[<ffffffff838525b8>] __x64_sys_sendmsg+0x78\/0xf0 net\/socket.c:2578\n[<ffffffff845ad8d5>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n[<ffffffff845ad8d5>] do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n[<ffffffff8460006a>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c43069bb1097dd6cc1cf0f7c43a36d1f7b3910b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72a0b329114b1caa8e69dfa7cdad1dd3c69b8602","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49637","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:38.920","lastModified":"2025-02-26T07:01:38.920","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: Fix a data-race around sysctl_fib_sync_mem.\n\nWhile reading sysctl_fib_sync_mem, it can be changed concurrently.\nSo, we need to add READ_ONCE() to avoid a data-race."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/190cd4ff128373271e065afb20f1d2247b3f10c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/418b191d5f223a8cb6cab09eae1f72c04ba6adf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73318c4b7dbd0e781aaababff17376b2894745c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c1acd98fb221dc0d847451b9ab86319f8b9916c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9be8aac91960ea32fd0e874758c9afee665c57d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49638","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.010","lastModified":"2025-02-26T07:01:39.010","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nicmp: Fix data-races around sysctl.\n\nWhile reading icmp sysctl variables, they can be changed concurrently.\nSo, we need to add READ_ONCE() to avoid data-races."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cba7ca667ceb06934746ddd9833a25847bde81d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1740e5922fbb705637ae9fa5203db132fc45f9f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48d7ee321ea5182c6a70782aa186422a70e67e22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53ecd09ef2fb35fa69667ae8e414ef6b00fd3bf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/798c2cf57c63ab39c8aac24d6a3d50f4fa5eeb06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e088ceb73c24ab4774da391d54a6426f4bfaefce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2828e8c605853f71267825c9415437c0a93e4f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edeec63b13c252193d626c2a48d7a2f0e7016dc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49639","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.100","lastModified":"2025-02-26T07:01:39.100","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncipso: Fix data-races around sysctl.\n\nWhile reading cipso sysctl variables, they can be changed concurrently.\nSo, we need to add READ_ONCE() to avoid data-races."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07b0caf8aeb9b82e6ecc6c292a3e47c7fcdb1148","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e41a0f73ccb9be112a80bde3804a771633caaef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2764f82bbc158d106693ae3ced3675cf4b963b35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59e26906b89cc35bb54476498772b45cbc32323f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c321e99d2725d11f7e6a4ebd9ce752259f0bae81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca26ca5e2f3eeb3e6fe699cd6effa3b4b2aa8698","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd44f04b9214adb68ef5684ae87a81ba03632250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe2a35fa2c4f9c8ce5ef970eb927031387f9446a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49640","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.193","lastModified":"2025-02-26T07:01:39.193","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix data races in proc_douintvec_minmax().\n\nA sysctl variable is accessed concurrently, and there is always a chance\nof data-race.  So, all readers and writers need some basic protection to\navoid load\/store-tearing.\n\nThis patch changes proc_douintvec_minmax() to use READ_ONCE() and\nWRITE_ONCE() internally to fix data-races on the sysctl side.  For now,\nproc_douintvec_minmax() itself is tolerant to a data-race, but we still\nneed to add annotations on the other subsystem's side."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d3b559df3ed39258737789aae2ae7973d205bc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40e0477a7371d101c55b69d9c32a7a1ed82ab5ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b60eddf98b9716651069dfda296c91311a7a6293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3a2144b3b6bf9ecafd91087c8b8b48171ec19df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49641","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.280","lastModified":"2025-02-26T07:01:39.280","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsysctl: Fix data races in proc_douintvec().\n\nA sysctl variable is accessed concurrently, and there is always a chance\nof data-race.  So, all readers and writers need some basic protection to\navoid load\/store-tearing.\n\nThis patch changes proc_douintvec() to use READ_ONCE() and WRITE_ONCE()\ninternally to fix data-races on the sysctl side.  For now, proc_douintvec()\nitself is tolerant to a data-race, but we still need to add annotations on\nthe other subsystem's side."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4762b532ec9539755aab61445d5da6e1926ccb99","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/630c76850d554d7140232e71b5d1663e88cffb54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d335db59f7fb3353f56e52371f1ee796ae9c8f09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5d54714e329f646bd7af4994fc427d88ee68936","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49642","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.373","lastModified":"2025-02-26T07:01:39.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: dwc-qos: Disable split header for Tegra194\n\nThere is a long-standing issue with the Synopsys DWC Ethernet driver\nfor Tegra194 where random system crashes have been observed [0]. The\nproblem occurs when the split header feature is enabled in the stmmac\ndriver. In the bad case, a larger than expected buffer length is\nreceived and causes the calculation of the total buffer length to\noverflow. This results in a very large buffer length that causes the\nkernel to crash. Why this larger buffer length is received is not clear,\nhowever, the feedback from the NVIDIA design team is that the split\nheader feature is not supported for Tegra194. Therefore, disable split\nheader support for Tegra194 to prevent these random crashes from\noccurring.\n\n[0] https:\/\/lore.kernel.org\/linux-tegra\/b0b17697-f23e-8fa5-3757-604a86f3a095@nvidia.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/029c1c2059e9c4b38f97a06204cdecd10cfbeb8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2968830c9b47ce093237483c6207c61065712386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cc8edc571b871d974b3289868553f9ce544aba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfa4caf3e881ad6dd366c903c34f1c7f21b857ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5c315a787652c35045044877a249f7d5c8a4104","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49643","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.467","lastModified":"2025-02-26T07:01:39.467","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nima: Fix a potential integer overflow in ima_appraise_measurement\n\nWhen the ima-modsig is enabled, the rc passed to evm_verifyxattr() may be\nnegative, which may cause the integer overflow problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/388f3df7c3c8b7f2a32b9ae0a9b2f9f6ad3b1b77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/640cea4c2839a821adfbb703b590a5928abe9286","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/831e190175f10652be93b08436cc7bf2e62e4bb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8d5d81940938b5f6c0f495ca9538e7740416f30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2ee2cfc4aa85ff6a2a3b198a3a524ec54e3d999","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49644","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.567","lastModified":"2025-02-26T07:01:39.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915: fix a possible refcount leak in intel_dp_add_mst_connector()\n\nIf drm_connector_init fails, intel_connector_free will be called to take\ncare of proper free. So it is necessary to drop the refcount of port\nbefore intel_connector_free.\n\n(cherry picked from commit cea9ed611e85d36a05db52b6457bf584b7d969e2)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/505114dda5bbfd07f4ce9a2df5b7d8ef5f2a1218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/592f3bad00b7e2a95a6fb7a4f9e742c061c9c3c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72f231b9a88abcfac9f5ddaa1a0aacb3f9f87ba5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85144df9ff4652816448369de76897c57cbb1b93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a91522b4279bebb098106a19b91f82b9c3213be9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49645","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.677","lastModified":"2025-02-26T07:01:39.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panfrost: Fix shrinker list corruption by madvise IOCTL\n\nCalling madvise IOCTL twice on BO causes memory shrinker list corruption\nand crashes kernel because BO is already on the list and it's added to\nthe list again, while BO should be removed from the list before it's\nre-added. Fix it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0581613df7f9a4c5fac096ce1d5fb15b7b994240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1807d8867402a58b831a7fc16832747ff559a0d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/393594aad55179eb761af41533d8d1d6eb4543b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fc33eaaa979d112d10fea729edcd2a2e21aa912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f036392edd9c49090781d8cca26ad6557a63bae4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49646","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.777","lastModified":"2025-02-26T07:01:39.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: fix queue selection for mesh\/OCB interfaces\n\nWhen using iTXQ, the code assumes that there is only one vif queue for\nbroadcast packets, using the BE queue. Allowing non-BE queue marking\nviolates that assumption and txq->ac == skb_queue_mapping is no longer\nguaranteed. This can cause issues with queue handling in the driver and\nalso causes issues with the recent ATF change, resulting in an AQL\nunderflow warning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41ecab279a70dced9005f4d55fa0fcde8938603f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/444be5a02b77f3b7a8ac9c1a0b074fbb3bd89cd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50e2ab39291947b6c6c7025cf01707c270fcde59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a9df31017999197b6e60535940f2f2fe1bd3b0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e013ea2a51a94b903b396a8dff531a07d470335d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49647","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.863","lastModified":"2025-02-26T07:01:39.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncgroup: Use separate src\/dst nodes when preloading css_sets for migration\n\nEach cset (css_set) is pinned by its tasks. When we're moving tasks around\nacross csets for a migration, we need to hold the source and destination\ncsets to ensure that they don't go away while we're moving tasks about. This\nis done by linking cset->mg_preload_node on either the\nmgctx->preloaded_src_csets or mgctx->preloaded_dst_csets list. Using the\nsame cset->mg_preload_node for both the src and dst lists was deemed okay as\na cset can't be both the source and destination at the same time.\n\nUnfortunately, this overloading becomes problematic when multiple tasks are\ninvolved in a migration and some of them are identity noop migrations while\nothers are actually moving across cgroups. For example, this can happen with\nthe following sequence on cgroup1:\n\n #1> mkdir -p \/sys\/fs\/cgroup\/misc\/a\/b\n #2> echo $$ > \/sys\/fs\/cgroup\/misc\/a\/cgroup.procs\n #3> RUN_A_COMMAND_WHICH_CREATES_MULTIPLE_THREADS &\n #4> PID=$!\n #5> echo $PID > \/sys\/fs\/cgroup\/misc\/a\/b\/tasks\n #6> echo $PID > \/sys\/fs\/cgroup\/misc\/a\/cgroup.procs\n\nthe process including the group leader back into a. In this final migration,\nnon-leader threads would be doing identity migration while the group leader\nis doing an actual one.\n\nAfter #3, let's say the whole process was in cset A, and that after #4, the\nleader moves to cset B. Then, during #6, the following happens:\n\n 1. cgroup_migrate_add_src() is called on B for the leader.\n\n 2. cgroup_migrate_add_src() is called on A for the other threads.\n\n 3. cgroup_migrate_prepare_dst() is called. It scans the src list.\n\n 4. It notices that B wants to migrate to A, so it tries to A to the dst\n    list but realizes that its ->mg_preload_node is already busy.\n\n 5. and then it notices A wants to migrate to A as it's an identity\n    migration, it culls it by list_del_init()'ing its ->mg_preload_node and\n    putting references accordingly.\n\n 6. The rest of migration takes place with B on the src list but nothing on\n    the dst list.\n\nThis means that A isn't held while migration is in progress. If all tasks\nleave A before the migration finishes and the incoming task pins it, the\ncset will be destroyed leading to use-after-free.\n\nThis is caused by overloading cset->mg_preload_node for both src and dst\npreload lists. We wanted to exclude the cset from the src list but ended up\ninadvertently excluding it from the dst list too.\n\nThis patch fixes the issue by separating out cset->mg_preload_node into\n->mg_src_preload_node and ->mg_dst_preload_node, so that the src and dst\npreloadings don't interfere with each other."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05f7658210d1d331e8dd4cb6e7bbbe3df5f5ac27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/07fd5b6cdf3cc30bfde8fe0f644771688be04447","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e41774b564befa6d271e8d5086bf870d617a4e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54aee4e5ce8c21555286a6333e46c1713880cf93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7657e3958535d101a24ab4400f9b8062b9107cc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad44e05f3e016bdcb1ad25af35ade5b5f41ccd68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cec2bbdcc14fbaa6b95ee15a7c423b05d97038be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49648","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:39.957","lastModified":"2025-02-26T07:01:39.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing\/histograms: Fix memory leak problem\n\nThis reverts commit 46bbe5c671e06f070428b9be142cc4ee5cedebac.\n\nAs commit 46bbe5c671e0 (\"tracing: fix double free\") said, the\n\"double free\" problem reported by clang static analyzer is:\n  > In parse_var_defs() if there is a problem allocating\n  > var_defs.expr, the earlier var_defs.name is freed.\n  > This free is duplicated by free_var_defs() which frees\n  > the rest of the list.\n\nHowever, if there is a problem allocating N-th var_defs.expr:\n  + in parse_var_defs(), the freed 'earlier var_defs.name' is\n    actually the N-th var_defs.name;\n  + then in free_var_defs(), the names from 0th to (N-1)-th are freed;\n\n                        IF ALLOCATING PROBLEM HAPPENED HERE!!! -+\n                                                                 \\\n                                                                  |\n          0th           1th                 (N-1)-th      N-th    V\n          +-------------+-------------+-----+-------------+-----------\nvar_defs: | name | expr | name | expr | ... | name | expr | name | \/\/\/\n          +-------------+-------------+-----+-------------+-----------\n\nThese two frees don't act on same name, so there was no \"double free\"\nproblem before. Conversely, after that commit, we get a \"memory leak\"\nproblem because the above \"N-th var_defs.name\" is not freed.\n\nIf enable CONFIG_DEBUG_KMEMLEAK and inject a fault at where the N-th\nvar_defs.expr allocated, then execute on shell like:\n  $ echo 'hist:key=call_site:val=$v1,$v2:v1=bytes_req,v2=bytes_alloc' > \\\n\/sys\/kernel\/debug\/tracing\/events\/kmem\/kmalloc\/trigger\n\nThen kmemleak reports:\n  unreferenced object 0xffff8fb100ef3518 (size 8):\n    comm \"bash\", pid 196, jiffies 4295681690 (age 28.538s)\n    hex dump (first 8 bytes):\n      76 31 00 00 b1 8f ff ff                          v1......\n    backtrace:\n      [<0000000038fe4895>] kstrdup+0x2d\/0x60\n      [<00000000c99c049a>] event_hist_trigger_parse+0x206f\/0x20e0\n      [<00000000ae70d2cc>] trigger_process_regex+0xc0\/0x110\n      [<0000000066737a4c>] event_trigger_write+0x75\/0xd0\n      [<000000007341e40c>] vfs_write+0xbb\/0x2a0\n      [<0000000087fde4c2>] ksys_write+0x59\/0xd0\n      [<00000000581e9cdf>] do_syscall_64+0x3a\/0x80\n      [<00000000cf3b065c>] entry_SYSCALL_64_after_hwframe+0x46\/0xb0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22eeff55679d9e7c0f768c79bfbd83e2f8142d89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d453eb5e1eec89971aa5b3262857ee26cfdffd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78a1400c42ee11197eb1f0f85ba51df9a4fdfff0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7edc3945bdce9c39198a10d6129377a5c53559c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb622d5580b9e2ff694f62da6410618bd73853cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecc6dec12c33aa92c086cd702af9f544ddaf3c75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49649","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.050","lastModified":"2025-02-26T07:01:40.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxen\/netback: avoid entering xenvif_rx_next_skb() with an empty rx queue\n\nxenvif_rx_next_skb() is expecting the rx queue not being empty, but\nin case the loop in xenvif_rx_action() is doing multiple iterations,\nthe availability of another skb in the rx queue is not being checked.\n\nThis can lead to crashes:\n\n[40072.537261] BUG: unable to handle kernel NULL pointer dereference at 0000000000000080\n[40072.537407] IP: xenvif_rx_skb+0x23\/0x590 [xen_netback]\n[40072.537534] PGD 0 P4D 0\n[40072.537644] Oops: 0000 [#1] SMP NOPTI\n[40072.537749] CPU: 0 PID: 12505 Comm: v1-c40247-q2-gu Not tainted 4.12.14-122.121-default #1 SLE12-SP5\n[40072.537867] Hardware name: HP ProLiant DL580 Gen9\/ProLiant DL580 Gen9, BIOS U17 11\/23\/2021\n[40072.537999] task: ffff880433b38100 task.stack: ffffc90043d40000\n[40072.538112] RIP: e030:xenvif_rx_skb+0x23\/0x590 [xen_netback]\n[40072.538217] RSP: e02b:ffffc90043d43de0 EFLAGS: 00010246\n[40072.538319] RAX: 0000000000000000 RBX: ffffc90043cd7cd0 RCX: 00000000000000f7\n[40072.538430] RDX: 0000000000000000 RSI: 0000000000000006 RDI: ffffc90043d43df8\n[40072.538531] RBP: 000000000000003f R08: 000077ff80000000 R09: 0000000000000008\n[40072.538644] R10: 0000000000007ff0 R11: 00000000000008f6 R12: ffffc90043ce2708\n[40072.538745] R13: 0000000000000000 R14: ffffc90043d43ed0 R15: ffff88043ea748c0\n[40072.538861] FS: 0000000000000000(0000) GS:ffff880484600000(0000) knlGS:0000000000000000\n[40072.538988] CS: e033 DS: 0000 ES: 0000 CR0: 0000000080050033\n[40072.539088] CR2: 0000000000000080 CR3: 0000000407ac8000 CR4: 0000000000040660\n[40072.539211] Call Trace:\n[40072.539319] xenvif_rx_action+0x71\/0x90 [xen_netback]\n[40072.539429] xenvif_kthread_guest_rx+0x14a\/0x29c [xen_netback]\n\nFix that by stopping the loop in case the rx queue becomes empty."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a071aefd6414af5a20321ab58a0557b81993687","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7425479d20f9e96f7c3ec8e8a93fe0d7478724cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94e8100678889ab428e68acadf042de723f094b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b99174ac57fe5d8867448c03b23828e63f24cb1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9c32a6886af79d6e0ad87a7b01800ed079cdd02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0fcceb5f3f1ec197c014fe218c2f28108cacd27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5320c6a27aa975aff740f9cb481dcbde48f4348","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0b5c819b062df8bf5f2acf4697e3871cb3722da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49650","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.150","lastModified":"2025-02-26T07:01:40.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: qcom: bam_dma: fix runtime PM underflow\n\nCommit dbad41e7bb5f (\"dmaengine: qcom: bam_dma: check if the runtime pm enabled\")\ncaused unbalanced pm_runtime_get\/put() calls when the bam is\ncontrolled remotely. This commit reverts it and just enables pm_runtime\nin all cases, the clk_* functions already just nop when the clock is NULL.\n\nAlso clean up a bit by removing unnecessary bamclk null checks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ac9c3dd0d6fe293cd5044cfad10bec27d171e4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f6ded79068cac8cff41d5d5632564165d98ee12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b702a1077b51fcb39507cc3bd39206f539319a96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49651","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.237","lastModified":"2025-02-26T07:01:40.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsrcu: Tighten cleanup_srcu_struct() GP checks\n\nCurrently, cleanup_srcu_struct() checks for a grace period in progress,\nbut it does not check for a grace period that has not yet started but\nwhich might start at any time.  Such a situation could result in a\nuse-after-free bug, so this commit adds a check for a grace period that\nis needed but not yet started to cleanup_srcu_struct()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ed00760203d8018bee042fbfe8e076579be2c2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e997dda6502eefbc1032d6b0da7b353c53344b07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49652","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.323","lastModified":"2025-02-26T07:01:40.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: Fix refcount leak in ti_dra7_xbar_route_allocate\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not needed anymore.\n\nAdd missing of_node_put() in to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37147e22cd8dfc0412495cb361708836157a4486","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3bd66010398871807c1cebacee07d60ded1b1402","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/452b9dfd7aca96befce22634fadb111737f22bbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61b4ef19c346dc21ab1d4f39f5c412e3037b2bdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b31ab132561c7f1b6459039152b8d09e44eb3565","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5a817f8d62e9e13280928f3756e54854ae4962e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c132fe78ad7b4ce8b5d49a501a15c29d08eeb23a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb9813d7eae917acd34436160a278b8b5d48ca53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49653","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.420","lastModified":"2025-02-26T07:01:40.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: piix4: Fix a memory leak in the EFCH MMIO support\n\nThe recently added support for EFCH MMIO regions introduced a memory\nleak in that code path. The leak is caused by the fact that\nrelease_resource() merely removes the resource from the tree but does\nnot free its memory. We need to call release_mem_region() instead,\nwhich does free the memory. As a nice side effect, this brings back\nsome symmetry between the legacy and MMIO paths."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8ad59b397f86a4d8014966fdc0552095a0c4fb2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3263e4cf8265f0c9eb0ed8a9b50f132c7a42e19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2bf1a6480e8d44658a8ac3bdcec081238873212","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49654","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.510","lastModified":"2025-02-26T07:01:40.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: qca8k: reset cpu port on MTU change\n\nIt was discovered that the Documentation lacks of a fundamental detail\non how to correctly change the MAX_FRAME_SIZE of the switch.\n\nIn fact if the MAX_FRAME_SIZE is changed while the cpu port is on, the\nswitch panics and cease to send any packet. This cause the mgmt ethernet\nsystem to not receive any packet (the slow fallback still works) and\nmakes the device not reachable. To recover from this a switch reset is\nrequired.\n\nTo correctly handle this, turn off the cpu ports before changing the\nMAX_FRAME_SIZE and turn on again after the value is applied."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/188c798f3c2554fa0d7147e9b97baf144b817019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1993f5a06736ada59dd54b50dc96755a38796ee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/386228c694bf1e7a7688e44412cb33500b0ac585","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49655","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.600","lastModified":"2025-02-26T07:01:40.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfscache: Fix invalidation\/lookup race\n\nIf an NFS file is opened for writing and closed, fscache_invalidate() will\nbe asked to invalidate the file - however, if the cookie is in the\nLOOKING_UP state (or the CREATING state), then request to invalidate\ndoesn't get recorded for fscache_cookie_state_machine() to do something\nwith.\n\nFix this by making __fscache_invalidate() set a flag if it sees the cookie\nis in the LOOKING_UP state to indicate that we need to go to invalidation.\nNote that this requires a count on the n_accesses counter for the state\nmachine, which that will release when it's done.\n\nfscache_cookie_state_machine() then shifts to the INVALIDATING state if it\nsees the flag.\n\nWithout this, an nfs file can get corrupted if it gets modified locally and\nthen read locally as the cache contents may not get updated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/85e4ea1049c70fb99de5c6057e835d151fb647da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1ae9f617f8a5c848d9205b8e228c6f0d1af754b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49656","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.683","lastModified":"2025-02-26T07:01:40.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: meson: Fix refcount leak in meson_smp_prepare_cpus\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2e1bcd33478ef44e63a45457055060b5fe4118ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34d2cd3fccced12b958b8848e3eff0ee4296764c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cf8ece9113242c10f83c7675ea4f4f67959ee43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d90607e7e6afa89768b0aaa915b58bd2b849276","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7208101ded1e9dcc52c8f0f8b16474211c871c1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5fbf4f74c94fd60d5e9bf9f7f8268c3601562ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49657","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.777","lastModified":"2025-02-26T07:01:40.777","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: fix memory leak in error case\n\nusbnet_write_cmd_async() mixed up which buffers\nneed to be freed in which error case.\n\nv2: add Fixes tag\nv3: fix uninitialized buf pointer"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0085da9df3dced730027923a6b48f58e9016af91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/04894ab34faf40ab72a8a5ab5b404bb0606bbbff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eed421ca5c809da93456f69203d164d5220be3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5269209f54dd8dfd15f9383f3a3a1fe8370764f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b55a21b764c1e182014630fa5486d717484ac58f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5165e657987ff4ba0ace896d4376a3718a9fbc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db89582ff330556188da856e01382ccbf3a5e706","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7b4f69946a38209b4a4f660bf0e4cbed94f9b4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49658","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.867","lastModified":"2025-02-26T07:01:40.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix insufficient bounds propagation from adjust_scalar_min_max_vals\n\nKuee reported a corner case where the tnum becomes constant after the call\nto __reg_bound_offset(), but the register's bounds are not, that is, its\nmin bounds are still not equal to the register's max bounds.\n\nThis in turn allows to leak pointers through turning a pointer register as\nis into an unknown scalar via adjust_ptr_min_max_vals().\n\nBefore:\n\n  func#0 @0\n  0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))\n  0: (b7) r0 = 1                        ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0))\n  1: (b7) r3 = 0                        ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0))\n  2: (87) r3 = -r3                      ; R3_w=scalar()\n  3: (87) r3 = -r3                      ; R3_w=scalar()\n  4: (47) r3 |= 32767                   ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881)\n  5: (75) if r3 s>= 0x0 goto pc+1       ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)\n  6: (95) exit\n\n  from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))\n  7: (d5) if r3 s<= 0x8000 goto pc+1    ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)\n  8: (95) exit\n\n  from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))\n  9: (07) r3 += -32767                  ; R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0))  <--- [*]\n  10: (95) exit\n\nWhat can be seen here is that R3=scalar(umin=32767,umax=32768,var_off=(0x7fff;\n0x8000)) after the operation R3 += -32767 results in a 'malformed' constant, that\nis, R3_w=scalar(imm=0,umax=1,var_off=(0x0; 0x0)). Intersecting with var_off has\nnot been done at that point via __update_reg_bounds(), which would have improved\nthe umax to be equal to umin.\n\nRefactor the tnum <> min\/max bounds information flow into a reg_bounds_sync()\nhelper and use it consistently everywhere. After the fix, bounds have been\ncorrected to R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0)) and thus the register\nis regarded as a 'proper' constant scalar of 0.\n\nAfter:\n\n  func#0 @0\n  0: R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))\n  0: (b7) r0 = 1                        ; R0_w=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0))\n  1: (b7) r3 = 0                        ; R3_w=scalar(imm=0,umax=0,var_off=(0x0; 0x0))\n  2: (87) r3 = -r3                      ; R3_w=scalar()\n  3: (87) r3 = -r3                      ; R3_w=scalar()\n  4: (47) r3 |= 32767                   ; R3_w=scalar(smin=-9223372036854743041,umin=32767,var_off=(0x7fff; 0xffffffffffff8000),s32_min=-2147450881)\n  5: (75) if r3 s>= 0x0 goto pc+1       ; R3_w=scalar(umin=9223372036854808575,var_off=(0x8000000000007fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)\n  6: (95) exit\n\n  from 5 to 7: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881) R10=fp(off=0,imm=0,umax=0,var_off=(0x0; 0x0))\n  7: (d5) if r3 s<= 0x8000 goto pc+1    ; R3=scalar(umin=32769,umax=9223372036854775807,var_off=(0x7fff; 0x7fffffffffff8000),s32_min=-2147450881,u32_min=32767)\n  8: (95) exit\n\n  from 7 to 9: R0=scalar(imm=1,umin=1,umax=1,var_off=(0x1; 0x0)) R1=ctx(off=0,imm=0,umax=0,var_off=(0x0; 0x0)) R3=scalar(umin=32767,umax=32768,var_off=(0x7fff; 0x8000)) R10=fp(off=0\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3844d153a41adea718202c10ae91dc96b37453b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7de8d436db92bab8b1f44624297c2554a6ac36b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2a28bb36664c94375926cbbb91976242847699d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e917be1f83ea14a68b3cf64d3da9968eaf991dae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49659","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:40.957","lastModified":"2025-02-26T07:01:40.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: m_can: m_can_{read_fifo,echo_tx_event}(): shift timestamp to full 32 bits\n\nIn commit 1be37d3b0414 (\"can: m_can: fix periph RX path: use\nrx-offload to ensure skbs are sent from softirq context\") the RX path\nfor peripheral devices was switched to RX-offload.\n\nReceived CAN frames are pushed to RX-offload together with a\ntimestamp. RX-offload is designed to handle overflows of the timestamp\ncorrectly, if 32 bit timestamps are provided.\n\nThe timestamps of m_can core are only 16 bits wide. So this patch\nshifts them to full 32 bit before passing them to RX-offload."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a2914a5bd7f38efe55a8372178146de82e0bce9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c3333693f07313f5f0145a922f14a7d3c0f4f21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7333f79888497bfd75dcd02a94eaf836dd1042c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49660","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.043","lastModified":"2025-02-26T13:15:34.227","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49661","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.137","lastModified":"2025-02-26T07:01:41.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: gs_usb: gs_usb_open\/close(): fix memory leak\n\nThe gs_usb driver appears to suffer from a malady common to many USB\nCAN adapter drivers in that it performs usb_alloc_coherent() to\nallocate a number of USB request blocks (URBs) for RX, and then later\nrelies on usb_kill_anchored_urbs() to free them, but this doesn't\nactually free them. As a result, this may be leaking DMA memory that's\nbeen used by the driver.\n\nThis commit is an adaptation of the techniques found in the esd_usb2\ndriver where a similar design pattern led to a memory leak. It\nexplicitly frees the RX URBs and their DMA memory via a call to\nusb_free_coherent(). Since the RX URBs were allocated in the\ngs_can_open(), we remove them in gs_can_close() rather than in the\ndisconnect function as was done in esd_usb2.\n\nFor more information, see the 928150fad41b (\"can: esd_usb2: fix memory\nleak\")."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e60230bc64355c80abe993d1719fdb318094e20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bda24ef95c0311ab93bda00db40486acf30bd0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/339fa9f80d3b94177a7a459c6d115d3b56007d5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f655b5e13fa4b27e915b6c209ac0da74fd75963","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1d806bc29ff7ffe0e2a023583c8720ed96cb0b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0b8e223998866b3e7b2895927d4e9689b0a80d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d91492638b054f4a359621ef216242be5973ed6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffb6cc6601ec7c8fa963dcf76025df4a02f2cf5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49662","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.230","lastModified":"2025-02-26T07:01:41.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix lockdep splat in in6_dump_addrs()\n\nAs reported by syzbot, we should not use rcu_dereference()\nwhen rcu_read_lock() is not held.\n\nWARNING: suspicious RCU usage\n5.19.0-rc2-syzkaller #0 Not tainted\n\nnet\/ipv6\/addrconf.c:5175 suspicious rcu_dereference_check() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n1 lock held by syz-executor326\/3617:\n #0: ffffffff8d5848e8 (rtnl_mutex){+.+.}-{3:3}, at: netlink_dump+0xae\/0xc20 net\/netlink\/af_netlink.c:2223\n\nstack backtrace:\nCPU: 0 PID: 3617 Comm: syz-executor326 Not tainted 5.19.0-rc2-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n in6_dump_addrs+0x12d1\/0x1790 net\/ipv6\/addrconf.c:5175\n inet6_dump_addr+0x9c1\/0xb50 net\/ipv6\/addrconf.c:5300\n netlink_dump+0x541\/0xc20 net\/netlink\/af_netlink.c:2275\n __netlink_dump_start+0x647\/0x900 net\/netlink\/af_netlink.c:2380\n netlink_dump_start include\/linux\/netlink.h:245 [inline]\n rtnetlink_rcv_msg+0x73e\/0xc90 net\/core\/rtnetlink.c:6046\n netlink_rcv_skb+0x153\/0x420 net\/netlink\/af_netlink.c:2501\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1319 [inline]\n netlink_unicast+0x543\/0x7f0 net\/netlink\/af_netlink.c:1345\n netlink_sendmsg+0x917\/0xe10 net\/netlink\/af_netlink.c:1921\n sock_sendmsg_nosec net\/socket.c:714 [inline]\n sock_sendmsg+0xcf\/0x120 net\/socket.c:734\n ____sys_sendmsg+0x6eb\/0x810 net\/socket.c:2492\n ___sys_sendmsg+0xf3\/0x170 net\/socket.c:2546\n __sys_sendmsg net\/socket.c:2575 [inline]\n __do_sys_sendmsg net\/socket.c:2584 [inline]\n __se_sys_sendmsg net\/socket.c:2582 [inline]\n __x64_sys_sendmsg+0x132\/0x220 net\/socket.c:2582\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x46\/0xb0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2930ee1a166df0e12fe9fec4b79cc3dc9634ae45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e43e64d0f1332fcc503babad4dc31aead7131ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b39fda51c32dd879451e0119881f31493bf83283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49663","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.323","lastModified":"2025-02-26T07:01:41.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntunnels: do not assume mac header is set in skb_tunnel_check_pmtu()\n\nRecently added debug in commit f9aefd6b2aa3 (\"net: warn if mac header\nwas not set\") caught a bug in skb_tunnel_check_pmtu(), as shown\nin this syzbot report [1].\n\nIn ndo_start_xmit() paths, there is really no need to use skb->mac_header,\nbecause skb->data is supposed to point at it.\n\n[1] WARNING: CPU: 1 PID: 8604 at include\/linux\/skbuff.h:2784 skb_mac_header_len include\/linux\/skbuff.h:2784 [inline]\nWARNING: CPU: 1 PID: 8604 at include\/linux\/skbuff.h:2784 skb_tunnel_check_pmtu+0x5de\/0x2f90 net\/ipv4\/ip_tunnel_core.c:413\nModules linked in:\nCPU: 1 PID: 8604 Comm: syz-executor.3 Not tainted 5.19.0-rc2-syzkaller-00443-g8720bd951b8e #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:skb_mac_header_len include\/linux\/skbuff.h:2784 [inline]\nRIP: 0010:skb_tunnel_check_pmtu+0x5de\/0x2f90 net\/ipv4\/ip_tunnel_core.c:413\nCode: 00 00 00 00 fc ff df 4c 89 fa 48 c1 ea 03 80 3c 02 00 0f 84 b9 fe ff ff 4c 89 ff e8 7c 0f d7 f9 e9 ac fe ff ff e8 c2 13 8a f9 <0f> 0b e9 28 fc ff ff e8 b6 13 8a f9 48 8b 54 24 70 48 b8 00 00 00\nRSP: 0018:ffffc90002e4f520 EFLAGS: 00010212\nRAX: 0000000000000324 RBX: ffff88804d5fd500 RCX: ffffc90005b52000\nRDX: 0000000000040000 RSI: ffffffff87f05e3e RDI: 0000000000000003\nRBP: ffffc90002e4f650 R08: 0000000000000003 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000000 R12: 000000000000ffff\nR13: 0000000000000000 R14: 000000000000ffcd R15: 000000000000001f\nFS: 00007f3babba9700(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000080 CR3: 0000000075319000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<TASK>\ngeneve_xmit_skb drivers\/net\/geneve.c:927 [inline]\ngeneve_xmit+0xcf8\/0x35d0 drivers\/net\/geneve.c:1107\n__netdev_start_xmit include\/linux\/netdevice.h:4805 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4819 [inline]\n__dev_direct_xmit+0x500\/0x730 net\/core\/dev.c:4309\ndev_direct_xmit include\/linux\/netdevice.h:3007 [inline]\npacket_direct_xmit+0x1b8\/0x2c0 net\/packet\/af_packet.c:282\npacket_snd net\/packet\/af_packet.c:3073 [inline]\npacket_sendmsg+0x21f4\/0x55d0 net\/packet\/af_packet.c:3104\nsock_sendmsg_nosec net\/socket.c:714 [inline]\nsock_sendmsg+0xcf\/0x120 net\/socket.c:734\n____sys_sendmsg+0x6eb\/0x810 net\/socket.c:2489\n___sys_sendmsg+0xf3\/0x170 net\/socket.c:2543\n__sys_sendmsg net\/socket.c:2572 [inline]\n__do_sys_sendmsg net\/socket.c:2581 [inline]\n__se_sys_sendmsg net\/socket.c:2579 [inline]\n__x64_sys_sendmsg+0x132\/0x220 net\/socket.c:2579\ndo_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\ndo_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\nentry_SYSCALL_64_after_hwframe+0x46\/0xb0\nRIP: 0033:0x7f3baaa89109\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f3babba9168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\nRAX: ffffffffffffffda RBX: 00007f3baab9bf60 RCX: 00007f3baaa89109\nRDX: 0000000000000000 RSI: 0000000020000a00 RDI: 0000000000000003\nRBP: 00007f3baaae305d R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007ffe74f2543f R14: 00007f3babba9300 R15: 0000000000022000\n<\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32dcf62efa0003f92a976aea0c57f118e689de8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59c51c3b545128a92ebfb6dbae990d3abee110e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/674a641e5b67e16ba3112eacd680ff87b38539de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/853a7614880231747040cada91d2b8d2e995c51a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49664","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.420","lastModified":"2025-02-26T07:01:41.420","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: move bc link creation back to tipc_node_create\n\nShuang Li reported a NULL pointer dereference crash:\n\n  [] BUG: kernel NULL pointer dereference, address: 0000000000000068\n  [] RIP: 0010:tipc_link_is_up+0x5\/0x10 [tipc]\n  [] Call Trace:\n  []  <IRQ>\n  []  tipc_bcast_rcv+0xa2\/0x190 [tipc]\n  []  tipc_node_bc_rcv+0x8b\/0x200 [tipc]\n  []  tipc_rcv+0x3af\/0x5b0 [tipc]\n  []  tipc_udp_recv+0xc7\/0x1e0 [tipc]\n\nIt was caused by the 'l' passed into tipc_bcast_rcv() is NULL. When it\ncreates a node in tipc_node_check_dest(), after inserting the new node\ninto hashtable in tipc_node_create(), it creates the bc link. However,\nthere is a gap between this insert and bc link creation, a bc packet\nmay come in and get the node from the hashtable then try to dereference\nits bc link, which is NULL.\n\nThis patch is to fix it by moving the bc link creation before inserting\ninto the hashtable.\n\nNote that for a preliminary node becoming \"real\", the bc link creation\nshould also be called before it's rehashed, as we don't create it for\npreliminary nodes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35fcb2ba35b4d9b592b558c3bcc6e0d90e213588","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/456bc338871c4a52117dd5ef29cce3745456d248","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb8092d70a6f5f01ec1490fce4d35efed3ed996c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e52910e671f58c619e33dac476b11b35e2d3ab6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49665","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.513","lastModified":"2025-02-26T07:01:41.513","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: thinkpad_acpi: Fix a memory leak of EFCH MMIO resource\n\nUnlike release_mem_region(), a call to release_resource() does not\nfree the resource, so it has to be freed explicitly to avoid a memory\nleak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3884bf75fa044c73e843d95dd71a424e80ebb095","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2f33f0c3ad7b0d5262d9b986f1353265fad7a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49666","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.600","lastModified":"2025-02-26T07:01:41.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/memhotplug: Add add_pages override for PPC\n\nWith commit ffa0b64e3be5 (\"powerpc: Fix virt_addr_valid() for 64-bit Book3E & 32-bit\")\nthe kernel now validate the addr against high_memory value. This results\nin the below BUG_ON with dax pfns.\n\n[  635.798741][T26531] kernel BUG at mm\/page_alloc.c:5521!\n1:mon> e\ncpu 0x1: Vector: 700 (Program Check) at [c000000007287630]\n    pc: c00000000055ed48: free_pages.part.0+0x48\/0x110\n    lr: c00000000053ca70: tlb_finish_mmu+0x80\/0xd0\n    sp: c0000000072878d0\n   msr: 800000000282b033\n  current = 0xc00000000afabe00\n  paca    = 0xc00000037ffff300   irqmask: 0x03   irq_happened: 0x05\n    pid   = 26531, comm = 50-landscape-sy\nkernel BUG at :5521!\nLinux version 5.19.0-rc3-14659-g4ec05be7c2e1 (kvaneesh@ltc-boston8) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #625 SMP Thu Jun 23 00:35:43 CDT 2022\n1:mon> t\n[link register   ] c00000000053ca70 tlb_finish_mmu+0x80\/0xd0\n[c0000000072878d0] c00000000053ca54 tlb_finish_mmu+0x64\/0xd0 (unreliable)\n[c000000007287900] c000000000539424 exit_mmap+0xe4\/0x2a0\n[c0000000072879e0] c00000000019fc1c mmput+0xcc\/0x210\n[c000000007287a20] c000000000629230 begin_new_exec+0x5e0\/0xf40\n[c000000007287ae0] c00000000070b3cc load_elf_binary+0x3ac\/0x1e00\n[c000000007287c10] c000000000627af0 bprm_execve+0x3b0\/0xaf0\n[c000000007287cd0] c000000000628414 do_execveat_common.isra.0+0x1e4\/0x310\n[c000000007287d80] c00000000062858c sys_execve+0x4c\/0x60\n[c000000007287db0] c00000000002c1b0 system_call_exception+0x160\/0x2c0\n[c000000007287e10] c00000000000c53c system_call_common+0xec\/0x250\n\nThe fix is to make sure we update high_memory on memory hotplug.\nThis is similar to what x86 does in commit 3072e413e305 (\"mm\/memory_hotplug: introduce add_pages\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84d146fd35a01b08e9515041de60f0f915a417d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89296ac435e2cf8a5101f7fab8f0c7b754b92052","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac790d09885d36143076e7e02825c541e8eee899","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49667","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.687","lastModified":"2025-02-26T07:01:41.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bonding: fix use-after-free after 802.3ad slave unbind\n\ncommit 0622cab0341c (\"bonding: fix 802.3ad aggregator reselection\"),\nresolve case, when there is several aggregation groups in the same bond.\nbond_3ad_unbind_slave will invalidate (clear) aggregator when\n__agg_active_ports return zero. So, ad_clear_agg can be executed even, when\nnum_of_ports!=0. Than bond_3ad_unbind_slave can be executed again for,\npreviously cleared aggregator. NOTE: at this time bond_3ad_unbind_slave\nwill not update slave ports list, because lag_ports==NULL. So, here we\ngot slave ports, pointing to freed aggregator memory.\n\nFix with checking actual number of ports in group (as was before\ncommit 0622cab0341c (\"bonding: fix 802.3ad aggregator reselection\") ),\nbefore ad_clear_agg().\n\nThe KASAN logs are as follows:\n\n[  767.617392] ==================================================================\n[  767.630776] BUG: KASAN: use-after-free in bond_3ad_state_machine_handler+0x13dc\/0x1470\n[  767.638764] Read of size 2 at addr ffff00011ba9d430 by task kworker\/u8:7\/767\n[  767.647361] CPU: 3 PID: 767 Comm: kworker\/u8:7 Tainted: G           O 5.15.11 #15\n[  767.655329] Hardware name: DNI AmazonGo1 A7040 board (DT)\n[  767.660760] Workqueue: lacp_1 bond_3ad_state_machine_handler\n[  767.666468] Call trace:\n[  767.668930]  dump_backtrace+0x0\/0x2d0\n[  767.672625]  show_stack+0x24\/0x30\n[  767.675965]  dump_stack_lvl+0x68\/0x84\n[  767.679659]  print_address_description.constprop.0+0x74\/0x2b8\n[  767.685451]  kasan_report+0x1f0\/0x260\n[  767.689148]  __asan_load2+0x94\/0xd0\n[  767.692667]  bond_3ad_state_machine_handler+0x13dc\/0x1470"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/050133e1aa2cb49bb17be847d48a4431598ef562","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2765749def4765c5052a4c66445cf4c96fcccdbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63b2fe509f69b90168a75e04e14573dccf7984e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/893825289ba840afd86bfffcb6f7f363c73efff8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a853b7a3a9fd1d74a4ccdd9cd73512b7dace2f1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b90ac60303063a43e17dd4aec159067599d255e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef0af7d08d26c5333ff4944a559279464edf6f15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f162f7c348fa2a5555bafdb5cc890b89b221e69c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49668","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.780","lastModified":"2025-02-26T07:01:41.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPM \/ devfreq: exynos-ppmu: Fix refcount leak in of_get_devfreq_events\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nThis function only calls of_node_put() in normal path,\nmissing it in error paths.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01121e39ef537289926ae6f5374dce92c796d863","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/194781229d4cbc804b8ded13156eb8addce87d6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdecd912e99acfd61507f1720d3f4eed1b3418d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e65027fdebbacd40595e96ef7b5d2418f71bddf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f44b799603a9b5d2e375b0b2d54dd0b791eddfc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49669","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.870","lastModified":"2025-02-26T07:01:41.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix race on unaccepted mptcp sockets\n\nWhen the listener socket owning the relevant request is closed,\nit frees the unaccepted subflows and that causes later deletion\nof the paired MPTCP sockets.\n\nThe mptcp socket's worker can run in the time interval between such delete\noperations. When that happens, any access to msk->first will cause an UaF\naccess, as the subflow cleanup did not cleared such field in the mptcp\nsocket.\n\nAddress the issue explicitly traversing the listener socket accept\nqueue at close time and performing the needed cleanup on the pending\nmsk.\n\nNote that the locking is a bit tricky, as we need to acquire the msk\nsocket lock, while still owning the subflow socket one."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6aeed9045071f2252ff4e98fc13d1e304f33e5b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8a3e95c74e48c2c9b07b81fafda9122993f2e12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49670","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:41.953","lastModified":"2025-02-26T07:01:41.953","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlinux\/dim: Fix divide by 0 in RDMA DIM\n\nFix a divide 0 error in rdma_dim_stats_compare() when prev->cpe_ratio ==\n0.\n\nCallTrace:\n  Hardware name: H3C R4900 G3\/RS33M2C9S, BIOS 2.00.37P21 03\/12\/2020\n  task: ffff880194b78000 task.stack: ffffc90006714000\n  RIP: 0010:backport_rdma_dim+0x10e\/0x240 [mlx_compat]\n  RSP: 0018:ffff880c10e83ec0 EFLAGS: 00010202\n  RAX: 0000000000002710 RBX: ffff88096cd7f780 RCX: 0000000000000064\n  RDX: 0000000000000000 RSI: 0000000000000002 RDI: 0000000000000001\n  RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000000 R12: 000000001d7c6c09\n  R13: ffff88096cd7f780 R14: ffff880b174fe800 R15: 0000000000000000\n  FS:  0000000000000000(0000) GS:ffff880c10e80000(0000)\n  knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00000000a0965b00 CR3: 000000000200a003 CR4: 00000000007606e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  PKRU: 55555554\n  Call Trace:\n   <IRQ>\n   ib_poll_handler+0x43\/0x80 [ib_core]\n   irq_poll_softirq+0xae\/0x110\n   __do_softirq+0xd1\/0x28c\n   irq_exit+0xde\/0xf0\n   do_IRQ+0x54\/0xe0\n   common_interrupt+0x8f\/0x8f\n   <\/IRQ>\n   ? cpuidle_enter_state+0xd9\/0x2a0\n   ? cpuidle_enter_state+0xc7\/0x2a0\n   ? do_idle+0x170\/0x1d0\n   ? cpu_startup_entry+0x6f\/0x80\n   ? start_secondary+0x1b9\/0x210\n   ? secondary_startup_64+0xa5\/0xb0\n  Code: 0f 87 e1 00 00 00 8b 4c 24 14 44 8b 43 14 89 c8 4d 63 c8 44 29 c0 99 31 d0 29 d0 31 d2 48 98 48 8d 04 80 48 8d 04 80 48 c1 e0 02 <49> f7 f1 48 83 f8 0a 0f 86 c1 00 00 00 44 39 c1 7f 10 48 89 df\n  RIP: backport_rdma_dim+0x10e\/0x240 [mlx_compat] RSP: ffff880c10e83ec0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b6e0eb5c45e79e9095de2498cc0ca5ec563fc5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0fe3dbbefb74a8575f61d7801b08dbc50523d60d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af106f8e072aebd88b95e164a08fa320651a99a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c1963391af51ee322378d1b2849c60e9037f069","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fae2a9fb1eaf348ad8732f90d42ebbb971bd7e95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49671","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.043","lastModified":"2025-02-26T07:01:42.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cm: Fix memory leak in ib_cm_insert_listen\n\ncm_alloc_id_priv() allocates resource for the cm_id_priv. When\ncm_init_listen() fails it doesn't free it, leading to memory leak.\n\nAdd the missing error unwind."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2990f223ffa7bb25422956b9f79f9176a5b38346","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2febf09a8a8ae4accf908f043f1bab1421056568","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/889000874c1204e47c7f2a4945db262a47e7efc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0cab8b517aeaf2592c3479294f934209c41a26f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49672","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.130","lastModified":"2025-02-26T07:01:42.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tun: unlink NAPI from device on destruction\n\nSyzbot found a race between tun file and device destruction.\nNAPIs live in struct tun_file which can get destroyed before\nthe netdev so we have to del them explicitly. The current\ncode is missing deleting the NAPI if the queue was detached\nfirst."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b9bc84d311104906d2b4995a9a02d7b7ddab2db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8145f77d38de4f88b8a69e1463f5c09ba189d77c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82e729aee59acefe135fceffadcbc5b86dd4f1b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8661d4b8faa2f7ee7a559969c0a7c57f077b1728","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8cf919022373c97a84fe596bbea544f909c485d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bec1be0a745ab420718217e3e0d9542a75108989","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49673","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.223","lastModified":"2025-02-26T07:01:42.223","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm raid: fix KASAN warning in raid5_add_disks\n\nThere's a KASAN warning in raid5_add_disk when running the LVM testsuite.\nThe warning happens in the test\nlvconvert-raid-reshape-linear_to_raid6-single-type.sh. We fix the warning\nby verifying that rdev->saved_raid_disk is within limits."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02cffb1921edadd9b6e4eee7ada4a5213e8ba12e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d4e7c9898c20fb3d3f55381cab601761aab7d64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fb2928728038280bd925ce2aafb4997e9d47ee9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3553a69bb52be2deba61d0ca064c41aee842bb35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/617b365872a247480e9dcd50a32c8d1806b21861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5b06039b195d4b6f94f5d345b1e4ac1975a9832","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8bca518d5272fe349e0a722fdb9e3acb661f3f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f157bd9cf377a947fdb7035e69466b6ecdc17c17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49674","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.320","lastModified":"2025-02-26T07:01:42.320","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm raid: fix accesses beyond end of raid member array\n\nOn dm-raid table load (using raid_ctr), dm-raid allocates an array\nrs->devs[rs->raid_disks] for the raid device members. rs->raid_disks\nis defined by the number of raid metadata and image tupples passed\ninto the target's constructor.\n\nIn the case of RAID layout changes being requested, that number can be\ndifferent from the current number of members for existing raid sets as\ndefined in their superblocks. Example RAID layout changes include:\n- raid1 legs being added\/removed\n- raid4\/5\/6\/10 number of stripes changed (stripe reshaping)\n- takeover to higher raid level (e.g. raid5 -> raid6)\n\nWhen accessing array members, rs->raid_disks must be used in control\nloops instead of the potentially larger value in rs->md.raid_disks.\nOtherwise it will cause memory access beyond the end of the rs->devs\narray.\n\nFix this by changing code that is prone to out-of-bounds access.\nAlso fix validate_raid_redundancy() to validate all devices that are\nadded. Also, use braces to help clean up raid_iterate_devices().\n\nThe out-of-bounds memory accesses was discovered using KASAN.\n\nThis commit was verified to pass all LVM2 RAID tests (with KASAN\nenabled)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/332bd0778775d0cf105c4b9e03e460b590749916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e161a8826b63c0b8b43e4a7fad1f956780f42ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6352b2f4d8e95ec0ae576d7705435d64cfa29503","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90de15357504c8097ab29769dc6852e16281e9e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bf2b0757b04c78dc5d6e3a198acca98457b32a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcff98500ea3b4e7615ec31d2bdd326bc1ef5134","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df1a5ab0dd0775f2ea101c71f2addbc4c0ea0f85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49675","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.413","lastModified":"2025-02-26T07:01:42.413","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntick\/nohz: unexport __init-annotated tick_nohz_full_setup()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it had been broken for a decade.\n\nCommit 28438794aba4 (\"modpost: fix section mismatch check for exported\ninit\/exit sections\") fixed it so modpost started to warn it again, then\nthis showed up:\n\n    MODPOST vmlinux.symvers\n  WARNING: modpost: vmlinux.o(___ksymtab_gpl+tick_nohz_full_setup+0x0): Section mismatch in reference from the variable __ksymtab_tick_nohz_full_setup to the function .init.text:tick_nohz_full_setup()\n  The symbol tick_nohz_full_setup is exported and annotated __init\n  Fix this by removing the __init annotation of tick_nohz_full_setup or drop the export.\n\nDrop the export because tick_nohz_full_setup() is only called from the\nbuilt-in code in kernel\/sched\/isolation.c."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2390095113e98fc52fffe35c5206d30d9efe3f78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4ff3ffe0138234774602152fe67e3a898c615c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea32b27e2f8c58c92bff5ecba7fcf64b97707089","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4a80ec8c51d68be4b7a7830c510f75080c5e417","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49676","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.500","lastModified":"2025-02-26T07:01:42.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: samsung: exynos5422-dmc: Fix refcount leak in of_get_dram_timings\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nThis function doesn't call of_node_put() in some error paths.\nTo unify the structure, Add put_node label and goto it on errors."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1332661e09304b7b8e84e5edc11811ba08d12abe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/889aad2203e09eed2071ca8985c25e9d6aea5735","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb2a481778c60f912c363e271ae46b55ff8132db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cde4480b5ab06195b9164184b0c02ced71e601b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49677","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.587","lastModified":"2025-02-26T07:01:42.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: cns3xxx: Fix refcount leak in cns3xxx_init\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ba904b6b16e08de5aed7c1349838d9cd0d178c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45bebbc8cea7d586a6216dc62814bdb380b9b29b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68d4303bf59662b64bd555e2aa0518282d20aa4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8b84e01ca94e2e1f5492353e9c24dab520b2e5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c980392af1473d6d5662f70d8089c8e6d85144a4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1359e4129ad43e43972a28838b87291c51de23d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da3ee7cd2f15922ad88a7ca6deee2eafdc7cd214","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc5170aae24e04068fd5ea125d06c0ab51f48a27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49678","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.680","lastModified":"2025-02-26T07:01:42.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: bcm: brcmstb: pm: pm-arm: Fix refcount leak in brcmstb_pm_probe\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nIn brcmstb_init_sram, it pass dn to of_address_to_resource(),\nof_address_to_resource() will call of_find_device_by_node() to take\nreference, so we should release the reference returned by\nof_find_matching_node()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10ba9d499a9fd82ed40897e734ba19870a879407","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30bbfeb480ae8b5ee43199d72417b232590440c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/37d838de369b07b596c19ff3662bf0293fdb09ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f5877bdf7b593e988f1924f4c3df6523f80b39c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/734a4d15142bb4c8ecad2d8ec70d7564e78ae34d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcafd5463d8f20c4f90ddc138a5738adb99f74c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49679","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.773","lastModified":"2025-02-26T07:01:42.773","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: Fix refcount leak in axxia_boot_secondary\n\nof_find_compatible_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29ca9c4efacccdc15104a8d4bf10b5183fc92840","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c19fe3f04f4f4e7a2b722c2fd3c98356fc1d72b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44a5b3a073e5aaa5720929dba95b2725eb32bb65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d9c60e868f7cf8e09956e7d5bb44d807d712699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71e12e5b02674459a24f16e965255d63b31fe049","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c7ff68daa93d8c4cdea482da4f2429c0398fcde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9b76c232a1ce4cbf27862097f7eb634dcc779eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b385cb59aac8d61c29bc72ebf3d19a536914af96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49680","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.867","lastModified":"2025-02-26T07:01:42.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nARM: exynos: Fix refcount leak in exynos_map_pmu\n\nof_find_matching_node() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\nof_node_put() checks null pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31d09571bb071c20f6bdc0bb7ac1ef8dd2987c04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/545ae5cbae839ce39bfe09828e413f1c916082de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68f28d52e6cbab8dcfa249cac4356d1d0573e868","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7571bcecf01b69f0d3ec60ca41ce5d4c75411a4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4c79525042a4a7df96b73477feaf232fe44ae81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d23f76018e17618559da9eea179d137362023f95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9b77a52937582a5b99a5a07e4ef1e2f48f87347","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc354856e9fad9cd36e2ad28f9da70716025055a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49681","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:42.963","lastModified":"2025-02-26T07:01:42.963","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxtensa: xtfpga: Fix refcount leak bug in setup\n\nIn machine_setup(), of_find_compatible_node() will return a node\npointer with refcount incremented. We should use of_node_put() when\nit is not used anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0162451723178602c37f0555d235dfa17e486112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0715d0e60052662c3f225342062f174dd721d1c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/173940b3ae40114d4179c251a98ee039dc9cd5b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35d7e961be68732eb3acaeba81fb81ca16eafd05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c0839cf1b9e1b3c88da6af76794583cbfae8da3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b30c5c8884eda3f541229899671cebbad15979b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a52972ee706b438302eb0350e61f378eb191e3d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b12d5c52f073a0420622aaf2f21b615cce8b36cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49682","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.063","lastModified":"2025-02-26T07:01:43.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxtensa: Fix refcount leak bug in time.c\n\nIn calibrate_ccount(), of_find_compatible_node() will return a node\npointer with refcount incremented. We should use of_node_put() when\nit is not used anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dcc1dd8a5dd9240639f1051dfaa2dffc9fbbde5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e403a383c14b63c86bd9df085b7e573e9caee64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e5eb904d9ba657308fc75a5de434b0e58dcb8d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7de4502af68f4f3932f450157f5483eb7b33cb74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0117dc956429f2ede17b323046e1968d1849150","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af0ff2da01521144bc11194f4c26485d7c9cee73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5234a9d64a976abd134a14710dcd5188158a7c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1eaf4ba5372ad111f687a80c67e270708e14c23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49683","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.153","lastModified":"2025-02-26T07:01:43.153","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: adi-axi-adc: Fix refcount leak in adi_axi_adc_attach_client\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/501652a2ad5450b4908e1f204ce75b2414c305b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5eaa84e1605035a90a64d25b6cba79e89d188175","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab7bf025cee89db73c649216ddd2bc589c3d3862","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada7b0c0dedafd7d059115adf49e48acba3153a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49684","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.247","lastModified":"2025-02-26T07:01:43.247","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: aspeed: Fix refcount leak in aspeed_adc_set_trim_data\n\nof_find_node_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when done.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8a2b6b5687984a010ed094b4f436a2f091987758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9664491db50a84be92696c8fad2c3b49a7a5f36f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49685","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.340","lastModified":"2025-02-26T07:01:43.340","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: trigger: sysfs: fix use-after-free on remove\n\nEnsure that the irq_work has completed before the trigger is freed.\n\n ==================================================================\n BUG: KASAN: use-after-free in irq_work_run_list\n Read of size 8 at addr 0000000064702248 by task python3\/25\n\n Call Trace:\n  irq_work_run_list\n  irq_work_tick\n  update_process_times\n  tick_sched_handle\n  tick_sched_timer\n  __hrtimer_run_queues\n  hrtimer_interrupt\n\n Allocated by task 25:\n  kmem_cache_alloc_trace\n  iio_sysfs_trig_add\n  dev_attr_store\n  sysfs_kf_write\n  kernfs_fop_write_iter\n  new_sync_write\n  vfs_write\n  ksys_write\n  sys_write\n\n Freed by task 25:\n  kfree\n  iio_sysfs_trig_remove\n  dev_attr_store\n  sysfs_kf_write\n  kernfs_fop_write_iter\n  new_sync_write\n  vfs_write\n  ksys_write\n  sys_write\n\n =================================================================="}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31ff3309b47d98313c61b8301bf595820cc3cc33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4687c3f955240ca2a576bdc3f742d4d915b6272d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ef1e521be610b720daeb7cf899fedc7db0274c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e39397d60dacc7f5d81d442c1c958eaaaf31128","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78601726d4a59a291acc5a52da1d3a0a6831e4e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b07a30a774b3c3e584a68dc91779c68ea2da4813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6111e7bdb8ec27eb43d01c4cd4ff1620a75f7f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd5d8fb298a2866c337da635c79d63c3afabcaf7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49686","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.437","lastModified":"2025-02-26T07:01:43.437","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: uvc: fix list double add in uvcg_video_pump\n\nA panic can occur if the endpoint becomes disabled and the\nuvcg_video_pump adds the request back to the req_free list after it has\nalready been queued to the endpoint. The endpoint complete will add the\nrequest back to the req_free list. Invalidate the local request handle\nonce it's been queued.\n\n<6>[  246.796704][T13726] configfs-gadget gadget: uvc: uvc_function_set_alt(1, 0)\n<3>[  246.797078][   T26] list_add double add: new=ffffff878bee5c40, prev=ffffff878bee5c40, next=ffffff878b0f0a90.\n<6>[  246.797213][   T26] ------------[ cut here ]------------\n<2>[  246.797224][   T26] kernel BUG at lib\/list_debug.c:31!\n<6>[  246.807073][   T26] Call trace:\n<6>[  246.807180][   T26]  uvcg_video_pump+0x364\/0x38c\n<6>[  246.807366][   T26]  process_one_work+0x2a4\/0x544\n<6>[  246.807394][   T26]  worker_thread+0x350\/0x784\n<6>[  246.807442][   T26]  kthread+0x2ac\/0x320"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/96163f835e65f8c9897487fac965819f0651d671","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d95ac8b920de1d39525fadc408ce675697626ca6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49687","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.527","lastModified":"2025-02-26T07:01:43.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: fix xdp_rxq_info bug after suspend\/resume\n\nThe following sequence currently causes a driver bug warning\nwhen using virtio_net:\n\n  # ip link set eth0 up\n  # echo mem > \/sys\/power\/state (or e.g. # rtcwake -s 10 -m mem)\n  <resume>\n  # ip link set eth0 down\n\n  Missing register, driver bug\n  WARNING: CPU: 0 PID: 375 at net\/core\/xdp.c:138 xdp_rxq_info_unreg+0x58\/0x60\n  Call trace:\n   xdp_rxq_info_unreg+0x58\/0x60\n   virtnet_close+0x58\/0xac\n   __dev_close_many+0xac\/0x140\n   __dev_change_flags+0xd8\/0x210\n   dev_change_flags+0x24\/0x64\n   do_setlink+0x230\/0xdd0\n   ...\n\nThis happens because virtnet_freeze() frees the receive_queue\ncompletely (including struct xdp_rxq_info) but does not call\nxdp_rxq_info_unreg(). Similarly, virtnet_restore() sets up the\nreceive_queue again but does not call xdp_rxq_info_reg().\n\nActually, parts of virtnet_freeze_down() and virtnet_restore_up()\nare almost identical to virtnet_close() and virtnet_open(): only\nthe calls to xdp_rxq_info_(un)reg() are missing. This means that\nwe can fix this easily and avoid such problems in the future by\njust calling virtnet_close()\/open() from the freeze\/restore handlers.\n\nAside from adding the missing xdp_rxq_info calls the only difference\nis that the refill work is only cancelled if netif_running(). However,\nthis should not make any functional difference since the refill work\nshould only be active if the network interface is actually up."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/340fbdc8011f2dc678f622c5ce1cbb5ab8305de7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57ee40f1b198b59d43c216fbc4672f9300d3c8b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8af52fe9fd3bf5e7478da99193c0632276e1dfce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c7a32b7c15555beddc5810c3334d9cefff061bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d7fe9ad6fddc2af8bde4b921b4f8fab231ed38c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9222672fa6370f0ec3d899662cb8680e9282fc4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49688","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.617","lastModified":"2025-02-26T07:01:43.617","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix dynamic root getattr\n\nThe recent patch to make afs_getattr consult the server didn't account\nfor the pseudo-inodes employed by the dynamic root-type afs superblock\nnot having a volume or a server to access, and thus an oops occurs if\nsuch a directory is stat'd.\n\nFix this by checking to see if the vnode->volume pointer actually points\nanywhere before following it in afs_getattr().\n\nThis can be tested by stat'ing a directory in \/afs.  It may be\nsufficient just to do \"ls \/afs\" and the oops looks something like:\n\n        BUG: kernel NULL pointer dereference, address: 0000000000000020\n        ...\n        RIP: 0010:afs_getattr+0x8b\/0x14b\n        ...\n        Call Trace:\n         <TASK>\n         vfs_statx+0x79\/0xf5\n         vfs_fstatat+0x49\/0x62"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b2bba96526f25f2eba74ecadb031de2e05a83ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65c24caf1b9f5b08397c6e805ec24ebc390c6e4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7844ceada44eca740d31beb3d97b8511b1ca0a9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b564e3254b7db5fbfbf11a824627a6c31b932b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb78d1b5efffe4cf97e16766329dd7358aed3deb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3a232e5767051483ffad4cef7d0a89d292a192b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49689","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.710","lastModified":"2025-02-26T13:15:34.300","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49690","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.803","lastModified":"2025-02-26T15:15:17.703","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2022-49691","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.893","lastModified":"2025-02-26T07:01:43.893","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nerspan: do not assume transport header is always set\n\nRewrite tests in ip6erspan_tunnel_xmit() and\nerspan_fb_xmit() to not assume transport header is set.\n\nsyzbot reported:\n\nWARNING: CPU: 0 PID: 1350 at include\/linux\/skbuff.h:2911 skb_transport_header include\/linux\/skbuff.h:2911 [inline]\nWARNING: CPU: 0 PID: 1350 at include\/linux\/skbuff.h:2911 ip6erspan_tunnel_xmit+0x15af\/0x2eb0 net\/ipv6\/ip6_gre.c:963\nModules linked in:\nCPU: 0 PID: 1350 Comm: aoe_tx0 Not tainted 5.19.0-rc2-syzkaller-00160-g274295c6e53f #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04\/01\/2014\nRIP: 0010:skb_transport_header include\/linux\/skbuff.h:2911 [inline]\nRIP: 0010:ip6erspan_tunnel_xmit+0x15af\/0x2eb0 net\/ipv6\/ip6_gre.c:963\nCode: 0f 47 f0 40 88 b5 7f fe ff ff e8 8c 16 4b f9 89 de bf ff ff ff ff e8 a0 12 4b f9 66 83 fb ff 0f 85 1d f1 ff ff e8 71 16 4b f9 <0f> 0b e9 43 f0 ff ff e8 65 16 4b f9 48 8d 85 30 ff ff ff ba 60 00\nRSP: 0018:ffffc90005daf910 EFLAGS: 00010293\nRAX: 0000000000000000 RBX: 000000000000ffff RCX: 0000000000000000\nRDX: ffff88801f032100 RSI: ffffffff882e8d3f RDI: 0000000000000003\nRBP: ffffc90005dafab8 R08: 0000000000000003 R09: 000000000000ffff\nR10: 000000000000ffff R11: 0000000000000000 R12: ffff888024f21d40\nR13: 000000000000a288 R14: 00000000000000b0 R15: ffff888025a2e000\nFS: 0000000000000000(0000) GS:ffff88802c800000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b2e425000 CR3: 000000006d099000 CR4: 0000000000152ef0\nCall Trace:\n<TASK>\n__netdev_start_xmit include\/linux\/netdevice.h:4805 [inline]\nnetdev_start_xmit include\/linux\/netdevice.h:4819 [inline]\nxmit_one net\/core\/dev.c:3588 [inline]\ndev_hard_start_xmit+0x188\/0x880 net\/core\/dev.c:3604\nsch_direct_xmit+0x19f\/0xbe0 net\/sched\/sch_generic.c:342\n__dev_xmit_skb net\/core\/dev.c:3815 [inline]\n__dev_queue_xmit+0x14a1\/0x3900 net\/core\/dev.c:4219\ndev_queue_xmit include\/linux\/netdevice.h:2994 [inline]\ntx+0x6a\/0xc0 drivers\/block\/aoe\/aoenet.c:63\nkthread+0x1e7\/0x3b0 drivers\/block\/aoe\/aoecmd.c:1229\nkthread+0x2e9\/0x3a0 kernel\/kthread.c:376\nret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:302\n<\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02da602bc2f353dccd9e489a604490034ded941e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c8aeffc7c586d53e1d380f010bdca4f710f2480","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/301bd140ed0b24f0da660874c7e8a47dad8c8222","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3b2470399f679587c45abe56e551caf10becca2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cec9867ee55478ef5dcb2adf030fe0c442a4c4ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb401f37f6eadf24956d93687e5758c163c0d12b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49692","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:43.990","lastModified":"2025-02-26T07:01:43.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: at803x: fix NULL pointer dereference on AR9331 PHY\n\nLatest kernel will explode on the PHY interrupt config, since it depends\nnow on allocated priv. So, run probe to allocate priv to fix it.\n\n ar9331_switch ethernet.1:10 lan0 (uninitialized): PHY [!ahb!ethernet@1a000000!mdio!switch@10:00] driver [Qualcomm Atheros AR9331 built-in PHY] (irq=13)\n CPU 0 Unable to handle kernel paging request at virtual address 0000000a, epc == 8050e8a8, ra == 80504b34\n         ...\n Call Trace:\n [<8050e8a8>] at803x_config_intr+0x5c\/0xd0\n [<80504b34>] phy_request_interrupt+0xa8\/0xd0\n [<8050289c>] phylink_bringup_phy+0x2d8\/0x3ac\n [<80502b68>] phylink_fwnode_phy_connect+0x118\/0x130\n [<8074d8ec>] dsa_slave_create+0x270\/0x420\n [<80743b04>] dsa_port_setup+0x12c\/0x148\n [<8074580c>] dsa_register_switch+0xaf0\/0xcc0\n [<80511344>] ar9331_sw_probe+0x370\/0x388\n [<8050cb78>] mdio_probe+0x44\/0x70\n [<804df300>] really_probe+0x200\/0x424\n [<804df7b4>] __driver_probe_device+0x290\/0x298\n [<804df810>] driver_probe_device+0x54\/0xe4\n [<804dfd50>] __device_attach_driver+0xe4\/0x130\n [<804dcb00>] bus_for_each_drv+0xb4\/0xd8\n [<804dfac4>] __device_attach+0x104\/0x1a4\n [<804ddd24>] bus_probe_device+0x48\/0xc4\n [<804deb44>] deferred_probe_work_func+0xf0\/0x10c\n [<800a0ffc>] process_one_work+0x314\/0x4d4\n [<800a17fc>] worker_thread+0x2a4\/0x354\n [<800a9a54>] kthread+0x134\/0x13c\n [<8006306c>] ret_from_kernel_thread+0x14\/0x1c\n\nSame Issue would affect some other PHYs (QCA8081, QCA9561), so fix it\ntoo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66fa352215e8455ba2e5f33793535795bd3e36ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9926de7315be3d606cc011a305ad9adb9e8e14c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49693","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.080","lastModified":"2025-02-26T07:01:44.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/mdp4: Fix refcount leak in mdp4_modeset_init_intf\n\nof_graph_get_remote_node() returns remote device node pointer with\nrefcount incremented, we should use of_node_put() on it\nwhen not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/488473\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c39a17197733bc37786ed68c83267c2f491840b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9cc4598607cb7f7eae5c75fc1e3209cd52ff5e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1592d3e362cc59b29f15019707b16c695d70ca3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d16a4339825e64f9ddcdff5277982d640bae933b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d607da76fd2b1cf1d377af9d9b7c6f8fecbb0e1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49694","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.170","lastModified":"2025-02-26T07:01:44.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: disable the elevator int del_gendisk\n\nThe elevator is only used for file system requests, which are stopped in\ndel_gendisk.  Move disabling the elevator and freeing the scheduler tags\nto the end of del_gendisk instead of doing that work in disk_release and\nblk_cleanup_queue to avoid a use after free on q->tag_set from\ndisk_release as the tag_set might not be alive at that point.\n\nMove the blk_qos_exit call as well, as it just depends on the elevator\nexit and would be the only reason to keep the not exactly cheap queue\nfreeze in disk_release."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50e34d78815e474d410f342fbe783b18192ca518","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f28699fafc047ec33299da01e928c3a0073c5cc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49695","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.260","lastModified":"2025-02-26T07:01:44.260","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: fix a use-after-free issue in igb_clean_tx_ring\n\nFix the following use-after-free bug in igb_clean_tx_ring routine when\nthe NIC is running in XDP mode. The issue can be triggered redirecting\ntraffic into the igb NIC and then closing the device while the traffic\nis flowing.\n\n[   73.322719] CPU: 1 PID: 487 Comm: xdp_redirect Not tainted 5.18.3-apu2 #9\n[   73.330639] Hardware name: PC Engines APU2\/APU2, BIOS 4.0.7 02\/28\/2017\n[   73.337434] RIP: 0010:refcount_warn_saturate+0xa7\/0xf0\n[   73.362283] RSP: 0018:ffffc9000081f798 EFLAGS: 00010282\n[   73.367761] RAX: 0000000000000000 RBX: ffffc90000420f80 RCX: 0000000000000000\n[   73.375200] RDX: ffff88811ad22d00 RSI: ffff88811ad171e0 RDI: ffff88811ad171e0\n[   73.382590] RBP: 0000000000000900 R08: ffffffff82298f28 R09: 0000000000000058\n[   73.390008] R10: 0000000000000219 R11: ffffffff82280f40 R12: 0000000000000090\n[   73.397356] R13: ffff888102343a40 R14: ffff88810359e0e4 R15: 0000000000000000\n[   73.404806] FS:  00007ff38d31d740(0000) GS:ffff88811ad00000(0000) knlGS:0000000000000000\n[   73.413129] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   73.419096] CR2: 000055cff35f13f8 CR3: 0000000106391000 CR4: 00000000000406e0\n[   73.426565] Call Trace:\n[   73.429087]  <TASK>\n[   73.431314]  igb_clean_tx_ring+0x43\/0x140 [igb]\n[   73.436002]  igb_down+0x1d7\/0x220 [igb]\n[   73.439974]  __igb_close+0x3c\/0x120 [igb]\n[   73.444118]  igb_xdp+0x10c\/0x150 [igb]\n[   73.447983]  ? igb_pci_sriov_configure+0x70\/0x70 [igb]\n[   73.453362]  dev_xdp_install+0xda\/0x110\n[   73.457371]  dev_xdp_attach+0x1da\/0x550\n[   73.461369]  do_setlink+0xfd0\/0x10f0\n[   73.465166]  ? __nla_validate_parse+0x89\/0xc70\n[   73.469714]  rtnl_setlink+0x11a\/0x1e0\n[   73.473547]  rtnetlink_rcv_msg+0x145\/0x3d0\n[   73.477709]  ? rtnl_calcit.isra.0+0x130\/0x130\n[   73.482258]  netlink_rcv_skb+0x8d\/0x110\n[   73.486229]  netlink_unicast+0x230\/0x340\n[   73.490317]  netlink_sendmsg+0x215\/0x470\n[   73.494395]  __sys_sendto+0x179\/0x190\n[   73.498268]  ? move_addr_to_user+0x37\/0x70\n[   73.502547]  ? __sys_getsockname+0x84\/0xe0\n[   73.506853]  ? netlink_setsockopt+0x1c1\/0x4a0\n[   73.511349]  ? __sys_setsockopt+0xc8\/0x1d0\n[   73.515636]  __x64_sys_sendto+0x20\/0x30\n[   73.519603]  do_syscall_64+0x3b\/0x80\n[   73.523399]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[   73.528712] RIP: 0033:0x7ff38d41f20c\n[   73.551866] RSP: 002b:00007fff3b945a68 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\n[   73.559640] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ff38d41f20c\n[   73.567066] RDX: 0000000000000034 RSI: 00007fff3b945b30 RDI: 0000000000000003\n[   73.574457] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000\n[   73.581852] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff3b945ab0\n[   73.589179] R13: 0000000000000000 R14: 0000000000000003 R15: 00007fff3b945b30\n[   73.596545]  <\/TASK>\n[   73.598842] ---[ end trace 0000000000000000 ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2af944210dc23d43d8208dafac4df7be7e3c168b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f6a57ee8544ec3982f8a3cbcbf4aea7d47eb9ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68a0ed06dcd5d3ea732d011c0b83d66e4791f521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c12a2c9b1b460ed72e6b3c33aac1ef51b0329b66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49696","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.357","lastModified":"2025-02-26T07:01:44.357","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix use-after-free Read in tipc_named_reinit\n\nsyzbot found the following issue on:\n==================================================================\nBUG: KASAN: use-after-free in tipc_named_reinit+0x94f\/0x9b0\nnet\/tipc\/name_distr.c:413\nRead of size 8 at addr ffff88805299a000 by task kworker\/1:9\/23764\n\nCPU: 1 PID: 23764 Comm: kworker\/1:9 Not tainted\n5.18.0-rc4-syzkaller-00878-g17d49e6e8012 #0\nHardware name: Google Compute Engine\/Google Compute Engine,\nBIOS Google 01\/01\/2011\nWorkqueue: events tipc_net_finalize_work\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:88 [inline]\n dump_stack_lvl+0xcd\/0x134 lib\/dump_stack.c:106\n print_address_description.constprop.0.cold+0xeb\/0x495\nmm\/kasan\/report.c:313\n print_report mm\/kasan\/report.c:429 [inline]\n kasan_report.cold+0xf4\/0x1c6 mm\/kasan\/report.c:491\n tipc_named_reinit+0x94f\/0x9b0 net\/tipc\/name_distr.c:413\n tipc_net_finalize+0x234\/0x3d0 net\/tipc\/net.c:138\n process_one_work+0x996\/0x1610 kernel\/workqueue.c:2289\n worker_thread+0x665\/0x1080 kernel\/workqueue.c:2436\n kthread+0x2e9\/0x3a0 kernel\/kthread.c:376\n ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:298\n <\/TASK>\n[...]\n==================================================================\n\nIn the commit\nd966ddcc3821 (\"tipc: fix a deadlock when flushing scheduled work\"),\nthe cancel_work_sync() function just to make sure ONLY the work\ntipc_net_finalize_work() is executing\/pending on any CPU completed before\ntipc namespace is destroyed through tipc_exit_net(). But this function\nis not guaranteed the work is the last queued. So, the destroyed instance\nmay be accessed in the work which will try to enqueue later.\n\nIn order to completely fix, we re-order the calling of cancel_work_sync()\nto make sure the work tipc_net_finalize_work() was last queued and it\nmust be completed by calling cancel_work_sync()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/361c5521c1e49843b710f455cae3c0a50b714323","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b246ddd394d7d9640816611693b0096b998e27a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/911600bf5a5e84bfda4d33ee32acc75ecf6159f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd7789e659e84f137631dc1f5ec8d794f2700e6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49697","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.450","lastModified":"2025-02-26T07:01:44.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix request_sock leak in sk lookup helpers\n\nA customer reported a request_socket leak in a Calico cloud environment. We\nfound that a BPF program was doing a socket lookup with takes a refcnt on\nthe socket and that it was finding the request_socket but returning the parent\nLISTEN socket via sk_to_full_sk() without decrementing the child request socket\n1st, resulting in request_sock slab object leak. This patch retains the\nexisting behaviour of returning full socks to the caller but it also decrements\nthe child request_socket if one is present before doing so to prevent the leak.\n\nThanks to Curtis Taylor for all the help in diagnosing and testing this. And\nthanks to Antoine Tenart for the reproducer and patch input.\n\nv2 of this patch contains, refactor as per Daniel Borkmann's suggestions to\nvalidate RCU flags on the listen socket so that it balances with bpf_sk_release()\nand update comments as per Martin KaFai Lau's suggestion. One small change to\nDaniels suggestion, put \"sk = sk2\" under \"if (sk2 != sk)\" to avoid an extra\ninstruction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3046a827316c0e55fc563b4fb78c93b9ca5c7c37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/516760f1d2979903eaad5b437256913c5cd98416","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a62b5ba4c0ce8315b6382cd4ace81b48cd121cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ffe2e50e9678c8373027492035f094b130437f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b03607437ea81b850599f705096b05b85e7a4a71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49698","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.547","lastModified":"2025-02-26T07:01:44.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: use get_random_u32 instead of prandom\n\nbh might occur while updating per-cpu rnd_state from user context,\nie. local_out path.\n\nBUG: using smp_processor_id() in preemptible [00000000] code: nginx\/2725\ncaller is nft_ng_random_eval+0x24\/0x54 [nft_numgen]\nCall Trace:\n check_preemption_disabled+0xde\/0xe0\n nft_ng_random_eval+0x24\/0x54 [nft_numgen]\n\nUse the random driver instead, this also avoids need for local prandom\nstate. Moreover, prandom now uses the random driver since d4150779e60f\n(\"random32: use real rng for non-deterministic randomness\").\n\nBased on earlier patch from Pablo Neira."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15cc30ac2a8d7185f8ebf97dd1ddd90a7c79783b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ce71f83f798be7e1ca68707fec449fbecb38852","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1fd94e704571f98b21027340eecf821b2bdffba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0906b0fffc9f19bc42708ca3e84e2089088386c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49699","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.640","lastModified":"2025-02-26T07:01:44.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfilemap: Handle sibling entries in filemap_get_read_batch()\n\nIf a read races with an invalidation followed by another read, it is\npossible for a folio to be replaced with a higher-order folio.  If that\nhappens, we'll see a sibling entry for the new folio in the next iteration\nof the loop.  This manifests as a NULL pointer dereference while holding\nthe RCU read lock.\n\nHandle this by simply returning.  The next call will find the new folio\nand handle it correctly.  The other ways of handling this rare race are\nmore complex and it's just not worth it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a66f131d30e53000f08301776bf85c912ef47aad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb995f4eeba9d268fd4b56c2423ad6c1d1ea1b82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49700","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.740","lastModified":"2025-02-26T07:01:44.740","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/slub: add missing TID updates on slab deactivation\n\nThe fastpath in slab_alloc_node() assumes that c->slab is stable as long as\nthe TID stays the same. However, two places in __slab_alloc() currently\ndon't update the TID when deactivating the CPU slab.\n\nIf multiple operations race the right way, this could lead to an object\ngetting lost; or, in an even more unlikely situation, it could even lead to\nan object being freed onto the wrong slab's freelist, messing up the\n`inuse` counter and eventually causing a page to be freed to the page\nallocator while it still contains slab objects.\n\n(I haven't actually tested these cases though, this is just based on\nlooking at the code. Writing testcases for this stuff seems like it'd be\na pain...)\n\nThe race leading to state inconsistency is (all operations on the same CPU\nand kmem_cache):\n\n - task A: begin do_slab_free():\n    - read TID\n    - read pcpu freelist (==NULL)\n    - check `slab == c->slab` (true)\n - [PREEMPT A->B]\n - task B: begin slab_alloc_node():\n    - fastpath fails (`c->freelist` is NULL)\n    - enter __slab_alloc()\n    - slub_get_cpu_ptr() (disables preemption)\n    - enter ___slab_alloc()\n    - take local_lock_irqsave()\n    - read c->freelist as NULL\n    - get_freelist() returns NULL\n    - write `c->slab = NULL`\n    - drop local_unlock_irqrestore()\n    - goto new_slab\n    - slub_percpu_partial() is NULL\n    - get_partial() returns NULL\n    - slub_put_cpu_ptr() (enables preemption)\n - [PREEMPT B->A]\n - task A: finish do_slab_free():\n    - this_cpu_cmpxchg_double() succeeds()\n    - [CORRUPT STATE: c->slab==NULL, c->freelist!=NULL]\n\nFrom there, the object on c->freelist will get lost if task B is allowed to\ncontinue from here: It will proceed to the retry_load_slab label,\nset c->slab, then jump to load_freelist, which clobbers c->freelist.\n\nBut if we instead continue as follows, we get worse corruption:\n\n - task A: run __slab_free() on object from other struct slab:\n    - CPU_PARTIAL_FREE case (slab was on no list, is now on pcpu partial)\n - task A: run slab_alloc_node() with NUMA node constraint:\n    - fastpath fails (c->slab is NULL)\n    - call __slab_alloc()\n    - slub_get_cpu_ptr() (disables preemption)\n    - enter ___slab_alloc()\n    - c->slab is NULL: goto new_slab\n    - slub_percpu_partial() is non-NULL\n    - set c->slab to slub_percpu_partial(c)\n    - [CORRUPT STATE: c->slab points to slab-1, c->freelist has objects\n      from slab-2]\n    - goto redo\n    - node_match() fails\n    - goto deactivate_slab\n    - existing c->freelist is passed into deactivate_slab()\n    - inuse count of slab-1 is decremented to account for object from\n      slab-2\n\nAt this point, the inuse count of slab-1 is 1 lower than it should be.\nThis means that if we free all allocated objects in slab-1 except for one,\nSLUB will think that slab-1 is completely unused, and may free its page,\nleading to use-after-free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0515cc9b6b24877f59b222ade704bfaa42caa2a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/197e257da473c725dfe47759c3ee02f2398d8ea5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/308c6d0e1f200fd26c71270c6e6bfcf0fc6ff082","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c32496964da0dc230cea763a0e934b2e02dabd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6a597450e686d4c6388bd3cdcb17224b4dae7f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2b2f0e2e34d71ae6c2a1114fd3c525930e84bc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e3e90d671078455a3a08189f89d85b3da2de9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeaa345e128515135ccb864c04482180c08e3259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49701","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:44.930","lastModified":"2025-02-26T07:01:44.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ibmvfc: Allocate\/free queue resource only during probe\/remove\n\nCurrently, the sub-queues and event pool resources are allocated\/freed for\nevery CRQ connection event such as reset and LPM. This exposes the driver\nto a couple issues. First the inefficiency of freeing and reallocating\nmemory that can simply be resued after being sanitized. Further, a system\nunder memory pressue runs the risk of allocation failures that could result\nin a crippled driver. Finally, there is a race window where command\nsubmission\/compeletion can try to pull\/return elements from\/to an event\npool that is being deleted or already has been deleted due to the lack of\nhost state around freeing\/allocating resources. The following is an example\nof list corruption following a live partition migration (LPM):\n\nOops: Exception in kernel mode, sig: 5 [#1]\nLE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: vfat fat isofs cdrom ext4 mbcache jbd2 nft_counter nft_compat nf_tables nfnetlink rpadlpar_io rpaphp xsk_diag nfsv3 nfs_acl nfs lockd grace fscache netfs rfkill bonding tls sunrpc pseries_rng drm drm_panel_orientation_quirks xfs libcrc32c dm_service_time sd_mod t10_pi sg ibmvfc scsi_transport_fc ibmveth vmx_crypto dm_multipath dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse\nCPU: 0 PID: 2108 Comm: ibmvfc_0 Kdump: loaded Not tainted 5.14.0-70.9.1.el9_0.ppc64le #1\nNIP: c0000000007c4bb0 LR: c0000000007c4bac CTR: 00000000005b9a10\nREGS: c00000025c10b760 TRAP: 0700  Not tainted (5.14.0-70.9.1.el9_0.ppc64le)\nMSR: 800000000282b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE> CR: 2800028f XER: 0000000f\nCFAR: c0000000001f55bc IRQMASK: 0\n        GPR00: c0000000007c4bac c00000025c10ba00 c000000002a47c00 000000000000004e\n        GPR04: c0000031e3006f88 c0000031e308bd00 c00000025c10b768 0000000000000027\n        GPR08: 0000000000000000 c0000031e3009dc0 00000031e0eb0000 0000000000000000\n        GPR12: c0000031e2ffffa8 c000000002dd0000 c000000000187108 c00000020fcee2c0\n        GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000\n        GPR20: 0000000000000000 0000000000000000 0000000000000000 c008000002f81300\n        GPR24: 5deadbeef0000100 5deadbeef0000122 c000000263ba6910 c00000024cc88000\n        GPR28: 000000000000003c c0000002430a0000 c0000002430ac300 000000000000c300\nNIP [c0000000007c4bb0] __list_del_entry_valid+0x90\/0x100\nLR [c0000000007c4bac] __list_del_entry_valid+0x8c\/0x100\nCall Trace:\n[c00000025c10ba00] [c0000000007c4bac] __list_del_entry_valid+0x8c\/0x100 (unreliable)\n[c00000025c10ba60] [c008000002f42284] ibmvfc_free_queue+0xec\/0x210 [ibmvfc]\n[c00000025c10bb10] [c008000002f4246c] ibmvfc_deregister_scsi_channel+0xc4\/0x160 [ibmvfc]\n[c00000025c10bba0] [c008000002f42580] ibmvfc_release_sub_crqs+0x78\/0x130 [ibmvfc]\n[c00000025c10bc20] [c008000002f4f6cc] ibmvfc_do_work+0x5c4\/0xc70 [ibmvfc]\n[c00000025c10bce0] [c008000002f4fdec] ibmvfc_work+0x74\/0x1e8 [ibmvfc]\n[c00000025c10bda0] [c0000000001872b8] kthread+0x1b8\/0x1c0\n[c00000025c10be10] [c00000000000cd64] ret_from_kernel_thread+0x5c\/0x64\nInstruction dump:\n40820034 38600001 38210060 4e800020 7c0802a6 7c641b78 3c62fe7a 7d254b78\n3863b590 f8010070 4ba309cd 60000000 <0fe00000> 7c0802a6 3c62fe7a 3863b640\n---[ end trace 11a2b65a92f8b66c ]---\nibmvfc 30000003: Send warning. Receive queue closed, will retry.\n\nAdd registration\/deregistration helpers that are called instead during\nconnection resets to sanitize and reconfigure the queues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/161ec2a0807ddd58bc0f24f3e1e7e3d4fef5297f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72ea7fe0db73d65c7d977208842d8ade9b823de9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f23c499ca601b2a1e1d2e761d03964b739bca0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49702","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:45.827","lastModified":"2025-02-26T07:01:45.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix hang during unmount when block group reclaim task is running\n\nWhen we start an unmount, at close_ctree(), if we have the reclaim task\nrunning and in the middle of a data block group relocation, we can trigger\na deadlock when stopping an async reclaim task, producing a trace like the\nfollowing:\n\n[629724.498185] task:kworker\/u16:7   state:D stack:    0 pid:681170 ppid:     2 flags:0x00004000\n[629724.499760] Workqueue: events_unbound btrfs_async_reclaim_metadata_space [btrfs]\n[629724.501267] Call Trace:\n[629724.501759]  <TASK>\n[629724.502174]  __schedule+0x3cb\/0xed0\n[629724.502842]  schedule+0x4e\/0xb0\n[629724.503447]  btrfs_wait_on_delayed_iputs+0x7c\/0xc0 [btrfs]\n[629724.504534]  ? prepare_to_wait_exclusive+0xc0\/0xc0\n[629724.505442]  flush_space+0x423\/0x630 [btrfs]\n[629724.506296]  ? rcu_read_unlock_trace_special+0x20\/0x50\n[629724.507259]  ? lock_release+0x220\/0x4a0\n[629724.507932]  ? btrfs_get_alloc_profile+0xb3\/0x290 [btrfs]\n[629724.508940]  ? do_raw_spin_unlock+0x4b\/0xa0\n[629724.509688]  btrfs_async_reclaim_metadata_space+0x139\/0x320 [btrfs]\n[629724.510922]  process_one_work+0x252\/0x5a0\n[629724.511694]  ? process_one_work+0x5a0\/0x5a0\n[629724.512508]  worker_thread+0x52\/0x3b0\n[629724.513220]  ? process_one_work+0x5a0\/0x5a0\n[629724.514021]  kthread+0xf2\/0x120\n[629724.514627]  ? kthread_complete_and_exit+0x20\/0x20\n[629724.515526]  ret_from_fork+0x22\/0x30\n[629724.516236]  <\/TASK>\n[629724.516694] task:umount          state:D stack:    0 pid:719055 ppid:695412 flags:0x00004000\n[629724.518269] Call Trace:\n[629724.518746]  <TASK>\n[629724.519160]  __schedule+0x3cb\/0xed0\n[629724.519835]  schedule+0x4e\/0xb0\n[629724.520467]  schedule_timeout+0xed\/0x130\n[629724.521221]  ? lock_release+0x220\/0x4a0\n[629724.521946]  ? lock_acquired+0x19c\/0x420\n[629724.522662]  ? trace_hardirqs_on+0x1b\/0xe0\n[629724.523411]  __wait_for_common+0xaf\/0x1f0\n[629724.524189]  ? usleep_range_state+0xb0\/0xb0\n[629724.524997]  __flush_work+0x26d\/0x530\n[629724.525698]  ? flush_workqueue_prep_pwqs+0x140\/0x140\n[629724.526580]  ? lock_acquire+0x1a0\/0x310\n[629724.527324]  __cancel_work_timer+0x137\/0x1c0\n[629724.528190]  close_ctree+0xfd\/0x531 [btrfs]\n[629724.529000]  ? evict_inodes+0x166\/0x1c0\n[629724.529510]  generic_shutdown_super+0x74\/0x120\n[629724.530103]  kill_anon_super+0x14\/0x30\n[629724.530611]  btrfs_kill_super+0x12\/0x20 [btrfs]\n[629724.531246]  deactivate_locked_super+0x31\/0xa0\n[629724.531817]  cleanup_mnt+0x147\/0x1c0\n[629724.532319]  task_work_run+0x5c\/0xa0\n[629724.532984]  exit_to_user_mode_prepare+0x1a6\/0x1b0\n[629724.533598]  syscall_exit_to_user_mode+0x16\/0x40\n[629724.534200]  do_syscall_64+0x48\/0x90\n[629724.534667]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[629724.535318] RIP: 0033:0x7fa2b90437a7\n[629724.535804] RSP: 002b:00007ffe0b7e4458 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6\n[629724.536912] RAX: 0000000000000000 RBX: 00007fa2b9182264 RCX: 00007fa2b90437a7\n[629724.538156] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000555d6cf20dd0\n[629724.539053] RBP: 0000555d6cf20ba0 R08: 0000000000000000 R09: 00007ffe0b7e3200\n[629724.539956] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\n[629724.540883] R13: 0000555d6cf20dd0 R14: 0000555d6cf20cb0 R15: 0000000000000000\n[629724.541796]  <\/TASK>\n\nThis happens because:\n\n1) Before entering close_ctree() we have the async block group reclaim\n   task running and relocating a data block group;\n\n2) There's an async metadata (or data) space reclaim task running;\n\n3) We enter close_ctree() and park the cleaner kthread;\n\n4) The async space reclaim task is at flush_space() and runs all the\n   existing delayed iputs;\n\n5) Before the async space reclaim task calls\n   btrfs_wait_on_delayed_iputs(), the block group reclaim task which is\n   doing the data block group relocation, creates a delayed iput at\n   replace_file_extents() (called when COWing leaves that have file extent\n   items pointing to relocated data exten\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31e70e527806c546a72262f2fc3d982ee23c42d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/341d33128a940c6634175dcb6ca92dc454cfa7d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fadb11f1295289e0da4d3342ecb6b92c1c99540","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49703","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:45.947","lastModified":"2025-02-26T07:01:45.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ibmvfc: Store vhost pointer during subcrq allocation\n\nCurrently the back pointer from a queue to the vhost adapter isn't set\nuntil after subcrq interrupt registration. The value is available when a\nqueue is first allocated and can\/should be also set for primary and async\nqueues as well as subcrqs.\n\nThis fixes a crash observed during kexec\/kdump on Power 9 with legacy XICS\ninterrupt controller where a pending subcrq interrupt from the previous\nkernel can be replayed immediately upon IRQ registration resulting in\ndereference of a garbage backpointer in ibmvfc_interrupt_scsi().\n\nKernel attempted to read user page (58) - exploit attempt? (uid: 0)\nBUG: Kernel NULL pointer dereference on read at 0x00000058\nFaulting instruction address: 0xc008000003216a08\nOops: Kernel access of bad area, sig: 11 [#1]\n...\nNIP [c008000003216a08] ibmvfc_interrupt_scsi+0x40\/0xb0 [ibmvfc]\nLR [c0000000082079e8] __handle_irq_event_percpu+0x98\/0x270\nCall Trace:\n[c000000047fa3d80] [c0000000123e6180] 0xc0000000123e6180 (unreliable)\n[c000000047fa3df0] [c0000000082079e8] __handle_irq_event_percpu+0x98\/0x270\n[c000000047fa3ea0] [c000000008207d18] handle_irq_event+0x98\/0x188\n[c000000047fa3ef0] [c00000000820f564] handle_fasteoi_irq+0xc4\/0x310\n[c000000047fa3f40] [c000000008205c60] generic_handle_irq+0x50\/0x80\n[c000000047fa3f60] [c000000008015c40] __do_irq+0x70\/0x1a0\n[c000000047fa3f90] [c000000008016d7c] __do_IRQ+0x9c\/0x130\n[c000000014622f60] [0000000020000000] 0x20000000\n[c000000014622ff0] [c000000008016e50] do_IRQ+0x40\/0xa0\n[c000000014623020] [c000000008017044] replay_soft_interrupts+0x194\/0x2f0\n[c000000014623210] [c0000000080172a8] arch_local_irq_restore+0x108\/0x170\n[c000000014623240] [c000000008eb1008] _raw_spin_unlock_irqrestore+0x58\/0xb0\n[c000000014623270] [c00000000820b12c] __setup_irq+0x49c\/0x9f0\n[c000000014623310] [c00000000820b7c0] request_threaded_irq+0x140\/0x230\n[c000000014623380] [c008000003212a50] ibmvfc_register_scsi_channel+0x1e8\/0x2f0 [ibmvfc]\n[c000000014623450] [c008000003213d1c] ibmvfc_init_sub_crqs+0xc4\/0x1f0 [ibmvfc]\n[c0000000146234d0] [c0080000032145a8] ibmvfc_reset_crq+0x150\/0x210 [ibmvfc]\n[c000000014623550] [c0080000032147c8] ibmvfc_init_crq+0x160\/0x280 [ibmvfc]\n[c0000000146235f0] [c00800000321a9cc] ibmvfc_probe+0x2a4\/0x530 [ibmvfc]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6d38e3b614ded59da8b95377a98df969a5a5627a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8540f66196ca35b7b5e902932571c18b9fde0cd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeaadcde1a60138bceb65de3cdaeec78170b4459","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49704","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.060","lastModified":"2025-02-26T07:01:46.060","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\n9p: fix fid refcount leak in v9fs_vfs_get_link\n\nwe check for protocol version later than required, after a fid has\nbeen obtained. Just move the version check earlier."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e5690f263208c5abce7451370b7786eb25b405eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7b6d622bd812013eb39c8f4cd65b7ee8ede1e02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0126bcaee81dabc1926012126aa74caa03a4c6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49705","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.177","lastModified":"2025-02-26T07:01:46.177","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\n9p: fix fid refcount leak in v9fs_vfs_atomic_open_dotl\n\nWe need to release directory fid if we fail halfway through open\n\nThis fixes fid leaking with xfstests generic 531"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22832ac3eb5be3f7168816a76b64c1284e12eb3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bc5412ba1a45edfd1e451874c483c26a097af2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/beca774fc51a9ba8abbc869cf0c3d965ff17cd24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49706","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.403","lastModified":"2025-02-26T07:01:46.403","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nzonefs: fix zonefs_iomap_begin() for reads\n\nIf a readahead is issued to a sequential zone file with an offset\nexactly equal to the current file size, the iomap type is set to\nIOMAP_UNWRITTEN, which will prevent an IO, but the iomap length is\ncalculated as 0. This causes a WARN_ON() in iomap_iter():\n\n[17309.548939] WARNING: CPU: 3 PID: 2137 at fs\/iomap\/iter.c:34 iomap_iter+0x9cf\/0xe80\n[...]\n[17309.650907] RIP: 0010:iomap_iter+0x9cf\/0xe80\n[...]\n[17309.754560] Call Trace:\n[17309.757078]  <TASK>\n[17309.759240]  ? lock_is_held_type+0xd8\/0x130\n[17309.763531]  iomap_readahead+0x1a8\/0x870\n[17309.767550]  ? iomap_read_folio+0x4c0\/0x4c0\n[17309.771817]  ? lockdep_hardirqs_on_prepare+0x400\/0x400\n[17309.778848]  ? lock_release+0x370\/0x750\n[17309.784462]  ? folio_add_lru+0x217\/0x3f0\n[17309.790220]  ? reacquire_held_locks+0x4e0\/0x4e0\n[17309.796543]  read_pages+0x17d\/0xb60\n[17309.801854]  ? folio_add_lru+0x238\/0x3f0\n[17309.807573]  ? readahead_expand+0x5f0\/0x5f0\n[17309.813554]  ? policy_node+0xb5\/0x140\n[17309.819018]  page_cache_ra_unbounded+0x27d\/0x450\n[17309.825439]  filemap_get_pages+0x500\/0x1450\n[17309.831444]  ? filemap_add_folio+0x140\/0x140\n[17309.837519]  ? lock_is_held_type+0xd8\/0x130\n[17309.843509]  filemap_read+0x28c\/0x9f0\n[17309.848953]  ? zonefs_file_read_iter+0x1ea\/0x4d0 [zonefs]\n[17309.856162]  ? trace_contention_end+0xd6\/0x130\n[17309.862416]  ? __mutex_lock+0x221\/0x1480\n[17309.868151]  ? zonefs_file_read_iter+0x166\/0x4d0 [zonefs]\n[17309.875364]  ? filemap_get_pages+0x1450\/0x1450\n[17309.881647]  ? __mutex_unlock_slowpath+0x15e\/0x620\n[17309.888248]  ? wait_for_completion_io_timeout+0x20\/0x20\n[17309.895231]  ? lock_is_held_type+0xd8\/0x130\n[17309.901115]  ? lock_is_held_type+0xd8\/0x130\n[17309.906934]  zonefs_file_read_iter+0x356\/0x4d0 [zonefs]\n[17309.913750]  new_sync_read+0x2d8\/0x520\n[17309.919035]  ? __x64_sys_lseek+0x1d0\/0x1d0\n\nFurthermore, this causes iomap_readahead() to loop forever as\niomap_readahead_iter() always returns 0, making no progress.\n\nFix this by treating reads after the file size as access to holes,\nsetting the iomap type to IOMAP_HOLE, the iomap addr to IOMAP_NULL_ADDR\nand using the length argument as is for the iomap length. To simplify\nthe code with this change, zonefs_iomap_begin() is split into the read\nvariant, zonefs_read_iomap_begin() and zonefs_read_iomap_ops, and the\nwrite variant, zonefs_write_iomap_begin() and zonefs_write_iomap_ops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/355be6131164c5bacf2e810763835aecb6e01fcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a7f05f104347b407e865c10be2675cd833a4e48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1c1204c0d0c1dccc1310b9277fb2bd8b663d8fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2f71b9bb398e2e573bdc2574149f42b45efe410","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49707","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.500","lastModified":"2025-02-26T07:01:46.500","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: add reserved GDT blocks check\n\nWe capture a NULL pointer issue when resizing a corrupt ext4 image which\nis freshly clear resize_inode feature (not run e2fsck). It could be\nsimply reproduced by following steps. The problem is because of the\nresize_inode feature was cleared, and it will convert the filesystem to\nmeta_bg mode in ext4_resize_fs(), but the es->s_reserved_gdt_blocks was\nnot reduced to zero, so could we mistakenly call reserve_backup_gdb()\nand passing an uninitialized resize_inode to it when adding new group\ndescriptors.\n\n mkfs.ext4 \/dev\/sda 3G\n tune2fs -O ^resize_inode \/dev\/sda #forget to run requested e2fsck\n mount \/dev\/sda \/mnt\n resize2fs \/dev\/sda 8G\n\n ========\n BUG: kernel NULL pointer dereference, address: 0000000000000028\n CPU: 19 PID: 3243 Comm: resize2fs Not tainted 5.18.0-rc7-00001-gfde086c5ebfd #748\n ...\n RIP: 0010:ext4_flex_group_add+0xe08\/0x2570\n ...\n Call Trace:\n  <TASK>\n  ext4_resize_fs+0xbec\/0x1660\n  __ext4_ioctl+0x1749\/0x24e0\n  ext4_ioctl+0x12\/0x20\n  __x64_sys_ioctl+0xa6\/0x110\n  do_syscall_64+0x3b\/0x90\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n RIP: 0033:0x7f2dd739617b\n ========\n\nThe fix is simple, add a check in ext4_resize_begin() to make sure that\nthe es->s_reserved_gdt_blocks is zero when the resize_inode feature is\ndisabled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dc2fca8e4f9ac4a40e8424a10163369cca0cc06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33b1bba31f4c784d33d2c2517964bdccdc9204cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c921328ac760bba780bdace41f4cd045f7f1405","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af75c481a2e45e70f62f5942c93695e95bf7bd21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b55c3cd102a6f48b90e61c44f7f3dda8c290c694","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9747263b13e5290ac4d63bec47e38f701303cad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfd004a1d3a062aac300523d406ac1f3e5f1a82c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fba54289176702a7caac0b64738406775817f451","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49708","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.607","lastModified":"2025-02-26T07:01:46.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix bug_on ext4_mb_use_inode_pa\n\nHulk Robot reported a BUG_ON:\n==================================================================\nkernel BUG at fs\/ext4\/mballoc.c:3211!\n[...]\nRIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85\/0x136f\n[...]\nCall Trace:\n ext4_mb_new_blocks+0x9df\/0x5d30\n ext4_ext_map_blocks+0x1803\/0x4d80\n ext4_map_blocks+0x3a4\/0x1a10\n ext4_writepages+0x126d\/0x2c30\n do_writepages+0x7f\/0x1b0\n __filemap_fdatawrite_range+0x285\/0x3b0\n file_write_and_wait_range+0xb1\/0x140\n ext4_sync_file+0x1aa\/0xca0\n vfs_fsync_range+0xfb\/0x260\n do_fsync+0x48\/0xa0\n[...]\n==================================================================\n\nAbove issue may happen as follows:\n-------------------------------------\ndo_fsync\n vfs_fsync_range\n  ext4_sync_file\n   file_write_and_wait_range\n    __filemap_fdatawrite_range\n     do_writepages\n      ext4_writepages\n       mpage_map_and_submit_extent\n        mpage_map_one_extent\n         ext4_map_blocks\n          ext4_mb_new_blocks\n           ext4_mb_normalize_request\n            >>> start + size <= ac->ac_o_ex.fe_logical\n           ext4_mb_regular_allocator\n            ext4_mb_simple_scan_group\n             ext4_mb_use_best_found\n              ext4_mb_new_preallocation\n               ext4_mb_new_inode_pa\n                ext4_mb_use_inode_pa\n                 >>> set ac->ac_b_ex.fe_len <= 0\n           ext4_mb_mark_diskspace_used\n            >>> BUG_ON(ac->ac_b_ex.fe_len <= 0);\n\nwe can easily reproduce this problem with the following commands:\n\t`fallocate -l100M disk`\n\t`mkfs.ext4 -b 1024 -g 256 disk`\n\t`mount disk \/mnt`\n\t`fsstress -d \/mnt -l 0 -n 1000 -p 1`\n\nThe size must be smaller than or equal to EXT4_BLOCKS_PER_GROUP.\nTherefore, \"start + size <= ac->ac_o_ex.fe_logical\" may occur\nwhen the size is truncated. So start should be the start position of\nthe group where ac_o_ex.fe_logical is located after alignment.\nIn addition, when the value of fe_logical or EXT4_BLOCKS_PER_GROUP\nis very large, the value calculated by start_off is more accurate."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5707d721d1819db57dba57b1d4623034fcb32047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6880fb2e64331b9fdc85d3f32b1d7e81ad8703f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fdaf31ad5f3d3afab744dfd9a8b0d9142aa881f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/887a3e9ad4b8309a2266bce7ae749b2bf1f7a687","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90f0f9d45dff0128c0fca0d2358c4153b024afa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a08f789d2ab5242c07e716baf9a835725046be89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a37c1359714da42517dd19d36fc3c4d17edba832","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6b31616e5afe1d3972cb0682a373e50597faf5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49709","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.710","lastModified":"2025-02-26T07:01:46.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncfi: Fix __cfi_slowpath_diag RCU usage with cpuidle\n\nRCU_NONIDLE usage during __cfi_slowpath_diag can result in an invalid\nRCU state in the cpuidle code path:\n\n  WARNING: CPU: 1 PID: 0 at kernel\/rcu\/tree.c:613 rcu_eqs_enter+0xe4\/0x138\n  ...\n  Call trace:\n    rcu_eqs_enter+0xe4\/0x138\n    rcu_idle_enter+0xa8\/0x100\n    cpuidle_enter_state+0x154\/0x3a8\n    cpuidle_enter+0x3c\/0x58\n    do_idle.llvm.6590768638138871020+0x1f4\/0x2ec\n    cpu_startup_entry+0x28\/0x2c\n    secondary_start_kernel+0x1b8\/0x220\n    __secondary_switched+0x94\/0x98\n\nInstead, call rcu_irq_enter\/exit to wake up RCU only when needed and\ndisable interrupts for the entire CFI shadow\/module check when we do."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/57cd6d157eb479f0a8e820fd36b7240845c8a937","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75f3a5fa2ad049c85ab5d5ee1ed9cfaa7e62c5ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca3897f2ac02ceae5e6fa794f83c36f9885b93da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49710","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.800","lastModified":"2025-02-26T07:01:46.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm mirror log: round up region bitmap size to BITS_PER_LONG\n\nThe code in dm-log rounds up bitset_size to 32 bits. It then uses\nfind_next_zero_bit_le on the allocated region. find_next_zero_bit_le\naccesses the bitmap using unsigned long pointers. So, on 64-bit\narchitectures, it may access 4 bytes beyond the allocated size.\n\nFix this bug by rounding up bitset_size to BITS_PER_LONG.\n\nThis bug was found by running the lvm2 testsuite with kasan."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d2209b54f1de0c2f99cab246d4cf2cfe24aaaa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85e123c27d5cbc22cfdc01de1e2ca1d9003a02d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a02f3275acc628c0d956be771405ced79ac36df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae460312875159285cef5bf3dc654593f404a1ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba751f0d25f07aa21ce9b85372a3792bf7969d13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49711","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.893","lastModified":"2025-02-26T07:01:46.893","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbus: fsl-mc-bus: fix KASAN use-after-free in fsl_mc_bus_remove()\n\nIn fsl_mc_bus_remove(), mc->root_mc_bus_dev->mc_io is passed to\nfsl_destroy_mc_io(). However, mc->root_mc_bus_dev is already freed in\nfsl_mc_device_remove(). Then reference to mc->root_mc_bus_dev->mc_io\ntriggers KASAN use-after-free. To avoid the use-after-free, keep the\nreference to mc->root_mc_bus_dev->mc_io in a local variable and pass to\nfsl_destroy_mc_io().\n\nThis patch needs rework to apply to kernels older than v5.15."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/161b68b0a728377aaa10a8e14c70e7734f3c9ff7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/928ea98252ad75118950941683893cf904541da9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccd1751092341ac120a961835211f9f2e3735963","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49712","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:46.987","lastModified":"2025-02-26T07:01:46.987","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: lpc32xx_udc: Fix refcount leak in lpc32xx_udc_probe\n\nof_parse_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak.\nof_node_put() will check NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ef6917c0524da5b88496b9706628ffef108b9bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a598da14856ead80c726b38ba426c68637d9211","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46da1e4a8b6329479433b2a4056941dfdd7f3efd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4757c9ade34178b351580133771f510b5ffcf9c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57901c658f77d9ea2e772f35cb38e47efb54c558","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/727c82d003e0ec64411fd1257a9a57de4ad7a99a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b75bddfcc18170ce8e3fb695a76ec2dec4ce0ea5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d85e4e6284a91aa2d1ab004e9d84b9c09b4aa203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49713","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.083","lastModified":"2025-02-26T07:01:47.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: Fix memory leak in dwc2_hcd_init\n\nusb_create_hcd will alloc memory for hcd, and we should\ncall usb_put_hcd to free it when platform_get_resource()\nfails to prevent memory leak.\ngoto error2 label instead error1 to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3755278f078460b021cd0384562977bf2039a57a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52bfcedbfd5bf962dbdcb6e761f4d0dd3ba26dfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6506aff2dc2f7059aa3d45ee2e8639b25e87090f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/701d8ec01e0f229d4db6f43d3d64ee479120cbeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84e6d0af87e27bbc0db94f2e7323b34abe17b6e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/981ee40649e5fd9550f82db1fbb3bfab037da346","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a44a8a762f7fe9ad3c065813d058e835a6180cb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49714","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.170","lastModified":"2025-02-26T07:01:47.170","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/realtek-rtl: Fix refcount leak in map_interrupts\n\nof_find_node_by_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nThis function doesn't call of_node_put() in error path.\nCall of_node_put() directly after of_property_read_u32() to cover\nboth normal path and error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e85b1b797de0e7a271b906291ce28245822820b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eff4780f83d0ae3e5b6c02ff5d999dc4c1c5c8ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6d6223df0666fbc054e3a8c6ac14eb0af37c286","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49715","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.257","lastModified":"2025-02-26T07:01:47.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/gic-v3: Fix refcount leak in gic_populate_ppi_partitions\n\nof_find_node_by_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/506a88a5bf261d76a5214c0338a320f2214c67ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d884c08eeb83142a7173cb46bcff0434ec42cf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c136c2924a59a399aa789858cfb320d481964fb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc5984cf270b69d03f9f4b27063e535036c659e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e824482e2c5edacc961b7dd30a92fd47606c3036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa1ad9d4cc47ca2470cd904ad4519f05d7e43a2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49716","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.350","lastModified":"2025-02-26T07:01:47.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/gic-v3: Fix error handling in gic_populate_ppi_partitions\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nWhen kcalloc fails, it missing of_node_put() and results in refcount\nleak. Fix this by goto out_put_node label."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b325d993995a321f6ab4e6c51f0504ec092bf5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58e67c81e229351027d28c610638378606e33a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c9dd9d23f26dabcfb14148b9acdfba540418b19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c83c34c57798fc41faefcf078be78683db2f4beb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec8401a429ffee34ccf38cebf3443f8d5ae6cb0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49717","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.440","lastModified":"2025-02-26T07:01:47.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/apple-aic: Fix refcount leak in build_fiq_affinity\n\nof_find_node_by_phandle() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dc14cebe5dc053434b507bb24e6821cb795050f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1ac803f47cb1615468f35cf1ccb553c52087301","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49718","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.527","lastModified":"2025-02-26T07:01:47.527","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/apple-aic: Fix refcount leak in aic_of_ic_init\n\nof_get_child_by_name() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d45670fab3c25a7452721e4588cc95c51cda134","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c0010d1dc67c89bcc857c46f542efe318f84ddc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49719","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.613","lastModified":"2025-02-26T07:01:47.613","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/gic\/realview: Fix refcount leak in realview_gic_of_init\n\nof_find_matching_node_and_match() returns a node pointer with refcount\nincremented, we should use of_node_put() on it when not need anymore.\nAdd missing of_node_put() to avoid refcount leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16b603cb8d34c2d917983918db1f88c8b831baaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/486f68f85085d9b16ae097679b1486dcb1b6eb69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56526c3883fc7a1f5898b1d40a02c8b8685a5d92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d38720661a4b9c87705c206a6081177ffb8ec1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87da903ce632d5689bef66d56ee5dae700d82104","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b634af84bc1edece4e63317b0ad95618dd3a8693","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e52a58b79f11755ea7e877015c4a1704303fa55f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4b98e314888cc51486421bcf6d52852452ea48b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49720","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.703","lastModified":"2025-02-26T07:01:47.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: Fix handling of offline queues in blk_mq_alloc_request_hctx()\n\nThis patch prevents that test nvme\/004 triggers the following:\n\nUBSAN: array-index-out-of-bounds in block\/blk-mq.h:135:9\nindex 512 is out of range for type 'long unsigned int [512]'\nCall Trace:\n show_stack+0x52\/0x58\n dump_stack_lvl+0x49\/0x5e\n dump_stack+0x10\/0x12\n ubsan_epilogue+0x9\/0x3b\n __ubsan_handle_out_of_bounds.cold+0x44\/0x49\n blk_mq_alloc_request_hctx+0x304\/0x310\n __nvme_submit_sync_cmd+0x70\/0x200 [nvme_core]\n nvmf_connect_io_queue+0x23e\/0x2a0 [nvme_fabrics]\n nvme_loop_connect_io_queues+0x8d\/0xb0 [nvme_loop]\n nvme_loop_create_ctrl+0x58e\/0x7d0 [nvme_loop]\n nvmf_create_ctrl+0x1d7\/0x4d0 [nvme_fabrics]\n nvmf_dev_write+0xae\/0x111 [nvme_fabrics]\n vfs_write+0x144\/0x560\n ksys_write+0xb7\/0x140\n __x64_sys_write+0x42\/0x50\n do_syscall_64+0x35\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14dc7a18abbe4176f5626c13c333670da8e06aa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa28a7c3d74933a4fc22d341b60927952f31c19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b202a0bd2580ee5b0453772c46d464152fafff73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5e65ef044d627effdc2599040b6d204e003f955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49721","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.793","lastModified":"2025-02-26T07:01:47.793","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: ftrace: consistently handle PLTs.\n\nSometimes it is necessary to use a PLT entry to call an ftrace\ntrampoline. This is handled by ftrace_make_call() and ftrace_make_nop(),\nwith each having *almost* identical logic, but this is not handled by\nftrace_modify_call() since its introduction in commit:\n\n  3b23e4991fb66f6d (\"arm64: implement ftrace with regs\")\n\nDue to this, if we ever were to call ftrace_modify_call() for a callsite\nwhich requires a PLT entry for a trampoline, then either:\n\na) If the old addr requires a trampoline, ftrace_modify_call() will use\n   an out-of-range address to generate the 'old' branch instruction.\n   This will result in warnings from aarch64_insn_gen_branch_imm() and\n   ftrace_modify_code(), and no instructions will be modified. As\n   ftrace_modify_call() will return an error, this will result in\n   subsequent internal ftrace errors.\n\nb) If the old addr does not require a trampoline, but the new addr does,\n   ftrace_modify_call() will use an out-of-range address to generate the\n   'new' branch instruction. This will result in warnings from\n   aarch64_insn_gen_branch_imm(), and ftrace_modify_code() will replace\n   the 'old' branch with a BRK. This will result in a kernel panic when\n   this BRK is later executed.\n\nPractically speaking, case (a) is vastly more likely than case (b), and\ntypically this will result in internal ftrace errors that don't\nnecessarily affect the rest of the system. This can be demonstrated with\nan out-of-tree test module which triggers ftrace_modify_call(), e.g.\n\n| # insmod test_ftrace.ko\n| test_ftrace: Function test_function raw=0xffffb3749399201c, callsite=0xffffb37493992024\n| branch_imm_common: offset out of range\n| branch_imm_common: offset out of range\n| ------------[ ftrace bug ]------------\n| ftrace failed to modify\n| [<ffffb37493992024>] test_function+0x8\/0x38 [test_ftrace]\n|  actual:   1d:00:00:94\n| Updating ftrace call site to call a different ftrace function\n| ftrace record flags: e0000002\n|  (2) R\n|  expected tramp: ffffb374ae42ed54\n| ------------[ cut here ]------------\n| WARNING: CPU: 0 PID: 165 at kernel\/trace\/ftrace.c:2085 ftrace_bug+0x280\/0x2b0\n| Modules linked in: test_ftrace(+)\n| CPU: 0 PID: 165 Comm: insmod Not tainted 5.19.0-rc2-00002-g4d9ead8b45ce #13\n| Hardware name: linux,dummy-virt (DT)\n| pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n| pc : ftrace_bug+0x280\/0x2b0\n| lr : ftrace_bug+0x280\/0x2b0\n| sp : ffff80000839ba00\n| x29: ffff80000839ba00 x28: 0000000000000000 x27: ffff80000839bcf0\n| x26: ffffb37493994180 x25: ffffb374b0991c28 x24: ffffb374b0d70000\n| x23: 00000000ffffffea x22: ffffb374afcc33b0 x21: ffffb374b08f9cc8\n| x20: ffff572b8462c000 x19: ffffb374b08f9000 x18: ffffffffffffffff\n| x17: 6c6c6163202c6331 x16: ffffb374ae5ad110 x15: ffffb374b0d51ee4\n| x14: 0000000000000000 x13: 3435646532346561 x12: 3437336266666666\n| x11: 203a706d61727420 x10: 6465746365707865 x9 : ffffb374ae5149e8\n| x8 : 336266666666203a x7 : 706d617274206465 x6 : 00000000fffff167\n| x5 : ffff572bffbc4a08 x4 : 00000000fffff167 x3 : 0000000000000000\n| x2 : 0000000000000000 x1 : ffff572b84461e00 x0 : 0000000000000022\n| Call trace:\n|  ftrace_bug+0x280\/0x2b0\n|  ftrace_replace_code+0x98\/0xa0\n|  ftrace_modify_all_code+0xe0\/0x144\n|  arch_ftrace_update_code+0x14\/0x20\n|  ftrace_startup+0xf8\/0x1b0\n|  register_ftrace_function+0x38\/0x90\n|  test_ftrace_init+0xd0\/0x1000 [test_ftrace]\n|  do_one_initcall+0x50\/0x2b0\n|  do_init_module+0x50\/0x1f0\n|  load_module+0x17c8\/0x1d64\n|  __do_sys_finit_module+0xa8\/0x100\n|  __arm64_sys_finit_module+0x2c\/0x3c\n|  invoke_syscall+0x50\/0x120\n|  el0_svc_common.constprop.0+0xdc\/0x100\n|  do_el0_svc+0x3c\/0xd0\n|  el0_svc+0x34\/0xb0\n|  el0t_64_sync_handler+0xbc\/0x140\n|  el0t_64_sync+0x18c\/0x190\n| ---[ end trace 0000000000000000 ]---\n\nWe can solve this by consistently determining whether to use a PLT entry\nfor an address.\n\nNote that since (the earlier) commit:\n\n  f1a54ae9\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a6253579977e4c6f7818eeb05bf2bc65678a7187","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc28fde90937a920f7714ec4408269cac744f796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db73aa9466338ec821ed2a0b01721fe4d06876b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcecc96ed16f73417de5550f384e348c9d56f279","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49722","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.887","lastModified":"2025-02-26T07:01:47.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: Fix memory corruption in VF driver\n\nDisable VF's RX\/TX queues, when it's disabled. VF can have queues enabled,\nwhen it requests a reset. If PF driver assumes that VF is disabled,\nwhile VF still has queues configured, VF may unmap DMA resources.\nIn such scenario device still can map packets to memory, which ends up\nsilently corrupting it.\nPreviously, VF driver could experience memory corruption, which lead to\ncrash:\n[ 5119.170157] BUG: unable to handle kernel paging request at 00001b9780003237\n[ 5119.170166] PGD 0 P4D 0\n[ 5119.170173] Oops: 0002 [#1] PREEMPT_RT SMP PTI\n[ 5119.170181] CPU: 30 PID: 427592 Comm: kworker\/u96:2 Kdump: loaded Tainted: G        W I      --------- -  - 4.18.0-372.9.1.rt7.166.el8.x86_64 #1\n[ 5119.170189] Hardware name: Dell Inc. PowerEdge R740\/014X06, BIOS 2.3.10 08\/15\/2019\n[ 5119.170193] Workqueue: iavf iavf_adminq_task [iavf]\n[ 5119.170219] RIP: 0010:__page_frag_cache_drain+0x5\/0x30\n[ 5119.170238] Code: 0f 0f b6 77 51 85 f6 74 07 31 d2 e9 05 df ff ff e9 90 fe ff ff 48 8b 05 49 db 33 01 eb b4 0f 1f 80 00 00 00 00 0f 1f 44 00 00 <f0> 29 77 34 74 01 c3 48 8b 07 f6 c4 80 74 0f 0f b6 77 51 85 f6 74\n[ 5119.170244] RSP: 0018:ffffa43b0bdcfd78 EFLAGS: 00010282\n[ 5119.170250] RAX: ffffffff896b3e40 RBX: ffff8fb282524000 RCX: 0000000000000002\n[ 5119.170254] RDX: 0000000049000000 RSI: 0000000000000000 RDI: 00001b9780003203\n[ 5119.170259] RBP: ffff8fb248217b00 R08: 0000000000000022 R09: 0000000000000009\n[ 5119.170262] R10: 2b849d6300000000 R11: 0000000000000020 R12: 0000000000000000\n[ 5119.170265] R13: 0000000000001000 R14: 0000000000000009 R15: 0000000000000000\n[ 5119.170269] FS:  0000000000000000(0000) GS:ffff8fb1201c0000(0000) knlGS:0000000000000000\n[ 5119.170274] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 5119.170279] CR2: 00001b9780003237 CR3: 00000008f3e1a003 CR4: 00000000007726e0\n[ 5119.170283] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 5119.170286] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 5119.170290] PKRU: 55555554\n[ 5119.170292] Call Trace:\n[ 5119.170298]  iavf_clean_rx_ring+0xad\/0x110 [iavf]\n[ 5119.170324]  iavf_free_rx_resources+0xe\/0x50 [iavf]\n[ 5119.170342]  iavf_free_all_rx_resources.part.51+0x30\/0x40 [iavf]\n[ 5119.170358]  iavf_virtchnl_completion+0xd8a\/0x15b0 [iavf]\n[ 5119.170377]  ? iavf_clean_arq_element+0x210\/0x280 [iavf]\n[ 5119.170397]  iavf_adminq_task+0x126\/0x2e0 [iavf]\n[ 5119.170416]  process_one_work+0x18f\/0x420\n[ 5119.170429]  worker_thread+0x30\/0x370\n[ 5119.170437]  ? process_one_work+0x420\/0x420\n[ 5119.170445]  kthread+0x151\/0x170\n[ 5119.170452]  ? set_kthread_struct+0x40\/0x40\n[ 5119.170460]  ret_from_fork+0x35\/0x40\n[ 5119.170477] Modules linked in: iavf sctp ip6_udp_tunnel udp_tunnel mlx4_en mlx4_core nfp tls vhost_net vhost vhost_iotlb tap tun xt_CHECKSUM ipt_MASQUERADE xt_conntrack ipt_REJECT nf_reject_ipv4 nft_compat nft_counter nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 nf_tables nfnetlink bridge stp llc rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache sunrpc intel_rapl_msr iTCO_wdt iTCO_vendor_support dell_smbios wmi_bmof dell_wmi_descriptor dcdbas kvm_intel kvm irqbypass intel_rapl_common isst_if_common skx_edac irdma nfit libnvdimm x86_pkg_temp_thermal i40e intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ib_uverbs rapl ipmi_ssif intel_cstate intel_uncore mei_me pcspkr acpi_ipmi ib_core mei lpc_ich i2c_i801 ipmi_si ipmi_devintf wmi ipmi_msghandler acpi_power_meter xfs libcrc32c sd_mod t10_pi sg mgag200 drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ice ahci drm libahci crc32c_intel libata tg3 megaraid_sas\n[ 5119.170613]  i2c_algo_bit dm_mirror dm_region_hash dm_log dm_mod fuse [last unloaded: iavf]\n[ 5119.170627] CR2: 00001b9780003237"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bb8253b1dd44cf004e12c333acc6f25ee286cf3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efe41860008e57fb6b69855b4b93fdf34bc42798","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49723","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:47.980","lastModified":"2025-02-26T07:01:47.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/i915\/reset: Fix error_state_read ptr + offset use\n\nFix our pointer offset usage in error_state_read\nwhen there is no i915_gpu_coredump but buf offset\nis non-zero.\n\nThis fixes a kernel page fault can happen when\nmultiple tests are running concurrently in a loop\nand one is producing engine resets and consuming\nthe i915 error_state dump while the other is\nforcing full GT resets. (takes a while to trigger).\n\nThe dmesg call trace:\n\n[ 5590.803000] BUG: unable to handle page fault for address:\n               ffffffffa0b0e000\n[ 5590.803009] #PF: supervisor read access in kernel mode\n[ 5590.803013] #PF: error_code(0x0000) - not-present page\n[ 5590.803016] PGD 5814067 P4D 5814067 PUD 5815063 PMD 109de4067\n               PTE 0\n[ 5590.803022] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[ 5590.803026] CPU: 5 PID: 13656 Comm: i915_hangman Tainted: G U\n                    5.17.0-rc5-ups69-guc-err-capt-rev6+ #136\n[ 5590.803033] Hardware name: Intel Corporation Alder Lake Client\n                    Platform\/AlderLake-M LP4x RVP, BIOS ADLPFWI1.R00.\n                    3031.A02.2201171222\t01\/17\/2022\n[ 5590.803039] RIP: 0010:memcpy_erms+0x6\/0x10\n[ 5590.803045] Code: fe ff ff cc eb 1e 0f 1f 00 48 89 f8 48 89 d1\n                     48 c1 e9 03 83 e2 07 f3 48 a5 89 d1 f3 a4 c3\n                     66 0f 1f 44 00 00 48 89 f8 48 89 d1 <f3> a4\n                     c3 0f 1f 80 00 00 00 00 48 89 f8 48 83 fa 20\n                     72 7e 40 38 fe\n[ 5590.803054] RSP: 0018:ffffc90003a8fdf0 EFLAGS: 00010282\n[ 5590.803057] RAX: ffff888107ee9000 RBX: ffff888108cb1a00\n               RCX: 0000000000000f8f\n[ 5590.803061] RDX: 0000000000001000 RSI: ffffffffa0b0e000\n               RDI: ffff888107ee9071\n[ 5590.803065] RBP: 0000000000000000 R08: 0000000000000001\n               R09: 0000000000000001\n[ 5590.803069] R10: 0000000000000001 R11: 0000000000000002\n               R12: 0000000000000019\n[ 5590.803073] R13: 0000000000174fff R14: 0000000000001000\n               R15: ffff888107ee9000\n[ 5590.803077] FS: 00007f62a99bee80(0000) GS:ffff88849f880000(0000)\n               knlGS:0000000000000000\n[ 5590.803082] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 5590.803085] CR2: ffffffffa0b0e000 CR3: 000000010a1a8004\n               CR4: 0000000000770ee0\n[ 5590.803089] PKRU: 55555554\n[ 5590.803091] Call Trace:\n[ 5590.803093] <TASK>\n[ 5590.803096] error_state_read+0xa1\/0xd0 [i915]\n[ 5590.803175] kernfs_fop_read_iter+0xb2\/0x1b0\n[ 5590.803180] new_sync_read+0x116\/0x1a0\n[ 5590.803185] vfs_read+0x114\/0x1b0\n[ 5590.803189] ksys_read+0x63\/0xe0\n[ 5590.803193] do_syscall_64+0x38\/0xc0\n[ 5590.803197] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ 5590.803201] RIP: 0033:0x7f62aaea5912\n[ 5590.803204] Code: c0 e9 b2 fe ff ff 50 48 8d 3d 5a b9 0c 00 e8 05\n                     19 02 00 0f 1f 44 00 00 f3 0f 1e fa 64 8b 04 25\n                     18 00 00 00 85 c0 75 10 0f 05 <48> 3d 00 f0 ff\n                     ff 77 56 c3 0f 1f 44 00 00 48 83 ec 28 48 89 54 24\n[ 5590.803213] RSP: 002b:00007fff5b659ae8 EFLAGS: 00000246\n               ORIG_RAX: 0000000000000000\n[ 5590.803218] RAX: ffffffffffffffda RBX: 0000000000100000\n               RCX: 00007f62aaea5912\n[ 5590.803221] RDX: 000000000008b000 RSI: 00007f62a8c4000f\n               RDI: 0000000000000006\n[ 5590.803225] RBP: 00007f62a8bcb00f R08: 0000000000200010\n               R09: 0000000000101000\n[ 5590.803229] R10: 0000000000000001 R11: 0000000000000246\n               R12: 0000000000000006\n[ 5590.803233] R13: 0000000000075000 R14: 00007f62a8acb010\n               R15: 0000000000200000\n[ 5590.803238] <\/TASK>\n[ 5590.803240] Modules linked in: i915 ttm drm_buddy drm_dp_helper\n                        drm_kms_helper syscopyarea sysfillrect sysimgblt\n                        fb_sys_fops prime_numbers nfnetlink br_netfilter\n                        overlay mei_pxp mei_hdcp x86_pkg_temp_thermal\n                        coretemp kvm_intel snd_hda_codec_hdmi snd_hda_intel\n        \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/606e5d565605e26bf61a0933a6d56940f339c080","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63b26fe0252f923e6aca373e3ad4b31202dcd331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9b576d0c7bf55aeae1a736da7974fa202c4394d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4c5eba87675a07a6c28cdaca7366aeb4258ec78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49724","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.073","lastModified":"2025-02-26T07:01:48.073","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: goldfish: Fix free_irq() on remove\n\nPass the correct dev_id to free_irq() to fix this splat when the driver\nis unbound:\n\n WARNING: CPU: 0 PID: 30 at kernel\/irq\/manage.c:1895 free_irq\n Trying to free already-free IRQ 65\n Call Trace:\n  warn_slowpath_fmt\n  free_irq\n  goldfish_tty_remove\n  platform_remove\n  device_remove\n  device_release_driver_internal\n  device_driver_detach\n  unbind_store\n  drv_attr_store\n  ..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/499e13aac6c762e1e828172b0f0f5275651d6512","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65ca4db68b6819244df9024aea4be55edf8af1ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6fcd7ffd76a9c1d998a2d02d518c78a55c5bed8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4b0b8edccb0cfb15a8cecf4161e0571d3daac64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c83a1d40dc624070a203eb383ef9fb60eb634136","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7183c76d500324b8b5bd0af5e663cfa57b7b836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb15e79cacddfbc62264e6e807bde50ad688e988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49725","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.167","lastModified":"2025-02-26T07:01:48.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix call trace in setup_tx_descriptors\n\nAfter PF reset and ethtool -t there was call trace in dmesg\nsometimes leading to panic. When there was some time, around 5\nseconds, between reset and test there were no errors.\n\nProblem was that pf reset calls i40e_vsi_close in prep_for_reset\nand ethtool -t calls i40e_vsi_close in diag_test. If there was not\nenough time between those commands the second i40e_vsi_close starts\nbefore previous i40e_vsi_close was done which leads to crash.\n\nAdd check to diag_test if pf is in reset and don't start offline\ntests if it is true.\nAdd netif_info(\"testing failed\") into unhappy path of i40e_diag_test()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a4e5a3dc5e41212870e6043895ae02455c93f63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/15950157e2c24865b696db1c9ccc72743ae0e967","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/322271351b0e41565171e4cce70ea41854fac115","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ba9956ca57e361fb13ea369bb753eb33177acc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/814092927a215f5ca6c08249ec72a205e0b473cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd5855e6b1358e816710afee68a1d2bc685176ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff6e03fe84bc917bb0c907d02de668c2fe101712","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49726","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.257","lastModified":"2025-02-26T07:01:48.257","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclocksource: hyper-v: unexport __init-annotated hv_init_clocksource()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because the only in-tree call-site,\narch\/x86\/kernel\/cpu\/mshyperv.c is never compiled as modular.\n(CONFIG_HYPERVISOR_GUEST is boolean)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0414eab7c78f3518143d383e448d44fc573ac6d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/245b993d8f6c4e25f19191edfbd8080b645e12b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/937fcbb55a1e48a6422e87e8f49422c92265f102","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cff3a7ce6e81418b6e8bac941779bbf5d342d626","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db965e2757d95f695e606856418cd84003dd036d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49727","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.347","lastModified":"2025-02-26T07:01:48.347","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix signed integer overflow in l2tp_ip6_sendmsg\n\nWhen len >= INT_MAX - transhdrlen, ulen = len + transhdrlen will be\noverflow. To fix, we can follow what udpv6 does and subtract the\ntranshdrlen from the max."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/034246122f5c5e2e2a0b9fe04e24517920e9beb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e818d433fc2718fe4da044ffca7431812a7e04e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27a37755ceb401111ded76810359d3adc4b268a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cf73c7cb6125083408d77f43d0e84d86aed0000","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f42389d270f2304c8855b0b63498a5a4d0c053d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c4e3486d21173d60925ef52e512cae727b43d30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8879ca1fd7348b4d5db7db86dcb97f60c73d751","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f638a84afef3dfe10554c51820c16e39a278c915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49728","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.433","lastModified":"2025-02-26T07:01:48.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix signed integer overflow in __ip6_append_data\n\nResurrect ubsan overflow checks and ubsan report this warning,\nfix it by change the variable [length] type to size_t.\n\nUBSAN: signed-integer-overflow in net\/ipv6\/ip6_output.c:1489:19\n2147479552 + 8567 cannot be represented in type 'int'\nCPU: 0 PID: 253 Comm: err Not tainted 5.16.0+ #1\nHardware name: linux,dummy-virt (DT)\nCall trace:\n  dump_backtrace+0x214\/0x230\n  show_stack+0x30\/0x78\n  dump_stack_lvl+0xf8\/0x118\n  dump_stack+0x18\/0x30\n  ubsan_epilogue+0x18\/0x60\n  handle_overflow+0xd0\/0xf0\n  __ubsan_handle_add_overflow+0x34\/0x44\n  __ip6_append_data.isra.48+0x1598\/0x1688\n  ip6_append_data+0x128\/0x260\n  udpv6_sendmsg+0x680\/0xdd0\n  inet6_sendmsg+0x54\/0x90\n  sock_sendmsg+0x70\/0x88\n  ____sys_sendmsg+0xe8\/0x368\n  ___sys_sendmsg+0x98\/0xe0\n  __sys_sendmmsg+0xf4\/0x3b8\n  __arm64_sys_sendmmsg+0x34\/0x48\n  invoke_syscall+0x64\/0x160\n  el0_svc_common.constprop.4+0x124\/0x300\n  do_el0_svc+0x44\/0xc8\n  el0_svc+0x3c\/0x1e8\n  el0t_64_sync_handler+0x88\/0xb0\n  el0t_64_sync+0x16c\/0x170\n\nChanges since v1:\n-Change the variable [length] type to unsigned, as Eric Dumazet suggested.\nChanges since v2:\n-Don't change exthdrlen type in ip6_make_skb, as Paolo Abeni suggested.\nChanges since v3:\n-Don't change ulen type in udpv6_sendmsg and l2tp_ip6_sendmsg, as\nJakub Kicinski suggested."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84dc940890e91e42898e4443a093281702440abf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f93431c86b631bbca5614c66f966bf3ddb3c2803","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49729","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.523","lastModified":"2025-02-26T07:01:48.523","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfc: nfcmrvl: Fix memory leak in nfcmrvl_play_deferred\n\nSimilar to the handling of play_deferred in commit 19cfe912c37b\n(\"Bluetooth: btusb: Fix memory leak in play_deferred\"), we thought\na patch might be needed here as well.\n\nCurrently usb_submit_urb is called directly to submit deferred tx\nurbs after unanchor them.\n\nSo the usb_giveback_urb_bh would failed to unref it in usb_unanchor_urb\nand cause memory leak.\n\nPut those urbs in tx_anchor to avoid the leak, and also fix the error\nhandling."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nfc: nfcmrvl: Fix memory leak in nfcmrvl_play_deferred De forma similar a la gestión de play_deferred en el commit 19cfe912c37b (\"Bluetooth: btusb: Fix memory leak in play_deferred\"), pensamos que también podría ser necesario un parche aquí. Actualmente, se llama a usb_submit_urb directamente para enviar urbs de tx diferidas después de desanclarlas. Por lo tanto, usb_giveback_urb_bh no podría desreferenciarla en usb_unanchor_urb y provocaría una pérdida de memoria. Coloque esas urbs en tx_anchor para evitar la pérdida y también corrija la gestión de errores."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0eeec1a8b0cd38c47edeb042980a6aeacecf35ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1eb0afecfb9cd0f38424b82bd9aaa542310934ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e7c7df6991ac349f2fa8540047757df666e610f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eadc560c1919b8193d17334145dad9a917960e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6616872cfe7f0474a22dd1f12699f95bcf81a54d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b4d8b44e7163a77fe942f5b80e1651c1b78c537","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a4d480702b71184fabcf379b80bf7539716752e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f21f908347712b8288ffe83b531b5e977042b29c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49730","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.620","lastModified":"2025-02-26T07:01:48.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: lpfc: Resolve NULL ptr dereference after an ELS LOGO is aborted\n\nA use-after-free crash can occur after an ELS LOGO is aborted.\n\nSpecifically, a nodelist structure is freed and then\nndlp->vport->cfg_log_verbose is dereferenced in lpfc_nlp_get() when the\ndiscovery state machine is mistakenly called a second time with\nNLP_EVT_DEVICE_RM argument.\n\nRework lpfc_cmpl_els_logo() to prevent the duplicate calls to release a\nnodelist structure."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: scsi: lpfc: Resolver la desreferencia de ptr NULL después de que se cancele un LOGOTIPO ELS Se puede producir un fallo de use-after-free después de que se cancele un LOGOTIPO ELS. Específicamente, se libera una estructura de lista de nodos y luego se desreferencia ndlp-&gt;vport-&gt;cfg_log_verbose en lpfc_nlp_get() cuando se llama por error a la máquina de estado de descubrimiento una segunda vez con el argumento NLP_EVT_DEVICE_RM. Reelabore lpfc_cmpl_els_logo() para evitar las llamadas duplicadas para liberar una estructura de lista de nodos."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e83869e29448958f8ae2c6911f350318f75e4fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1b3440f437b75fb2a9b0cfe58df461e40eca474","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eea34ce23dc3a595695856dc73bb132a9c5a2902","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-49731","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T07:01:48.710","lastModified":"2025-02-26T07:01:48.710","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-core: fix NULL pointer deref in ata_host_alloc_pinfo()\n\nIn an unlikely (and probably wrong?) case that the 'ppi' parameter of\nata_host_alloc_pinfo() points to an array starting with a NULL pointer,\nthere's going to be a kernel oops as the 'pi' local variable won't get\nreassigned from the initial value of NULL. Initialize 'pi' instead to\n'&ata_dummy_port_info' to fix the possible kernel oops for good...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07cbdb4807d369fbda73062a91b570c4dc5ec429","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ac5efee33f29e704226506d429b84575a5d66f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/253334f84c81bc6a43af489f108c0bddad989eef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36cd19e7d4e5571d77a2ed20c5b6ef50cf57734a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a810bd5af06977a847d1f202b22d7defd5c62497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf476fe22aa1851bab4728e0c49025a6a0bea307","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca4693e6e06e4fd2b240c0fec47aa2498c94848e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff128fbea720bf763fa345680dda5f050bc24a47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-0234","sourceIdentifier":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","published":"2025-02-26T08:12:46.393","lastModified":"2025-02-26T08:12:46.393","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Out-of-bounds vulnerability in curve segmentation processing of Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."},{"lang":"es","value":"Vulnerabilidad fuera de los límites en el procesamiento de segmentación de curvas de Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."}],"metrics":{"cvssMetricV31":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","description":[{"lang":"en","value":"CWE-787"}]}],"references":[{"url":"https:\/\/psirt.canon\/advisory-information\/cp2025-002\/","source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd"}]}},{"cve":{"id":"CVE-2025-0235","sourceIdentifier":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","published":"2025-02-26T08:12:46.617","lastModified":"2025-02-26T08:12:46.617","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Out-of-bounds vulnerability due to improper memory release during image rendering in Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."},{"lang":"es","value":"Vulnerabilidad fuera de los límites debido a una liberación de memoria incorrecta durante la representación de imágenes en Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."}],"metrics":{"cvssMetricV31":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","description":[{"lang":"en","value":"CWE-787"}]}],"references":[{"url":"https:\/\/psirt.canon\/advisory-information\/cp2025-002\/","source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd"}]}},{"cve":{"id":"CVE-2025-0236","sourceIdentifier":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","published":"2025-02-26T08:12:46.730","lastModified":"2025-02-26T08:12:46.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Out-of-bounds vulnerability in slope processing during curve rendering in Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."},{"lang":"es","value":"Vulnerabilidad fuera de los límites en el procesamiento de pendientes durante la representación de curvas en Generic PCL6 V4 Printer Driver \/ Generic UFR II V4 Printer Driver \/ Generic LIPSLX V4 Printer Driver."}],"metrics":{"cvssMetricV31":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd","type":"Secondary","description":[{"lang":"en","value":"CWE-787"}]}],"references":[{"url":"https:\/\/psirt.canon\/advisory-information\/cp2025-002\/","source":"f98c90f0-e9bd-4fa7-911b-51993f3571fd"}]}},{"cve":{"id":"CVE-2025-0889","sourceIdentifier":"13061848-ea10-403d-bd75-c83a022c2891","published":"2025-02-26T08:13:09.050","lastModified":"2025-02-26T08:13:09.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Prior to 25.2, a local authenticated attacker can elevate privileges on a system with Privilege Management for Windows installed, via the manipulation of COM objects under certain circumstances where an EPM policy allows for automatic privilege elevation of a user process."},{"lang":"es","value":"Antes de la versión 25.2, un atacante autenticado local puede elevar privilegios en un sistema con Privilege Management para Windows instalado, a través de la manipulación de objetos COM en determinadas circunstancias en las que una política EPM permite la elevación automática de privilegios de un proceso de usuario."}],"metrics":{"cvssMetricV40":[{"source":"13061848-ea10-403d-bd75-c83a022c2891","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:P\/PR:L\/UI:N\/VC:H\/VI:H\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":7.2,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"PRESENT","privilegesRequired":"LOW","userInteraction":"NONE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"13061848-ea10-403d-bd75-c83a022c2891","type":"Secondary","description":[{"lang":"en","value":"CWE-268"}]}],"references":[{"url":"https:\/\/www.beyondtrust.com\/trust-center\/security-advisories\/bt25-01","source":"13061848-ea10-403d-bd75-c83a022c2891"}]}},{"cve":{"id":"CVE-2025-22868","sourceIdentifier":"security@golang.org","published":"2025-02-26T08:14:24.897","lastModified":"2025-02-26T15:15:24.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing."},{"lang":"es","value":"Un atacante puede pasar un token malintencionado que provoque un consumo inesperado de memoria durante el análisis."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-1286"}]}],"references":[{"url":"https:\/\/go.dev\/cl\/652155","source":"security@golang.org"},{"url":"https:\/\/go.dev\/issue\/71490","source":"security@golang.org"},{"url":"https:\/\/pkg.go.dev\/vuln\/GO-2025-3488","source":"security@golang.org"}]}},{"cve":{"id":"CVE-2025-22869","sourceIdentifier":"security@golang.org","published":"2025-02-26T08:14:24.997","lastModified":"2025-02-26T15:15:25.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted."},{"lang":"es","value":"Los servidores SSH que implementan protocolos de transferencia de archivos son vulnerables a un ataque de denegación de servicio por parte de clientes que completan el intercambio de claves lentamente o no lo completan en absoluto, lo que provoca que el contenido pendiente se lea en la memoria, pero nunca se transmita."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-770"}]}],"references":[{"url":"https:\/\/go.dev\/cl\/652135","source":"security@golang.org"},{"url":"https:\/\/go.dev\/issue\/71931","source":"security@golang.org"},{"url":"https:\/\/pkg.go.dev\/vuln\/GO-2025-3487","source":"security@golang.org"}]}},{"cve":{"id":"CVE-2025-22881","sourceIdentifier":"759f5e80-c8e1-4224-bead-956d7b33c98b","published":"2025-02-26T08:14:25.137","lastModified":"2025-02-26T08:14:25.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Delta Electronics CNCSoft-G2 lacks proper validation of the length of user-supplied data prior to copying it to a fixed-length heap-based buffer. If a target visits a malicious page or opens a malicious file an attacker can leverage this vulnerability to execute code in the context of the current process."},{"lang":"es","value":"Delta Electronics CNCSoft-G2 carece de una validación adecuada de la longitud de los datos proporcionados por el usuario antes de copiarlos a un búfer basado en pila de longitud fija. Si un objetivo visita una página maliciosa o abre un archivo malicioso, un atacante puede aprovechar esta vulnerabilidad para ejecutar código en el contexto del proceso actual."}],"metrics":{"cvssMetricV40":[{"source":"759f5e80-c8e1-4224-bead-956d7b33c98b","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:L\/AC:L\/AT:N\/PR:N\/UI:A\/VC:H\/VI:H\/VA:H\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":8.4,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"ACTIVE","vulnConfidentialityImpact":"HIGH","vulnIntegrityImpact":"HIGH","vulnAvailabilityImpact":"HIGH","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"759f5e80-c8e1-4224-bead-956d7b33c98b","type":"Secondary","description":[{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/filecenter.deltaww.com\/news\/download\/doc\/Delta-PCSA-2025-00003_CNCSoft-G2%20-%20Heap-based%20Buffer%20Overflow_v1.pdf","source":"759f5e80-c8e1-4224-bead-956d7b33c98b"}]}},{"cve":{"id":"CVE-2022-25773","sourceIdentifier":"security@mautic.org","published":"2025-02-26T13:15:32.550","lastModified":"2025-02-26T13:15:32.550","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"This advisory addresses a file placement vulnerability that could allow assets to be uploaded to unintended directories on the server.\n\n  *  Improper Limitation of a Pathname to a Restricted Directory: A vulnerability exists in the asset upload functionality that allows users to upload files to directories outside of the intended temporary directory."},{"lang":"es","value":"Este aviso aborda una vulnerabilidad de ubicación de archivos que podría permitir que se carguen activos en directorios no deseados en el servidor. * Limitación incorrecta de una ruta a un directorio restringido: existe una vulnerabilidad en la funcionalidad de carga de activos que permite a los usuarios cargar archivos en directorios fuera del directorio temporal previsto."}],"metrics":{"cvssMetricV31":[{"source":"security@mautic.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:L","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@mautic.org","type":"Secondary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/github.com\/mautic\/mautic\/security\/advisories\/GHSA-4w2w-36vm-c8hf","source":"security@mautic.org"}]}},{"cve":{"id":"CVE-2024-10152","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:34.840","lastModified":"2025-02-26T17:15:21.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Simple Certain Time to Show Content WordPress plugin before 1.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Simple Certain Time to Show Content de WordPress anterior a 1.3.1 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/b4d17da2-4c47-4fd1-a6bd-6692b07cf710\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-10483","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:35.213","lastModified":"2025-02-26T17:15:21.570","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Simple:Press Forum WordPress plugin before 6.10.11 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting."},{"lang":"es","value":"El complemento Simple:Press Forum para WordPress anterior a la versión 6.10.11 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un error de Cross-Site Scripting Reflejado."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/c7e3c473-09b2-473b-87d7-0a01d8f52086\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-10563","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:35.443","lastModified":"2025-02-26T15:15:20.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WooCommerce Cart Count Shortcode WordPress plugin before 1.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page\/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks."},{"lang":"es","value":"El complemento WooCommerce Cart Count Shortcode de WordPress anterior a la versión 1.1.0 no valida ni escapa algunos de sus atributos de shortcode antes de mostrarlos nuevamente en una página\/publicación donde está incrustado el shortcode, lo que podría permitir a los usuarios con el rol de colaborador y superior realizar ataques de Cross-Site Scripting almacenado."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/08ed69f6-9c9b-4548-9dbb-05b602530ef7\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-12434","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T13:15:36.353","lastModified":"2025-02-26T13:15:36.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The SureMembers plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 1.10.6 via the REST API. This makes it possible for unauthenticated attackers to extract sensitive data including restricted content."},{"lang":"es","value":"El complemento SureMembers para WordPress es vulnerable a la exposición de información confidencial en todas las versiones hasta la 1.10.6 incluida a través de la API REST. Esto permite que atacantes no autenticados extraigan datos confidenciales, incluido contenido restringido."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/suremembers.com\/whats-new\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/f33e0019-e52e-464b-843d-a034e5205b2e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-12737","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:36.513","lastModified":"2025-02-26T15:15:22.363","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP BASE Booking of Appointments, Services and Events WordPress plugin before 5.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento WP BASE Booking of Appointments, Services and Events para WordPress anterior a la versión 5.0.0 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/997eb9f6-80e1-4bc5-be72-bd6a6f52379c\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-12878","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:36.610","lastModified":"2025-02-26T16:15:14.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Custom Block Builder  WordPress plugin before 3.8.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Custom Block Builder de WordPress anterior a la versión 3.8.3 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/827444d1-87cb-4057-827a-d802eac82cf8\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13113","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:36.710","lastModified":"2025-02-26T16:15:15.020","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Countdown Timer for Elementor WordPress plugin before 1.3.7 does not sanitise and escape some parameters when outputting them on the page, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks."},{"lang":"es","value":"El complemento Countdown Timer for Elementor de WordPress anterior a la versión 1.3.7 no depura ni escapa algunos parámetros al mostrarlos en la página, lo que podría permitir que los usuarios con un rol tan bajo como colaborador realicen ataques de cross site scripting."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":5.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":1.7,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ffc31d9d-d245-4c4b-992d-394a01798117\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13560","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T13:15:36.800","lastModified":"2025-02-26T13:15:36.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Subscriptions & Memberships for PayPal plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.1.6. This is due to missing or incorrect nonce validation on a function. This makes it possible for unauthenticated attackers to delete arbitrary posts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."},{"lang":"es","value":"El complemento Subscriptions &amp; Memberships for PayPal para WordPress es vulnerable a Cross-Site Request Forgery en todas las versiones hasta la 1.1.6 incluida. Esto se debe a la falta o la validación incorrecta de un nonce en una función. Esto hace posible que atacantes no autenticados eliminen publicaciones arbitrarias a través de una solicitud falsificada, siempre que puedan engañar a un administrador del sitio para que realice una acción como hacer clic en un enlace."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3246039\/subscriptions-memberships-for-paypal","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/subscriptions-memberships-for-paypal\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/2bed7fc8-a961-4141-80a1-9c23a6504fbd?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13571","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:36.957","lastModified":"2025-02-26T16:15:15.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Post Timeline WordPress plugin before 2.3.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Post Timeline de WordPress anterior a la versión 2.3.10 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ad6ad44d-fdc3-494c-a371-5d7959d1fd23\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13624","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.053","lastModified":"2025-02-26T16:15:15.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WPMovieLibrary WordPress plugin through 2.1.4.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento WPMovieLibrary de WordPress hasta la versión 2.1.4.8 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un error de Cross-Site Scripting Reflejado que podría usarse contra usuarios con altos privilegios, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/c19b56cc-634f-420f-b6a0-9a10ad159049\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13628","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.147","lastModified":"2025-02-26T15:15:22.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Pricing Table WordPress plugin through 1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento WP Pricing Table para WordPress hasta la versión 1.1 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/34d6c8a2-e70d-485c-a217-4a569c16b079\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13629","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.247","lastModified":"2025-02-26T15:15:22.643","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The pushBIZ  WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento pushBIZ de WordPress hasta la versión 1.0 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con altos privilegios, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/5ffb548c-14f1-499d-8bbf-6ecc632cbb8c\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13630","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.343","lastModified":"2025-02-26T15:15:22.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The NewsTicker WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento NewsTicker de WordPress hasta la versión 1.0 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/15eed487-01ac-4c1e-88f8-26cfa036fb54\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13631","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.447","lastModified":"2025-02-26T16:15:15.487","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Om Stripe WordPress plugin through 02.00.00 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Om Stripe de WordPress hasta la versión 02.00.00 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/c991fdd0-cb9d-43ea-bafa-df3b2e806013\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13632","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.540","lastModified":"2025-02-26T16:15:15.640","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The WP Extra Fields WordPress plugin through 1.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento WP Extra Fields de WordPress hasta la versión 1.0.1 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un error de Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/85c5b465-afce-4c68-b5e3-214ec4b5c9f2\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13633","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.640","lastModified":"2025-02-26T15:15:22.940","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Simple catalogue WordPress plugin through 1.0.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Simple catalogue de WordPress hasta la versión 1.0.2 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:L","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":3.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/4291d5eb-c006-42b0-accf-90f09f26b6a0\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13634","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.730","lastModified":"2025-02-26T15:15:23.103","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Post Sync WordPress plugin through 1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento Post Sync de WordPress hasta la versión 1.1 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/0e60bf74-19fb-441c-85a8-005def36af9a\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13669","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.833","lastModified":"2025-02-26T15:15:23.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The CalendApp WordPress plugin through 1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento CalendApp de WordPress hasta la versión 1.1 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con privilegios altos, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/71e69cf2-7d41-479c-9721-662b57571c90\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13678","sourceIdentifier":"contact@wpscan.com","published":"2025-02-26T13:15:37.927","lastModified":"2025-02-26T15:15:23.433","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The R3W InstaFeed WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin."},{"lang":"es","value":"El complemento R3W InstaFeed de WordPress hasta la versión 1.0 no depura ni escapa un parámetro antes de mostrarlo nuevamente en la página, lo que genera un Cross-Site Scripting Reflejado que podría usarse contra usuarios con altos privilegios, como el administrador."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ba759796-a152-4f13-a474-f0368b4bc1f6\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-13803","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T13:15:38.027","lastModified":"2025-02-26T13:15:38.027","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Essential Blocks – Page Builder Gutenberg Blocks, Patterns & Templates plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘data-marker’ parameter in all versions up to, and including, 5.2.3 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."},{"lang":"es","value":"El complemento Essential Blocks – Page Builder Gutenberg Blocks, Patterns &amp; Templates para WordPress es vulnerable a cross site scripting almacenado a través del parámetro 'data-marker' en todas las versiones hasta la 5.2.3 incluida, debido a una depuración de entrada insuficiente y al escape de salida. Esto permite que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten secuencias de comandos web arbitrarias en páginas que se ejecutarán cada vez que un usuario acceda a una página inyectada."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"http:\/\/localhost:1337\/wp-content\/plugins\/essential-blocks\/assets\/admin\/editor\/editor.js","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3242493\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/efdeca40-e021-478f-af75-c5566ae70735?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-39441","sourceIdentifier":"security@unisoc.com","published":"2025-02-26T13:15:39.547","lastModified":"2025-02-26T13:15:39.547","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In wifi display, there is a possible missing permission check. This could lead to local escalation of privilege with no additional execution privileges needed."},{"lang":"es","value":"En la pantalla wifi, es posible que falte una verificación de permisos. Esto podría provocar una escalada local de privilegios sin necesidad de permisos de ejecución adicionales."}],"metrics":{"cvssMetricV31":[{"source":"security@unisoc.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:N","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":1.8,"impactScore":5.2}]},"references":[{"url":"https:\/\/www.unisoc.com\/en_us\/secy\/announcementDetail\/1894203086612791298","source":"security@unisoc.com"}]}},{"cve":{"id":"CVE-2024-47051","sourceIdentifier":"security@mautic.org","published":"2025-02-26T13:15:39.957","lastModified":"2025-02-26T13:15:39.957","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"This advisory addresses two critical security vulnerabilities present in Mautic versions before 5.2.3. These vulnerabilities could be exploited by authenticated users.\n\n  *  Remote Code Execution (RCE) via Asset Upload: A Remote Code Execution vulnerability has been identified in the asset upload functionality. Insufficient enforcement of allowed file extensions allows an attacker to bypass restrictions and upload executable files, such as PHP scripts.\n\n\n  *  Path Traversal File Deletion: A Path Traversal vulnerability exists in the upload validation process. Due to improper handling of path components, an authenticated user can manipulate the file deletion process to delete arbitrary files on the host system."},{"lang":"es","value":"Este aviso aborda dos vulnerabilidades de seguridad críticas presentes en las versiones de Mautic anteriores a la 5.2.3. Los usuarios autenticados podrían aprovechar estas vulnerabilidades. * Ejecución remota de código (RCE) mediante la carga de activos: se ha identificado una vulnerabilidad de ejecución remota de código en la funcionalidad de carga de activos. La aplicación insuficiente de las extensiones de archivo permitidas permite a un atacante eludir las restricciones y cargar archivos ejecutables, como scripts PHP. * Eliminación de archivos mediante el Path Traversal: existe una vulnerabilidad de Path Traversal en el proceso de validación de carga. Debido a la gestión inadecuada de los componentes de la ruta, un usuario autenticado puede manipular el proceso de eliminación de archivos para eliminar archivos arbitrarios en el sistema host."}],"metrics":{"cvssMetricV31":[{"source":"security@mautic.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:L\/A:L","baseScore":9.1,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.1,"impactScore":5.3}]},"weaknesses":[{"source":"security@mautic.org","type":"Secondary","description":[{"lang":"en","value":"CWE-23"},{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/github.com\/mautic\/mautic\/security\/advisories\/GHSA-73gx-x7r9-77x2","source":"security@mautic.org"},{"url":"https:\/\/owasp.org\/www-community\/attacks\/Code_Injection","source":"security@mautic.org"},{"url":"https:\/\/owasp.org\/www-community\/attacks\/Path_Traversal","source":"security@mautic.org"}]}},{"cve":{"id":"CVE-2024-47053","sourceIdentifier":"security@mautic.org","published":"2025-02-26T13:15:40.090","lastModified":"2025-02-26T13:15:40.090","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"This advisory addresses an authorization vulnerability in Mautic's HTTP Basic Authentication implementation. This flaw could allow unauthorized access to sensitive report data.\n\n  *  Improper Authorization: An authorization flaw exists in Mautic's API Authorization implementation. Any authenticated user, regardless of assigned roles or permissions, can access all reports and their associated data via the API. This bypasses the intended access controls governed by the \"Reporting Permissions > View Own\" and \"Reporting Permissions > View Others\" permissions, which should restrict access to non-System Reports."},{"lang":"es","value":"Este aviso aborda una vulnerabilidad de autorización en la implementación de autenticación básica HTTP de Mautic. Esta falla podría permitir el acceso no autorizado a datos confidenciales de informes. * Autorización incorrecta: existe una falla de autorización en la implementación de autorización de API de Mautic. Cualquier usuario autenticado, independientemente de los roles o permisos asignados, puede acceder a todos los informes y sus datos asociados a través de la API. Esto omite los controles de acceso previstos regidos por los permisos \"Permisos de informes &gt; Ver propios\" y \"Permisos de informes &gt; Ver otros\", que deberían restringir el acceso a los informes que no sean del sistema."}],"metrics":{"cvssMetricV31":[{"source":"security@mautic.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:N\/A:N","baseScore":7.7,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":4.0}]},"weaknesses":[{"source":"security@mautic.org","type":"Secondary","description":[{"lang":"en","value":"CWE-285"}]}],"references":[{"url":"https:\/\/cwe.mitre.org\/data\/definitions\/287.html","source":"security@mautic.org"},{"url":"https:\/\/docs.mautic.org\/en\/5.2\/configuration\/settings.html#api-settings","source":"security@mautic.org"},{"url":"https:\/\/github.com\/mautic\/mautic\/security\/advisories\/GHSA-8xv7-g2q3-fqgc","source":"security@mautic.org"}]}},{"cve":{"id":"CVE-2024-6810","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T13:15:40.600","lastModified":"2025-02-26T13:15:40.600","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Quiz Organizer plugin for WordPress is vulnerable to Stored Cross-Site Scripting in all versions up to, and including, 2.9.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level access, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled."},{"lang":"es","value":"El complemento Quiz Organizer para WordPress es vulnerable a cross site scripting almacenado en todas las versiones hasta la 2.9.1 incluida, debido a una depuración de entrada insuficiente y al escape de salida. Esto permite que atacantes autenticados, con acceso de nivel de administrador, inyecten secuencias de comandos web arbitrarias en páginas que se ejecutarán cada vez que un usuario acceda a una página inyectada. Esto solo afecta a instalaciones multisitio e instalaciones en las que se ha deshabilitado unfiltered_html."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:H\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":4.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.3,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/quiz-organizer\/trunk\/src\/includes\/admin\/admin-modify-quiz.php#L230","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/quiz-organizer\/trunk\/src\/includes\/admin\/admin-modify-quiz.php#L570","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/quiz-organizer\/trunk\/src\/includes\/sets\/class-qzorg-plug-shortcode.php#L508","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/quiz-organizer\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/651646b0-231f-401c-9f6d-d414609bd7ba?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-0731","sourceIdentifier":"info@cert.vde.com","published":"2025-02-26T13:15:41.040","lastModified":"2025-02-26T13:15:41.040","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An unauthenticated remote attacker can upload a .aspx file instead of a PV system picture through the demo account. The code can only be executed in the security context of the user."},{"lang":"es","value":"Un atacante remoto no autenticado puede cargar un archivo .aspx en lugar de una imagen del sistema fotovoltaico a través de la cuenta de demostración. El código solo se puede ejecutar en el contexto de seguridad del usuario."}],"metrics":{"cvssMetricV31":[{"source":"info@cert.vde.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:L","baseScore":6.5,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":3.9,"impactScore":2.5}]},"weaknesses":[{"source":"info@cert.vde.com","type":"Primary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/cert.vde.com\/en\/advisories\/VDE-2025-012","source":"info@cert.vde.com"}]}},{"cve":{"id":"CVE-2025-1517","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T13:15:41.193","lastModified":"2025-02-26T13:15:41.193","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Sina Extension for Elementor (Slider, Gallery, Form, Modal, Data Table, Tab, Particle, Free Elementor Widgets & Elementor Templates) plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Fancy Text, Countdown Widget, and Login Form shortcodes in all versions up to, and including, 3.6.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."},{"lang":"es","value":"El complemento Sina Extension for Elementor (Slider, Gallery, Form, Modal, Data Table, Tab, Particle, Free Elementor Widgets &amp; Elementor Templates) para WordPress es vulnerable a cross site scripting almacenado a través de los códigos cortos Fancy Text, Countdown Widget y Login Form del complemento en todas las versiones hasta la 3.6.0 incluida, debido a una depuración de entrada insuficiente y al escape de salida en los atributos proporcionados por el usuario. Esto permite que atacantes autenticados, con acceso de nivel de colaborador y superior, inyecten secuencias de comandos web arbitrarias en páginas que se ejecutarán cada vez que un usuario acceda a una página inyectada."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/shaonsina\/sina-extension-for-elementor\/commit\/5cb89db08b15a3011800ee0f6ad68c69c5a256d5","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/sina-extension-for-elementor\/trunk\/widgets\/advanced\/sina-countdown.php","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/sina-extension-for-elementor\/trunk\/widgets\/advanced\/sina-login-form.php","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/sina-extension-for-elementor\/trunk\/widgets\/basic\/sina-fancytext.php","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3246221\/","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/sina-extension-for-elementor\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/e699f521-9133-41b0-b667-528da78fec06?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-26698","sourceIdentifier":"vultures@jpcert.or.jp","published":"2025-02-26T13:15:41.983","lastModified":"2025-02-26T13:15:41.983","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Incorrect resource transfer between spheres issue exists in RevoWorks SCVX and RevoWorks Browser. If exploited, malicious files may be downloaded to the system where using the product."},{"lang":"es","value":"Existe un problema de transferencia incorrecta de recursos entre esferas en RevoWorks SCVX y RevoWorks Browser. Si se explota esta vulnerabilidad, se pueden descargar archivos maliciosos en el sistema en el que se utiliza el producto."}],"metrics":{"cvssMetricV30":[{"source":"vultures@jpcert.or.jp","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:L\/AC:H\/PR:N\/UI:R\/S:C\/C:N\/I:L\/A:N","baseScore":2.7,"baseSeverity":"LOW","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.0,"impactScore":1.4}]},"weaknesses":[{"source":"vultures@jpcert.or.jp","type":"Primary","description":[{"lang":"en","value":"CWE-669"}]}],"references":[{"url":"https:\/\/jscom.jp\/news-20250217\/","source":"vultures@jpcert.or.jp"},{"url":"https:\/\/jvn.jp\/en\/jp\/JVN91300609\/","source":"vultures@jpcert.or.jp"}]}},{"cve":{"id":"CVE-2025-0719","sourceIdentifier":"psirt@us.ibm.com","published":"2025-02-26T14:15:11.587","lastModified":"2025-02-26T14:15:11.587","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"IBM Cloud Pak for Data 4.0.0 through 4.8.5 and 5.0.0 is vulnerable to cross-site scripting. This vulnerability allows an unauthenticated attacker to embed arbitrary JavaScript code in the Web UI thus altering the intended functionality potentially leading to credentials disclosure within a trusted session."},{"lang":"es","value":"IBM Cloud Pak for Data 4.0.0 a 4.8.5 y 5.0.0 es vulnerable a ataques de cross site scripting. Esta vulnerabilidad permite que un atacante no autenticado incorpore código JavaScript arbitrario en la interfaz de usuario web, alterando así la funcionalidad prevista y pudiendo provocar la divulgación de credenciales dentro de una sesión de confianza."}],"metrics":{"cvssMetricV31":[{"source":"psirt@us.ibm.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"psirt@us.ibm.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.ibm.com\/support\/pages\/node\/7184173","source":"psirt@us.ibm.com"}]}},{"cve":{"id":"CVE-2025-26925","sourceIdentifier":"audit@patchstack.com","published":"2025-02-26T14:15:11.743","lastModified":"2025-02-26T14:15:11.743","vulnStatus":"Received","cveTags":[{"sourceIdentifier":"audit@patchstack.com","tags":["unsupported-when-assigned"]}],"descriptions":[{"lang":"en","value":"Cross-Site Request Forgery (CSRF) vulnerability in Required Admin Menu Manager allows Cross Site Request Forgery.This issue affects Admin Menu Manager: from n\/a through 1.0.3."},{"lang":"es","value":"La vulnerabilidad de Cross-Site Request Forgery (CSRF) en Required Admin Menu Manager permite Cross-Site Request Forgery. Este problema afecta al Administrador de menú de administración: desde n\/a hasta 1.0.3."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/wordpress\/plugin\/admin-menu-manager\/vulnerability\/wordpress-admin-menu-manager-plugin-1-0-3-cross-site-request-forgery-csrf-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2022-49732","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-26T15:15:17.843","lastModified":"2025-02-26T15:15:17.843","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsock: redo the psock vs ULP protection check\n\nCommit 8a59f9d1e3d4 (\"sock: Introduce sk->sk_prot->psock_update_sk_prot()\")\nhas moved the inet_csk_has_ulp(sk) check from sk_psock_init() to\nthe new tcp_bpf_update_proto() function. I'm guessing that this\nwas done to allow creating psocks for non-inet sockets.\n\nUnfortunately the destruction path for psock includes the ULP\nunwind, so we need to fail the sk_psock_init() itself.\nOtherwise if ULP is already present we'll notice that later,\nand call tcp_update_ulp() with the sk_proto of the ULP\nitself, which will most likely result in the ULP looping\nits callbacks."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: sock: rehacer la comprobación de protección psock vs ULP el commit 8a59f9d1e3d4 (\"sock: Introduce sk-&gt;sk_prot-&gt;psock_update_sk_prot()\") ha movido la comprobación inet_csk_has_ulp(sk) de sk_psock_init() a la nueva función tcp_bpf_update_proto(). Supongo que esto se hizo para permitir la creación de psocks para sockets que no sean inet. Desafortunadamente, la ruta de destrucción para psock incluye el desenrollado de ULP, por lo que debemos hacer que falle el propio sk_psock_init(). De lo contrario, si ULP ya está presente, lo notaremos más tarde y llamaremos a tcp_update_ulp() con el sk_proto del propio ULP, lo que probablemente provocará que el ULP repita sus devoluciones de llamadas."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/72fa0f65b56605b8a9ae9fba2082f2123f7fe017","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/922309e50befb0cfa5cb65e4989b7706d6578846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e34a07c0ae3906f97eb18df50902e2a01c1015b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52925","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:23.867","lastModified":"2025-02-26T15:15:23.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In OPSWAT MetaDefender Kiosk before 4.7.0, arbitrary code execution can be performed by an attacker via the MD Kiosk Unlock Device feature for software encrypted USB drives."},{"lang":"es","value":"En OPSWAT MetaDefender Kiosk anterior a 4.7.0, un atacante puede ejecutar código arbitrario a través de la función de desbloqueo de dispositivo MD Kiosk para unidades USB cifradas por software."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:P\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":6.8,"baseSeverity":"MEDIUM","attackVector":"PHYSICAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.9,"impactScore":5.9}]},"weaknesses":[{"source":"cve@mitre.org","type":"Secondary","description":[{"lang":"en","value":"CWE-94"}]}],"references":[{"url":"https:\/\/www.opswat.com\/docs\/mdkiosk\/release-notes\/cve-2024-52925","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-1249","sourceIdentifier":"audit@patchstack.com","published":"2025-02-26T15:15:24.470","lastModified":"2025-02-26T15:15:24.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Missing Authorization vulnerability in Pixelite Events Manager allows Exploiting Incorrectly Configured Access Control Security Levels.This issue affects Events Manager: from n\/a through 6.6.4.1."},{"lang":"es","value":"La vulnerabilidad de autorización faltante en Pixelite Events Manager permite explotar niveles de seguridad de control de acceso configurados incorrectamente. Este problema afecta a Events Manager: desde n\/a hasta 6.6.4.1."}],"metrics":{"cvssMetricV31":[{"source":"audit@patchstack.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"audit@patchstack.com","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/patchstack.com\/database\/wordpress\/plugin\/events-manager\/vulnerability\/wordpress-events-manager-plugin-6-6-4-1-broken-access-control-vulnerability?_s_id=cve","source":"audit@patchstack.com"}]}},{"cve":{"id":"CVE-2025-1716","sourceIdentifier":"103e4ec9-0a87-450b-af77-479448ddef11","published":"2025-02-26T15:15:24.653","lastModified":"2025-02-26T15:15:24.653","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"picklescan before 0.0.21 does not treat 'pip' as an unsafe global. An attacker could craft a malicious model that uses Pickle to pull in a malicious PyPI package (hosted, for example, on pypi.org or GitHub) via `pip.main()`. Because pip is not a restricted global, the model, when scanned with picklescan, would pass security checks and appear to be safe, when it could instead prove to be problematic."},{"lang":"es","value":"Las versiones anteriores a la versión 0.0.21 de picklescan no tratan a 'pip' como una variable global insegura. Un atacante podría manipular un modelo malicioso que use Pickle para incorporar un paquete PyPI malicioso (alojado, por ejemplo, en pypi.org o GitHub) a través de `pip.main()`. Debido a que pip no es una variable global restringida, el modelo, al analizarse con picklescan, pasaría los controles de seguridad y parecería ser seguro, cuando en realidad podría resultar problemático."}],"metrics":{"cvssMetricV40":[{"source":"103e4ec9-0a87-450b-af77-479448ddef11","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:N\/UI:P\/VC:N\/VI:L\/VA:N\/SC:N\/SI:N\/SA:N\/E:X\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"NONE","userInteraction":"PASSIVE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"LOW","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"NONE","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"NOT_DEFINED","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}]},"weaknesses":[{"source":"103e4ec9-0a87-450b-af77-479448ddef11","type":"Secondary","description":[{"lang":"en","value":"CWE-184"}]}],"references":[{"url":"https:\/\/github.com\/mmaitre314\/picklescan\/commit\/78ce704227c51f070c0c5fb4b466d92c62a7aa3d","source":"103e4ec9-0a87-450b-af77-479448ddef11"},{"url":"https:\/\/sites.google.com\/sonatype.com\/vulnerabilities\/cve-2025-1716","source":"103e4ec9-0a87-450b-af77-479448ddef11"}]}},{"cve":{"id":"CVE-2025-25783","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:26.440","lastModified":"2025-02-26T15:15:26.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An arbitrary file upload vulnerability in the component admin\\plugin.php of Emlog Pro v2.5.3 allows attackers to execute arbitrary code via uploading a crafted Zip file."},{"lang":"es","value":"Una vulnerabilidad de carga de archivos arbitrarios en el componente admin\\plugin.php de Emlog Pro v2.5.3 permite a los atacantes ejecutar código arbitrario mediante la carga de un archivo Zip manipulado específicamente para ello."}],"metrics":{},"references":[{"url":"http:\/\/emlogpro.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/emlog\/blob\/main\/emlog-3.md","source":"cve@mitre.org"},{"url":"https:\/\/www.emlog.net\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25784","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:26.580","lastModified":"2025-02-26T15:15:26.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An arbitrary file upload vulnerability in the component \\c\\TemplateController.php of Jizhicms v2.5.4 allows attackers to execute arbitrary code via uploading a crafted Zip file."},{"lang":"es","value":"Una vulnerabilidad de carga de archivos arbitrarios en el componente \\c\\TemplateController.php de Jizhicms v2.5.4 permite a los atacantes ejecutar código arbitrario mediante la carga de un archivo Zip manipulado específicamente para ello."}],"metrics":{},"references":[{"url":"http:\/\/jizhicms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/JizhiCms\/blob\/main\/jizhicms.md","source":"cve@mitre.org"},{"url":"https:\/\/www.jizhicms.cn\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25785","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:26.720","lastModified":"2025-02-26T15:15:26.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"JizhiCMS v2.5.4 was discovered to contain a Server-Side Request Forgery (SSRF) via the component \\c\\PluginsController.php. This vulnerability allows attackers to perform an intranet scan via a crafted request."},{"lang":"es","value":"Se descubrió que JizhiCMS v2.5.4 contenía Server-Side Request Forgery (SSRF) a través del componente \\c\\PluginsController.php. Esta vulnerabilidad permite a los atacantes realizar un escaneo de intranet a través de una solicitud manipulada."}],"metrics":{},"references":[{"url":"http:\/\/jizhicms.com","source":"cve@mitre.org"},{"url":"https:\/\/www.jizhicms.cn\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25789","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:26.853","lastModified":"2025-02-26T15:15:26.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"FoxCMS v1.2.5 was discovered to contain a remote code execution (RCE) vulnerability via the index() method at \\controller\\Sitemap.php."},{"lang":"es","value":"Se descubrió que FoxCMS v1.2.5 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del método index() en \\controller\\Sitemap.php."}],"metrics":{},"references":[{"url":"http:\/\/foxcms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/FoxCMS\/blob\/main\/FoxCMS-rce3.md","source":"cve@mitre.org"},{"url":"https:\/\/www.foxcms.cn\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25790","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:26.980","lastModified":"2025-02-26T15:15:26.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An arbitrary file upload vulnerability in the component \\controller\\LocalTemplate.php of FoxCMS v1.2.5 allows attackers to execute arbitrary code via uploading a crafted Zip file."},{"lang":"es","value":"Una vulnerabilidad de carga de archivos arbitrarios en el componente \\controller\\LocalTemplate.php de FoxCMS v1.2.5 permite a los atacantes ejecutar código arbitrario mediante la carga de un archivo Zip manipulado específicamente para ello."}],"metrics":{},"references":[{"url":"http:\/\/foxcms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/FoxCMS\/blob\/main\/FoxCMS-upload-rce.md","source":"cve@mitre.org"},{"url":"https:\/\/www.foxcms.cn\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25791","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.100","lastModified":"2025-02-26T15:15:27.100","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An arbitrary file upload vulnerability in the plugin installation feature of YZNCMS v2.0.1 allows attackers to execute arbitrary code via uploading a crafted Zip file."},{"lang":"es","value":"Una vulnerabilidad de carga de archivos arbitrarios en la función de instalación de complementos de YZNCMS v2.0.1 permite a los atacantes ejecutar código arbitrario mediante la carga de un archivo Zip manipulado específicamente para ello."}],"metrics":{},"references":[{"url":"http:\/\/yzncms.com","source":"cve@mitre.org"},{"url":"https:\/\/gitee.com\/ken678\/YZNCMS","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/YZNCMS\/blob\/main\/yzncms-upload.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25792","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.230","lastModified":"2025-02-26T15:15:27.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the isopen parameter at admin_weixin.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del parámetro isopen en admin_weixin.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/seacmsv13.3-rce-1.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25793","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.367","lastModified":"2025-02-26T15:15:27.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_notify.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_notify.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-3.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25794","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.490","lastModified":"2025-02-26T15:15:27.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_ping.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_ping.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-4.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25796","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.620","lastModified":"2025-02-26T15:15:27.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_template.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_template.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-6.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25797","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.743","lastModified":"2025-02-26T15:15:27.743","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_smtp.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_smtp.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-7.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25799","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.870","lastModified":"2025-02-26T15:15:27.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS 13.3 was discovered to contain an arbitrary file read vulnerability in the file_get_contents function at admin_safe.php."},{"lang":"es","value":"Se descubrió que SeaCMS 13.3 contiene una vulnerabilidad de lectura de archivos arbitrarios en la función file_get_contents en admin_safe.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-lrf.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25800","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:27.993","lastModified":"2025-02-26T16:15:17.053","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS 13.3 was discovered to contain an arbitrary file read vulnerability in the file_get_contents function at admin_safe_file.php."},{"lang":"es","value":"Se descubrió que SeaCMS 13.3 contiene una vulnerabilidad de lectura de archivos arbitrarios en la función file_get_contents en admin_safe_file.php."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-lrf-2.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25802","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.127","lastModified":"2025-02-26T15:15:28.127","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_ip.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_ip.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-2.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25813","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.250","lastModified":"2025-02-26T15:15:28.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SeaCMS v13.3 was discovered to contain a remote code execution (RCE) vulnerability via the component admin_files.php."},{"lang":"es","value":"Se descubrió que SeaCMS v13.3 contiene una vulnerabilidad de ejecución remota de código (RCE) a través del componente admin_files.php."}],"metrics":{},"references":[{"url":"http:\/\/seacms.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/Seacms\/blob\/main\/Seacms13.3-rce-5.md","source":"cve@mitre.org"},{"url":"https:\/\/www.seacms.com\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25818","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.367","lastModified":"2025-02-26T15:15:28.367","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A cross-site scripting (XSS) vulnerability in Emlog Pro v2.5.4 allows attackers to execute arbitrary web scripts or HTML via injecting a crafted payload into the postStrVar function at article_save.php."},{"lang":"es","value":"Una vulnerabilidad de cross site scripting (XSS) en Emlog Pro v2.5.4 permite a los atacantes ejecutar secuencias de comandos web o HTML arbitrarios mediante la inyección de un payload manipulado en la función postStrVar en article_save.php."}],"metrics":{},"references":[{"url":"http:\/\/emlogpro.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/emlog\/blob\/main\/xss.md","source":"cve@mitre.org"},{"url":"https:\/\/www.emlog.net\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25823","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.497","lastModified":"2025-02-26T15:15:28.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A cross-site scripting (XSS) vulnerability in Emlog Pro v2.5.4 allows attackers to execute arbitrary web scripts or HTML via injecting a crafted payload into the article header at \/admin\/article.php."},{"lang":"es","value":"Una vulnerabilidad de cross site scripting (XSS) en Emlog Pro v2.5.4 permite a los atacantes ejecutar secuencias de comandos web o HTML arbitrarios mediante la inyección de un payload especialmente manipulado en el encabezado del artículo en \/admin\/article.php."}],"metrics":{},"references":[{"url":"http:\/\/emlogpro.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/emlog\/blob\/main\/xss-3.md","source":"cve@mitre.org"},{"url":"https:\/\/www.emlog.net\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25825","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.620","lastModified":"2025-02-26T15:15:28.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A cross-site scripting (XSS) vulnerability in Emlog Pro v2.5.4 allows attackers to execute arbitrary web scripts or HTML via injecting a crafted payload into the Titile in the article category section."},{"lang":"es","value":"Una vulnerabilidad de cross site scripting (XSS) en Emlog Pro v2.5.4 permite a los atacantes ejecutar secuencias de comandos web o HTML arbitrarios mediante la inyección de un payload especialmente manipulado en el título de la sección de categoría del artículo."}],"metrics":{},"references":[{"url":"http:\/\/emlogpro.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/emlog\/blob\/main\/xss-4.md","source":"cve@mitre.org"},{"url":"https:\/\/www.emlog.net\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25827","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T15:15:28.747","lastModified":"2025-02-26T15:15:28.747","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Server-Side Request Forgery (SSRF) in the component sort.php of Emlog Pro v2.5.4 allows attackers to scan local and internal ports via supplying a crafted URL."},{"lang":"es","value":"Server-Side Request Forgery (SSRF) en el componente sort.php de Emlog Pro v2.5.4 permite a los atacantes escanear puertos locales e internos mediante el suministro de una URL manipulada."}],"metrics":{},"references":[{"url":"http:\/\/emlogpro.com","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Ka7arotto\/emlog\/blob\/main\/ssrf.md","source":"cve@mitre.org"},{"url":"https:\/\/www.emlog.net\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-46226","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T16:15:15.947","lastModified":"2025-02-26T16:15:15.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A stored cross site scripting (XSS) vulnerability in HelpDeskZ < v2.0.2 allows remote attackers to execute arbitrary JavaScript in the administration panel by including a malicious payload into the file name and upload file function when creating a new ticket."},{"lang":"es","value":"Una vulnerabilidad de cross site scripting (XSS) almacenado en HelpDeskZ &lt; v2.0.2 permite a atacantes remotos ejecutar JavaScript arbitrario en el panel de administración al incluir un payload malicioso en el nombre del archivo y la función de carga de archivos al crear un nuevo ticket."}],"metrics":{"cvssMetricV31":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.7,"impactScore":2.7}]},"weaknesses":[{"source":"134c704f-9b21-4f2e-91b3-4a467353bcc0","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/www.exploit-db.com\/exploits\/52068","source":"cve@mitre.org"},{"url":"https:\/\/www.exploit-db.com\/exploits\/52068","source":"134c704f-9b21-4f2e-91b3-4a467353bcc0"}]}},{"cve":{"id":"CVE-2024-53427","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T16:15:16.237","lastModified":"2025-02-26T16:15:16.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"jq v1.7.1 contains a stack-buffer-overflow in the decNumberCopy function within decNumber.c."},{"lang":"es","value":"jq v1.7.1 contiene un desbordamiento de búfer de pila en la función decNumberCopy dentro de decNumber.c."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/jqlang\/jq\/issues\/3196","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-25462","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T16:15:16.933","lastModified":"2025-02-26T16:15:16.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A SQL Injection vulnerability was found in \/admin\/add-propertytype.php in PHPGurukul Land Record System Project in PHP v1.0 allows remote attackers to execute arbitrary code via the propertytype POST request parameter."},{"lang":"es","value":"Se encontró una vulnerabilidad de inyección SQL en \/admin\/add-propertytype.php en PHPGurukul Land Record System Project en PHP v1.0 que permite a atacantes remotos ejecutar código arbitrario a través del parámetro de solicitud POST propertytype."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/terrasystemlabs\/CVE-IDs\/blob\/main\/PHP-Gurukul\/Land-record\/Land_SQL_Injection.pdf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-0941","sourceIdentifier":"4ad3d9a7-bd20-4af3-8862-46d6b5a570db","published":"2025-02-26T17:15:21.910","lastModified":"2025-02-26T17:15:21.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"MET ONE 3400+ instruments running software v1.0.41 can, under rare conditions, temporarily store credentials in plain text within the system. This data is not available to unauthenticated users."},{"lang":"es","value":"Los instrumentos MET ONE 3400+ que ejecutan el software v1.0.41 pueden, en circunstancias excepcionales, almacenar temporalmente credenciales en texto plano dentro del sistema. Estos datos no están disponibles para usuarios no autenticados."}],"metrics":{"cvssMetricV31":[{"source":"4ad3d9a7-bd20-4af3-8862-46d6b5a570db","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:H\/PR:L\/UI:N\/S:C\/C:H\/I:N\/A:N","baseScore":5.8,"baseSeverity":"MEDIUM","attackVector":"ADJACENT_NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.3,"impactScore":4.0}]},"weaknesses":[{"source":"4ad3d9a7-bd20-4af3-8862-46d6b5a570db","type":"Secondary","description":[{"lang":"en","value":"CWE-209"}]}],"references":[{"url":"https:\/\/www.beckman.com\/about-us\/compliance\/coordinated-vulnerability-disclosure\/product-security-updates","source":"4ad3d9a7-bd20-4af3-8862-46d6b5a570db"}]}},{"cve":{"id":"CVE-2025-1634","sourceIdentifier":"secalert@redhat.com","published":"2025-02-26T17:15:22.083","lastModified":"2025-02-26T17:15:22.083","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A flaw was found in the quarkus-resteasy extension, which causes memory leaks when client requests with low timeouts are made. If a client request times out, a buffer is not released correctly, leading to increased memory usage and eventual application crash due to OutOfMemoryError."},{"lang":"es","value":"Se ha encontrado un error en la extensión quarkus-resteasy, que ocasiona pérdidas de memoria cuando los clientes efectúan peticiones con timeouts bajos. Si la petición de un cliente caduca, no se libera correctamente un buffer, lo que ocasiona un mayor uso de memoria y una eventual finalización de la aplicación debido a un OutOfMemoryError."}],"metrics":{"cvssMetricV31":[{"source":"secalert@redhat.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","baseScore":7.5,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"secalert@redhat.com","type":"Primary","description":[{"lang":"en","value":"CWE-401"}]}],"references":[{"url":"https:\/\/access.redhat.com\/security\/cve\/CVE-2025-1634","source":"secalert@redhat.com"},{"url":"https:\/\/bugzilla.redhat.com\/show_bug.cgi?id=2347319","source":"secalert@redhat.com"}]}},{"cve":{"id":"CVE-2025-20111","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:22.240","lastModified":"2025-02-26T17:15:22.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the health monitoring diagnostics of Cisco Nexus 3000 Series Switches and Cisco Nexus 9000 Series Switches in standalone NX-OS mode could allow an unauthenticated, adjacent attacker to cause the device to reload unexpectedly, resulting in a denial of service (DoS) condition.\r\n\r\nThis vulnerability is due to the incorrect handling of specific Ethernet frames. An attacker could exploit this vulnerability by sending a sustained rate of crafted Ethernet frames to an affected device. A successful exploit could allow the attacker to cause the device to reload."},{"lang":"es","value":"Una vulnerabilidad en los diagnósticos de monitoreo de estado de los switches Cisco Nexus de la serie 3000 y Cisco Nexus de la serie 9000 en modo NX-OS independiente podría permitir que un atacante adyacente no autenticado haga que el dispositivo se recargue inesperadamente, lo que da como resultado una condición de denegación de servicio (DoS). Esta vulnerabilidad se debe a la gestión incorrecto de tramas Ethernet específicas. Un atacante podría explotar esta vulnerabilidad enviando una tasa sostenida de tramas Ethernet diseñadas a un dispositivo afectado. Una explotación exitosa podría permitir al atacante hacer que el dispositivo se recargue."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:N\/UI:N\/S:C\/C:N\/I:N\/A:H","baseScore":7.4,"baseSeverity":"HIGH","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":4.0}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Primary","description":[{"lang":"en","value":"CWE-1220"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-n3kn9k-healthdos-eOqSWK4g","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-20116","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:22.403","lastModified":"2025-02-26T17:15:22.403","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the web UI of Cisco APIC could allow an authenticated, remote attacker to perform a stored XSS attack on an affected system. To exploit this vulnerability, the attacker must have valid administrative credentials.\r\n\r\nThis vulnerability is due to improper input validation in the web UI. An authenticated attacker could exploit this vulnerability by injecting malicious code into specific pages of the web UI. A successful exploit could allow the attacker to execute arbitrary script code in the context of the web UI or access sensitive, browser-based information."},{"lang":"es","value":"Una vulnerabilidad en la interfaz web de Cisco APIC podría permitir que un atacante remoto autenticado realice un ataque XSS almacenado en un sistema afectado. Para aprovechar esta vulnerabilidad, el atacante debe tener credenciales administrativas válidas. Esta vulnerabilidad se debe a una validación de entrada incorrecta en la interfaz web. Un atacante autenticado podría aprovechar esta vulnerabilidad inyectando código malicioso en páginas específicas de la interfaz web. Una explotación exitosa podría permitir al atacante ejecutar código de script arbitrario en el contexto de la interfaz web o acceder a información confidencial basada en el navegador."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":1.7,"impactScore":2.7}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-apic-multi-vulns-9ummtg5","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-20117","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:22.567","lastModified":"2025-02-26T17:15:22.567","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the CLI of Cisco APIC could allow an authenticated, local attacker to execute arbitrary commands as root&nbsp;on the underlying operating system of an affected device. To exploit this vulnerability, the attacker must have valid administrative credentials.\r\n\r\nThis vulnerability is due to insufficient validation of arguments that are passed to specific CLI commands. An attacker could exploit this vulnerability by including crafted input as the argument of an affected CLI command. A successful exploit could allow the attacker to execute arbitrary commands on the underlying operating system with the privileges of root."},{"lang":"es","value":"Una vulnerabilidad en la CLI de Cisco APIC podría permitir que un atacante local autenticado ejecute comandos arbitrarios como superusuario en el sistema operativo subyacente de un dispositivo afectado. Para explotar esta vulnerabilidad, el atacante debe tener credenciales administrativas válidas. Esta vulnerabilidad se debe a una validación insuficiente de los argumentos que se pasan a comandos CLI específicos. Un atacante podría explotar esta vulnerabilidad al incluir una entrada manipulada como argumento de un comando CLI afectado. Una explotación exitosa podría permitir que el atacante ejecute comandos arbitrarios en el sistema operativo subyacente con los privilegios de superusuario."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:L\/I:H\/A:N","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":0.8,"impactScore":4.2}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Primary","description":[{"lang":"en","value":"CWE-77"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-apic-multi-vulns-9ummtg5","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-20118","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:22.723","lastModified":"2025-02-26T18:15:14.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the implementation of the internal system processes of Cisco APIC could allow an authenticated, local attacker to access sensitive information on an affected device. To exploit this vulnerability, the attacker must have valid administrative credentials.\r\n\r\nThis vulnerability is due to insufficient masking of sensitive information that is displayed through system CLI commands. An attacker could exploit this vulnerability by using reconnaissance techniques at the device CLI. A successful exploit could allow the attacker to access sensitive information on an affected device that could be used for additional attacks."},{"lang":"es","value":"Una vulnerabilidad en la implementación de los procesos internos del sistema de Cisco APIC podría permitir que un atacante local autenticado acceda a información confidencial en un dispositivo afectado. Para explotar esta vulnerabilidad, el atacante debe tener credenciales administrativas válidas. Esta vulnerabilidad se debe a un enmascaramiento insuficiente de la información confidencial que se muestra a través de los comandos de la interfaz de línea de comandos del sistema. Un atacante podría explotar esta vulnerabilidad mediante el uso de técnicas de reconocimiento en la interfaz de línea de comandos del dispositivo. Una explotación exitosa podría permitir al atacante acceder a información confidencial en un dispositivo afectado que podría usarse para ataques adicionales."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":4.4,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":0.8,"impactScore":3.6}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Primary","description":[{"lang":"en","value":"CWE-212"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-apic-multi-vulns-9ummtg5","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-20119","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:22.883","lastModified":"2025-02-26T18:15:14.570","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the system file permission handling of Cisco APIC could allow an authenticated, local attacker to overwrite critical system files, which could cause a DoS condition. To exploit this vulnerability, the attacker must have valid administrative credentials.\r\n\r\nThis vulnerability is due to a race condition with handling system files. An attacker could exploit this vulnerability by doing specific operations on the file system. A successful exploit could allow the attacker to overwrite system files, which could lead to the device being in an inconsistent state and cause a DoS condition."},{"lang":"es","value":"Una vulnerabilidad en la gestión de permisos de archivos del sistema de Cisco APIC podría permitir que un atacante local autenticado sobrescribiera archivos críticos del sistema, lo que podría causar una condición de denegación de servicio (DoS). Para explotar esta vulnerabilidad, el atacante debe tener credenciales administrativas válidas. Esta vulnerabilidad se debe a una condición de ejecución con la gestión de archivos del sistema. Un atacante podría explotar esta vulnerabilidad al realizar operaciones específicas en el sistema de archivos. Una explotación exitosa podría permitir al atacante sobrescribir archivos del sistema, lo que podría hacer que el dispositivo esté en un estado inconsistente y causar una condición de denegación de servicio."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:N\/I:H\/A:H","baseScore":6.0,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":0.8,"impactScore":5.2}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Secondary","description":[{"lang":"en","value":"CWE-362"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-apic-multi-vulns-9ummtg5","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-20161","sourceIdentifier":"psirt@cisco.com","published":"2025-02-26T17:15:23.053","lastModified":"2025-02-26T17:15:23.053","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A vulnerability in the software upgrade process of Cisco Nexus 3000 Series Switches and Cisco Nexus 9000 Series Switches in standalone NX-OS mode could allow an authenticated, local attacker with valid Administrator credentials to execute a command injection attack on the underlying operating system of an affected device.\r\n\r\nThis vulnerability is due to insufficient validation of specific elements within a software image. An attacker could exploit this vulnerability by installing a crafted image. A successful exploit could allow the attacker to execute arbitrary commands on the underlying operating system with root privileges.&nbsp;\r\nNote: Administrators should validate the hash of any software image before installation."},{"lang":"es","value":"Una vulnerabilidad en el proceso de actualización de software de los switches Cisco Nexus de la serie 3000 y Cisco Nexus de la serie 9000 en modo NX-OS independiente podría permitir que un atacante local autenticado con credenciales de administrador válidas ejecute un ataque de inyección de comandos en el sistema operativo subyacente de un dispositivo afectado. Esta vulnerabilidad se debe a una validación insuficiente de elementos específicos dentro de una imagen de software. Un atacante podría explotar esta vulnerabilidad instalando una imagen manipulada. Una explotación exitosa podría permitir al atacante ejecutar comandos arbitrarios en el sistema operativo subyacente con privilegios de superusuario. Nota: Los administradores deben validar el hash de cualquier imagen de software antes de la instalación."}],"metrics":{"cvssMetricV31":[{"source":"psirt@cisco.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:L\/I:H\/A:N","baseScore":5.1,"baseSeverity":"MEDIUM","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"NONE"},"exploitabilityScore":0.8,"impactScore":4.2}]},"weaknesses":[{"source":"psirt@cisco.com","type":"Primary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/sec.cloudapps.cisco.com\/security\/center\/content\/CiscoSecurityAdvisory\/cisco-sa-nxos-ici-dpOjbWxk","source":"psirt@cisco.com"}]}},{"cve":{"id":"CVE-2025-1726","sourceIdentifier":"psirt@esri.com","published":"2025-02-26T20:15:13.510","lastModified":"2025-02-26T20:15:13.510","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"There is a SQL injection issue in Esri ArcGIS Monitor versions 2023.0 through 2024.x on Windows and Linux that allows a remote, authenticated attacker with low privileges to improperly read limited database schema information by passing crafted queries. While it is possible to enumerate some internal database identifiers, the impact to the confidentiality vector is \"LOW' because any sensitive data returned in a response is encrypted. There is no evidence of impact to the integrity or availability vectors. This issue is addressed in ArcGIS Monitor 2024.1."},{"lang":"es","value":"Existe un problema de inyección SQL en las versiones 2023.0 a 2024.x de Esri ArcGIS Monitor en Windows y Linux que permite que un atacante remoto autenticado con privilegios bajos lea de forma incorrecta información limitada del esquema de la base de datos mediante consultas manipuladas. Si bien es posible enumerar algunos identificadores de base de datos internos, el impacto en el vector de confidencialidad es \"BAJO\" porque cualquier dato confidencial devuelto en una respuesta está cifrado. No hay evidencia de impacto en los vectores de integridad o disponibilidad. Este problema se soluciona en ArcGIS Monitor 2024.1."}],"metrics":{"cvssMetricV31":[{"source":"psirt@esri.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"psirt@esri.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/www.esri.com\/arcgis-blog\/products\/monitor\/administration\/whats-new-in-arcgis-monitor-2024-1\/","source":"psirt@esri.com"}]}},{"cve":{"id":"CVE-2024-50684","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.267","lastModified":"2025-02-26T21:15:17.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud Android app V2.1.6.20241017 and prior uses an insecure AES key to encrypt client data (insufficient entropy). This may allow attackers to decrypt intercepted communications between the mobile app and iSolarCloud."},{"lang":"es","value":"La aplicación para Android SunGrow iSolarCloud V2.1.6.20241017 y versiones anteriores utilizan una clave AES insegura para cifrar los datos del cliente (entropía insuficiente). Esto puede permitir a los atacantes descifrar las comunicaciones interceptadas entre la aplicación móvil y iSolarCloud."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6126","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50685","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.373","lastModified":"2025-02-26T21:15:17.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud before the October 31, 2024 remediation, is vulnerable to insecure direct object references (IDOR) via the powerStationService API model."},{"lang":"es","value":"SunGrow iSolarCloud antes de la corrección del 31 de octubre de 2024, es vulnerable a referencias de objetos directos (IDOR) inseguras a través del modelo de API powerStationService."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6118","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50686","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.470","lastModified":"2025-02-26T21:15:17.470","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud before the October 31, 2024 remediation is vulnerable to insecure direct object references (IDOR) via the commonService API model."},{"lang":"es","value":"SunGrow iSolarCloud antes de la corrección del 31 de octubre de 2024 es vulnerable a referencias de objetos directos (IDOR) inseguras a través del modelo de API commonService."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6112","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50687","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.557","lastModified":"2025-02-26T21:15:17.557","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud before the October 31, 2024 remediation is vulnerable to insecure direct object references (IDOR) via the devService API model."},{"lang":"es","value":"SunGrow iSolarCloud antes de la corrección del 31 de octubre de 2024 es vulnerable a referencias de objetos directos (IDOR) inseguras a través del modelo de API devService."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6114","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50688","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.647","lastModified":"2025-02-26T21:15:17.647","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud Android application V2.1.6.20241017 and prior contains hardcoded credentials. The application (regardless of the user account) and the cloud uses the same MQTT credentials for exchanging the device telemetry."},{"lang":"es","value":"La aplicación SunGrow iSolarCloud para Android V2.1.6.20241017 y versiones anteriores contienen credenciales codificadas. La aplicación (independientemente de la cuenta de usuario) y la nube utilizan las mismas credenciales MQTT para intercambiar la telemetría del dispositivo."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6122","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50689","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.737","lastModified":"2025-02-26T21:15:17.737","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud before the October 31, 2024 remediation is vulnerable to insecure direct object references (IDOR) via the orgService API model."},{"lang":"es","value":"SunGrow iSolarCloud antes de la corrección del 31 de octubre de 2024 es vulnerable a referencias de objetos directos (IDOR) inseguras a través del modelo de API orgService."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6116","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50691","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.823","lastModified":"2025-02-26T21:15:17.823","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud Android app V2.1.6.20241104 and prior suffers from Missing SSL Certificate Validation. The app explicitly ignores certificate errors and is vulnerable to MiTM attacks. Attackers can impersonate the iSolarCloud server and communicate with the Android app."},{"lang":"es","value":"La aplicación SunGrow iSolarCloud para Android V2.1.6.20241104 y versiones anteriores presentan un problema de falta de validación del certificado SSL. La aplicación ignora explícitamente los errores de certificado y es vulnerable a ataques MiTM. Los atacantes pueden hacerse pasar por el servidor iSolarCloud y comunicarse con la aplicación para Android."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6124","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50693","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.910","lastModified":"2025-02-26T21:15:17.910","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow iSolarCloud before the October 31, 2024 remediation is vulnerable to insecure direct object references (IDOR) via the userService API model."},{"lang":"es","value":"SunGrow iSolarCloud antes de la corrección del 31 de octubre de 2024 es vulnerable a referencias de objetos directos (IDOR) inseguras a través del modelo de API userService."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6120","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-50696","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:17.997","lastModified":"2025-02-26T21:15:17.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"SunGrow WiNet-S V200.001.00.P025 and earlier versions is missing integrity checks for firmware upgrades. Sending a specific MQTT message allows an update to an inverter or a WiNet connectivity dongle with a bogus firmware file that is located on attacker-controlled server."},{"lang":"es","value":"SunGrow WiNet-S V200.001.00.P025 y las versiones anteriores les faltan comprobaciones de integridad para las actualizaciones de firmware. El envío de un mensaje MQTT específico permite una actualización de un inversor o un dispositivo de conectividad WiNet con un archivo de firmware falso que se encuentra en un servidor controlado por el atacante."}],"metrics":{},"references":[{"url":"https:\/\/en.sungrowpower.com\/security-notice-detail-2\/6140","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-57423","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T21:15:18.093","lastModified":"2025-02-26T21:15:18.093","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Cross Site Scripting vulnerability in CloudClassroom-PHP Project v1.0 allows a remote attacker to execute arbitrary code via the exid parameter of the assessment function."},{"lang":"es","value":"Una vulnerabilidad de cross site scripting en CloudClassroom-PHP Project v1.0 permite a un atacante remoto ejecutar código arbitrario a través del parámetro exid de la función de evaluación."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/harshad-alt\/CVE\/blob\/main\/CVE-2024-57423.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-53573","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T22:15:14.043","lastModified":"2025-02-26T22:15:14.043","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Unifiedtransform v2.X is vulnerable to Incorrect Access Control. Unauthorized users can access and manipulate endpoints intended exclusively for administrative use. This issue specifically affects teacher\/edit\/{id}."},{"lang":"es","value":"Unifiedtransform v2.X es vulnerable a un control de acceso incorrecto. Los usuarios no autorizados pueden acceder y manipular endpoints destinados exclusivamente para uso administrativo. Este problema afecta específicamente a teacher\/edit\/{id}."}],"metrics":{},"references":[{"url":"https:\/\/drive.google.com\/file\/d\/14Or6QIpOeLEqdFm1mwxdE_NNCOwMmcFc\/view","source":"cve@mitre.org"},{"url":"https:\/\/www.getastra.com\/blog\/vulnerability\/improper-access-control-in-school-management-system-unifiedtransform\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-55581","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T22:15:14.137","lastModified":"2025-02-26T22:15:14.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"When AdaCore Ada Web Server 25.0.0 is linked with GnuTLS, the default behaviour of AWS.Client is vulnerable to a man-in-the-middle attack because of lack of verification of an HTTPS server's certificate (unless the using program specifies a TLS configuration)."},{"lang":"es","value":"Cuando AdaCore Ada Web Server 25.0.0 está vinculado con GnuTLS, el comportamiento predeterminado de AWS.Client es vulnerable a un ataque de intermediario debido a la falta de verificación del certificado de un servidor HTTPS (a menos que el programa que lo utiliza especifique una configuración TLS)."}],"metrics":{},"references":[{"url":"https:\/\/docs.adacore.com\/corp\/security-advisories\/SEC.AWS-0056-v1.pdf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-57040","sourceIdentifier":"cve@mitre.org","published":"2025-02-26T22:15:14.240","lastModified":"2025-02-26T22:15:14.240","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"TL-WR845N(UN)_V4_200909 and TL-WR845N(UN)_V4_190219 was discovered to contain a hardcoded password for the root account which can be obtained via a brute force attack."},{"lang":"es","value":"Se descubrió que TL-WR845N(UN)_V4_200909 y TL-WR845N(UN)_V4_190219 contienen una contraseña codificada para la cuenta raíz que se puede obtener mediante un ataque de fuerza bruta."}],"metrics":{},"references":[{"url":"https:\/\/security.iiita.ac.in\/iot\/hashed_password.pdf","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2025-1728","sourceIdentifier":"security@wordfence.com","published":"2025-02-26T22:15:14.333","lastModified":"2025-02-26T22:15:14.333","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: ** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. Reason: This candidate was issued in error. Notes: All references and descriptions in this candidate have been removed to prevent accidental usage."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2025-1460","sourceIdentifier":"cve@gitlab.com","published":"2025-02-26T23:15:10.193","lastModified":"2025-02-26T23:15:10.193","vulnStatus":"Rejected","cveTags":[],"descriptions":[{"lang":"en","value":"Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."}],"metrics":{},"references":[]}},{"cve":{"id":"CVE-2024-57953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.393","lastModified":"2025-02-27T02:15:10.393","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: tps6594: Fix integer overflow on 32bit systems\n\nThe problem is this multiply in tps6594_rtc_set_offset()\n\n\ttmp = offset * TICKS_PER_HOUR;\n\nThe \"tmp\" variable is an s64 but \"offset\" is a long in the\n(-277774)-277774 range.  On 32bit systems a long can hold numbers up to\napproximately two billion.  The number of TICKS_PER_HOUR is really large,\n(32768 * 3600) or roughly a hundred million.  When you start multiplying\nby a hundred million it doesn't take long to overflow the two billion\nmark.\n\nProbably the safest way to fix this is to change the type of\nTICKS_PER_HOUR to long long because it's such a large number."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09c4a610153286cef54d4f0c85398f4e32fc227e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5127f3cbfc78a7b301b86328247230bec47e0bb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53b0c7b15accb18d15d95c7fe68f61630ebfd1ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57973","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.490","lastModified":"2025-02-27T02:15:10.490","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nrdma\/cxgb4: Prevent potential integer overflow on 32bit\n\nThe \"gl->tot_len\" variable is controlled by the user.  It comes from\nprocess_responses().  On 32bit systems, the \"gl->tot_len + sizeof(struct\ncpl_pass_accept_req) + sizeof(struct rss_header)\" addition could have an\ninteger wrapping bug.  Use size_add() to prevent this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4422f452d028850b9cc4fd8f1cf45a8ff91855eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aeb814484387811b3579d5c78ad4eb301e3bf1c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd96a3935e89486304461a21752f824fc25e0f0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd352107f22bfbecbbf3b74bde14f3f932296309","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de8d88b68d0cfd41152a7a63d6aec0ed3e1b837a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57974","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.590","lastModified":"2025-02-27T02:15:10.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudp: Deal with race between UDP socket address change and rehash\n\nIf a UDP socket changes its local address while it's receiving\ndatagrams, as a result of connect(), there is a period during which\na lookup operation might fail to find it, after the address is changed\nbut before the secondary hash (port and address) and the four-tuple\nhash (local and remote ports and addresses) are updated.\n\nSecondary hash chains were introduced by commit 30fff9231fad (\"udp:\nbind() optimisation\") and, as a result, a rehash operation became\nneeded to make a bound socket reachable again after a connect().\n\nThis operation was introduced by commit 719f835853a9 (\"udp: add\nrehash on connect()\") which isn't however a complete fix: the\nsocket will be found once the rehashing completes, but not while\nit's pending.\n\nThis is noticeable with a socat(1) server in UDP4-LISTEN mode, and a\nclient sending datagrams to it. After the server receives the first\ndatagram (cf. _xioopen_ipdgram_listen()), it issues a connect() to\nthe address of the sender, in order to set up a directed flow.\n\nNow, if the client, running on a different CPU thread, happens to\nsend a (subsequent) datagram while the server's socket changes its\naddress, but is not rehashed yet, this will result in a failed\nlookup and a port unreachable error delivered to the client, as\napparent from the following reproducer:\n\n  LEN=$(($(cat \/proc\/sys\/net\/core\/wmem_default) \/ 4))\n  dd if=\/dev\/urandom bs=1 count=${LEN} of=tmp.in\n\n  while :; do\n  \ttaskset -c 1 socat UDP4-LISTEN:1337,null-eof OPEN:tmp.out,create,trunc &\n  \tsleep 0.1 || sleep 1\n  \ttaskset -c 2 socat OPEN:tmp.in UDP4:localhost:1337,shut-null\n  \twait\n  done\n\nwhere the client will eventually get ECONNREFUSED on a write()\n(typically the second or third one of a given iteration):\n\n  2024\/11\/13 21:28:23 socat[46901] E write(6, 0x556db2e3c000, 8192): Connection refused\n\nThis issue was first observed as a seldom failure in Podman's tests\nchecking UDP functionality while using pasta(1) to connect the\ncontainer's network namespace, which leads us to a reproducer with\nthe lookup error resulting in an ICMP packet on a tap device:\n\n  LOCAL_ADDR=\"$(ip -j -4 addr show|jq -rM '.[] | .addr_info[0] | select(.scope == \"global\").local')\"\n\n  while :; do\n  \t.\/pasta --config-net -p pasta.pcap -u 1337 socat UDP4-LISTEN:1337,null-eof OPEN:tmp.out,create,trunc &\n  \tsleep 0.2 || sleep 1\n  \tsocat OPEN:tmp.in UDP4:${LOCAL_ADDR}:1337,shut-null\n  \twait\n  \tcmp tmp.in tmp.out\n  done\n\nOnce this fails:\n\n  tmp.in tmp.out differ: char 8193, line 29\n\nwe can finally have a look at what's going on:\n\n  $ tshark -r pasta.pcap\n      1   0.000000           :: ? ff02::16     ICMPv6 110 Multicast Listener Report Message v2\n      2   0.168690 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n      3   0.168767 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n      4   0.168806 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n      5   0.168827 c6:47:05:8d:dc:04 ? Broadcast    ARP 42 Who has 88.198.0.161? Tell 88.198.0.164\n      6   0.168851 9a:55:9a:55:9a:55 ? c6:47:05:8d:dc:04 ARP 42 88.198.0.161 is at 9a:55:9a:55:9a:55\n      7   0.168875 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n      8   0.168896 88.198.0.164 ? 88.198.0.161 ICMP 590 Destination unreachable (Port unreachable)\n      9   0.168926 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n     10   0.168959 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192\n     11   0.168989 88.198.0.161 ? 88.198.0.164 UDP 4138 60260 ? 1337 Len=4096\n     12   0.169010 88.198.0.161 ? 88.198.0.164 UDP 42 60260 ? 1337 Len=0\n\nOn the third datagram received, the network namespace of the container\ninitiates an ARP lookup to deliver the ICMP message.\n\nIn another variant of this reproducer, starting the client with:\n\n  strace -f pasta --config-net -u 1337 socat UDP4-LISTEN:1337,null-eof OPEN:tmp.out,create,tru\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f8344fce91c5766d368edb0ad80142eacd805c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a502ea6fa94b1f7be72a24bcf9e3f5f6b7e6e90c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d65d3bf309b2649d27b24efd0d8784da2d81f2a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57975","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.687","lastModified":"2025-02-27T02:15:10.687","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do proper folio cleanup when run_delalloc_nocow() failed\n\n[BUG]\nWith CONFIG_DEBUG_VM set, test case generic\/476 has some chance to crash\nwith the following VM_BUG_ON_FOLIO():\n\n  BTRFS error (device dm-3): cow_file_range failed, start 1146880 end 1253375 len 106496 ret -28\n  BTRFS error (device dm-3): run_delalloc_nocow failed, start 1146880 end 1253375 len 106496 ret -28\n  page: refcount:4 mapcount:0 mapping:00000000592787cc index:0x12 pfn:0x10664\n  aops:btrfs_aops [btrfs] ino:101 dentry name(?):\"f1774\"\n  flags: 0x2fffff80004028(uptodate|lru|private|node=0|zone=2|lastcpupid=0xfffff)\n  page dumped because: VM_BUG_ON_FOLIO(!folio_test_locked(folio))\n  ------------[ cut here ]------------\n  kernel BUG at mm\/page-writeback.c:2992!\n  Internal error: Oops - BUG: 00000000f2000800 [#1] SMP\n  CPU: 2 UID: 0 PID: 3943513 Comm: kworker\/u24:15 Tainted: G           OE      6.12.0-rc7-custom+ #87\n  Tainted: [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\n  Hardware name: QEMU KVM Virtual Machine, BIOS unknown 2\/2\/2022\n  Workqueue: events_unbound btrfs_async_reclaim_data_space [btrfs]\n  pc : folio_clear_dirty_for_io+0x128\/0x258\n  lr : folio_clear_dirty_for_io+0x128\/0x258\n  Call trace:\n   folio_clear_dirty_for_io+0x128\/0x258\n   btrfs_folio_clamp_clear_dirty+0x80\/0xd0 [btrfs]\n   __process_folios_contig+0x154\/0x268 [btrfs]\n   extent_clear_unlock_delalloc+0x5c\/0x80 [btrfs]\n   run_delalloc_nocow+0x5f8\/0x760 [btrfs]\n   btrfs_run_delalloc_range+0xa8\/0x220 [btrfs]\n   writepage_delalloc+0x230\/0x4c8 [btrfs]\n   extent_writepage+0xb8\/0x358 [btrfs]\n   extent_write_cache_pages+0x21c\/0x4e8 [btrfs]\n   btrfs_writepages+0x94\/0x150 [btrfs]\n   do_writepages+0x74\/0x190\n   filemap_fdatawrite_wbc+0x88\/0xc8\n   start_delalloc_inodes+0x178\/0x3a8 [btrfs]\n   btrfs_start_delalloc_roots+0x174\/0x280 [btrfs]\n   shrink_delalloc+0x114\/0x280 [btrfs]\n   flush_space+0x250\/0x2f8 [btrfs]\n   btrfs_async_reclaim_data_space+0x180\/0x228 [btrfs]\n   process_one_work+0x164\/0x408\n   worker_thread+0x25c\/0x388\n   kthread+0x100\/0x118\n   ret_from_fork+0x10\/0x20\n  Code: 910a8021 a90363f7 a9046bf9 94012379 (d4210000)\n  ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nThe first two lines of extra debug messages show the problem is caused\nby the error handling of run_delalloc_nocow().\n\nE.g. we have the following dirtied range (4K blocksize 4K page size):\n\n    0                 16K                  32K\n    |\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|\n    |  Pre-allocated  |\n\nAnd the range [0, 16K) has a preallocated extent.\n\n- Enter run_delalloc_nocow() for range [0, 16K)\n  Which found range [0, 16K) is preallocated, can do the proper NOCOW\n  write.\n\n- Enter fallback_to_fow() for range [16K, 32K)\n  Since the range [16K, 32K) is not backed by preallocated extent, we\n  have to go COW.\n\n- cow_file_range() failed for range [16K, 32K)\n  So cow_file_range() will do the clean up by clearing folio dirty,\n  unlock the folios.\n\n  Now the folios in range [16K, 32K) is unlocked.\n\n- Enter extent_clear_unlock_delalloc() from run_delalloc_nocow()\n  Which is called with PAGE_START_WRITEBACK to start page writeback.\n  But folios can only be marked writeback when it's properly locked,\n  thus this triggered the VM_BUG_ON_FOLIO().\n\nFurthermore there is another hidden but common bug that\nrun_delalloc_nocow() is not clearing the folio dirty flags in its error\nhandling path.\nThis is the common bug shared between run_delalloc_nocow() and\ncow_file_range().\n\n[FIX]\n- Clear folio dirty for range [@start, @cur_offset)\n  Introduce a helper, cleanup_dirty_folios(), which\n  will find and lock the folio in the range, clear the dirty flag and\n  start\/end the writeback, with the extra handling for the\n  @locked_folio.\n\n- Introduce a helper to clear folio dirty, start and end writeback\n\n- Introduce a helper to record the last failed COW range end\n  This is to trace which range we should skip, to avoid double\n  unlocking.\n\n- Skip the failed COW range for the e\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2434533f1c963e7317c45880c98287e5bed98325","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ae72abbf91eb172ce3a838a4dc34be3c9707296","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2b47df81c8e20a8e8cd94f0d7df211137ae94ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57976","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.790","lastModified":"2025-02-27T02:15:10.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do proper folio cleanup when cow_file_range() failed\n\n[BUG]\nWhen testing with COW fixup marked as BUG_ON() (this is involved with the\nnew pin_user_pages*() change, which should not result new out-of-band\ndirty pages), I hit a crash triggered by the BUG_ON() from hitting COW\nfixup path.\n\nThis BUG_ON() happens just after a failed btrfs_run_delalloc_range():\n\n  BTRFS error (device dm-2): failed to run delalloc range, root 348 ino 405 folio 65536 submit_bitmap 6-15 start 90112 len 106496: -28\n  ------------[ cut here ]------------\n  kernel BUG at fs\/btrfs\/extent_io.c:1444!\n  Internal error: Oops - BUG: 00000000f2000800 [#1] SMP\n  CPU: 0 UID: 0 PID: 434621 Comm: kworker\/u24:8 Tainted: G           OE      6.12.0-rc7-custom+ #86\n  Hardware name: QEMU KVM Virtual Machine, BIOS unknown 2\/2\/2022\n  Workqueue: events_unbound btrfs_async_reclaim_data_space [btrfs]\n  pc : extent_writepage_io+0x2d4\/0x308 [btrfs]\n  lr : extent_writepage_io+0x2d4\/0x308 [btrfs]\n  Call trace:\n   extent_writepage_io+0x2d4\/0x308 [btrfs]\n   extent_writepage+0x218\/0x330 [btrfs]\n   extent_write_cache_pages+0x1d4\/0x4b0 [btrfs]\n   btrfs_writepages+0x94\/0x150 [btrfs]\n   do_writepages+0x74\/0x190\n   filemap_fdatawrite_wbc+0x88\/0xc8\n   start_delalloc_inodes+0x180\/0x3b0 [btrfs]\n   btrfs_start_delalloc_roots+0x174\/0x280 [btrfs]\n   shrink_delalloc+0x114\/0x280 [btrfs]\n   flush_space+0x250\/0x2f8 [btrfs]\n   btrfs_async_reclaim_data_space+0x180\/0x228 [btrfs]\n   process_one_work+0x164\/0x408\n   worker_thread+0x25c\/0x388\n   kthread+0x100\/0x118\n   ret_from_fork+0x10\/0x20\n  Code: aa1403e1 9402f3ef aa1403e0 9402f36f (d4210000)\n  ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nThat failure is mostly from cow_file_range(), where we can hit -ENOSPC.\n\nAlthough the -ENOSPC is already a bug related to our space reservation\ncode, let's just focus on the error handling.\n\nFor example, we have the following dirty range [0, 64K) of an inode,\nwith 4K sector size and 4K page size:\n\n   0        16K        32K       48K       64K\n   |\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|\n   |#######################################|\n\nWhere |\/\/\/| means page are still dirty, and |###| means the extent io\ntree has EXTENT_DELALLOC flag.\n\n- Enter extent_writepage() for page 0\n\n- Enter btrfs_run_delalloc_range() for range [0, 64K)\n\n- Enter cow_file_range() for range [0, 64K)\n\n- Function btrfs_reserve_extent() only reserved one 16K extent\n  So we created extent map and ordered extent for range [0, 16K)\n\n   0        16K        32K       48K       64K\n   |\/\/\/\/\/\/\/\/|\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|\n   |<- OE ->|##############################|\n\n   And range [0, 16K) has its delalloc flag cleared.\n   But since we haven't yet submit any bio, involved 4 pages are still\n   dirty.\n\n- Function btrfs_reserve_extent() returns with -ENOSPC\n  Now we have to run error cleanup, which will clear all\n  EXTENT_DELALLOC* flags and clear the dirty flags for the remaining\n  ranges:\n\n   0        16K        32K       48K       64K\n   |\/\/\/\/\/\/\/\/|                              |\n   |        |                              |\n\n  Note that range [0, 16K) still has its pages dirty.\n\n- Some time later, writeback is triggered again for the range [0, 16K)\n  since the page range still has dirty flags.\n\n- btrfs_run_delalloc_range() will do nothing because there is no\n  EXTENT_DELALLOC flag.\n\n- extent_writepage_io() finds page 0 has no ordered flag\n  Which falls into the COW fixup path, triggering the BUG_ON().\n\nUnfortunately this error handling bug dates back to the introduction of\nbtrfs.  Thankfully with the abuse of COW fixup, at least it won't crash\nthe kernel.\n\n[FIX]\nInstead of immediately unlocking the extent and folios, we keep the extent\nand folios locked until either erroring out or the whole delalloc range\nfinished.\n\nWhen the whole delalloc range finished without error, we just unlock the\nwhole range with PAGE_SET_ORDERED (and PAGE_UNLOCK for !keep_locked\ncases)\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06f364284794f149d2abc167c11d556cf20c954b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/692cf71173bb41395c855acbbbe197d3aedfa5d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57977","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.890","lastModified":"2025-02-27T02:15:10.890","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg: fix soft lockup in the OOM process\n\nA soft lockup issue was found in the product with about 56,000 tasks were\nin the OOM cgroup, it was traversing them when the soft lockup was\ntriggered.\n\nwatchdog: BUG: soft lockup - CPU#2 stuck for 23s! [VM Thread:1503066]\nCPU: 2 PID: 1503066 Comm: VM Thread Kdump: loaded Tainted: G\nHardware name: Huawei Cloud OpenStack Nova, BIOS\nRIP: 0010:console_unlock+0x343\/0x540\nRSP: 0000:ffffb751447db9a0 EFLAGS: 00000247 ORIG_RAX: ffffffffffffff13\nRAX: 0000000000000001 RBX: 0000000000000000 RCX: 00000000ffffffff\nRDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000247\nRBP: ffffffffafc71f90 R08: 0000000000000000 R09: 0000000000000040\nR10: 0000000000000080 R11: 0000000000000000 R12: ffffffffafc74bd0\nR13: ffffffffaf60a220 R14: 0000000000000247 R15: 0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f2fe6ad91f0 CR3: 00000004b2076003 CR4: 0000000000360ee0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n vprintk_emit+0x193\/0x280\n printk+0x52\/0x6e\n dump_task+0x114\/0x130\n mem_cgroup_scan_tasks+0x76\/0x100\n dump_header+0x1fe\/0x210\n oom_kill_process+0xd1\/0x100\n out_of_memory+0x125\/0x570\n mem_cgroup_out_of_memory+0xb5\/0xd0\n try_charge+0x720\/0x770\n mem_cgroup_try_charge+0x86\/0x180\n mem_cgroup_try_charge_delay+0x1c\/0x40\n do_anonymous_page+0xb5\/0x390\n handle_mm_fault+0xc4\/0x1f0\n\nThis is because thousands of processes are in the OOM cgroup, it takes a\nlong time to traverse all of them.  As a result, this lead to soft lockup\nin the OOM process.\n\nTo fix this issue, call 'cond_resched' in the 'mem_cgroup_scan_tasks'\nfunction per 1000 iterations.  For global OOM, call\n'touch_softlockup_watchdog' per 1000 iterations to avoid this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/46576834291869457d4772bb7df72d7c2bb3d57f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ade81479c7dda1ce3eedb215c78bc615bbd04f06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3a3741db8c1202aa959c77df3a4c361612d1eb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57978","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:10.990","lastModified":"2025-02-27T02:15:10.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imx-jpeg: Fix potential error pointer dereference in detach_pm()\n\nThe proble is on the first line:\n\n\tif (jpeg->pd_dev[i] && !pm_runtime_suspended(jpeg->pd_dev[i]))\n\nIf jpeg->pd_dev[i] is an error pointer, then passing it to\npm_runtime_suspended() will lead to an Oops.  The other conditions\ncheck for both error pointers and NULL, but it would be more clear to\nuse the IS_ERR_OR_NULL() check for that."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1378ffec30367233152b7dbf4fa6a25ee98585d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b2af918bb714937a8be6cb637f528585461cd98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e601a64f7777e2f78c02db1a8b5ba3b7c5e9e31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0b8535a7885ed4fd0b11625addb5476cae0f845","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fde89fe11b44500bfcb2d405825b69a5df805d19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57979","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.087","lastModified":"2025-02-27T02:15:11.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npps: Fix a use-after-free\n\nOn a board running ntpd and gpsd, I'm seeing a consistent use-after-free\nin sys_exit() from gpsd when rebooting:\n\n    pps pps1: removed\n    ------------[ cut here ]------------\n    kobject: '(null)' (00000000db4bec24): is not initialized, yet kobject_put() is being called.\n    WARNING: CPU: 2 PID: 440 at lib\/kobject.c:734 kobject_put+0x120\/0x150\n    CPU: 2 UID: 299 PID: 440 Comm: gpsd Not tainted 6.11.0-rc6-00308-gb31c44928842 #1\n    Hardware name: Raspberry Pi 4 Model B Rev 1.1 (DT)\n    pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n    pc : kobject_put+0x120\/0x150\n    lr : kobject_put+0x120\/0x150\n    sp : ffffffc0803d3ae0\n    x29: ffffffc0803d3ae0 x28: ffffff8042dc9738 x27: 0000000000000001\n    x26: 0000000000000000 x25: ffffff8042dc9040 x24: ffffff8042dc9440\n    x23: ffffff80402a4620 x22: ffffff8042ef4bd0 x21: ffffff80405cb600\n    x20: 000000000008001b x19: ffffff8040b3b6e0 x18: 0000000000000000\n    x17: 0000000000000000 x16: 0000000000000000 x15: 696e6920746f6e20\n    x14: 7369203a29343263 x13: 205d303434542020 x12: 0000000000000000\n    x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000\n    x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000\n    x5 : 0000000000000000 x4 : 0000000000000000 x3 : 0000000000000000\n    x2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\n    Call trace:\n     kobject_put+0x120\/0x150\n     cdev_put+0x20\/0x3c\n     __fput+0x2c4\/0x2d8\n     ____fput+0x1c\/0x38\n     task_work_run+0x70\/0xfc\n     do_exit+0x2a0\/0x924\n     do_group_exit+0x34\/0x90\n     get_signal+0x7fc\/0x8c0\n     do_signal+0x128\/0x13b4\n     do_notify_resume+0xdc\/0x160\n     el0_svc+0xd4\/0xf8\n     el0t_64_sync_handler+0x140\/0x14c\n     el0t_64_sync+0x190\/0x194\n    ---[ end trace 0000000000000000 ]---\n\n...followed by more symptoms of corruption, with similar stacks:\n\n    refcount_t: underflow; use-after-free.\n    kernel BUG at lib\/list_debug.c:62!\n    Kernel panic - not syncing: Oops - BUG: Fatal exception\n\nThis happens because pps_device_destruct() frees the pps_device with the\nembedded cdev immediately after calling cdev_del(), but, as the comment\nabove cdev_del() notes, fops for previously opened cdevs are still\ncallable even after cdev_del() returns. I think this bug has always\nbeen there: I can't explain why it suddenly started happening every time\nI reboot this particular board.\n\nIn commit d953e0e837e6 (\"pps: Fix a use-after free bug when\nunregistering a source.\"), George Spelvin suggested removing the\nembedded cdev. That seems like the simplest way to fix this, so I've\nimplemented his suggestion, using __register_chrdev() with pps_idr\nbecoming the source of truth for which minor corresponds to which\ndevice.\n\nBut now that pps_idr defines userspace visibility instead of cdev_add(),\nwe need to be sure the pps->dev refcount can't reach zero while\nuserspace can still find it again. So, the idr_remove() call moves to\npps_unregister_cdev(), and pps_idr now holds a reference to pps->dev.\n\n    pps_core: source serial1 got cdev (251:1)\n    <...>\n    pps pps1: removed\n    pps_core: unregistering pps1\n    pps_core: deallocating pps1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e5ee3281dc09014367f5112b6d566ba36ea2d49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85241f7de216f8298f6e48540ea13d7dcd100870","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91932db1d96b2952299ce30c1c693d834d10ace6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c79a39dc8d060b9e64e8b0fa9d245d44befeefbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd3bbcb6b3a7caa5ce67de76723b6d8531fb7f64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57980","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.190","lastModified":"2025-02-27T02:15:11.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: uvcvideo: Fix double free in error path\n\nIf the uvc_status_init() function fails to allocate the int_urb, it will\nfree the dev->status pointer but doesn't reset the pointer to NULL. This\nresults in the kfree() call in uvc_status_cleanup() trying to\ndouble-free the memory. Fix it by resetting the dev->status pointer to\nNULL after freeing it.\n\nReviewed by: Ricardo Ribalda <ribalda@chromium.org>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6c36dcd662ec5276782838660f8533a7cb26be49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9232719ac9ce4d5c213cebda23d72aec3e1c4c0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6ef3a7fa97ec823a1e1af9085cf13db9f7b3bac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1f8e69eec91d5a75ef079778a5d0151db2a7f22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8e63dd7b6683969d3d47c7b8e9635f96d554ad4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57981","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.293","lastModified":"2025-02-27T02:15:11.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: xhci: Fix NULL pointer dereference on certain command aborts\n\nIf a command is queued to the final usable TRB of a ring segment, the\nenqueue pointer is advanced to the subsequent link TRB and no further.\nIf the command is later aborted, when the abort completion is handled\nthe dequeue pointer is advanced to the first TRB of the next segment.\n\nIf no further commands are queued, xhci_handle_stopped_cmd_ring() sees\nthe ring pointers unequal and assumes that there is a pending command,\nso it calls xhci_mod_cmd_timer() which crashes if cur_cmd was NULL.\n\nDon't attempt timer setup if cur_cmd is NULL. The subsequent doorbell\nring likely is unnecessary too, but it's harmless. Leave it alone.\n\nThis is probably Bug 219532, but no confirmation has been received.\n\nThe issue has been independently reproduced and confirmed fixed using\na USB MCU programmed to NAK the Status stage of SET_ADDRESS forever.\nEverything continued working normally after several prevented crashes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ce5c0dac768be14afe2426101b568a0f66bfc4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e0a19912adb68a4b2b74fd77001c96cd83eb073","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ff18870af793ce2034a6ad746e91d0a3d985b88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae069cd2ba09a2bd6a87a68c59ef0b7ea39cd641","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b649f0d5bc256f691c7d234c3986685d54053de1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57982","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.397","lastModified":"2025-02-27T02:15:11.397","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: state: fix out-of-bounds read during lookup\n\nlookup and resize can run in parallel.\n\nThe xfrm_state_hash_generation seqlock ensures a retry, but the hash\nfunctions can observe a hmask value that is too large for the new hlist\narray.\n\nrehash does:\n  rcu_assign_pointer(net->xfrm.state_bydst, ndst) [..]\n  net->xfrm.state_hmask = nhashmask;\n\nWhile state lookup does:\n  h = xfrm_dst_hash(net, daddr, saddr, tmpl->reqid, encap_family);\n  hlist_for_each_entry_rcu(x, net->xfrm.state_bydst + h, bydst) {\n\nThis is only safe in case the update to state_bydst is larger than\nnet->xfrm.xfrm_state_hmask (or if the lookup function gets\nserialized via state spinlock again).\n\nFix this by prefetching state_hmask and the associated pointers.\nThe xfrm_state_hash_generation seqlock retry will ensure that the pointer\nand the hmask will be consistent.\n\nThe existing helpers, like xfrm_dst_hash(), are now unsafe for RCU side,\nadd lockdep assertions to document that they are only safe for insert\nside.\n\nxfrm_state_lookup_byaddr() uses the spinlock rather than RCU.\nAFAICS this is an oversight from back when state lookup was converted to\nRCU, this lock should be replaced with RCU in a future patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a16871c7832ea6435abb6e0b58289ae7dcb7e4fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd4c2a174994238d55ab54da2545543d36f4e0d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e952837f3ddb0ff726d5b582aa1aad9aa38d024d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57983","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.503","lastModified":"2025-02-27T02:15:11.503","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmailbox: th1520: Fix memory corruption due to incorrect array size\n\nThe functions th1520_mbox_suspend_noirq and th1520_mbox_resume_noirq are\nintended to save and restore the interrupt mask registers in the MBOX\nICU0. However, the array used to store these registers was incorrectly\nsized, leading to memory corruption when accessing all four registers.\n\nThis commit corrects the array size to accommodate all four interrupt\nmask registers, preventing memory corruption during suspend and resume\noperations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2cd12c7fba59f30369e8647a2b726c7280903304","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db049866943a38bf46a34fa120d526663339d7a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57984","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.603","lastModified":"2025-02-27T02:15:11.603","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: dw: Fix use-after-free in dw_i3c_master driver due to race condition\n\nIn dw_i3c_common_probe, &master->hj_work is bound with\ndw_i3c_hj_work. And dw_i3c_master_irq_handler can call\ndw_i3c_master_irq_handle_ibis function to start the work.\n\nIf we remove the module which will call dw_i3c_common_remove to\nmake cleanup, it will free master->base through i3c_master_unregister\nwhile the work mentioned above will be used. The sequence of operations\nthat may lead to a UAF bug is as follows:\n\nCPU0                                      CPU1\n\n                                     | dw_i3c_hj_work\ndw_i3c_common_remove                 |\ni3c_master_unregister(&master->base) |\ndevice_unregister(&master->dev)      |\ndevice_release                       |\n\/\/free master->base                  |\n                                     | i3c_master_do_daa(&master->base)\n                                     | \/\/use master->base\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in dw_i3c_common_remove."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/60d2fb033a999bb644f8e8606ff4a1b82de36c6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b0063098fcde17cd2894f2c96459b23388507ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b75439c945b94dd8a2b645355bdb56f948052601","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc84dd3c909a372c0d130f5f84c404717c17eed8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57985","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:11.703","lastModified":"2025-02-27T02:15:11.703","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Cleanup global '__scm' on probe failures\n\nIf SCM driver fails the probe, it should not leave global '__scm'\nvariable assigned, because external users of this driver will assume the\nprobe finished successfully.  For example TZMEM parts ('__scm->mempool')\nare initialized later in the probe, but users of it (__scm_smc_call())\nrely on the '__scm' variable.\n\nThis fixes theoretical NULL pointer exception, triggered via introducing\nprobe deferral in SCM driver with call trace:\n\n  qcom_tzmem_alloc+0x70\/0x1ac (P)\n  qcom_tzmem_alloc+0x64\/0x1ac (L)\n  qcom_scm_assign_mem+0x78\/0x194\n  qcom_rmtfs_mem_probe+0x2d4\/0x38c\n  platform_probe+0x68\/0xc8"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e76b546e6fca7eb568161f408133904ca6bcf4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/390d3baeba51a126f75c97b90ec28b9384ce4b84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/faf1715798fe72b79e4432ce8c6d03ca69765425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57986","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:12.597","lastModified":"2025-02-27T02:15:12.597","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: core: Fix assumption that Resolution Multipliers must be in Logical Collections\n\nA report in 2019 by the syzbot fuzzer was found to be connected to two\nerrors in the HID core associated with Resolution Multipliers.  One of\nthe errors was fixed by commit ea427a222d8b (\"HID: core: Fix deadloop\nin hid_apply_multiplier.\"), but the other has not been fixed.\n\nThis error arises because hid_apply_multipler() assumes that every\nResolution Multiplier control is contained in a Logical Collection,\ni.e., there's no way the routine can ever set multiplier_collection to\nNULL.  This is in spite of the fact that the function starts with a\nbig comment saying:\n\n\t * \"The Resolution Multiplier control must be contained in the same\n\t * Logical Collection as the control(s) to which it is to be applied.\n\t   ...\n\t *  If no Logical Collection is\n\t * defined, the Resolution Multiplier is associated with all\n\t * controls in the report.\"\n\t * HID Usage Table, v1.12, Section 4.3.1, p30\n\t *\n\t * Thus, search from the current collection upwards until we find a\n\t * logical collection...\n\nThe comment and the code overlook the possibility that none of the\ncollections found may be a Logical Collection.\n\nThe fix is to set the multiplier_collection pointer to NULL if the\ncollection found isn't a Logical Collection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64f2657b579343cf923aa933f08074e6258eb07b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5498f1f864ea26f4c613c77f54409c776a95a90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bebf542e8d7c44a18a95f306b1b5dc160c823506","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebaeca33d32c8bdb705a8c88267737a456f354b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed3d3883476423f337aac0f22c521819b3f1e970","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57987","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:12.700","lastModified":"2025-02-27T02:15:12.700","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btrtl: check for NULL in btrtl_setup_realtek()\n\nIf insert an USB dongle which chip is not maintained in ic_id_table, it\nwill hit the NULL point accessed. Add a null point check to avoid the\nKernel Oops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02f9da874e5e4626f81772eacc18967921998a71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1158ad8e8abb361d4b2aaa010c9af74de20ab82b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c15082f3567032d196e8760753373332508c2ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57988","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:12.800","lastModified":"2025-02-27T02:15:12.800","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btbcm: Fix NULL deref in btbcm_get_board_name()\n\ndevm_kstrdup() can return a NULL pointer on failure,but this\nreturned value in btbcm_get_board_name() is not checked.\nAdd NULL check in btbcm_get_board_name(), to handle kernel NULL\npointer dereference error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/74af8b9d0e79deefd2d43e14b84575839a849169","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b88655bc6593c6a7fdc1248b212d17e581c4334e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df2f2d9199e61819cca5da0121dfa4d4cb57000f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57989","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:12.907","lastModified":"2025-02-27T02:15:12.907","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7925: fix NULL deref check in mt7925_change_vif_links\n\nIn mt7925_change_vif_links() devm_kzalloc() may return NULL but this\nreturned value is not checked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f709fe755c16b811ba7339ae4c3ee2c72323d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5872530c2862700070223a2c2ea85642bf2f8875","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cd0bd815c8a48862a296df9b30e0ea0da14acd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57990","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.010","lastModified":"2025-02-27T02:15:13.010","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: mt7925: fix off by one in mt7925_load_clc()\n\nThis comparison should be >= instead of > to prevent an out of bounds\nread and write."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08fa656c91fd5fdf47ba393795b9c0d1e97539ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2d1628d32300e4f67ac0b7409cbfa7b912a8fe9d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d03b8fe1b518fc2ea2d82588e905f56d80cd64b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57991","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.110","lastModified":"2025-02-27T02:15:13.110","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: chan: fix soft lockup in rtw89_entity_recalc_mgnt_roles()\n\nDuring rtw89_entity_recalc_mgnt_roles(), there is a normalizing process\nwhich will re-order the list if an entry with target pattern is found.\nAnd once one is found, should have aborted the list_for_each_entry. But,\n`break` just aborted the inner for-loop. The outer list_for_each_entry\nstill continues. Normally, only the first entry will match the target\npattern, and the re-ordering will change nothing, so there won't be\nsoft lockup. However, in some special cases, soft lockup would happen.\n\nFix it by `goto fill` to break from the list_for_each_entry.\n\nThe following is a sample of kernel log for this problem.\n\nwatchdog: BUG: soft lockup - CPU#1 stuck for 26s! [wpa_supplicant:2055]\n[...]\nRIP: 0010:rtw89_entity_recalc ([...] chan.c:392 chan.c:479) rtw89_core\n[...]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01d2d34e9fcc9897081c3c16a666f793c8a38c58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/223ba95fdcd3c6090e2bd51dce66abb6dd4f9df9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4790b3e314a4814f1680a5dc552031fb199b878","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57992","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.210","lastModified":"2025-02-27T02:15:13.210","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: unregister wiphy only if it has been registered\n\nThere is a specific error path in probe functions in wilc drivers (both\nsdio and spi) which can lead to kernel panic, as this one for example\nwhen using SPI:\n\nUnable to handle kernel paging request at virtual address 9f000000 when read\n[9f000000] *pgd=00000000\nInternal error: Oops: 5 [#1] ARM\nModules linked in: wilc1000_spi(+) crc_itu_t crc7 wilc1000 cfg80211 bluetooth ecdh_generic ecc\nCPU: 0 UID: 0 PID: 106 Comm: modprobe Not tainted 6.13.0-rc3+ #22\nHardware name: Atmel SAMA5\nPC is at wiphy_unregister+0x244\/0xc40 [cfg80211]\nLR is at wiphy_unregister+0x1c0\/0xc40 [cfg80211]\n[...]\n wiphy_unregister [cfg80211] from wilc_netdev_cleanup+0x380\/0x494 [wilc1000]\n wilc_netdev_cleanup [wilc1000] from wilc_bus_probe+0x360\/0x834 [wilc1000_spi]\n wilc_bus_probe [wilc1000_spi] from spi_probe+0x15c\/0x1d4\n spi_probe from really_probe+0x270\/0xb2c\n really_probe from __driver_probe_device+0x1dc\/0x4e8\n __driver_probe_device from driver_probe_device+0x5c\/0x140\n driver_probe_device from __driver_attach+0x220\/0x540\n __driver_attach from bus_for_each_dev+0x13c\/0x1a8\n bus_for_each_dev from bus_add_driver+0x2a0\/0x6a4\n bus_add_driver from driver_register+0x27c\/0x51c\n driver_register from do_one_initcall+0xf8\/0x564\n do_one_initcall from do_init_module+0x2e4\/0x82c\n do_init_module from load_module+0x59a0\/0x70c4\n load_module from init_module_from_file+0x100\/0x148\n init_module_from_file from sys_finit_module+0x2fc\/0x924\n sys_finit_module from ret_fast_syscall+0x0\/0x1c\n\nThe issue can easily be reproduced, for example by not wiring correctly\na wilc device through SPI (and so, make it unresponsive to early SPI\ncommands). It is due to a recent change decoupling wiphy allocation from\nwiphy registration, however wilc_netdev_cleanup has not been updated\naccordingly, letting it possibly call wiphy unregister on a wiphy which\nhas never been registered.\n\nFix this crash by moving wiphy_unregister\/wiphy_free out of\nwilc_netdev_cleanup, and by adjusting error paths in both drivers"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1be94490b6b8a06ff14cd23fda8714e6ec37cdfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7115b8229f3e6cdfae43b1cdd180f5b6c67cd70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57993","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.310","lastModified":"2025-02-27T02:15:13.310","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hid-thrustmaster: Fix warning in thrustmaster_probe by adding endpoint check\n\nsyzbot has found a type mismatch between a USB pipe and the transfer\nendpoint, which is triggered by the hid-thrustmaster driver[1].\nThere is a number of similar, already fixed issues [2].\nIn this case as in others, implementing check for endpoint type fixes the issue.\n\n[1] https:\/\/syzkaller.appspot.com\/bug?extid=040e8b3db6a96908d470\n[2] https:\/\/syzkaller.appspot.com\/bug?extid=348331f63b034f89b622"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/220883fba32549a34f0734e4859d07f4dcd56992","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50420d7c79c37a3efe4010ff9b1bb14bc61ebccf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/816e84602900f7f951458d743fa12769635ebfd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae730deded66150204c494282969bfa98dc3ae67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5bcae4212a6a4b4204f46a1b8bcba08909d2007","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57994","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.417","lastModified":"2025-02-27T02:15:13.417","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nptr_ring: do not block hard interrupts in ptr_ring_resize_multiple()\n\nJakub added a lockdep_assert_no_hardirq() check in __page_pool_put_page()\nto increase test coverage.\n\nsyzbot found a splat caused by hard irq blocking in\nptr_ring_resize_multiple() [1]\n\nAs current users of ptr_ring_resize_multiple() do not require\nhard irqs being masked, replace it to only block BH.\n\nRename helpers to better reflect they are safe against BH only.\n\n- ptr_ring_resize_multiple() to ptr_ring_resize_multiple_bh()\n- skb_array_resize_multiple() to skb_array_resize_multiple_bh()\n\n[1]\n\nWARNING: CPU: 1 PID: 9150 at net\/core\/page_pool.c:709 __page_pool_put_page net\/core\/page_pool.c:709 [inline]\nWARNING: CPU: 1 PID: 9150 at net\/core\/page_pool.c:709 page_pool_put_unrefed_netmem+0x157\/0xa40 net\/core\/page_pool.c:780\nModules linked in:\nCPU: 1 UID: 0 PID: 9150 Comm: syz.1.1052 Not tainted 6.11.0-rc3-syzkaller-00202-gf8669d7b5f5d #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nRIP: 0010:__page_pool_put_page net\/core\/page_pool.c:709 [inline]\nRIP: 0010:page_pool_put_unrefed_netmem+0x157\/0xa40 net\/core\/page_pool.c:780\nCode: 74 0e e8 7c aa fb f7 eb 43 e8 75 aa fb f7 eb 3c 65 8b 1d 38 a8 6a 76 31 ff 89 de e8 a3 ae fb f7 85 db 74 0b e8 5a aa fb f7 90 <0f> 0b 90 eb 1d 65 8b 1d 15 a8 6a 76 31 ff 89 de e8 84 ae fb f7 85\nRSP: 0018:ffffc9000bda6b58 EFLAGS: 00010083\nRAX: ffffffff8997e523 RBX: 0000000000000000 RCX: 0000000000040000\nRDX: ffffc9000fbd0000 RSI: 0000000000001842 RDI: 0000000000001843\nRBP: 0000000000000000 R08: ffffffff8997df2c R09: 1ffffd40003a000d\nR10: dffffc0000000000 R11: fffff940003a000e R12: ffffea0001d00040\nR13: ffff88802e8a4000 R14: dffffc0000000000 R15: 00000000ffffffff\nFS:  00007fb7aaf716c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fa15a0d4b72 CR3: 00000000561b0000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n tun_ptr_free drivers\/net\/tun.c:617 [inline]\n __ptr_ring_swap_queue include\/linux\/ptr_ring.h:571 [inline]\n ptr_ring_resize_multiple_noprof include\/linux\/ptr_ring.h:643 [inline]\n tun_queue_resize drivers\/net\/tun.c:3694 [inline]\n tun_device_event+0xaaf\/0x1080 drivers\/net\/tun.c:3714\n notifier_call_chain+0x19f\/0x3e0 kernel\/notifier.c:93\n call_netdevice_notifiers_extack net\/core\/dev.c:2032 [inline]\n call_netdevice_notifiers net\/core\/dev.c:2046 [inline]\n dev_change_tx_queue_len+0x158\/0x2a0 net\/core\/dev.c:9024\n do_setlink+0xff6\/0x41f0 net\/core\/rtnetlink.c:2923\n rtnl_setlink+0x40d\/0x5a0 net\/core\/rtnetlink.c:3201\n rtnetlink_rcv_msg+0x73f\/0xcf0 net\/core\/rtnetlink.c:6647\n netlink_rcv_skb+0x1e3\/0x430 net\/netlink\/af_netlink.c:2550"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3257dac521d0ac6653108c755141dce634bb8ff2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a126061c80d5efb4baef4bcf346094139cd81df6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e74801b7628dc52b17471aec729bc675479ddc73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57995","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.517","lastModified":"2025-02-27T02:15:13.517","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix read pointer after free in ath12k_mac_assign_vif_to_vdev()\n\nIn ath12k_mac_assign_vif_to_vdev(), if arvif is created on a different\nradio, it gets deleted from that radio through a call to\nath12k_mac_unassign_link_vif(). This action frees the arvif pointer.\nSubsequently, there is a check involving arvif, which will result in a\nread-after-free scenario.\n\nFix this by moving this check after arvif is again assigned via call to\nath12k_mac_assign_link_vif().\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a10971c7645a95f5d5dc23c26fbac4bf61801d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3a95a312419e4f1e992525917da9dbcd247038f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57996","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.620","lastModified":"2025-02-27T02:15:13.620","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: don't allow 1 packet limit\n\nThe current implementation does not work correctly with a limit of\n1. iproute2 actually checks for this and this patch adds the check in\nkernel as well.\n\nThis fixes the following syzkaller reported crash:\n\nUBSAN: array-index-out-of-bounds in net\/sched\/sch_sfq.c:210:6\nindex 65535 is out of range for type 'struct sfq_head[128]'\nCPU: 0 PID: 2569 Comm: syz-executor101 Not tainted 5.10.0-smp-DEV #1\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\nCall Trace:\n  __dump_stack lib\/dump_stack.c:79 [inline]\n  dump_stack+0x125\/0x19f lib\/dump_stack.c:120\n  ubsan_epilogue lib\/ubsan.c:148 [inline]\n  __ubsan_handle_out_of_bounds+0xed\/0x120 lib\/ubsan.c:347\n  sfq_link net\/sched\/sch_sfq.c:210 [inline]\n  sfq_dec+0x528\/0x600 net\/sched\/sch_sfq.c:238\n  sfq_dequeue+0x39b\/0x9d0 net\/sched\/sch_sfq.c:500\n  sfq_reset+0x13\/0x50 net\/sched\/sch_sfq.c:525\n  qdisc_reset+0xfe\/0x510 net\/sched\/sch_generic.c:1026\n  tbf_reset+0x3d\/0x100 net\/sched\/sch_tbf.c:319\n  qdisc_reset+0xfe\/0x510 net\/sched\/sch_generic.c:1026\n  dev_reset_queue+0x8c\/0x140 net\/sched\/sch_generic.c:1296\n  netdev_for_each_tx_queue include\/linux\/netdevice.h:2350 [inline]\n  dev_deactivate_many+0x6dc\/0xc20 net\/sched\/sch_generic.c:1362\n  __dev_close_many+0x214\/0x350 net\/core\/dev.c:1468\n  dev_close_many+0x207\/0x510 net\/core\/dev.c:1506\n  unregister_netdevice_many+0x40f\/0x16b0 net\/core\/dev.c:10738\n  unregister_netdevice_queue+0x2be\/0x310 net\/core\/dev.c:10695\n  unregister_netdevice include\/linux\/netdevice.h:2893 [inline]\n  __tun_detach+0x6b6\/0x1600 drivers\/net\/tun.c:689\n  tun_detach drivers\/net\/tun.c:705 [inline]\n  tun_chr_close+0x104\/0x1b0 drivers\/net\/tun.c:3640\n  __fput+0x203\/0x840 fs\/file_table.c:280\n  task_work_run+0x129\/0x1b0 kernel\/task_work.c:185\n  exit_task_work include\/linux\/task_work.h:33 [inline]\n  do_exit+0x5ce\/0x2200 kernel\/exit.c:931\n  do_group_exit+0x144\/0x310 kernel\/exit.c:1046\n  __do_sys_exit_group kernel\/exit.c:1057 [inline]\n  __se_sys_exit_group kernel\/exit.c:1055 [inline]\n  __x64_sys_exit_group+0x3b\/0x40 kernel\/exit.c:1055\n do_syscall_64+0x6c\/0xd0\n entry_SYSCALL_64_after_hwframe+0x61\/0xcb\nRIP: 0033:0x7fe5e7b52479\nCode: Unable to access opcode bytes at RIP 0x7fe5e7b5244f.\nRSP: 002b:00007ffd3c800398 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7\nRAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fe5e7b52479\nRDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000000\nRBP: 00007fe5e7bcd2d0 R08: ffffffffffffffb8 R09: 0000000000000014\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fe5e7bcd2d0\nR13: 0000000000000000 R14: 00007fe5e7bcdd20 R15: 00007fe5e7b24270\n\nThe crash can be also be reproduced with the following (with a tc\nrecompiled to allow for sfq limits of 1):\n\ntc qdisc add dev dummy0 handle 1: root tbf rate 1Kbit burst 100b lat 1s\n..\/iproute2-6.9.0\/tc\/tc qdisc add dev dummy0 handle 2: parent 1:10 sfq limit 1\nifconfig dummy0 up\nping -I dummy0 -f -c2 -W0.1 8.8.8.8\nsleep 1\n\nScenario that triggers the crash:\n\n* the first packet is sent and queued in TBF and SFQ; qdisc qlen is 1\n\n* TBF dequeues: it peeks from SFQ which moves the packet to the\n  gso_skb list and keeps qdisc qlen set to 1. TBF is out of tokens so\n  it schedules itself for later.\n\n* the second packet is sent and TBF tries to queues it to SFQ. qdisc\n  qlen is now 2 and because the SFQ limit is 1 the packet is dropped\n  by SFQ. At this point qlen is 1, and all of the SFQ slots are empty,\n  however q->tail is not NULL.\n\nAt this point, assuming no more packets are queued, when sch_dequeue\nruns again it will decrement the qlen for the current empty slot\ncausing an underflow and the subsequent out of bounds access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10685681bafce6febb39770f3387621bf5d67d0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35d0137305ae2f97260a9047f445bd4434bd6cc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d8947f2153ee9c5ab4cb17861a11cc45f30e8c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fefc294204f10a3405f175f4ac2be16d63f135e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/833e9a1c27b82024db7ff5038a51651f48f05e5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57997","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.720","lastModified":"2025-02-27T02:15:13.720","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wcn36xx: fix channel survey memory allocation size\n\nKASAN reported a memory allocation issue in wcn->chan_survey\ndue to incorrect size calculation.\nThis commit uses kcalloc to allocate memory for wcn->chan_survey,\nensuring proper initialization and preventing the use of uninitialized\nvalues when there are no frames on the channel."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/34cd2817708aec51ef1a6c007e0d6d5342a025d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6200d947f050efdba4090dfefd8a01981363d954","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64c4dcaeac1dc1030e47883b04a617ca9a4f164e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae68efdff7a7a42ab251cac79d8713de6f0dbaa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e95f9c408ff8311f75eeabc8acf34a66670d8815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57998","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.820","lastModified":"2025-02-27T02:15:13.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nOPP: add index check to assert to avoid buffer overflow in _read_freq()\n\nPass the freq index to the assert function to make sure\nwe do not read a freq out of the opp->rates[] table when called\nfrom the indexed variants:\ndev_pm_opp_find_freq_exact_indexed() or\ndev_pm_opp_find_freq_ceil\/floor_indexed().\n\nAdd a secondary parameter to the assert function, unused\nfor assert_single_clk() then add assert_clk_index() which\nwill check for the clock index when called from the _indexed()\nfind functions."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/774dd6f0f0a61c9c3848e025d7d9eeed1a7ca4cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d68c20638e50d5eb4576492a7958328ae445248","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d659bc68ed489022ea33342cfbda2911a81e7a0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da2a6acc73933b7812c94794726e438cde39e037","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb6ffa0192ba83ece1a318b956265519c5c7dcec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57999","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:13.930","lastModified":"2025-02-27T02:15:13.930","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/pseries\/iommu: IOMMU incorrectly marks MMIO range in DDW\n\nPower Hypervisor can possibily allocate MMIO window intersecting with\nDynamic DMA Window (DDW) range, which is over 32-bit addressing.\n\nThese MMIO pages needs to be marked as reserved so that IOMMU doesn't map\nDMA buffers in this range.\n\nThe current code is not marking these pages correctly which is resulting\nin LPAR to OOPS while booting. The stack is at below\n\nBUG: Unable to handle kernel data access on read at 0xc00800005cd40000\nFaulting instruction address: 0xc00000000005cdac\nOops: Kernel access of bad area, sig: 11 [#1]\nLE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: af_packet rfkill ibmveth(X) lpfc(+) nvmet_fc nvmet nvme_keyring crct10dif_vpmsum nvme_fc nvme_fabrics nvme_core be2net(+) nvme_auth rtc_generic nfsd auth_rpcgss nfs_acl lockd grace sunrpc fuse configfs ip_tables x_tables xfs libcrc32c dm_service_time ibmvfc(X) scsi_transport_fc vmx_crypto gf128mul crc32c_vpmsum dm_mirror dm_region_hash dm_log dm_multipath dm_mod sd_mod scsi_dh_emc scsi_dh_rdac scsi_dh_alua t10_pi crc64_rocksoft_generic crc64_rocksoft sg crc64 scsi_mod\nSupported: Yes, External\nCPU: 8 PID: 241 Comm: kworker\/8:1 Kdump: loaded Not tainted 6.4.0-150600.23.14-default #1 SLE15-SP6 b44ee71c81261b9e4bab5e0cde1f2ed891d5359b\nHardware name: IBM,9080-M9S POWER9 (raw) 0x4e2103 0xf000005 of:IBM,FW950.B0 (VH950_149) hv:phyp pSeries\nWorkqueue: events work_for_cpu_fn\nNIP:  c00000000005cdac LR: c00000000005e830 CTR: 0000000000000000\nREGS: c00001400c9ff770 TRAP: 0300   Not tainted  (6.4.0-150600.23.14-default)\nMSR:  800000000280b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE>  CR: 24228448  XER: 00000001\nCFAR: c00000000005cdd4 DAR: c00800005cd40000 DSISR: 40000000 IRQMASK: 0\nGPR00: c00000000005e830 c00001400c9ffa10 c000000001987d00 c00001400c4fe800\nGPR04: 0000080000000000 0000000000000001 0000000004000000 0000000000800000\nGPR08: 0000000004000000 0000000000000001 c00800005cd40000 ffffffffffffffff\nGPR12: 0000000084228882 c00000000a4c4f00 0000000000000010 0000080000000000\nGPR16: c00001400c4fe800 0000000004000000 0800000000000000 c00000006088b800\nGPR20: c00001401a7be980 c00001400eff3800 c000000002a2da68 000000000000002b\nGPR24: c0000000026793a8 c000000002679368 000000000000002a c0000000026793c8\nGPR28: 000008007effffff 0000080000000000 0000000000800000 c00001400c4fe800\nNIP [c00000000005cdac] iommu_table_reserve_pages+0xac\/0x100\nLR [c00000000005e830] iommu_init_table+0x80\/0x1e0\nCall Trace:\n[c00001400c9ffa10] [c00000000005e810] iommu_init_table+0x60\/0x1e0 (unreliable)\n[c00001400c9ffa90] [c00000000010356c] iommu_bypass_supported_pSeriesLP+0x9cc\/0xe40\n[c00001400c9ffc30] [c00000000005c300] dma_iommu_dma_supported+0xf0\/0x230\n[c00001400c9ffcb0] [c00000000024b0c4] dma_supported+0x44\/0x90\n[c00001400c9ffcd0] [c00000000024b14c] dma_set_mask+0x3c\/0x80\n[c00001400c9ffd00] [c0080000555b715c] be_probe+0xc4\/0xb90 [be2net]\n[c00001400c9ffdc0] [c000000000986f3c] local_pci_probe+0x6c\/0x110\n[c00001400c9ffe40] [c000000000188f28] work_for_cpu_fn+0x38\/0x60\n[c00001400c9ffe70] [c00000000018e454] process_one_work+0x314\/0x620\n[c00001400c9fff10] [c00000000018f280] worker_thread+0x2b0\/0x620\n[c00001400c9fff90] [c00000000019bb18] kthread+0x148\/0x150\n[c00001400c9fffe0] [c00000000000ded8] start_kernel_thread+0x14\/0x18\n\nThere are 2 issues in the code\n\n1. The index is \"int\" while the address is \"unsigned long\". This results in\n   negative value when setting the bitmap.\n\n2. The DMA offset is page shifted but the MMIO range is used as-is (64-bit\n   address). MMIO address needs to be page shifted as well."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7043d58ecd1381674f5b2c894deb6986a1a4896b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f70caad82e9c088ed93b4fea48d941ab6441886","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8cc20a8cceb3b5e8ad2e11365e3100ba36a27e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58000","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.033","lastModified":"2025-02-27T02:15:14.033","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: prevent reg-wait speculations\n\nWith *ENTER_EXT_ARG_REG instead of passing a user pointer with arguments\nfor the waiting loop the user can specify an offset into a pre-mapped\nregion of memory, in which case the\n[offset, offset + sizeof(io_uring_reg_wait)) will be intepreted as the\nargument.\n\nAs we address a kernel array using a user given index, it'd be a subject\nto speculation type of exploits. Use array_index_nospec() to prevent\nthat. Make sure to pass not the full region size but truncate by the\nmaximum offset allowed considering the structure size."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29b95ac917927ce9f95bf38797e16333ecb489b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a6de94df7bfa76d9850443547e7b3333f63a16a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21705","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.137","lastModified":"2025-02-27T02:15:14.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: handle fastopen disconnect correctly\n\nSyzbot was able to trigger a data stream corruption:\n\n  WARNING: CPU: 0 PID: 9846 at net\/mptcp\/protocol.c:1024 __mptcp_clean_una+0xddb\/0xff0 net\/mptcp\/protocol.c:1024\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 9846 Comm: syz-executor351 Not tainted 6.13.0-rc2-syzkaller-00059-g00a5acdbf398 #0\n  Hardware name: Google Compute Engine\/Google Compute Engine, BIOS Google 11\/25\/2024\n  RIP: 0010:__mptcp_clean_una+0xddb\/0xff0 net\/mptcp\/protocol.c:1024\n  Code: fa ff ff 48 8b 4c 24 18 80 e1 07 fe c1 38 c1 0f 8c 8e fa ff ff 48 8b 7c 24 18 e8 e0 db 54 f6 e9 7f fa ff ff e8 e6 80 ee f5 90 <0f> 0b 90 4c 8b 6c 24 40 4d 89 f4 e9 04 f5 ff ff 44 89 f1 80 e1 07\n  RSP: 0018:ffffc9000c0cf400 EFLAGS: 00010293\n  RAX: ffffffff8bb0dd5a RBX: ffff888033f5d230 RCX: ffff888059ce8000\n  RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n  RBP: ffffc9000c0cf518 R08: ffffffff8bb0d1dd R09: 1ffff110170c8928\n  R10: dffffc0000000000 R11: ffffed10170c8929 R12: 0000000000000000\n  R13: ffff888033f5d220 R14: dffffc0000000000 R15: ffff8880592b8000\n  FS:  00007f6e866496c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f6e86f491a0 CR3: 00000000310e6000 CR4: 00000000003526f0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   <TASK>\n   __mptcp_clean_una_wakeup+0x7f\/0x2d0 net\/mptcp\/protocol.c:1074\n   mptcp_release_cb+0x7cb\/0xb30 net\/mptcp\/protocol.c:3493\n   release_sock+0x1aa\/0x1f0 net\/core\/sock.c:3640\n   inet_wait_for_connect net\/ipv4\/af_inet.c:609 [inline]\n   __inet_stream_connect+0x8bd\/0xf30 net\/ipv4\/af_inet.c:703\n   mptcp_sendmsg_fastopen+0x2a2\/0x530 net\/mptcp\/protocol.c:1755\n   mptcp_sendmsg+0x1884\/0x1b10 net\/mptcp\/protocol.c:1830\n   sock_sendmsg_nosec net\/socket.c:711 [inline]\n   __sock_sendmsg+0x1a6\/0x270 net\/socket.c:726\n   ____sys_sendmsg+0x52a\/0x7e0 net\/socket.c:2583\n   ___sys_sendmsg net\/socket.c:2637 [inline]\n   __sys_sendmsg+0x269\/0x350 net\/socket.c:2669\n   do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n   do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n  RIP: 0033:0x7f6e86ebfe69\n  Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 b1 1f 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\n  RSP: 002b:00007f6e86649168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\n  RAX: ffffffffffffffda RBX: 00007f6e86f491b8 RCX: 00007f6e86ebfe69\n  RDX: 0000000030004001 RSI: 0000000020000080 RDI: 0000000000000003\n  RBP: 00007f6e86f491b0 R08: 00007f6e866496c0 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000246 R12: 00007f6e86f491bc\n  R13: 000000000000006e R14: 00007ffe445d9420 R15: 00007ffe445d9508\n   <\/TASK>\n\nThe root cause is the bad handling of disconnect() generated internally\nby the MPTCP protocol in case of connect FASTOPEN errors.\n\nAddress the issue increasing the socket disconnect counter even on such\na case, to allow other threads waiting on the same socket lock to\nproperly error out."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0263fb2e7b7b88075a5d86e74c4384ee4400828d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/619af16b3b57a3a4ee50b9a30add9ff155541e71","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ec806762318a4adde0ea63342d42d0feae95079","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73e268b4be27b36ae68ea10755cb003f43b38884","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84ac44d9fed3a56440971cbd7600a02b70b5b32a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21706","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.237","lastModified":"2025-02-27T02:15:14.237","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only set fullmesh for subflow endp\n\nWith the in-kernel path-manager, it is possible to change the 'fullmesh'\nflag. The code in mptcp_pm_nl_fullmesh() expects to change it only on\n'subflow' endpoints, to recreate more or less subflows using the linked\naddress.\n\nUnfortunately, the set_flags() hook was a bit more permissive, and\nallowed 'implicit' endpoints to get the 'fullmesh' flag while it is not\nallowed before.\n\nThat's what syzbot found, triggering the following warning:\n\n  WARNING: CPU: 0 PID: 6499 at net\/mptcp\/pm_netlink.c:1496 __mark_subflow_endp_available net\/mptcp\/pm_netlink.c:1496 [inline]\n  WARNING: CPU: 0 PID: 6499 at net\/mptcp\/pm_netlink.c:1496 mptcp_pm_nl_fullmesh net\/mptcp\/pm_netlink.c:1980 [inline]\n  WARNING: CPU: 0 PID: 6499 at net\/mptcp\/pm_netlink.c:1496 mptcp_nl_set_flags net\/mptcp\/pm_netlink.c:2003 [inline]\n  WARNING: CPU: 0 PID: 6499 at net\/mptcp\/pm_netlink.c:1496 mptcp_pm_nl_set_flags+0x974\/0xdc0 net\/mptcp\/pm_netlink.c:2064\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 6499 Comm: syz.1.413 Not tainted 6.13.0-rc5-syzkaller-00172-gd1bf27c4e176 #0\n  Hardware name: Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\n  RIP: 0010:__mark_subflow_endp_available net\/mptcp\/pm_netlink.c:1496 [inline]\n  RIP: 0010:mptcp_pm_nl_fullmesh net\/mptcp\/pm_netlink.c:1980 [inline]\n  RIP: 0010:mptcp_nl_set_flags net\/mptcp\/pm_netlink.c:2003 [inline]\n  RIP: 0010:mptcp_pm_nl_set_flags+0x974\/0xdc0 net\/mptcp\/pm_netlink.c:2064\n  Code: 01 00 00 49 89 c5 e8 fb 45 e8 f5 e9 b8 fc ff ff e8 f1 45 e8 f5 4c 89 f7 be 03 00 00 00 e8 44 1d 0b f9 eb a0 e8 dd 45 e8 f5 90 <0f> 0b 90 e9 17 ff ff ff 89 d9 80 e1 07 38 c1 0f 8c c9 fc ff ff 48\n  RSP: 0018:ffffc9000d307240 EFLAGS: 00010293\n  RAX: ffffffff8bb72e03 RBX: 0000000000000000 RCX: ffff88807da88000\n  RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\n  RBP: ffffc9000d307430 R08: ffffffff8bb72cf0 R09: 1ffff1100b842a5e\n  R10: dffffc0000000000 R11: ffffed100b842a5f R12: ffff88801e2e5ac0\n  R13: ffff88805c214800 R14: ffff88805c2152e8 R15: 1ffff1100b842a5d\n  FS:  00005555619f6500(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000020002840 CR3: 00000000247e6000 CR4: 00000000003526f0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   <TASK>\n   genl_family_rcv_msg_doit net\/netlink\/genetlink.c:1115 [inline]\n   genl_family_rcv_msg net\/netlink\/genetlink.c:1195 [inline]\n   genl_rcv_msg+0xb14\/0xec0 net\/netlink\/genetlink.c:1210\n   netlink_rcv_skb+0x1e3\/0x430 net\/netlink\/af_netlink.c:2542\n   genl_rcv+0x28\/0x40 net\/netlink\/genetlink.c:1219\n   netlink_unicast_kernel net\/netlink\/af_netlink.c:1321 [inline]\n   netlink_unicast+0x7f6\/0x990 net\/netlink\/af_netlink.c:1347\n   netlink_sendmsg+0x8e4\/0xcb0 net\/netlink\/af_netlink.c:1891\n   sock_sendmsg_nosec net\/socket.c:711 [inline]\n   __sock_sendmsg+0x221\/0x270 net\/socket.c:726\n   ____sys_sendmsg+0x52a\/0x7e0 net\/socket.c:2583\n   ___sys_sendmsg net\/socket.c:2637 [inline]\n   __sys_sendmsg+0x269\/0x350 net\/socket.c:2669\n   do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n   do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n   entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n  RIP: 0033:0x7f5fe8785d29\n  Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\n  RSP: 002b:00007fff571f5558 EFLAGS: 00000246 ORIG_RAX: 000000000000002e\n  RAX: ffffffffffffffda RBX: 00007f5fe8975fa0 RCX: 00007f5fe8785d29\n  RDX: 0000000000000000 RSI: 0000000020000480 RDI: 0000000000000007\n  RBP: 00007f5fe8801b08 R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\n  R13: 00007f5fe8975fa0 R14: 00007f5fe8975fa0 R15: 000000\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bb0d1348546ad059f55c93def34e67cb2a034a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22b0734c9401a74ed4ebd9e8ef0da33e493852eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ac344cbd84fda75e05e1f445f7f8fb24dc175e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e3d61620a3cd033319553b980ff3a350adbe1bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de3b8d41d2547452c4cafb146d003fa4689fbaf2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21707","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.347","lastModified":"2025-02-27T02:15:14.347","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: consolidate suboption status\n\nMPTCP maintains the received sub-options status is the bitmask carrying\nthe received suboptions and in several bitfields carrying per suboption\nadditional info.\n\nZeroing the bitmask before parsing is not enough to ensure a consistent\nstatus, and the MPTCP code has to additionally clear some bitfiled\ndepending on the actually parsed suboption.\n\nThe above schema is fragile, and syzbot managed to trigger a path where\na relevant bitfield is not cleared\/initialized:\n\n  BUG: KMSAN: uninit-value in __mptcp_expand_seq net\/mptcp\/options.c:1030 [inline]\n  BUG: KMSAN: uninit-value in mptcp_expand_seq net\/mptcp\/protocol.h:864 [inline]\n  BUG: KMSAN: uninit-value in ack_update_msk net\/mptcp\/options.c:1060 [inline]\n  BUG: KMSAN: uninit-value in mptcp_incoming_options+0x2036\/0x3d30 net\/mptcp\/options.c:1209\n   __mptcp_expand_seq net\/mptcp\/options.c:1030 [inline]\n   mptcp_expand_seq net\/mptcp\/protocol.h:864 [inline]\n   ack_update_msk net\/mptcp\/options.c:1060 [inline]\n   mptcp_incoming_options+0x2036\/0x3d30 net\/mptcp\/options.c:1209\n   tcp_data_queue+0xb4\/0x7be0 net\/ipv4\/tcp_input.c:5233\n   tcp_rcv_established+0x1061\/0x2510 net\/ipv4\/tcp_input.c:6264\n   tcp_v4_do_rcv+0x7f3\/0x11a0 net\/ipv4\/tcp_ipv4.c:1916\n   tcp_v4_rcv+0x51df\/0x5750 net\/ipv4\/tcp_ipv4.c:2351\n   ip_protocol_deliver_rcu+0x2a3\/0x13d0 net\/ipv4\/ip_input.c:205\n   ip_local_deliver_finish+0x336\/0x500 net\/ipv4\/ip_input.c:233\n   NF_HOOK include\/linux\/netfilter.h:314 [inline]\n   ip_local_deliver+0x21f\/0x490 net\/ipv4\/ip_input.c:254\n   dst_input include\/net\/dst.h:460 [inline]\n   ip_rcv_finish+0x4a2\/0x520 net\/ipv4\/ip_input.c:447\n   NF_HOOK include\/linux\/netfilter.h:314 [inline]\n   ip_rcv+0xcd\/0x380 net\/ipv4\/ip_input.c:567\n   __netif_receive_skb_one_core net\/core\/dev.c:5704 [inline]\n   __netif_receive_skb+0x319\/0xa00 net\/core\/dev.c:5817\n   process_backlog+0x4ad\/0xa50 net\/core\/dev.c:6149\n   __napi_poll+0xe7\/0x980 net\/core\/dev.c:6902\n   napi_poll net\/core\/dev.c:6971 [inline]\n   net_rx_action+0xa5a\/0x19b0 net\/core\/dev.c:7093\n   handle_softirqs+0x1a0\/0x7c0 kernel\/softirq.c:561\n   __do_softirq+0x14\/0x1a kernel\/softirq.c:595\n   do_softirq+0x9a\/0x100 kernel\/softirq.c:462\n   __local_bh_enable_ip+0x9f\/0xb0 kernel\/softirq.c:389\n   local_bh_enable include\/linux\/bottom_half.h:33 [inline]\n   rcu_read_unlock_bh include\/linux\/rcupdate.h:919 [inline]\n   __dev_queue_xmit+0x2758\/0x57d0 net\/core\/dev.c:4493\n   dev_queue_xmit include\/linux\/netdevice.h:3168 [inline]\n   neigh_hh_output include\/net\/neighbour.h:523 [inline]\n   neigh_output include\/net\/neighbour.h:537 [inline]\n   ip_finish_output2+0x187c\/0x1b70 net\/ipv4\/ip_output.c:236\n   __ip_finish_output+0x287\/0x810\n   ip_finish_output+0x4b\/0x600 net\/ipv4\/ip_output.c:324\n   NF_HOOK_COND include\/linux\/netfilter.h:303 [inline]\n   ip_output+0x15f\/0x3f0 net\/ipv4\/ip_output.c:434\n   dst_output include\/net\/dst.h:450 [inline]\n   ip_local_out net\/ipv4\/ip_output.c:130 [inline]\n   __ip_queue_xmit+0x1f2a\/0x20d0 net\/ipv4\/ip_output.c:536\n   ip_queue_xmit+0x60\/0x80 net\/ipv4\/ip_output.c:550\n   __tcp_transmit_skb+0x3cea\/0x4900 net\/ipv4\/tcp_output.c:1468\n   tcp_transmit_skb net\/ipv4\/tcp_output.c:1486 [inline]\n   tcp_write_xmit+0x3b90\/0x9070 net\/ipv4\/tcp_output.c:2829\n   __tcp_push_pending_frames+0xc4\/0x380 net\/ipv4\/tcp_output.c:3012\n   tcp_send_fin+0x9f6\/0xf50 net\/ipv4\/tcp_output.c:3618\n   __tcp_close+0x140c\/0x1550 net\/ipv4\/tcp.c:3130\n   __mptcp_close_ssk+0x74e\/0x16f0 net\/mptcp\/protocol.c:2496\n   mptcp_close_ssk+0x26b\/0x2c0 net\/mptcp\/protocol.c:2550\n   mptcp_pm_nl_rm_addr_or_subflow+0x635\/0xd10 net\/mptcp\/pm_netlink.c:889\n   mptcp_pm_nl_rm_subflow_received net\/mptcp\/pm_netlink.c:924 [inline]\n   mptcp_pm_flush_addrs_and_subflows net\/mptcp\/pm_netlink.c:1688 [inline]\n   mptcp_nl_flush_addrs_list net\/mptcp\/pm_netlink.c:1709 [inline]\n   mptcp_pm_nl_flush_addrs_doit+0xe10\/0x1630 net\/mptcp\/pm_netlink.c:1750\n   genl_family_rcv_msg_doit net\/netlink\/genetlink.c:1115 [inline]\n \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b5332d416d151a15742d1b16e7319368e3cc5c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6169e942370b4b6f9442d35c51519bf6c346843b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f6c72b8ef8130760710e337dc8fbe7263954884","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba0518f9e8688cd4fcb569e8df2a74874b4f3894","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c86b000782daba926c627d2fa00c3f60a75e7472","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21708","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.447","lastModified":"2025-02-27T02:15:14.447","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: rtl8150: enable basic endpoint checking\n\nSyzkaller reports [1] encountering a common issue of utilizing a wrong\nusb endpoint type during URB submitting stage. This, in turn, triggers\na warning shown below.\n\nFor now, enable simple endpoint checking (specifically, bulk and\ninterrupt eps, testing control one is not essential) to mitigate\nthe issue with a view to do other related cosmetic changes later,\nif they are necessary.\n\n[1] Syzkaller report:\nusb 1-1: BOGUS urb xfer, pipe 3 != type 1\nWARNING: CPU: 1 PID: 2586 at drivers\/usb\/core\/urb.c:503 usb_submit_urb+0xe4b\/0x1730 driv>\nModules linked in:\nCPU: 1 UID: 0 PID: 2586 Comm: dhcpcd Not tainted 6.11.0-rc4-syzkaller-00069-gfc88bb11617>\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/06\/2024\nRIP: 0010:usb_submit_urb+0xe4b\/0x1730 drivers\/usb\/core\/urb.c:503\nCode: 84 3c 02 00 00 e8 05 e4 fc fc 4c 89 ef e8 fd 25 d7 fe 45 89 e0 89 e9 4c 89 f2 48 8>\nRSP: 0018:ffffc9000441f740 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: ffff888112487a00 RCX: ffffffff811a99a9\nRDX: ffff88810df6ba80 RSI: ffffffff811a99b6 RDI: 0000000000000001\nRBP: 0000000000000003 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000001\nR13: ffff8881023bf0a8 R14: ffff888112452a20 R15: ffff888112487a7c\nFS:  00007fc04eea5740(0000) GS:ffff8881f6300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f0a1de9f870 CR3: 000000010dbd0000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n rtl8150_open+0x300\/0xe30 drivers\/net\/usb\/rtl8150.c:733\n __dev_open+0x2d4\/0x4e0 net\/core\/dev.c:1474\n __dev_change_flags+0x561\/0x720 net\/core\/dev.c:8838\n dev_change_flags+0x8f\/0x160 net\/core\/dev.c:8910\n devinet_ioctl+0x127a\/0x1f10 net\/ipv4\/devinet.c:1177\n inet_ioctl+0x3aa\/0x3f0 net\/ipv4\/af_inet.c:1003\n sock_do_ioctl+0x116\/0x280 net\/socket.c:1222\n sock_ioctl+0x22e\/0x6c0 net\/socket.c:1341\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:907 [inline]\n __se_sys_ioctl fs\/ioctl.c:893 [inline]\n __x64_sys_ioctl+0x193\/0x220 fs\/ioctl.c:893\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7fc04ef73d49\n...\n\nThis change has not been tested on real hardware."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c706829ceb6e347bd4ddfd17f1d3048acd69da2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b7f2961798793275b4844348619b622f983907","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c843515ad2be7349dd6b60e5fd299d0da0b8458b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e10b392a7495a5dbbb25247e2c17d380d9899263","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f395b7efcee8df54309eb2d4a624ef13f5d88b66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21709","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.560","lastModified":"2025-02-27T02:15:14.560","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkernel: be more careful about dup_mmap() failures and uprobe registering\n\nIf a memory allocation fails during dup_mmap(), the maple tree can be left\nin an unsafe state for other iterators besides the exit path.  All the\nlocks are dropped before the exit_mmap() call (in mm\/mmap.c), but the\nincomplete mm_struct can be reached through (at least) the rmap finding\nthe vmas which have a pointer back to the mm_struct.\n\nUp to this point, there have been no issues with being able to find an\nmm_struct that was only partially initialised.  Syzbot was able to make\nthe incomplete mm_struct fail with recent forking changes, so it has been\nproven unsafe to use the mm_struct that hasn't been initialised, as\nreferenced in the link below.\n\nAlthough 8ac662f5da19f (\"fork: avoid inappropriate uprobe access to\ninvalid mm\") fixed the uprobe access, it does not completely remove the\nrace.\n\nThis patch sets the MMF_OOM_SKIP to avoid the iteration of the vmas on the\noom side (even though this is extremely unlikely to be selected as an oom\nvictim in the race window), and sets MMF_UNSTABLE to avoid other potential\nusers from using a partially initialised mm_struct.\n\nWhen registering vmas for uprobe, skip the vmas in an mm that is marked\nunstable.  Modifying a vma in an unstable mm may cause issues if the mm\nisn't fully initialised."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64c37e134b120fb462fb4a80694bfb8e7be77b14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da139948aeda677ac09cc0e7d837f8a314de7d55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21710","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.657","lastModified":"2025-02-27T02:15:14.657","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: correct handling of extreme memory squeeze\n\nTesting with iperf3 using the \"pasta\" protocol splicer has revealed\na problem in the way tcp handles window advertising in extreme memory\nsqueeze situations.\n\nUnder memory pressure, a socket endpoint may temporarily advertise\na zero-sized window, but this is not stored as part of the socket data.\nThe reasoning behind this is that it is considered a temporary setting\nwhich shouldn't influence any further calculations.\n\nHowever, if we happen to stall at an unfortunate value of the current\nwindow size, the algorithm selecting a new value will consistently fail\nto advertise a non-zero window once we have freed up enough memory.\nThis means that this side's notion of the current window size is\ndifferent from the one last advertised to the peer, causing the latter\nto not send any data to resolve the sitution.\n\nThe problem occurs on the iperf3 server side, and the socket in question\nis a completely regular socket with the default settings for the\nfedora40 kernel. We do not use SO_PEEK or SO_RCVBUF on the socket.\n\nThe following excerpt of a logging session, with own comments added,\nshows more in detail what is happening:\n\n\/\/              tcp_v4_rcv(->)\n\/\/                tcp_rcv_established(->)\n[5201<->39222]:     ==== Activating log @ net\/ipv4\/tcp_input.c\/tcp_data_queue()\/5257 ====\n[5201<->39222]:     tcp_data_queue(->)\n[5201<->39222]:        DROPPING skb [265600160..265665640], reason: SKB_DROP_REASON_PROTO_MEM\n                       [rcv_nxt 265600160, rcv_wnd 262144, snt_ack 265469200, win_now 131184]\n                       [copied_seq 259909392->260034360 (124968), unread 5565800, qlen 85, ofoq 0]\n                       [OFO queue: gap: 65480, len: 0]\n[5201<->39222]:     tcp_data_queue(<-)\n[5201<->39222]:     __tcp_transmit_skb(->)\n                        [tp->rcv_wup: 265469200, tp->rcv_wnd: 262144, tp->rcv_nxt 265600160]\n[5201<->39222]:       tcp_select_window(->)\n[5201<->39222]:         (inet_csk(sk)->icsk_ack.pending & ICSK_ACK_NOMEM) ? --> TRUE\n                        [tp->rcv_wup: 265469200, tp->rcv_wnd: 262144, tp->rcv_nxt 265600160]\n                        returning 0\n[5201<->39222]:       tcp_select_window(<-)\n[5201<->39222]:       ADVERTISING WIN 0, ACK_SEQ: 265600160\n[5201<->39222]:     [__tcp_transmit_skb(<-)\n[5201<->39222]:   tcp_rcv_established(<-)\n[5201<->39222]: tcp_v4_rcv(<-)\n\n\/\/ Receive queue is at 85 buffers and we are out of memory.\n\/\/ We drop the incoming buffer, although it is in sequence, and decide\n\/\/ to send an advertisement with a window of zero.\n\/\/ We don't update tp->rcv_wnd and tp->rcv_wup accordingly, which means\n\/\/ we unconditionally shrink the window.\n\n[5201<->39222]: tcp_recvmsg_locked(->)\n[5201<->39222]:   __tcp_cleanup_rbuf(->) tp->rcv_wup: 265469200, tp->rcv_wnd: 262144, tp->rcv_nxt 265600160\n[5201<->39222]:     [new_win = 0, win_now = 131184, 2 * win_now = 262368]\n[5201<->39222]:     [new_win >= (2 * win_now) ? --> time_to_ack = 0]\n[5201<->39222]:     NOT calling tcp_send_ack()\n                    [tp->rcv_wup: 265469200, tp->rcv_wnd: 262144, tp->rcv_nxt 265600160]\n[5201<->39222]:   __tcp_cleanup_rbuf(<-)\n                  [rcv_nxt 265600160, rcv_wnd 262144, snt_ack 265469200, win_now 131184]\n                  [copied_seq 260040464->260040464 (0), unread 5559696, qlen 85, ofoq 0]\n                  returning 6104 bytes\n[5201<->39222]: tcp_recvmsg_locked(<-)\n\n\/\/ After each read, the algorithm for calculating the new receive\n\/\/ window in __tcp_cleanup_rbuf() finds it is too small to advertise\n\/\/ or to update tp->rcv_wnd.\n\/\/ Meanwhile, the peer thinks the window is zero, and will not send\n\/\/ any more data to trigger an update from the interrupt mode side.\n\n[5201<->39222]: tcp_recvmsg_locked(->)\n[5201<->39222]:   __tcp_cleanup_rbuf(->) tp->rcv_wup: 265469200, tp->rcv_wnd: 262144, tp->rcv_nxt 265600160\n[5201<->39222]:     [new_win = 262144, win_now = 131184, 2 * win_n\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1dd823a46e25ffde1492c391934f69a9e5eb574f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c670bdfa58e48abad1d5b6ca1ee843ca91f7303","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b01e7ceb35dcb7ffad413da657b78c3340a09039","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4055e2fe96f4ef101d8af0feb056d78d77514ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21711","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.760","lastModified":"2025-02-27T02:15:14.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/rose: prevent integer overflows in rose_setsockopt()\n\nIn case of possible unpredictably large arguments passed to\nrose_setsockopt() and multiplied by extra values on top of that,\ninteger overflows may occur.\n\nDo the safest minimum and fix these issues by checking the\ncontents of 'opt' and returning -EINVAL if they are too large. Also,\nswitch to unsigned int and remove useless check for negative 'opt'\nin ROSE_IDLE case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/352daa50946c3bbb662432e8daf54d6760796589","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bdee49ad6bbd26ab5e13cc6731e54fb1b6c1dca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d08f4074f9c69f7e95502587eb1b258a965ba7f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d640627663bfe7d8963c7615316d7d4ef60f3b0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5338930a29d0ab2a5af402f5f664aeba0d1a676","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21712","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.863","lastModified":"2025-02-27T02:15:14.863","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmd\/md-bitmap: Synchronize bitmap_get_stats() with bitmap lifetime\n\nAfter commit ec6bb299c7c3 (\"md\/md-bitmap: add 'sync_size' into struct\nmd_bitmap_stats\"), following panic is reported:\n\nOops: general protection fault, probably for non-canonical address\nRIP: 0010:bitmap_get_stats+0x2b\/0xa0\nCall Trace:\n <TASK>\n md_seq_show+0x2d2\/0x5b0\n seq_read_iter+0x2b9\/0x470\n seq_read+0x12f\/0x180\n proc_reg_read+0x57\/0xb0\n vfs_read+0xf6\/0x380\n ksys_read+0x6c\/0xf0\n do_syscall_64+0x82\/0x170\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nRoot cause is that bitmap_get_stats() can be called at anytime if mddev\nis still there, even if bitmap is destroyed, or not fully initialized.\nDeferenceing bitmap in this case can crash the kernel. Meanwhile, the\nabove commit start to deferencing bitmap->storage, make the problem\neasier to trigger.\n\nFix the problem by protecting bitmap_get_stats() with bitmap_info.mutex."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/237e19519c8ff6949f0ef57c4a0243f5b2b0fa18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e9316eee3885bfb311b4759513f2ccf37891c09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d28d0ddb986f56920ac97ae704cc3340a699a30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21713","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:14.960","lastModified":"2025-02-27T02:15:14.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/pseries\/iommu: Don't unset window if it was never set\n\nOn pSeries, when user attempts to use the same vfio container used by\ndifferent iommu group, the spapr_tce_set_window() returns -EPERM\nand the subsequent cleanup leads to the below crash.\n\n   Kernel attempted to read user page (308) - exploit attempt?\n   BUG: Kernel NULL pointer dereference on read at 0x00000308\n   Faulting instruction address: 0xc0000000001ce358\n   Oops: Kernel access of bad area, sig: 11 [#1]\n   NIP:  c0000000001ce358 LR: c0000000001ce05c CTR: c00000000005add0\n   <snip>\n   NIP [c0000000001ce358] spapr_tce_unset_window+0x3b8\/0x510\n   LR [c0000000001ce05c] spapr_tce_unset_window+0xbc\/0x510\n   Call Trace:\n     spapr_tce_unset_window+0xbc\/0x510 (unreliable)\n     tce_iommu_attach_group+0x24c\/0x340 [vfio_iommu_spapr_tce]\n     vfio_container_attach_group+0xec\/0x240 [vfio]\n     vfio_group_fops_unl_ioctl+0x548\/0xb00 [vfio]\n     sys_ioctl+0x754\/0x1580\n     system_call_exception+0x13c\/0x330\n     system_call_vectored_common+0x15c\/0x2ec\n   <snip>\n   --- interrupt: 3000\n\nFix this by having null check for the tbl passed to the\nspapr_tce_unset_window()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17391cb2613b82f8c405570fea605af3255ff8d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac12372a13dab3f7a2762db240bd180de8ef1e5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b853ff0b514c1df314246fcf94744005914b48cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21714","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.050","lastModified":"2025-02-27T02:15:15.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/mlx5: Fix implicit ODP use after free\n\nPrevent double queueing of implicit ODP mr destroy work by using\n__xa_cmpxchg() to make sure this is the only time we are destroying this\nspecific mr.\n\nWithout this change, we could try to invalidate this mr twice, which in\nturn could result in queuing a MR work destroy twice, and eventually the\nsecond work could execute after the MR was freed due to the first work,\ncausing a user after free and trace below.\n\n   refcount_t: underflow; use-after-free.\n   WARNING: CPU: 2 PID: 12178 at lib\/refcount.c:28 refcount_warn_saturate+0x12b\/0x130\n   Modules linked in: bonding ib_ipoib vfio_pci ip_gre geneve nf_tables ip6_gre gre ip6_tunnel tunnel6 ipip tunnel4 ib_umad rdma_ucm mlx5_vfio_pci vfio_pci_core vfio_iommu_type1 mlx5_ib vfio ib_uverbs mlx5_core iptable_raw openvswitch nsh rpcrdma ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_cm ib_core xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry overlay zram zsmalloc fuse [last unloaded: ib_uverbs]\n   CPU: 2 PID: 12178 Comm: kworker\/u20:5 Not tainted 6.5.0-rc1_net_next_mlx5_58c644e #1\n   Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n   Workqueue: events_unbound free_implicit_child_mr_work [mlx5_ib]\n   RIP: 0010:refcount_warn_saturate+0x12b\/0x130\n   Code: 48 c7 c7 38 95 2a 82 c6 05 bc c6 fe 00 01 e8 0c 66 aa ff 0f 0b 5b c3 48 c7 c7 e0 94 2a 82 c6 05 a7 c6 fe 00 01 e8 f5 65 aa ff <0f> 0b 5b c3 90 8b 07 3d 00 00 00 c0 74 12 83 f8 01 74 13 8d 50 ff\n   RSP: 0018:ffff8881008e3e40 EFLAGS: 00010286\n   RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000027\n   RDX: ffff88852c91b5c8 RSI: 0000000000000001 RDI: ffff88852c91b5c0\n   RBP: ffff8881dacd4e00 R08: 00000000ffffffff R09: 0000000000000019\n   R10: 000000000000072e R11: 0000000063666572 R12: ffff88812bfd9e00\n   R13: ffff8881c792d200 R14: ffff88810011c005 R15: ffff8881002099c0\n   FS:  0000000000000000(0000) GS:ffff88852c900000(0000) knlGS:0000000000000000\n   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n   CR2: 00007f5694b5e000 CR3: 00000001153f6003 CR4: 0000000000370ea0\n   DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n   DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n   Call Trace:\n    <TASK>\n    ? refcount_warn_saturate+0x12b\/0x130\n    free_implicit_child_mr_work+0x180\/0x1b0 [mlx5_ib]\n    process_one_work+0x1cc\/0x3c0\n    worker_thread+0x218\/0x3c0\n    kthread+0xc6\/0xf0\n    ret_from_fork+0x1f\/0x30\n    <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7cc8f681f6d4ae4478ae0f60485fc768f2b450da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3d930411ce390e532470194296658a960887773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edfb65dbb9ffd3102f3ff4dd21316158e56f1976","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21715","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.167","lastModified":"2025-02-27T02:15:15.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: davicom: fix UAF in dm9000_drv_remove\n\ndm is netdev private data and it cannot be\nused after free_netdev() call. Using dm after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() at the end of the\nfunction.\n\nThis is similar to the issue fixed in commit\nad297cd2db89 (\"net: qcom\/emac: fix UAF in emac_remove\").\n\nThis bug is detected by our static analysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19e65c45a1507a1a2926649d2db3583ed9d55fd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2013c95df6752d9c88221d0f0f37b6f197969390","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a54367a7c2378c65aaa4d3cfd952f26adef7aa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c411f9a5fdc9158e8f7c57eac961d3df3eb4d8ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c94ab07edc2843e2f3d46dbd82e5c681503aaadf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21716","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.273","lastModified":"2025-02-27T02:15:15.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvxlan: Fix uninit-value in vxlan_vnifilter_dump()\n\nKMSAN reported an uninit-value access in vxlan_vnifilter_dump() [1].\n\nIf the length of the netlink message payload is less than\nsizeof(struct tunnel_msg), vxlan_vnifilter_dump() accesses bytes\nbeyond the message. This can lead to uninit-value access. Fix this by\nreturning an error in such situations.\n\n[1]\nBUG: KMSAN: uninit-value in vxlan_vnifilter_dump+0x328\/0x920 drivers\/net\/vxlan\/vxlan_vnifilter.c:422\n vxlan_vnifilter_dump+0x328\/0x920 drivers\/net\/vxlan\/vxlan_vnifilter.c:422\n rtnl_dumpit+0xd5\/0x2f0 net\/core\/rtnetlink.c:6786\n netlink_dump+0x93e\/0x15f0 net\/netlink\/af_netlink.c:2317\n __netlink_dump_start+0x716\/0xd60 net\/netlink\/af_netlink.c:2432\n netlink_dump_start include\/linux\/netlink.h:340 [inline]\n rtnetlink_dump_start net\/core\/rtnetlink.c:6815 [inline]\n rtnetlink_rcv_msg+0x1256\/0x14a0 net\/core\/rtnetlink.c:6882\n netlink_rcv_skb+0x467\/0x660 net\/netlink\/af_netlink.c:2542\n rtnetlink_rcv+0x35\/0x40 net\/core\/rtnetlink.c:6944\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1321 [inline]\n netlink_unicast+0xed6\/0x1290 net\/netlink\/af_netlink.c:1347\n netlink_sendmsg+0x1092\/0x1230 net\/netlink\/af_netlink.c:1891\n sock_sendmsg_nosec net\/socket.c:711 [inline]\n __sock_sendmsg+0x330\/0x3d0 net\/socket.c:726\n ____sys_sendmsg+0x7f4\/0xb50 net\/socket.c:2583\n ___sys_sendmsg+0x271\/0x3b0 net\/socket.c:2637\n __sys_sendmsg net\/socket.c:2669 [inline]\n __do_sys_sendmsg net\/socket.c:2674 [inline]\n __se_sys_sendmsg net\/socket.c:2672 [inline]\n __x64_sys_sendmsg+0x211\/0x3e0 net\/socket.c:2672\n x64_sys_call+0x3878\/0x3d90 arch\/x86\/include\/generated\/asm\/syscalls_64.h:47\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xd9\/0x1d0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nUninit was created at:\n slab_post_alloc_hook mm\/slub.c:4110 [inline]\n slab_alloc_node mm\/slub.c:4153 [inline]\n kmem_cache_alloc_node_noprof+0x800\/0xe80 mm\/slub.c:4205\n kmalloc_reserve+0x13b\/0x4b0 net\/core\/skbuff.c:587\n __alloc_skb+0x347\/0x7d0 net\/core\/skbuff.c:678\n alloc_skb include\/linux\/skbuff.h:1323 [inline]\n netlink_alloc_large_skb+0xa5\/0x280 net\/netlink\/af_netlink.c:1196\n netlink_sendmsg+0xac9\/0x1230 net\/netlink\/af_netlink.c:1866\n sock_sendmsg_nosec net\/socket.c:711 [inline]\n __sock_sendmsg+0x330\/0x3d0 net\/socket.c:726\n ____sys_sendmsg+0x7f4\/0xb50 net\/socket.c:2583\n ___sys_sendmsg+0x271\/0x3b0 net\/socket.c:2637\n __sys_sendmsg net\/socket.c:2669 [inline]\n __do_sys_sendmsg net\/socket.c:2674 [inline]\n __se_sys_sendmsg net\/socket.c:2672 [inline]\n __x64_sys_sendmsg+0x211\/0x3e0 net\/socket.c:2672\n x64_sys_call+0x3878\/0x3d90 arch\/x86\/include\/generated\/asm\/syscalls_64.h:47\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xd9\/0x1d0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nCPU: 0 UID: 0 PID: 30991 Comm: syz.4.10630 Not tainted 6.12.0-10694-gc44daa7e3c73 #29\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04\/01\/2014"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1693d1fade71646a0731b6b213298cb443d186ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5066293b9b7046a906eff60e3949a887ae185a43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a84d511165d6ba7f331b90ae6b6ce180ec534daa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb1de9309a48cc5b771115781eec05075fd67039","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f554bce488605d2f70e06eeab5e4d2448c813713","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21717","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.373","lastModified":"2025-02-27T02:15:15.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: add missing cpu_to_node to kvzalloc_node in mlx5e_open_xdpredirect_sq\n\nkvzalloc_node is not doing a runtime check on the node argument\n(__alloc_pages_node_noprof does have a VM_BUG_ON, but it expands to\nnothing on !CONFIG_DEBUG_VM builds), so doing any ethtool\/netlink\noperation that calls mlx5e_open on a CPU that's larger that MAX_NUMNODES\ntriggers OOB access and panic (see the trace below).\n\nAdd missing cpu_to_node call to convert cpu id to node id.\n\n[  165.427394] mlx5_core 0000:5c:00.0 beth1: Link up\n[  166.479327] BUG: unable to handle page fault for address: 0000000800000010\n[  166.494592] #PF: supervisor read access in kernel mode\n[  166.505995] #PF: error_code(0x0000) - not-present page\n...\n[  166.816958] Call Trace:\n[  166.822380]  <TASK>\n[  166.827034]  ? __die_body+0x64\/0xb0\n[  166.834774]  ? page_fault_oops+0x2cd\/0x3f0\n[  166.843862]  ? exc_page_fault+0x63\/0x130\n[  166.852564]  ? asm_exc_page_fault+0x22\/0x30\n[  166.861843]  ? __kvmalloc_node_noprof+0x43\/0xd0\n[  166.871897]  ? get_partial_node+0x1c\/0x320\n[  166.880983]  ? deactivate_slab+0x269\/0x2b0\n[  166.890069]  ___slab_alloc+0x521\/0xa90\n[  166.898389]  ? __kvmalloc_node_noprof+0x43\/0xd0\n[  166.908442]  __kmalloc_node_noprof+0x216\/0x3f0\n[  166.918302]  ? __kvmalloc_node_noprof+0x43\/0xd0\n[  166.928354]  __kvmalloc_node_noprof+0x43\/0xd0\n[  166.938021]  mlx5e_open_channels+0x5e2\/0xc00\n[  166.947496]  mlx5e_open_locked+0x3e\/0xf0\n[  166.956201]  mlx5e_open+0x23\/0x50\n[  166.963551]  __dev_open+0x114\/0x1c0\n[  166.971292]  __dev_change_flags+0xa2\/0x1b0\n[  166.980378]  dev_change_flags+0x21\/0x60\n[  166.988887]  do_setlink+0x38d\/0xf20\n[  166.996628]  ? ep_poll_callback+0x1b9\/0x240\n[  167.005910]  ? __nla_validate_parse.llvm.10713395753544950386+0x80\/0xd70\n[  167.020782]  ? __wake_up_sync_key+0x52\/0x80\n[  167.030066]  ? __mutex_lock+0xff\/0x550\n[  167.038382]  ? security_capable+0x50\/0x90\n[  167.047279]  rtnl_setlink+0x1c9\/0x210\n[  167.055403]  ? ep_poll_callback+0x1b9\/0x240\n[  167.064684]  ? security_capable+0x50\/0x90\n[  167.073579]  rtnetlink_rcv_msg+0x2f9\/0x310\n[  167.082667]  ? rtnetlink_bind+0x30\/0x30\n[  167.091173]  netlink_rcv_skb+0xb1\/0xe0\n[  167.099492]  netlink_unicast+0x20f\/0x2e0\n[  167.108191]  netlink_sendmsg+0x389\/0x420\n[  167.116896]  __sys_sendto+0x158\/0x1c0\n[  167.125024]  __x64_sys_sendto+0x22\/0x30\n[  167.133534]  do_syscall_64+0x63\/0x130\n[  167.141657]  ? __irq_exit_rcu.llvm.17843942359718260576+0x52\/0xd0\n[  167.155181]  entry_SYSCALL_64_after_hwframe+0x4b\/0x53"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/979284535aaf12a287a2f43d9d5dfcbdc1dc4cac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a275db45b4161d01716559dd7557db9ea0450952","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21718","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.473","lastModified":"2025-02-27T02:15:15.473","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rose: fix timer races against user threads\n\nRose timers only acquire the socket spinlock, without\nchecking if the socket is owned by one user thread.\n\nAdd a check and rearm the timers if needed.\n\nBUG: KASAN: slab-use-after-free in rose_timer_expiry+0x31d\/0x360 net\/rose\/rose_timer.c:174\nRead of size 2 at addr ffff88802f09b82a by task swapper\/0\/0\n\nCPU: 0 UID: 0 PID: 0 Comm: swapper\/0 Not tainted 6.13.0-rc5-syzkaller-00172-gd1bf27c4e176 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\nCall Trace:\n <IRQ>\n  __dump_stack lib\/dump_stack.c:94 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n  print_address_description mm\/kasan\/report.c:378 [inline]\n  print_report+0x169\/0x550 mm\/kasan\/report.c:489\n  kasan_report+0x143\/0x180 mm\/kasan\/report.c:602\n  rose_timer_expiry+0x31d\/0x360 net\/rose\/rose_timer.c:174\n  call_timer_fn+0x187\/0x650 kernel\/time\/timer.c:1793\n  expire_timers kernel\/time\/timer.c:1844 [inline]\n  __run_timers kernel\/time\/timer.c:2418 [inline]\n  __run_timer_base+0x66a\/0x8e0 kernel\/time\/timer.c:2430\n  run_timer_base kernel\/time\/timer.c:2439 [inline]\n  run_timer_softirq+0xb7\/0x170 kernel\/time\/timer.c:2449\n  handle_softirqs+0x2d4\/0x9b0 kernel\/softirq.c:561\n  __do_softirq kernel\/softirq.c:595 [inline]\n  invoke_softirq kernel\/softirq.c:435 [inline]\n  __irq_exit_rcu+0xf7\/0x220 kernel\/softirq.c:662\n  irq_exit_rcu+0x9\/0x30 kernel\/softirq.c:678\n  instr_sysvec_apic_timer_interrupt arch\/x86\/kernel\/apic\/apic.c:1049 [inline]\n  sysvec_apic_timer_interrupt+0xa6\/0xc0 arch\/x86\/kernel\/apic\/apic.c:1049\n <\/IRQ>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1992fb261c90e9827cf5dc3115d89bb0853252c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51c128ba038cf1b79d605cbee325919b45ab95a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58051a284ac18a3bb815aac6289a679903ddcc3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5de7665e0a0746b5ad7943554b34db8f8614a196","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f55c88e3ca5939a6a8a329024aed8f3d98eea8e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21719","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.580","lastModified":"2025-02-27T02:15:15.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipmr: do not call mr_mfc_uses_dev() for unres entries\n\nsyzbot found that calling mr_mfc_uses_dev() for unres entries\nwould crash [1], because c->mfc_un.res.minvif \/ c->mfc_un.res.maxvif\nalias to \"struct sk_buff_head unresolved\", which contain two pointers.\n\nThis code never worked, lets remove it.\n\n[1]\nUnable to handle kernel paging request at virtual address ffff5fff2d536613\nKASAN: maybe wild-memory-access in range [0xfffefff96a9b3098-0xfffefff96a9b309f]\nModules linked in:\nCPU: 1 UID: 0 PID: 7321 Comm: syz.0.16 Not tainted 6.13.0-rc7-syzkaller-g1950a0af2d55 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\npstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n pc : mr_mfc_uses_dev net\/ipv4\/ipmr_base.c:290 [inline]\n pc : mr_table_dump+0x5a4\/0x8b0 net\/ipv4\/ipmr_base.c:334\n lr : mr_mfc_uses_dev net\/ipv4\/ipmr_base.c:289 [inline]\n lr : mr_table_dump+0x694\/0x8b0 net\/ipv4\/ipmr_base.c:334\nCall trace:\n  mr_mfc_uses_dev net\/ipv4\/ipmr_base.c:290 [inline] (P)\n  mr_table_dump+0x5a4\/0x8b0 net\/ipv4\/ipmr_base.c:334 (P)\n  mr_rtm_dumproute+0x254\/0x454 net\/ipv4\/ipmr_base.c:382\n  ipmr_rtm_dumproute+0x248\/0x4b4 net\/ipv4\/ipmr.c:2648\n  rtnl_dump_all+0x2e4\/0x4e8 net\/core\/rtnetlink.c:4327\n  rtnl_dumpit+0x98\/0x1d0 net\/core\/rtnetlink.c:6791\n  netlink_dump+0x4f0\/0xbc0 net\/netlink\/af_netlink.c:2317\n  netlink_recvmsg+0x56c\/0xe64 net\/netlink\/af_netlink.c:1973\n  sock_recvmsg_nosec net\/socket.c:1033 [inline]\n  sock_recvmsg net\/socket.c:1055 [inline]\n  sock_read_iter+0x2d8\/0x40c net\/socket.c:1125\n  new_sync_read fs\/read_write.c:484 [inline]\n  vfs_read+0x740\/0x970 fs\/read_write.c:565\n  ksys_read+0x15c\/0x26c fs\/read_write.c:708"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15a901361ec3fb1c393f91880e1cbf24ec0a88bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26bb7d991f04eeef47dfad23e533834995c26f7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57177c5f47a8da852f8d76cf6945cf803f8bb9e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a099834a51ccf9bbba3de86a251b3433539abfde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b379b3162ff55a70464c6a934ae9bf0497478a62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21720","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.683","lastModified":"2025-02-27T02:15:15.683","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: delete intermediate secpath entry in packet offload mode\n\nPackets handled by hardware have added secpath as a way to inform XFRM\ncore code that this path was already handled. That secpath is not needed\nat all after policy is checked and it is removed later in the stack.\n\nHowever, in the case of IP forwarding is enabled (\/proc\/sys\/net\/ipv4\/ip_forward),\nthat secpath is not removed and packets which already were handled are reentered\nto the driver TX path with xfrm_offload set.\n\nThe following kernel panic is observed in mlx5 in such case:\n\n mlx5_core 0000:04:00.0 enp4s0f0np0: Link up\n mlx5_core 0000:04:00.1 enp4s0f1np1: Link up\n Initializing XFRM netlink socket\n IPsec XFRM device driver\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor instruction fetch in kernel mode\n #PF: error_code(0x0010) - not-present page\n PGD 0 P4D 0\n Oops: Oops: 0010 [#1] PREEMPT SMP\n CPU: 0 UID: 0 PID: 0 Comm: swapper\/0 Not tainted 6.13.0-rc1-alex #3\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04\/01\/2014\n RIP: 0010:0x0\n Code: Unable to access opcode bytes at 0xffffffffffffffd6.\n RSP: 0018:ffffb87380003800 EFLAGS: 00010206\n RAX: ffff8df004e02600 RBX: ffffb873800038d8 RCX: 00000000ffff98cf\n RDX: ffff8df00733e108 RSI: ffff8df00521fb80 RDI: ffff8df001661f00\n RBP: ffffb87380003850 R08: ffff8df013980000 R09: 0000000000000010\n R10: 0000000000000002 R11: 0000000000000002 R12: ffff8df001661f00\n R13: ffff8df00521fb80 R14: ffff8df00733e108 R15: ffff8df011faf04e\n FS:  0000000000000000(0000) GS:ffff8df46b800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffffffffffffd6 CR3: 0000000106384000 CR4: 0000000000350ef0\n Call Trace:\n  <IRQ>\n  ? show_regs+0x63\/0x70\n  ? __die_body+0x20\/0x60\n  ? __die+0x2b\/0x40\n  ? page_fault_oops+0x15c\/0x550\n  ? do_user_addr_fault+0x3ed\/0x870\n  ? exc_page_fault+0x7f\/0x190\n  ? asm_exc_page_fault+0x27\/0x30\n  mlx5e_ipsec_handle_tx_skb+0xe7\/0x2f0 [mlx5_core]\n  mlx5e_xmit+0x58e\/0x1980 [mlx5_core]\n  ? __fib_lookup+0x6a\/0xb0\n  dev_hard_start_xmit+0x82\/0x1d0\n  sch_direct_xmit+0xfe\/0x390\n  __dev_queue_xmit+0x6d8\/0xee0\n  ? __fib_lookup+0x6a\/0xb0\n  ? internal_add_timer+0x48\/0x70\n  ? mod_timer+0xe2\/0x2b0\n  neigh_resolve_output+0x115\/0x1b0\n  __neigh_update+0x26a\/0xc50\n  neigh_update+0x14\/0x20\n  arp_process+0x2cb\/0x8e0\n  ? __napi_build_skb+0x5e\/0x70\n  arp_rcv+0x11e\/0x1c0\n  ? dev_gro_receive+0x574\/0x820\n  __netif_receive_skb_list_core+0x1cf\/0x1f0\n  netif_receive_skb_list_internal+0x183\/0x2a0\n  napi_complete_done+0x76\/0x1c0\n  mlx5e_napi_poll+0x234\/0x7a0 [mlx5_core]\n  __napi_poll+0x2d\/0x1f0\n  net_rx_action+0x1a6\/0x370\n  ? atomic_notifier_call_chain+0x3b\/0x50\n  ? irq_int_handler+0x15\/0x20 [mlx5_core]\n  handle_softirqs+0xb9\/0x2f0\n  ? handle_irq_event+0x44\/0x60\n  irq_exit_rcu+0xdb\/0x100\n  common_interrupt+0x98\/0xc0\n  <\/IRQ>\n  <TASK>\n  asm_common_interrupt+0x27\/0x40\n RIP: 0010:pv_native_safe_halt+0xb\/0x10\n Code: 09 c3 66 66 2e 0f 1f 84 00 00 00 00 00 66 90 0f 22\n 0f 1f 84 00 00 00 00 00 90 eb 07 0f 00 2d 7f e9 36 00 fb\n40 00 83 ff 07 77 21 89 ff ff 24 fd 88 3d a1 bd 0f 21 f8\n RSP: 0018:ffffffffbe603de8 EFLAGS: 00000202\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000f92f46680\n RDX: 0000000000000037 RSI: 00000000ffffffff RDI: 00000000000518d4\n RBP: ffffffffbe603df0 R08: 000000cd42e4dffb R09: ffffffffbe603d70\n R10: 0000004d80d62680 R11: 0000000000000001 R12: ffffffffbe60bf40\n R13: 0000000000000000 R14: 0000000000000000 R15: ffffffffbe60aff8\n  ? default_idle+0x9\/0x20\n  arch_cpu_idle+0x9\/0x10\n  default_idle_call+0x29\/0xf0\n  do_idle+0x1f2\/0x240\n  cpu_startup_entry+0x2c\/0x30\n  rest_init+0xe7\/0x100\n  start_kernel+0x76b\/0xb90\n  x86_64_start_reservations+0x18\/0x30\n  x86_64_start_kernel+0xc0\/0x110\n  ? setup_ghcb+0xe\/0x130\n  common_startup_64+0x13e\/0x141\n  <\/TASK>\n Modules linked in: esp4_offload esp4 xfrm_interface\nxfrm6_tunnel tunnel4 tunnel6 xfrm_user xfrm_algo binf\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/600258d555f0710b9c47fb78d2d80a4aecd608cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6945701ca1572f81bc9bb46f624b02eabb3eaf3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/981ad4c882096e7375b8c2181dd4c3ee58ea5bae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e1b2cac24b2a4d1dd472071021bf00c26450eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21721","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.787","lastModified":"2025-02-27T02:15:15.787","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: handle errors that nilfs_prepare_chunk() may return\n\nPatch series \"nilfs2: fix issues with rename operations\".\n\nThis series fixes BUG_ON check failures reported by syzbot around rename\noperations, and a minor behavioral issue where the mtime of a child\ndirectory changes when it is renamed instead of moved.\n\n\nThis patch (of 2):\n\nThe directory manipulation routines nilfs_set_link() and\nnilfs_delete_entry() rewrite the directory entry in the folio\/page\npreviously read by nilfs_find_entry(), so error handling is omitted on the\nassumption that nilfs_prepare_chunk(), which prepares the buffer for\nrewriting, will always succeed for these.  And if an error is returned, it\ntriggers the legacy BUG_ON() checks in each routine.\n\nThis assumption is wrong, as proven by syzbot: the buffer layer called by\nnilfs_prepare_chunk() may call nilfs_get_block() if necessary, which may\nfail due to metadata corruption or other reasons.  This has been there all\nalong, but improved sanity checks and error handling may have made it more\nreproducible in fuzzing tests.\n\nFix this issue by adding missing error paths in nilfs_set_link(),\nnilfs_delete_entry(), and their caller nilfs_rename()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/481136234dfe96c7f92770829bec6111c7c5f5dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eddd3176b8c4c83a46ab974574cda7c3dfe09388","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee70999a988b8abc3490609142f50ebaa8344432","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21722","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.883","lastModified":"2025-02-27T02:15:15.883","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: do not force clear folio if buffer is referenced\n\nPatch series \"nilfs2: protect busy buffer heads from being force-cleared\".\n\nThis series fixes the buffer head state inconsistency issues reported by\nsyzbot that occurs when the filesystem is corrupted and falls back to\nread-only, and the associated buffer head use-after-free issue.\n\n\nThis patch (of 2):\n\nSyzbot has reported that after nilfs2 detects filesystem corruption and\nfalls back to read-only, inconsistencies in the buffer state may occur.\n\nOne of the inconsistencies is that when nilfs2 calls mark_buffer_dirty()\nto set a data or metadata buffer as dirty, but it detects that the buffer\nis not in the uptodate state:\n\n WARNING: CPU: 0 PID: 6049 at fs\/buffer.c:1177 mark_buffer_dirty+0x2e5\/0x520\n  fs\/buffer.c:1177\n ...\n Call Trace:\n  <TASK>\n  nilfs_palloc_commit_alloc_entry+0x4b\/0x160 fs\/nilfs2\/alloc.c:598\n  nilfs_ifile_create_inode+0x1dd\/0x3a0 fs\/nilfs2\/ifile.c:73\n  nilfs_new_inode+0x254\/0x830 fs\/nilfs2\/inode.c:344\n  nilfs_mkdir+0x10d\/0x340 fs\/nilfs2\/namei.c:218\n  vfs_mkdir+0x2f9\/0x4f0 fs\/namei.c:4257\n  do_mkdirat+0x264\/0x3a0 fs\/namei.c:4280\n  __do_sys_mkdirat fs\/namei.c:4295 [inline]\n  __se_sys_mkdirat fs\/namei.c:4293 [inline]\n  __x64_sys_mkdirat+0x87\/0xa0 fs\/namei.c:4293\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n  entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nThe other is when nilfs_btree_propagate(), which propagates the dirty\nstate to the ancestor nodes of a b-tree that point to a dirty buffer,\ndetects that the origin buffer is not dirty, even though it should be:\n\n WARNING: CPU: 0 PID: 5245 at fs\/nilfs2\/btree.c:2089\n  nilfs_btree_propagate+0xc79\/0xdf0 fs\/nilfs2\/btree.c:2089\n ...\n Call Trace:\n  <TASK>\n  nilfs_bmap_propagate+0x75\/0x120 fs\/nilfs2\/bmap.c:345\n  nilfs_collect_file_data+0x4d\/0xd0 fs\/nilfs2\/segment.c:587\n  nilfs_segctor_apply_buffers+0x184\/0x340 fs\/nilfs2\/segment.c:1006\n  nilfs_segctor_scan_file+0x28c\/0xa50 fs\/nilfs2\/segment.c:1045\n  nilfs_segctor_collect_blocks fs\/nilfs2\/segment.c:1216 [inline]\n  nilfs_segctor_collect fs\/nilfs2\/segment.c:1540 [inline]\n  nilfs_segctor_do_construct+0x1c28\/0x6b90 fs\/nilfs2\/segment.c:2115\n  nilfs_segctor_construct+0x181\/0x6b0 fs\/nilfs2\/segment.c:2479\n  nilfs_segctor_thread_construct fs\/nilfs2\/segment.c:2587 [inline]\n  nilfs_segctor_thread+0x69e\/0xe80 fs\/nilfs2\/segment.c:2701\n  kthread+0x2f0\/0x390 kernel\/kthread.c:389\n  ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n  ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n  <\/TASK>\n\nBoth of these issues are caused by the callbacks that handle the\npage\/folio write requests, forcibly clear various states, including the\nworking state of the buffers they hold, at unexpected times when they\ndetect read-only fallback.\n\nFix these issues by checking if the buffer is referenced before clearing\nthe page\/folio state, and skipping the clear if it is."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1098bb8d52419d262a3358d099a1598a920b730f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19296737024cd220a1d6590bf4c092bca8c99497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/557ccf5e49f1fb848a29698585bcab2e50a597ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca76bb226bf47ff04c782cacbd299f12ddee1ec1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21723","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:15.993","lastModified":"2025-02-27T02:15:15.993","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: mpi3mr: Fix possible crash when setting up bsg fails\n\nIf bsg_setup_queue() fails, the bsg_queue is assigned a non-NULL value.\nConsequently, in mpi3mr_bsg_exit(), the condition \"if(!mrioc->bsg_queue)\"\nwill not be satisfied, preventing execution from entering\nbsg_remove_queue(), which could lead to the following crash:\n\nBUG: kernel NULL pointer dereference, address: 000000000000041c\nCall Trace:\n  <TASK>\n  mpi3mr_bsg_exit+0x1f\/0x50 [mpi3mr]\n  mpi3mr_remove+0x6f\/0x340 [mpi3mr]\n  pci_device_remove+0x3f\/0xb0\n  device_release_driver_internal+0x19d\/0x220\n  unbind_store+0xa4\/0xb0\n  kernfs_fop_write_iter+0x11f\/0x200\n  vfs_write+0x1fc\/0x3e0\n  ksys_write+0x67\/0xe0\n  do_syscall_64+0x38\/0x80\n  entry_SYSCALL_64_after_hwframe+0x78\/0xe2"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19b248069d1b1424982723a2bf3941ad864d5204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/295006f6e8c17212d3098811166e29627d19e05c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/832b8f95a2832321b8200ae478ed988b25faaef4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21724","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.113","lastModified":"2025-02-27T02:15:16.113","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommufd\/iova_bitmap: Fix shift-out-of-bounds in iova_bitmap_offset_to_index()\n\nResolve a UBSAN shift-out-of-bounds issue in iova_bitmap_offset_to_index()\nwhere shifting the constant \"1\" (of type int) by bitmap->mapped.pgshift\n(an unsigned long value) could result in undefined behavior.\n\nThe constant \"1\" defaults to a 32-bit \"int\", and when \"pgshift\" exceeds\n31 (e.g., pgshift = 63) the shift operation overflows, as the result\ncannot be represented in a 32-bit type.\n\nTo resolve this, the constant is updated to \"1UL\", promoting it to an\nunsigned long type to match the operand's type."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38ac76fc06bc6826a3e4b12a98efbe98432380a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44d9c94b7a3f29a3e07c4753603a35e9b28842a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1f8453b8ff1ab79a03820ef608256c499769cb6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5d33f01b86af44b23eea61ee309e4ef22c0cdfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e24c1551059268b37f6f40639883eafb281b8b9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21725","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.220","lastModified":"2025-02-27T02:15:16.220","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix oops due to unset link speed\n\nIt isn't guaranteed that NETWORK_INTERFACE_INFO::LinkSpeed will always\nbe set by the server, so the client must handle any values and then\nprevent oopses like below from happening:\n\nOops: divide error: 0000 [#1] PREEMPT SMP KASAN NOPTI\nCPU: 0 UID: 0 PID: 1323 Comm: cat Not tainted 6.13.0-rc7 #2\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-3.fc41\n04\/01\/2014\nRIP: 0010:cifs_debug_data_proc_show+0xa45\/0x1460 [cifs] Code: 00 00 48\n89 df e8 3b cd 1b c1 41 f6 44 24 2c 04 0f 84 50 01 00 00 48 89 ef e8\ne7 d0 1b c1 49 8b 44 24 18 31 d2 49 8d 7c 24 28 <48> f7 74 24 18 48 89\nc3 e8 6e cf 1b c1 41 8b 6c 24 28 49 8d 7c 24\nRSP: 0018:ffffc90001817be0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88811230022c RCX: ffffffffc041bd99\nRDX: 0000000000000000 RSI: 0000000000000567 RDI: ffff888112300228\nRBP: ffff888112300218 R08: fffff52000302f5f R09: ffffed1022fa58ac\nR10: ffff888117d2c566 R11: 00000000fffffffe R12: ffff888112300200\nR13: 000000012a15343f R14: 0000000000000001 R15: ffff888113f2db58\nFS: 00007fe27119e740(0000) GS:ffff888148600000(0000)\nknlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fe2633c5000 CR3: 0000000124da0000 CR4: 0000000000750ef0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body.cold+0x19\/0x27\n ? die+0x2e\/0x50\n ? do_trap+0x159\/0x1b0\n ? cifs_debug_data_proc_show+0xa45\/0x1460 [cifs]\n ? do_error_trap+0x90\/0x130\n ? cifs_debug_data_proc_show+0xa45\/0x1460 [cifs]\n ? exc_divide_error+0x39\/0x50\n ? cifs_debug_data_proc_show+0xa45\/0x1460 [cifs]\n ? asm_exc_divide_error+0x1a\/0x20\n ? cifs_debug_data_proc_show+0xa39\/0x1460 [cifs]\n ? cifs_debug_data_proc_show+0xa45\/0x1460 [cifs]\n ? seq_read_iter+0x42e\/0x790\n seq_read_iter+0x19a\/0x790\n proc_reg_read_iter+0xbe\/0x110\n ? __pfx_proc_reg_read_iter+0x10\/0x10\n vfs_read+0x469\/0x570\n ? do_user_addr_fault+0x398\/0x760\n ? __pfx_vfs_read+0x10\/0x10\n ? find_held_lock+0x8a\/0xa0\n ? __pfx_lock_release+0x10\/0x10\n ksys_read+0xd3\/0x170\n ? __pfx_ksys_read+0x10\/0x10\n ? __rcu_read_unlock+0x50\/0x270\n ? mark_held_locks+0x1a\/0x90\n do_syscall_64+0xbb\/0x1d0\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\nRIP: 0033:0x7fe271288911\nCode: 00 48 8b 15 01 25 10 00 f7 d8 64 89 02 b8 ff ff ff ff eb bd e8\n20 ad 01 00 f3 0f 1e fa 80 3d b5 a7 10 00 00 74 13 31 c0 0f 05 <48> 3d\n00 f0 ff ff 77 4f c3 66 0f 1f 44 00 00 55 48 89 e5 48 83 ec\nRSP: 002b:00007ffe87c079d8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\nRAX: ffffffffffffffda RBX: 0000000000040000 RCX: 00007fe271288911\nRDX: 0000000000040000 RSI: 00007fe2633c6000 RDI: 0000000000000003\nRBP: 00007ffe87c07a00 R08: 0000000000000000 R09: 00007fe2713e6380\nR10: 0000000000000022 R11: 0000000000000246 R12: 0000000000040000\nR13: 00007fe2633c6000 R14: 0000000000000003 R15: 0000000000000000\n <\/TASK>\n\nFix this by setting cifs_server_iface::speed to a sane value (1Gbps)\nby default when link speed is unset."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/208e102a2fca44e40a6c3f7b9e2609cfd17a15aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f901c35e1a1b3ed1b528a17ffdb941aa0294458","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/699179dfc8d7da457b152ca5d18ae45f9ed9beaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad3b49fbdb156aa8ee2026ba590642c9b5a410f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be7a6a77669588bfa5022a470989702bbbb11e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21726","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.323","lastModified":"2025-02-27T02:15:16.323","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npadata: avoid UAF for reorder_work\n\nAlthough the previous patch can avoid ps and ps UAF for _do_serial, it\ncan not avoid potential UAF issue for reorder_work. This issue can\nhappen just as below:\n\ncrypto_request\t\t\tcrypto_request\t\tcrypto_del_alg\npadata_do_serial\n  ...\n  padata_reorder\n    \/\/ processes all remaining\n    \/\/ requests then breaks\n    while (1) {\n      if (!padata)\n        break;\n      ...\n    }\n\n\t\t\t\tpadata_do_serial\n\t\t\t\t  \/\/ new request added\n\t\t\t\t  list_add\n    \/\/ sees the new request\n    queue_work(reorder_work)\n\t\t\t\t  padata_reorder\n\t\t\t\t    queue_work_on(squeue->work)\n...\n\n\t\t\t\t<kworker context>\n\t\t\t\tpadata_serial_worker\n\t\t\t\t\/\/ completes new request,\n\t\t\t\t\/\/ no more outstanding\n\t\t\t\t\/\/ requests\n\n\t\t\t\t\t\t\tcrypto_del_alg\n\t\t\t\t\t\t\t  \/\/ free pd\n\n<kworker context>\ninvoke_padata_reorder\n  \/\/ UAF of pd\n\nTo avoid UAF for 'reorder_work', get 'pd' ref before put 'reorder_work'\ninto the 'serial_wq' and put 'pd' ref until the 'serial_wq' finish."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6f45ef616775b0ce7889b0f6077fc8d681ab30bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7000507bb0d2ceb545c0a690e0c707c897d102c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ca38d0ca8c3d30dd18d311f1a7ec5cb56972cac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a54091c24220a4cd847d5b4f36d678edacddbaf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd7d37ccf6b11f3d95e797ebe4e9e886d0332600","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21727","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.423","lastModified":"2025-02-27T02:15:16.423","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npadata: fix UAF in padata_reorder\n\nA bug was found when run ltp test:\n\nBUG: KASAN: slab-use-after-free in padata_find_next+0x29\/0x1a0\nRead of size 4 at addr ffff88bbfe003524 by task kworker\/u113:2\/3039206\n\nCPU: 0 PID: 3039206 Comm: kworker\/u113:2 Kdump: loaded Not tainted 6.6.0+\nWorkqueue: pdecrypt_parallel padata_parallel_worker\nCall Trace:\n<TASK>\ndump_stack_lvl+0x32\/0x50\nprint_address_description.constprop.0+0x6b\/0x3d0\nprint_report+0xdd\/0x2c0\nkasan_report+0xa5\/0xd0\npadata_find_next+0x29\/0x1a0\npadata_reorder+0x131\/0x220\npadata_parallel_worker+0x3d\/0xc0\nprocess_one_work+0x2ec\/0x5a0\n\nIf 'mdelay(10)' is added before calling 'padata_find_next' in the\n'padata_reorder' function, this issue could be reproduced easily with\nltp test (pcrypt_aead01).\n\nThis can be explained as bellow:\n\npcrypt_aead_encrypt\n...\npadata_do_parallel\nrefcount_inc(&pd->refcnt); \/\/ add refcnt\n...\npadata_do_serial\npadata_reorder \/\/ pd\nwhile (1) {\npadata_find_next(pd, true); \/\/ using pd\nqueue_work_on\n...\npadata_serial_worker\t\t\t\tcrypto_del_alg\npadata_put_pd_cnt \/\/ sub refcnt\n\t\t\t\t\t\tpadata_free_shell\n\t\t\t\t\t\tpadata_put_pd(ps->pd);\n\t\t\t\t\t\t\/\/ pd is freed\n\/\/ loop again, but pd is freed\n\/\/ call padata_find_next, UAF\n}\n\nIn the padata_reorder function, when it loops in 'while', if the alg is\ndeleted, the refcnt may be decreased to 0 before entering\n'padata_find_next', which leads to UAF.\n\nAs mentioned in [1], do_serial is supposed to be called with BHs disabled\nand always happen under RCU protection, to address this issue, add\nsynchronize_rcu() in 'padata_free_shell' wait for all _do_serial calls\nto finish.\n\n[1] https:\/\/lore.kernel.org\/all\/20221028160401.cccypv4euxikusiq@parnassus.localdomain\/\n[2] https:\/\/lore.kernel.org\/linux-kernel\/jfjz5d7zwbytztackem7ibzalm5lnxldi2eofeiczqmqs2m7o6@fq426cwnjtkm\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ae2f332cfd2d74cf3ce344ec9938cf3e29c3ccd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/573ac9c70bf7885dc85d82fa44550581bfc3b738","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80231f069240d52e98b6a317456c67b2eafd0781","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbccae982e9fa1d7abcb23a5ec81cb0ec883f7de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e01780ea4661172734118d2a5f41bc9720765668","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21728","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.530","lastModified":"2025-02-27T02:15:16.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Send signals asynchronously if !preemptible\n\nBPF programs can execute in all kinds of contexts and when a program\nrunning in a non-preemptible context uses the bpf_send_signal() kfunc,\nit will cause issues because this kfunc can sleep.\nChange `irqs_disabled()` to `!preemptible()`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/092fc76b7ab4163e008f9cde596a58dad2108260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78b97783496b454435639937db3303e900a24d3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87c544108b612512b254c8f79aa5c0a8546e2cc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be42a09fe898635b0093c0c8dac1bfabe225c240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eeef8e65041a031bd8a747a392c14b76a123a12c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21729","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.637","lastModified":"2025-02-27T02:15:16.637","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: fix race between cancel_hw_scan and hw_scan completion\n\nThe rtwdev->scanning flag isn't protected by mutex originally, so\ncancel_hw_scan can pass the condition, but suddenly hw_scan completion\nunset the flag and calls ieee80211_scan_completed() that will free\nlocal->hw_scan_req. Then, cancel_hw_scan raises null-ptr-deref and\nuse-after-free. Fix it by moving the check condition to where\nprotected by mutex.\n\n KASAN: null-ptr-deref in range [0x0000000000000088-0x000000000000008f]\n CPU: 2 PID: 6922 Comm: kworker\/2:2 Tainted: G           OE\n Hardware name: LENOVO 2356AD1\/2356AD1, BIOS G7ETB6WW (2.76 ) 09\/10\/2019\n Workqueue: events cfg80211_conn_work [cfg80211]\n RIP: 0010:rtw89_fw_h2c_scan_offload_be+0xc33\/0x13c3 [rtw89_core]\n Code: 00 45 89 6c 24 1c 0f 85 23 01 00 00 48 8b 85 20 ff ff ff 48 8d\n RSP: 0018:ffff88811fd9f068 EFLAGS: 00010206\n RAX: dffffc0000000000 RBX: ffff88811fd9f258 RCX: 0000000000000001\n RDX: 0000000000000011 RSI: 0000000000000001 RDI: 0000000000000089\n RBP: ffff88811fd9f170 R08: 0000000000000000 R09: 0000000000000000\n R10: ffff88811fd9f108 R11: 0000000000000000 R12: ffff88810e47f960\n R13: 0000000000000000 R14: 000000000000ffff R15: 0000000000000000\n FS:  0000000000000000(0000) GS:ffff8881d6f00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007531dfca55b0 CR3: 00000001be296004 CR4: 00000000001706e0\n Call Trace:\n  <TASK>\n  ? show_regs+0x61\/0x73\n  ? __die_body+0x20\/0x73\n  ? die_addr+0x4f\/0x7b\n  ? exc_general_protection+0x191\/0x1db\n  ? asm_exc_general_protection+0x27\/0x30\n  ? rtw89_fw_h2c_scan_offload_be+0xc33\/0x13c3 [rtw89_core]\n  ? rtw89_fw_h2c_scan_offload_be+0x458\/0x13c3 [rtw89_core]\n  ? __pfx_rtw89_fw_h2c_scan_offload_be+0x10\/0x10 [rtw89_core]\n  ? do_raw_spin_lock+0x75\/0xdb\n  ? __pfx_do_raw_spin_lock+0x10\/0x10\n  rtw89_hw_scan_offload+0xb5e\/0xbf7 [rtw89_core]\n  ? _raw_spin_unlock+0xe\/0x24\n  ? __mutex_lock.constprop.0+0x40c\/0x471\n  ? __pfx_rtw89_hw_scan_offload+0x10\/0x10 [rtw89_core]\n  ? __mutex_lock_slowpath+0x13\/0x1f\n  ? mutex_lock+0xa2\/0xdc\n  ? __pfx_mutex_lock+0x10\/0x10\n  rtw89_hw_scan_abort+0x58\/0xb7 [rtw89_core]\n  rtw89_ops_cancel_hw_scan+0x120\/0x13b [rtw89_core]\n  ieee80211_scan_cancel+0x468\/0x4d0 [mac80211]\n  ieee80211_prep_connection+0x858\/0x899 [mac80211]\n  ieee80211_mgd_auth+0xbea\/0xdde [mac80211]\n  ? __pfx_ieee80211_mgd_auth+0x10\/0x10 [mac80211]\n  ? cfg80211_find_elem+0x15\/0x29 [cfg80211]\n  ? is_bss+0x1b7\/0x1d7 [cfg80211]\n  ieee80211_auth+0x18\/0x27 [mac80211]\n  cfg80211_mlme_auth+0x3bb\/0x3e7 [cfg80211]\n  cfg80211_conn_do_work+0x410\/0xb81 [cfg80211]\n  ? __pfx_cfg80211_conn_do_work+0x10\/0x10 [cfg80211]\n  ? __kasan_check_read+0x11\/0x1f\n  ? psi_group_change+0x8bc\/0x944\n  ? __kasan_check_write+0x14\/0x22\n  ? mutex_lock+0x8e\/0xdc\n  ? __pfx_mutex_lock+0x10\/0x10\n  ? __pfx___radix_tree_lookup+0x10\/0x10\n  cfg80211_conn_work+0x245\/0x34d [cfg80211]\n  ? __pfx_cfg80211_conn_work+0x10\/0x10 [cfg80211]\n  ? update_cfs_rq_load_avg+0x3bc\/0x3d7\n  ? sched_clock_noinstr+0x9\/0x1a\n  ? sched_clock+0x10\/0x24\n  ? sched_clock_cpu+0x7e\/0x42e\n  ? newidle_balance+0x796\/0x937\n  ? __pfx_sched_clock_cpu+0x10\/0x10\n  ? __pfx_newidle_balance+0x10\/0x10\n  ? __kasan_check_read+0x11\/0x1f\n  ? psi_group_change+0x8bc\/0x944\n  ? _raw_spin_unlock+0xe\/0x24\n  ? raw_spin_rq_unlock+0x47\/0x54\n  ? raw_spin_rq_unlock_irq+0x9\/0x1f\n  ? finish_task_switch.isra.0+0x347\/0x586\n  ? __schedule+0x27bf\/0x2892\n  ? mutex_unlock+0x80\/0xd0\n  ? do_raw_spin_lock+0x75\/0xdb\n  ? __pfx___schedule+0x10\/0x10\n  process_scheduled_works+0x58c\/0x821\n  worker_thread+0x4c7\/0x586\n  ? __kasan_check_read+0x11\/0x1f\n  kthread+0x285\/0x294\n  ? __pfx_worker_thread+0x10\/0x10\n  ? __pfx_kthread+0x10\/0x10\n  ret_from_fork+0x29\/0x6f\n  ? __pfx_kthread+0x10\/0x10\n  ret_from_fork_asm+0x1b\/0x30\n  <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2403cb3c235d5e339b580cc3a825493769fadca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5afcd6fcd1e1c1fd6bcc9a360c121d10eddade67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba4bb0402c60e945c4c396c51f0acac3c3e3ea5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21730","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.733","lastModified":"2025-02-27T02:15:16.733","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: rtw89: avoid to init mgnt_entry list twice when WoWLAN failed\n\nIf WoWLAN failed in resume flow, the rtw89_ops_add_interface() triggered\nwithout removing the interface first. Then the mgnt_entry list init again,\ncausing the list_empty() check in rtw89_chanctx_ops_assign_vif()\nuseless, and list_add_tail() again. Therefore, we have added a check to\nprevent double adding of the list.\n\nrtw89_8852ce 0000:01:00.0: failed to check wow status disabled\nrtw89_8852ce 0000:01:00.0: wow: failed to check disable fw ready\nrtw89_8852ce 0000:01:00.0: wow: failed to swap to normal fw\nrtw89_8852ce 0000:01:00.0: failed to disable wow\nrtw89_8852ce 0000:01:00.0: failed to resume for wow -110\nrtw89_8852ce 0000:01:00.0: MAC has already powered on\ni2c_hid_acpi i2c-ILTK0001:00: PM: acpi_subsys_resume+0x0\/0x60 returned 0 after 284705 usecs\nlist_add corruption. prev->next should be next (ffff9d9719d82228), but was ffff9d9719f96030. (prev=ffff9d9719f96030).\n------------[ cut here ]------------\nkernel BUG at lib\/list_debug.c:34!\ninvalid opcode: 0000 [#1] PREEMPT SMP NOPTI\nCPU: 2 PID: 6918 Comm: kworker\/u8:19 Tainted: G     U     O\nHardware name: Google Anraggar\/Anraggar, BIOS Google_Anraggar.15217.514.0 03\/25\/2024\nWorkqueue: events_unbound async_run_entry_fn\nRIP: 0010:__list_add_valid_or_report+0x9f\/0xb0\nCode: e8 56 89 ff ff 0f 0b 48 c7 c7 3e fc e0 96 48 89 c6 e8 45 89 ff ...\nRSP: 0018:ffffa51b42bbbaf0 EFLAGS: 00010246\nRAX: 0000000000000075 RBX: ffff9d9719d82ab0 RCX: 13acb86e047a4400\nRDX: 3fffffffffffffff RSI: 0000000000000000 RDI: 00000000ffffdfff\nRBP: ffffa51b42bbbb28 R08: ffffffff9768e250 R09: 0000000000001fff\nR10: ffffffff9765e250 R11: 0000000000005ffd R12: ffff9d9719f95c40\nR13: ffff9d9719f95be8 R14: ffff9d97081bfd78 R15: ffff9d9719d82060\nFS:  0000000000000000(0000) GS:ffff9d9a6fb00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007e7d029a4060 CR3: 0000000345e38000 CR4: 0000000000750ee0\nPKRU: 55555554\nCall Trace:\n <TASK>\n ? __die_body+0x68\/0xb0\n ? die+0xaa\/0xd0\n ? do_trap+0x9f\/0x170\n ? __list_add_valid_or_report+0x9f\/0xb0\n ? __list_add_valid_or_report+0x9f\/0xb0\n ? handle_invalid_op+0x69\/0x90\n ? __list_add_valid_or_report+0x9f\/0xb0\n ? exc_invalid_op+0x3c\/0x50\n ? asm_exc_invalid_op+0x16\/0x20\n ? __list_add_valid_or_report+0x9f\/0xb0\n rtw89_chanctx_ops_assign_vif+0x1f9\/0x210 [rtw89_core cbb375c44bf28564ce479002bff66617a25d9ac1]\n ? __mutex_unlock_slowpath+0xa0\/0xf0\n rtw89_ops_assign_vif_chanctx+0x4b\/0x90 [rtw89_core cbb375c44bf28564ce479002bff66617a25d9ac1]\n drv_assign_vif_chanctx+0xa7\/0x1f0 [mac80211 6efaad16237edaaea0868b132d4f93ecf918a8b6]\n ieee80211_reconfig+0x9cb\/0x17b0 [mac80211 6efaad16237edaaea0868b132d4f93ecf918a8b6]\n ? __pfx_wiphy_resume+0x10\/0x10 [cfg80211 572d03acaaa933fe38251be7fce3b3675284b8ed]\n ? dev_printk_emit+0x51\/0x70\n ? _dev_info+0x6e\/0x90\n wiphy_resume+0x89\/0x180 [cfg80211 572d03acaaa933fe38251be7fce3b3675284b8ed]\n ? __pfx_wiphy_resume+0x10\/0x10 [cfg80211 572d03acaaa933fe38251be7fce3b3675284b8ed]\n dpm_run_callback+0x37\/0x1e0\n device_resume+0x26d\/0x4b0\n ? __pfx_dpm_watchdog_handler+0x10\/0x10\n async_resume+0x1d\/0x30\n async_run_entry_fn+0x29\/0xd0\n worker_thread+0x397\/0x970\n kthread+0xed\/0x110\n ? __pfx_worker_thread+0x10\/0x10\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x38\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f7667675df1b40b73ecc53b4b8c3189b1e5f2c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ed5bf49819757303e657f3900725febf2f3926f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fc295fdd3992a9a07d12fd3f2e84dface23aedc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21731","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T02:15:16.833","lastModified":"2025-02-27T02:15:16.833","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: don't allow reconnect after disconnect\n\nFollowing process can cause nbd_config UAF:\n\n1) grab nbd_config temporarily;\n\n2) nbd_genl_disconnect() flush all recv_work() and release the\ninitial reference:\n\n  nbd_genl_disconnect\n   nbd_disconnect_and_put\n    nbd_disconnect\n     flush_workqueue(nbd->recv_workq)\n    if (test_and_clear_bit(NBD_RT_HAS_CONFIG_REF, ...))\n     nbd_config_put\n     -> due to step 1), reference is still not zero\n\n3) nbd_genl_reconfigure() queue recv_work() again;\n\n  nbd_genl_reconfigure\n   config = nbd_get_config_unlocked(nbd)\n   if (!config)\n   -> succeed\n   if (!test_bit(NBD_RT_BOUND, ...))\n   -> succeed\n   nbd_reconnect_socket\n    queue_work(nbd->recv_workq, &args->work)\n\n4) step 1) release the reference;\n\n5) Finially, recv_work() will trigger UAF:\n\n  recv_work\n   nbd_config_put(nbd)\n   -> nbd_config is freed\n   atomic_dec(&config->recv_threads)\n   -> UAF\n\nFix the problem by clearing NBD_RT_BOUND in nbd_genl_disconnect(), so\nthat nbd_genl_reconfigure() will fail."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/844b8cdc681612ff24df62cdefddeab5772fadf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9793bd5ae4bdbdb2dde401a3cab94a6bfd05e302","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8ee6ecde2b7bfb58c8a3afe8a9d2b848f580739","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d208d2c52b652913b5eefc8ca434b0d6b757f68f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7343fa33751cb07c1c56b666bf37cfca357130e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-49570","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.267","lastModified":"2025-02-27T03:15:10.267","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/xe\/tracing: Fix a potential TP_printk UAF\n\nThe commit\nafd2627f727b (\"tracing: Check \"%s\" dereference via the field and not the TP_printk format\")\nexposes potential UAFs in the xe_bo_move trace event.\n\nFix those by avoiding dereferencing the\nxe_mem_type_to_name[] array at TP_printk time.\n\nSince some code refactoring has taken place, explicit backporting may\nbe needed for kernels older than 6.10."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07089083a526ea19daa72a1edf9d6e209615b77c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62cd174616ae3bf8a6cf468718f1ae74e5a07727","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9402da34611e1039ecccba3c1481c4866f7ca64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52557","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.373","lastModified":"2025-02-27T03:15:10.373","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: zynqmp_dp: Fix integer overflow in zynqmp_dp_rate_get()\n\nThis patch fixes a potential integer overflow in the zynqmp_dp_rate_get()\n\nThe issue comes up when the expression\ndrm_dp_bw_code_to_link_rate(dp->test.bw_code) * 10000 is evaluated using 32-bit\nNow the constant is a compatible 64-bit type.\n\nResolves coverity issues: CID 1636340 and CID 1635811"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/325d889c5403ba20a24097f64c32d27ab993c2c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67a615c5cb6dc33ed35492dc0d67e496cbe8de68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52559","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.477","lastModified":"2025-02-27T03:15:10.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/msm\/gem: prevent integer overflow in msm_ioctl_gem_submit()\n\nThe \"submit->cmd[i].size\" and \"submit->cmd[i].offset\" variables are u32\nvalues that come from the user via the submit_lookup_cmds() function.\nThis addition could lead to an integer wrapping bug so use size_add()\nto prevent that.\n\nPatchwork: https:\/\/patchwork.freedesktop.org\/patch\/624696\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f1845e46c41ed500789d53dc45b383b7745c96c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a47f4b439beb98e955d501c609dfd12b7836d61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e43a0f1327a1ee70754f8a0de6e0262cfa3e0b87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-52560","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.573","lastModified":"2025-02-27T03:15:10.573","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/ntfs3: Mark inode as bad as soon as error detected in mi_enum_attr()\n\nExtended the `mi_enum_attr()` function interface with an additional\nparameter, `struct ntfs_inode *ni`, to allow marking the inode\nas bad as soon as an error is detected."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2afd4d267e6dbaec8d3ccd4f5396cb84bc67aa2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9c699f2c4dc174940ffe8600b20c267897da155","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54456","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.667","lastModified":"2025-02-27T03:15:10.667","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix potential buffer overflowin nfs_sysfs_link_rpc_client()\n\nname is char[64] where the size of clnt->cl_program->name remains\nunknown. Invoking strcat() directly will also lead to potential buffer\noverflow. Change them to strscpy() and strncat() to fix potential\nissues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19b3ca651b4b473878c73539febe477905041442","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49fd4e34751e90e6df009b70cd0659dc839e7ca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd8830779b77f4d1206d28d02ad56a03fc0e78f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8e0eb5601d4a6c74c336e3710afe3a0348c469d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-54458","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.770","lastModified":"2025-02-27T03:15:10.770","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: bsg: Set bsg_queue to NULL after removal\n\nCurrently, this does not cause any issues, but I believe it is necessary to\nset bsg_queue to NULL after removing it to prevent potential use-after-free\n(UAF) access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e95c798d8a7f70965f0f88d4657b682ff0ec75f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e7b6e44468c3242c21c2a8656d009fb3eb50a73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f782d4741bf558def60df192b858b0efc6a5f0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88a01e9c9ad40c075756ba93b47984461d4ff15d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9193bdc170cc23fe98aca71d1a63c0bf6e1e853b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57834","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.870","lastModified":"2025-02-27T03:15:10.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: Fix a null-ptr-deref in vidtv_mux_stop_thread\n\nsyzbot report a null-ptr-deref in vidtv_mux_stop_thread. [1]\n\nIf dvb->mux is not initialized successfully by vidtv_mux_init() in the\nvidtv_start_streaming(), it will trigger null pointer dereference about mux\nin vidtv_mux_stop_thread().\n\nAdjust the timing of streaming initialization and check it before\nstopping it.\n\n[1]\nKASAN: null-ptr-deref in range [0x0000000000000128-0x000000000000012f]\nCPU: 0 UID: 0 PID: 5842 Comm: syz-executor248 Not tainted 6.13.0-rc4-syzkaller-00012-g9b2ffa6148b1 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\nRIP: 0010:vidtv_mux_stop_thread+0x26\/0x80 drivers\/media\/test-drivers\/vidtv\/vidtv_mux.c:471\nCode: 90 90 90 90 66 0f 1f 00 55 53 48 89 fb e8 82 2e c8 f9 48 8d bb 28 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 02 7e 3b 0f b6 ab 28 01 00 00 31 ff 89 ee e8\nRSP: 0018:ffffc90003f2faa8 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff87cfb125\nRDX: 0000000000000025 RSI: ffffffff87d120ce RDI: 0000000000000128\nRBP: ffff888029b8d220 R08: 0000000000000005 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000003 R12: ffff888029b8d188\nR13: ffffffff8f590aa0 R14: ffffc9000581c5c8 R15: ffff888029a17710\nFS:  00007f7eef5156c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f7eef5e635c CR3: 0000000076ca6000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n vidtv_stop_streaming drivers\/media\/test-drivers\/vidtv\/vidtv_bridge.c:209 [inline]\n vidtv_stop_feed+0x151\/0x250 drivers\/media\/test-drivers\/vidtv\/vidtv_bridge.c:252\n dmx_section_feed_stop_filtering+0x90\/0x160 drivers\/media\/dvb-core\/dvb_demux.c:1000\n dvb_dmxdev_feed_stop.isra.0+0x1ee\/0x270 drivers\/media\/dvb-core\/dmxdev.c:486\n dvb_dmxdev_filter_stop+0x22a\/0x3a0 drivers\/media\/dvb-core\/dmxdev.c:559\n dvb_dmxdev_filter_free drivers\/media\/dvb-core\/dmxdev.c:840 [inline]\n dvb_demux_release+0x92\/0x550 drivers\/media\/dvb-core\/dmxdev.c:1246\n __fput+0x3f8\/0xb60 fs\/file_table.c:450\n task_work_run+0x14e\/0x250 kernel\/task_work.c:239\n get_signal+0x1d3\/0x2610 kernel\/signal.c:2790\n arch_do_signal_or_restart+0x90\/0x7e0 arch\/x86\/kernel\/signal.c:337\n exit_to_user_mode_loop kernel\/entry\/common.c:111 [inline]\n exit_to_user_mode_prepare include\/linux\/entry-common.h:329 [inline]\n __syscall_exit_to_user_mode_work kernel\/entry\/common.c:207 [inline]\n syscall_exit_to_user_mode+0x150\/0x2a0 kernel\/entry\/common.c:218\n do_syscall_64+0xda\/0x250 arch\/x86\/entry\/common.c:89\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1221989555db711578a327a9367f1be46500cb48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c5601b99d79d196fe4a37159e3dfb38e778ea18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86307e443c5844f38e1b98e2c51a4195c55576cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/904a8323cc8afa7eb9ce3e67303a2b3f2f787306","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95432a37778c9c5dd105b7b9f19e9695c9e166cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-57852","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:10.977","lastModified":"2025-02-27T03:15:10.977","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: smc: Handle missing SCM device\n\nCommit ca61d6836e6f (\"firmware: qcom: scm: fix a NULL-pointer\ndereference\") makes it explicit that qcom_scm_get_tzmem_pool() can\nreturn NULL, therefore its users should handle this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/57a811c0886f3f3677bb4619502b35b5bb917f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94f48ecf0a538019ca2025e0b0da391f8e7cc58c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd955b75849b58b650ca3f87b83bd78cde1da8bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58001","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.080","lastModified":"2025-02-27T03:15:11.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: handle a symlink read error correctly\n\nPatch series \"Convert ocfs2 to use folios\".\n\nMark did a conversion of ocfs2 to use folios and sent it to me as a\ngiant patch for review ;-)\n\nSo I've redone it as individual patches, and credited Mark for the patches\nwhere his code is substantially the same.  It's not a bad way to do it;\nhis patch had some bugs and my patches had some bugs.  Hopefully all our\nbugs were different from each other.  And hopefully Mark likes all the\nchanges I made to his code!\n\n\nThis patch (of 23):\n\nIf we can't read the buffer, be sure to unlock the page before returning."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b4c2094da6d84e69b843dd3317902e977bf64bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52a326f93ceb9348264fddf7bab6e345db69e08c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e3b3ec7c3cb5ba5629a766e4f0926db72cf0a1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e143eb4ab83c24e7ad3e3d8e7daa241d9c38377","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6833b38984d1e9f20dd80f9ec9050c10d687f30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58002","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.180","lastModified":"2025-02-27T03:15:11.180","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: uvcvideo: Remove dangling pointers\n\nWhen an async control is written, we copy a pointer to the file handle\nthat started the operation. That pointer will be used when the device is\ndone. Which could be anytime in the future.\n\nIf the user closes that file descriptor, its structure will be freed,\nand there will be one dangling pointer per pending async control, that\nthe driver will try to use.\n\nClean all the dangling pointers during release().\n\nTo avoid adding a performance penalty in the most common case (no async\noperation), a counter has been introduced with some logic to make sure\nthat it is properly handled."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/221cd51efe4565501a3dbf04cc011b537dcce7fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/438bda062b2c40ddd7df23b932e29ffe0a448cac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9edc7d25f7e49c33a1ce7a5ffadea2222065516c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58003","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.277","lastModified":"2025-02-27T03:15:11.277","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: i2c: ds90ub9x3: Fix extra fwnode_handle_put()\n\nThe ub913 and ub953 drivers call fwnode_handle_put(priv->sd.fwnode) as\npart of their remove process, and if the driver is removed multiple\ntimes, eventually leads to put \"overflow\", possibly causing memory\ncorruption or crash.\n\nThe fwnode_handle_put() is a leftover from commit 905f88ccebb1 (\"media:\ni2c: ds90ub9x3: Fix sub-device matching\"), which changed the code\nrelated to the sd.fwnode, but missed removing these fwnode_handle_put()\ncalls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/474d7baf91d37bc411fa60de5bbf03c9dd82e18a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60b45ece41c5632a3a3274115a401cb244180646","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70743d6a8b256225675711e7983825f1be86062d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4e4373322f8d4c19721831f7fb989e52d30dab0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58004","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.380","lastModified":"2025-02-27T03:15:11.380","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: intel\/ipu6: remove cpu latency qos request on error\n\nFix cpu latency qos list corruption like below. It happens when\nwe do not remove cpu latency request on error path and free\ncorresponding memory.\n\n[   30.634378] l7 kernel: list_add corruption. prev->next should be next (ffffffff9645e960), but was 0000000100100001. (prev=ffff8e9e877e20a8).\n[   30.634388] l7 kernel: WARNING: CPU: 2 PID: 2008 at lib\/list_debug.c:32 __list_add_valid_or_report+0x83\/0xa0\n<snip>\n[   30.634640] l7 kernel: Call Trace:\n[   30.634650] l7 kernel:  <TASK>\n[   30.634659] l7 kernel:  ? __list_add_valid_or_report+0x83\/0xa0\n[   30.634669] l7 kernel:  ? __warn.cold+0x93\/0xf6\n[   30.634678] l7 kernel:  ? __list_add_valid_or_report+0x83\/0xa0\n[   30.634690] l7 kernel:  ? report_bug+0xff\/0x140\n[   30.634702] l7 kernel:  ? handle_bug+0x58\/0x90\n[   30.634712] l7 kernel:  ? exc_invalid_op+0x17\/0x70\n[   30.634723] l7 kernel:  ? asm_exc_invalid_op+0x1a\/0x20\n[   30.634733] l7 kernel:  ? __list_add_valid_or_report+0x83\/0xa0\n[   30.634742] l7 kernel:  plist_add+0xdd\/0x140\n[   30.634754] l7 kernel:  pm_qos_update_target+0xa0\/0x1f0\n[   30.634764] l7 kernel:  cpu_latency_qos_update_request+0x61\/0xc0\n[   30.634773] l7 kernel:  intel_dp_aux_xfer+0x4c7\/0x6e0 [i915 1f824655ed04687c2b0d23dbce759fa785f6d033]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1496ec94bd38bdb25ca13b1dd4f8e7a6176ea89d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95275736185ecb71dc97a71d8d9d19e4ffb0a9eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/facb541ff0805314e0b56e508f7d3cbd07af513c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58005","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.480","lastModified":"2025-02-27T03:15:11.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: Change to kvalloc() in eventlog\/acpi.c\n\nThe following failure was reported on HPE ProLiant D320:\n\n[   10.693310][    T1] tpm_tis STM0925:00: 2.0 TPM (device-id 0x3, rev-id 0)\n[   10.848132][    T1] ------------[ cut here ]------------\n[   10.853559][    T1] WARNING: CPU: 59 PID: 1 at mm\/page_alloc.c:4727 __alloc_pages_noprof+0x2ca\/0x330\n[   10.862827][    T1] Modules linked in:\n[   10.866671][    T1] CPU: 59 UID: 0 PID: 1 Comm: swapper\/0 Not tainted 6.12.0-lp155.2.g52785e2-default #1 openSUSE Tumbleweed (unreleased) 588cd98293a7c9eba9013378d807364c088c9375\n[   10.882741][    T1] Hardware name: HPE ProLiant DL320 Gen12\/ProLiant DL320 Gen12, BIOS 1.20 10\/28\/2024\n[   10.892170][    T1] RIP: 0010:__alloc_pages_noprof+0x2ca\/0x330\n[   10.898103][    T1] Code: 24 08 e9 4a fe ff ff e8 34 36 fa ff e9 88 fe ff ff 83 fe 0a 0f 86 b3 fd ff ff 80 3d 01 e7 ce 01 00 75 09 c6 05 f8 e6 ce 01 01 <0f> 0b 45 31 ff e9 e5 fe ff ff f7 c2 00 00 08 00 75 42 89 d9 80 e1\n[   10.917750][    T1] RSP: 0000:ffffb7cf40077980 EFLAGS: 00010246\n[   10.923777][    T1] RAX: 0000000000000000 RBX: 0000000000040cc0 RCX: 0000000000000000\n[   10.931727][    T1] RDX: 0000000000000000 RSI: 000000000000000c RDI: 0000000000040cc0\n\nThe above transcript shows that ACPI pointed a 16 MiB buffer for the log\nevents because RSI maps to the 'order' parameter of __alloc_pages_noprof().\nAddress the bug by moving from devm_kmalloc() to devm_add_action() and\nkvmalloc() and devm_add_action()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/422d7f4e8d817be467986589c7968d3ea402f7da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c8bfe643bbd00b04ee8f9545ef33bf6a68c38db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50365a6304a57266e8f4d3078060743c3b7a1e0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3a860bc0fd6c07332e4911cf9a238d20de90173","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58006","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.583","lastModified":"2025-02-27T03:15:11.583","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: dwc: ep: Prevent changing BAR size\/flags in pci_epc_set_bar()\n\nIn commit 4284c88fff0e (\"PCI: designware-ep: Allow pci_epc_set_bar() update\ninbound map address\") set_bar() was modified to support dynamically\nchanging the backing physical address of a BAR that was already configured.\n\nThis means that set_bar() can be called twice, without ever calling\nclear_bar() (as calling clear_bar() would clear the BAR's PCI address\nassigned by the host).\n\nThis can only be done if the new BAR size\/flags does not differ from the\nexisting BAR configuration. Add these missing checks.\n\nIf we allow set_bar() to set e.g. a new BAR size that differs from the\nexisting BAR size, the new address translation range will be smaller than\nthe BAR size already determined by the host, which would mean that a read\npast the new BAR size would pass the iATU untranslated, which could allow\nthe host to read memory not belonging to the new struct pci_epf_bar.\n\nWhile at it, add comments which clarifies the support for dynamically\nchanging the physical address of a BAR. (Which was also missing.)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3229c15d6267de8e704b4085df8a82a5af2d63eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3708acbd5f169ebafe1faa519cb28adc56295546","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5cacfd067060c75088363ed3e19779078be2755","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58007","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.680","lastModified":"2025-02-27T03:15:11.680","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: socinfo: Avoid out of bounds read of serial number\n\nOn MSM8916 devices, the serial number exposed in sysfs is constant and does\nnot change across individual devices. It's always:\n\n  db410c:\/sys\/devices\/soc0$ cat serial_number\n  2644893864\n\nThe firmware used on MSM8916 exposes SOCINFO_VERSION(0, 8), which does not\nhave support for the serial_num field in the socinfo struct. There is an\nexisting check to avoid exposing the serial number in that case, but it's\nnot correct: When checking the item_size returned by SMEM, we need to make\nsure the *end* of the serial_num is within bounds, instead of comparing\nwith the *start* offset. The serial_number currently exposed on MSM8916\ndevices is just an out of bounds read of whatever comes after the socinfo\nstruct in SMEM.\n\nFix this by changing offsetof() to offsetofend(), so that the size of the\nfield is also taken into account."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a92feddae0634a0b87c04b19d343f6af97af700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22cf4fae6660b6e1a583a41cbf84e3046ca9ccd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/407c928305c1a37232a63811c400ef616f85ccbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47470acd719d45c4c8c418c07962f74cc995652b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c88b3a3fae4d60641c3a45be66269d00eff33cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58008","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.780","lastModified":"2025-02-27T03:15:11.780","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKEYS: trusted: dcp: fix improper sg use with CONFIG_VMAP_STACK=y\n\nWith vmalloc stack addresses enabled (CONFIG_VMAP_STACK=y) DCP trusted\nkeys can crash during en- and decryption of the blob encryption key via\nthe DCP crypto driver. This is caused by improperly using sg_init_one()\nwith vmalloc'd stack buffers (plain_key_blob).\n\nFix this by always using kmalloc() for buffers we give to the DCP crypto\ndriver."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3192f1c54dddb9b5820bf5e8677809949d8e9c66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3355594de46fb1cba663f12b9644b664b8a609f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8d9fab39d1f87b52932646b2f1e7877aa3fc0f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58009","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.880","lastModified":"2025-02-27T03:15:11.880","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: handle NULL sock pointer in l2cap_sock_alloc\n\nA NULL sock pointer is passed into l2cap_sock_alloc() when it is called\nfrom l2cap_sock_new_connection_cb() and the error handling paths should\nalso be aware of it.\n\nSeemingly a more elegant solution would be to swap bt_sock_alloc() and\nl2cap_chan_create() calls since they are not interdependent to that moment\nbut then l2cap_chan_create() adds the soon to be deallocated and still\ndummy-initialized channel to the global list accessible by many L2CAP\npaths. The channel would be removed from the list in short period of time\nbut be a bit more straight-forward here and just check for NULL instead of\nchanging the order of function calls.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/245d48c1ba3e7a1779c2f4cbc6f581ddc8a78e22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/297ce7f544aa675b0d136d788cad0710cdfb0785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49c0d55d59662430f1829ae85b969619573d0fa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f397409f8ee5bc82901eeaf799e1cbc4f8edcf1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/691218a50c3139f7f57ffa79fb89d932eda9571e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58010","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:11.980","lastModified":"2025-02-27T03:15:11.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinfmt_flat: Fix integer overflow bug on 32 bit systems\n\nMost of these sizes and counts are capped at 256MB so the math doesn't\nresult in an integer overflow.  The \"relocs\" count needs to be checked\nas well.  Otherwise on 32bit systems the calculation of \"full_data\"\ncould be wrong.\n\n\tfull_data = data_len + relocs * sizeof(unsigned long);"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/55cf2f4b945f6a6416cc2524ba740b83cc9af25a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e8cd712bb06a507b26efd2a56155076aa454345","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95506c7f33452450346fbe2975c1359100f854ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a009378af674b808efcca1e2e67916e79ce866b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d17ca8f2dfcf423c439859995910a20e38b86f00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58011","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.087","lastModified":"2025-02-27T03:15:12.087","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: int3472: Check for adev == NULL\n\nNot all devices have an ACPI companion fwnode, so adev might be NULL. This\ncan e.g. (theoretically) happen when a user manually binds one of\nthe int3472 drivers to another i2c\/platform device through sysfs.\n\nAdd a check for adev not being set and return -ENODEV in that case to\navoid a possible NULL pointer deref in skl_int3472_get_acpi_buffer()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a30353beca2693d30bde477024d755ffecea514","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f8b210823cc2d1f9d967f089a6c00d025bb237f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a808ecf878ad646ebc9c83d9fc4ce72fd9c49d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd2fd6eab480dfc247b737cf7a3d6b009c4d0f1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9c7cc44758f4930b41285a6d54afa8cbd9762b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58012","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.187","lastModified":"2025-02-27T03:15:12.187","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: Intel: hda-dai: Ensure DAI widget is valid during params\n\nEach cpu DAI should associate with a widget. However, the topology might\nnot create the right number of DAI widgets for aggregated amps. And it\nwill cause NULL pointer deference.\nCheck that the DAI widget associated with the CPU DAI is valid to prevent\nNULL pointer deference due to missing DAI widgets in topologies with\naggregated amps."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/569922b82ca660f8b24e705f6cf674e6b1f99cc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/789a2fbf0900982788408d3b0034e0e3f914fb3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e012a77e4d7632cf615ba9625b1600ed8985c3b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58013","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.287","lastModified":"2025-02-27T03:15:12.287","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: MGMT: Fix slab-use-after-free Read in mgmt_remove_adv_monitor_sync\n\nThis fixes the following crash:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in mgmt_remove_adv_monitor_sync+0x3a\/0xd0 net\/bluetooth\/mgmt.c:5543\nRead of size 8 at addr ffff88814128f898 by task kworker\/u9:4\/5961\n\nCPU: 1 UID: 0 PID: 5961 Comm: kworker\/u9:4 Not tainted 6.12.0-syzkaller-10684-gf1cd565ce577 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 09\/13\/2024\nWorkqueue: hci0 hci_cmd_sync_work\nCall Trace:\n <TASK>\n __dump_stack lib\/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n print_address_description mm\/kasan\/report.c:378 [inline]\n print_report+0x169\/0x550 mm\/kasan\/report.c:489\n kasan_report+0x143\/0x180 mm\/kasan\/report.c:602\n mgmt_remove_adv_monitor_sync+0x3a\/0xd0 net\/bluetooth\/mgmt.c:5543\n hci_cmd_sync_work+0x22b\/0x400 net\/bluetooth\/hci_sync.c:332\n process_one_work kernel\/workqueue.c:3229 [inline]\n process_scheduled_works+0xa63\/0x1850 kernel\/workqueue.c:3310\n worker_thread+0x870\/0xd30 kernel\/workqueue.c:3391\n kthread+0x2f0\/0x390 kernel\/kthread.c:389\n ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n <\/TASK>\n\nAllocated by task 16026:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n poison_kmalloc_redzone mm\/kasan\/common.c:377 [inline]\n __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:394\n kasan_kmalloc include\/linux\/kasan.h:260 [inline]\n __kmalloc_cache_noprof+0x243\/0x390 mm\/slub.c:4314\n kmalloc_noprof include\/linux\/slab.h:901 [inline]\n kzalloc_noprof include\/linux\/slab.h:1037 [inline]\n mgmt_pending_new+0x65\/0x250 net\/bluetooth\/mgmt_util.c:269\n mgmt_pending_add+0x36\/0x120 net\/bluetooth\/mgmt_util.c:296\n remove_adv_monitor+0x102\/0x1b0 net\/bluetooth\/mgmt.c:5568\n hci_mgmt_cmd+0xc47\/0x11d0 net\/bluetooth\/hci_sock.c:1712\n hci_sock_sendmsg+0x7b8\/0x11c0 net\/bluetooth\/hci_sock.c:1832\n sock_sendmsg_nosec net\/socket.c:711 [inline]\n __sock_sendmsg+0x221\/0x270 net\/socket.c:726\n sock_write_iter+0x2d7\/0x3f0 net\/socket.c:1147\n new_sync_write fs\/read_write.c:586 [inline]\n vfs_write+0xaeb\/0xd30 fs\/read_write.c:679\n ksys_write+0x18f\/0x2b0 fs\/read_write.c:731\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nFreed by task 16022:\n kasan_save_stack mm\/kasan\/common.c:47 [inline]\n kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n kasan_save_free_info+0x40\/0x50 mm\/kasan\/generic.c:582\n poison_slab_object mm\/kasan\/common.c:247 [inline]\n __kasan_slab_free+0x59\/0x70 mm\/kasan\/common.c:264\n kasan_slab_free include\/linux\/kasan.h:233 [inline]\n slab_free_hook mm\/slub.c:2338 [inline]\n slab_free mm\/slub.c:4598 [inline]\n kfree+0x196\/0x420 mm\/slub.c:4746\n mgmt_pending_foreach+0xd1\/0x130 net\/bluetooth\/mgmt_util.c:259\n __mgmt_power_off+0x183\/0x430 net\/bluetooth\/mgmt.c:9550\n hci_dev_close_sync+0x6c4\/0x11c0 net\/bluetooth\/hci_sync.c:5208\n hci_dev_do_close net\/bluetooth\/hci_core.c:483 [inline]\n hci_dev_close+0x112\/0x210 net\/bluetooth\/hci_core.c:508\n sock_do_ioctl+0x158\/0x460 net\/socket.c:1209\n sock_ioctl+0x626\/0x8e0 net\/socket.c:1328\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:906 [inline]\n __se_sys_ioctl+0xf5\/0x170 fs\/ioctl.c:892\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f3d05aacbfcf3584bbd9caaee34cb02508dab68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26fbd3494a7dd26269cb0817c289267dbcfdec06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ebbcb9bc794e5be647ee28fdf14eb1ae0659405","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75e65b983c5e2ee51962bfada98a79d805f28827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebb90f23f0ac21044aacf4c61cc5d7841fe99987","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58014","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.390","lastModified":"2025-02-27T03:15:12.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmsmac: add gain range check to wlc_phy_iqcal_gainparams_nphy()\n\nIn 'wlc_phy_iqcal_gainparams_nphy()', add gain range check to WARN()\ninstead of possible out-of-bounds 'tbl_iqcal_gainparams_nphy' access.\nCompile tested only.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/093286c33409bf38896f2dab0c0bb6ca388afb33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f4a0948c3524ae50f166dbc6572a3296b014e62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f6e293246dc1f5b2b6b3d0f2d757598489cda79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ada9df08b3ef683507e75b92f522fb659260147f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c27ce584d274f6ad3cba2294497de824a3c66646","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58015","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.493","lastModified":"2025-02-27T03:15:12.493","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Fix for out-of bound access error\n\nSelfgen stats are placed in a buffer using print_array_to_buf_index() function.\nArray length parameter passed to the function is too big, resulting in possible\nout-of bound memory error.\nDecreasing buffer size by one fixes faulty upper bound of passed array.\n\nDiscovered in coverity scan, CID 1600742 and CID 1600758"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8700c4bf8b7ed98037d2acf1eaf770ad6dd431d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb8c0534713865d190856f10bfc97cf0b88475b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58016","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.590","lastModified":"2025-02-27T03:15:12.590","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsafesetid: check size of policy writes\n\nsyzbot attempts to write a buffer with a large size to a sysfs entry\nwith writes handled by handle_policy_update(), triggering a warning\nin kmalloc.\n\nCheck the size specified for write buffers before allocating.\n\n[PM: subject tweak]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36b385d0f2b4c0bf41d491e19075ecd990d2bf94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96fae5bd1589731592d30b3953a90a77ef3928a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0dec65f88c8d9290dfa1d2ca1e897abe54c5881","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c71d35676d46090c891b6419f253fb92a1a9f4eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f09ff307c7299392f1c88f763299e24bc99811c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58017","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.690","lastModified":"2025-02-27T03:15:12.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nprintk: Fix signed integer overflow when defining LOG_BUF_LEN_MAX\n\nShifting 1 << 31 on a 32-bit int causes signed integer overflow, which\nleads to undefined behavior. To prevent this, cast 1 to u32 before\nperforming the shift, ensuring well-defined behavior.\n\nThis change explicitly avoids any potential overflow by ensuring that\nthe shift occurs on an unsigned 32-bit integer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d6f83df8ff2d5de84b50377e4f0d45e25311c7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/404e5fd918a0b14abec06c7eca128f04c9b98e41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a2c4e7265b8eed83c25d86d702cea06493cab18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4acf6bab775dbd22a9a799030a808a7305e01d63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a6d43844de2479a3ff8d674c3e2a16172e01598","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58018","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.797","lastModified":"2025-02-27T03:15:12.797","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvkm: correctly calculate the available space of the GSP cmdq buffer\n\nr535_gsp_cmdq_push() waits for the available page in the GSP cmdq\nbuffer when handling a large RPC request. When it sees at least one\navailable page in the cmdq, it quits the waiting with the amount of\nfree buffer pages in the queue.\n\nUnfortunately, it always takes the [write pointer, buf_size) as\navailable buffer pages before rolling back and wrongly calculates the\nsize of the data should be copied. Thus, it can overwrite the RPC\nrequest that GSP is currently reading, which causes GSP hang due\nto corrupted RPC request:\n\n[  549.209389] ------------[ cut here ]------------\n[  549.214010] WARNING: CPU: 8 PID: 6314 at drivers\/gpu\/drm\/nouveau\/nvkm\/subdev\/gsp\/r535.c:116 r535_gsp_msgq_wait+0xd0\/0x190 [nvkm]\n[  549.225678] Modules linked in: nvkm(E+) gsp_log(E) snd_seq_dummy(E) snd_hrtimer(E) snd_seq(E) snd_timer(E) snd_seq_device(E) snd(E) soundcore(E) rfkill(E) qrtr(E) vfat(E) fat(E) ipmi_ssif(E) amd_atl(E) intel_rapl_msr(E) intel_rapl_common(E) mlx5_ib(E) amd64_edac(E) edac_mce_amd(E) kvm_amd(E) ib_uverbs(E) kvm(E) ib_core(E) acpi_ipmi(E) ipmi_si(E) mxm_wmi(E) ipmi_devintf(E) rapl(E) i2c_piix4(E) wmi_bmof(E) joydev(E) ptdma(E) acpi_cpufreq(E) k10temp(E) pcspkr(E) ipmi_msghandler(E) xfs(E) libcrc32c(E) ast(E) i2c_algo_bit(E) crct10dif_pclmul(E) drm_shmem_helper(E) nvme_tcp(E) crc32_pclmul(E) ahci(E) drm_kms_helper(E) libahci(E) nvme_fabrics(E) crc32c_intel(E) nvme(E) cdc_ether(E) mlx5_core(E) nvme_core(E) usbnet(E) drm(E) libata(E) ccp(E) ghash_clmulni_intel(E) mii(E) t10_pi(E) mlxfw(E) sp5100_tco(E) psample(E) pci_hyperv_intf(E) wmi(E) dm_multipath(E) sunrpc(E) dm_mirror(E) dm_region_hash(E) dm_log(E) dm_mod(E) be2iscsi(E) bnx2i(E) cnic(E) uio(E) cxgb4i(E) cxgb4(E) tls(E) libcxgbi(E) libcxgb(E) qla4xxx(E)\n[  549.225752]  iscsi_boot_sysfs(E) iscsi_tcp(E) libiscsi_tcp(E) libiscsi(E) scsi_transport_iscsi(E) fuse(E) [last unloaded: gsp_log(E)]\n[  549.326293] CPU: 8 PID: 6314 Comm: insmod Tainted: G            E      6.9.0-rc6+ #1\n[  549.334039] Hardware name: ASRockRack 1U1G-MILAN\/N\/ROMED8-NL, BIOS L3.12E 09\/06\/2022\n[  549.341781] RIP: 0010:r535_gsp_msgq_wait+0xd0\/0x190 [nvkm]\n[  549.347343] Code: 08 00 00 89 da c1 e2 0c 48 8d ac 11 00 10 00 00 48 8b 0c 24 48 85 c9 74 1f c1 e0 0c 4c 8d 6d 30 83 e8 30 89 01 e9 68 ff ff ff <0f> 0b 49 c7 c5 92 ff ff ff e9 5a ff ff ff ba ff ff ff ff be c0 0c\n[  549.366090] RSP: 0018:ffffacbccaaeb7d0 EFLAGS: 00010246\n[  549.371315] RAX: 0000000000000000 RBX: 0000000000000012 RCX: 0000000000923e28\n[  549.378451] RDX: 0000000000000000 RSI: 0000000055555554 RDI: ffffacbccaaeb730\n[  549.385590] RBP: 0000000000000001 R08: ffff8bd14d235f70 R09: ffff8bd14d235f70\n[  549.392721] R10: 0000000000000002 R11: ffff8bd14d233864 R12: 0000000000000020\n[  549.399854] R13: ffffacbccaaeb818 R14: 0000000000000020 R15: ffff8bb298c67000\n[  549.406988] FS:  00007f5179244740(0000) GS:ffff8bd14d200000(0000) knlGS:0000000000000000\n[  549.415076] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  549.420829] CR2: 00007fa844000010 CR3: 00000001567dc005 CR4: 0000000000770ef0\n[  549.427963] PKRU: 55555554\n[  549.430672] Call Trace:\n[  549.433126]  <TASK>\n[  549.435233]  ? __warn+0x7f\/0x130\n[  549.438473]  ? r535_gsp_msgq_wait+0xd0\/0x190 [nvkm]\n[  549.443426]  ? report_bug+0x18a\/0x1a0\n[  549.447098]  ? handle_bug+0x3c\/0x70\n[  549.450589]  ? exc_invalid_op+0x14\/0x70\n[  549.454430]  ? asm_exc_invalid_op+0x16\/0x20\n[  549.458619]  ? r535_gsp_msgq_wait+0xd0\/0x190 [nvkm]\n[  549.463565]  r535_gsp_msg_recv+0x46\/0x230 [nvkm]\n[  549.468257]  r535_gsp_rpc_push+0x106\/0x160 [nvkm]\n[  549.473033]  r535_gsp_rpc_rm_ctrl_push+0x40\/0x130 [nvkm]\n[  549.478422]  nvidia_grid_init_vgpu_types+0xbc\/0xe0 [nvkm]\n[  549.483899]  nvidia_grid_init+0xb1\/0xd0 [nvkm]\n[  549.488420]  ? srso_alias_return_thunk+0x5\/0xfbef5\n[  549.493213]  nvkm_device_pci_probe+0x305\/0x420 [nvkm]\n[  549.498338]  local_pci_probe+0x46\/\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01ed662bdd6fce4f59c1804b334610d710d79fa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56e6c7f6d2a6b4e0aae0528c502e56825bb40598","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b6b75728c86f60c1fc596f0d4542427d0e6065b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58019","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.897","lastModified":"2025-02-27T03:15:12.897","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvkm\/gsp: correctly advance the read pointer of GSP message queue\n\nA GSP event message consists three parts: message header, RPC header,\nmessage body. GSP calculates the number of pages to write from the\ntotal size of a GSP message. This behavior can be observed from the\nmovement of the write pointer.\n\nHowever, nvkm takes only the size of RPC header and message body as\nthe message size when advancing the read pointer. When handling a\ntwo-page GSP message in the non rollback case, It wrongly takes the\nmessage body of the previous message as the message header of the next\nmessage. As the \"message length\" tends to be zero, in the calculation of\nsize needs to be copied (0 - size of (message header)), the size needs to\nbe copied will be \"0xffffffxx\". It also triggers a kernel panic due to a\nNULL pointer error.\n\n[  547.614102] msg: 00000f90: ff ff ff ff ff ff ff ff 40 d7 18 fb 8b 00 00 00  ........@.......\n[  547.622533] msg: 00000fa0: 00 00 00 00 ff ff ff ff ff ff ff ff 00 00 00 00  ................\n[  547.630965] msg: 00000fb0: ff ff ff ff ff ff ff ff 00 00 00 00 ff ff ff ff  ................\n[  547.639397] msg: 00000fc0: ff ff ff ff 00 00 00 00 ff ff ff ff ff ff ff ff  ................\n[  547.647832] nvkm 0000:c1:00.0: gsp: peek msg rpc fn:0 len:0x0\/0xffffffffffffffe0\n[  547.655225] nvkm 0000:c1:00.0: gsp: get msg rpc fn:0 len:0x0\/0xffffffffffffffe0\n[  547.662532] BUG: kernel NULL pointer dereference, address: 0000000000000020\n[  547.669485] #PF: supervisor read access in kernel mode\n[  547.674624] #PF: error_code(0x0000) - not-present page\n[  547.679755] PGD 0 P4D 0\n[  547.682294] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[  547.686643] CPU: 22 PID: 322 Comm: kworker\/22:1 Tainted: G            E      6.9.0-rc6+ #1\n[  547.694893] Hardware name: ASRockRack 1U1G-MILAN\/N\/ROMED8-NL, BIOS L3.12E 09\/06\/2022\n[  547.702626] Workqueue: events r535_gsp_msgq_work [nvkm]\n[  547.707921] RIP: 0010:r535_gsp_msg_recv+0x87\/0x230 [nvkm]\n[  547.713375] Code: 00 8b 70 08 48 89 e1 31 d2 4c 89 f7 e8 12 f5 ff ff 48 89 c5 48 85 c0 0f 84 cf 00 00 00 48 81 fd 00 f0 ff ff 0f 87 c4 00 00 00 <8b> 55 10 41 8b 46 30 85 d2 0f 85 f6 00 00 00 83 f8 04 76 10 ba 05\n[  547.732119] RSP: 0018:ffffabe440f87e10 EFLAGS: 00010203\n[  547.737335] RAX: 0000000000000010 RBX: 0000000000000008 RCX: 000000000000003f\n[  547.744461] RDX: 0000000000000000 RSI: ffffabe4480a8030 RDI: 0000000000000010\n[  547.751585] RBP: 0000000000000010 R08: 0000000000000000 R09: ffffabe440f87bb0\n[  547.758707] R10: ffffabe440f87dc8 R11: 0000000000000010 R12: 0000000000000000\n[  547.765834] R13: 0000000000000000 R14: ffff9351df1e5000 R15: 0000000000000000\n[  547.772958] FS:  0000000000000000(0000) GS:ffff93708eb00000(0000) knlGS:0000000000000000\n[  547.781035] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  547.786771] CR2: 0000000000000020 CR3: 00000003cc220002 CR4: 0000000000770ef0\n[  547.793896] PKRU: 55555554\n[  547.796600] Call Trace:\n[  547.799046]  <TASK>\n[  547.801152]  ? __die+0x20\/0x70\n[  547.804211]  ? page_fault_oops+0x75\/0x170\n[  547.808221]  ? print_hex_dump+0x100\/0x160\n[  547.812226]  ? exc_page_fault+0x64\/0x150\n[  547.816152]  ? asm_exc_page_fault+0x22\/0x30\n[  547.820341]  ? r535_gsp_msg_recv+0x87\/0x230 [nvkm]\n[  547.825184]  r535_gsp_msgq_work+0x42\/0x50 [nvkm]\n[  547.829845]  process_one_work+0x196\/0x3d0\n[  547.833861]  worker_thread+0x2fc\/0x410\n[  547.837613]  ? __pfx_worker_thread+0x10\/0x10\n[  547.841885]  kthread+0xdf\/0x110\n[  547.845031]  ? __pfx_kthread+0x10\/0x10\n[  547.848775]  ret_from_fork+0x30\/0x50\n[  547.852354]  ? __pfx_kthread+0x10\/0x10\n[  547.856097]  ret_from_fork_asm+0x1a\/0x30\n[  547.860019]  <\/TASK>\n[  547.862208] Modules linked in: nvkm(E) gsp_log(E) snd_seq_dummy(E) snd_hrtimer(E) snd_seq(E) snd_timer(E) snd_seq_device(E) snd(E) soundcore(E) rfkill(E) qrtr(E) vfat(E) fat(E) ipmi_ssif(E) amd_atl(E) intel_rapl_msr(E) intel_rapl_common(E) amd64_edac(E) mlx5_ib(E) edac_mce_amd(E) kvm_amd\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5185e63b45ea39339ed83f269e2ddfafb07e70d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67c9cf82f50236d9c000333b26b4f95eb2c3e1b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d9beb4aebc02c4bd09e1d39c9c5f1c68c786dbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58020","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:12.997","lastModified":"2025-02-27T03:15:12.997","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: multitouch: Add NULL check in mt_input_configured\n\ndevm_kasprintf() can return a NULL pointer on failure,but this\nreturned value in mt_input_configured() is not checked.\nAdd NULL check in mt_input_configured(), to handle kernel NULL\npointer dereference error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4e7113f591163d99adc7cbcd7295030c8c5d3fc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62f8bf06262b6fc55c58f4c5256140f1382f3b01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97c09cc2e72769edb6994b531edcfa313b96bade","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b8e2220d3a052a690b1d1b23019673e612494c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa879ef6d3acf96fa2c7122d0632061d4ea58d48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-58021","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:13.110","lastModified":"2025-02-27T03:15:13.110","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: winwing: Add NULL check in winwing_init_led()\n\ndevm_kasprintf() can return a NULL pointer on failure,but this\nreturned value in winwing_init_led() is not checked.\nAdd NULL check in winwing_init_led(), to handle kernel NULL\npointer dereference error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4001f6f79183b8868d80dd2036dfb4ea3d325e8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45ab5166a82d038c898985b0ad43ead69c1f9573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b99dbdee8a89c44d03ae9830ab19f31e124a3f32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21732","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:13.820","lastModified":"2025-02-27T03:15:13.820","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/mlx5: Fix a race for an ODP MR which leads to CQE with error\n\nThis patch addresses a race condition for an ODP MR that can result in a\nCQE with an error on the UMR QP.\n\nDuring the __mlx5_ib_dereg_mr() flow, the following sequence of calls\noccurs:\n\nmlx5_revoke_mr()\n mlx5r_umr_revoke_mr()\n mlx5r_umr_post_send_wait()\n\nAt this point, the lkey is freed from the hardware's perspective.\n\nHowever, concurrently, mlx5_ib_invalidate_range() might be triggered by\nanother task attempting to invalidate a range for the same freed lkey.\n\nThis task will:\n - Acquire the umem_odp->umem_mutex lock.\n - Call mlx5r_umr_update_xlt() on the UMR QP.\n - Since the lkey has already been freed, this can lead to a CQE error,\n   causing the UMR QP to enter an error state [1].\n\nTo resolve this race condition, the umem_odp->umem_mutex lock is now also\nacquired as part of the mlx5_revoke_mr() scope.  Upon successful revoke,\nwe set umem_odp->private which points to that MR to NULL, preventing any\nfurther invalidation attempts on its lkey.\n\n[1] From dmesg:\n\n   infiniband rocep8s0f0: dump_cqe:277:(pid 0): WC error: 6, Message: memory bind operation error\n   cqe_dump: 00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   cqe_dump: 00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   cqe_dump: 00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n   cqe_dump: 00000030: 00 00 00 00 08 00 78 06 25 00 11 b9 00 0e dd d2\n\n   WARNING: CPU: 15 PID: 1506 at drivers\/infiniband\/hw\/mlx5\/umr.c:394 mlx5r_umr_post_send_wait+0x15a\/0x2b0 [mlx5_ib]\n   Modules linked in: ip6table_mangle ip6table_natip6table_filter ip6_tables iptable_mangle xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter rpcsec_gss_krb5 auth_rpcgss oid_registry overlay rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi rdma_cm iw_cm ib_umad ib_ipoib ib_cm mlx5_ib ib_uverbs ib_core fuse mlx5_core\n   CPU: 15 UID: 0 PID: 1506 Comm: ibv_rc_pingpong Not tainted 6.12.0-rc7+ #1626\n   Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n   RIP: 0010:mlx5r_umr_post_send_wait+0x15a\/0x2b0 [mlx5_ib]\n   [..]\n   Call Trace:\n   <TASK>\n   mlx5r_umr_update_xlt+0x23c\/0x3e0 [mlx5_ib]\n   mlx5_ib_invalidate_range+0x2e1\/0x330 [mlx5_ib]\n   __mmu_notifier_invalidate_range_start+0x1e1\/0x240\n   zap_page_range_single+0xf1\/0x1a0\n   madvise_vma_behavior+0x677\/0x6e0\n   do_madvise+0x1a2\/0x4b0\n   __x64_sys_madvise+0x25\/0x30\n   do_syscall_64+0x6b\/0x140\n   entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5297f5ddffef47b94172ab0d3d62270002a3dcc1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abb604a1a9c87255c7a6f3b784410a9707baf467","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b13d32786acabf70a7b04ed24b7468fc3c82977c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21733","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:13.923","lastModified":"2025-02-27T03:15:13.923","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing\/osnoise: Fix resetting of tracepoints\n\nIf a timerlat tracer is started with the osnoise option OSNOISE_WORKLOAD\ndisabled, but then that option is enabled and timerlat is removed, the\ntracepoints that were enabled on timerlat registration do not get\ndisabled. If the option is disabled again and timelat is started, then it\ntriggers a warning in the tracepoint code due to registering the\ntracepoint again without ever disabling it.\n\nDo not use the same user space defined options to know to disable the\ntracepoints when timerlat is removed. Instead, set a global flag when it\nis enabled and use that flag to know to disable the events.\n\n ~# echo NO_OSNOISE_WORKLOAD > \/sys\/kernel\/tracing\/osnoise\/options\n ~# echo timerlat > \/sys\/kernel\/tracing\/current_tracer\n ~# echo OSNOISE_WORKLOAD > \/sys\/kernel\/tracing\/osnoise\/options\n ~# echo nop > \/sys\/kernel\/tracing\/current_tracer\n ~# echo NO_OSNOISE_WORKLOAD > \/sys\/kernel\/tracing\/osnoise\/options\n ~# echo timerlat > \/sys\/kernel\/tracing\/current_tracer\n\nTriggers:\n\n ------------[ cut here ]------------\n WARNING: CPU: 6 PID: 1337 at kernel\/tracepoint.c:294 tracepoint_add_func+0x3b6\/0x3f0\n Modules linked in:\n CPU: 6 UID: 0 PID: 1337 Comm: rtla Not tainted 6.13.0-rc4-test-00018-ga867c441128e-dirty #73\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04\/01\/2014\n RIP: 0010:tracepoint_add_func+0x3b6\/0x3f0\n Code: 48 8b 53 28 48 8b 73 20 4c 89 04 24 e8 23 59 11 00 4c 8b 04 24 e9 36 fe ff ff 0f 0b b8 ea ff ff ff 45 84 e4 0f 84 68 fe ff ff <0f> 0b e9 61 fe ff ff 48 8b 7b 18 48 85 ff 0f 84 4f ff ff ff 49 8b\n RSP: 0018:ffffb9b003a87ca0 EFLAGS: 00010202\n RAX: 00000000ffffffef RBX: ffffffff92f30860 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: ffff9bf59e91ccd0 RDI: ffffffff913b6410\n RBP: 000000000000000a R08: 00000000000005c7 R09: 0000000000000002\n R10: ffffb9b003a87ce0 R11: 0000000000000002 R12: 0000000000000001\n R13: ffffb9b003a87ce0 R14: ffffffffffffffef R15: 0000000000000008\n FS:  00007fce81209240(0000) GS:ffff9bf6fdd00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000055e99b728000 CR3: 00000001277c0002 CR4: 0000000000172ef0\n Call Trace:\n  <TASK>\n  ? __warn.cold+0xb7\/0x14d\n  ? tracepoint_add_func+0x3b6\/0x3f0\n  ? report_bug+0xea\/0x170\n  ? handle_bug+0x58\/0x90\n  ? exc_invalid_op+0x17\/0x70\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? __pfx_trace_sched_migrate_callback+0x10\/0x10\n  ? tracepoint_add_func+0x3b6\/0x3f0\n  ? __pfx_trace_sched_migrate_callback+0x10\/0x10\n  ? __pfx_trace_sched_migrate_callback+0x10\/0x10\n  tracepoint_probe_register+0x78\/0xb0\n  ? __pfx_trace_sched_migrate_callback+0x10\/0x10\n  osnoise_workload_start+0x2b5\/0x370\n  timerlat_tracer_init+0x76\/0x1b0\n  tracing_set_tracer+0x244\/0x400\n  tracing_set_trace_write+0xa0\/0xe0\n  vfs_write+0xfc\/0x570\n  ? do_sys_openat2+0x9c\/0xe0\n  ksys_write+0x72\/0xf0\n  do_syscall_64+0x79\/0x1c0\n  entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b45707c3c0671d9c49fa7b94c197a508aa55d16f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ff4245928f948f3eb2e852aa350b870421c358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e482cecd2305be1e3e6a8ee70c9b86c511484f7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee8c4c39a8f97467d63adfe03bcd45139d8c8b53","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21734","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.030","lastModified":"2025-02-27T03:15:14.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: fastrpc: Fix copy buffer page size\n\nFor non-registered buffer, fastrpc driver copies the buffer and\npass it to the remote subsystem. There is a problem with current\nimplementation of page size calculation which is not considering\nthe offset in the calculation. This might lead to passing of\nimproper and out-of-bounds page size which could result in\nmemory issue. Calculate page start and page end using the offset\nadjusted address instead of absolute address."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24a79c6bc8de763f7c50f4f84f8b0c183bc25a51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0464bad0e85fcd5d47e4297d1e410097c979e55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3f7161123fcbdc64e90119ccce292d8b66281c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c56ba3ea8e3c9a69a992aad18f7a65e43e51d623","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e966eae72762ecfdbdb82627e2cda48845b9dd66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21735","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.130","lastModified":"2025-02-27T03:15:14.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFC: nci: Add bounds checking in nci_hci_create_pipe()\n\nThe \"pipe\" variable is a u8 which comes from the network.  If it's more\nthan 127, then it results in memory corruption in the caller,\nnci_hci_connect_gate()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/110b43ef05342d5a11284cc8b21582b698b4ef1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/172cdfc3a5ea20289c58fb73dadc6fd4a8784a4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ae4bade5a64d126bd18eb66bd419005c5550218","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/59c7ed20217c0939862fbf8145bc49d5b3a13f4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5a461c315e5ff92657f84d8ba50caa5abf5c22a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21736","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.230","lastModified":"2025-02-27T03:15:14.230","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix possible int overflows in nilfs_fiemap()\n\nSince nilfs_bmap_lookup_contig() in nilfs_fiemap() calculates its result\nby being prepared to go through potentially maxblocks == INT_MAX blocks,\nthe value in n may experience an overflow caused by left shift of blkbits.\n\nWhile it is extremely unlikely to occur, play it safe and cast right hand\nexpression to wider type to mitigate the issue.\n\nFound by Linux Verification Center (linuxtesting.org) with static analysis\ntool SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/250423300b4b0335918be187ef3cade248c06e6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6438ef381c183444f7f9d1de18f22661cba1e946","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9495a9109abc31d3170f7aad7d48aa64610a1a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2bd0f1ab47822fe5bd699c8458b896c4b2edea1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3d80f34f58445355fa27b9579a449fb186aa64e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21737","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.327","lastModified":"2025-02-27T03:15:14.327","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: fix memory leak in ceph_mds_auth_match()\n\nWe now free the temporary target path substring allocation on every\npossible branch, instead of omitting the default branch.  In some\ncases, a memory leak occured, which could rapidly crash the system\n(depending on how many file accesses were attempted).\n\nThis was detected in production because it caused a continuous memory\ngrowth, eventually triggering kernel OOM and completely hard-locking\nthe kernel.\n\nRelevant kmemleak stacktrace:\n\n    unreferenced object 0xffff888131e69900 (size 128):\n      comm \"git\", pid 66104, jiffies 4295435999\n      hex dump (first 32 bytes):\n        76 6f 6c 75 6d 65 73 2f 63 6f 6e 74 61 69 6e 65  volumes\/containe\n        72 73 2f 67 69 74 65 61 2f 67 69 74 65 61 2f 67  rs\/gitea\/gitea\/g\n      backtrace (crc 2f3bb450):\n        [<ffffffffaa68fb49>] __kmalloc_noprof+0x359\/0x510\n        [<ffffffffc32bf1df>] ceph_mds_check_access+0x5bf\/0x14e0 [ceph]\n        [<ffffffffc3235722>] ceph_open+0x312\/0xd80 [ceph]\n        [<ffffffffaa7dd786>] do_dentry_open+0x456\/0x1120\n        [<ffffffffaa7e3729>] vfs_open+0x79\/0x360\n        [<ffffffffaa832875>] path_openat+0x1de5\/0x4390\n        [<ffffffffaa834fcc>] do_filp_open+0x19c\/0x3c0\n        [<ffffffffaa7e44a1>] do_sys_openat2+0x141\/0x180\n        [<ffffffffaa7e4945>] __x64_sys_open+0xe5\/0x1a0\n        [<ffffffffac2cc2f7>] do_syscall_64+0xb7\/0x210\n        [<ffffffffac400130>] entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nIt can be triggered by mouting a subdirectory of a CephFS filesystem,\nand then trying to access files on this subdirectory with an auth token\nusing a path-scoped capability:\n\n    $ ceph auth get client.services\n    [client.services]\n            key = REDACTED\n            caps mds = \"allow rw fsname=cephfs path=\/volumes\/\"\n            caps mon = \"allow r fsname=cephfs\"\n            caps osd = \"allow rw tag cephfs data=cephfs\"\n\n    $ cat \/proc\/self\/mounts\n    services@[REDACTED].cephfs=\/volumes\/containers \/ceph\/containers ceph rw,noatime,name=services,secret=<hidden>,ms_mode=prefer-crc,mount_timeout=300,acl,mon_addr=[REDACTED]:3300,recover_session=clean 0 0\n\n    $ seq 1 1000000 | xargs -P32 --replace={} touch \/ceph\/containers\/file-{} && \\\n    seq 1 1000000 | xargs -P32 --replace={} cat \/ceph\/containers\/file-{}\n\n[ idryomov: combine if statements, rename rc to path_matched and make\n            it a bool, formatting ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/146109fe936ac07f8f60cd6267543688985b96bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b6086c5efe5c7bd6e0eb440d96c26ca0d20d9d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b7d93db450e9d8ead80d75e2a303248f1528c35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21738","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.427","lastModified":"2025-02-27T03:15:14.427","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nata: libata-sff: Ensure that we cannot write outside the allocated buffer\n\nreveliofuzzing reported that a SCSI_IOCTL_SEND_COMMAND ioctl with out_len\nset to 0xd42, SCSI command set to ATA_16 PASS-THROUGH, ATA command set to\nATA_NOP, and protocol set to ATA_PROT_PIO, can cause ata_pio_sector() to\nwrite outside the allocated buffer, overwriting random memory.\n\nWhile a ATA device is supposed to abort a ATA_NOP command, there does seem\nto be a bug either in libata-sff or QEMU, where either this status is not\nset, or the status is cleared before read by ata_sff_hsm_move().\nAnyway, that is most likely a separate bug.\n\nLooking at __atapi_pio_bytes(), it already has a safety check to ensure\nthat __atapi_pio_bytes() cannot write outside the allocated buffer.\n\nAdd a similar check to ata_pio_sector(), such that also ata_pio_sector()\ncannot write outside the allocated buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a17a9944b8d89ef03946121241870ac53ddaf45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd5aade301a10f4b329fa7454fdcc2518741902","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e74e53b34b6dec5a50e1404e2680852ec6768d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8f8cf87059ed1905c2a5c72f8b39a4f57b11b4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5e6e3000309359eae2a17117aa6e3c44897bf6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21739","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.530","lastModified":"2025-02-27T03:15:14.530","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Fix use-after free in init error and remove paths\n\ndevm_blk_crypto_profile_init() registers a cleanup handler to run when\nthe associated (platform-) device is being released. For UFS, the\ncrypto private data and pointers are stored as part of the ufs_hba's\ndata structure 'struct ufs_hba::crypto_profile'. This structure is\nallocated as part of the underlying ufshcd and therefore Scsi_host\nallocation.\n\nDuring driver release or during error handling in ufshcd_pltfrm_init(),\nthis structure is released as part of ufshcd_dealloc_host() before the\n(platform-) device associated with the crypto call above is released.\nOnce this device is released, the crypto cleanup code will run, using\nthe just-released 'struct ufs_hba::crypto_profile'. This causes a\nuse-after-free situation:\n\n  Call trace:\n   kfree+0x60\/0x2d8 (P)\n   kvfree+0x44\/0x60\n   blk_crypto_profile_destroy_callback+0x28\/0x70\n   devm_action_release+0x1c\/0x30\n   release_nodes+0x6c\/0x108\n   devres_release_all+0x98\/0x100\n   device_unbind_cleanup+0x20\/0x70\n   really_probe+0x218\/0x2d0\n\nIn other words, the initialisation code flow is:\n\n  platform-device probe\n    ufshcd_pltfrm_init()\n      ufshcd_alloc_host()\n        scsi_host_alloc()\n          allocation of struct ufs_hba\n          creation of scsi-host devices\n    devm_blk_crypto_profile_init()\n      devm registration of cleanup handler using platform-device\n\nand during error handling of ufshcd_pltfrm_init() or during driver\nremoval:\n\n  ufshcd_dealloc_host()\n    scsi_host_put()\n      put_device(scsi-host)\n        release of struct ufs_hba\n  put_device(platform-device)\n    crypto cleanup handler\n\nTo fix this use-after free, change ufshcd_alloc_host() to register a\ndevres action to automatically cleanup the underlying SCSI device on\nufshcd destruction, without requiring explicit calls to\nufshcd_dealloc_host(). This way:\n\n    * the crypto profile and all other ufs_hba-owned resources are\n      destroyed before SCSI (as they've been registered after)\n    * a memleak is plugged in tc-dwc-g210-pci.c remove() as a\n      side-effect\n    * EXPORT_SYMBOL_GPL(ufshcd_dealloc_host) can be removed fully as\n      it's not needed anymore\n    * no future drivers using ufshcd_alloc_host() could ever forget\n      adding the cleanup"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c77c0d754fe83cb154715fcfec6c3faef94f207","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c185beae09a3eb85f54777edafa227f7e03075d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8fb2403ddebb5eea0033d90d9daae4c88749ada","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21740","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.630","lastModified":"2025-02-27T03:15:14.630","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86\/mmu: Ensure NX huge page recovery thread is alive before waking\n\nWhen waking a VM's NX huge page recovery thread, ensure the thread is\nactually alive before trying to wake it.  Now that the thread is spawned\non-demand during KVM_RUN, a VM without a recovery thread is reachable via\nthe related module params.\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000040\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n  RIP: 0010:vhost_task_wake+0x5\/0x10\n  Call Trace:\n   <TASK>\n   set_nx_huge_pages+0xcc\/0x1e0 [kvm]\n   param_attr_store+0x8a\/0xd0\n   module_attr_store+0x1a\/0x30\n   kernfs_fop_write_iter+0x12f\/0x1e0\n   vfs_write+0x233\/0x3e0\n   ksys_write+0x60\/0xd0\n   do_syscall_64+0x5b\/0x160\n   entry_SYSCALL_64_after_hwframe+0x4b\/0x53\n  RIP: 0033:0x7f3b52710104\n   <\/TASK>\n  Modules linked in: kvm_intel kvm\n  CR2: 0000000000000040"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b3928b7c896e5a9fb6b1373924adafe8e01a0c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43fb96ae78551d7bfa4ecca956b258f085d67c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/974f85f1f7eb7dc7fce0988046e06eeccab576a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21741","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.730","lastModified":"2025-02-27T03:15:14.730","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: ipheth: fix DPE OoB read\n\nFix an out-of-bounds DPE read, limit the number of processed DPEs to\nthe amount that fits into the fixed-size NDP16 header."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22475242ddb70e35c9148234be9a3aa9fb8efff9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5835bf66c50ac2b85ed28b282c2456c3516ef0a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/971b8c572559e52d32a2b82f2d9e0685439a0117","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee591f2b281721171896117f9946fced31441418","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21742","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.830","lastModified":"2025-02-27T03:15:14.830","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: ipheth: use static NDP16 location in URB\n\nOriginal code allowed for the start of NDP16 to be anywhere within the\nURB based on the `wNdpIndex` value in NTH16. Only the start position of\nNDP16 was checked, so it was possible for even the fixed-length part\nof NDP16 to extend past the end of URB, leading to an out-of-bounds\nread.\n\nOn iOS devices, the NDP16 header always directly follows NTH16. Rely on\nand check for this specific format.\n\nThis, along with NCM-specific minimal URB length check that already\nexists, will ensure that the fixed-length part of NDP16 plus a set\namount of DPEs fit within the URB.\n\nNote that this commit alone does not fully address the OoB read.\nThe limit on the amount of DPEs needs to be enforced separately."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b619445dcb6dab97d8ed033fb57225aca1288c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86586dcb75cb8fd062a518aca8ee667938b91efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb062178e1ce180e2cfdc9abc83a1b9fea381ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf1ac7f7cf601ac31d1580559c002b5e37b733b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21743","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:14.933","lastModified":"2025-02-27T03:15:14.933","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet: ipheth: fix possible overflow in DPE length check\n\nOriginally, it was possible for the DPE length check to overflow if\nwDatagramIndex + wDatagramLength > U16_MAX. This could lead to an OoB\nread.\n\nMove the wDatagramIndex term to the other side of the inequality.\n\nAn existing condition ensures that wDatagramIndex < urb->actual_length."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18bf6f5cce3172cb303c3f0551aa9443d5ed74f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c219427ed296f94bb4b91d08626776dc7719ee27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d677e7dd59ad6837496f5a02d8e5d39824278dfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d824a964185910e317287f034c0a439c08b4fe49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21744","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.037","lastModified":"2025-02-27T03:15:15.037","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: fix NULL pointer dereference in brcmf_txfinalize()\n\nOn removal of the device or unloading of the kernel module a potential NULL\npointer dereference occurs.\n\nThe following sequence deletes the interface:\n\n  brcmf_detach()\n    brcmf_remove_interface()\n      brcmf_del_if()\n\nInside the brcmf_del_if() function the drvr->if2bss[ifidx] is updated to\nBRCMF_BSSIDX_INVALID (-1) if the bsscfgidx matches.\n\nAfter brcmf_remove_interface() call the brcmf_proto_detach() function is\ncalled providing the following sequence:\n\n  brcmf_detach()\n    brcmf_proto_detach()\n      brcmf_proto_msgbuf_detach()\n        brcmf_flowring_detach()\n          brcmf_msgbuf_delete_flowring()\n            brcmf_msgbuf_remove_flowring()\n              brcmf_flowring_delete()\n                brcmf_get_ifp()\n                brcmf_txfinalize()\n\nSince brcmf_get_ip() can and actually will return NULL in this case the\ncall to brcmf_txfinalize() will result in a NULL pointer dereference inside\nbrcmf_txfinalize() when trying to update ifp->ndev->stats.tx_errors.\n\nThis will only happen if a flowring still has an skb.\n\nAlthough the NULL pointer dereference has only been seen when trying to\nupdate the tx statistic, all other uses of the ifp pointer have been\nguarded as well with an early return if ifp is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3877fc67bd3d5566cc12763bce39710ceb74a97d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e51d6d093e763348916e69d06d87e0a5593661b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68abd0c4ebf24cd499841a488b97a6873d5efabb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2beefc4fa49ebc22e664dc6b39dbd054f8488f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbbfef2a5b858eab55741a58b2ac9a0cc8d53c58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21745","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.137","lastModified":"2025-02-27T03:15:15.137","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: Fix class @block_class's subsystem refcount leakage\n\nblkcg_fill_root_iostats() iterates over @block_class's devices by\nclass_dev_iter_(init|next)(), but does not end iterating with\nclass_dev_iter_exit(), so causes the class's subsystem refcount leakage.\n\nFix by ending the iterating with class_dev_iter_exit()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ce09aabe009453d641a2ceb79e6461a2d4f3876","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/431b6ef2714be4d5babb802114987541a88b43b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67c7f213e052b1aa6caba4a7e25e303bc6997126","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/993121481b5a87829f1e8163f47158b72679f309","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1248436cbef1f924c04255367ff4845ccd9025e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21746","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.243","lastModified":"2025-02-27T03:15:15.243","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: synaptics - fix crash when enabling pass-through port\n\nWhen enabling a pass-through port an interrupt might come before psmouse\ndriver binds to the pass-through port. However synaptics sub-driver\ntries to access psmouse instance presumably associated with the\npass-through port to figure out if only 1 byte of response or entire\nprotocol packet needs to be forwarded to the pass-through port and may\ncrash if psmouse instance has not been attached to the port yet.\n\nFix the crash by introducing open() and close() methods for the port and\ncheck if the port is open before trying to access psmouse instance.\nBecause psmouse calls serio_open() only after attaching psmouse instance\nto serio port instance this prevents the potential crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08bd5b7c9a2401faabdaa1472d45c7de0755fd7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87da1ea93ec9f9f0004e5b12e78789bc94e360bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21747","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.337","lastModified":"2025-02-27T03:15:15.337","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/ast: astdp: Fix timeout for enabling video signal\n\nThe ASTDP transmitter sometimes takes up to 1 second for enabling the\nvideo signal, while the timeout is only 200 msec. This results in a\nkernel error message. Increase the timeout to 1 second. An example\nof the error message is shown below.\n\n[  697.084433] ------------[ cut here ]------------\n[  697.091115] ast 0000:02:00.0: [drm] drm_WARN_ON(!__ast_dp_wait_enable(ast, enabled))\n[  697.091233] WARNING: CPU: 1 PID: 160 at drivers\/gpu\/drm\/ast\/ast_dp.c:232 ast_dp_set_enable+0x123\/0x140 [ast]\n[...]\n[  697.272469] RIP: 0010:ast_dp_set_enable+0x123\/0x140 [ast]\n[...]\n[  697.415283] Call Trace:\n[  697.420727]  <TASK>\n[  697.425908]  ? show_trace_log_lvl+0x196\/0x2c0\n[  697.433304]  ? show_trace_log_lvl+0x196\/0x2c0\n[  697.440693]  ? drm_atomic_helper_commit_modeset_enables+0x30a\/0x470\n[  697.450115]  ? ast_dp_set_enable+0x123\/0x140 [ast]\n[  697.458059]  ? __warn.cold+0xaf\/0xca\n[  697.464713]  ? ast_dp_set_enable+0x123\/0x140 [ast]\n[  697.472633]  ? report_bug+0x134\/0x1d0\n[  697.479544]  ? handle_bug+0x58\/0x90\n[  697.486127]  ? exc_invalid_op+0x13\/0x40\n[  697.492975]  ? asm_exc_invalid_op+0x16\/0x20\n[  697.500224]  ? preempt_count_sub+0x14\/0xc0\n[  697.507473]  ? ast_dp_set_enable+0x123\/0x140 [ast]\n[  697.515377]  ? ast_dp_set_enable+0x123\/0x140 [ast]\n[  697.523227]  drm_atomic_helper_commit_modeset_enables+0x30a\/0x470\n[  697.532388]  drm_atomic_helper_commit_tail+0x58\/0x90\n[  697.540400]  ast_mode_config_helper_atomic_commit_tail+0x30\/0x40 [ast]\n[  697.550009]  commit_tail+0xfe\/0x1d0\n[  697.556547]  drm_atomic_helper_commit+0x198\/0x1c0\n\nThis is a cosmetical problem. Enabling the video signal still works\neven with the error message. The problem has always been present, but\nonly recent versions of the ast driver warn about missing the timeout."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/589839379031cce220c9cab9f27cb5477195067e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd39c41bcd82d5ebaaebadb944eab5598c668a90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21748","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.440","lastModified":"2025-02-27T03:15:15.440","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix integer overflows on 32 bit systems\n\nOn 32bit systems the addition operations in ipc_msg_alloc() can\npotentially overflow leading to memory corruption.\nAdd bounds checking using KSMBD_IPC_MAX_PAYLOAD to avoid overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/760568c1f62ea874e8fb492f9cfa4f47b4b8391e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82f59d64e6297f270311b16b5dcf65be406d1ea3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aab98e2dbd648510f8f51b83fbf4721206ccae45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4b902737746c490258de5cb55cab39e79927a67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb9947fa7c99a77b04d43404c6988a0d326e4a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21749","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.543","lastModified":"2025-02-27T03:15:15.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rose: lock the socket in rose_bind()\n\nsyzbot reported a soft lockup in rose_loopback_timer(),\nwith a repro calling bind() from multiple threads.\n\nrose_bind() must lock the socket to avoid this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c04b0ab3a647e76d0e752b013de8e404abafc63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/667f61b3498df751c8b3f0be1637e7226cbe3ed0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/970cd2ed26cdab2b0f15b6d90d7eaa36538244a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1300691aed9ee852b0a9192e29e2bdc2411a7e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0384efd45f615603e6869205b72040c209e69cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21750","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.647","lastModified":"2025-02-27T03:15:15.647","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcmfmac: Check the return value of of_property_read_string_index()\n\nSomewhen between 6.10 and 6.11 the driver started to crash on my\nMacBookPro14,3. The property doesn't exist and 'tmp' remains\nuninitialized, so we pass a random pointer to devm_kstrdup().\n\nThe crash I am getting looks like this:\n\nBUG: unable to handle page fault for address: 00007f033c669379\nPF: supervisor read access in kernel mode\nPF: error_code(0x0001) - permissions violation\nPGD 8000000101341067 P4D 8000000101341067 PUD 101340067 PMD 1013bb067 PTE 800000010aee9025\nOops: Oops: 0001 [#1] SMP PTI\nCPU: 4 UID: 0 PID: 827 Comm: (udev-worker) Not tainted 6.11.8-gentoo #1\nHardware name: Apple Inc. MacBookPro14,3\/Mac-551B86E5744E2388, BIOS 529.140.2.0.0 06\/23\/2024\nRIP: 0010:strlen+0x4\/0x30\nCode: f7 75 ec 31 c0 c3 cc cc cc cc 48 89 f8 c3 cc cc cc cc 0f 1f 40 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa <80> 3f 00 74 14 48 89 f8 48 83 c0 01 80 38 00 75 f7 48 29 f8 c3 cc\nRSP: 0018:ffffb4aac0683ad8 EFLAGS: 00010202\nRAX: 00000000ffffffea RBX: 00007f033c669379 RCX: 0000000000000001\nRDX: 0000000000000cc0 RSI: 00007f033c669379 RDI: 00007f033c669379\nRBP: 00000000ffffffea R08: 0000000000000000 R09: 00000000c0ba916a\nR10: ffffffffffffffff R11: ffffffffb61ea260 R12: ffff91f7815b50c8\nR13: 0000000000000cc0 R14: ffff91fafefffe30 R15: ffffb4aac0683b30\nFS:  00007f033ccbe8c0(0000) GS:ffff91faeed00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f033c669379 CR3: 0000000107b1e004 CR4: 00000000003706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ? __die+0x23\/0x70\n ? page_fault_oops+0x149\/0x4c0\n ? raw_spin_rq_lock_nested+0xe\/0x20\n ? sched_balance_newidle+0x22b\/0x3c0\n ? update_load_avg+0x78\/0x770\n ? exc_page_fault+0x6f\/0x150\n ? asm_exc_page_fault+0x26\/0x30\n ? __pfx_pci_conf1_write+0x10\/0x10\n ? strlen+0x4\/0x30\n devm_kstrdup+0x25\/0x70\n brcmf_of_probe+0x273\/0x350 [brcmfmac]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/082d9e263af8de68f0c34f67b251818205160f6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ef2ea1429684d5cef207519bdf6ce45e50e8ac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af525a8b2ab85291617e79a5bb18bcdcb529e80c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb8e35e33e79eb8e44396adbc8cb6c8c5f16b731","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9480e9f2d10135476101619bcbd1c49c15d595f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21751","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.760","lastModified":"2025-02-27T03:15:15.760","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: HWS, change error flow on matcher disconnect\n\nCurrently, when firmware failure occurs during matcher disconnect flow,\nthe error flow of the function reconnects the matcher back and returns\nan error, which continues running the calling function and eventually\nfrees the matcher that is being disconnected.\nThis leads to a case where we have a freed matcher on the matchers list,\nwhich in turn leads to use-after-free and eventual crash.\n\nThis patch fixes that by not trying to reconnect the matcher back when\nsome FW command fails during disconnect.\n\nNote that we're dealing here with FW error. We can't overcome this\nproblem. This might lead to bad steering state (e.g. wrong connection\nbetween matchers), and will also lead to resource leakage, as it is\nthe case with any other error handling during resource destruction.\n\nHowever, the goal here is to allow the driver to continue and not crash\nthe machine with use-after-free error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ce840c7a659aa53a31ef49f0271b4fd0dc10296","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23a86c76a1a197e8fbbbd0ce3e826eb58c471624","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21752","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.853","lastModified":"2025-02-27T03:15:15.853","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: don't use btrfs_set_item_key_safe on RAID stripe-extents\n\nDon't use btrfs_set_item_key_safe() to modify the keys in the RAID\nstripe-tree, as this can lead to corruption of the tree, which is caught\nby the checks in btrfs_set_item_key_safe():\n\n BTRFS info (device nvme1n1): leaf 49168384 gen 15 total ptrs 194 free space 8329 owner 12\n BTRFS info (device nvme1n1): refs 2 lock_owner 1030 current 1030\n  [ snip ]\n  item 105 key (354549760 230 20480) itemoff 14587 itemsize 16\n                  stride 0 devid 5 physical 67502080\n  item 106 key (354631680 230 4096) itemoff 14571 itemsize 16\n                  stride 0 devid 1 physical 88559616\n  item 107 key (354631680 230 32768) itemoff 14555 itemsize 16\n                  stride 0 devid 1 physical 88555520\n  item 108 key (354717696 230 28672) itemoff 14539 itemsize 16\n                  stride 0 devid 2 physical 67604480\n  [ snip ]\n BTRFS critical (device nvme1n1): slot 106 key (354631680 230 32768) new key (354635776 230 4096)\n ------------[ cut here ]------------\n kernel BUG at fs\/btrfs\/ctree.c:2602!\n Oops: invalid opcode: 0000 [#1] PREEMPT SMP PTI\n CPU: 1 UID: 0 PID: 1055 Comm: fsstress Not tainted 6.13.0-rc1+ #1464\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04\/01\/2014\n RIP: 0010:btrfs_set_item_key_safe+0xf7\/0x270\n Code: <snip>\n RSP: 0018:ffffc90001337ab0 EFLAGS: 00010287\n RAX: 0000000000000000 RBX: ffff8881115fd000 RCX: 0000000000000000\n RDX: 0000000000000001 RSI: 0000000000000001 RDI: 00000000ffffffff\n RBP: ffff888110ed6f50 R08: 00000000ffffefff R09: ffffffff8244c500\n R10: 00000000ffffefff R11: 00000000ffffffff R12: ffff888100586000\n R13: 00000000000000c9 R14: ffffc90001337b1f R15: ffff888110f23b58\n FS:  00007f7d75c72740(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007fa811652c60 CR3: 0000000111398001 CR4: 0000000000370eb0\n Call Trace:\n  <TASK>\n  ? __die_body.cold+0x14\/0x1a\n  ? die+0x2e\/0x50\n  ? do_trap+0xca\/0x110\n  ? do_error_trap+0x65\/0x80\n  ? btrfs_set_item_key_safe+0xf7\/0x270\n  ? exc_invalid_op+0x50\/0x70\n  ? btrfs_set_item_key_safe+0xf7\/0x270\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? btrfs_set_item_key_safe+0xf7\/0x270\n  btrfs_partially_delete_raid_extent+0xc4\/0xe0\n  btrfs_delete_raid_extent+0x227\/0x240\n  __btrfs_free_extent.isra.0+0x57f\/0x9c0\n  ? exc_coproc_segment_overrun+0x40\/0x40\n  __btrfs_run_delayed_refs+0x2fa\/0xe80\n  btrfs_run_delayed_refs+0x81\/0xe0\n  btrfs_commit_transaction+0x2dd\/0xbe0\n  ? preempt_count_add+0x52\/0xb0\n  btrfs_sync_file+0x375\/0x4c0\n  do_fsync+0x39\/0x70\n  __x64_sys_fsync+0x13\/0x20\n  do_syscall_64+0x54\/0x110\n  entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n RIP: 0033:0x7f7d7550ef90\n Code: <snip>\n RSP: 002b:00007ffd70237248 EFLAGS: 00000202 ORIG_RAX: 000000000000004a\n RAX: ffffffffffffffda RBX: 0000000000000004 RCX: 00007f7d7550ef90\n RDX: 000000000000013a RSI: 000000000040eb28 RDI: 0000000000000004\n RBP: 000000000000001b R08: 0000000000000078 R09: 00007ffd7023725c\n R10: 00007f7d75400390 R11: 0000000000000202 R12: 028f5c28f5c28f5c\n R13: 8f5c28f5c28f5c29 R14: 000000000040b520 R15: 00007f7d75c726c8\n  <\/TASK>\n\nWhile the root cause of the tree order corruption isn't clear, using\nbtrfs_duplicate_item() to copy the item and then adjusting both the key\nand the per-device physical addresses is a safe way to counter this\nproblem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c25eff52ee5a02a2c4be659a44ae972d9989742","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc14ba10781bd2629835696b7cc1febf914768e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21753","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:15.950","lastModified":"2025-02-27T03:15:15.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix use-after-free when attempting to join an aborted transaction\n\nWhen we are trying to join the current transaction and if it's aborted,\nwe read its 'aborted' field after unlocking fs_info->trans_lock and\nwithout holding any extra reference count on it. This means that a\nconcurrent task that is aborting the transaction may free the transaction\nbefore we read its 'aborted' field, leading to a use-after-free.\n\nFix this by reading the 'aborted' field while holding fs_info->trans_lock\nsince any freeing task must first acquire that lock and set\nfs_info->running_transaction to NULL before freeing the transaction.\n\nThis was reported by syzbot and Dmitry with the following stack traces\nfrom KASAN:\n\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in join_transaction+0xd9b\/0xda0 fs\/btrfs\/transaction.c:278\n   Read of size 4 at addr ffff888011839024 by task kworker\/u4:9\/1128\n\n   CPU: 0 UID: 0 PID: 1128 Comm: kworker\/u4:9 Not tainted 6.13.0-rc7-syzkaller-00019-gc45323b7560e #0\n   Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n   Workqueue: events_unbound btrfs_async_reclaim_data_space\n   Call Trace:\n    <TASK>\n    __dump_stack lib\/dump_stack.c:94 [inline]\n    dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n    print_address_description mm\/kasan\/report.c:378 [inline]\n    print_report+0x169\/0x550 mm\/kasan\/report.c:489\n    kasan_report+0x143\/0x180 mm\/kasan\/report.c:602\n    join_transaction+0xd9b\/0xda0 fs\/btrfs\/transaction.c:278\n    start_transaction+0xaf8\/0x1670 fs\/btrfs\/transaction.c:697\n    flush_space+0x448\/0xcf0 fs\/btrfs\/space-info.c:803\n    btrfs_async_reclaim_data_space+0x159\/0x510 fs\/btrfs\/space-info.c:1321\n    process_one_work kernel\/workqueue.c:3236 [inline]\n    process_scheduled_works+0xa66\/0x1840 kernel\/workqueue.c:3317\n    worker_thread+0x870\/0xd30 kernel\/workqueue.c:3398\n    kthread+0x2f0\/0x390 kernel\/kthread.c:389\n    ret_from_fork+0x4b\/0x80 arch\/x86\/kernel\/process.c:147\n    ret_from_fork_asm+0x1a\/0x30 arch\/x86\/entry\/entry_64.S:244\n    <\/TASK>\n\n   Allocated by task 5315:\n    kasan_save_stack mm\/kasan\/common.c:47 [inline]\n    kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n    poison_kmalloc_redzone mm\/kasan\/common.c:377 [inline]\n    __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:394\n    kasan_kmalloc include\/linux\/kasan.h:260 [inline]\n    __kmalloc_cache_noprof+0x243\/0x390 mm\/slub.c:4329\n    kmalloc_noprof include\/linux\/slab.h:901 [inline]\n    join_transaction+0x144\/0xda0 fs\/btrfs\/transaction.c:308\n    start_transaction+0xaf8\/0x1670 fs\/btrfs\/transaction.c:697\n    btrfs_create_common+0x1b2\/0x2e0 fs\/btrfs\/inode.c:6572\n    lookup_open fs\/namei.c:3649 [inline]\n    open_last_lookups fs\/namei.c:3748 [inline]\n    path_openat+0x1c03\/0x3590 fs\/namei.c:3984\n    do_filp_open+0x27f\/0x4e0 fs\/namei.c:4014\n    do_sys_openat2+0x13e\/0x1d0 fs\/open.c:1402\n    do_sys_open fs\/open.c:1417 [inline]\n    __do_sys_creat fs\/open.c:1495 [inline]\n    __se_sys_creat fs\/open.c:1489 [inline]\n    __x64_sys_creat+0x123\/0x170 fs\/open.c:1489\n    do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n    do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n    entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\n   Freed by task 5336:\n    kasan_save_stack mm\/kasan\/common.c:47 [inline]\n    kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n    kasan_save_free_info+0x40\/0x50 mm\/kasan\/generic.c:582\n    poison_slab_object mm\/kasan\/common.c:247 [inline]\n    __kasan_slab_free+0x59\/0x70 mm\/kasan\/common.c:264\n    kasan_slab_free include\/linux\/kasan.h:233 [inline]\n    slab_free_hook mm\/slub.c:2353 [inline]\n    slab_free mm\/slub.c:4613 [inline]\n    kfree+0x196\/0x430 mm\/slub.c:4761\n    cleanup_transaction fs\/btrfs\/transaction.c:2063 [inline]\n    btrfs_commit_transaction+0x2c97\/0x3720 fs\/btrfs\/transaction.c:2598\n    insert_balance_item+0x1284\/0x20b0 fs\/btrfs\/volumes.c:3757\n    btrfs_balance+0x992\/\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6ba4663ada6c6315af23a6669d386146634808ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86d71a026a7f63da905db9add845c8ee88801eca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5cff471039caa2b088060c074c2bf2081bcb01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce628048390dad80320d5a1f74de6ca1e1be91e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2f0943cf37305dbdeaf9846e3c941451bcdef63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21754","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.050","lastModified":"2025-02-27T03:15:16.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix assertion failure when splitting ordered extent after transaction abort\n\nIf while we are doing a direct IO write a transaction abort happens, we\nmark all existing ordered extents with the BTRFS_ORDERED_IOERR flag (done\nat btrfs_destroy_ordered_extents()), and then after that if we enter\nbtrfs_split_ordered_extent() and the ordered extent has bytes left\n(meaning we have a bio that doesn't cover the whole ordered extent, see\ndetails at btrfs_extract_ordered_extent()), we will fail on the following\nassertion at btrfs_split_ordered_extent():\n\n   ASSERT(!(flags & ~BTRFS_ORDERED_TYPE_FLAGS));\n\nbecause the BTRFS_ORDERED_IOERR flag is set and the definition of\nBTRFS_ORDERED_TYPE_FLAGS is just the union of all flags that identify the\ntype of write (regular, nocow, prealloc, compressed, direct IO, encoded).\n\nFix this by returning an error from btrfs_extract_ordered_extent() if we\nfind the BTRFS_ORDERED_IOERR flag in the ordered extent. The error will\nbe the error that resulted in the transaction abort or -EIO if no\ntransaction abort happened.\n\nThis was recently reported by syzbot with the following trace:\n\n   FAULT_INJECTION: forcing a failure.\n   name failslab, interval 1, probability 0, space 0, times 1\n   CPU: 0 UID: 0 PID: 5321 Comm: syz.0.0 Not tainted 6.13.0-rc5-syzkaller #0\n   Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n   Call Trace:\n    <TASK>\n    __dump_stack lib\/dump_stack.c:94 [inline]\n    dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:120\n    fail_dump lib\/fault-inject.c:53 [inline]\n    should_fail_ex+0x3b0\/0x4e0 lib\/fault-inject.c:154\n    should_failslab+0xac\/0x100 mm\/failslab.c:46\n    slab_pre_alloc_hook mm\/slub.c:4072 [inline]\n    slab_alloc_node mm\/slub.c:4148 [inline]\n    __do_kmalloc_node mm\/slub.c:4297 [inline]\n    __kmalloc_noprof+0xdd\/0x4c0 mm\/slub.c:4310\n    kmalloc_noprof include\/linux\/slab.h:905 [inline]\n    kzalloc_noprof include\/linux\/slab.h:1037 [inline]\n    btrfs_chunk_alloc_add_chunk_item+0x244\/0x1100 fs\/btrfs\/volumes.c:5742\n    reserve_chunk_space+0x1ca\/0x2c0 fs\/btrfs\/block-group.c:4292\n    check_system_chunk fs\/btrfs\/block-group.c:4319 [inline]\n    do_chunk_alloc fs\/btrfs\/block-group.c:3891 [inline]\n    btrfs_chunk_alloc+0x77b\/0xf80 fs\/btrfs\/block-group.c:4187\n    find_free_extent_update_loop fs\/btrfs\/extent-tree.c:4166 [inline]\n    find_free_extent+0x42d1\/0x5810 fs\/btrfs\/extent-tree.c:4579\n    btrfs_reserve_extent+0x422\/0x810 fs\/btrfs\/extent-tree.c:4672\n    btrfs_new_extent_direct fs\/btrfs\/direct-io.c:186 [inline]\n    btrfs_get_blocks_direct_write+0x706\/0xfa0 fs\/btrfs\/direct-io.c:321\n    btrfs_dio_iomap_begin+0xbb7\/0x1180 fs\/btrfs\/direct-io.c:525\n    iomap_iter+0x697\/0xf60 fs\/iomap\/iter.c:90\n    __iomap_dio_rw+0xeb9\/0x25b0 fs\/iomap\/direct-io.c:702\n    btrfs_dio_write fs\/btrfs\/direct-io.c:775 [inline]\n    btrfs_direct_write+0x610\/0xa30 fs\/btrfs\/direct-io.c:880\n    btrfs_do_write_iter+0x2a0\/0x760 fs\/btrfs\/file.c:1397\n    do_iter_readv_writev+0x600\/0x880\n    vfs_writev+0x376\/0xba0 fs\/read_write.c:1050\n    do_pwritev fs\/read_write.c:1146 [inline]\n    __do_sys_pwritev2 fs\/read_write.c:1204 [inline]\n    __se_sys_pwritev2+0x196\/0x2b0 fs\/read_write.c:1195\n    do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n    do_syscall_64+0xf3\/0x230 arch\/x86\/entry\/common.c:83\n    entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n   RIP: 0033:0x7f1281f85d29\n   RSP: 002b:00007f12819fe038 EFLAGS: 00000246 ORIG_RAX: 0000000000000148\n   RAX: ffffffffffffffda RBX: 00007f1282176080 RCX: 00007f1281f85d29\n   RDX: 0000000000000001 RSI: 0000000020000240 RDI: 0000000000000005\n   RBP: 00007f12819fe090 R08: 0000000000000000 R09: 0000000000000003\n   R10: 0000000000007000 R11: 0000000000000246 R12: 0000000000000002\n   R13: 0000000000000000 R14: 00007f1282176080 R15: 00007ffcb9e23328\n    <\/TASK>\n   BTRFS error (device loop0 state A): Transaction aborted (error -12)\n   BTRFS: error (device loop0 state A\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d85f5c2dd91df6b5da454406756f463ba923b69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ff88c2a742a7cbaa4d08507d864737d099b435a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ea8db4216d1029527ab4666f730650419451e32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/927b930f117bbae730a853c1dc43da8afe8380fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21755","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.150","lastModified":"2025-02-27T03:15:16.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: Orphan socket after transport release\n\nDuring socket release, sock_orphan() is called without considering that it\nsets sk->sk_wq to NULL. Later, if SO_LINGER is enabled, this leads to a\nnull pointer dereferenced in virtio_transport_wait_close().\n\nOrphan the socket only after transport release.\n\nPartially reverts the 'Fixes:' commit.\n\nKASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]\n lock_acquire+0x19e\/0x500\n _raw_spin_lock_irqsave+0x47\/0x70\n add_wait_queue+0x46\/0x230\n virtio_transport_release+0x4e7\/0x7f0\n __vsock_release+0xfd\/0x490\n vsock_release+0x90\/0x120\n __sock_release+0xa3\/0x250\n sock_close+0x14\/0x20\n __fput+0x35e\/0xa90\n __x64_sys_close+0x78\/0xd0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a866f8376f0a5c848dcb59cd26df845fffbe6d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78dafe1cf3afa02ed71084b350713b07e72a18fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94d81870eec7ad2dd7af80bffd314ded26caea1a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3b8e9d3414b2eb083d8293be25a949fe480897b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21756","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.250","lastModified":"2025-02-27T03:15:16.250","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvsock: Keep the binding until socket destruction\n\nPreserve sockets bindings; this includes both resulting from an explicit\nbind() and those implicitly bound through autobind during connect().\n\nPrevents socket unbinding during a transport reassignment, which fixes a\nuse-after-free:\n\n    1. vsock_create() (refcnt=1) calls vsock_insert_unbound() (refcnt=2)\n    2. transport->release() calls vsock_remove_bound() without checking if\n       sk was bound and moved to bound list (refcnt=1)\n    3. vsock_bind() assumes sk is in unbound list and before\n       __vsock_insert_bound(vsock_bound_sockets()) calls\n       __vsock_remove_bound() which does:\n           list_del_init(&vsk->bound_table); \/\/ nop\n           sock_put(&vsk->sk);               \/\/ refcnt=0\n\nBUG: KASAN: slab-use-after-free in __vsock_bind+0x62e\/0x730\nRead of size 4 at addr ffff88816b46a74c by task a.out\/2057\n dump_stack_lvl+0x68\/0x90\n print_report+0x174\/0x4f6\n kasan_report+0xb9\/0x190\n __vsock_bind+0x62e\/0x730\n vsock_bind+0x97\/0xe0\n __sys_bind+0x154\/0x1f0\n __x64_sys_bind+0x6e\/0xb0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nAllocated by task 2057:\n kasan_save_stack+0x1e\/0x40\n kasan_save_track+0x10\/0x30\n __kasan_slab_alloc+0x85\/0x90\n kmem_cache_alloc_noprof+0x131\/0x450\n sk_prot_alloc+0x5b\/0x220\n sk_alloc+0x2c\/0x870\n __vsock_create.constprop.0+0x2e\/0xb60\n vsock_create+0xe4\/0x420\n __sock_create+0x241\/0x650\n __sys_socket+0xf2\/0x1a0\n __x64_sys_socket+0x6e\/0xb0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFreed by task 2057:\n kasan_save_stack+0x1e\/0x40\n kasan_save_track+0x10\/0x30\n kasan_save_free_info+0x37\/0x60\n __kasan_slab_free+0x4b\/0x70\n kmem_cache_free+0x1a1\/0x590\n __sk_destruct+0x388\/0x5a0\n __vsock_bind+0x5e1\/0x730\n vsock_bind+0x97\/0xe0\n __sys_bind+0x154\/0x1f0\n __x64_sys_bind+0x6e\/0xb0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nrefcount_t: addition on 0; use-after-free.\nWARNING: CPU: 7 PID: 2057 at lib\/refcount.c:25 refcount_warn_saturate+0xce\/0x150\nRIP: 0010:refcount_warn_saturate+0xce\/0x150\n __vsock_bind+0x66d\/0x730\n vsock_bind+0x97\/0xe0\n __sys_bind+0x154\/0x1f0\n __x64_sys_bind+0x6e\/0xb0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 7 PID: 2057 at lib\/refcount.c:28 refcount_warn_saturate+0xee\/0x150\nRIP: 0010:refcount_warn_saturate+0xee\/0x150\n vsock_remove_bound+0x187\/0x1e0\n __vsock_release+0x383\/0x4a0\n vsock_release+0x90\/0x120\n __sock_release+0xa3\/0x250\n sock_close+0x14\/0x20\n __fput+0x359\/0xa80\n task_work_run+0x107\/0x1d0\n do_exit+0x847\/0x2560\n do_group_exit+0xb8\/0x250\n __x64_sys_exit_group+0x3a\/0x50\n x64_sys_call+0xfec\/0x14f0\n do_syscall_64+0x93\/0x1b0\n entry_SYSCALL_64_after_hwframe+0x76\/0x7e"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f43540166128951cc1be7ab1ce6b7f05c670d8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/645ce25aa0e67895b11d89f27bb86c9d444c40f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1afd40321f1c243cffbcf40ea7ca41aca87fa5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcdd2242c0231032fc84e1404315c245ae56322a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21757","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.353","lastModified":"2025-02-27T03:15:16.353","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: fix dst refleaks in rpl, seg6 and ioam6 lwtunnels\n\ndst_cache_get() gives us a reference, we need to release it.\n\nDiscovered by the ioam6.sh test, kmemleak was recently fixed\nto catch per-cpu memory leaks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2248b8145053eb2ae35ca4cf694b885a086719bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c71a192976ded2f2f416d03c4f595cdd4478b825","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d90f8f930c3053bb11f5def9aff5310a70429260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21758","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.450","lastModified":"2025-02-27T03:15:16.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: mcast: add RCU protection to mld_newpack()\n\nmld_newpack() can be called without RTNL or RCU being held.\n\nNote that we no longer can use sock_alloc_send_skb() because\nipv6.igmp_sk uses GFP_KERNEL allocations which can sleep.\n\nInstead use alloc_skb() and charge the net->ipv6.igmp_sk\nsocket under RCU protection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b91c597b0214b1b462eb627ec02658c944623f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25195f9d5ffcc8079ad743a50c0409dbdc48d98a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a527750d877fd334de87eef81f1cb5f0f0ca3373","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d60d493b0e65647e0335e6a7c4547abcea7df8e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8af3632a7f2da83e27b083f787bced1faba00b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21759","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.550","lastModified":"2025-02-27T03:15:16.550","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: mcast: extend RCU protection in igmp6_send()\n\nigmp6_send() can be called without RTNL or RCU being held.\n\nExtend RCU protection so that we can safely fetch the net pointer\nand avoid a potential UAF.\n\nNote that we no longer can use sock_alloc_send_skb() because\nipv6.igmp_sk uses GFP_KERNEL allocations which can sleep.\n\nInstead use alloc_skb() and charge the net->ipv6.igmp_sk\nsocket under RCU protection."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/087c1faa594fa07a66933d750c0b2610aa1a2946","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0bf8e2f3768629d437a32cb824149e6e98254381","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81b25a07ebf53f9ef4ca8f3d96a8ddb94561dd5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e92d6a413feaf968a33f0b439ecf27404407458","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21760","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.653","lastModified":"2025-02-27T03:15:16.653","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nndisc: extend RCU protection in ndisc_send_skb()\n\nndisc_send_skb() can be called without RTNL or RCU held.\n\nAcquire rcu_read_lock() earlier, so that we can use dev_net_rcu()\nand avoid a potential UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04e05112f10354ffc3bb6cc796d553bab161594c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/789230e5a8c1097301afc802e242c79bc8835c67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9319d800b5701e7f5e3fa71a5b7c4831fc20d6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae38982f521621c216fc2f5182cd091f4734641d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed6ae1f325d3c43966ec1b62ac1459e2b8e45640","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21761","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.757","lastModified":"2025-02-27T03:15:16.757","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nopenvswitch: use RCU protection in ovs_vport_cmd_fill_info()\n\novs_vport_cmd_fill_info() can be called without RTNL or RCU.\n\nUse RCU protection and dev_net_rcu() to avoid potential UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5828937742af74666192835d657095d95c53dbd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e01abc34e87abd091e619161a20f54ed4e3e2da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ec57509c36c8b9a23e50b7858dda0c520a2d074","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b2f49a502fa71090d9f4fe29a2f51fe5dff76d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a849a10de5e04d798f7f286a2f1ca174719a617a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21762","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.857","lastModified":"2025-02-27T03:15:16.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narp: use RCU protection in arp_xmit()\n\narp_xmit() can be called without RTNL or RCU protection.\n\nUse RCU protection to avoid potential UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01d1b5c9abcaff29a43f1d17a19c33eec92c7dbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c331718d3389b6c5f6855078ab7171849e016bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a42b69f692165ec39db42d595f4f65a4c8f42e44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9f4dee534eb1b225b0a120395ad9bc2afe164d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f189654459423d4d48bef2d120b4bfba559e6039","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21763","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:16.960","lastModified":"2025-02-27T03:15:16.960","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nneighbour: use RCU protection in __neigh_notify()\n\n__neigh_notify() can be called without RTNL or RCU protection.\n\nUse RCU protection to avoid potential UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1cbb2aa90cd3fba15ad7efb5cdda28f3d1082379","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/559307d25235e24b5424778c7332451b6c741159","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/784eb2376270e086f7db136d154b8404edacf97b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/becbd5850c03ed33b232083dd66c6e38c0c0e569","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdd5c2a12ddad8a77ce1838ff9f29aa587de82df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21764","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.063","lastModified":"2025-02-27T03:15:17.063","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nndisc: use RCU protection in ndisc_alloc_skb()\n\nndisc_alloc_skb() can be called without RTNL or RCU being held.\n\nAdd RCU protection to avoid possible UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c2d705f5adf5d860aaef90cb4211c0fde2ba66d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/628e6d18930bbd21f2d4562228afe27694f66da9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e0ec817eb41a55327a46cd3ce331a9868d60304","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbec88e4108e8d6fb468d3817fa652140a44ff28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd1065f92eb7ff21b9ba5308a86f33d1670bf926","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21765","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.173","lastModified":"2025-02-27T03:15:17.173","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: use RCU protection in ip6_default_advmss()\n\nip6_default_advmss() needs rcu protection to make\nsure the net structure it reads does not disappear."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c8ffcd248da34fc41e52a46e51505900115fc2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4176a68b0db8fc74ac14fcd00ba8231371051dc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/550ed693f47370502a71b85382e7f9e6417300b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/713a40c892f40300d63691d9f85b2a23b48fe1e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84212387caadb211cd9dadd6fd5563bd37dc1f5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21766","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.273","lastModified":"2025-02-27T03:15:17.273","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: use RCU protection in __ip_rt_update_pmtu()\n\n__ip_rt_update_pmtu() must use RCU protection to make\nsure the net structure it reads does not disappear."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/139512191bd06f1b496117c76372b2ce372c9a41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4583748b65dee4d61bd50a2214715b4237bc152a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b1766d1ff5fe496aabe9fc5f4e34e53f35c11c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a39f61d212d822b3062d7f70fa0588e50e55664e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea07480b23225942208f1b754fea1e7ec486d37e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21767","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.383","lastModified":"2025-02-27T03:15:17.383","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclocksource: Use migrate_disable() to avoid calling get_random_u32() in atomic context\n\nThe following bug report happened with a PREEMPT_RT kernel:\n\n  BUG: sleeping function called from invalid context at kernel\/locking\/spinlock_rt.c:48\n  in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 2012, name: kwatchdog\n  preempt_count: 1, expected: 0\n  RCU nest depth: 0, expected: 0\n  get_random_u32+0x4f\/0x110\n  clocksource_verify_choose_cpus+0xab\/0x1a0\n  clocksource_verify_percpu.part.0+0x6b\/0x330\n  clocksource_watchdog_kthread+0x193\/0x1a0\n\nIt is due to the fact that clocksource_verify_choose_cpus() is invoked with\npreemption disabled.  This function invokes get_random_u32() to obtain\nrandom numbers for choosing CPUs.  The batched_entropy_32 local lock and\/or\nthe base_crng.lock spinlock in driver\/char\/random.c will be acquired during\nthe call. In PREEMPT_RT kernel, they are both sleeping locks and so cannot\nbe acquired in atomic context.\n\nFix this problem by using migrate_disable() to allow smp_processor_id() to\nbe reliably used without introducing atomic context. preempt_disable() is\nthen called after clocksource_verify_choose_cpus() but before the\nclocksource measurement is being run to avoid introducing unexpected\nlatency."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fb534187d2355f6c8f995321e76d1ccd1262ac1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bb05a33337b2c842373857b63de5c9bf1ae2a09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/852805b6cbdb69c298a8fc9fbe79994c95106e04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8783ceeee797d9aa9cfe150690fb9d0bac8cc459","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc3d79e7c806cb57d71c28a4a35e7d7fb3265faa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21768","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.480","lastModified":"2025-02-27T03:15:17.480","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: fix dst ref loops in rpl, seg6 and ioam6 lwtunnels\n\nSome lwtunnels have a dst cache for post-transformation dst.\nIf the packet destination did not change we may end up recording\na reference to the lwtunnel in its own cache, and the lwtunnel\nstate will never be freed.\n\nDiscovered by the ioam6.sh test, kmemleak was recently fixed\nto catch per-cpu memory leaks. I'm not sure if rpl and seg6\ncan actually hit this, but in principle I don't see why not."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c0f200c7d06fedddde82209c099014d63f4a6c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ab11a4e219e93b8b31a27f8ec98d42afadd8b7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92191dd1073088753821b862b791dcc83e558e07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21769","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.580","lastModified":"2025-02-27T03:15:17.580","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nptp: vmclock: Add .owner to vmclock_miscdev_fops\n\nWithout the .owner field, the module can be unloaded while \/dev\/vmclock0\nis open, leading to an oops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b5709225b43ee33e1026dd1fc0949a7f19b5289","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b07b040257c1b658ef3eca86e4b6ae02d65069c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21770","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.677","lastModified":"2025-02-27T03:15:17.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu: Fix potential memory leak in iopf_queue_remove_device()\n\nThe iopf_queue_remove_device() helper removes a device from the per-iommu\niopf queue when PRI is disabled on the device. It responds to all\noutstanding iopf's with an IOMMU_PAGE_RESP_INVALID code and detaches the\ndevice from the queue.\n\nHowever, it fails to release the group structure that represents a group\nof iopf's awaiting for a response after responding to the hardware. This\ncan cause a memory leak if iopf_queue_remove_device() is called with\npending iopf's.\n\nFix it by calling iopf_free_group() after the iopf group is responded."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/90d5429cd2921ca2714684ed525898d431bb9283","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9759ae2cee7cd42b95f1c48aa3749bd02b5ddb08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db60d2d896a17decd58d143eef92cf22eb0a0176","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21771","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.767","lastModified":"2025-02-27T03:15:17.767","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched_ext: Fix incorrect autogroup migration detection\n\nscx_move_task() is called from sched_move_task() and tells the BPF scheduler\nthat cgroup migration is being committed. sched_move_task() is used by both\ncgroup and autogroup migrations and scx_move_task() tried to filter out\nautogroup migrations by testing the destination cgroup and PF_EXITING but\nthis is not enough. In fact, without explicitly tagging the thread which is\ndoing the cgroup migration, there is no good way to tell apart\nscx_move_task() invocations for racing migration to the root cgroup and an\nautogroup migration.\n\nThis led to scx_move_task() incorrectly ignoring a migration from non-root\ncgroup to an autogroup of the root cgroup triggering the following warning:\n\n  WARNING: CPU: 7 PID: 1 at kernel\/sched\/ext.c:3725 scx_cgroup_can_attach+0x196\/0x340\n  ...\n  Call Trace:\n  <TASK>\n    cgroup_migrate_execute+0x5b1\/0x700\n    cgroup_attach_task+0x296\/0x400\n    __cgroup_procs_write+0x128\/0x140\n    cgroup_procs_write+0x17\/0x30\n    kernfs_fop_write_iter+0x141\/0x1f0\n    vfs_write+0x31d\/0x4a0\n    __x64_sys_write+0x72\/0xf0\n    do_syscall_64+0x82\/0x160\n    entry_SYSCALL_64_after_hwframe+0x76\/0x7e\n\nFix it by adding an argument to sched_move_task() that indicates whether the\nmoving is for a cgroup or autogroup migration. After the change,\nscx_move_task() is called only for cgroup migrations and renamed to\nscx_cgroup_move_task()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/75bf2f80c046d2ec5a07455891ea0a9fb6d8b5f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6f3e7d564b2309e1f17e709a70eca78d7ca2bb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8b510d0ddc65d8a71e0f9a3acc9ed5f010fc514","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21772","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.867","lastModified":"2025-02-27T03:15:17.867","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npartitions: mac: fix handling of bogus partition table\n\nFix several issues in partition probing:\n\n - The bailout for a bad partoffset must use put_dev_sector(), since the\n   preceding read_part_sector() succeeded.\n - If the partition table claims a silly sector size like 0xfff bytes\n   (which results in partition table entries straddling sector boundaries),\n   bail out instead of accessing out-of-bounds memory.\n - We must not assume that the partition table contains proper NUL\n   termination - use strnlen() and strncmp() instead of strlen() and\n   strcmp()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27a39d006f85e869be68c1d5d2ce05e5d6445bf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6578717ebca91678131d2b1f4ba4258e60536e9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fa9706722882f634090bfc9af642bf9ed719e27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80e648042e512d5a767da251d44132553fe04ae0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92527100be38ede924768f4277450dfe8a40e16b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21773","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:17.970","lastModified":"2025-02-27T03:15:17.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: etas_es58x: fix potential NULL pointer dereference on udev->serial\n\nThe driver assumed that es58x_dev->udev->serial could never be NULL.\nWhile this is true on commercially available devices, an attacker\ncould spoof the device identity providing a NULL USB serial number.\nThat would trigger a NULL pointer dereference.\n\nAdd a check on es58x_dev->udev->serial before accessing it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1590667a60753ee5a54871f2840ceefd4a7831fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5059ea98d7bc133903d3e47ab36df6ed11d0c95f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/722e8e1219c8b6ac2865011fe339315d6a8d0721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1ad2109ce41c9e3912dadd07ad8a9c640064ffb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21774","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.070","lastModified":"2025-02-27T03:15:18.070","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: rockchip: rkcanfd_handle_rx_fifo_overflow_int(): bail out if skb cannot be allocated\n\nFix NULL pointer check in rkcanfd_handle_rx_fifo_overflow_int() to\nbail out if skb cannot be allocated."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/118fb35681bd2c0d2afa22f7be0ef94bb4d06849","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/946750e7865df2e70045071051abf768785dd570","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7f0adfe64de08803990dc4cbecd2849c04e314a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21775","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.167","lastModified":"2025-02-27T03:15:18.167","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: ctucanfd: handle skb allocation failure\n\nIf skb allocation fails, the pointer to struct can_frame is NULL. This\nis actually handled everywhere inside ctucan_err_interrupt() except for\nthe only place.\n\nAdd the missed NULL check.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE static\nanalysis tool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84b9ac59978a6a4e0812d1c938fad97306272cef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bd24927e3eeb85642c7baa3b28be8bea6c2a078","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0e592dd46a0a952b41c3bf6c963afdd6a42b526","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e505b83b9ee6aa0ae2f4395f573a66579ae403fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7e2e2318b1f085044126ba553a4e619842fc36d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21776","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.263","lastModified":"2025-02-27T03:15:18.263","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: hub: Ignore non-compliant devices with too many configs or interfaces\n\nRobert Morris created a test program which can cause\nusb_hub_to_struct_hub() to dereference a NULL or inappropriate\npointer:\n\nOops: general protection fault, probably for non-canonical address\n0xcccccccccccccccc: 0000 [#1] SMP DEBUG_PAGEALLOC PTI\nCPU: 7 UID: 0 PID: 117 Comm: kworker\/7:1 Not tainted 6.13.0-rc3-00017-gf44d154d6e3d #14\nHardware name: FreeBSD BHYVE\/BHYVE, BIOS 14.0 10\/17\/2021\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:usb_hub_adjust_deviceremovable+0x78\/0x110\n...\nCall Trace:\n <TASK>\n ? die_addr+0x31\/0x80\n ? exc_general_protection+0x1b4\/0x3c0\n ? asm_exc_general_protection+0x26\/0x30\n ? usb_hub_adjust_deviceremovable+0x78\/0x110\n hub_probe+0x7c7\/0xab0\n usb_probe_interface+0x14b\/0x350\n really_probe+0xd0\/0x2d0\n ? __pfx___device_attach_driver+0x10\/0x10\n __driver_probe_device+0x6e\/0x110\n driver_probe_device+0x1a\/0x90\n __device_attach_driver+0x7e\/0xc0\n bus_for_each_drv+0x7f\/0xd0\n __device_attach+0xaa\/0x1a0\n bus_probe_device+0x8b\/0xa0\n device_add+0x62e\/0x810\n usb_set_configuration+0x65d\/0x990\n usb_generic_driver_probe+0x4b\/0x70\n usb_probe_device+0x36\/0xd0\n\nThe cause of this error is that the device has two interfaces, and the\nhub driver binds to interface 1 instead of interface 0, which is where\nusb_hub_to_struct_hub() looks.\n\nWe can prevent the problem from occurring by refusing to accept hub\ndevices that violate the USB spec by having more than one\nconfiguration or interface."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2240fed37afbcdb5e8b627bc7ad986891100e05d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b9778e1fe715700993ce436c152dc3b7df0b490","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62d8f4c5454dd39aded4f343720d1c5a1803cfef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3720b04df84b5459050ae4e03ec7d545652f897","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e905a0fca7bff0855d312c16f71e60e1773b393e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21777","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.377","lastModified":"2025-02-27T03:15:18.377","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nring-buffer: Validate the persistent meta data subbuf array\n\nThe meta data for a mapped ring buffer contains an array of indexes of all\nthe subbuffers. The first entry is the reader page, and the rest of the\nentries lay out the order of the subbuffers in how the ring buffer link\nlist is to be created.\n\nThe validator currently makes sure that all the entries are within the\nrange of 0 and nr_subbufs. But it does not check if there are any\nduplicates.\n\nWhile working on the ring buffer, I corrupted this array, where I added\nduplicates. The validator did not catch it and created the ring buffer\nlink list on top of it. Luckily, the corruption was only that the reader\npage was also in the writer path and only presented corrupted data but did\nnot crash the kernel. But if there were duplicates in the writer side,\nthen it could corrupt the ring buffer link list and cause a crash.\n\nCreate a bitmask array with the size of the number of subbuffers. Then\nclear it. When walking through the subbuf array checking to see if the\nentries are within the range, test if its bit is already set in the\nsubbuf_mask. If it is, then there is duplicates and fail the validation.\nIf not, set the corresponding bit and continue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d547a6f5e8fad26ebc12f501d7d19fccdbad6bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ec743d558f111d8999aea24577ba66c65ee2eeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5b95f1fa2ef3a03f49eeec658ba97e721412b32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21778","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.533","lastModified":"2025-02-27T03:15:18.533","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Do not allow mmap() of persistent ring buffer\n\nWhen trying to mmap a trace instance buffer that is attached to\nreserve_mem, it would crash:\n\n BUG: unable to handle page fault for address: ffffe97bd00025c8\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 2862f3067 P4D 2862f3067 PUD 0\n Oops: Oops: 0000 [#1] PREEMPT_RT SMP PTI\n CPU: 4 UID: 0 PID: 981 Comm: mmap-rb Not tainted 6.14.0-rc2-test-00003-g7f1a5e3fbf9e-dirty #233\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04\/01\/2014\n RIP: 0010:validate_page_before_insert+0x5\/0xb0\n Code: e2 01 89 d0 c3 cc cc cc cc 66 66 2e 0f 1f 84 00 00 00 00 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 0f 1f 44 00 00 <48> 8b 46 08 a8 01 75 67 66 90 48 89 f0 8b 50 34 85 d2 74 76 48 89\n RSP: 0018:ffffb148c2f3f968 EFLAGS: 00010246\n RAX: ffff9fa5d3322000 RBX: ffff9fa5ccff9c08 RCX: 00000000b879ed29\n RDX: ffffe97bd00025c0 RSI: ffffe97bd00025c0 RDI: ffff9fa5ccff9c08\n RBP: ffffb148c2f3f9f0 R08: 0000000000000004 R09: 0000000000000004\n R10: 0000000000000000 R11: 0000000000000200 R12: 0000000000000000\n R13: 00007f16a18d5000 R14: ffff9fa5c48db6a8 R15: 0000000000000000\n FS:  00007f16a1b54740(0000) GS:ffff9fa73df00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffe97bd00025c8 CR3: 00000001048c6006 CR4: 0000000000172ef0\n Call Trace:\n  <TASK>\n  ? __die_body.cold+0x19\/0x1f\n  ? __die+0x2e\/0x40\n  ? page_fault_oops+0x157\/0x2b0\n  ? search_module_extables+0x53\/0x80\n  ? validate_page_before_insert+0x5\/0xb0\n  ? kernelmode_fixup_or_oops.isra.0+0x5f\/0x70\n  ? __bad_area_nosemaphore+0x16e\/0x1b0\n  ? bad_area_nosemaphore+0x16\/0x20\n  ? do_kern_addr_fault+0x77\/0x90\n  ? exc_page_fault+0x22b\/0x230\n  ? asm_exc_page_fault+0x2b\/0x30\n  ? validate_page_before_insert+0x5\/0xb0\n  ? vm_insert_pages+0x151\/0x400\n  __rb_map_vma+0x21f\/0x3f0\n  ring_buffer_map+0x21b\/0x2f0\n  tracing_buffers_mmap+0x70\/0xd0\n  __mmap_region+0x6f0\/0xbd0\n  mmap_region+0x7f\/0x130\n  do_mmap+0x475\/0x610\n  vm_mmap_pgoff+0xf2\/0x1d0\n  ksys_mmap_pgoff+0x166\/0x200\n  __x64_sys_mmap+0x37\/0x50\n  x64_sys_call+0x1670\/0x1d70\n  do_syscall_64+0xbb\/0x1d0\n  entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n\nThe reason was that the code that maps the ring buffer pages to user space\nhas:\n\n\tpage = virt_to_page((void *)cpu_buffer->subbuf_ids[s]);\n\nAnd uses that in:\n\n\tvm_insert_pages(vma, vma->vm_start, pages, &nr_pages);\n\nBut virt_to_page() does not work with vmap()'d memory which is what the\npersistent ring buffer has. It is rather trivial to allow this, but for\nnow just disable mmap() of instances that have their ring buffer from the\nreserve_mem option.\n\nIf an mmap() is performed on a persistent buffer it will return -ENODEV\njust like it would if the .mmap field wasn't defined in the\nfile_operations structure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/129fe718819cc5e24ea2f489db9ccd4371f0c6f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf5aa560e5c7628b57c928741d7e6a9a0f6f0e67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8dff5f73912513fc9b52ab992d861517c9a9975","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21779","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.690","lastModified":"2025-02-27T03:15:18.690","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Reject Hyper-V's SEND_IPI hypercalls if local APIC isn't in-kernel\n\nAdvertise support for Hyper-V's SEND_IPI and SEND_IPI_EX hypercalls if and\nonly if the local API is emulated\/virtualized by KVM, and explicitly reject\nsaid hypercalls if the local APIC is emulated in userspace, i.e. don't rely\non userspace to opt-in to KVM_CAP_HYPERV_ENFORCE_CPUID.\n\nRejecting SEND_IPI and SEND_IPI_EX fixes a NULL-pointer dereference if\nHyper-V enlightenments are exposed to the guest without an in-kernel local\nAPIC:\n\n  dump_stack+0xbe\/0xfd\n  __kasan_report.cold+0x34\/0x84\n  kasan_report+0x3a\/0x50\n  __apic_accept_irq+0x3a\/0x5c0\n  kvm_hv_send_ipi.isra.0+0x34e\/0x820\n  kvm_hv_hypercall+0x8d9\/0x9d0\n  kvm_emulate_hypercall+0x506\/0x7e0\n  __vmx_handle_exit+0x283\/0xb60\n  vmx_handle_exit+0x1d\/0xd0\n  vcpu_enter_guest+0x16b0\/0x24c0\n  vcpu_run+0xc0\/0x550\n  kvm_arch_vcpu_ioctl_run+0x170\/0x6d0\n  kvm_vcpu_ioctl+0x413\/0xb20\n  __se_sys_ioctl+0x111\/0x160\n  do_syscal1_64+0x30\/0x40\n  entry_SYSCALL_64_after_hwframe+0x67\/0xd1\n\nNote, checking the sending vCPU is sufficient, as the per-VM irqchip_mode\ncan't be modified after vCPUs are created, i.e. if one vCPU has an\nin-kernel local APIC, then all vCPUs have an in-kernel local APIC."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5393cf22312418262679eaadb130d608c75fe690","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/874ff13c73c45ecb38cb82191e8c1d523f0dc81b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8de7f100bb5989d9c3627d3a223ee1c863f3b69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aca8be4403fb90db7adaf63830e27ebe787a76e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca29f58ca374c40a0e69c5306fc5c940a0069074","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21780","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.827","lastModified":"2025-02-27T03:15:18.827","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: avoid buffer overflow attach in smu_sys_set_pp_table()\n\nIt malicious user provides a small pptable through sysfs and then\na bigger pptable, it may cause buffer overflow attack in function\nsmu_sys_set_pp_table()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1abb2648698bf10783d2236a6b4a7ca5e8021699","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/231075c5a8ea54f34b7c4794687baa980814e6de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2498d2db1d35e88a2060ea191ae75dce853dd084","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3484ea33157bc7334f57e64826ec5a4bf992151a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e43a8b9c4d700ffec819c5043a48769b3e7d9cab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21781","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:18.947","lastModified":"2025-02-27T03:15:18.947","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: fix panic during interface removal\n\nReference counting is used to ensure that\nbatadv_hardif_neigh_node and batadv_hard_iface\nare not freed before\/during\nbatadv_v_elp_throughput_metric_update work is\nfinished.\n\nBut there isn't a guarantee that the hard if will\nremain associated with a soft interface up until\nthe work is finished.\n\nThis fixes a crash triggered by reboot that looks\nlike this:\n\nCall trace:\n batadv_v_mesh_free+0xd0\/0x4dc [batman_adv]\n batadv_v_elp_throughput_metric_update+0x1c\/0xa4\n process_one_work+0x178\/0x398\n worker_thread+0x2e8\/0x4d0\n kthread+0xd8\/0xdc\n ret_from_fork+0x10\/0x20\n\n(the batadv_v_mesh_free call is misleading,\nand does not actually happen)\n\nI was able to make the issue happen more reliably\nby changing hardif_neigh->bat_v.metric_work work\nto be delayed work. This allowed me to track down\nand confirm the fix.\n\n[sven@narfation.org: prevent entering batadv_v_elp_get_throughput without\n soft_iface]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/072b2787321903287a126c148e8db87dd7ef96fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c3fb7df4cc6d043f70d4a8a10f8b915bbfb75e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/522b1596ea19e327853804da2de60aeb9c5d6f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7eb5dd201695645af071592a50026eb780081a72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccb7276a6d26d6f8416e315b43b45e15ee7f29e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21782","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.050","lastModified":"2025-02-27T03:15:19.050","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\norangefs: fix a oob in orangefs_debug_write\n\nI got a syzbot report: slab-out-of-bounds Read in\norangefs_debug_write... several people suggested fixes,\nI tested Al Viro's suggestion and made this patch."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c5244299241cf49d8ae7b5054e299cc8faa4e09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1da2697307dad281dd690a19441b5ca4af92d786","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b84a231910cef2e0a16d29294afabfb69112087","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/897f496b946fdcfab5983c983e4b513ab6682364","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7c848431632598ff9bce57a659db6af60d75b39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21783","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.150","lastModified":"2025-02-27T03:15:19.150","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: Fix crash on error in gpiochip_get_ngpios()\n\nThe gpiochip_get_ngpios() uses chip_*() macros to print messages.\nHowever these macros rely on gpiodev to be initialised and set,\nwhich is not the case when called via bgpio_init(). In such a case\nthe printing messages will crash on NULL pointer dereference.\nReplace chip_*() macros by the respective dev_*() ones to avoid\nsuch crash."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/189fb76215e479c10731baabb50f1a352d2078f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d9b2b62e1136d10f661ec4c0c268140b6f74f4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b4aebeecbbd5b5fe73e35fad3f62ed21aa7ef44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7052afa9eae2239e25943baa8817a6a56e8aa68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21784","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.247","lastModified":"2025-02-27T03:15:19.247","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: bail out when failed to load fw in psp_init_cap_microcode()\n\nIn function psp_init_cap_microcode(), it should bail out when failed to\nload firmware, otherwise it may cause invalid memory access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f40a7ff39d9f1d283d5aa9b13e2fb16200aff5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0a455b4bc7483ad60e8b8a50330c1e05bb7bfcf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1d10bd595539ed82ab59b60249f9bdf0994f678","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7eb84384335e2abf960c94ec0f8c5b835283777","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21785","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.350","lastModified":"2025-02-27T03:15:19.350","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: cacheinfo: Avoid out-of-bounds write to cacheinfo array\n\nThe loop that detects\/populates cache information already has a bounds\ncheck on the array size but does not account for cache levels with\nseparate data\/instructions cache. Fix this by incrementing the index\nfor any populated leaf (instead of any populated level)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ff25f0b18d1d0174c105e4620428bcdc1213860","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67b99a2b5811df4294c2ad50f9bff3b6a08bd618","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/715eb1af64779e1b1aa0a7b2ffb81414d9f708e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/875d742cf5327c93cba1f11e12b08d3cce7a88d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab90894f33c15b14c1cee6959ab6c8dcb09127f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21786","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.450","lastModified":"2025-02-27T03:15:19.450","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nworkqueue: Put the pwq after detaching the rescuer from the pool\n\nThe commit 68f83057b913(\"workqueue: Reap workers via kthread_stop() and\nremove detach_completion\") adds code to reap the normal workers but\nmistakenly does not handle the rescuer and also removes the code waiting\nfor the rescuer in put_unbound_pool(), which caused a use-after-free bug\nreported by Cheung Wall.\n\nTo avoid the use-after-free bug, the pool’s reference must be held until\nthe detachment is complete. Therefore, move the code that puts the pwq\nafter detaching the rescuer from the pool."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/835b69c868f53f959d4986bbecd561ba6f38e492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e76946110137703c16423baf6ee177b751a34b7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7c16028a424dd35be1064a68fa318be4359310f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21787","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.553","lastModified":"2025-02-27T03:15:19.553","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nteam: better TEAM_OPTION_TYPE_STRING validation\n\nsyzbot reported following splat [1]\n\nMake sure user-provided data contains one nul byte.\n\n[1]\n BUG: KMSAN: uninit-value in string_nocheck lib\/vsprintf.c:633 [inline]\n BUG: KMSAN: uninit-value in string+0x3ec\/0x5f0 lib\/vsprintf.c:714\n  string_nocheck lib\/vsprintf.c:633 [inline]\n  string+0x3ec\/0x5f0 lib\/vsprintf.c:714\n  vsnprintf+0xa5d\/0x1960 lib\/vsprintf.c:2843\n  __request_module+0x252\/0x9f0 kernel\/module\/kmod.c:149\n  team_mode_get drivers\/net\/team\/team_core.c:480 [inline]\n  team_change_mode drivers\/net\/team\/team_core.c:607 [inline]\n  team_mode_option_set+0x437\/0x970 drivers\/net\/team\/team_core.c:1401\n  team_option_set drivers\/net\/team\/team_core.c:375 [inline]\n  team_nl_options_set_doit+0x1339\/0x1f90 drivers\/net\/team\/team_core.c:2662\n  genl_family_rcv_msg_doit net\/netlink\/genetlink.c:1115 [inline]\n  genl_family_rcv_msg net\/netlink\/genetlink.c:1195 [inline]\n  genl_rcv_msg+0x1214\/0x12c0 net\/netlink\/genetlink.c:1210\n  netlink_rcv_skb+0x375\/0x650 net\/netlink\/af_netlink.c:2543\n  genl_rcv+0x40\/0x60 net\/netlink\/genetlink.c:1219\n  netlink_unicast_kernel net\/netlink\/af_netlink.c:1322 [inline]\n  netlink_unicast+0xf52\/0x1260 net\/netlink\/af_netlink.c:1348\n  netlink_sendmsg+0x10da\/0x11e0 net\/netlink\/af_netlink.c:1892\n  sock_sendmsg_nosec net\/socket.c:718 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:733\n  ____sys_sendmsg+0x877\/0xb60 net\/socket.c:2573\n  ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2627\n  __sys_sendmsg net\/socket.c:2659 [inline]\n  __do_sys_sendmsg net\/socket.c:2664 [inline]\n  __se_sys_sendmsg net\/socket.c:2662 [inline]\n  __x64_sys_sendmsg+0x212\/0x3c0 net\/socket.c:2662\n  x64_sys_call+0x2ed6\/0x3c30 arch\/x86\/include\/generated\/asm\/syscalls_64.h:47\n  do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n  do_syscall_64+0xcd\/0x1e0 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4236bf4716589558cc0f3c3612642b2c2141b04e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4512482e4805dd30bc77dec511f2a2edba5cb868","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bef3ac184b5626ea62385d6b82a1992b89d7940","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8401cade1918281177974b32c925afdce750d292","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d071a91fa614ecdf760c29f61f6a7bfb7df796d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.663","lastModified":"2025-02-27T03:15:19.663","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: ti: am65-cpsw: fix memleak in certain XDP cases\n\nIf the XDP program doesn't result in XDP_PASS then we leak the\nmemory allocated by am65_cpsw_build_skb().\n\nIt is pointless to allocate SKB memory before running the XDP\nprogram as we would be wasting CPU cycles for cases other than XDP_PASS.\nMove the SKB allocation after evaluating the XDP program result.\n\nThis fixes the memleak. A performance boost is seen for XDP_DROP test.\n\nXDP_DROP test:\nBefore: 460256 rx\/s                  0 err\/s\nAfter:  784130 rx\/s                  0 err\/s"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bba1d042107167164a0ae3a843fdf650ab005d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5db843258de1e4e6b1ef1cbd1797923c9e3de548","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc11f049612b9d926aca2e55f8dc9d82850d0da3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21789","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.763","lastModified":"2025-02-27T03:15:19.763","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nLoongArch: csum: Fix OoB access in IP checksum code for negative lengths\n\nCommit 69e3a6aa6be2 (\"LoongArch: Add checksum optimization for 64-bit\nsystem\") would cause an undefined shift and an out-of-bounds read.\n\nCommit 8bd795fedb84 (\"arm64: csum: Fix OoB access in IP checksum code\nfor negative lengths\") fixes the same issue on ARM64."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6287f1a8c16138c2ec750953e35039634018c84a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/964a8895704a22efc06a2a3276b624a5ae985a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f15a8df542c0f08732a67d1a14ee7c22948fb97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6508ffff32b44b6d0de06704034e4eef1c307a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21790","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.870","lastModified":"2025-02-27T03:15:19.870","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvxlan: check vxlan_vnigroup_init() return value\n\nvxlan_init() must check vxlan_vnigroup_init() success\notherwise a crash happens later, spotted by syzbot.\n\nOops: general protection fault, probably for non-canonical address 0xdffffc000000002c: 0000 [#1] PREEMPT SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000160-0x0000000000000167]\nCPU: 0 UID: 0 PID: 7313 Comm: syz-executor147 Not tainted 6.14.0-rc1-syzkaller-00276-g69b54314c975 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n RIP: 0010:vxlan_vnigroup_uninit+0x89\/0x500 drivers\/net\/vxlan\/vxlan_vnifilter.c:912\nCode: 00 48 8b 44 24 08 4c 8b b0 98 41 00 00 49 8d 86 60 01 00 00 48 89 c2 48 89 44 24 10 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 4d 04 00 00 49 8b 86 60 01 00 00 48 ba 00 00 00\nRSP: 0018:ffffc9000cc1eea8 EFLAGS: 00010202\nRAX: dffffc0000000000 RBX: 0000000000000001 RCX: ffffffff8672effb\nRDX: 000000000000002c RSI: ffffffff8672ecb9 RDI: ffff8880461b4f18\nRBP: ffff8880461b4ef4 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000020000\nR13: ffff8880461b0d80 R14: 0000000000000000 R15: dffffc0000000000\nFS:  00007fecfa95d6c0(0000) GS:ffff88806a600000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fecfa95cfb8 CR3: 000000004472c000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n  vxlan_uninit+0x1ab\/0x200 drivers\/net\/vxlan\/vxlan_core.c:2942\n  unregister_netdevice_many_notify+0x12d6\/0x1f30 net\/core\/dev.c:11824\n  unregister_netdevice_many net\/core\/dev.c:11866 [inline]\n  unregister_netdevice_queue+0x307\/0x3f0 net\/core\/dev.c:11736\n  register_netdevice+0x1829\/0x1eb0 net\/core\/dev.c:10901\n  __vxlan_dev_create+0x7c6\/0xa30 drivers\/net\/vxlan\/vxlan_core.c:3981\n  vxlan_newlink+0xd1\/0x130 drivers\/net\/vxlan\/vxlan_core.c:4407\n  rtnl_newlink_create net\/core\/rtnetlink.c:3795 [inline]\n  __rtnl_newlink net\/core\/rtnetlink.c:3906 [inline]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3215f5aafc49aaa993991633833854694e73b439","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5805402dcc56241987bca674a1b4da79a249bab7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79aea5e55156c87dc570e43fcd8bba01b9d6ab3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a303649b99b64858d62ce7428125d8e71675d2b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e860f847787fbbf0d8dacd638c019c7c3d4a9bd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21791","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:19.970","lastModified":"2025-02-27T03:15:19.970","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvrf: use RCU protection in l3mdev_l3_out()\n\nl3mdev_l3_out() can be called without RCU being held:\n\nraw_sendmsg()\n ip_push_pending_frames()\n  ip_send_skb()\n   ip_local_out()\n    __ip_local_out()\n     l3mdev_ip_out()\n\nAdd rcu_read_lock() \/ rcu_read_unlock() pair to avoid\na potential UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/022cac1c693add610ae76ede03adf4d9d5a2cf21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d0ce46a93135d96b7fa075a94a88fe0da8e8773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b81425b517accefd46bee854d94954f5c57e019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c40cb5c03e37552d6eff963187109e2c3f78ef6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7574740be8ce68a57d0aece24987b9be2114c3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21792","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.080","lastModified":"2025-02-27T03:15:20.080","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix refcount leak caused by setting SO_BINDTODEVICE sockopt\n\nIf an AX25 device is bound to a socket by setting the SO_BINDTODEVICE\nsocket option, a refcount leak will occur in ax25_release().\n\nCommit 9fd75b66b8f6 (\"ax25: Fix refcount leaks caused by ax25_cb_del()\")\nadded decrement of device refcounts in ax25_release(). In order for that\nto work correctly the refcounts must already be incremented when the\ndevice is bound to the socket. An AX25 device can be bound to a socket\nby either calling ax25_bind() or setting SO_BINDTODEVICE socket option.\nIn both cases the refcounts should be incremented, but in fact it is done\nonly in ax25_bind().\n\nThis bug leads to the following issue reported by Syzkaller:\n\n================================================================\nrefcount_t: decrement hit 0; leaking memory.\nWARNING: CPU: 1 PID: 5932 at lib\/refcount.c:31 refcount_warn_saturate+0x1ed\/0x210 lib\/refcount.c:31\nModules linked in:\nCPU: 1 UID: 0 PID: 5932 Comm: syz-executor424 Not tainted 6.13.0-rc4-syzkaller-00110-g4099a71718b0 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\nRIP: 0010:refcount_warn_saturate+0x1ed\/0x210 lib\/refcount.c:31\nCall Trace:\n <TASK>\n __refcount_dec include\/linux\/refcount.h:336 [inline]\n refcount_dec include\/linux\/refcount.h:351 [inline]\n ref_tracker_free+0x710\/0x820 lib\/ref_tracker.c:236\n netdev_tracker_free include\/linux\/netdevice.h:4156 [inline]\n netdev_put include\/linux\/netdevice.h:4173 [inline]\n netdev_put include\/linux\/netdevice.h:4169 [inline]\n ax25_release+0x33f\/0xa10 net\/ax25\/af_ax25.c:1069\n __sock_release+0xb0\/0x270 net\/socket.c:640\n sock_close+0x1c\/0x30 net\/socket.c:1408\n ...\n do_syscall_x64 arch\/x86\/entry\/common.c:52 [inline]\n do_syscall_64+0xcd\/0x250 arch\/x86\/entry\/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77\/0x7f\n ...\n <\/TASK>\n================================================================\n\nFix the implementation of ax25_setsockopt() by adding increment of\nrefcounts for the new device bound, and decrement of refcounts for\nthe old unbound device."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/470bda72fda0fcf54300466d70ce2de62f7835d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90056ece99966182dc0e367f3fd2afab46ada847","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94a0de224ed52eb2ecd4f4cb1b937b674c9fb955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b58f7ca86a7b8e480c06e30c5163c5d2f4e24023","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bca0902e61731a75fc4860c8720168d9f1bae3b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21793","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.190","lastModified":"2025-02-27T03:15:20.190","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: sn-f-ospi: Fix division by zero\n\nWhen there is no dummy cycle in the spi-nor commands, both dummy bus cycle\nbytes and width are zero. Because of the cpu's warning when divided by\nzero, the warning should be avoided. Return just zero to avoid such\ncalculations."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3588b1c0fde2f58d166e3f94a5a58d64b893526c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4df6f005bef04a3dd16c028124a1b5684db3922b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7434135553bc03809a55803ee6a8dcaae6240d55","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/966328191b4c389c0f2159fa242915f51cbc1679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21794","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.293","lastModified":"2025-02-27T03:15:20.293","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hid-thrustmaster: fix stack-out-of-bounds read in usb_check_int_endpoints()\n\nSyzbot[1] has detected a stack-out-of-bounds read of the ep_addr array from\nhid-thrustmaster driver. This array is passed to usb_check_int_endpoints\nfunction from usb.c core driver, which executes a for loop that iterates\nover the elements of the passed array. Not finding a null element at the end of\nthe array, it tries to read the next, non-existent element, crashing the kernel.\n\nTo fix this, a 0 element was added at the end of the array to break the for\nloop.\n\n[1] https:\/\/syzkaller.appspot.com\/bug?extid=9c9179ac46169c56c1ad"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b43d98ff29be3144e86294486b1373b5df74c0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/436f48c864186e9413d1b7c6e91767cc9e1a65b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73e36a699b9f46322ffb81f072a24e64f728dba7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cdd9a1ea23ff1a272547217100663e8de4eada40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3ce05283f6cb6e19c220f5382def43dc5bd56b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21795","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.390","lastModified":"2025-02-27T03:15:20.390","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSD: fix hang in nfsd4_shutdown_callback\n\nIf nfs4_client is in courtesy state then there is no point to send\nthe callback. This causes nfsd4_shutdown_callback to hang since\ncl_cb_inflight is not 0. This hang lasts about 15 minutes until TCP\nnotifies NFSD that the connection was dropped.\n\nThis patch modifies nfsd4_run_cb_work to skip the RPC call if\nnfs4_client is in courtesy state."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/036ac2778f7b28885814c6fbc07e156ad1624d03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23ad7797c74cd8f7f90617f1e59a8703e2b43908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38d345f612503b850c2973e5a879f88e441b34d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cedfbb92cf97a6bff3d25633001d9c44442ee854","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e88d2451cd42e025465d6b51fd716a47b0b3800d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21796","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.497","lastModified":"2025-02-27T03:15:20.497","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: clear acl_access\/acl_default after releasing them\n\nIf getting acl_default fails, acl_access and acl_default will be released\nsimultaneously. However, acl_access will still retain a pointer pointing\nto the released posix_acl, which will trigger a WARNING in\nnfs3svc_release_getacl like this:\n\n------------[ cut here ]------------\nrefcount_t: underflow; use-after-free.\nWARNING: CPU: 26 PID: 3199 at lib\/refcount.c:28\nrefcount_warn_saturate+0xb5\/0x170\nModules linked in:\nCPU: 26 UID: 0 PID: 3199 Comm: nfsd Not tainted\n6.12.0-rc6-00079-g04ae226af01f-dirty #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n1.16.1-2.fc37 04\/01\/2014\nRIP: 0010:refcount_warn_saturate+0xb5\/0x170\nCode: cc cc 0f b6 1d b3 20 a5 03 80 fb 01 0f 87 65 48 d8 00 83 e3 01 75\ne4 48 c7 c7 c0 3b 9b 85 c6 05 97 20 a5 03 01 e8 fb 3e 30 ff <0f> 0b eb\ncd 0f b6 1d 8a3\nRSP: 0018:ffffc90008637cd8 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff83904fde\nRDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff88871ed36380\nRBP: ffff888158beeb40 R08: 0000000000000001 R09: fffff520010c6f56\nR10: ffffc90008637ab7 R11: 0000000000000001 R12: 0000000000000001\nR13: ffff888140e77400 R14: ffff888140e77408 R15: ffffffff858b42c0\nFS:  0000000000000000(0000) GS:ffff88871ed00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000562384d32158 CR3: 000000055cc6a000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n ? refcount_warn_saturate+0xb5\/0x170\n ? __warn+0xa5\/0x140\n ? refcount_warn_saturate+0xb5\/0x170\n ? report_bug+0x1b1\/0x1e0\n ? handle_bug+0x53\/0xa0\n ? exc_invalid_op+0x17\/0x40\n ? asm_exc_invalid_op+0x1a\/0x20\n ? tick_nohz_tick_stopped+0x1e\/0x40\n ? refcount_warn_saturate+0xb5\/0x170\n ? refcount_warn_saturate+0xb5\/0x170\n nfs3svc_release_getacl+0xc9\/0xe0\n svc_process_common+0x5db\/0xb60\n ? __pfx_svc_process_common+0x10\/0x10\n ? __rcu_read_unlock+0x69\/0xa0\n ? __pfx_nfsd_dispatch+0x10\/0x10\n ? svc_xprt_received+0xa1\/0x120\n ? xdr_init_decode+0x11d\/0x190\n svc_process+0x2a7\/0x330\n svc_handle_xprt+0x69d\/0x940\n svc_recv+0x180\/0x2d0\n nfsd+0x168\/0x200\n ? __pfx_nfsd+0x10\/0x10\n kthread+0x1a2\/0x1e0\n ? kthread+0xf4\/0x1e0\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x34\/0x60\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>\nKernel panic - not syncing: kernel: panic_on_warn set ...\n\nClear acl_access\/acl_default after posix_acl_release is called to prevent\nUAF from being triggered."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fd94884174bd20beb1773990fd3b1aa877688d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e59b2b68782519560b3d6a41dd66a3d01a01cd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55d947315fb5f67a35e4e1d3e01bb886b9c6decf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7faf14a7b0366f153284db0ad3347c457ea70136","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8d871523142f7895f250a856f8c4a4181614510","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2025-21797","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2025-02-27T03:15:20.607","lastModified":"2025-02-27T03:15:20.607","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: corsair-void: Add missing delayed work cancel for headset status\n\nThe cancel_delayed_work_sync() call was missed, causing a use-after-free\nin corsair_void_remove()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dcb56a0a4da6946f6c18288da595c13e0d2af86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48e487b002891eb0aeaec704c9bed51f028deff1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-13647","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T05:15:13.430","lastModified":"2025-02-27T05:15:13.430","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The School Management System – SakolaWP plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.0.8. This is due to missing or incorrect nonce validation on the 'save_exam_setting' and 'delete_exam_setting' actions. This makes it possible for unauthenticated attackers to update exam settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/wordpress.org\/plugins\/sakolawp-lite\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/6a5db3fc-6ae4-4566-8610-687cb725cf6e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13905","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T05:15:13.610","lastModified":"2025-02-27T05:15:13.610","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The OneStore Sites plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 0.1.1 via the class-export.php file. This makes it possible for unauthenticated attackers to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":5.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":3.9,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/onestore-sites\/trunk\/classess\/class-export.php#L3","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/f2c70d5f-beb3-480e-8ea8-c3ab01ce5a20?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-2321","sourceIdentifier":"ed10eef1-636d-4fbe-9993-6890dfa878f8","published":"2025-02-27T05:15:13.797","lastModified":"2025-02-27T05:15:13.797","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"An incorrect authorization vulnerability exists in multiple WSO2 products, allowing protected APIs to be accessed directly using a refresh token instead of the expected access token. Due to improper authorization checks and token mapping, session cookies are not required for API access, potentially enabling unauthorized operations.\n\nExploitation requires an attacker to obtain a valid refresh token of an admin user. Since refresh tokens generally have a longer expiration time, this could lead to prolonged unauthorized access to API resources, impacting data confidentiality and integrity."}],"metrics":{"cvssMetricV31":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","baseScore":5.6,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":3.4}]},"weaknesses":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","description":[{"lang":"en","value":"CWE-863"}]}],"references":[{"url":"https:\/\/security.docs.wso2.com\/en\/latest\/security-announcements\/security-advisories\/2024\/WSO2-2024-3213\/","source":"ed10eef1-636d-4fbe-9993-6890dfa878f8"}]}},{"cve":{"id":"CVE-2025-0469","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T05:15:13.950","lastModified":"2025-02-27T05:15:13.950","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Forminator Forms – Contact Form, Payment Form & Custom Form Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the slider template data in all versions up to, and including, 1.39.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/forminator\/tags\/1.39.2\/assets\/forminator-ui\/js\/forminator-form.js#L888","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/14043276-ba0a-4862-a1a7-00b4c372c5bc?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1686","sourceIdentifier":"report@snyk.io","published":"2025-02-27T05:15:14.143","lastModified":"2025-02-27T05:15:14.143","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"All versions of the package io.pebbletemplates:pebble are vulnerable to External Control of File Name or Path via the include tag. A high privileged attacker can access sensitive local files by crafting malicious notification templates that leverage this tag to include files like \/etc\/passwd or \/proc\/1\/environ.\r\r Workaround\r\rThis vulnerability can be mitigated by disabling the include macro in Pebble Templates:\r\rjava\rnew PebbleEngine.Builder()\r            .registerExtensionCustomizer(new DisallowExtensionCustomizerBuilder()\r                    .disallowedTokenParserTags(List.of(\"include\"))\r                    .build())\r            .build();"}],"metrics":{"cvssMetricV40":[{"source":"report@snyk.io","type":"Secondary","cvssData":{"version":"4.0","vectorString":"CVSS:4.0\/AV:N\/AC:L\/AT:N\/PR:H\/UI:N\/VC:N\/VI:N\/VA:N\/SC:H\/SI:N\/SA:N\/E:P\/CR:X\/IR:X\/AR:X\/MAV:X\/MAC:X\/MAT:X\/MPR:X\/MUI:X\/MVC:X\/MVI:X\/MVA:X\/MSC:X\/MSI:X\/MSA:X\/S:X\/AU:X\/R:X\/V:X\/RE:X\/U:X","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","attackRequirements":"NONE","privilegesRequired":"HIGH","userInteraction":"NONE","vulnConfidentialityImpact":"NONE","vulnIntegrityImpact":"NONE","vulnAvailabilityImpact":"NONE","subConfidentialityImpact":"HIGH","subIntegrityImpact":"NONE","subAvailabilityImpact":"NONE","exploitMaturity":"PROOF_OF_CONCEPT","confidentialityRequirement":"NOT_DEFINED","integrityRequirement":"NOT_DEFINED","availabilityRequirement":"NOT_DEFINED","modifiedAttackVector":"NOT_DEFINED","modifiedAttackComplexity":"NOT_DEFINED","modifiedAttackRequirements":"NOT_DEFINED","modifiedPrivilegesRequired":"NOT_DEFINED","modifiedUserInteraction":"NOT_DEFINED","modifiedVulnConfidentialityImpact":"NOT_DEFINED","modifiedVulnIntegrityImpact":"NOT_DEFINED","modifiedVulnAvailabilityImpact":"NOT_DEFINED","modifiedSubConfidentialityImpact":"NOT_DEFINED","modifiedSubIntegrityImpact":"NOT_DEFINED","modifiedSubAvailabilityImpact":"NOT_DEFINED","Safety":"NOT_DEFINED","Automatable":"NOT_DEFINED","Recovery":"NOT_DEFINED","valueDensity":"NOT_DEFINED","vulnerabilityResponseEffort":"NOT_DEFINED","providerUrgency":"NOT_DEFINED"}}],"cvssMetricV31":[{"source":"report@snyk.io","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:C\/C:H\/I:N\/A:N","baseScore":6.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.3,"impactScore":4.0}]},"weaknesses":[{"source":"report@snyk.io","type":"Secondary","description":[{"lang":"en","value":"CWE-73"}]}],"references":[{"url":"https:\/\/github.com\/PebbleTemplates\/pebble\/issues\/680","source":"report@snyk.io"},{"url":"https:\/\/github.com\/PebbleTemplates\/pebble\/issues\/688","source":"report@snyk.io"},{"url":"https:\/\/pebbletemplates.io\/wiki\/tag\/include","source":"report@snyk.io"},{"url":"https:\/\/security.snyk.io\/vuln\/SNYK-JAVA-IOPEBBLETEMPLATES-8745594","source":"report@snyk.io"}]}},{"cve":{"id":"CVE-2024-2297","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T06:15:21.477","lastModified":"2025-02-27T06:15:21.477","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Bricks theme for WordPress is vulnerable to Privilege Escalation in all versions up to, and including, 1.9.6.1. This is due to insufficient validation checks placed on the create_autosave AJAX function. This makes it possible for authenticated attackers, with contributor-level access and above, to execute arbitrary PHP code with elevated (administrator-level) privileges. NOTE: Successful exploitation requires (1) the Bricks Builder to be enabled for posts (2) Builder access to be enabled for contributor-level users, and (3) \"Code Execution\" to be enabled for administrator-level users within the theme's settings."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:R\/S:U\/C:H\/I:H\/A:H","baseScore":7.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-269"}]}],"references":[{"url":"https:\/\/bricksbuilder.io\/release\/bricks-1-9-7\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/cb075e85-75fc-4008-8270-4d1064ace29e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-6261","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T06:15:21.790","lastModified":"2025-02-27T06:15:21.790","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Image Photo Gallery Final Tiles Grid plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'FinalTilesGallery' shortcode in all versions up to, and including, 3.6.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/final-tiles-grid-gallery-lite\/trunk\/lightbox\/lightbox2\/js\/script.js","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3123808\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/8d945c4b-3eb1-4bab-b355-117b7fd06553?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1295","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T06:15:21.990","lastModified":"2025-02-27T06:15:21.990","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Templines Elementor Helper Core plugin for WordPress is vulnerable to privilege escalation in all versions up to, and including, 2.7. This is due to allowing arbitrary user meta updates. This makes it possible for authenticated attackers, with Subscriber-level access and above, to update their role to Administrator. The vulnerability can only be exploited when the BuddyPress plugin is also installed and activated."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-269"}]}],"references":[{"url":"http:\/\/localhost:1337\/wp-content\/plugins\/templines-helper-core\/youzify\/youzify.php#L3082","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/8c5aa062-b9a2-4ddb-a5bf-4c8368218e85?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-0392","sourceIdentifier":"ed10eef1-636d-4fbe-9993-6890dfa878f8","published":"2025-02-27T07:15:32.243","lastModified":"2025-02-27T07:15:32.243","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A Cross-Site Request Forgery (CSRF) vulnerability exists in the management console of WSO2 Enterprise Integrator 6.6.0 due to the absence of CSRF token validation. This flaw allows attackers to craft malicious requests that can trigger state-changing operations on behalf of an authenticated user, potentially compromising account settings and data integrity. The vulnerability only affects a limited set of state-changing operations, and successful exploitation requires social engineering to trick a user with access to the management console into performing the malicious action."}],"metrics":{"cvssMetricV31":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:L","baseScore":5.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.8,"impactScore":2.5}]},"weaknesses":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","description":[{"lang":"en","value":"CWE-352"}]}],"references":[{"url":"https:\/\/security.docs.wso2.com\/en\/latest\/security-announcements\/security-advisories\/2024\/WSO2-2023-2987\/","source":"ed10eef1-636d-4fbe-9993-6890dfa878f8"}]}},{"cve":{"id":"CVE-2024-13907","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T07:15:33.543","lastModified":"2025-02-27T07:15:33.543","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Total Upkeep – WordPress Backup Plugin plus Restore & Migrate by BoldGrid plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 1.16.8 via the 'download' function. This makes it possible for authenticated attackers, with Administrator-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:N\/A:N","baseScore":4.9,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":1.2,"impactScore":3.6}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-918"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/boldgrid-backup\/trunk\/includes\/class-boldgrid-backup-archive-fetcher.php#L141","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3246655\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/21da92d2-c38d-4a12-b850-bd0b580aaa54?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1689","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T07:15:35.400","lastModified":"2025-02-27T07:15:35.400","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The ThemeMakers PayPal Express Checkout plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'paypal' shortcode in versions up to, and including, 1.1.9 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/ThemeMakers\/tmm_paypal_checkout\/commit\/d6d3b1877ed705ac171cf7e74a6e866fc135ba22","source":"security@wordfence.com"},{"url":"https:\/\/themeforest.net\/item\/car-dealer-automotive-wordpress-theme-responsive\/8574708","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/6390dba6-423b-48be-b5f0-1018d94f4a32?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-5848","sourceIdentifier":"ed10eef1-636d-4fbe-9993-6890dfa878f8","published":"2025-02-27T08:15:30.887","lastModified":"2025-02-27T08:15:30.887","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A reflected cross-site scripting (XSS) vulnerability exists in multiple WSO2 products due to improper input validation. User-supplied data is directly included in server responses from vulnerable service endpoints without proper sanitization or encoding, allowing an attacker to inject malicious JavaScript.\n\nSuccessful exploitation could lead to UI manipulation, redirection to malicious websites, or data exfiltration from the browser. While session-related sensitive cookies are protected with the httpOnly flag, mitigating session hijacking risks, the impact may vary depending on gateway-level service restrictions."}],"metrics":{"cvssMetricV31":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","baseScore":6.1,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"ed10eef1-636d-4fbe-9993-6890dfa878f8","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/security.docs.wso2.com\/en\/latest\/security-announcements\/security-advisories\/2024\/WSO2-2024-3450\/","source":"ed10eef1-636d-4fbe-9993-6890dfa878f8"}]}},{"cve":{"id":"CVE-2025-1717","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T08:15:31.130","lastModified":"2025-02-27T08:15:31.130","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Login Me Now plugin for WordPress is vulnerable to authentication bypass in versions up to, and including, 1.7.2. This is due to insecure authentication based on an arbitrary transient name in the 'AutoLogin::listen()' function. This makes it possible for unauthenticated attackers to log in an existing user on the site, even an administrator. Note: this vulnerability requires using a transient name and value from another software, so the plugin is not inherently vulnerable on it's own."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.1,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.2,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-288"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/login-me-now\/tags\/1.7.2\/app\/Logins\/BrowserTokenLogin\/AutoLogin.php#L24","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/fc689622-50d6-47c4-a5f6-0314b1a207c9?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1282","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T09:15:10.160","lastModified":"2025-02-27T09:15:10.160","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Car Dealer Automotive WordPress Theme – Responsive theme for WordPress is vulnerable to arbitrary file deletion due to insufficient file path validation in the delete_post_photo() and add_car() functions in all versions up to, and including, 1.6.3. This makes it possible for authenticated attackers, with Subscriber-level access and above, to delete arbitrary files on the server, which can easily lead to remote code execution when the right file is deleted (such as wp-config.php). The add_car() function may also make it possible to read arbitrary files."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":8.8,"baseSeverity":"HIGH","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.9}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-22"}]}],"references":[{"url":"https:\/\/themeforest.net\/item\/car-dealer-automotive-wordpress-theme-responsive\/8574708?s_rank=7","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/edf4b588-8b67-425a-b0e1-d4382cb88dd1?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1690","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T09:15:10.697","lastModified":"2025-02-27T09:15:10.697","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The ThemeMakers Stripe Checkout plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'stripe' shortcode in versions up to, and including, 1.0.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers with contributor-level and above permissions to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/ThemeMakers\/tmm_stripe_checkout\/compare\/v1.0.1...v1.0.2","source":"security@wordfence.com"},{"url":"https:\/\/themeforest.net\/item\/car-dealer-automotive-wordpress-theme-responsive\/8574708","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/dd040ff7-7f30-4097-9492-743a9821589e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-13734","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T10:15:09.980","lastModified":"2025-02-27T10:15:09.980","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Card Elements for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's Profile Card widget in all versions up to, and including, 1.2.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3244795\/","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/card-elements-for-elementor\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.techeshta.com\/docs\/card-elements-for-elementor\/element-settings\/profile-card\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/7134bb24-11a1-41f9-ad34-b4527c22463c?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1450","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T10:15:10.677","lastModified":"2025-02-27T10:15:10.677","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Floating Chat Widget: Contact Chat Icons, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button, WhatsApp – Chaty plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘data-hover’ parameter in all versions up to, and including, 3.3.5 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","baseScore":6.4,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/chaty\/tags\/3.3.4\/js\/cht-front-script.js#L389","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/chaty\/tags\/3.3.5\/js\/cht-front-script.min.js","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3246336\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a87d0966-3fd4-46f8-acd5-1cf0cb18af42?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-10918","sourceIdentifier":"prodsec@nozominetworks.com","published":"2025-02-27T12:15:33.807","lastModified":"2025-02-27T12:15:33.807","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"Stack-based Buffer Overflow vulnerability in libmodbus v3.1.10 allows to overflow the buffer allocated for the Modbus response if the function tries to reply to a Modbus request with an\nunexpected length."}],"metrics":{"cvssMetricV31":[{"source":"prodsec@nozominetworks.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:L","baseScore":4.8,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW"},"exploitabilityScore":2.2,"impactScore":2.5}]},"weaknesses":[{"source":"prodsec@nozominetworks.com","type":"Primary","description":[{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/www.nozominetworks.com\/labs\/vulnerability-advisories-cve-2024-10918","source":"prodsec@nozominetworks.com"}]}},{"cve":{"id":"CVE-2024-13217","sourceIdentifier":"security@wordfence.com","published":"2025-02-27T12:15:34.857","lastModified":"2025-02-27T12:15:34.857","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"The Jeg Elementor Kit plugin for WordPress is vulnerable to Sensitive Information Exposure in all versions up to, and including, 2.6.11 via the 'expired_data' and 'build_content' functions. This makes it possible for authenticated attackers, with Contributor-level access and above, to extract sensitive private, pending, scheduled, and draft template data."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:N\/A:N","baseScore":4.3,"baseSeverity":"MEDIUM","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"NONE","availabilityImpact":"NONE"},"exploitabilityScore":2.8,"impactScore":1.4}]},"weaknesses":[{"source":"security@wordfence.com","type":"Primary","description":[{"lang":"en","value":"CWE-359"}]}],"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/jeg-elementor-kit\/trunk\/class\/elements\/views\/class-countdown-view.php#L107","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/jeg-elementor-kit\/trunk\/class\/elements\/views\/class-off-canvas-view.php#L25","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3246154\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/2136cad8-6b0b-4458-a357-6e98f1ac3e0b?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2025-1751","sourceIdentifier":"68e1e1d3-5247-4d65-9f39-ef1a02cf571e","published":"2025-02-27T12:15:35.030","lastModified":"2025-02-27T12:15:35.030","vulnStatus":"Received","cveTags":[],"descriptions":[{"lang":"en","value":"A SQL Injection vulnerability has been found in Ciges 2.15.5 from ATISoluciones. This vulnerability allows an attacker to retrieve, create, update and delete database via $idServicio parameter in \/modules\/ajaxBloqueaCita.php endpoint."}],"metrics":{"cvssMetricV31":[{"source":"68e1e1d3-5247-4d65-9f39-ef1a02cf571e","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","baseScore":9.8,"baseSeverity":"CRITICAL","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"68e1e1d3-5247-4d65-9f39-ef1a02cf571e","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/www.atisoluciones.com\/incidentes-cve","source":"68e1e1d3-5247-4d65-9f39-ef1a02cf571e"}]}}]}