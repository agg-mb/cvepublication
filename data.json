{"resultsPerPage":572,"startIndex":0,"totalResults":572,"format":"NVD_CVE","version":"2.0","timestamp":"2024-05-21T20:11:34.337","vulnerabilities":[{"cve":{"id":"CVE-2024-5107","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T00:15:54.997","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in Campcodes Complete Web-Based School Management System 1.0. This issue affects some unknown processing of the file \/view\/student_payment_details2.php. The manipulation of the argument index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265097 was assigned to this vulnerability."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Este problema afecta un procesamiento desconocido del archivo \/view\/student_paid_details2.php. La manipulación del argumento index conduce a la inyección de SQL. El ataque puede iniciarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265097."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2012.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265097","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265097","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338511","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5108","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T00:15:57.907","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file \/view\/student_payment_details4.php. The manipulation of the argument index leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-265098 is the identifier assigned to this vulnerability."},{"lang":"es","value":" Una vulnerabilidad fue encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Una función desconocida del archivo \/view\/student_paid_details4.php es afectada por esta vulnerabilidad. La manipulación del argumento index conduce a la inyección de SQL. Es posible lanzar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. VDB-265098 es el identificador asignado a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2013.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265098","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265098","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338512","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5109","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T01:15:08.923","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability has been found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file \/view\/student_payment_history.php. The manipulation of the argument index leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265099."},{"lang":"es","value":"Una vulnerabilidad ha sido encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Una función desconocida del archivo \/view\/student_paid_history.php es afectada por esta vulnerabilidad. La manipulación del argumento index conduce a la inyección de SQL. El ataque se puede lanzar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador asociado de esta vulnerabilidad es VDB-265099."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2014.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265099","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265099","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338513","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5110","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.103","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0 and classified as critical. Affected by this issue is some unknown functionality of the file \/view\/student_payment_invoice.php. The manipulation of the argument index leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265100."},{"lang":"es","value":" Una vulnerabilidad fue encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Una función desconocida del archivo \/view\/student_paid_invoice.php es afectada por esta vulnerabilidad. La manipulación del argumento index conduce a la inyección de SQL. El ataque puede lanzarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador de esta vulnerabilidad es VDB-265100."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2015.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265100","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265100","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338514","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5111","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.367","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been classified as critical. This affects an unknown part of the file \/view\/student_payment_invoice1.php. The manipulation of the argument date leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265101 was assigned to this vulnerability."},{"lang":"es","value":" Se encontró una vulnerabilidad en Campcodes Complete Web-Based School Management System 1.0. Ha sido clasificada como crítica. Esto afecta a una parte desconocida del archivo \/view\/student_paid_invoice1.php. La manipulación del argumento date conduce a la inyección de SQL. Es posible iniciar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265101."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2016.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265101","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265101","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338515","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5112","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T02:15:09.613","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been declared as critical. This vulnerability affects unknown code of the file \/view\/student_profile.php. The manipulation of the argument std_index leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265102 is the identifier assigned to this vulnerability."},{"lang":"es","value":"Se encontró una vulnerabilidad en Campcodes Complete Web-Based School Management System 1.0. Ha sido declarada crítica. Esta vulnerabilidad afecta al código desconocido del archivo \/view\/student_profile.php. La manipulación del argumento std_index conduce a la inyección de SQL. El ataque se puede iniciar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. VDB-265102 es el identificador asignado a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2017.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265102","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265102","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338516","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5113","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T03:15:08.867","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in Campcodes Complete Web-Based School Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/view\/student_profile1.php. The manipulation of the argument std_index leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265103."},{"lang":"es","value":"Se encontró una vulnerabilidad en Campcodes Complete Web-Based School Management System 1.0. Ha sido calificada como crítica. Este problema afecta un procesamiento desconocido del archivo \/view\/student_profile1.php. La manipulación del argumento std_index conduce a la inyección de SQL. El ataque puede iniciarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador asociado de esta vulnerabilidad es VDB-265103."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2018.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265103","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265103","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338517","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5114","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T03:15:09.167","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical has been found in Campcodes Complete Web-Based School Management System 1.0. Affected is an unknown function of the file \/view\/teacher_attendance_history1.php. The manipulation of the argument index leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265104."},{"lang":"es","value":" Una vulnerabilidad ha sido encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Una función desconocida del archivo \/view\/teacher_attendance_history1.php es afectada por esta vulnerabilidad. La manipulación del argumento index conduce a la inyección de SQL. Es posible lanzar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador de esta vulnerabilidad es VDB-265104."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2019.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265104","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265104","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338518","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5115","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T04:15:08.747","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as critical was found in Campcodes Complete Web-Based School Management System 1.0. Affected by this vulnerability is an unknown functionality of the file \/view\/teacher_profile.php. The manipulation of the argument index leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265105 was assigned to this vulnerability."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en Campcodes Complete Web-Based School Management System 1.0 y clasificada como crítica. Una función desconocida del archivo \/view\/teacher_profile.php es afectada por esta vulnerabilidad. La manipulación del argumento index conduce a la inyección de SQL. El ataque se puede lanzar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265105."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/E1CHO\/cve_hub\/blob\/main\/Complete%20Web-Based%20School%20Management%20System%20-%20sql\/Complete%20Web-Based%20School%20Management%20System%20-%20vuln%2020.pdf","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265105","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265105","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338519","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5116","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T04:15:09.070","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, has been found in SourceCodester Online Examination System 1.0. Affected by this issue is some unknown functionality of the file save.php. The manipulation of the argument vote leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265196."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en SourceCodester Online Examination System 1.0 y clasificada como crítica. Una función desconocida del archivo save.php es afectada por esta vulnerabilidad. La manipulación del argumento vote conduce a la inyección de SQL. El ataque puede lanzarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador de esta vulnerabilidad es VDB-265196."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/polaris0x1\/CVE\/issues\/3","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265196","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265196","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338578","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5117","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T05:15:10.110","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability, which was classified as critical, was found in SourceCodester Event Registration System 1.0. This affects an unknown part of the file portal.php. The manipulation of the argument username\/password leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265197 was assigned to this vulnerability."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en SourceCodester Event Registration System 1.0 y clasificada como crítica. Una parte desconocida del archivo portal.php afecta a esta vulnerabilidad. La manipulación del argumento username\/password conduce a la inyección de SQL. Es posible iniciar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265197."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265197","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265197","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5118","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T05:15:10.387","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability has been found in SourceCodester Event Registration System 1.0 and classified as critical. This vulnerability affects unknown code of the file \/admin\/login.php. The manipulation of the argument username\/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265198 is the identifier assigned to this vulnerability."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en SourceCodester Event Registration System 1.0 y clasificada como crítica. Esta vulnerabilidad afecta a un código desconocido del archivo \/admin\/login.php. La manipulación del argumento username\/password conduce a la inyección de SQL. El ataque se puede iniciar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. VDB-265198 es el identificador asignado a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265198","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265198","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338612","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-3368","sourceIdentifier":"contact@wpscan.com","published":"2024-05-20T06:15:08.527","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks"},{"lang":"es","value":" El complemento de WordPress All in One SEO anterior a 4.6.1.1 no valida ni escapa algunos de sus campos de publicación antes de devolverlos, lo que podría permitir a los usuarios con el rol de colaborador y superiores realizar ataques de Cross Site Scripting Almacenado."}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/ab78b1a5-e28c-406b-baaf-6d53017f9328\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-5119","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T06:15:09.013","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0 and classified as critical. This issue affects some unknown processing of the file \/classes\/Master.php?f=load_registration. The manipulation of the argument last_id\/event_id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265199."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en SourceCodester Event Registration System 1.0 y clasificada como crítica. Este problema afecta algún procesamiento desconocido del archivo \/classes\/Master.php?f=load_registration. La manipulación del argumento last_id\/event_id conduce a la inyección de SQL. El ataque puede iniciarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador asociado de esta vulnerabilidad es VDB-265199."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265199","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265199","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338613","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5120","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T06:15:09.393","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been classified as critical. Affected is an unknown function of the file \/registrar\/?page=registration. The manipulation of the argument e leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265200."},{"lang":"es","value":"Se encontró una vulnerabilidad en SourceCodester Event Registration System 1.0. Ha sido clasificada como crítica. Una función desconocida del archivo \/registrar\/?page=registration es afectada por esta vulnerabilidad. La manipulación del argumento e conduce a la inyección SQL. Es posible lanzar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador de esta vulnerabilidad es VDB-265200."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%203.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265200","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265200","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338614","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5121","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T07:15:09.167","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file \/registrar\/?page=registration. The manipulation of the argument e leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265201 was assigned to this vulnerability."},{"lang":"es","value":"Se encontró una vulnerabilidad en SourceCodester Event Registration System 1.0. Ha sido declarada problemática. Una funcionalidad desconocida del archivo \/registrar\/?page=registration es afectada por esta vulnerabilidad. La manipulación del argumento e conduce a cross site scripting. El ataque se puede lanzar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265201."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":3.5,"baseSeverity":"LOW"},"exploitabilityScore":2.1,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":4.0},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20Cross-Site-Scripting%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265201","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265201","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338617","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5122","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T07:15:09.637","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Event Registration System 1.0. It has been rated as critical. Affected by this issue is some unknown functionality of the file \/registrar\/. The manipulation of the argument search leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-265202 is the identifier assigned to this vulnerability."},{"lang":"es","value":" Se encontró una vulnerabilidad en SourceCodester Event Registration System 1.0. Ha sido calificada como crítica. Una función desconocida del archivo \/registrar\/ es afectada por esta vulnerabilidad. La manipulación del argumento search  conduce a la inyección de SQL. El ataque puede lanzarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. VDB-265202 es el identificador asignado a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20SQL%20Injection%20-%204.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265202","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265202","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338615","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-1968","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T08:15:08.850","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In scrapy\/scrapy, an issue was identified where the Authorization header is not removed during redirects that only change the scheme (e.g., HTTPS to HTTP) but remain within the same domain. This behavior contravenes the Fetch standard, which mandates the removal of Authorization headers in cross-origin requests when the scheme, host, or port changes. Consequently, when a redirect downgrades from HTTPS to HTTP, the Authorization header may be inadvertently exposed in plaintext, leading to potential sensitive information disclosure to unauthorized actors. The flaw is located in the _build_redirect_request function of the redirect middleware."},{"lang":"es","value":" En scrapy\/scrapy, se identificó un problema por el cual el encabezado Authorization no se elimina durante las redirecciones que solo cambian el esquema (por ejemplo, HTTPS a HTTP) pero permanecen dentro del mismo dominio. Este comportamiento contraviene el estándar Fetch, que exige la eliminación de encabezados de Autorización en solicitudes de origen cruzado cuando cambia el esquema, el host o el puerto. En consecuencia, cuando una redirección degrada de HTTPS a HTTP, el encabezado de Autorización puede quedar expuesto inadvertidamente en texto sin formato, lo que lleva a una posible divulgación de información confidencial a actores no autorizados. La falla se encuentra en la función _build_redirect_request del middleware de redirección."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-200"}]}],"references":[{"url":"https:\/\/github.com\/scrapy\/scrapy\/commit\/1d0502f25bbe55a22899af915623fda1aaeb9dd8","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/27f6a021-a891-446a-ada5-0226d619dd1a","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-5123","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T08:15:09.090","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in SourceCodester Event Registration System 1.0. This affects an unknown part of the file \/registrar\/. The manipulation of the argument searchbar leads to cross site scripting. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265203."},{"lang":"es","value":"Una vulnerabilidad ha sido encontrada en SourceCodester Event Registration System 1.0 y clasificada como problemática. Esto afecta a una parte desconocida del archivo \/registrar\/. La manipulación del argumento searchbar conduce a cross site scripting. Es posible iniciar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador asociado de esta vulnerabilidad es VDB-265203."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":5.0},"baseSeverity":"MEDIUM","exploitabilityScore":10.0,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Event%20Registration%20System\/Event%20Registration%20System%20-%20Cross-Site-Scripting%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265203","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265203","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338616","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5134","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T08:15:09.343","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Electricity Consumption Monitoring Tool 1.0. It has been declared as critical. This vulnerability affects unknown code of the file \/endpoint\/delete-bill.php. The manipulation of the argument bill leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-265210 is the identifier assigned to this vulnerability."},{"lang":"es","value":" Se encontró una vulnerabilidad en SourceCodester Electricity Consumption Monitoring Tool 1.0. Ha sido declarada crítica. Esta vulnerabilidad afecta al código desconocido del archivo \/endpoint\/delete-bill.php. La manipulación del argumento bill conduce a la inyección de SQL. El ataque se puede iniciar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. VDB-265210 es el identificador asignado a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Electricity%20Consumption%20Monitoring%20Tool\/Electricity%20Consumption%20Monitoring%20Tool%20-%20SQL%20Injection.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265210","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265210","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.338980","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-3761","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T09:15:09.497","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In lunary-ai\/lunary version 1.2.2, the DELETE endpoint located at `packages\/backend\/src\/api\/v1\/datasets` is vulnerable to unauthorized dataset deletion due to missing authorization and authentication mechanisms. This vulnerability allows any user, even those without a valid token, to delete a dataset by sending a DELETE request to the endpoint. The issue was fixed in version 1.2.8. The impact of this vulnerability is significant as it permits unauthorized users to delete datasets, potentially leading to data loss or disruption of service."},{"lang":"es","value":" En lunary-ai\/lunary versión 1.2.2, el endpoint DELETE ubicado en `packages\/backend\/src\/api\/v1\/datasets` es vulnerable a la eliminación no autorizada de conjuntos de datos debido a la falta de mecanismos de autorización y autenticación. Esta vulnerabilidad permite que cualquier usuario, incluso aquellos sin un token válido, elimine un conjunto de datos enviando una solicitud DELETE al endpoint. El problema se solucionó en la versión 1.2.8. El impacto de esta vulnerabilidad es significativo ya que permite a usuarios no autorizados eliminar conjuntos de datos, lo que podría provocar la pérdida de datos o la interrupción del servicio."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.1,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-862"}]}],"references":[{"url":"https:\/\/github.com\/lunary-ai\/lunary\/commit\/14078c1d2b8766075bf655f187ece24c7a787776","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/e95fb0a0-e54a-4da8-a33d-ba858d0cec55","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-5135","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T09:15:09.750","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in PHPGurukul Directory Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file \/admin\/index.php. The manipulation of the argument username leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-265211."},{"lang":"es","value":"Se encontró una vulnerabilidad en PHPGurukul Directory Management System 1.0. Ha sido calificada como crítica. Este problema afecta un procesamiento desconocido del archivo \/admin\/index.php. La manipulación del argumento username conduce a la inyección de SQL. El ataque puede iniciarse de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador asociado de esta vulnerabilidad es VDB-265211."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:N\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"NONE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":7.5},"baseSeverity":"HIGH","exploitabilityScore":10.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20SQL%20Injection%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265211","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265211","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339121","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-5136","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T09:15:10.007","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic has been found in PHPGurukul Directory Management System 1.0. Affected is an unknown function of the file \/admin\/search-directory.php.. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-265212."},{"lang":"es","value":" Una vulnerabilidad ha sido encontrada en PHPGurukul Directory Management System 1.0 y clasificada como problemática. Una función desconocida del archivo \/admin\/search-directory.php es afectada por esta operación. Es posible lanzar el ataque de forma remota. El exploit ha sido divulgado al público y puede utilizarse. El identificador de esta vulnerabilidad es VDB-265212."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20Cross-Site-Scripting%20-%201.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265212","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265212","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339122","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-35948","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:09.440","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbcachefs: Check for journal entries overruning end of sb clean section\n\nFix a missing bounds check in superblock validation.\n\nNote that we don't yet have repair code for this case - repair code for\nindividual items is generally low priority, since the whole superblock\nis checksummed, validated prior to write, and we have backups."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/fcdbc1d7a4b638e5d5668de461f320386f3002aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35949","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.413","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: make sure that WRITTEN is set on all metadata blocks\n\nWe previously would call btrfs_check_leaf() if we had the check\nintegrity code enabled, which meant that we could only run the extended\nleaf checks if we had WRITTEN set on the header flags.\n\nThis leaves a gap in our checking, because we could end up with\ncorruption on disk where WRITTEN isn't set on the leaf, and then the\nextended leaf checks don't get run which we rely on to validate all of\nthe item pointers to make sure we don't access memory outside of the\nextent buffer.\n\nHowever, since 732fab95abe2 (\"btrfs: check-integrity: remove\nCONFIG_BTRFS_FS_CHECK_INTEGRITY option\") we no longer call\nbtrfs_check_leaf() from btrfs_mark_buffer_dirty(), which means we only\never call it on blocks that are being written out, and thus have WRITTEN\nset, or that are being read in, which should have WRITTEN set.\n\nAdd checks to make sure we have WRITTEN set appropriately, and then make\nsure __btrfs_check_leaf() always does the item checking.  This will\nprotect us from file systems that have been corrupted and no longer have\nWRITTEN set on some of the blocks.\n\nThis was hit on a crafted image tweaking the WRITTEN bit and reported by\nKASAN as out-of-bound access in the eb accessors. The example is a dir\nitem at the end of an eb.\n\n  [2.042] BTRFS warning (device loop1): bad eb member start: ptr 0x3fff start 30572544 member offset 16410 size 2\n  [2.040] general protection fault, probably for non-canonical address 0xe0009d1000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI\n  [2.537] KASAN: maybe wild-memory-access in range [0x0005088000000018-0x000508800000001f]\n  [2.729] CPU: 0 PID: 2587 Comm: mount Not tainted 6.8.2 #1\n  [2.729] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n  [2.621] RIP: 0010:btrfs_get_16+0x34b\/0x6d0\n  [2.621] RSP: 0018:ffff88810871fab8 EFLAGS: 00000206\n  [2.621] RAX: 0000a11000000003 RBX: ffff888104ff8720 RCX: ffff88811b2288c0\n  [2.621] RDX: dffffc0000000000 RSI: ffffffff81dd8aca RDI: ffff88810871f748\n  [2.621] RBP: 000000000000401a R08: 0000000000000001 R09: ffffed10210e3ee9\n  [2.621] R10: ffff88810871f74f R11: 205d323430333737 R12: 000000000000001a\n  [2.621] R13: 000508800000001a R14: 1ffff110210e3f5d R15: ffffffff850011e8\n  [2.621] FS:  00007f56ea275840(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000\n  [2.621] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [2.621] CR2: 00007febd13b75c0 CR3: 000000010bb50000 CR4: 00000000000006f0\n  [2.621] Call Trace:\n  [2.621]  <TASK>\n  [2.621]  ? show_regs+0x74\/0x80\n  [2.621]  ? die_addr+0x46\/0xc0\n  [2.621]  ? exc_general_protection+0x161\/0x2a0\n  [2.621]  ? asm_exc_general_protection+0x26\/0x30\n  [2.621]  ? btrfs_get_16+0x33a\/0x6d0\n  [2.621]  ? btrfs_get_16+0x34b\/0x6d0\n  [2.621]  ? btrfs_get_16+0x33a\/0x6d0\n  [2.621]  ? __pfx_btrfs_get_16+0x10\/0x10\n  [2.621]  ? __pfx_mutex_unlock+0x10\/0x10\n  [2.621]  btrfs_match_dir_item_name+0x101\/0x1a0\n  [2.621]  btrfs_lookup_dir_item+0x1f3\/0x280\n  [2.621]  ? __pfx_btrfs_lookup_dir_item+0x10\/0x10\n  [2.621]  btrfs_get_tree+0xd25\/0x1910\n\n[ copy more details from report ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/e03418abde871314e1a3a550f4c8afb7b89cb273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef3ba8ce8cf7075b716aa4afcefc3034215878ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35950","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.490","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/client: Fully protect modes[] with dev->mode_config.mutex\n\nThe modes[] array contains pointers to modes on the connectors'\nmode lists, which are protected by dev->mode_config.mutex.\nThus we need to extend modes[] the same protection or by the\ntime we use it the elements may already be pointing to\nfreed\/reused memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04e018bd913d3d3336ab7d21c2ad31a9175fe984","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18c8cc6680ce938d0458859b6a08b4d34f7d8055","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3eadd887dbac1df8f25f701e5d404d1b90fd0fea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41586487769eede64ab1aa6c65c74cbf76c12ef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a2f957e3c4553bbb100504a1acfeaeb33f4ca4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ceb873d816786a7c8058f50d903574aff8d3764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2dc6600d4e3e1453e3b1fb233e9f97e2a1ae949","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35951","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.577","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()\n\nSubject: [PATCH] drm\/panfrost: Fix the error path in\n panfrost_mmu_map_fault_addr()\n\nIf some the pages or sgt allocation failed, we shouldn't release the\npages ref we got earlier, otherwise we will end up with unbalanced\nget\/put_pages() calls. We should instead leave everything in place\nand let the BO release function deal with extra cleanup when the object\nis destroyed, or let the fault handler try again next time it's called."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fc9af813b25e146d3607669247d0f970f5a87c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31806711e8a4b75e09b1c43652f2a6420e6e1002","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e18070c622c63f0cab170348e320454728c277aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35952","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.643","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/ast: Fix soft lockup\n\nThere is a while-loop in ast_dp_set_on_off() that could lead to\ninfinite-loop. This is because the register, VGACRI-Dx, checked in\nthis API is a scratch register actually controlled by a MCU, named\nDPMCU, in BMC.\n\nThese scratch registers are protected by scu-lock. If suc-lock is not\noff, DPMCU can not update these registers and then host will have soft\nlockup due to never updated status.\n\nDPMCU is used to control DP and relative registers to handshake with\nhost's VGA driver. Even the most time-consuming task, DP's link\ntraining, is less than 100ms. 200ms should be enough."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/35768baf0fdfc47ede42d899506bad78450e9294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a6fea3fcb577a543ef67683ca7105bde49a38fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a81b2acd43e24e419f65df97348c76a5a1496066","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc004f5038220b1891ef4107134ccae44be55109","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35953","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.717","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naccel\/ivpu: Fix deadlock in context_xa\n\nivpu_device->context_xa is locked both in kernel thread and IRQ context.\nIt requires XA_FLAGS_LOCK_IRQ flag to be passed during initialization\notherwise the lock could be acquired from a thread and interrupted by\nan IRQ that locks it for the second time causing the deadlock.\n\nThis deadlock was reported by lockdep and observed in internal tests."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d43e11d9c7fcb16f18bd46ab2556c2772ffc5775","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6011411147209bc0cc14628cbc155356837e52a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd7726e75968b27fe98534ccbf47ccd6fef686f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35954","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.780","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: sg: Avoid sg device teardown race\n\nsg_remove_sfp_usercontext() must not use sg_device_destroy() after calling\nscsi_device_put().\n\nsg_device_destroy() is accessing the parent scsi_device request_queue which\nwill already be set to NULL when the preceding call to scsi_device_put()\nremoved the last reference to the parent scsi_device.\n\nThe resulting NULL pointer exception will then crash the kernel."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27f58c04a8f438078583041468ec60597841284d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46af9047523e2517712ae8e71d984286c626e022","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0d1ebcc1a9560e494ea9b3ee808540db26c5086","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35955","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.850","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkprobes: Fix possible use-after-free issue on kprobe registration\n\nWhen unloading a module, its state is changing MODULE_STATE_LIVE ->\n MODULE_STATE_GOING -> MODULE_STATE_UNFORMED. Each change will take\na time. `is_module_text_address()` and `__module_text_address()`\nworks with MODULE_STATE_LIVE and MODULE_STATE_GOING.\nIf we use `is_module_text_address()` and `__module_text_address()`\nseparately, there is a chance that the first one is succeeded but the\nnext one is failed because module->state becomes MODULE_STATE_UNFORMED\nbetween those operations.\n\nIn `check_kprobe_address_safe()`, if the second `__module_text_address()`\nis failed, that is ignored because it expected a kernel_text address.\nBut it may have failed simply because module->state has been changed\nto MODULE_STATE_UNFORMED. In this case, arm_kprobe() will try to modify\nnon-exist module text address (use-after-free).\n\nTo fix this problem, we should not use separated `is_module_text_address()`\nand `__module_text_address()`, but use only `__module_text_address()`\nonce and do `try_module_get(module)` which is only available with\nMODULE_STATE_LIVE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2df2dd27066cdba8041e46a64362325626bdfb2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/325f3fb551f8cd672dbbfc4cf58b14f9ee3fc9e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/36b57c7d2f8b7de224980f1a284432846ad71ca0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5062d1f4f07facbdade0f402d9a04a788f52e26d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/62029bc9ff2c17a4e3a2478d83418ec575413808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93eb31e7c3399e326259f2caa17be1e821f5a412","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5808d40093403334d939e2c3c417144d12a6f33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d15023fb407337028a654237d8968fefdcf87c2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35956","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.920","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: qgroup: fix qgroup prealloc rsv leak in subvolume operations\n\nCreate subvolume, create snapshot and delete subvolume all use\nbtrfs_subvolume_reserve_metadata() to reserve metadata for the changes\ndone to the parent subvolume's fs tree, which cannot be mediated in the\nnormal way via start_transaction. When quota groups (squota or qgroups)\nare enabled, this reserves qgroup metadata of type PREALLOC. Once the\noperation is associated to a transaction, we convert PREALLOC to\nPERTRANS, which gets cleared in bulk at the end of the transaction.\n\nHowever, the error paths of these three operations were not implementing\nthis lifecycle correctly. They unconditionally converted the PREALLOC to\nPERTRANS in a generic cleanup step regardless of errors or whether the\noperation was fully associated to a transaction or not. This resulted in\nerror paths occasionally converting this rsv to PERTRANS without calling\nrecord_root_in_trans successfully, which meant that unless that root got\nrecorded in the transaction by some other thread, the end of the\ntransaction would not free that root's PERTRANS, leaking it. Ultimately,\nthis resulted in hitting a WARN in CONFIG_BTRFS_DEBUG builds at unmount\nfor the leaked reservation.\n\nThe fix is to ensure that every qgroup PREALLOC reservation observes the\nfollowing properties:\n\n1. any failure before record_root_in_trans is called successfully\n   results in freeing the PREALLOC reservation.\n2. after record_root_in_trans, we convert to PERTRANS, and now the\n   transaction owns freeing the reservation.\n\nThis patch enforces those properties on the three operations. Without\nit, generic\/269 with squotas enabled at mkfs time would fail in ~5-10\nruns on my system. With this patch, it ran successfully 1000 times in a\nrow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14431815a4ae4bcd7c7a68b6a64c66c7712d27c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c95336f5d8eb9ab79cd7306d71b6d0477363f8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74e97958121aa1f5854da6effba70143f051b0cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35957","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:10.987","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/vt-d: Fix WARN_ON in iommu probe path\n\nCommit 1a75cc710b95 (\"iommu\/vt-d: Use rbtree to track iommu probed\ndevices\") adds all devices probed by the iommu driver in a rbtree\nindexed by the source ID of each device. It assumes that each device\nhas a unique source ID. This assumption is incorrect and the VT-d\nspec doesn't state this requirement either.\n\nThe reason for using a rbtree to track devices is to look up the device\nwith PCI bus and devfunc in the paths of handling ATS invalidation time\nout error and the PRI I\/O page faults. Both are PCI ATS feature related.\n\nOnly track the devices that have PCI ATS capabilities in the rbtree to\navoid unnecessary WARN_ON in the iommu probe path. Otherwise, on some\nplatforms below kernel splat will be displayed and the iommu probe results\nin failure.\n\n WARNING: CPU: 3 PID: 166 at drivers\/iommu\/intel\/iommu.c:158 intel_iommu_probe_device+0x319\/0xd90\n Call Trace:\n  <TASK>\n  ? __warn+0x7e\/0x180\n  ? intel_iommu_probe_device+0x319\/0xd90\n  ? report_bug+0x1f8\/0x200\n  ? handle_bug+0x3c\/0x70\n  ? exc_invalid_op+0x18\/0x70\n  ? asm_exc_invalid_op+0x1a\/0x20\n  ? intel_iommu_probe_device+0x319\/0xd90\n  ? debug_mutex_init+0x37\/0x50\n  __iommu_probe_device+0xf2\/0x4f0\n  iommu_probe_device+0x22\/0x70\n  iommu_bus_notifier+0x1e\/0x40\n  notifier_call_chain+0x46\/0x150\n  blocking_notifier_call_chain+0x42\/0x60\n  bus_notify+0x2f\/0x50\n  device_add+0x5ed\/0x7e0\n  platform_device_add+0xf5\/0x240\n  mfd_add_devices+0x3f9\/0x500\n  ? preempt_count_add+0x4c\/0xa0\n  ? up_write+0xa2\/0x1b0\n  ? __debugfs_create_file+0xe3\/0x150\n  intel_lpss_probe+0x49f\/0x5b0\n  ? pci_conf1_write+0xa3\/0xf0\n  intel_lpss_pci_probe+0xcf\/0x110 [intel_lpss_pci]\n  pci_device_probe+0x95\/0x120\n  really_probe+0xd9\/0x370\n  ? __pfx___driver_attach+0x10\/0x10\n  __driver_probe_device+0x73\/0x150\n  driver_probe_device+0x19\/0xa0\n  __driver_attach+0xb6\/0x180\n  ? __pfx___driver_attach+0x10\/0x10\n  bus_for_each_dev+0x77\/0xd0\n  bus_add_driver+0x114\/0x210\n  driver_register+0x5b\/0x110\n  ? __pfx_intel_lpss_pci_driver_init+0x10\/0x10 [intel_lpss_pci]\n  do_one_initcall+0x57\/0x2b0\n  ? kmalloc_trace+0x21e\/0x280\n  ? do_init_module+0x1e\/0x210\n  do_init_module+0x5f\/0x210\n  load_module+0x1d37\/0x1fc0\n  ? init_module_from_file+0x86\/0xd0\n  init_module_from_file+0x86\/0xd0\n  idempotent_init_module+0x17c\/0x230\n  __x64_sys_finit_module+0x56\/0xb0\n  do_syscall_64+0x6e\/0x140\n  entry_SYSCALL_64_after_hwframe+0x71\/0x79"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/89436f4f54125b1297aec1f466efd8acb4ec613d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fba8ca3e6f608b92e54271fdbd3ce569361939fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35958","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.057","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ena: Fix incorrect descriptor free behavior\n\nENA has two types of TX queues:\n- queues which only process TX packets arriving from the network stack\n- queues which only process TX packets forwarded to it by XDP_REDIRECT\n  or XDP_TX instructions\n\nThe ena_free_tx_bufs() cycles through all descriptors in a TX queue\nand unmaps + frees every descriptor that hasn't been acknowledged yet\nby the device (uncompleted TX transactions).\nThe function assumes that the processed TX queue is necessarily from\nthe first category listed above and ends up using napi_consume_skb()\nfor descriptors belonging to an XDP specific queue.\n\nThis patch solves a bug in which, in case of a VF reset, the\ndescriptors aren't freed correctly, leading to crashes."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19ff8fed3338898b70b2aad831386c78564912e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7f2240d9835a7823d87f7460d8eae9f4e504c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b26aa765f7437e1bbe8db4c1641b12bd5dd378f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf02d9fe00632d22fa91d34749c7aacf397b6cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c31baa07f01307b7ae05f3ce32b89d8e2ba0cc1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdfbf54d128ab6ab255db138488f9650485795a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35959","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.123","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix mlx5e_priv_init() cleanup flow\n\nWhen mlx5e_priv_init() fails, the cleanup flow calls mlx5e_selq_cleanup which\ncalls mlx5e_selq_apply() that assures that the `priv->state_lock` is held using\nlockdep_is_held().\n\nAcquire the state_lock in mlx5e_selq_cleanup().\n\nKernel log:\n=============================\nWARNING: suspicious RCU usage\n6.8.0-rc3_net_next_841a9b5 #1 Not tainted\n-----------------------------\ndrivers\/net\/ethernet\/mellanox\/mlx5\/core\/en\/selq.c:124 suspicious rcu_dereference_protected() usage!\n\nother info that might help us debug this:\n\nrcu_scheduler_active = 2, debug_locks = 1\n2 locks held by systemd-modules\/293:\n #0: ffffffffa05067b0 (devices_rwsem){++++}-{3:3}, at: ib_register_client+0x109\/0x1b0 [ib_core]\n #1: ffff8881096c65c0 (&device->client_data_rwsem){++++}-{3:3}, at: add_client_context+0x104\/0x1c0 [ib_core]\n\nstack backtrace:\nCPU: 4 PID: 293 Comm: systemd-modules Not tainted 6.8.0-rc3_net_next_841a9b5 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x8a\/0xa0\n lockdep_rcu_suspicious+0x154\/0x1a0\n mlx5e_selq_apply+0x94\/0xa0 [mlx5_core]\n mlx5e_selq_cleanup+0x3a\/0x60 [mlx5_core]\n mlx5e_priv_init+0x2be\/0x2f0 [mlx5_core]\n mlx5_rdma_setup_rn+0x7c\/0x1a0 [mlx5_core]\n rdma_init_netdev+0x4e\/0x80 [ib_core]\n ? mlx5_rdma_netdev_free+0x70\/0x70 [mlx5_core]\n ipoib_intf_init+0x64\/0x550 [ib_ipoib]\n ipoib_intf_alloc+0x4e\/0xc0 [ib_ipoib]\n ipoib_add_one+0xb0\/0x360 [ib_ipoib]\n add_client_context+0x112\/0x1c0 [ib_core]\n ib_register_client+0x166\/0x1b0 [ib_core]\n ? 0xffffffffa0573000\n ipoib_init_module+0xeb\/0x1a0 [ib_ipoib]\n do_one_initcall+0x61\/0x250\n do_init_module+0x8a\/0x270\n init_module_from_file+0x8b\/0xd0\n idempotent_init_module+0x17d\/0x230\n __x64_sys_finit_module+0x61\/0xb0\n do_syscall_64+0x71\/0x140\n entry_SYSCALL_64_after_hwframe+0x46\/0x4e\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6bd77865fda662913dcb5722a66a773840370aa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad26f26abd353113dea4e8d5ebadccdab9b61e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecb829459a841198e142f72fadab56424ae96519","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9ac93b6f3de34aa0bb983b9be4f69ca50fc70f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35960","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.190","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Properly link new fs rules into the tree\n\nPreviously, add_rule_fg would only add newly created rules from the\nhandle into the tree when they had a refcount of 1. On the other hand,\ncreate_flow_handle tries hard to find and reference already existing\nidentical rules instead of creating new ones.\n\nThese two behaviors can result in a situation where create_flow_handle\n1) creates a new rule and references it, then\n2) in a subsequent step during the same handle creation references it\n   again,\nresulting in a rule with a refcount of 2 that is not linked into the\ntree, will have a NULL parent and root and will result in a crash when\nthe flow group is deleted because del_sw_hw_rule, invoked on rule\ndeletion, assumes node->parent is != NULL.\n\nThis happened in the wild, due to another bug related to incorrect\nhandling of duplicate pkt_reformat ids, which lead to the code in\ncreate_flow_handle incorrectly referencing a just-added rule in the same\nflow handle, resulting in the problem described above. Full details are\nat [1].\n\nThis patch changes add_rule_fg to add new rules without parents into\nthe tree, properly initializing them and avoiding the crash. This makes\nit more consistent with how rules are added to an FTE in\ncreate_flow_handle."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1263b0b26077b1183c3c45a0a2479573a351d423","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e8dc5cffc844dacfa79f056dea88002312f253f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d90ca9145f6b97b38d0c2b6b30f6ca6af9c1801","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cf5337ef701830f173b4eec00a4f984adeb57a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7aaee12b804c5e0374e7b132b6ec2158ff33dd64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c6782ad4911cbee874e85630226ed389ff2e453","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adf67a03af39095f05d82050f15813d6f700159d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de0139719cdda82806a47580ca0df06fc85e0bd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35961","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.260","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5: Register devlink first under devlink lock\n\nIn case device is having a non fatal FW error during probe, the\ndriver will report the error to user via devlink. This will trigger\na WARN_ON, since mlx5 is calling devlink_register() last.\nIn order to avoid the WARN_ON[1], change mlx5 to invoke devl_register()\nfirst under devlink lock.\n\n[1]\nWARNING: CPU: 5 PID: 227 at net\/devlink\/health.c:483 devlink_recover_notify.constprop.0+0xb8\/0xc0\nCPU: 5 PID: 227 Comm: kworker\/u16:3 Not tainted 6.4.0-rc5_for_upstream_min_debug_2023_06_12_12_38 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nWorkqueue: mlx5_health0000:08:00.0 mlx5_fw_reporter_err_work [mlx5_core]\nRIP: 0010:devlink_recover_notify.constprop.0+0xb8\/0xc0\nCall Trace:\n <TASK>\n ? __warn+0x79\/0x120\n ? devlink_recover_notify.constprop.0+0xb8\/0xc0\n ? report_bug+0x17c\/0x190\n ? handle_bug+0x3c\/0x60\n ? exc_invalid_op+0x14\/0x70\n ? asm_exc_invalid_op+0x16\/0x20\n ? devlink_recover_notify.constprop.0+0xb8\/0xc0\n devlink_health_report+0x4a\/0x1c0\n mlx5_fw_reporter_err_work+0xa4\/0xd0 [mlx5_core]\n process_one_work+0x1bb\/0x3c0\n ? process_one_work+0x3c0\/0x3c0\n worker_thread+0x4d\/0x3c0\n ? process_one_work+0x3c0\/0x3c0\n kthread+0xc6\/0xf0\n ? kthread_complete_and_exit+0x20\/0x20\n ret_from_fork+0x1f\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8c91c60858473731bcdaf04fda99fcbcf84420d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/967caa3d37c078e5b95a32094657e6a4cad145f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e77aa9dd82bc18a89bf49418f8f7e961cfccc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35962","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.327","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: complete validation of user input\n\nIn my recent commit, I missed that do_replace() handlers\nuse copy_from_sockptr() (which I fixed), followed\nby unsafe copy_from_sockptr_offset() calls.\n\nIn all functions, we can perform the @optlen validation\nbefore even calling xt_alloc_table_info() with the following\ncheck:\n\nif ((u64)optlen < (u64)tmp.size + sizeof(tmp))\n        return -EINVAL;"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/562b7245131f6e9f1d280c8b5a8750f03edfc05c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65acf6e0501ac8880a4f73980d01b5d27648b956","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89242d9584c342cb83311b598d9e6b82572eadf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97dab36e57c64106e1c8ebd66cbf0d2d1e52d6b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c760089aa98289b4b88a7ff5a62dd92845adf223","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf4bc359b76144a3dd55d7c09464ef4c5f2b2b05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35963","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.390","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_sock: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50173882bb187e70e37bac01385b9b114019bee2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2186061d6043d6345a97100460363e990af0d46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35964","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.457","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c4a89f4690478969729c7ba5f69d53d8516aa12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e8742cdfc4b0e65266bb4a901a19462bda9285e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35965","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.520","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: L2CAP: Fix not validating setsockopt user input\n\nCheck user input length before copying data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4f3951242ace5efc7131932e2e01e6ac6baed846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ee0c132a61df9723813c40e742dc5321824daa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d42f373391211c7c8af66a3a316533a32b8a607","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35966","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.580","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: RFCOMM: Fix not validating setsockopt user input\n\nsyzbot reported rfcomm_sock_setsockopt_old() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude\/linux\/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude\/linux\/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old\nnet\/bluetooth\/rfcomm\/sock.c:632 [inline]\nBUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893\/0xa70\nnet\/bluetooth\/rfcomm\/sock.c:673\nRead of size 4 at addr ffff8880209a8bc3 by task syz-executor632\/5064"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a97de7bff13b1cc825c1b1344eaed8d6c2d3e695","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3f787a3eafe519c93df9abbb0ca5145861c8d0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35967","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.647","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: SCO: Fix not validating setsockopt user input\n\nsyzbot reported sco_sock_setsockopt() is copying data without\nchecking user input length.\n\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset\ninclude\/linux\/sockptr.h:49 [inline]\nBUG: KASAN: slab-out-of-bounds in copy_from_sockptr\ninclude\/linux\/sockptr.h:55 [inline]\nBUG: KASAN: slab-out-of-bounds in sco_sock_setsockopt+0xc0b\/0xf90\nnet\/bluetooth\/sco.c:893\nRead of size 4 at addr ffff88805f7b15a3 by task syz-executor.5\/12578"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/419a0ffca7010216f0fc265b08558d7394fa0ba7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51eda36d33e43201e7a4fd35232e069b2c850b01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72473db90900da970a16ee50ad23c2c38d107d8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bc65d23ba20dcd7ecc094a12c181e594e5eb315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0e30c37695b614bee69187f86eaf250e36606ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35968","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.713","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Fix pdsc_check_pci_health function to use work thread\n\nWhen the driver notices fw_status == 0xff it tries to perform a PCI\nreset on itself via pci_reset_function() in the context of the driver's\nhealth thread. However, pdsc_reset_prepare calls\npdsc_stop_health_thread(), which attempts to stop\/flush the health\nthread. This results in a deadlock because the stop\/flush will never\ncomplete since the driver called pci_reset_function() from the health\nthread context. Fix by changing the pdsc_check_pci_health_function()\nto queue a newly introduced pdsc_pci_reset_thread() on the pdsc's\nwork queue.\n\nUnloading the driver in the fw_down\/dead state uncovered another issue,\nwhich can be seen in the following trace:\n\nWARNING: CPU: 51 PID: 6914 at kernel\/workqueue.c:1450 __queue_work+0x358\/0x440\n[...]\nRIP: 0010:__queue_work+0x358\/0x440\n[...]\nCall Trace:\n <TASK>\n ? __warn+0x85\/0x140\n ? __queue_work+0x358\/0x440\n ? report_bug+0xfc\/0x1e0\n ? handle_bug+0x3f\/0x70\n ? exc_invalid_op+0x17\/0x70\n ? asm_exc_invalid_op+0x1a\/0x20\n ? __queue_work+0x358\/0x440\n queue_work_on+0x28\/0x30\n pdsc_devcmd_locked+0x96\/0xe0 [pds_core]\n pdsc_devcmd_reset+0x71\/0xb0 [pds_core]\n pdsc_teardown+0x51\/0xe0 [pds_core]\n pdsc_remove+0x106\/0x200 [pds_core]\n pci_device_remove+0x37\/0xc0\n device_release_driver_internal+0xae\/0x140\n driver_detach+0x48\/0x90\n bus_remove_driver+0x6d\/0xf0\n pci_unregister_driver+0x2e\/0xa0\n pdsc_cleanup_module+0x10\/0x780 [pds_core]\n __x64_sys_delete_module+0x142\/0x2b0\n ? syscall_trace_enter.isra.18+0x126\/0x1a0\n do_syscall_64+0x3b\/0x90\n entry_SYSCALL_64_after_hwframe+0x72\/0xdc\nRIP: 0033:0x7fbd9d03a14b\n[...]\n\nFix this by preventing the devcmd reset if the FW is not running."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38407914d48273d7f8ab765b9243658afe1c3ab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81665adf25d28a00a986533f1d3a5df76b79cad9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35969","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.780","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix race condition between ipv6_get_ifaddr and ipv6_del_addr\n\nAlthough ipv6_get_ifaddr walks inet6_addr_lst under the RCU lock, it\nstill means hlist_for_each_entry_rcu can return an item that got removed\nfrom the list. The memory itself of such item is not freed thanks to RCU\nbut nothing guarantees the actual content of the memory is sane.\n\nIn particular, the reference count can be zero. This can happen if\nipv6_del_addr is called in parallel. ipv6_del_addr removes the entry\nfrom inet6_addr_lst (hlist_del_init_rcu(&ifp->addr_lst)) and drops all\nreferences (__in6_ifa_put(ifp) + in6_ifa_put(ifp)). With bad enough\ntiming, this can happen:\n\n1. In ipv6_get_ifaddr, hlist_for_each_entry_rcu returns an entry.\n\n2. Then, the whole ipv6_del_addr is executed for the given entry. The\n   reference count drops to zero and kfree_rcu is scheduled.\n\n3. ipv6_get_ifaddr continues and tries to increments the reference count\n   (in6_ifa_hold).\n\n4. The rcu is unlocked and the entry is freed.\n\n5. The freed entry is returned.\n\nPrevent increasing of the reference count in such case. The name\nin6_ifa_hold_safe is chosen to mimic the existing fib6_info_hold_safe.\n\n[   41.506330] refcount_t: addition on 0; use-after-free.\n[   41.506760] WARNING: CPU: 0 PID: 595 at lib\/refcount.c:25 refcount_warn_saturate+0xa5\/0x130\n[   41.507413] Modules linked in: veth bridge stp llc\n[   41.507821] CPU: 0 PID: 595 Comm: python3 Not tainted 6.9.0-rc2.main-00208-g49563be82afa #14\n[   41.508479] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)\n[   41.509163] RIP: 0010:refcount_warn_saturate+0xa5\/0x130\n[   41.509586] Code: ad ff 90 0f 0b 90 90 c3 cc cc cc cc 80 3d c0 30 ad 01 00 75 a0 c6 05 b7 30 ad 01 01 90 48 c7 c7 38 cc 7a 8c e8 cc 18 ad ff 90 <0f> 0b 90 90 c3 cc cc cc cc 80 3d 98 30 ad 01 00 0f 85 75 ff ff ff\n[   41.510956] RSP: 0018:ffffbda3c026baf0 EFLAGS: 00010282\n[   41.511368] RAX: 0000000000000000 RBX: ffff9e9c46914800 RCX: 0000000000000000\n[   41.511910] RDX: ffff9e9c7ec29c00 RSI: ffff9e9c7ec1c900 RDI: ffff9e9c7ec1c900\n[   41.512445] RBP: ffff9e9c43660c9c R08: 0000000000009ffb R09: 00000000ffffdfff\n[   41.512998] R10: 00000000ffffdfff R11: ffffffff8ca58a40 R12: ffff9e9c4339a000\n[   41.513534] R13: 0000000000000001 R14: ffff9e9c438a0000 R15: ffffbda3c026bb48\n[   41.514086] FS:  00007fbc4cda1740(0000) GS:ffff9e9c7ec00000(0000) knlGS:0000000000000000\n[   41.514726] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   41.515176] CR2: 000056233b337d88 CR3: 000000000376e006 CR4: 0000000000370ef0\n[   41.515713] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   41.516252] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   41.516799] Call Trace:\n[   41.517037]  <TASK>\n[   41.517249]  ? __warn+0x7b\/0x120\n[   41.517535]  ? refcount_warn_saturate+0xa5\/0x130\n[   41.517923]  ? report_bug+0x164\/0x190\n[   41.518240]  ? handle_bug+0x3d\/0x70\n[   41.518541]  ? exc_invalid_op+0x17\/0x70\n[   41.520972]  ? asm_exc_invalid_op+0x1a\/0x20\n[   41.521325]  ? refcount_warn_saturate+0xa5\/0x130\n[   41.521708]  ipv6_get_ifaddr+0xda\/0xe0\n[   41.522035]  inet6_rtm_getaddr+0x342\/0x3f0\n[   41.522376]  ? __pfx_inet6_rtm_getaddr+0x10\/0x10\n[   41.522758]  rtnetlink_rcv_msg+0x334\/0x3d0\n[   41.523102]  ? netlink_unicast+0x30f\/0x390\n[   41.523445]  ? __pfx_rtnetlink_rcv_msg+0x10\/0x10\n[   41.523832]  netlink_rcv_skb+0x53\/0x100\n[   41.524157]  netlink_unicast+0x23b\/0x390\n[   41.524484]  netlink_sendmsg+0x1f2\/0x440\n[   41.524826]  __sys_sendto+0x1d8\/0x1f0\n[   41.525145]  __x64_sys_sendto+0x1f\/0x30\n[   41.525467]  do_syscall_64+0xa5\/0x1b0\n[   41.525794]  entry_SYSCALL_64_after_hwframe+0x72\/0x7a\n[   41.526213] RIP: 0033:0x7fbc4cfcea9a\n[   41.526528] Code: d8 64 89 02 48 c7 c0 ff ff ff ff eb b8 0f 1f 00 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c0 75 15 b8 2c 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 7e c3 0f 1f 44 00 00 41 54 48 83 ec 30 44 89\n[   41.527942] RSP: 002b:00007f\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01b11a0566670612bd464a932e5ac2eae53d8652","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fb02ec57ead2891a2306af8c51a306bc5945e70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b19e9507c275de0cfe61c24db69179dc52cf9fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cdb20c342cd0193d3e956e3d83981d0f438bb83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7633c4da919ad51164acbf1aa322cc1a3ead6129","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4b3b69a19016d4e7fbdbd1dbcc184915eb862e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cca606e14264098cba65efa82790825dbf69e903","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de76ae9ea1a6cf9e77fcec4f2df2904e26c23ceb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35970","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.860","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: Clear stale u->oob_skb.\n\nsyzkaller started to report deadlock of unix_gc_lock after commit\n4090fa373f0e (\"af_unix: Replace garbage collection algorithm.\"), but\nit just uncovers the bug that has been there since commit 314001f0bf92\n(\"af_unix: Add OOB support\").\n\nThe repro basically does the following.\n\n  from socket import *\n  from array import array\n\n  c1, c2 = socketpair(AF_UNIX, SOCK_STREAM)\n  c1.sendmsg([b'a'], [(SOL_SOCKET, SCM_RIGHTS, array(\"i\", [c2.fileno()]))], MSG_OOB)\n  c2.recv(1)  # blocked as no normal data in recv queue\n\n  c2.close()  # done async and unblock recv()\n  c1.close()  # done async and trigger GC\n\nA socket sends its file descriptor to itself as OOB data and tries to\nreceive normal data, but finally recv() fails due to async close().\n\nThe problem here is wrong handling of OOB skb in manage_oob().  When\nrecvmsg() is called without MSG_OOB, manage_oob() is called to check\nif the peeked skb is OOB skb.  In such a case, manage_oob() pops it\nout of the receive queue but does not clear unix_sock(sk)->oob_skb.\nThis is wrong in terms of uAPI.\n\nLet's say we send \"hello\" with MSG_OOB, and \"world\" without MSG_OOB.\nThe 'o' is handled as OOB data.  When recv() is called twice without\nMSG_OOB, the OOB data should be lost.\n\n  >>> from socket import *\n  >>> c1, c2 = socketpair(AF_UNIX, SOCK_STREAM, 0)\n  >>> c1.send(b'hello', MSG_OOB)  # 'o' is OOB data\n  5\n  >>> c1.send(b'world')\n  5\n  >>> c2.recv(5)  # OOB data is not received\n  b'hell'\n  >>> c2.recv(5)  # OOB date is skipped\n  b'world'\n  >>> c2.recv(5, MSG_OOB)  # This should return an error\n  b'o'\n\nIn the same situation, TCP actually returns -EINVAL for the last\nrecv().\n\nAlso, if we do not clear unix_sk(sk)->oob_skb, unix_poll() always set\nEPOLLPRI even though the data has passed through by previous recv().\n\nTo avoid these issues, we must clear unix_sk(sk)->oob_skb when dequeuing\nit from recv queue.\n\nThe reason why the old GC did not trigger the deadlock is because the\nold GC relied on the receive queue to detect the loop.\n\nWhen it is triggered, the socket with OOB data is marked as GC candidate\nbecause file refcount == inflight count (1).  However, after traversing\nall inflight sockets, the socket still has a positive inflight count (1),\nthus the socket is excluded from candidates.  Then, the old GC lose the\nchance to garbage-collect the socket.\n\nWith the old GC, the repro continues to create true garbage that will\nnever be freed nor detected by kmemleak as it's linked to the global\ninflight list.  That's why we couldn't even notice the issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/601a89ea24d05089debfa2dc896ea9f5937ac7a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/698a95ade1a00e6494482046902b986dfffd1caf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84a352b7eba1142a95441380058985ff19f25ec9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b46f4eaa4f0ec38909fb0072eea3aeddb32f954e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4bc99d04c689b5652665394ae8d3e02fb754153","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35971","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:11.947","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ks8851: Handle softirqs at the end of IRQ thread to fix hang\n\nThe ks8851_irq() thread may call ks8851_rx_pkts() in case there are\nany packets in the MAC FIFO, which calls netif_rx(). This netif_rx()\nimplementation is guarded by local_bh_disable() and local_bh_enable().\nThe local_bh_enable() may call do_softirq() to run softirqs in case\nany are pending. One of the softirqs is net_rx_action, which ultimately\nreaches the driver .start_xmit callback. If that happens, the system\nhangs. The entire call chain is below:\n\nks8851_start_xmit_par from netdev_start_xmit\nnetdev_start_xmit from dev_hard_start_xmit\ndev_hard_start_xmit from sch_direct_xmit\nsch_direct_xmit from __dev_queue_xmit\n__dev_queue_xmit from __neigh_update\n__neigh_update from neigh_update\nneigh_update from arp_process.constprop.0\narp_process.constprop.0 from __netif_receive_skb_one_core\n__netif_receive_skb_one_core from process_backlog\nprocess_backlog from __napi_poll.constprop.0\n__napi_poll.constprop.0 from net_rx_action\nnet_rx_action from __do_softirq\n__do_softirq from call_with_stack\ncall_with_stack from do_softirq\ndo_softirq from __local_bh_enable_ip\n__local_bh_enable_ip from netif_rx\nnetif_rx from ks8851_irq\nks8851_irq from irq_thread_fn\nirq_thread_fn from irq_thread\nirq_thread from kthread\nkthread from ret_from_fork\n\nThe hang happens because ks8851_irq() first locks a spinlock in\nks8851_par.c ks8851_lock_par() spin_lock_irqsave(&ksp->lock, ...)\nand with that spinlock locked, calls netif_rx(). Once the execution\nreaches ks8851_start_xmit_par(), it calls ks8851_lock_par() again\nwhich attempts to claim the already locked spinlock again, and the\nhang happens.\n\nMove the do_softirq() call outside of the spinlock protected section\nof ks8851_irq() by disabling BHs around the entire spinlock protected\nsection of ks8851_irq() handler. Place local_bh_enable() outside of\nthe spinlock protected section, so that it can trigger do_softirq()\nwithout the ks8851_par.c ks8851_lock_par() spinlock being held, and\nsafely call ks8851_start_xmit_par() without attempting to lock the\nalready locked spinlock.\n\nSince ks8851_irq() is protected by local_bh_disable()\/local_bh_enable()\nnow, replace netif_rx() with __netif_rx() which is not duplicating the\nlocal_bh_disable()\/local_bh_enable() calls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/492337a4fbd1421b42df684ee9b34be2a2722540","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49d5d70538b6b8f2a3f8f1ac30c1f921d4a0929b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be0384bf599cf1eb8d337517feeb732d71f75a6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cba376eb036c2c20077b41d47b317d8218fe754f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35972","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.013","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix possible memory leak in bnxt_rdma_aux_device_init()\n\nIf ulp = kzalloc() fails, the allocated edev will leak because it is\nnot properly assigned and the cleanup path will not be able to free it.\nFix it by assigning it properly immediately after allocation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10a9d6a7513f93d7faffcb341af0aa42be8218fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ac10c7d728d75bc9daaa8fade3c7a3273b9a9ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c60ed825530b8c0cc2b524efd39b1d696ec54004","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35973","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.077","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngeneve: fix header validation in geneve[6]_xmit_skb\n\nsyzbot is able to trigger an uninit-value in geneve_xmit() [1]\n\nProblem : While most ip tunnel helpers (like ip_tunnel_get_dsfield())\nuses skb_protocol(skb, true), pskb_inet_may_pull() is only using\nskb->protocol.\n\nIf anything else than ETH_P_IPV6 or ETH_P_IP is found in skb->protocol,\npskb_inet_may_pull() does nothing at all.\n\nIf a vlan tag was provided by the caller (af_packet in the syzbot case),\nthe network header might not point to the correct location, and skb\nlinear part could be smaller than expected.\n\nAdd skb_vlan_inet_prepare() to perform a complete mac validation.\n\nUse this in geneve for the moment, I suspect we need to adopt this\nmore broadly.\n\nv4 - Jakub reported v3 broke l2_tos_ttl_inherit.sh selftest\n   - Only call __vlan_get_protocol() for vlan types.\n\nv2,v3 - Addressed Sabrina comments on v1 and v2\n\n[1]\n\nBUG: KMSAN: uninit-value in geneve_xmit_skb drivers\/net\/geneve.c:910 [inline]\n BUG: KMSAN: uninit-value in geneve_xmit+0x302d\/0x5420 drivers\/net\/geneve.c:1030\n  geneve_xmit_skb drivers\/net\/geneve.c:910 [inline]\n  geneve_xmit+0x302d\/0x5420 drivers\/net\/geneve.c:1030\n  __netdev_start_xmit include\/linux\/netdevice.h:4903 [inline]\n  netdev_start_xmit include\/linux\/netdevice.h:4917 [inline]\n  xmit_one net\/core\/dev.c:3531 [inline]\n  dev_hard_start_xmit+0x247\/0xa20 net\/core\/dev.c:3547\n  __dev_queue_xmit+0x348d\/0x52c0 net\/core\/dev.c:4335\n  dev_queue_xmit include\/linux\/netdevice.h:3091 [inline]\n  packet_xmit+0x9c\/0x6c0 net\/packet\/af_packet.c:276\n  packet_snd net\/packet\/af_packet.c:3081 [inline]\n  packet_sendmsg+0x8bb0\/0x9ef0 net\/packet\/af_packet.c:3113\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:745\n  __sys_sendto+0x685\/0x830 net\/socket.c:2191\n  __do_sys_sendto net\/socket.c:2203 [inline]\n  __se_sys_sendto net\/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2199\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nUninit was created at:\n  slab_post_alloc_hook mm\/slub.c:3804 [inline]\n  slab_alloc_node mm\/slub.c:3845 [inline]\n  kmem_cache_alloc_node+0x613\/0xc50 mm\/slub.c:3888\n  kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:577\n  __alloc_skb+0x35b\/0x7a0 net\/core\/skbuff.c:668\n  alloc_skb include\/linux\/skbuff.h:1318 [inline]\n  alloc_skb_with_frags+0xc8\/0xbf0 net\/core\/skbuff.c:6504\n  sock_alloc_send_pskb+0xa81\/0xbf0 net\/core\/sock.c:2795\n  packet_alloc_skb net\/packet\/af_packet.c:2930 [inline]\n  packet_snd net\/packet\/af_packet.c:3024 [inline]\n  packet_sendmsg+0x722d\/0x9ef0 net\/packet\/af_packet.c:3113\n  sock_sendmsg_nosec net\/socket.c:730 [inline]\n  __sock_sendmsg+0x30f\/0x380 net\/socket.c:745\n  __sys_sendto+0x685\/0x830 net\/socket.c:2191\n  __do_sys_sendto net\/socket.c:2203 [inline]\n  __se_sys_sendto net\/socket.c:2199 [inline]\n  __x64_sys_sendto+0x125\/0x1d0 net\/socket.c:2199\n do_syscall_64+0xd5\/0x1f0\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nCPU: 0 PID: 5033 Comm: syz-executor346 Not tainted 6.9.0-rc1-syzkaller-00005-g928a87efa423 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 02\/29\/2024"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10204df9beda4978bd1d0c2db0d8375bfb03b915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/190d9efa5773f26d6f334b1b8be282c4fa13fd5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/357163fff3a6e48fe74745425a32071ec9caf852","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3c1ae6de74e3d2d6333d29a2d3e13e6094596c79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43be590456e1f3566054ce78ae2dbb68cbe1a536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a1b65d1e55d53b397cb27014208be1e04172670","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3adf11d7993518a39bd02b383cfe657ccc0023c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8a6213d70accb403b82924a1c229e733433a5ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35974","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.147","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix q->blkg_list corruption during disk rebind\n\nMultiple gendisk instances can allocated\/added for single request queue\nin case of disk rebind. blkg may still stay in q->blkg_list when calling\nblkcg_init_disk() for rebind, then q->blkg_list becomes corrupted.\n\nFix the list corruption issue by:\n\n- add blkg_init_queue() to initialize q->blkg_list & q->blkcg_mutex only\n- move calling blkg_init_queue() into blk_alloc_queue()\n\nThe list corruption should be started since commit f1c006f1c685 (\"blk-cgroup:\nsynchronize pd_free_fn() from blkg_free_workfn() and blkcg_deactivate_policy()\")\nwhich delays removing blkg from q->blkg_list into blkg_free_workfn()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/740ffad95ca8033bd6e080ed337655b13b4d38ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/858c489d81d659af17a4d11cfaad2afb42e47a76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b8ace080319a866f5dfe9da8e665ae51d971c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35975","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.210","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nocteontx2-pf: Fix transmit scheduler resource leak\n\nInorder to support shaping and scheduling, Upon class creation\nNetdev driver allocates trasmit schedulers.\n\nThe previous patch which added support for Round robin scheduling has\na bug due to which driver is not freeing transmit schedulers post\nclass deletion.\n\nThis patch fixes the same."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7af5582ea67209a23e44be9a9612ba7897be1f47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b34fe77a1b18654233e4e54b334fcaeddf487100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bccb798e07f8bb8b91212fe8ed1e421685449076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35976","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.273","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: validate user input for XDP_{UMEM|COMPLETION}_FILL_RING\n\nsyzbot reported an illegal copy in xsk_setsockopt() [1]\n\nMake sure to validate setsockopt() @optlen parameter.\n\n[1]\n\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n BUG: KASAN: slab-out-of-bounds in xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420\nRead of size 4 at addr ffff888028c6cde3 by task syz-executor.0\/7549\n\nCPU: 0 PID: 7549 Comm: syz-executor.0 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 03\/27\/2024\nCall Trace:\n <TASK>\n  __dump_stack lib\/dump_stack.c:88 [inline]\n  dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:114\n  print_address_description mm\/kasan\/report.c:377 [inline]\n  print_report+0x169\/0x550 mm\/kasan\/report.c:488\n  kasan_report+0x143\/0x180 mm\/kasan\/report.c:601\n  copy_from_sockptr_offset include\/linux\/sockptr.h:49 [inline]\n  copy_from_sockptr include\/linux\/sockptr.h:55 [inline]\n  xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420\n  do_sock_setsockopt+0x3af\/0x720 net\/socket.c:2311\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\nRIP: 0033:0x7fb40587de69\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fb40665a0c8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69\nRDX: 0000000000000005 RSI: 000000000000011b RDI: 0000000000000006\nRBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000\nR10: 0000000020001980 R11: 0000000000000246 R12: 0000000000000000\nR13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08\n <\/TASK>\n\nAllocated by task 7549:\n  kasan_save_stack mm\/kasan\/common.c:47 [inline]\n  kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68\n  poison_kmalloc_redzone mm\/kasan\/common.c:370 [inline]\n  __kasan_kmalloc+0x98\/0xb0 mm\/kasan\/common.c:387\n  kasan_kmalloc include\/linux\/kasan.h:211 [inline]\n  __do_kmalloc_node mm\/slub.c:3966 [inline]\n  __kmalloc+0x233\/0x4a0 mm\/slub.c:3979\n  kmalloc include\/linux\/slab.h:632 [inline]\n  __cgroup_bpf_run_filter_setsockopt+0xd2f\/0x1040 kernel\/bpf\/cgroup.c:1869\n  do_sock_setsockopt+0x6b4\/0x720 net\/socket.c:2293\n  __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334\n  __do_sys_setsockopt net\/socket.c:2343 [inline]\n  __se_sys_setsockopt net\/socket.c:2340 [inline]\n  __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340\n do_syscall_64+0xfb\/0x240\n entry_SYSCALL_64_after_hwframe+0x6d\/0x75\n\nThe buggy address belongs to the object at ffff888028c6cde0\n which belongs to the cache kmalloc-8 of size 8\nThe buggy address is located 1 bytes to the right of\n allocated 2-byte region [ffff888028c6cde0, ffff888028c6cde2)\n\nThe buggy address belongs to the physical page:\npage:ffffea0000a31b00 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888028c6c9c0 pfn:0x28c6c\nanon flags: 0xfff00000000800(slab|node=0|zone=1|lastcpupid=0x7ff)\npage_type: 0xffffffff()\nraw: 00fff00000000800 ffff888014c41280 0000000000000000 dead000000000001\nraw: ffff888028c6c9c0 0000000080800057 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\npage_owner tracks the page as allocated\npage last allocated via order 0, migratetype Unmovable, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223\n  set_page_owner include\/linux\/page_owner.h:31 [inline]\n  post_alloc_hook+0x1ea\/0x210 mm\/page_alloc.c:1533\n  prep_new_page mm\/page_alloc.c:\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: xsk: validar la entrada del usuario para XDP_{UMEM|COMPLETION}_FILL_RING syzbot informó una copia ilegal en xsk_setsockopt() [1] Asegúrese de validar el parámetro @optlen setsockopt(). [1] BUG: KASAN: losa fuera de límites en copy_from_sockptr_offset include\/linux\/sockptr.h:49 [en línea] ERROR: KASAN: losa fuera de límites en copy_from_sockptr include\/linux\/sockptr.h:55 [en línea] ERROR: KASAN: losa fuera de límites en xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420 Lectura de tamaño 4 en la dirección ffff888028c6cde3 mediante la tarea syz-executor.0\/7549 CPU: 0 PID: 7549 Comm: syz-executor.0 No contaminado 6.8.0-syzkaller-08951-gfe46a7dd189e #0 Nombre del hardware: Google Google Compute Engine\/Google Compute Engine, BIOS Google 27\/03\/2024 Seguimiento de llamadas:  __dump_stack lib\/dump_stack .c:88 [en línea] dump_stack_lvl+0x241\/0x360 lib\/dump_stack.c:114 print_address_description mm\/kasan\/report.c:377 [en línea] print_report+0x169\/0x550 mm\/kasan\/report.c:488 kasan_report+0x143\/ 0x180 mm\/kasan\/report.c:601 copy_from_sockptr_offset include\/linux\/sockptr.h:49 [en línea] copy_from_sockptr include\/linux\/sockptr.h:55 [en línea] xsk_setsockopt+0x909\/0xa40 net\/xdp\/xsk.c:1420 do_sock_setsockopt+0x3af\/0x720 net\/socket.c:2311 __sys_setsockopt+0x1ae\/0x250 net\/socket.c:2334 __do_sys_setsockopt net\/socket.c:2343 [en línea] __se_sys_setsockopt net\/socket.c:2340 [en línea] x64_sys_setsockopt+0xb5\/ 0xd0 net\/socket.c:2340 do_syscall_64+0xfb\/0x240 Entry_SYSCALL_64_after_hwframe+0x6d\/0x75 RIP: 0033:0x7fb40587de69 Código: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 &lt;48&gt; 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48 RSP: 0c8 EFLAGS: 00000246 ORIG_RAX : 0000000000000036 RAX: ffffffffffffffda RBX: 00007fb4059abf80 RCX: 00007fb40587de69 RDX: 0000000000000005 RSI: 000000000000011b RDI: 000000000 0000006 RBP: 00007fb4058ca47a R08: 0000000000000002 R09: 0000000000000000 R10: 0000000020001980 R11: 0000000000000246 R12: 000000000 0000000 R13: 000000000000000b R14: 00007fb4059abf80 R15: 00007fff57ee4d08  Asignado por tarea 7549: kasan_save_stack mm\/kasan\/common.c:47 [en línea] kasan_save_track+0x3f\/0x80 mm\/kasan\/common.c:68 veneno_kmalloc_redzone mm\/kasan\/common.c:370 [en línea] __kasan_kmalloc+0x98\/ 0xb0 mm\/kasan\/common.c:387 kasan_kmalloc include\/linux\/kasan.h:211 [en línea] __do_kmalloc_node mm\/slub.c:3966 [en línea] __kmalloc+0x233\/0x4a0 mm\/slub.c:3979 kmalloc include\/linux \/slab.h:632 [en línea] __cgroup_bpf_run_filter_setsockopt+0xd2f\/0x1040 kernel\/bpf\/cgroup.c:1869 do_sock_setsockopt+0x6b4\/0x720 net\/socket.c:2293 __sys_setsockopt+0x1ae\/0x250 334 __do_sys_setsockopt net\/ socket.c:2343 [en línea] __se_sys_setsockopt net\/socket.c:2340 [en línea] __x64_sys_setsockopt+0xb5\/0xd0 net\/socket.c:2340 do_syscall_64+0xfb\/0x240 Entry_SYSCALL_64_after_hwframe+0x6d\/0x75 El error la dirección pertenece al objeto en ffff888028c6cde0 que pertenece al caché kmalloc-8 de tamaño 8 La dirección con errores se encuentra 1 byte a la derecha de la región asignada de 2 bytes [ffff888028c6cde0, ffff888028c6cde2) La dirección con errores pertenece a la página física: página:ffffea0000a31b00 refcount:1 mapcount:0 Mapeo: 00000000000000000000 ÍNDICE: 0xffff888028c6c9c0 pfn: 0x28c6c Anon Flags: 0xffff00000000800 (Slab | Node = 0 | Zone = 1 | LastCpupid = 0x7ff) Page_Type: 0xffffffffffff () RAW: 00FFF000000800 0000000000000000 Dead000000000001 Raw: FFFFF888028C6C9C0 000000000080800057 00000001FFFFFFFFFFFFFFF 0000000000000000 Página arrojada porque: Kasan : mal acceso detectado page_owner rastrea la página como página asignada por última vez mediante orden 0, migrar tipo Inamovible, gfp_mask 0x112cc0(GFP_USER|__GFP_NOWARN|__GFP_NORETRY), pid 6648, tgid 6644 (syz-executor.0), ts 133906047828, free_ts 133859922223 set _page_owner incluye \/linux\/page_owner.h:31 [en línea] post_alloc_hook+0x1ea\/0x210 mm\/page_alloc.c:1533 prep_new_page mm\/page_alloc.c: ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/237f3cf13b20db183d3706d997eedc3c49eacd44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a523f14a3f53b46ff0e1fafd215b0bc5f6783aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eb979fbb2479bcd7e049f2f9978b6590dd8a0e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a82984b3c6a7e8c7937dba6e857ddf829d149417","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b143e19dc28c3211f050f7848d87d9b0a170e10c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0a068de65d5b7358e9aff792716afa9333f3922","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35977","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.340","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/chrome: cros_ec_uart: properly fix race condition\n\nThe cros_ec_uart_probe() function calls devm_serdev_device_open() before\nit calls serdev_device_set_client_ops(). This can trigger a NULL pointer\ndereference:\n\n    BUG: kernel NULL pointer dereference, address: 0000000000000000\n    ...\n    Call Trace:\n     <TASK>\n     ...\n     ? ttyport_receive_buf\n\nA simplified version of crashing code is as follows:\n\n    static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl,\n                                                      const u8 *data,\n                                                      size_t count)\n    {\n            struct serdev_device *serdev = ctrl->serdev;\n\n            if (!serdev || !serdev->ops->receive_buf) \/\/ CRASH!\n                return 0;\n\n            return serdev->ops->receive_buf(serdev, data, count);\n    }\n\nIt assumes that if SERPORT_ACTIVE is set and serdev exists, serdev->ops\nwill also exist. This conflicts with the existing cros_ec_uart_probe()\nlogic, as it first calls devm_serdev_device_open() (which sets\nSERPORT_ACTIVE), and only later sets serdev->ops via\nserdev_device_set_client_ops().\n\nCommit 01f95d42b8f4 (\"platform\/chrome: cros_ec_uart: fix race\ncondition\") attempted to fix a similar race condition, but while doing\nso, made the window of error for this race condition to happen much\nwider.\n\nAttempt to fix the race condition again, making sure we fully setup\nbefore calling devm_serdev_device_open()."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: plataforma\/chrome: cros_ec_uart: corrige correctamente la condición de ejecución. La función cros_ec_uart_probe() llama a devm_serdev_device_open() antes de llamar a serdev_device_set_client_ops(). Esto puede desencadenar una desreferencia del puntero NULL: ERROR: desreferencia del puntero NULL del kernel, dirección: 0000000000000000... Seguimiento de llamadas: ...? ttyport_receive_buf Una versión simplificada del código de bloqueo es la siguiente: static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl, const u8 *data, size_t count) { struct serdev_device *serdev = ctrl-&gt;serdev; if (!serdev || !serdev-&gt;ops-&gt;receive_buf) \/\/ ¡CRASH! devolver 0; devolver serdev-&gt;ops-&gt;receive_buf(serdev, datos, recuento); } Se supone que si SERPORT_ACTIVE está configurado y serdev existe, serdev-&gt;ops también existirá. Esto entra en conflicto con la lógica cros_ec_uart_probe() existente, ya que primero llama a devm_serdev_device_open() (que configura SERPORT_ACTIVE), y solo luego configura serdev-&gt;ops a través de serdev_device_set_client_ops(). La confirmación 01f95d42b8f4 (\"plataforma\/chrome: cros_ec_uart: arreglar condición de ejecución\") intentó arreglar una condición de ejecución similar, pero al hacerlo, hizo que la ventana de error para que esta condición de ejecución ocurriera fuera mucho más amplia. Intente corregir la condición de ejecución nuevamente, asegurándose de realizar la configuración completa antes de llamar a devm_serdev_device_open()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5e700b384ec13f5bcac9855cb28fcc674f1d3593","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e9bb74a93b7daa32313ccaefd0edc529d40daf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfd758041d8b79aa8c3f811b6bd6105379f2f702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35978","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.407","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix memory leak in hci_req_sync_complete()\n\nIn 'hci_req_sync_complete()', always free the previous sync\nrequest state before assigning reference to a new one."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: Bluetooth: corrija la pérdida de memoria en hci_req_sync_complete() En 'hci_req_sync_complete()', libere siempre el estado de solicitud de sincronización anterior antes de asignar una referencia a una nueva."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45d355a926ab40f3ae7bc0b0a00cb0e3e8a5a810","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4beab84fbb50df3be1d8f8a976e6fe882ca65cb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66fab1e120b39f8f47a94186ddee36006fc02ca8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75193678cce993aa959e7764b6df2f599886dd06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8478394f76c748862ef179a16f651f752bdafaf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89a32741f4217856066c198a4a7267bcdd1edd67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ab5e44b9bac946bd49fd63264a08cd1ea494e76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4cb8382fff6706436b66eafd9c0ee857ff0a9f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35979","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.480","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nraid1: fix use-after-free for original bio in raid1_write_request()\n\nr1_bio->bios[] is used to record new bios that will be issued to\nunderlying disks, however, in raid1_write_request(), r1_bio->bios[]\nwill set to the original bio temporarily. Meanwhile, if blocked rdev\nis set, free_r1bio() will be called causing that all r1_bio->bios[]\nto be freed:\n\nraid1_write_request()\n r1_bio = alloc_r1bio(mddev, bio); -> r1_bio->bios[] is NULL\n for (i = 0;  i < disks; i++) -> for each rdev in conf\n  \/\/ first rdev is normal\n  r1_bio->bios[0] = bio; -> set to original bio\n  \/\/ second rdev is blocked\n  if (test_bit(Blocked, &rdev->flags))\n   break\n\n if (blocked_rdev)\n  free_r1bio()\n   put_all_bios()\n    bio_put(r1_bio->bios[0]) -> original bio is freed\n\nTest scripts:\n\nmdadm -CR \/dev\/md0 -l1 -n4 \/dev\/sd[abcd] --assume-clean\nfio -filename=\/dev\/md0 -ioengine=libaio -rw=write -bs=4k -numjobs=1 \\\n    -iodepth=128 -name=test -direct=1\necho blocked > \/sys\/block\/md0\/md\/rd2\/state\n\nTest result:\n\nBUG bio-264 (Not tainted): Object already free\n-----------------------------------------------------------------------------\n\nAllocated in mempool_alloc_slab+0x24\/0x50 age=1 cpu=1 pid=869\n kmem_cache_alloc+0x324\/0x480\n mempool_alloc_slab+0x24\/0x50\n mempool_alloc+0x6e\/0x220\n bio_alloc_bioset+0x1af\/0x4d0\n blkdev_direct_IO+0x164\/0x8a0\n blkdev_write_iter+0x309\/0x440\n aio_write+0x139\/0x2f0\n io_submit_one+0x5ca\/0xb70\n __do_sys_io_submit+0x86\/0x270\n __x64_sys_io_submit+0x22\/0x30\n do_syscall_64+0xb1\/0x210\n entry_SYSCALL_64_after_hwframe+0x6c\/0x74\nFreed in mempool_free_slab+0x1f\/0x30 age=1 cpu=1 pid=869\n kmem_cache_free+0x28c\/0x550\n mempool_free_slab+0x1f\/0x30\n mempool_free+0x40\/0x100\n bio_free+0x59\/0x80\n bio_put+0xf0\/0x220\n free_r1bio+0x74\/0xb0\n raid1_make_request+0xadf\/0x1150\n md_handle_request+0xc7\/0x3b0\n md_submit_bio+0x76\/0x130\n __submit_bio+0xd8\/0x1d0\n submit_bio_noacct_nocheck+0x1eb\/0x5c0\n submit_bio_noacct+0x169\/0xd40\n submit_bio+0xee\/0x1d0\n blkdev_direct_IO+0x322\/0x8a0\n blkdev_write_iter+0x309\/0x440\n aio_write+0x139\/0x2f0\n\nSince that bios for underlying disks are not allocated yet, fix this\nproblem by using mempool_free() directly to free the r1_bio."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: raid1: corrige el uso después de liberar la biografía original en raid1_write_request() r1_bio-&gt;bios[] se usa para registrar nuevas biografías que se emitirán a los discos subyacentes; sin embargo, en raid1_write_request(), r1_bio-&gt;bios[] se configurará temporalmente en la biografía original. Mientras tanto, si se establece rdev bloqueado, se llamará a free_r1bio() causando que todos los r1_bio-&gt;bios[] sean liberados: raid1_write_request() r1_bio = alloc_r1bio(mddev, bio); -&gt; r1_bio-&gt;bios[] es NULL para (i = 0; i &lt; discos; i++) -&gt; para cada rdev en conf \/\/ el primer rdev es normal r1_bio-&gt;bios[0] = bio; -&gt; establecer en biografía original \/\/ el segundo rdev está bloqueado si (test_bit(Blocked, &amp;rdev-&gt;flags)) break if (blocked_rdev) free_r1bio() put_all_bios() bio_put(r1_bio-&gt;bios[0]) -&gt; biografía original es Scripts de prueba liberados: mdadm -CR \/dev\/md0 -l1 -n4 \/dev\/sd[abcd] --assume-clean fio -filename=\/dev\/md0 -ioengine=libaio -rw=write -bs=4k -numjobs= 1 \\ -io Depth=128 -name=test -direct=1 eco bloqueado &gt; \/sys\/block\/md0\/md\/rd2\/state Resultado de la prueba: ERROR bio-264 (No contaminado): Objeto ya libre ------ -------------------------------------------------- --------------------- Asignado en mempool_alloc_slab+0x24\/0x50 age=1 cpu=1 pid=869 kmem_cache_alloc+0x324\/0x480 mempool_alloc_slab+0x24\/0x50 mempool_alloc+0x6e \/0x220 bio_alloc_bioset+0x1af\/0x4d0 blkdev_direct_IO+0x164\/0x8a0 blkdev_write_iter+0x309\/0x440 aio_write+0x139\/0x2f0 io_submit_one+0x5ca\/0xb70 __do_sys_io_submit+0x86\/0x270 __x64_sys_io_submit+0x22\/0x30 do_syscall_64+0xb1\/0x210 Entry_SYSCALL_64_after_hwframe+0x6c\/0x74 Liberado en mempool_free_slab +0x1f\/0x30 edad=1 cpu=1 pid=869 kmem_cache_free+0x28c\/0x550 mempool_free_slab+0x1f\/0x30 mempool_free+0x40\/0x100 bio_free+0x59\/0x80 bio_put+0xf0\/0x220 free_r1bio+0x74\/0xb0 raid1_make_ request+0xadf\/0x1150 md_handle_request+ 0xc7\/0x3b0 md_submit_bio+0x76\/0x130 __submit_bio+0xd8\/0x1d0 submit_bio_noacct_nocheck+0x1eb\/0x5c0 submit_bio_noacct+0x169\/0xd40 submit_bio+0xee\/0x1d0 blkdev_direct_IO+0x322\/0x8a0 _write_iter+0x309\/0x440 aio_write+0x139\/0x2f0 Dado que las BIOS para los discos subyacentes son aún no asignado, solucione este problema usando mempool_free() directamente para liberar r1_bio."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f28d49a328fe20926995d5fbdc92da665596268","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f423f41b7679c09abb26d2bd54be5cbef23c9446","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcf3f7e2fc8a53a6140beee46ec782a4c88e4744","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35980","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.550","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: tlb: Fix TLBI RANGE operand\n\nKVM\/arm64 relies on TLBI RANGE feature to flush TLBs when the dirty\npages are collected by VMM and the page table entries become write\nprotected during live migration. Unfortunately, the operand passed\nto the TLBI RANGE instruction isn't correctly sorted out due to the\ncommit 117940aa6e5f (\"KVM: arm64: Define kvm_tlb_flush_vmid_range()\").\nIt leads to crash on the destination VM after live migration because\nTLBs aren't flushed completely and some of the dirty pages are missed.\n\nFor example, I have a VM where 8GB memory is assigned, starting from\n0x40000000 (1GB). Note that the host has 4KB as the base page size.\nIn the middile of migration, kvm_tlb_flush_vmid_range() is executed\nto flush TLBs. It passes MAX_TLBI_RANGE_PAGES as the argument to\n__kvm_tlb_flush_vmid_range() and __flush_s2_tlb_range_op(). SCALE#3\nand NUM#31, corresponding to MAX_TLBI_RANGE_PAGES, isn't supported\nby __TLBI_RANGE_NUM(). In this specific case, -1 has been returned\nfrom __TLBI_RANGE_NUM() for SCALE#3\/2\/1\/0 and rejected by the loop\nin the __flush_tlb_range_op() until the variable @scale underflows\nand becomes -9, 0xffff708000040000 is set as the operand. The operand\nis wrong since it's sorted out by __TLBI_VADDR_RANGE() according to\ninvalid @scale and @num.\n\nFix it by extending __TLBI_RANGE_NUM() to support the combination of\nSCALE#3 and NUM#31. With the changes, [-1 31] instead of [-1 30] can\nbe returned from the macro, meaning the TLBs for 0x200000 pages in the\nabove example can be flushed in one shoot with SCALE#3 and NUM#31. The\nmacro TLBI_RANGE_MASK is dropped since no one uses it any more. The\ncomments are also adjusted accordingly."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: arm64: tlb: corrige el operando TLBI RANGE KVM\/arm64 se basa en la función TLBI RANGE para vaciar los TLB cuando VMM recopila las páginas sucias y las entradas de la tabla de páginas quedan protegidas contra escritura durante la migración en vivo. . Desafortunadamente, el operando pasado a la instrucción TLBI RANGE no está ordenado correctamente debido a la confirmación 117940aa6e5f (\"KVM: arm64: Define kvm_tlb_flush_vmid_range()\"). Esto provoca un bloqueo en la máquina virtual de destino después de la migración en vivo porque los TLB no se vacían por completo y se omiten algunas de las páginas sucias. Por ejemplo, tengo una máquina virtual a la que se asignan 8 GB de memoria, a partir de 0x40000000 (1 GB). Tenga en cuenta que el host tiene 4 KB como tamaño de página base. En medio de la migración, se ejecuta kvm_tlb_flush_vmid_range() para vaciar los TLB. Pasa MAX_TLBI_RANGE_PAGES como argumento para __kvm_tlb_flush_vmid_range() y __flush_s2_tlb_range_op(). SCALE#3 y NUM#31, correspondientes a MAX_TLBI_RANGE_PAGES, no son compatibles con __TLBI_RANGE_NUM(). En este caso específico, -1 ha sido devuelto por __TLBI_RANGE_NUM() para SCALE#3\/2\/1\/0 y rechazado por el bucle en __flush_tlb_range_op() hasta que la variable @scale se desborda por debajo y se convierte en -9, 0xffff708000040000 se establece como el operando. El operando es incorrecto ya que __TLBI_VADDR_RANGE() lo ordena según @scale y @num no válidos. Solucionelo extendiendo __TLBI_RANGE_NUM() para admitir la combinación de SCALE#3 y NUM#31. Con los cambios, [-1 31] en lugar de [-1 30] se puede devolver desde la macro, lo que significa que los TLB para páginas 0x200000 en el ejemplo anterior se pueden vaciar de una vez con ESCALA#3 y NUM#31. La macro TLBI_RANGE_MASK se elimina porque ya nadie la usa. Los comentarios también se adaptan en consecuencia."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/944db7b536baaf49d7e576af36a94f4719552b07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac4ad513de4fba18b4ac0ace132777d0910e8cfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ba51ab24fddef79fc212f9840de54db8fd1685","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35981","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.617","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio_net: Do not send RSS key if it is not supported\n\nThere is a bug when setting the RSS options in virtio_net that can break\nthe whole machine, getting the kernel into an infinite loop.\n\nRunning the following command in any QEMU virtual machine with virtionet\nwill reproduce this problem:\n\n    # ethtool -X eth0  hfunc toeplitz\n\nThis is how the problem happens:\n\n1) ethtool_set_rxfh() calls virtnet_set_rxfh()\n\n2) virtnet_set_rxfh() calls virtnet_commit_rss_command()\n\n3) virtnet_commit_rss_command() populates 4 entries for the rss\nscatter-gather\n\n4) Since the command above does not have a key, then the last\nscatter-gatter entry will be zeroed, since rss_key_size == 0.\nsg_buf_size = vi->rss_key_size;\n\n5) This buffer is passed to qemu, but qemu is not happy with a buffer\nwith zero length, and do the following in virtqueue_map_desc() (QEMU\nfunction):\n\n  if (!sz) {\n      virtio_error(vdev, \"virtio: zero sized buffers are not allowed\");\n\n6) virtio_error() (also QEMU function) set the device as broken\n\n    vdev->broken = true;\n\n7) Qemu bails out, and do not repond this crazy kernel.\n\n8) The kernel is waiting for the response to come back (function\nvirtnet_send_command())\n\n9) The kernel is waiting doing the following :\n\n      while (!virtqueue_get_buf(vi->cvq, &tmp) &&\n\t     !virtqueue_is_broken(vi->cvq))\n\t      cpu_relax();\n\n10) None of the following functions above is true, thus, the kernel\nloops here forever. Keeping in mind that virtqueue_is_broken() does\nnot look at the qemu `vdev->broken`, so, it never realizes that the\nvitio is broken at QEMU side.\n\nFix it by not sending RSS commands if the feature is not available in\nthe device."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: virtio_net: no enviar clave RSS si no es compatible. Hay un error al configurar las opciones de RSS en virtio_net que puede dañar toda la máquina, haciendo que el kernel entre en un bucle infinito. Ejecutar el siguiente comando en cualquier máquina virtual QEMU con virtionet reproducirá este problema: # ethtool -X eth0 hfunc toeplitz Así es como ocurre el problema: 1) ethtool_set_rxfh() llama a virtnet_set_rxfh() 2) virtnet_set_rxfh() llama a virtnet_commit_rss_command() 3) virtnet_commit_rss_command() completa 4 entradas para rss scatter-gather 4) Dado que el comando anterior no tiene una clave, la última entrada de scatter-gatter se pondrá a cero, ya que rss_key_size == 0. sg_buf_size = vi-&gt;rss_key_size; 5) Este búfer se pasa a qemu, pero qemu no está contento con un búfer con longitud cero, y haga lo siguiente en virtqueue_map_desc() (función QEMU): if (!sz) { virtio_error(vdev, \"virtio: buffers de tamaño cero no están permitidos\"); 6) virtio_error() (también función QEMU) configura el dispositivo como roto vdev-&gt;broken = true; 7) Qemu se retira y no responde a este kernel loco. 8) El kernel está esperando a que regrese la respuesta (función virtnet_send_command()) 9) El kernel está esperando haciendo lo siguiente: while (!virtqueue_get_buf(vi-&gt;cvq, &amp;tmp) &amp;&amp; !virtqueue_is_broken(vi-&gt;cvq)) cpu_relax(); 10) Ninguna de las siguientes funciones anteriores es verdadera, por lo tanto, el núcleo se repite aquí para siempre. Teniendo en cuenta que virtqueue_is_broken() no mira el qemu `vdev-&gt;broken`, por lo tanto, nunca se da cuenta de que el vitio está roto en el lado de QEMU. Solucionelo no enviando comandos RSS si la función no está disponible en el dispositivo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/059a49aa2e25c58f90b50151f109dd3c4cdb3a47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28e9a64638cd16bc1ecac9ff74ffeacb9fb652de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43a71c1b4b3a6d4db857b1435d271540279fc7de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/539a2b995a4ed93125cb0efae0f793b00ab2158b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35982","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.687","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid infinite loop trying to resize local TT\n\nIf the MTU of one of an attached interface becomes too small to transmit\nthe local translation table then it must be resized to fit inside all\nfragments (when enabled) or a single packet.\n\nBut if the MTU becomes too low to transmit even the header + the VLAN\nspecific part then the resizing of the local TT will never succeed. This\ncan for example happen when the usable space is 110 bytes and 11 VLANs are\non top of batman-adv. In this case, at least 116 byte would be needed.\nThere will just be an endless spam of\n\n   batman_adv: batadv0: Forced to purge local tt entries to fit new maximum fragment MTU (110)\n\nin the log but the function will never finish. Problem here is that the\ntimeout will be halved all the time and will then stagnate at 0 and\ntherefore never be able to reduce the table even more.\n\nThere are other scenarios possible with a similar result. The number of\nBATADV_TT_CLIENT_NOPURGE entries in the local TT can for example be too\nhigh to fit inside a packet. Such a scenario can therefore happen also with\nonly a single VLAN + 7 non-purgable addresses - requiring at least 120\nbytes.\n\nWhile this should be handled proactively when:\n\n* interface with too low MTU is added\n* VLAN is added\n* non-purgeable local mac is added\n* MTU of an attached interface is reduced\n* fragmentation setting gets disabled (which most likely requires dropping\n  attached interfaces)\n\nnot all of these scenarios can be prevented because batman-adv is only\nconsuming events without the the possibility to prevent these actions\n(non-purgable MAC address added, MTU of an attached interface is reduced).\nIt is therefore necessary to also make sure that the code is able to handle\nalso the situations when there were already incompatible system\nconfiguration are present."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: batman-adv: Evite el bucle infinito al intentar cambiar el tamaño del TT local. Si la MTU de una de las interfaces conectadas se vuelve demasiado pequeña para transmitir la tabla de traducción local, entonces se debe cambiar su tamaño para que quepa dentro. todos los fragmentos (cuando está habilitado) o un solo paquete. Pero si la MTU es demasiado baja para transmitir incluso el encabezado + la parte específica de la VLAN, entonces el cambio de tamaño del TT local nunca tendrá éxito. Esto puede suceder, por ejemplo, cuando el espacio utilizable es de 110 bytes y hay 11 VLAN encima de batman-adv. En este caso, se necesitarían al menos 116 bytes. Simplemente habrá un spam interminable de batman_adv: batadv0: Obligado a purgar las entradas tt locales para ajustar el nuevo fragmento máximo MTU (110) en el registro, pero la función nunca finalizará. El problema aquí es que el tiempo de espera se reducirá a la mitad todo el tiempo y luego se estancará en 0 y, por lo tanto, nunca podrá reducir la tabla aún más. Hay otros escenarios posibles con un resultado similar. El número de entradas BATADV_TT_CLIENT_NOPURGE en el TT local puede, por ejemplo, ser demasiado alto para caber dentro de un paquete. Por lo tanto, este escenario puede ocurrir también con una sola VLAN + 7 direcciones no purgables, lo que requiere al menos 120 bytes. Si bien esto debe manejarse de manera proactiva cuando: * se agrega una interfaz con una MTU demasiado baja * se agrega una VLAN * se agrega una mac local no purgable * se reduce la MTU de una interfaz conectada * la configuración de fragmentación se desactiva (lo que probablemente requiera eliminar las interfaces conectadas) No todos estos escenarios se pueden prevenir porque batman-adv solo consume eventos sin la posibilidad de evitar estas acciones (se agrega una dirección MAC no purgable, se reduce la MTU de una interfaz adjunta). Por lo tanto, también es necesario asegurarse de que el código sea capaz de manejar también las situaciones en las que ya había una configuración del sistema incompatible."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04720ea2e6c64459a90ca28570ea78335eccd924","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3fe79b2c83461edbbf86ed8a6f3924820ff89259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ca2a5fb54ea2cc43edea614207fcede562d91c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70a8be9dc2fb65d67f8c1e0c88c587e08e2e575d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87b6af1a7683e021710c08fc0551fc078346032f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1f532a3b1e6d2e5559c7ace49322922637a28aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3ddf6904073990492454b1dd1c10a24be8c74c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca54e2671548616ad34885f90d4f26f7adb088f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35983","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.760","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbounds: Use the right number of bits for power-of-two CONFIG_NR_CPUS\n\nbits_per() rounds up to the next power of two when passed a power of\ntwo.  This causes crashes on some machines and configurations."},{"lang":"es","value":" En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: límites: utilice el número correcto de bits para potencia de dos CONFIG_NR_CPUS bits_per() redondea a la siguiente potencia de dos cuando se pasa una potencia de dos. Esto provoca fallos en algunas máquinas y configuraciones."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/15aa09d6d84629eb5296de30ac0aa19a33512f16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5af385f5f4cddf908f663974847a4083b2ff2c79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66297b2ceda841f809637731d287bda3a93b49d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93ba36238db6a74a82feb3dc476e25ea424ad630","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b7c5004d7c5ae062134052a85290869a015814c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d34a516f2635090d36a306f84573e8de3d7374ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebfe41889b762f1933c6762f6624b9724a25bee0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35984","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.830","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: smbus: fix NULL function pointer dereference\n\nBaruch reported an OOPS when using the designware controller as target\nonly. Target-only modes break the assumption of one transfer function\nalways being available. Fix this by always checking the pointer in\n__i2c_transfer.\n\n[wsa: dropped the simplification in core-smbus to avoid theoretical regressions]"},{"lang":"es","value":" En el kernel de Linux, se resolvió la siguiente vulnerabilidad: i2c: smbus: corrige la desreferencia del puntero de función NULL. Baruch informó de un OOPS al usar el controlador de designware como destino únicamente. Los modos de solo objetivo rompen el supuesto de que siempre hay una función de transferencia disponible. Solucione este problema comprobando siempre el puntero en __i2c_transfer. [wsa: abandonó la simplificación en core-smbus para evitar regresiones teóricas]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/357c64ef1ef39b1e7cd91ab6bdd304d043702c83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40f1d79f07b49c8a64a861706e5163f2db4bd95d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e75e222d397c6752b229ed72fc4644c8c36ecde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a09eae9a7db597fe0c1fc91636205b4a25d2620","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fd72404587d7db4acb2d241fd8c387afb0a7aec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91811a31b68d3765b3065f4bb6d7d6d84a7cfc9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad3c3ac7a03be3697114f781193dd3e9d97e6e23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3425674ff68dc521c57c6eabad0cbd20a027d85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35985","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.920","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/eevdf: Prevent vlag from going out of bounds in reweight_eevdf()\n\nIt was possible to have pick_eevdf() return NULL, which then causes a\nNULL-deref. This turned out to be due to entity_eligible() returning\nfalsely negative because of a s64 multiplcation overflow.\n\nSpecifically, reweight_eevdf() computes the vlag without considering\nthe limit placed upon vlag as update_entity_lag() does, and then the\nscaling multiplication (remember that weight is 20bit fixed point) can\noverflow. This then leads to the new vruntime being weird which then\ncauses the above entity_eligible() to go side-ways and claim nothing\nis eligible.\n\nThus limit the range of vlag accordingly.\n\nAll this was quite rare, but fatal when it does happen."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: sched\/eevdf: evita que vlag se salga de los límites en reweight_eevdf(). Era posible que pick_eevdf() devolviera NULL, lo que luego causa un NULL-deref. Esto resultó ser debido a que entidad_eligible() devolvió un resultado falso negativo debido a un desbordamiento de multiplicación s64. Específicamente, reweight_eevdf() calcula el vlag sin considerar el límite impuesto a vlag como lo hace update_entity_lag(), y luego la multiplicación de escala (recuerde que el peso es un punto fijo de 20 bits) puede desbordarse. Esto luego lleva a que el nuevo vruntime sea extraño, lo que luego hace que la entidad_eligible() anterior se desvíe y afirme que nada es elegible. Por lo tanto, limite el rango de vlag en consecuencia. Todo esto fue bastante raro, pero fatal cuando sucede."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06f27e6d7bf0abf54488259ef36bbf0e1fccb35c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1560d1f6eb6b398bddd80c16676776c0325fe5fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/470d347b14b0ecffa9b39cf8f644fa2351db3efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35986","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:12.990","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: ti: tusb1210: Resolve charger-det crash if charger psy is unregistered\n\nThe power_supply frame-work is not really designed for there to be\nlong living in kernel references to power_supply devices.\n\nSpecifically unregistering a power_supply while some other code has\na reference to it triggers a WARN in power_supply_unregister():\n\n\tWARN_ON(atomic_dec_return(&psy->use_cnt));\n\nFolllowed by the power_supply still getting removed and the\nbacking data freed anyway, leaving the tusb1210 charger-detect code\nwith a dangling reference, resulting in a crash the next time\ntusb1210_get_online() is called.\n\nFix this by only holding the reference in tusb1210_get_online()\nfreeing it at the end of the function. Note this still leaves\na theoretical race window, but it avoids the issue when manually\nrmmod-ing the charger chip driver during development."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: phy: ti: tusb1210: resolver el bloqueo del cargador-det si el cargador psy no está registrado. El marco power_supply no está realmente manipulado para que haya referencias duraderas en el kernel a los dispositivos power_supply. Específicamente, cancelar el registro de un power_supply mientras algún otro código tiene una referencia a él activa una ADVERTENCIA en power_supply_unregister(): WARN_ON(atomic_dec_return(&amp;psy-&gt;use_cnt)); Seguido por power_supply aún se elimina y los datos de respaldo se liberan de todos modos, dejando el código de detección del cargador tusb1210 con una referencia colgante, lo que resulta en un bloqueo la próxima vez que se llama a tusb1210_get_online(). Solucione este problema manteniendo únicamente la referencia en tusb1210_get_online() liberándola al final de la función. Tenga en cuenta que esto aún deja una ventana de ejecución teórica, pero evita el problema al modificar manualmente el controlador del chip del cargador durante el desarrollo."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25b3498485ac281e5851700e33b97f12c9533fd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73224a5d2180066c7fe05b4656647601ba08d588","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9827caa5105fb16d1fae2e75c8d0e4662014b3ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf6e4ee5c43690e4c5a8a057bbcd4ff986bed052","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35987","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.057","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix loading 64-bit NOMMU kernels past the start of RAM\n\ncommit 3335068f8721 (\"riscv: Use PUD\/P4D\/PGD pages for the linear\nmapping\") added logic to allow using RAM below the kernel load address.\nHowever, this does not work for NOMMU, where PAGE_OFFSET is fixed to the\nkernel load address. Since that range of memory corresponds to PFNs\nbelow ARCH_PFN_OFFSET, mm initialization runs off the beginning of\nmem_map and corrupts adjacent kernel memory. Fix this by restoring the\nprevious behavior for NOMMU kernels."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: riscv: se corrigió la carga de kernels NOMMU de 64 bits después del inicio de la confirmación de RAM. 3335068f8721 (\"riscv: use páginas PUD\/P4D\/PGD para el mapeo lineal\") se agregó lógica para permitir el uso RAM debajo de la dirección de carga del kernel. Sin embargo, esto no funciona para NOMMU, donde PAGE_OFFSET está fijado a la dirección de carga del kernel. Dado que ese rango de memoria corresponde a los PFN por debajo de ARCH_PFN_OFFSET, la inicialización de mm se ejecuta desde el principio de mem_map y corrompe la memoria del kernel adyacente. Solucione este problema restaurando el comportamiento anterior de los núcleos NOMMU."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/aea702dde7e9876fb00571a2602f25130847bf0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b008e327fa570aca210f98c817757649bae56694","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea6628e4e2353978af7e3b4ad4fdaab6149acf3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35988","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.120","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Fix TASK_SIZE on 64-bit NOMMU\n\nOn NOMMU, userspace memory can come from anywhere in physical RAM. The\ncurrent definition of TASK_SIZE is wrong if any RAM exists above 4G,\ncausing spurious failures in the userspace access routines."},{"lang":"es","value":" En el kernel de Linux, se resolvió la siguiente vulnerabilidad: riscv: corrige TASK_SIZE en NOMMU de 64 bits En NOMMU, la memoria del espacio de usuario puede provenir de cualquier lugar de la RAM física. La definición actual de TASK_SIZE es incorrecta si existe RAM por encima de 4G, lo que provoca fallos falsos en las rutinas de acceso al espacio de usuario."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04bf2e5f95c1a52e28a7567a507f926efe31c3b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4201b8c8f2c32af321fb50867e68ac6c1cbed4be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52e8a42b11078d2aad4b9ba96503d77c7299168b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6065e736f82c817c9a597a31ee67f0ce4628e948","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0f0dbbb1bc49fa0de18e92c36492ff6d804cdaa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efdcfa554b6eb228943ef1dd4d023c606be647d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35989","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.190","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Fix oops during rmmod on single-CPU platforms\n\nDuring the removal of the idxd driver, registered offline callback is\ninvoked as part of the clean up process. However, on systems with only\none CPU online, no valid target is available to migrate the\nperf context, resulting in a kernel oops:\n\n    BUG: unable to handle page fault for address: 000000000002a2b8\n    #PF: supervisor write access in kernel mode\n    #PF: error_code(0x0002) - not-present page\n    PGD 1470e1067 P4D 0\n    Oops: 0002 [#1] PREEMPT SMP NOPTI\n    CPU: 0 PID: 20 Comm: cpuhp\/0 Not tainted 6.8.0-rc6-dsa+ #57\n    Hardware name: Intel Corporation AvenueCity\/AvenueCity, BIOS BHSDCRB1.86B.2492.D03.2307181620 07\/18\/2023\n    RIP: 0010:mutex_lock+0x2e\/0x50\n    ...\n    Call Trace:\n    <TASK>\n    __die+0x24\/0x70\n    page_fault_oops+0x82\/0x160\n    do_user_addr_fault+0x65\/0x6b0\n    __pfx___rdmsr_safe_on_cpu+0x10\/0x10\n    exc_page_fault+0x7d\/0x170\n    asm_exc_page_fault+0x26\/0x30\n    mutex_lock+0x2e\/0x50\n    mutex_lock+0x1e\/0x50\n    perf_pmu_migrate_context+0x87\/0x1f0\n    perf_event_cpu_offline+0x76\/0x90 [idxd]\n    cpuhp_invoke_callback+0xa2\/0x4f0\n    __pfx_perf_event_cpu_offline+0x10\/0x10 [idxd]\n    cpuhp_thread_fun+0x98\/0x150\n    smpboot_thread_fn+0x27\/0x260\n    smpboot_thread_fn+0x1af\/0x260\n    __pfx_smpboot_thread_fn+0x10\/0x10\n    kthread+0x103\/0x140\n    __pfx_kthread+0x10\/0x10\n    ret_from_fork+0x31\/0x50\n    __pfx_kthread+0x10\/0x10\n    ret_from_fork_asm+0x1b\/0x30\n    <TASK>\n\nFix the issue by preventing the migration of the perf context to an\ninvalid target."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: dmaengine: idxd: soluciona errores durante rmmod en plataformas de CPU única Durante la eliminación del controlador idxd, se invoca la devolución de llamada sin conexión registrada como parte del proceso de limpieza. Sin embargo, en sistemas con una sola CPU en línea, no hay ningún destino válido disponible para migrar el contexto de rendimiento, lo que genera un error del kernel: ERROR: no se puede manejar el error de página para la dirección: 000000000002a2b8 #PF: acceso de escritura del supervisor en modo kernel #PF: error_code(0x0002) - página no presente PGD 1470e1067 P4D 0 Ups: 0002 [#1] PREEMPT SMP NOPTI CPU: 0 PID: 20 Comm: cpuhp\/0 No contaminado 6.8.0-rc6-dsa+ #57 Nombre de hardware: Intel Corporation AvenueCity\/AvenueCity, BIOS BHSDCRB1.86B.2492.D03.2307181620 18\/07\/2023 RIP: 0010:mutex_lock+0x2e\/0x50 ... Seguimiento de llamadas:  __die+0x24\/0x70 page_fault_oops+0x82\/0x160 do_user_addr_fault++0x65 \/0x6b0 __pfx___rdmsr_safe_on_cpu+0x10\/0x10 exc_page_fault+0x7d\/0x170 asm_exc_page_fault+0x26\/0x30 mutex_lock+0x2e\/0x50 mutex_lock+0x1e\/0x50 perf_pmu_migrate_context+0x87\/0x1f0 f_event_cpu_offline+0x76\/0x90 [idxd] cpuhp_invoke_callback+0xa2\/0x4f0 __pfx_perf_event_cpu_offline+0x10\/0x10 [idxd] cpuhp_thread_fun+0x98\/0x150 smpboot_thread_fn+0x27\/0x260 smpboot_thread_fn+0x1af\/0x260 __pfx_smpboot_thread_fn+0x10\/0x10 kthread+0x103\/0x140 __pfx_kthread+0x10\/0 x10 ret_from_fork+0x31\/0x50 __pfx_kthread+0x10\/0x10 ret_from_fork_asm+0x1b\/0x30  Solucione el problema impidiendo la migración del contexto de rendimiento a un destino no válido."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/023b6390a15a98f9c3aa5e7da78d485d5384a08e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/47533176fdcef17b114a6f688bc872901c1ec6bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9edd3aa34d50f27b97be30b2ba4a6af0945ff56b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f221033f5c24659dc6ad7e5cf18fb1b075f4a8be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f976eca36cdf94e32fa4f865db0e7c427c9aa33c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35990","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.257","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma: xilinx_dpdma: Fix locking\n\nThere are several places where either chan->lock or chan->vchan.lock was\nnot held. Add appropriate locking. This fixes lockdep warnings like\n\n[   31.077578] ------------[ cut here ]------------\n[   31.077831] WARNING: CPU: 2 PID: 40 at drivers\/dma\/xilinx\/xilinx_dpdma.c:834 xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.077953] Modules linked in:\n[   31.078019] CPU: 2 PID: 40 Comm: kworker\/u12:1 Not tainted 6.6.20+ #98\n[   31.078102] Hardware name: xlnx,zynqmp (DT)\n[   31.078169] Workqueue: events_unbound deferred_probe_work_func\n[   31.078272] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[   31.078377] pc : xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.078473] lr : xilinx_dpdma_chan_queue_transfer+0x270\/0x5e0\n[   31.078550] sp : ffffffc083bb2e10\n[   31.078590] x29: ffffffc083bb2e10 x28: 0000000000000000 x27: ffffff880165a168\n[   31.078754] x26: ffffff880164e920 x25: ffffff880164eab8 x24: ffffff880164d480\n[   31.078920] x23: ffffff880165a148 x22: ffffff880164e988 x21: 0000000000000000\n[   31.079132] x20: ffffffc082aa3000 x19: ffffff880164e880 x18: 0000000000000000\n[   31.079295] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[   31.079453] x14: 0000000000000000 x13: ffffff8802263dc0 x12: 0000000000000001\n[   31.079613] x11: 0001ffc083bb2e34 x10: 0001ff880164e98f x9 : 0001ffc082aa3def\n[   31.079824] x8 : 0001ffc082aa3dec x7 : 0000000000000000 x6 : 0000000000000516\n[   31.079982] x5 : ffffffc7f8d43000 x4 : ffffff88003c9c40 x3 : ffffffffffffffff\n[   31.080147] x2 : ffffffc7f8d43000 x1 : 00000000000000c0 x0 : 0000000000000000\n[   31.080307] Call trace:\n[   31.080340]  xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0\n[   31.080518]  xilinx_dpdma_issue_pending+0x11c\/0x120\n[   31.080595]  zynqmp_disp_layer_update+0x180\/0x3ac\n[   31.080712]  zynqmp_dpsub_plane_atomic_update+0x11c\/0x21c\n[   31.080825]  drm_atomic_helper_commit_planes+0x20c\/0x684\n[   31.080951]  drm_atomic_helper_commit_tail+0x5c\/0xb0\n[   31.081139]  commit_tail+0x234\/0x294\n[   31.081246]  drm_atomic_helper_commit+0x1f8\/0x210\n[   31.081363]  drm_atomic_commit+0x100\/0x140\n[   31.081477]  drm_client_modeset_commit_atomic+0x318\/0x384\n[   31.081634]  drm_client_modeset_commit_locked+0x8c\/0x24c\n[   31.081725]  drm_client_modeset_commit+0x34\/0x5c\n[   31.081812]  __drm_fb_helper_restore_fbdev_mode_unlocked+0x104\/0x168\n[   31.081899]  drm_fb_helper_set_par+0x50\/0x70\n[   31.081971]  fbcon_init+0x538\/0xc48\n[   31.082047]  visual_init+0x16c\/0x23c\n[   31.082207]  do_bind_con_driver.isra.0+0x2d0\/0x634\n[   31.082320]  do_take_over_console+0x24c\/0x33c\n[   31.082429]  do_fbcon_takeover+0xbc\/0x1b0\n[   31.082503]  fbcon_fb_registered+0x2d0\/0x34c\n[   31.082663]  register_framebuffer+0x27c\/0x38c\n[   31.082767]  __drm_fb_helper_initial_config_and_unlock+0x5c0\/0x91c\n[   31.082939]  drm_fb_helper_initial_config+0x50\/0x74\n[   31.083012]  drm_fbdev_dma_client_hotplug+0xb8\/0x108\n[   31.083115]  drm_client_register+0xa0\/0xf4\n[   31.083195]  drm_fbdev_dma_setup+0xb0\/0x1cc\n[   31.083293]  zynqmp_dpsub_drm_init+0x45c\/0x4e0\n[   31.083431]  zynqmp_dpsub_probe+0x444\/0x5e0\n[   31.083616]  platform_probe+0x8c\/0x13c\n[   31.083713]  really_probe+0x258\/0x59c\n[   31.083793]  __driver_probe_device+0xc4\/0x224\n[   31.083878]  driver_probe_device+0x70\/0x1c0\n[   31.083961]  __device_attach_driver+0x108\/0x1e0\n[   31.084052]  bus_for_each_drv+0x9c\/0x100\n[   31.084125]  __device_attach+0x100\/0x298\n[   31.084207]  device_initial_probe+0x14\/0x20\n[   31.084292]  bus_probe_device+0xd8\/0xdc\n[   31.084368]  deferred_probe_work_func+0x11c\/0x180\n[   31.084451]  process_one_work+0x3ac\/0x988\n[   31.084643]  worker_thread+0x398\/0x694\n[   31.084752]  kthread+0x1bc\/0x1c0\n[   31.084848]  ret_from_fork+0x10\/0x20\n[   31.084932] irq event stamp: 64549\n[   31.084970] hardirqs last  enabled at (64548): [<ffffffc081adf35c>] _raw_spin_unlock_irqrestore+0x80\/0x90\n[   31.085157]\n---truncated---"},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: dma: xilinx_dpdma: bloqueo de reparación Hay varios lugares donde chan-&gt;lock o chan-&gt;vchan.lock no se mantuvieron. Agregue el bloqueo apropiado. Esto corrige advertencias de bloqueo como [31.077578] ------------[ cortar aquí ]------------ [ 31.077831] ADVERTENCIA: CPU: 2 PID: 40 en los controladores\/ dma\/xilinx\/xilinx_dpdma.c:834 xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0 [ 31.077953] Módulos vinculados en: [ 31.078019] CPU: 2 PID: 40 Comm: kworker\/u12:1 No contaminado 6.6.20+ #98 [ 31.07 8102] Nombre del hardware : xlnx,zynqmp (DT) [31.078169] Cola de trabajo: events_unbound deferred_probe_work_func [31.078272] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--) [31.078377] pc: xilinx_dpdma_chan_queue _transfer+0x274\/0x5e0 [ 31.078473 ] lr: xilinx_dpdma_chan_queue_transfer+0x270\/0x5e0 [31.078550] sp: ffffffc083bb2e10 [31.078590] x29: ffffffc083bb2e10 x28: 0000000000000000 x27: 65a168 [ 31.078754] x26: ffffff880164e920 x25: ffffff880164eab8 x24: ffffff880164d480 [ 31.078920] x23: ffffff880165a148 x22: ffffff880164e988 0000000000000000 [ 31.079132] x20: ffffffc082aa3000 x19: ffffff880164e880 x18: 0000000000000000 [ 31.079295] x17: 0000000000000000 x16: 00000000000000000 x15: 0000000000000000 [ 31.079453] x14: 0000000000000000 x13: ffffff8802263dc0 x12: 0000000000000001 [ 31.079613] x11: 0001ffc083bb2e34 x10: 0001ff880164e98f x9: 0001ffc082aa3def [31.079824 ] x8: 0001ffc082aa3dec x7: 0000000000000000 x6: 0000000000000516 [31.079982] x5: ffffffc7f8d43000 x4: ffffff88003c9c40 x3: ffffffffffffffff [ 31.0 80147] x2: ffffffc7f8d43000 x1: 00000000000000c0 x0: 0000000000000000 [31.080307] Rastreo de llamadas: [31.080340] xilinx_dpdma_chan_queue_transfer+0x274\/0x5e0 [31. 080518 ] xilinx_dpdma_issue_pending+0x11c\/0x120 [ 31.080595] zynqmp_disp_layer_update+0x180\/0x3ac [ 31.080712] zynqmp_dpsub_plane_atomic_update+0x11c\/0x21c [ 31.080825] helper_commit_planes+0x20c\/0x684 [ 31.080951] drm_atomic_helper_commit_tail+0x5c\/0xb0 [ 31.081139] commit_tail+0x234\/0x294 [ 31.081246] drm_atomic_helper_commit +0x1f8\/0x210 [ 31.081363] drm_atomic_commit+0x100\/0x140 [ 31.081477] drm_client_modeset_commit_atomic+0x318\/0x384 [ 31.081634] drm_client_modeset_commit_locked+0x8c\/0x24c [ 31.081725] drm_client_modeset_commit+0x34\/0x5c [ 31.081812] __drm_fb_helper_restore_fbdev_mode_unlocked+0x104\/0x168 [ 31.081899] drm_fb_helper_set_par+0x50 \/0x70 [ 31.081971] fbcon_init+0x538\/0xc48 [ 31.082047] visual_init+0x16c\/0x23c [ 31.082207] do_bind_con_driver.isra.0+0x2d0\/0x634 [ 31.082320] x24c\/0x33c [ 31.082429] do_fbcon_takeover+0xbc\/0x1b0 [ 31.082503] fbcon_fb_registered +0x2d0\/0x34c [ 31.082663] Register_framebuffer+0x27c\/0x38c [ 31.082767] __drm_fb_helper_initial_config_and_unlock+0x5c0\/0x91c [ 31.082939] drm_fb_helper_initial_config+0x50\/0x74 [ 3 1.083012] drm_fbdev_dma_client_hotplug+0xb8\/0x108 [ 31.083115] drm_client_register+0xa0\/0xf4 [ 31.083195] drm_fbdev_dma_setup+0xb0 \/0x1cc [ 31.083293] zynqmp_dpsub_drm_init+0x45c\/0x4e0 [ 31.083431] zynqmp_dpsub_probe+0x444\/0x5e0 [ 31.083616] platform_probe+0x8c\/0x13c [ 31.083713] +0x258\/0x59c [ 31.083793] __driver_probe_device+0xc4\/0x224 [ 31.083878] driver_probe_device+0x70\/0x1c0 [ 31.083961] __device_attach_driver+0x108\/0x1e0 [ 31.084052] bus_for_each_drv+0x9c\/0x100 [ 31.084125] __device_attach+0x100\/0x298 [ 31.084207 device_initial_probe+0x14\/0 x20 [ 31.084292] bus_probe_device+0xd8\/0xdc [ 31.084368] deferred_probe_work_func+0x11c\/0x180 [ 31.084451 ] Process_one_work+0x3ac\/0x988 [31.084643] work_thread+0x398\/0x694 [31.084752] kthread+0x1bc\/0x1c0 [31.084848] ret_from_fork+0x10\/0x20 [31.084932] sello de evento irq: 9 [31.084970] hardirqs habilitado por última vez en (64548): [ ] _raw_spin_unlock_irqrestore+0x80\/0x90 [31.085157] ---truncado---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ccac964520a6f19e355652c8ca38af2a7f27076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/244296cc3a155199a8b080d19e645d7d49081a38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bf574183282d219cfa991f7df37aad491d74c11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e3c94767cad5150198e4337c8b91f3bb068e14b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c660be571609e03e7d5972343536a736fcb31557","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcdd5bb4a8c81c64c1334d7e0aba41a8829a24de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35991","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.333","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Convert spinlock to mutex to lock evl workqueue\n\ndrain_workqueue() cannot be called safely in a spinlocked context due to\npossible task rescheduling. In the multi-task scenario, calling\nqueue_work() while drain_workqueue() will lead to a Call Trace as\npushing a work on a draining workqueue is not permitted in spinlocked\ncontext.\n    Call Trace:\n    <TASK>\n    ? __warn+0x7d\/0x140\n    ? __queue_work+0x2b2\/0x440\n    ? report_bug+0x1f8\/0x200\n    ? handle_bug+0x3c\/0x70\n    ? exc_invalid_op+0x18\/0x70\n    ? asm_exc_invalid_op+0x1a\/0x20\n    ? __queue_work+0x2b2\/0x440\n    queue_work_on+0x28\/0x30\n    idxd_misc_thread+0x303\/0x5a0 [idxd]\n    ? __schedule+0x369\/0xb40\n    ? __pfx_irq_thread_fn+0x10\/0x10\n    ? irq_thread+0xbc\/0x1b0\n    irq_thread_fn+0x21\/0x70\n    irq_thread+0x102\/0x1b0\n    ? preempt_count_add+0x74\/0xa0\n    ? __pfx_irq_thread_dtor+0x10\/0x10\n    ? __pfx_irq_thread+0x10\/0x10\n    kthread+0x103\/0x140\n    ? __pfx_kthread+0x10\/0x10\n    ret_from_fork+0x31\/0x50\n    ? __pfx_kthread+0x10\/0x10\n    ret_from_fork_asm+0x1b\/0x30\n    <\/TASK>\n\nThe current implementation uses a spinlock to protect event log workqueue\nand will lead to the Call Trace due to potential task rescheduling.\n\nTo address the locking issue, convert the spinlock to mutex, allowing\nthe drain_workqueue() to be called in a safe mutex-locked context.\n\nThis change ensures proper synchronization when accessing the event log\nworkqueue, preventing potential Call Trace and improving the overall\nrobustness of the code."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: dmaengine: idxd: convertir spinlock a mutex para bloquear evl workqueue. Drain_workqueue() no se puede llamar de forma segura en un contexto de spinlock debido a una posible reprogramación de tareas. En el escenario de tareas múltiples, llamar a queue_work() mientras Drain_workqueue() generará un seguimiento de llamadas, ya que no se permite enviar un trabajo a una cola de trabajo agotadora en un contexto de bloqueo por giro. Seguimiento de llamadas:  ? __warn+0x7d\/0x140 ? __queue_work+0x2b2\/0x440? report_bug+0x1f8\/0x200? handle_bug+0x3c\/0x70? exc_invalid_op+0x18\/0x70? asm_exc_invalid_op+0x1a\/0x20? __queue_work+0x2b2\/0x440 queue_work_on+0x28\/0x30 idxd_misc_thread+0x303\/0x5a0 [idxd] ? __schedule+0x369\/0xb40? __pfx_irq_thread_fn+0x10\/0x10 ? irq_thread+0xbc\/0x1b0 irq_thread_fn+0x21\/0x70 irq_thread+0x102\/0x1b0 ? preempt_count_add+0x74\/0xa0? __pfx_irq_thread_dtor+0x10\/0x10 ? __pfx_irq_thread+0x10\/0x10 kthread+0x103\/0x140 ? __pfx_kthread+0x10\/0x10 ret_from_fork+0x31\/0x50 ? __pfx_kthread+0x10\/0x10 ret_from_fork_asm+0x1b\/0x30  La implementación actual utiliza un bloqueo giratorio para proteger la cola de trabajo del registro de eventos y conducirá al seguimiento de llamadas debido a una posible reprogramación de tareas. Para solucionar el problema de bloqueo, convierta el spinlock a mutex, lo que permite llamar a Drain_workqueue() en un contexto seguro con bloqueo mutex. Este cambio garantiza una sincronización adecuada al acceder a la cola de trabajo del registro de eventos, lo que evita un posible seguimiento de llamadas y mejora la solidez general del código."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/758071a35d9f3ffd84ff12169d081412a2f5f098","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9b732a9f73eadc638abdcf0a6d39bc7a0c1af5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5638de827cff0fce77007e426ec0ffdedf68a44","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35992","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.400","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: marvell: a3700-comphy: Fix out of bounds read\n\nThere is an out of bounds read access of 'gbe_phy_init_fix[fix_idx].addr'\nevery iteration after 'fix_idx' reaches 'ARRAY_SIZE(gbe_phy_init_fix)'.\n\nMake sure 'gbe_phy_init[addr]' is used when all elements of\n'gbe_phy_init_fix' array are handled.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."},{"lang":"es","value":" En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: phy: marvell: a3700-comphy: corrección de lectura fuera de los límites. Hay un acceso de lectura fuera de los límites de 'gbe_phy_init_fix[fix_idx].addr' en cada iteración después de que 'fix_idx' alcance ' ARRAY_SIZE(gbe_phy_init_fix)'. Asegúrese de que se utilice 'gbe_phy_init[addr]' cuando se manejen todos los elementos de la matriz 'gbe_phy_init_fix'. Encontrado por el Centro de verificación de Linux (linuxtesting.org) con SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/40406dfbc060503d2e0a9e637e98493c54997b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/610f175d2e16fb2436ba7974b990563002c20d07","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/976df695f579bbb2914114b4e9974fe4ed1eb813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4308bc22b9d46cf33165c9dfaeebcf29cd56f04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35993","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.463","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm: turn folio_test_hugetlb into a PageType\n\nThe current folio_test_hugetlb() can be fooled by a concurrent folio split\ninto returning true for a folio which has never belonged to hugetlbfs. \nThis can't happen if the caller holds a refcount on it, but we have a few\nplaces (memory-failure, compaction, procfs) which do not and should not\ntake a speculative reference.\n\nSince hugetlb pages do not use individual page mapcounts (they are always\nfully mapped and use the entire_mapcount field to record the number of\nmappings), the PageType field is available now that page_mapcount()\nignores the value in this field.\n\nIn compaction and with CONFIG_DEBUG_VM enabled, the current implementation\ncan result in an oops, as reported by Luis. This happens since 9c5ccf2db04b\n(\"mm: remove HUGETLB_PAGE_DTOR\") effectively added some VM_BUG_ON() checks\nin the PageHuge() testing path.\n\n[willy@infradead.org: update vmcoreinfo]\n  Link: https:\/\/lkml.kernel.org\/r\/ZgGZUvsdhaT1Va-T@casper.infradead.org"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm: convierte folio_test_hugetlb en un PageType. El folio_test_hugetlb() actual puede ser engañado por una división de folio concurrente y devuelve verdadero para un folio que nunca ha pertenecido a hugetlbfs. Esto no puede suceder si la persona que llama tiene un recuento sobre él, pero tenemos algunos lugares (fallo de memoria, compactación, procfs) que no toman ni deben tomar una referencia especulativa. Dado que las páginas de Hugetlb no usan recuentos de mapas de páginas individuales (siempre están completamente asignadas y usan el campo Whole_mapcount para registrar el número de asignaciones), el campo PageType está disponible ahora que page_mapcount() ignora el valor en este campo. En compactación y con CONFIG_DEBUG_VM habilitado, la implementación actual puede resultar en un error, según lo informado por Luis. Esto sucede desde que 9c5ccf2db04b (\"mm: eliminar HUGETLB_PAGE_DTOR\") agregó efectivamente algunas comprobaciones de VM_BUG_ON() en la ruta de prueba de PageHuge(). [willy@infradead.org: actualizar vmcoreinfo] Enlace: https:\/\/lkml.kernel.org\/r\/ZgGZUvsdhaT1Va-T@casper.infradead.org"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2431b5f2650dfc47ce782d1ca7b02d6b3916976f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fdcc5b6359dfdaa52a55033bf50e2cedd66eb32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d99e3140a4d33e26066183ff727d8f02f56bec64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35994","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.530","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: uefisecapp: Fix memory related IO errors and crashes\n\nIt turns out that while the QSEECOM APP_SEND command has specific fields\nfor request and response buffers, uefisecapp expects them both to be in\na single memory region. Failure to adhere to this has (so far) resulted\nin either no response being written to the response buffer (causing an\nEIO to be emitted down the line), the SCM call to fail with EINVAL\n(i.e., directly from TZ\/firmware), or the device to be hard-reset.\n\nWhile this issue can be triggered deterministically, in the current form\nit seems to happen rather sporadically (which is why it has gone\nunnoticed during earlier testing). This is likely due to the two\nkzalloc() calls (for request and response) being directly after each\nother. Which means that those likely return consecutive regions most of\nthe time, especially when not much else is going on in the system.\n\nFix this by allocating a single memory region for both request and\nresponse buffers, properly aligning both structs inside it. This\nunfortunately also means that the qcom_scm_qseecom_app_send() interface\nneeds to be restructured, as it should no longer map the DMA regions\nseparately. Therefore, move the responsibility of DMA allocation (or\nmapping) to the caller."},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: firmware: qcom: uefisecapp: corrige errores y bloqueos de E\/S relacionados con la memoria. Resulta que, si bien el comando QSEECOM APP_SEND tiene campos específicos para los buffers de solicitud y respuesta, uefisecapp espera que ambos estén en una única región de memoria. El incumplimiento de esto ha dado como resultado (hasta ahora) que no se escriba ninguna respuesta en el búfer de respuesta (lo que provoca que se emita un EIO en el futuro), que la llamada SCM falle con EINVAL (es decir, directamente desde TZ\/firmware), o el dispositivo para ser reiniciado. Si bien este problema puede desencadenarse de manera determinista, en la forma actual parece ocurrir de manera bastante esporádica (razón por la cual pasó desapercibido durante las pruebas anteriores). Es probable que esto se deba a que las dos llamadas a kzalloc() (para solicitud y respuesta) están directamente una detrás de la otra. Lo que significa que es probable que regresen a regiones consecutivas la mayor parte del tiempo, especialmente cuando no sucede mucho más en el sistema. Solucione este problema asignando una única región de memoria para los búferes de solicitud y respuesta, alineando adecuadamente ambas estructuras dentro de ella. Lamentablemente, esto también significa que la interfaz qcom_scm_qseecom_app_send() debe reestructurarse, ya que ya no debería asignar las regiones DMA por separado. Por lo tanto, traslade la responsabilidad de la asignación (o mapeo) de DMA a la persona que llama."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/dd22b34fb53cb04b13b2f5eee5c9200bb091fc88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed09f81eeaa8f9265e1787282cb283f10285c259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35995","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.597","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: CPPC: Use access_width over bit_width for system memory accesses\n\nTo align with ACPI 6.3+, since bit_width can be any 8-bit value, it\ncannot be depended on to be always on a clean 8b boundary. This was\nuncovered on the Cobalt 100 platform.\n\nSError Interrupt on CPU26, code 0xbe000011 -- SError\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n pstate: 62400009 (nZCv daif +PAN -UAO +TCO -DIT -SSBS BTYPE=--)\n pc : cppc_get_perf_caps+0xec\/0x410\n lr : cppc_get_perf_caps+0xe8\/0x410\n sp : ffff8000155ab730\n x29: ffff8000155ab730 x28: ffff0080139d0038 x27: ffff0080139d0078\n x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff\n x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000\n x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff\n x17: 0000000000000000 x16: ffffdc7e111bad04 x15: ffff00802b251008\n x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006\n x11: ffffdc7e128f4420 x10: 0000000000000000 x9 : ffffdc7e111badec\n x8 : ffff00802b251980 x7 : 0000000000000000 x6 : ffff0080139d0028\n x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff\n x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000\n Kernel panic - not syncing: Asynchronous SError Interrupt\n CPU: 26 PID: 1510 Comm: systemd-udevd Not tainted\n5.15.2.1-13 #1\n Hardware name: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION\n Call trace:\n  dump_backtrace+0x0\/0x1e0\n  show_stack+0x24\/0x30\n  dump_stack_lvl+0x8c\/0xb8\n  dump_stack+0x18\/0x34\n  panic+0x16c\/0x384\n  add_taint+0x0\/0xc0\n  arm64_serror_panic+0x7c\/0x90\n  arm64_is_fatal_ras_serror+0x34\/0xa4\n  do_serror+0x50\/0x6c\n  el1h_64_error_handler+0x40\/0x74\n  el1h_64_error+0x7c\/0x80\n  cppc_get_perf_caps+0xec\/0x410\n  cppc_cpufreq_cpu_init+0x74\/0x400 [cppc_cpufreq]\n  cpufreq_online+0x2dc\/0xa30\n  cpufreq_add_dev+0xc0\/0xd4\n  subsys_interface_register+0x134\/0x14c\n  cpufreq_register_driver+0x1b0\/0x354\n  cppc_cpufreq_init+0x1a8\/0x1000 [cppc_cpufreq]\n  do_one_initcall+0x50\/0x250\n  do_init_module+0x60\/0x27c\n  load_module+0x2300\/0x2570\n  __do_sys_finit_module+0xa8\/0x114\n  __arm64_sys_finit_module+0x2c\/0x3c\n  invoke_syscall+0x78\/0x100\n  el0_svc_common.constprop.0+0x180\/0x1a0\n  do_el0_svc+0x84\/0xa0\n  el0_svc+0x2c\/0xc0\n  el0t_64_sync_handler+0xa4\/0x12c\n  el0t_64_sync+0x1a4\/0x1a8\n\nInstead, use access_width to determine the size and use the offset and\nwidth to shift and mask the bits to read\/write out. Make sure to add a\ncheck for system memory since pcc redefines the access_width to\nsubspace id.\n\nIf access_width is not set, then fall back to using bit_width.\n\n[ rjw: Subject and changelog edits, comment adjustments ]"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ACPI: CPPC: use access_width sobre bit_width para accesos a la memoria del sistema. Para alinearse con ACPI 6.3+, dado que bit_width puede ser cualquier valor de 8 bits, no se puede depender de que esté siempre encendido. un límite limpio de 8b. Esto fue descubierto en la plataforma Cobalt 100. Interrupción de error en CPU26, código 0xbe000011 - CPU de SError: 26 PID: 1510 Comm: systemd-udevd Not tainted 5.15.2.1-13 #1 Nombre de hardware: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION pstate: 62400009 (nZCv daif +PAN -UAO + TCO -DIT -SSBS BTYPE=--) pc: cppc_get_perf_caps+0xec\/0x410 lr: cppc_get_perf_caps+0xe8\/0x410 sp: ffff8000155ab730 x29: ffff8000155ab730 x28: ffff0080139d0038 x27: 0080139d0078 x26: 0000000000000000 x25: ffff0080139d0058 x24: 00000000ffffffff x23: ffff0080139d0298 x22: ffff0080139d0278 x21: 0000000000000000 x20: ffff00802b251910 x19: ffff0080139d0000 x18: ffffffffffffffff x17: 0000000000000000 x16: d04 x15: ffff00802b251008 x14: ffffffffffffffff x13: ffff013f1fd63300 x12: 0000000000000006 x11: ffffdc7e128f4420 x10: 0000000000000000 x9: ffffdc7 e111badec x8: ffff00802b251980 x7: 0000000000000000 x6: ffff0080139d0028 x5 : 0000000000000000 x4 : ffff0080139d0018 x3 : 00000000ffffffff x2 : 0000000000000008 x1 : ffff8000155ab7a0 x0 : 0000000000000000 Pánico del kernel - no se sincroniza: SError asíncrono Interrupción CPU: 26 PID: 1510 Comunicación: systemd-udevd No contaminado 5.15.2.1-13 #1 Nombre de hardware: MICROSOFT CORPORATION, BIOS MICROSOFT CORPORATION Rastreo de llamadas: dump_backtrace+0x0\/0x1e0 show_stack+0x24\/0x30 dump_stack_lvl+0x8c\/0xb8 dump_stack+0x18\/0x34 panic+0x16c\/0x384 add_taint+0x0\/0xc0 arm64_serror_panic+0x7c\/0x9 0 arm64_is_fatal_ras_serror+0x34\/0xa4 do_serror+ 0x50\/0x6c el1h_64_error_handler+0x40\/0x74 el1h_64_error+0x7c\/0x80 cppc_get_perf_caps+0xec\/0x410 cppc_cpufreq_cpu_init+0x74\/0x400 [cppc_cpufreq] cpufreq_add_dev+0xc0\/0xd4 subsys_interface_register+0x134\/0x14c cpufreq_register_driver+0x1b0\/0x354 cppc_cpufreq_init+0x1a8\/ 0x1000 [cppc_cpufreq] do_one_initcall+0x50\/0x250 do_init_module+0x60\/0x27c load_module+0x2300\/0x2570 __do_sys_finit_module+0xa8\/0x114 __arm64_sys_finit_module+0x2c\/0x3c invoke_ llamada al sistema+0x78\/0x100 el0_svc_common.constprop.0+0x180\/0x1a0 do_el0_svc+0x84\/0xa0 el0_svc+ 0x2c\/0xc0 el0t_64_sync_handler+0xa4\/0x12c el0t_64_sync+0x1a4\/0x1a8 En su lugar, use access_width para determinar el tamaño y use el desplazamiento y el ancho para desplazar y enmascarar los bits para leer\/escribir. Asegúrese de agregar una verificación de la memoria del sistema, ya que pcc redefine el ancho de acceso al ID del subespacio. Si access_width no está configurado, vuelva a utilizar bit_width. [rjw: ediciones de asunto y registro de cambios, ajustes de comentarios]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01fc53be672acae37e611c80cc0b4f3939584de3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b890ae474d19800a6be1696df7fb4d9a41676e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f4a4d63a193be6fd530d180bb13c3592052904c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4949affd5288b867cdf115f5b08d6166b2027f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cb6b12b78dcd8867a3fdbb1b6d0ed1df2b208d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dfd79ed04c578f1d9a9a41ba5b2015cf9f03fc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b54c4632946ae42f2b39ed38abd909bbf78cbcc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35996","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.670","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpu: Re-enable CPU mitigations by default for !X86 architectures\n\nRename x86's to CPU_MITIGATIONS, define it in generic code, and force it\non for all architectures exception x86.  A recent commit to turn\nmitigations off by default if SPECULATION_MITIGATIONS=n kinda sorta\nmissed that \"cpu_mitigations\" is completely generic, whereas\nSPECULATION_MITIGATIONS is x86-specific.\n\nRename x86's SPECULATIVE_MITIGATIONS instead of keeping both and have it\nselect CPU_MITIGATIONS, as having two configs for the same thing is\nunnecessary and confusing.  This will also allow x86 to use the knob to\nmanage mitigations that aren't strictly related to speculative\nexecution.\n\nUse another Kconfig to communicate to common code that CPU_MITIGATIONS\nis already defined instead of having x86's menu depend on the common\nCPU_MITIGATIONS.  This allows keeping a single point of contact for all\nof x86's mitigations, and it's not clear that other architectures *want*\nto allow disabling mitigations at compile-time."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: cpu: vuelva a habilitar las mitigaciones de CPU de forma predeterminada para arquitecturas !X86. Cambie el nombre de x86 a CPU_MITIGATION, defínalo en código genérico y fuércelo para todas las arquitecturas con excepción de x86. Una confirmación reciente para desactivar las mitigaciones de forma predeterminada si SPECULATION_MITIGATION=n pasó por alto que \"cpu_mitigations\" es completamente genérico, mientras que SPECULATION_MITIGATIONS es específico de x86. Cambie el nombre de SPECULATIVE_MITIGATION de x86 en lugar de conservar ambos y haga que seleccione CPU_MITIGATION, ya que tener dos configuraciones para lo mismo es innecesario y confuso. Esto también permitirá que x86 use la perilla para administrar mitigaciones que no están estrictamente relacionadas con la ejecución especulativa. Utilice otro Kconfig para comunicar al código común que CPU_MITIGACIONES ya está definida en lugar de que el menú de x86 dependa de CPU_MITIGACIONES comunes. Esto permite mantener un único punto de contacto para todas las mitigaciones de x86, y no está claro que otras arquitecturas *quieran* permitir deshabilitar las mitigaciones en tiempo de compilación."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36b32816fbab267611f073223f1b0b816ec5920f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38f17d1fbb5bfb56ca1419e2d06376d57a9396f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8292f4f8dd1b005d0688d726261004f816ef730a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af6d6a923b40bf6471e44067ac61cc5814b48e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd8547ebc187037cc69441a15c1441aeaab80f49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe42754b94a42d08cf9501790afc25c4f6a5f631","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35997","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:13.960","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent lock-up\n\nThe flag I2C_HID_READ_PENDING is used to serialize I2C operations.\nHowever, this is not necessary, because I2C core already has its own\nlocking for that.\n\nMore importantly, this flag can cause a lock-up: if the flag is set in\ni2c_hid_xfer() and an interrupt happens, the interrupt handler\n(i2c_hid_irq) will check this flag and return immediately without doing\nanything, then the interrupt handler will be invoked again in an\ninfinite loop.\n\nSince interrupt handler is an RT task, it takes over the CPU and the\nflag-clearing task never gets scheduled, thus we have a lock-up.\n\nDelete this unnecessary flag."},{"lang":"es","value":" En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: HID: i2c-hid: elimine el indicador I2C_HID_READ_PENDING para evitar el bloqueo. El indicador I2C_HID_READ_PENDING se utiliza para serializar operaciones I2C. Sin embargo, esto no es necesario, porque el núcleo I2C ya tiene su propio bloqueo para ello. Más importante aún, este indicador puede causar un bloqueo: si el indicador está configurado en i2c_hid_xfer() y ocurre una interrupción, el controlador de interrupciones (i2c_hid_irq) verificará este indicador y regresará inmediatamente sin hacer nada, entonces se invocará el controlador de interrupciones. nuevamente en un bucle infinito. Dado que el controlador de interrupciones es una tarea RT, se hace cargo de la CPU y la tarea de limpieza de banderas nunca se programa, por lo que tenemos un bloqueo. Elimine esta bandera innecesaria."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0561b65fbd53d3e788c5b0222d9112ca016fd6a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21bfca822cfc1e71796124e93b46e0d9fa584401","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29e94f295bad5be59cf4271a93e22cdcf5536722","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/418c5575d56410c6e186ab727bf32ae32447d497","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5095b93021b899f54c9355bebf36d78854c33a22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c0f59e47a90c54d0153f8ddc0f80d7a36207d0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b65fb50e04a95eec34a9d1bc138454a98a5578d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c448a9fd50f77e8fb9156ff64848aa4295eb3003","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35998","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.030","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: fix lock ordering potential deadlock in cifs_sync_mid_result\n\nCoverity spotted that the cifs_sync_mid_result function could deadlock\n\n\"Thread deadlock (ORDER_REVERSAL) lock_order: Calling spin_lock acquires\nlock TCP_Server_Info.srv_lock while holding lock TCP_Server_Info.mid_lock\"\n\nAddresses-Coverity: 1590401 (\"Thread deadlock (ORDER_REVERSAL)\")"},{"lang":"es","value":"En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: smb3: corrige el posible interbloqueo en el orden de bloqueo en cifs_sync_mid_result Coverity detectó que la función cifs_sync_mid_result podría interbloquearse \"Interbloqueo de subprocesos (ORDER_REVERSAL) lock_order: llamar a spin_lock adquiere el bloqueo TCP_Server_Info.srv_lock mientras mantiene el bloqueo TCP_Server_Info.mid_lock \"Direcciones-Cobertura: 1590401 (\"Estancamiento del hilo (ORDER_REVERSAL)\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/699f8958dece132709c0bff6a9700999a2a63b75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8248224ab5b8ca7559b671917c224296a4d671fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8861fd5180476f45f9e8853db154600469a0284f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7a4bca289e50bb4b2650f845c41bb3e453f4c66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-35999","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.100","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb3: missing lock when picking channel\n\nCoverity spotted a place where we should have been holding the\nchannel lock when accessing the ses channel index.\n\nAddresses-Coverity: 1582039 (\"Data race condition (MISSING_LOCK)\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fcf7e219448e937681216353c9a58abae6d3c2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60ab245292280905603bc0d3654f4cf8fceccb00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8094a600245e9b28eb36a13036f202ad67c1f887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/98c7ed29cd754ae7475dc7cb3f33399fda902729","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36000","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.163","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/hugetlb: fix missing hugetlb_lock for resv uncharge\n\nThere is a recent report on UFFDIO_COPY over hugetlb:\n\nhttps:\/\/lore.kernel.org\/all\/000000000000ee06de0616177560@google.com\/\n\n350:\tlockdep_assert_held(&hugetlb_lock);\n\nShould be an issue in hugetlb but triggered in an userfault context, where\nit goes into the unlikely path where two threads modifying the resv map\ntogether.  Mike has a fix in that path for resv uncharge but it looks like\nthe locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()\nwill update the cgroup pointer, so it requires to be called with the lock\nheld."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c806333efea1000a2a9620926f560ad2e1ca7cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/538faabf31e9c53d8c870d114846fda958a0de10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b76b46902c2d0395488c8412e1116c2486cdfcb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6c5d21db16a0910152ec8aa9d5a7aed72694505","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36001","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.230","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfs: Fix the pre-flush when appending to a file in writethrough mode\n\nIn netfs_perform_write(), when the file is marked NETFS_ICTX_WRITETHROUGH\nor O_*SYNC or RWF_*SYNC was specified, write-through caching is performed\non a buffered file.  When setting up for write-through, we flush any\nconflicting writes in the region and wait for the write to complete,\nfailing if there's a write error to return.\n\nThe issue arises if we're writing at or above the EOF position because we\nskip the flush and - more importantly - the wait.  This becomes a problem\nif there's a partial folio at the end of the file that is being written out\nand we want to make a write to it too.  Both the already-running write and\nthe write we start both want to clear the writeback mark, but whoever is\nsecond causes a warning looking something like:\n\n    ------------[ cut here ]------------\n    R=00000012: folio 11 is not under writeback\n    WARNING: CPU: 34 PID: 654 at fs\/netfs\/write_collect.c:105\n    ...\n    CPU: 34 PID: 654 Comm: kworker\/u386:27 Tainted: G S ...\n    ...\n    Workqueue: events_unbound netfs_write_collection_worker\n    ...\n    RIP: 0010:netfs_writeback_lookup_folio\n\nFix this by making the flush-and-wait unconditional.  It will do nothing if\nthere are no folios in the pagecache and will return quickly if there are\nno folios in the region specified.\n\nFurther, move the WBC attachment above the flush call as the flush is going\nto attach a WBC and detach it again if it is not present - and since we\nneed one anyway we might as well share it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5eaf23b2e81349f6614f88396dc468fda89fc0b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c97f59e276d4e93480f29a70accbd0d7273cf3f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36002","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.293","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix dpll_pin_on_pin_register() for multiple parent pins\n\nIn scenario where pin is registered with multiple parent pins via\ndpll_pin_on_pin_register(..), all belonging to the same dpll device.\nA second call to dpll_pin_on_pin_unregister(..) would cause a call trace,\nas it tries to use already released registration resources (due to fix\nintroduced in b446631f355e). In this scenario pin was registered twice,\nso resources are not yet expected to be release until each registered\npin\/pin pair is unregistered.\n\nCurrently, the following crash\/call trace is produced when ice driver is\nremoved on the system with installed E810T NIC which includes dpll device:\n\nWARNING: CPU: 51 PID: 9155 at drivers\/dpll\/dpll_core.c:809 dpll_pin_ops+0x20\/0x30\nRIP: 0010:dpll_pin_ops+0x20\/0x30\nCall Trace:\n ? __warn+0x7f\/0x130\n ? dpll_pin_ops+0x20\/0x30\n dpll_msg_add_pin_freq+0x37\/0x1d0\n dpll_cmd_pin_get_one+0x1c0\/0x400\n ? __nlmsg_put+0x63\/0x80\n dpll_pin_event_send+0x93\/0x140\n dpll_pin_on_pin_unregister+0x3f\/0x100\n ice_dpll_deinit_pins+0xa1\/0x230 [ice]\n ice_remove+0xf1\/0x210 [ice]\n\nFix by adding a parent pointer as a cookie when creating a registration,\nalso when searching for it. For the regular pins pass NULL, this allows to\ncreate separated registration for each parent the pin is registered with."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38d7b94e81d068b8d8c8392f421cfd2c3bbfd1a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3e1cf62d18220a3aa97e084e7a3552debece9fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36003","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.360","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: fix LAG and VF lock dependency in ice_reset_vf()\n\n9f74a3dfcf83 (\"ice: Fix VF Reset paths when interface in a failed over\naggregate\"), the ice driver has acquired the LAG mutex in ice_reset_vf().\nThe commit placed this lock acquisition just prior to the acquisition of\nthe VF configuration lock.\n\nIf ice_reset_vf() acquires the configuration lock via the ICE_VF_RESET_LOCK\nflag, this could deadlock with ice_vc_cfg_qs_msg() because it always\nacquires the locks in the order of the VF configuration lock and then the\nLAG mutex.\n\nLockdep reports this violation almost immediately on creating and then\nremoving 2 VF:\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.8.0-rc6 #54 Tainted: G        W  O\n------------------------------------------------------\nkworker\/60:3\/6771 is trying to acquire lock:\nff40d43e099380a0 (&vf->cfg_lock){+.+.}-{3:3}, at: ice_reset_vf+0x22f\/0x4d0 [ice]\n\nbut task is already holding lock:\nff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7\/0x4d0 [ice]\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #1 (&pf->lag_mutex){+.+.}-{3:3}:\n       __lock_acquire+0x4f8\/0xb40\n       lock_acquire+0xd4\/0x2d0\n       __mutex_lock+0x9b\/0xbf0\n       ice_vc_cfg_qs_msg+0x45\/0x690 [ice]\n       ice_vc_process_vf_msg+0x4f5\/0x870 [ice]\n       __ice_clean_ctrlq+0x2b5\/0x600 [ice]\n       ice_service_task+0x2c9\/0x480 [ice]\n       process_one_work+0x1e9\/0x4d0\n       worker_thread+0x1e1\/0x3d0\n       kthread+0x104\/0x140\n       ret_from_fork+0x31\/0x50\n       ret_from_fork_asm+0x1b\/0x30\n\n-> #0 (&vf->cfg_lock){+.+.}-{3:3}:\n       check_prev_add+0xe2\/0xc50\n       validate_chain+0x558\/0x800\n       __lock_acquire+0x4f8\/0xb40\n       lock_acquire+0xd4\/0x2d0\n       __mutex_lock+0x9b\/0xbf0\n       ice_reset_vf+0x22f\/0x4d0 [ice]\n       ice_process_vflr_event+0x98\/0xd0 [ice]\n       ice_service_task+0x1cc\/0x480 [ice]\n       process_one_work+0x1e9\/0x4d0\n       worker_thread+0x1e1\/0x3d0\n       kthread+0x104\/0x140\n       ret_from_fork+0x31\/0x50\n       ret_from_fork_asm+0x1b\/0x30\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n       CPU0                    CPU1\n       ----                    ----\n  lock(&pf->lag_mutex);\n                               lock(&vf->cfg_lock);\n                               lock(&pf->lag_mutex);\n  lock(&vf->cfg_lock);\n\n *** DEADLOCK ***\n4 locks held by kworker\/60:3\/6771:\n #0: ff40d43e05428b38 ((wq_completion)ice){+.+.}-{0:0}, at: process_one_work+0x176\/0x4d0\n #1: ff50d06e05197e58 ((work_completion)(&pf->serv_task)){+.+.}-{0:0}, at: process_one_work+0x176\/0x4d0\n #2: ff40d43ea1960e50 (&pf->vfs.table_lock){+.+.}-{3:3}, at: ice_process_vflr_event+0x48\/0xd0 [ice]\n #3: ff40d43ea1961210 (&pf->lag_mutex){+.+.}-{3:3}, at: ice_reset_vf+0xb7\/0x4d0 [ice]\n\nstack backtrace:\nCPU: 60 PID: 6771 Comm: kworker\/60:3 Tainted: G        W  O       6.8.0-rc6 #54\nHardware name:\nWorkqueue: ice ice_service_task [ice]\nCall Trace:\n <TASK>\n dump_stack_lvl+0x4a\/0x80\n check_noncircular+0x12d\/0x150\n check_prev_add+0xe2\/0xc50\n ? save_trace+0x59\/0x230\n ? add_chain_cache+0x109\/0x450\n validate_chain+0x558\/0x800\n __lock_acquire+0x4f8\/0xb40\n ? lockdep_hardirqs_on+0x7d\/0x100\n lock_acquire+0xd4\/0x2d0\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? lock_is_held_type+0xc7\/0x120\n __mutex_lock+0x9b\/0xbf0\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ? rcu_is_watching+0x11\/0x50\n ? ice_reset_vf+0x22f\/0x4d0 [ice]\n ice_reset_vf+0x22f\/0x4d0 [ice]\n ? process_one_work+0x176\/0x4d0\n ice_process_vflr_event+0x98\/0xd0 [ice]\n ice_service_task+0x1cc\/0x480 [ice]\n process_one_work+0x1e9\/0x4d0\n worker_thread+0x1e1\/0x3d0\n ? __pfx_worker_thread+0x10\/0x10\n kthread+0x104\/0x140\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork+0x31\/0x50\n ? __pfx_kthread+0x10\/0x10\n ret_from_fork_asm+0x1b\/0x30\n <\/TASK>\n\nTo avoid deadlock, we must acquire the LAG \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/740717774dc37338404d10726967d582414f638c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96fdd1f6b4ed72a741fb0eb705c0e13049b8721f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de8631d8c9df08440268630200e64b623a5f69e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36004","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.427","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nIssue reported by customer during SRIOV testing, call trace:\nWhen both i40e and the i40iw driver are loaded, a warning\nin check_flush_dependency is being triggered. This seems\nto be because of the i40e driver workqueue is allocated with\nthe WQ_MEM_RECLAIM flag, and the i40iw one is not.\n\nSimilar error was encountered on ice too and it was fixed by\nremoving the flag. Do the same for i40e too.\n\n[Feb 9 09:08] ------------[ cut here ]------------\n[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is\nflushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel\/workqueue.c:2966\ncheck_flush_dependency+0x10b\/0x120\n[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq\nsnd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4\nnls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr\nrfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma\nintel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif\nisst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal\nintel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core\niTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore\nioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich\nintel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad\nxfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe\ndrm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel\nlibata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror\ndm_region_hash dm_log dm_mod fuse\n[  +0.000050] CPU: 0 PID: 937 Comm: kworker\/0:3 Kdump: loaded Not\ntainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1\n[  +0.000003] Hardware name: Intel Corporation S2600BPB\/S2600BPB, BIOS\nSE5C620.86B.02.01.0013.121520200651 12\/15\/2020\n[  +0.000001] Workqueue: i40e i40e_service_task [i40e]\n[  +0.000024] RIP: 0010:check_flush_dependency+0x10b\/0x120\n[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48\n81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd\nff <0f> 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90\n[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282\n[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:\n0000000000000027\n[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:\nffff94d47f620bc0\n[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:\n00000000ffff7fff\n[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:\nffff94c5451ea180\n[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:\nffff94c5f1330ab0\n[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)\nknlGS:0000000000000000\n[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:\n00000000007706f0\n[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[  +0.000001] PKRU: 55555554\n[  +0.000001] Call Trace:\n[  +0.000001]  <TASK>\n[  +0.000002]  ? __warn+0x80\/0x130\n[  +0.000003]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  ? report_bug+0x195\/0x1a0\n[  +0.000005]  ? handle_bug+0x3c\/0x70\n[  +0.000003]  ? exc_invalid_op+0x14\/0x70\n[  +0.000002]  ? asm_exc_invalid_op+0x16\/0x20\n[  +0.000006]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  ? check_flush_dependency+0x10b\/0x120\n[  +0.000002]  __flush_workqueue+0x126\/0x3f0\n[  +0.000015]  ib_cache_cleanup_one+0x1c\/0xe0 [ib_core]\n[  +0.000056]  __ib_unregister_device+0x6a\/0xb0 [ib_core]\n[  +0.000023]  ib_unregister_device_and_put+0x34\/0x50 [ib_core]\n[  +0.000020]  i40iw_close+0x4b\/0x90 [irdma]\n[  +0.000022]  i40e_notify_client_of_netdev_close+0x54\/0xc0 [i40e]\n[  +0.000035]  i40e_service_task+0x126\/0x190 [i40e]\n[  +0.000024]  process_one_work+0x174\/0x340\n[  +0.000003]  worker_th\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09b54d29f05129b092f7c793a70b689ffb3c7b2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/152ed360cf2d273f88fc99a518b7eb868aae2939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1594dac8b1ed78f9e75c263327e198a2e5e25b0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2cc7d150550cc981aceedf008f5459193282425c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/546d0fe9d76e8229a67369f9cb61e961d99038bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d6105f637883c8c09825e962308c06e977de4f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbbb2404340dd6178e281bd427c271f7d5ec1d22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff7431f898dd00892a545b7d0ce7adf5b926944f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36005","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.500","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: honor table dormant flag from netdev release event path\n\nCheck for table dormant flag otherwise netdev release event path tries\nto unregister an already unregistered hook.\n\n[524854.857999] ------------[ cut here ]------------\n[524854.858010] WARNING: CPU: 0 PID: 3386599 at net\/netfilter\/core.c:501 __nf_unregister_net_hook+0x21a\/0x260\n[...]\n[524854.858848] CPU: 0 PID: 3386599 Comm: kworker\/u32:2 Not tainted 6.9.0-rc3+ #365\n[524854.858869] Workqueue: netns cleanup_net\n[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a\/0x260\n[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff <0f> 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41\n[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246\n[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a\n[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438\n[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34\n[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005\n[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00\n[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000\n[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0\n[524854.859000] Call Trace:\n[524854.859006]  <TASK>\n[524854.859013]  ? __warn+0x9f\/0x1a0\n[524854.859027]  ? __nf_unregister_net_hook+0x21a\/0x260\n[524854.859044]  ? report_bug+0x1b1\/0x1e0\n[524854.859060]  ? handle_bug+0x3c\/0x70\n[524854.859071]  ? exc_invalid_op+0x17\/0x40\n[524854.859083]  ? asm_exc_invalid_op+0x1a\/0x20\n[524854.859100]  ? __nf_unregister_net_hook+0x6a\/0x260\n[524854.859116]  ? __nf_unregister_net_hook+0x21a\/0x260\n[524854.859135]  nf_tables_netdev_event+0x337\/0x390 [nf_tables]\n[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10\/0x10 [nf_tables]\n[524854.859461]  ? packet_notifier+0xb3\/0x360\n[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11\/0x40\n[524854.859489]  ? dcbnl_netdevice_event+0x35\/0x140\n[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10\/0x10 [nf_tables]\n[524854.859661]  notifier_call_chain+0x7d\/0x140\n[524854.859677]  unregister_netdevice_many_notify+0x5e1\/0xae0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/13ba94f6cc820fdea15efeaa17d4c722874eebf9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c45feb3c288cf44a529e2657b36c259d86497d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8260c980aee7d8d8a3db39faf19c391d2f898816","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e30abc9ace4f0add4cd761dfdbfaebae5632dd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca34c40d1c22c555fa7f4a21a1c807fea7290a0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4bb6da24de336a7899033a65490ed2d892efa5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36006","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.570","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix incorrect list API usage\n\nBoth the function that migrates all the chunks within a region and the\nfunction that migrates all the entries within a chunk call\nlist_first_entry() on the respective lists without checking that the\nlists are not empty. This is incorrect usage of the API, which leads to\nthe following warning [1].\n\nFix by returning if the lists are empty as there is nothing to migrate\nin this case.\n\n[1]\nWARNING: CPU: 0 PID: 6437 at drivers\/net\/ethernet\/mellanox\/mlxsw\/spectrum_acl_tcam.c:1266 mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1\/0>\nModules linked in:\nCPU: 0 PID: 6437 Comm: kworker\/0:37 Not tainted 6.9.0-rc3-custom-00883-g94a65f079ef6 #39\nHardware name: Mellanox Technologies Ltd. MSN3700\/VMOD0005, BIOS 5.11 01\/06\/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1\/0x2c0\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c\/0x4a0\n process_one_work+0x151\/0x370\n worker_thread+0x2cb\/0x3e0\n kthread+0xd0\/0x100\n ret_from_fork+0x34\/0x50\n ret_from_fork_asm+0x1a\/0x30\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09846c2309b150b8ce4e0ce96f058197598fc530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b2c13b670b168e324e1cf109e67056a20fd610a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4526a56e02da3725db979358964df9cd9c567154","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64435b64e43d8ee60faa46c0cd04e323e8b2a7b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab4ecfb627338e440ae11def004c524a00d93e40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/af8b593c3dd9df82cb199be65863af004b09fd97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b377add0f0117409c418ddd6504bd682ebe0bf79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36007","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.637","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmlxsw: spectrum_acl_tcam: Fix warning during rehash\n\nAs previously explained, the rehash delayed work migrates filters from\none region to another. This is done by iterating over all chunks (all\nthe filters with the same priority) in the region and in each chunk\niterating over all the filters.\n\nWhen the work runs out of credits it stores the current chunk and entry\nas markers in the per-work context so that it would know where to resume\nthe migration from the next time the work is scheduled.\n\nUpon error, the chunk marker is reset to NULL, but without resetting the\nentry markers despite being relative to it. This can result in migration\nbeing resumed from an entry that does not belong to the chunk being\nmigrated. In turn, this will eventually lead to a chunk being iterated\nover as if it is an entry. Because of how the two structures happen to\nbe defined, this does not lead to KASAN splats, but to warnings such as\n[1].\n\nFix by creating a helper that resets all the markers and call it from\nall the places the currently only reset the chunk marker. For good\nmeasures also call it when starting a completely new rehash. Add a\nwarning to avoid future cases.\n\n[1]\nWARNING: CPU: 7 PID: 1076 at drivers\/net\/ethernet\/mellanox\/mlxsw\/core_acl_flex_keys.c:407 mlxsw_afk_encode+0x242\/0x2f0\nModules linked in:\nCPU: 7 PID: 1076 Comm: kworker\/7:24 Tainted: G        W          6.9.0-rc3-custom-00880-g29e61d91b77b #29\nHardware name: Mellanox Technologies Ltd. MSN3700\/VMOD0005, BIOS 5.11 01\/06\/2019\nWorkqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work\nRIP: 0010:mlxsw_afk_encode+0x242\/0x2f0\n[...]\nCall Trace:\n <TASK>\n mlxsw_sp_acl_atcam_entry_add+0xd9\/0x3c0\n mlxsw_sp_acl_tcam_entry_create+0x5e\/0xa0\n mlxsw_sp_acl_tcam_vchunk_migrate_all+0x109\/0x290\n mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c\/0x470\n process_one_work+0x151\/0x370\n worker_thread+0x2cb\/0x3e0\n kthread+0xd0\/0x100\n ret_from_fork+0x34\/0x50\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/039992b6d2df097c65f480dcf269de3d2656f573","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b88631855026b55cad901ac28d081e0f358e596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/17e9e0bbae652b9b2049e51699e93dfa60b2988d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1d76bd2a0034d0d08045c1c6adf2235d88982952","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/743edc8547a92b6192aa1f1b6bb78233fa21dc9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/751d352858108314efd33dddd5a9a2b6bf7d6916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e890456051fe8c57944b911defb3e6de91315861","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36008","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.703","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv4: check for NULL idev in ip_route_use_hint()\n\nsyzbot was able to trigger a NULL deref in fib_validate_source()\nin an old tree [1].\n\nIt appears the bug exists in latest trees.\n\nAll calls to __in_dev_get_rcu() must be checked for a NULL result.\n\n[1]\ngeneral protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 2 PID: 3257 Comm: syz-executor.3 Not tainted 5.10.0-syzkaller #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04\/01\/2014\n RIP: 0010:fib_validate_source+0xbf\/0x15a0 net\/ipv4\/fib_frontend.c:425\nCode: 18 f2 f2 f2 f2 42 c7 44 20 23 f3 f3 f3 f3 48 89 44 24 78 42 c6 44 20 27 f3 e8 5d 88 48 fc 4c 89 e8 48 c1 e8 03 48 89 44 24 18 <42> 80 3c 20 00 74 08 4c 89 ef e8 d2 15 98 fc 48 89 5c 24 10 41 bf\nRSP: 0018:ffffc900015fee40 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff88800f7a4000 RCX: ffff88800f4f90c0\nRDX: 0000000000000000 RSI: 0000000004001eac RDI: ffff8880160c64c0\nRBP: ffffc900015ff060 R08: 0000000000000000 R09: ffff88800f7a4000\nR10: 0000000000000002 R11: ffff88800f4f90c0 R12: dffffc0000000000\nR13: 0000000000000000 R14: 0000000000000000 R15: ffff88800f7a4000\nFS:  00007f938acfe6c0(0000) GS:ffff888058c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f938acddd58 CR3: 000000001248e000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n  ip_route_use_hint+0x410\/0x9b0 net\/ipv4\/route.c:2231\n  ip_rcv_finish_core+0x2c4\/0x1a30 net\/ipv4\/ip_input.c:327\n  ip_list_rcv_finish net\/ipv4\/ip_input.c:612 [inline]\n  ip_sublist_rcv+0x3ed\/0xe50 net\/ipv4\/ip_input.c:638\n  ip_list_rcv+0x422\/0x470 net\/ipv4\/ip_input.c:673\n  __netif_receive_skb_list_ptype net\/core\/dev.c:5572 [inline]\n  __netif_receive_skb_list_core+0x6b1\/0x890 net\/core\/dev.c:5620\n  __netif_receive_skb_list net\/core\/dev.c:5672 [inline]\n  netif_receive_skb_list_internal+0x9f9\/0xdc0 net\/core\/dev.c:5764\n  netif_receive_skb_list+0x55\/0x3e0 net\/core\/dev.c:5816\n  xdp_recv_frames net\/bpf\/test_run.c:257 [inline]\n  xdp_test_run_batch net\/bpf\/test_run.c:335 [inline]\n  bpf_test_run_xdp_live+0x1818\/0x1d00 net\/bpf\/test_run.c:363\n  bpf_prog_test_run_xdp+0x81f\/0x1170 net\/bpf\/test_run.c:1376\n  bpf_prog_test_run+0x349\/0x3c0 kernel\/bpf\/syscall.c:3736\n  __sys_bpf+0x45c\/0x710 kernel\/bpf\/syscall.c:5115\n  __do_sys_bpf kernel\/bpf\/syscall.c:5201 [inline]\n  __se_sys_bpf kernel\/bpf\/syscall.c:5199 [inline]\n  __x64_sys_bpf+0x7c\/0x90 kernel\/bpf\/syscall.c:5199"},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: ipv4: verifique NULL idev en ip_route_use_hint() syzbot pudo activar una deref NULL en fib_validate_source() en un árbol antiguo [1]. Parece que el error existe en los árboles más recientes. Todas las llamadas a __in_dev_get_rcu() deben verificarse para obtener un resultado NULL. [1] Fallo de protección general, probablemente para la dirección no canónica 0xdffffc000000000000: 0000 [#1] SMP Kasan Kasan: Null-Ptr-Deref en el rango [0x000000000000000000-0X000000000000000007] CPU: 2 pid: 3257 Comm: Syz-ECUTOR.3 NO NO tainted 5.10.0-syzkaller #0 Nombre del hardware: PC estándar QEMU (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 01\/04\/2014 RIP: 0010:fib_validate_source+0xbf \/0x15a0 net\/ipv4\/fib_frontend.c:425 Código: 18 f2 f2 f2 f2 42 c7 44 20 23 f3 f3 f3 f3 48 89 44 24 78 42 c6 44 20 27 f3 e8 5d 88 48 fc 4c 89 e8 48 c1 e8 03 48 89 44 24 18 &lt;42&gt; 80 3c 20 00 74 08 4c 89 ef e8 d2 15 98 fc 48 89 5c 24 10 41 bf RSP: 0018:ffffc900015fee40 EFLAGS: 00010246 RAX: 0000000000 RBX: ffff88800f7a4000 RCX: ffff88800f4f90c0 RDX: 0000000000000000 RSI : 0000000004001eac RDI: ffff8880160c64c0 RBP: ffffc900015ff060 R08: 0000000000000000 R09: ffff88800f7a4000 R10: 0000000000000002 R11: 00f4f90c0 R12: dffffc0000000000 R13: 0000000000000000 R14: 0000000000000000 R15: ffff88800f7a4000 FS: 00007f938acfe6c0(0000) GS:ffff888058c0 0000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 00007f938acddd58 CR3: 000000001248e000 CR4: 0000000000352ef0 DR0: 0000000000000000 DR1: 00000000 DR2: 0000000000000000 DR3: 00000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400 Seguimiento de llamadas: ip_route_use_hint+0x410\/0x9b0 net\/ipv4\/route. c:2231 ip_rcv_finish_core+0x2c4\/0x1a30 net\/ipv4\/ip_input.c:327 ip_list_rcv_finish net\/ipv4\/ip_input.c:612 [en línea] ip_sublist_rcv+0x3ed\/0xe50 net\/ipv4\/ip_input.c:638 \/0x470 neto \/ipv4\/ip_input.c:673 __netif_receive_skb_list_ptype net\/core\/dev.c:5572 [en línea] __netif_receive_skb_list_core+0x6b1\/0x890 net\/core\/dev.c:5620 __netif_receive_skb_list net\/core\/dev.c:5672 [en línea] ive_skb_list_internal+ 0x9f9\/0xdc0 net\/core\/dev.c:5764 netif_receive_skb_list+0x55\/0x3e0 net\/core\/dev.c:5816 xdp_recv_frames net\/bpf\/test_run.c:257 [en línea] xdp_test_run_batch net\/bpf\/test_run.c:335 [ en línea] bpf_test_run_xdp_live+0x1818\/0x1d00 net\/bpf\/test_run.c:363 bpf_prog_test_run_xdp+0x81f\/0x1170 net\/bpf\/test_run.c:1376 bpf_prog_test_run+0x349\/0x3c0 kernel\/bpf\/syscall.c: 3736 __sys_bpf+0x45c\/0x710 núcleo \/bpf\/syscall.c:5115 __do_sys_bpf kernel\/bpf\/syscall.c:5201 [en línea] __se_sys_bpf kernel\/bpf\/syscall.c:5199 [en línea] __x64_sys_bpf+0x7c\/0x90 kernel\/bpf\/syscall.c:5199"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03b5a9b2b526862b21bcc31976e393a6e63785d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58a4c9b1e5a3e53c9148e80b90e1e43897ce77d1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a25bfd12733a8f38f8ca47c581f876c3d481ac0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7da0f91681c4902bc5c210356fdd963b04d5d1d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8240c7308c941db4d9a0a91b54eca843c616a655","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c71ea3534ec0936fc57e6fb271c7cc6a2f68c295","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-36009","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-20T10:15:14.773","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix netdev refcount issue\n\nThe dev_tracker is added to ax25_cb in ax25_bind(). When the\nax25 device is detaching, the dev_tracker of ax25_cb should be\ndeallocated in ax25_kill_by_device() instead of the dev_tracker\nof ax25_dev. The log reported by ref_tracker is shown below:\n\n[   80.884935] ref_tracker: reference already released.\n[   80.885150] ref_tracker: allocated in:\n[   80.885349]  ax25_dev_device_up+0x105\/0x540\n[   80.885730]  ax25_device_event+0xa4\/0x420\n[   80.885730]  notifier_call_chain+0xc9\/0x1e0\n[   80.885730]  __dev_notify_flags+0x138\/0x280\n[   80.885730]  dev_change_flags+0xd7\/0x180\n[   80.885730]  dev_ifsioc+0x6a9\/0xa30\n[   80.885730]  dev_ioctl+0x4d8\/0xd90\n[   80.885730]  sock_do_ioctl+0x1c2\/0x2d0\n[   80.885730]  sock_ioctl+0x38b\/0x4f0\n[   80.885730]  __se_sys_ioctl+0xad\/0xf0\n[   80.885730]  do_syscall_64+0xc4\/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n[   80.885730] ref_tracker: freed in:\n[   80.885730]  ax25_device_event+0x272\/0x420\n[   80.885730]  notifier_call_chain+0xc9\/0x1e0\n[   80.885730]  dev_close_many+0x272\/0x370\n[   80.885730]  unregister_netdevice_many_notify+0x3b5\/0x1180\n[   80.885730]  unregister_netdev+0xcf\/0x120\n[   80.885730]  sixpack_close+0x11f\/0x1b0\n[   80.885730]  tty_ldisc_kill+0xcb\/0x190\n[   80.885730]  tty_ldisc_hangup+0x338\/0x3d0\n[   80.885730]  __tty_hangup+0x504\/0x740\n[   80.885730]  tty_release+0x46e\/0xd80\n[   80.885730]  __fput+0x37f\/0x770\n[   80.885730]  __x64_sys_close+0x7b\/0xb0\n[   80.885730]  do_syscall_64+0xc4\/0x1b0\n[   80.885730]  entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n[   80.893739] ------------[ cut here ]------------\n[   80.894030] WARNING: CPU: 2 PID: 140 at lib\/ref_tracker.c:255 ref_tracker_free+0x47b\/0x6b0\n[   80.894297] Modules linked in:\n[   80.894929] CPU: 2 PID: 140 Comm: ax25_conn_rel_6 Not tainted 6.9.0-rc4-g8cd26fd90c1a #11\n[   80.895190] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qem4\n[   80.895514] RIP: 0010:ref_tracker_free+0x47b\/0x6b0\n[   80.895808] Code: 83 c5 18 4c 89 eb 48 c1 eb 03 8a 04 13 84 c0 0f 85 df 01 00 00 41 83 7d 00 00 75 4b 4c 89 ff 9\n[   80.896171] RSP: 0018:ffff888009edf8c0 EFLAGS: 00000286\n[   80.896339] RAX: 1ffff1100141ac00 RBX: 1ffff1100149463b RCX: dffffc0000000000\n[   80.896502] RDX: 0000000000000001 RSI: 0000000000000246 RDI: ffff88800a0d6518\n[   80.896925] RBP: ffff888009edf9b0 R08: ffff88806d3288d3 R09: 1ffff1100da6511a\n[   80.897212] R10: dffffc0000000000 R11: ffffed100da6511b R12: ffff88800a4a31d4\n[   80.897859] R13: ffff88800a4a31d8 R14: dffffc0000000000 R15: ffff88800a0d6518\n[   80.898279] FS:  00007fd88b7fe700(0000) GS:ffff88806d300000(0000) knlGS:0000000000000000\n[   80.899436] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   80.900181] CR2: 00007fd88c001d48 CR3: 000000000993e000 CR4: 00000000000006f0\n...\n[   80.935774] ref_tracker: sp%d@000000000bb9df3d has 1\/1 users at\n[   80.935774]      ax25_bind+0x424\/0x4e0\n[   80.935774]      __sys_bind+0x1d9\/0x270\n[   80.935774]      __x64_sys_bind+0x75\/0x80\n[   80.935774]      do_syscall_64+0xc4\/0x1b0\n[   80.935774]      entry_SYSCALL_64_after_hwframe+0x67\/0x6f\n\nChange ax25_dev->dev_tracker to the dev_tracker of ax25_cb\nin order to mitigate the bug."},{"lang":"es","value":"En el kernel de Linux, se resolvió la siguiente vulnerabilidad: ax25: soluciona el problema de recuento de netdev. El dev_tracker se agrega a ax25_cb en ax25_bind(). Cuando el dispositivo ax25 se está desconectando, el dev_tracker de ax25_cb debe desasignarse en ax25_kill_by_device() en lugar del dev_tracker de ax25_dev. El registro informado por ref_tracker se muestra a continuación: [80.884935] ref_tracker: referencia ya publicada. [80.885150] ref_tracker: asignado en: [80.885349] ax25_dev_device_up+0x105\/0x540 [80.885730] ax25_device_event+0xa4\/0x420 [80.885730] notifier_call_chain+0xc9\/0x1e0 [80. 885730] __dev_notify_flags+0x138\/0x280 [ 80.885730] dev_change_flags+0xd7\/0x180 [ 80.885730 ] dev_ifsioc+0x6a9\/0xa30 [ 80.885730] dev_ioctl+0x4d8\/0xd90 [ 80.885730] sock_do_ioctl+0x1c2\/0x2d0 [ 80.885730] sock_ioctl+0x38b\/0x4f0 [ 80.885730] __se_sys_ioctl+0xad\/0xf0 [ 80.885730] do_syscall_64+0xc4\/0x1b0 [ 80.885730] Entry_SYSCALL_64_after_hwframe +0x67\/0x6f [ 80.885730] ref_tracker: liberado en: [ 80.885730] ax25_device_event+0x272\/0x420 [ 80.885730] notifier_call_chain+0xc9\/0x1e0 [ 80.885730] 370 [80.885730] unregister_netdevice_many_notify+0x3b5\/0x1180 [80.885730] unregister_netdev+0xcf \/0x120 [ 80.885730] sixpack_close+0x11f\/0x1b0 [ 80.885730] tty_ldisc_kill+0xcb\/0x190 [ 80.885730] tty_ldisc_hangup+0x338\/0x3d0 [ 80.885730] x740 [ 80.885730] tty_release+0x46e\/0xd80 [ 80.885730] __fput+0x37f\/0x770 [80.885730] __x64_sys_close+0x7b\/0xb0 [ 80.885730] do_syscall_64+0xc4\/0x1b0 [ 80.885730] Entry_SYSCALL_64_after_hwframe+0x67\/0x6f [ 80.893739] ------------[ cortar aquí ]--- ---- ----- [80.894030] ADVERTENCIA: CPU: 2 PID: 140 en lib\/ref_tracker.c: 255 ref_tracker_free+0x47b\/0x6b0 [80.894297] Módulos vinculados en: [80.894929] CPU: 2 pid: 140 Comm: ax25_conn_rel 6 no Tainted 6.9.0-rc4-g8cd26fd90c1a #11 [80.895190] Nombre del hardware: PC estándar QEMU (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qem4 [80.895514] RIP:ref_tracker_free +0x47b \/0x6b0 [ 80.895808] Código: 83 c5 18 4c 89 eb 48 c1 eb 03 8a 04 13 84 c0 0f 85 df 01 00 00 41 83 7d 00 00 75 4b 4c 89 ff 9 [ 80.896171] 0018:ffff888009edf8c0 EFLAGS: 00000286 [ 80.896339] RAX: 1ffff1100141ac00 RBX: 1ffff1100149463b RCX: dffffc0000000000 [ 80.896502] RDX: 00000000000000001 RSI: 0000000000000246 RDI: ff88800a0d6518 [ 80.896925] RBP: ffff888009edf9b0 R08: ffff88806d3288d3 R09: 1ffff1100da6511a [ 80.897212] R10: dffffc0000000000 R11: 1b R12: ffff88800a4a31d4 [ 80.897859 ] R13: ffff88800a4a31d8 R14: dffffc0000000000 R15: ffff88800a0d6518 [ 80.898279] FS: 00007fd88b7fe700(0000) GS:ffff88806d300000(0000) 000000000000000 [ 80.899436] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 [ 80.900181] CR2: 00007fd88c001d48 CR3 : 000000000993e000 CR4: 00000000000006f0 ... [ 80.935774] ref_tracker: sp%d@000000000bb9df3d tiene 1\/1 usuarios en [ 80.935774] ax25_bind+0x424\/0x4e0 [ 80.93577 4] __sys_bind+0x1d9\/0x270 [ 80.935774] __x64_sys_bind+0x75\/0x80 [ 80.935774 ] do_syscall_64+0xc4\/0x1b0 [ 80.935774] Entry_SYSCALL_64_after_hwframe+0x67\/0x6f Cambie ax25_dev-&gt;dev_tracker al dev_tracker de ax25_cb para mitigar el error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d14f104027e30720582448706c7d6b43065c851","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/467324bcfe1a31ec65d0cf4aa59421d6b7a7d52b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fee8fa86a15d7790268eea458b1aec69c695530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c42b073d9af4a5329b25b17390c63ab3847f30e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-5137","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T10:15:14.840","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability classified as problematic was found in PHPGurukul Directory Management System 1.0. Affected by this vulnerability is an unknown functionality of the file \/admin\/admin-profile.php of the component Searchbar. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265213 was assigned to this vulnerability."},{"lang":"es","value":"Una vulnerabilidad fue encontrada en PHPGurukul Directory Management System 1.0 y clasificada como problemática. Una función desconocida del archivo \/admin\/admin-profile.php del componente Searchbar es afectada por esta vulnerabilidad. La manipulación conduce a cross site scripting. El ataque se puede lanzar de forma remota. El exploit ha sido divulgado al público y puede utilizarse. A esta vulnerabilidad se le asignó el identificador VDB-265213."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:R\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":2.4,"baseSeverity":"LOW"},"exploitabilityScore":0.9,"impactScore":1.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:M\/C:N\/I:P\/A:N","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"MULTIPLE","confidentialityImpact":"NONE","integrityImpact":"PARTIAL","availabilityImpact":"NONE","baseScore":3.3},"baseSeverity":"LOW","exploitabilityScore":6.4,"impactScore":2.9,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/BurakSevben\/CVEs\/blob\/main\/Directory%20Management%20System\/Directory%20Management%20System%20-%20Cross-Site-Scripting%20-%202.md","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265213","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265213","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339123","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2024-4323","sourceIdentifier":"vulnreport@tenable.com","published":"2024-05-20T12:15:08.720","lastModified":"2024-05-20T13:00:04.957","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A memory corruption vulnerability in Fluent Bit versions 2.0.7 thru 3.0.3. This issue lies in the embedded http server’s parsing of trace requests and may result in denial of service conditions, information disclosure, or remote code execution."},{"lang":"es","value":"Una vulnerabilidad de corrupción de memoria en las versiones 2.0.7 a 3.0.3 de Fluent Bit. Este problema radica en el análisis de las solicitudes de seguimiento por parte del servidor http integrado y puede dar lugar a condiciones de denegación de servicio, divulgación de información o ejecución remota de código."}],"metrics":{"cvssMetricV31":[{"source":"vulnreport@tenable.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.8,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.9}]},"weaknesses":[{"source":"vulnreport@tenable.com","type":"Secondary","description":[{"lang":"en","value":"CWE-122"}]}],"references":[{"url":"https:\/\/github.com\/fluent\/fluent-bit\/commit\/9311b43a258352797af40749ab31a63c32acfd04","source":"vulnreport@tenable.com"},{"url":"https:\/\/tenable.com\/security\/research\/tra-2024-17","source":"vulnreport@tenable.com"}]}},{"cve":{"id":"CVE-2023-49330","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T13:15:23.483","lastModified":"2024-05-20T18:15:09.137","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL Injection while getting aggregate report data."},{"lang":"es","value":"Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL mientras obtienen datos de informes agregados."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2024-27312","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T13:15:23.773","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine PAM360 version 6601 is vulnerable to authorization vulnerability which allows a low-privileged user to perform admin actions.\nNote: This vulnerability affects only the PAM360 6600 version. No other versions are applicable to this vulnerability."},{"lang":"es","value":" Zoho ManageEngine PAM360 versión 6601 es vulnerable a una vulnerabilidad de autorización que permite a un usuario con pocos privilegios realizar acciones administrativas. Nota: Esta vulnerabilidad afecta solo a la versión PAM360 6600. No hay otras versiones aplicables a esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"references":[{"url":"https:\/\/www.manageengine.com\/privileged-access-management\/advisory\/cve-2024-27312.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2024-4287","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T13:15:23.980","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In mintplex-labs\/anything-llm, a vulnerability exists due to improper input validation in the workspace update process. Specifically, the application fails to validate or format JSON data sent in an HTTP POST request to `\/api\/workspace\/:workspace-slug\/update`, allowing it to be executed as part of a database query without restrictions. This flaw enables users with a manager role to craft a request that includes nested write operations, effectively allowing them to create new Administrator accounts."},{"lang":"es","value":"En mintplex-labs\/anything-llm, existe una vulnerabilidad debido a una validación de entrada incorrecta en el proceso de actualización del espacio de trabajo. Específicamente, la aplicación no puede validar ni formatear los datos JSON enviados en una solicitud HTTP POST a `\/api\/workspace\/:workspace-slug\/update`, lo que permite que se ejecute como parte de una consulta de base de datos sin restricciones. Esta falla permite a los usuarios con rol de administrador crear una solicitud que incluya operaciones de escritura anidadas, lo que les permite crear nuevas cuentas de administrador."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-20"}]}],"references":[{"url":"https:\/\/github.com\/mintplex-labs\/anything-llm\/commit\/94b58249a37a21b1c08deaa2d1edfdecbb6deb18","source":"security@huntr.dev"},{"url":"https:\/\/huntr.com\/bounties\/34491fb7-5133-4e80-8782-74124350bbdb","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-2835","sourceIdentifier":"security@opentext.com","published":"2024-05-20T14:15:09.233","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."},{"lang":"es","value":" Se ha identificado una vulnerabilidad de Cross Site Scripting Almacenado (XSS) en OpenText ArcSight Enterprise Security Manager y ArcSight Platform. La vulnerabilidad podría explotarse de forma remota."}],"metrics":{"cvssMetricV31":[{"source":"security@opentext.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.7,"baseSeverity":"HIGH"},"exploitabilityScore":2.3,"impactScore":5.8}]},"weaknesses":[{"source":"security@opentext.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/portal.microfocus.com\/s\/article\/KM000029773","source":"security@opentext.com"}]}},{"cve":{"id":"CVE-2024-34952","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T14:15:09.480","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"taurusxin ncmdump v1.3.2 was discovered to contain a segmentation violation via the NeteaseCrypt::FixMetadata() function at \/src\/ncmcrypt.cpp. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted .ncm file."},{"lang":"es","value":" Se descubrió que taurusxin ncmdump v1.3.2 contenía una infracción de segmentación a través de la función NeteaseCrypt::FixMetadata() en \/src\/ncmcrypt.cpp. Esta vulnerabilidad permite a los atacantes provocar una denegación de servicio (DoS) a través de un archivo .ncm manipulado."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/dos_FixMetadata.assets\/debug-coredump.png","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/dos_FixMetadata.md","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_FixMetadata\/poc\/I1DWE0~U","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_FixMetadata","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_FixMetadata\/poc","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/taurusxin\/ncmdump\/issues\/18","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34953","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T14:15:09.580","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in taurusxin ncmdump v1.3.2 allows attackers to cause a Denial of Service (DoS) via memory exhaustion by supplying a crafted .ncm file"},{"lang":"es","value":"Un problema en taurusxin ncmdump v1.3.2 permite a los atacantes provocar una denegación de servicio (DoS) mediante el agotamiento de la memoria al proporcionar un archivo .ncm manipulado."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/dos_mmExhausted.assets\/image-20240505161831080.png","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/dos_mmExhausted.md","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/blob\/master\/ncmdump\/dos_mmExhausted\/poc\/I7K9QM~F","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_mmExhausted","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/Helson-S\/FuzzyTesting\/tree\/master\/ncmdump\/dos_mmExhausted\/poc","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/taurusxin\/ncmdump\/issues\/19","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-3482","sourceIdentifier":"security@opentext.com","published":"2024-05-20T14:15:09.710","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-Site Scripting (XSS) vulnerability has been identified in OpenText ArcSight Enterprise Security Manager and ArcSight Platform. The vulnerability could be remotely exploited."},{"lang":"es","value":" Se ha identificado una vulnerabilidad de Cross Site Scripting Almacenado (XSS) en OpenText ArcSight Enterprise Security Manager y ArcSight Platform. La vulnerabilidad podría explotarse de forma remota."}],"metrics":{"cvssMetricV31":[{"source":"security@opentext.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:H\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":8.7,"baseSeverity":"HIGH"},"exploitabilityScore":2.3,"impactScore":5.8}]},"weaknesses":[{"source":"security@opentext.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/portal.microfocus.com\/s\/article\/KM000029773","source":"security@opentext.com"}]}},{"cve":{"id":"CVE-2024-4151","sourceIdentifier":"security@huntr.dev","published":"2024-05-20T15:15:08.510","lastModified":"2024-05-20T15:17:54.513","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An Improper Access Control vulnerability exists in lunary-ai\/lunary version 1.2.2, where users can view and update any prompts in any projects due to insufficient access control checks in the handling of PATCH and GET requests for template versions. This vulnerability allows unauthorized users to manipulate or access sensitive project data, potentially leading to data integrity and confidentiality issues."},{"lang":"es","value":" Existe una vulnerabilidad de control de acceso inadecuado en lunary-ai\/lunary versión 1.2.2, donde los usuarios pueden ver y actualizar cualquier mensaje en cualquier proyecto debido a comprobaciones de control de acceso insuficientes en el manejo de solicitudes PATCH y GET para versiones de plantillas. Esta vulnerabilidad permite a usuarios no autorizados manipular o acceder a datos confidenciales del proyecto, lo que podría generar problemas de integridad y confidencialidad de los datos."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-284"}]}],"references":[{"url":"https:\/\/huntr.com\/bounties\/4acfef85-dedf-43bd-8438-0d8aaa4ffa01","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-0401","sourceIdentifier":"disclosure@vulncheck.com","published":"2024-05-20T17:15:09.223","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"ASUS routers supporting custom OpenVPN profiles are vulnerable to a code execution vulnerability. An authenticated and remote attacker can execute arbitrary operating system commands by uploading a crafted OVPN profile. Known affected routers include ASUS ExpertWiFi, ASUS RT-AX55, ASUS RT-AX58U, ASUS RT-AC67U, ASUS RT-AC68R, ASUS RT-AC68U, ASUS RT-AX86, ASUS RT-AC86U, ASUS RT-AX88U, and ASUS RT-AX3000."}],"metrics":{"cvssMetricV31":[{"source":"disclosure@vulncheck.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"weaknesses":[{"source":"disclosure@vulncheck.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/vulncheck.com\/advisories\/asus-ovpn-rce","source":"disclosure@vulncheck.com"}]}},{"cve":{"id":"CVE-2024-24294","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.470","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Prototype Pollution issue in Blackprint @blackprint\/engine v.0.9.0 allows an attacker to execute arbitrary code via the _utils.setDeepProperty function of engine.min.js."},{"lang":"es","value":" Un problema de contaminación de prototipos en Blackprint @blackprint\/engine v.0.9.0 permite a un atacante ejecutar código arbitrario a través de la función _utils.setDeepProperty de Engine.min.js."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/mestrtee\/d1eb6e1f7c6dd60d8838c3e56cab634d","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34947","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.540","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Quanxun Huiju Network Technology (Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 was discovered to be vulnerable to an ICMP redirect attack."},{"lang":"es","value":" Se descubrió que Quanxun Huiju Network Technology (Beijing) Co., Ltd IK-Q3000 3.7.10 x64 Build202401261655 era vulnerable a un ataque de redireccionamiento ICMP."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/wuyuhang422\/56f1e03fad8b91a3c979093f53cbbe7a","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34948","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T17:15:09.600","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in Quanxun Huiju Network Technology(Beijing) Co.,Ltd IK-Q3000 3.7.10 x64 Build202401261655 allows attackers to cause a Denial of Service (DoS) when attempting to make TCP connections."},{"lang":"es","value":"Un problema en Quanxun Huiju Network Technology (Beijing) Co., Ltd IK-Q3000 3.7.10 x64 Build202401261655 permite a los atacantes provocar una denegación de servicio (DoS) al intentar realizar conexiones TCP."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/wuyuhang422\/8de771b0b4538eb6fa23cf8282061209","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2023-49331","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T18:15:09.237","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection in the aggregate reports search option."},{"lang":"es","value":" Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL en la opción de búsqueda de informes agregados."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2023-49332","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T18:15:09.440","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection while adding file shares."},{"lang":"es","value":" Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL al agregar archivos compartidos."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2023-49333","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T18:15:09.630","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection in the dashboard graph feature."},{"lang":"es","value":" Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL en la función de gráfico del panel."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2023-49334","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T18:15:09.827","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL Injection while exporting a full summary report."},{"lang":"es","value":" Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL mientras se exporta un informe resumido completo."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2023-49335","sourceIdentifier":"0fc0942c-577d-436f-ae8e-945763c79b02","published":"2024-05-20T18:15:10.017","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Zoho ManageEngine ADAudit Plus versions below 7271 allows SQL injection while getting file server details."},{"lang":"es","value":" Las versiones de Zoho ManageEngine ADAudit Plus inferiores a 7271 permiten la inyección de SQL mientras se obtienen detalles del servidor de archivos."}],"metrics":{"cvssMetricV31":[{"source":"0fc0942c-577d-436f-ae8e-945763c79b02","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:H\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"LOW","baseScore":8.3,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/www.manageengine.com\/products\/active-directory-audit\/sqlfix-7271.html","source":"0fc0942c-577d-436f-ae8e-945763c79b02"}]}},{"cve":{"id":"CVE-2024-24293","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.193","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Prototype Pollution issue in MiguelCastillo @bit\/loader v.10.0.3 allows an attacker to execute arbitrary code via the M function e argument in index.js."},{"lang":"es","value":" Un problema de contaminación de prototipo en MiguelCastillo @bit\/loader v.10.0.3 permite a un atacante ejecutar código arbitrario a través de la función M y el argumento en index.js."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/tariqhawis\/986fb1c9da6be526fb2656ba8d194b7f","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-29651","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.270","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Prototype Pollution issue in API Dev Tools json-schema-ref-parser v.11.0.0 and v.11.1.0 allows a remote attacker to execute arbitrary code via the bundle()`, `parse()`, `resolve()`, `dereference() functions."},{"lang":"es","value":" Un problema de contaminación de prototipos en API Dev Tools json-schema-ref-parser v.11.0.0 y v.11.1.0 permite a un atacante remoto ejecutar código arbitrario a través de bundle()`, `parse()`, `resolve( )`, `funciones de desreferencia()."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/tariqhawis\/5db76b38112bba756615b688c32409ad","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-31714","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.330","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Buffer Overflow vulnerability in Waxlab wax v.0.9-3 and before allows an attacker to cause a denial of service via the Lua library component."},{"lang":"es","value":" Vulnerabilidad de desbordamiento del búfer en Waxlab Wax v.0.9-3 y anteriores permite a un atacante provocar una denegación de servicio a través del componente de la librería Lua."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/lakemoon602\/vuln\/blob\/main\/wax.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34193","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.400","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"smanga 3.2.7 does not filter the file parameter at the PHP\/get file flow.php interface, resulting in a path traversal vulnerability that can cause arbitrary file reading."},{"lang":"es","value":" smanga 3.2.7 no filtra el parámetro file en la interfaz PHP\/get file flow.php, lo que resulta en una vulnerabilidad de path traversal que puede provocar la lectura arbitraria de archivos."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/vulreport3r\/cve-reports\/blob\/main\/Smanga_has_an_arbitrary_file_read_vulnerability\/report.md","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34949","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.463","lastModified":"2024-05-21T19:15:10.173","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"SQL injection vulnerability in Likeshop before 2.5.7 allows attackers to run abitrary SQL commands via the function OrderLogic::getOrderList function, exploited at the \/admin\/order\/lists.html endpoint."},{"lang":"es","value":" likeshop 2.5.7 es vulnerable a la inyección SQL a través de la función getOrderList."}],"metrics":{},"references":[{"url":"https:\/\/charm-august-88a.notion.site\/CVE-2024-34949-SQL-injection-vulnerability-in-Likeshop-2-5-7-6139a82f9ab7423c9ef7c95950f68301","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35571","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.527","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.mode parameter in the function formSetIptv."},{"lang":"es","value":" Tenda AX1806 v1.0.0.1 contiene un desbordamiento de pila a través del parámetro iptv.stb.mode en la función formSetIptv."}],"metrics":{},"references":[{"url":"https:\/\/detailed-stetson-767.notion.site\/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35576","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.590","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.stb.port parameter in the function formSetIptv."},{"lang":"es","value":" Tenda AX1806 v1.0.0.1 contiene un desbordamiento de pila a través del parámetro iptv.stb.port en la función formSetIptv."}],"metrics":{},"references":[{"url":"https:\/\/detailed-stetson-767.notion.site\/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35578","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.650","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stballvlans parameter in the function formSetIptv."},{"lang":"es","value":" Tenda AX1806 v1.0.0.1 contiene un desbordamiento de pila a través del parámetro adv.iptv.stballvlans en la función formSetIptv."}],"metrics":{},"references":[{"url":"https:\/\/detailed-stetson-767.notion.site\/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35579","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.713","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Tenda AX1806 v1.0.0.1 contains a stack overflow via the iptv.city.vlan parameter in the function formSetIptv."},{"lang":"es","value":" Tenda AX1806 v1.0.0.1 contiene un desbordamiento de pila a través del parámetro iptv.city.vlan en la función formSetIptv."}],"metrics":{},"references":[{"url":"https:\/\/detailed-stetson-767.notion.site\/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35580","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T18:15:10.777","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Tenda AX1806 v1.0.0.1 contains a stack overflow via the adv.iptv.stbpvid parameter in the function formSetIptv."},{"lang":"es","value":" Tenda AX1806 v1.0.0.1 contiene un desbordamiento de pila a través del parámetro adv.iptv.stbpvid en la función formSetIptv."}],"metrics":{},"references":[{"url":"https:\/\/detailed-stetson-767.notion.site\/Tenda-AX1806-Buffer-Overflow-in-formSetIptv-cebf9202122a4582ae86c5253b3f6da3?pvs=4","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-29000","sourceIdentifier":"psirt@solarwinds.com","published":"2024-05-20T19:15:08.430","lastModified":"2024-05-20T19:34:58.277","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The SolarWinds Platform was determined to be affected by a reflected cross-site scripting vulnerability affecting the web console. A high-privileged user and user interaction is required to exploit this vulnerability.  "},{"lang":"es","value":"Se determinó que la plataforma SolarWinds estaba afectada por una vulnerabilidad de cross site scripting reflejado que afectaba a la consola web. Se requiere un usuario con altos privilegios y la interacción del usuario para aprovechar esta vulnerabilidad."}],"metrics":{"cvssMetricV31":[{"source":"psirt@solarwinds.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:H\/UI:R\/S:C\/C:H\/I:H\/A:H","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.9,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":6.0}]},"weaknesses":[{"source":"psirt@solarwinds.com","type":"Primary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/documentation.solarwinds.com\/en\/success_center\/orionplatform\/content\/release_notes\/solarwinds_platform_2024-1-1_release_notes.htm","source":"psirt@solarwinds.com"},{"url":"https:\/\/www.solarwinds.com\/trust-center\/security-advisories\/CVE-2024-29000","source":"psirt@solarwinds.com"}]}},{"cve":{"id":"CVE-2024-33900","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T21:15:09.177","lastModified":"2024-05-21T17:15:08.997","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"KeePassXC 2.7.7 allows an attacker (who has the privileges of the victim) to recover cleartext credentials via a memory dump. NOTE: the vendor disputes this because memory-management constraints make this unavoidable in the current design and other realistic designs."},{"lang":"es","value":" KeePassXC 2.7.7 permite a los atacantes recuperar credenciales de texto plano."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/Fastor01\/30c6d89c842feb1865ec2cd2d3806838","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/keepassxreboot\/keepassxc\/issues\/10784","source":"cve@mitre.org"},{"url":"https:\/\/keepassxc.org\/blog\/","source":"cve@mitre.org"},{"url":"https:\/\/keepassxc.org\/blog\/2019-02-21-memory-security\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-33901","sourceIdentifier":"cve@mitre.org","published":"2024-05-20T21:15:09.243","lastModified":"2024-05-21T17:15:09.143","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Issue in KeePassXC 2.7.7 allows an attacker (who has the privileges of the victim) to recover some passwords stored in the .kdbx database via a memory dump. NOTE: the vendor disputes this because memory-management constraints make this unavoidable in the current design and other realistic designs."},{"lang":"es","value":"Un problema en KeePassXC 2.7.7 permite a un atacante recuperar algunas contraseñas almacenadas en la base de datos .kdbx."}],"metrics":{},"references":[{"url":"https:\/\/gist.github.com\/Fastor01\/30c6d89c842feb1865ec2cd2d3806838","source":"cve@mitre.org"},{"url":"https:\/\/github.com\/keepassxreboot\/keepassxc\/issues\/10784","source":"cve@mitre.org"},{"url":"https:\/\/keepassxc.org\/blog\/","source":"cve@mitre.org"},{"url":"https:\/\/keepassxc.org\/blog\/2019-02-21-memory-security\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35191","sourceIdentifier":"security-advisories@github.com","published":"2024-05-20T21:15:09.307","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Formie is a Craft CMS plugin for creating forms. Prior to 2.1.6, users with access to a form's settings can include malicious Twig code into fields that support Twig. These might be the Submission Title or the Success Message. This code will then be executed upon creating a submission, or rendering the text.  This has been fixed in Formie 2.1.6."},{"lang":"es","value":"Formie es un complemento de Craft CMS para crear formularios. Antes de 2.1.6, los usuarios con acceso a la configuración de un formulario podían incluir código Twig malicioso en campos compatibles con Twig. Estos podrían ser el título del envío o el mensaje de éxito. Este código luego se ejecutará al crear un envío o al representar el texto. Esto se ha solucionado en Formie 2.1.6."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":0.8,"impactScore":3.6}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-1336"}]}],"references":[{"url":"https:\/\/github.com\/verbb\/formie\/commit\/90296edf7e707f117e760aa57e70dbd43a854420","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/verbb\/formie\/security\/advisories\/GHSA-v45m-hxqp-fwf5","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35192","sourceIdentifier":"security-advisories@github.com","published":"2024-05-20T21:15:09.550","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Trivy is a security scanner. Prior to 0.51.2, if a malicious actor is able to trigger Trivy to scan container images from a crafted malicious registry, it could result in the leakage of credentials for legitimate registries such as AWS Elastic Container Registry (ECR), Google Cloud Artifact\/Container Registry, or Azure Container Registry (ACR). These tokens can then be used to push\/pull images from those registries to which the identity\/user running Trivy has access. Systems are not affected if the default credential provider chain is unable to obtain valid credentials. This vulnerability only applies when scanning container images directly from a registry. This vulnerability is fixed in 0.51.2."},{"lang":"es","value":"Trivy es un escáner de seguridad. Antes de la versión 0.51.2, si un actor malicioso puede activar Trivy para escanear imágenes de contenedores desde un registro malicioso manipulado, podría resultar en la fuga de credenciales para registros legítimos como AWS Elastic Container Registry (ECR), Google Cloud Artifact\/ Registro de contenedores o Registro de contenedores de Azure (ACR). Estos tokens se pueden usar para enviar\/extraer imágenes de aquellos registros a los que tiene acceso la identidad\/usuario que ejecuta Trivy. Los sistemas no se ven afectados si la cadena de proveedores de credenciales predeterminada no puede obtener credenciales válidas. Esta vulnerabilidad solo se aplica al escanear imágenes de contenedores directamente desde un registro. Esta vulnerabilidad se solucionó en 0.51.2."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:H\/PR:N\/UI:R\/S:C\/C:H\/I:N\/A:N","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":5.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.0,"impactScore":4.0}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-522"}]}],"references":[{"url":"https:\/\/github.com\/aquasecurity\/trivy\/commit\/e7f14f729de259551203f313e57d2d9d3aa2ff87","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/aquasecurity\/trivy\/security\/advisories\/GHSA-xcq4-m2r3-cmrj","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35194","sourceIdentifier":"security-advisories@github.com","published":"2024-05-20T21:15:09.773","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Minder is a software supply chain security platform. Prior to version 0.0.50, Minder engine is susceptible to a denial of service from memory exhaustion that can be triggered from maliciously created templates. Minder engine uses templating to generate strings for various use cases such as URLs, messages for pull requests, descriptions for advisories. In some cases can the user control both the template and the params for it, and in a subset of these cases, Minder reads the generated template entirely into memory. When Minders templating meets both of these conditions, an attacker is able to generate large enough templates that Minder will exhaust memory and crash. This vulnerability is fixed in 0.0.50."},{"lang":"es","value":"Minder es una plataforma de seguridad de la cadena de suministro de software. Antes de la versión 0.0.50, el motor Minder es susceptible a una denegación de servicio por agotamiento de la memoria que puede desencadenarse a partir de plantillas creadas con fines malintencionados. El motor Minder utiliza plantillas para generar cadenas para diversos casos de uso, como URL, mensajes para solicitudes de extracción y descripciones para avisos. En algunos casos, el usuario puede controlar tanto la plantilla como sus parámetros y, en un subconjunto de estos casos, Minder lee la plantilla generada por completo en la memoria. Cuando las plantillas de Minders cumplen ambas condiciones, un atacante puede generar plantillas lo suficientemente grandes como para que Minder agote la memoria y falle. Esta vulnerabilidad se solucionó en 0.0.50."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":5.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.6,"impactScore":3.6}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-400"}]}],"references":[{"url":"https:\/\/github.com\/stacklok\/minder\/commit\/fe321d345b4f738de6a06b13207addc72b59f892","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/stacklok\/minder\/security\/advisories\/GHSA-crgc-2583-rw27","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35195","sourceIdentifier":"security-advisories@github.com","published":"2024-05-20T21:15:09.990","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Requests is a HTTP library. Prior to 2.32.0, when making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same host will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool. This vulnerability is fixed in 2.32.0."},{"lang":"es","value":" Requests es una librería HTTP. Antes de 2.32.0, al realizar solicitudes a través de una `Sesión` de Solicitudes, si la primera solicitud se realiza con `verify=False` para deshabilitar la verificación de certificados, todas las solicitudes posteriores al mismo host continuarán ignorando la verificación de certificados independientemente de los cambios en el valor de \"verificar\". Este comportamiento continuará durante el ciclo de vida de la conexión en el grupo de conexiones. Esta vulnerabilidad se solucionó en 2.32.0."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:H\/PR:H\/UI:R\/S:U\/C:H\/I:H\/A:N","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":5.6,"baseSeverity":"MEDIUM"},"exploitabilityScore":0.3,"impactScore":5.2}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-670"}]}],"references":[{"url":"https:\/\/github.com\/psf\/requests\/commit\/a58d7f2ffb4d00b46dca2d70a3932a0b37e22fac","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/psf\/requests\/pull\/6655","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/psf\/requests\/security\/advisories\/GHSA-9wx4-h78v-vm56","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-34710","sourceIdentifier":"security-advisories@github.com","published":"2024-05-20T22:15:08.500","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.\n"}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:H\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":7.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":4.2}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-1336"}]}],"references":[{"url":"https:\/\/github.com\/requarks\/wiki\/commit\/1238d614e1599fefadd4614ee4b5797a087f50ac","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/requarks\/wiki\/security\/advisories\/GHSA-xjcj-p2qv-q3rf","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-4985","sourceIdentifier":"product-cna@github.com","published":"2024-05-20T22:15:08.727","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An authentication bypass vulnerability was present in the GitHub Enterprise Server (GHES) when utilizing SAML single sign-on authentication with the optional encrypted assertions feature. This vulnerability allowed an attacker to forge a SAML response to provision and\/or gain access to a user with site administrator privileges. Exploitation of this vulnerability would allow unauthorized access to the instance without requiring prior authentication. This vulnerability affected all versions of GitHub Enterprise Server prior to 3.13.0 and was fixed in versions 3.9.15, 3.10.12, 3.11.10 and 3.12.4. This vulnerability was reported via the GitHub Bug Bounty program."}],"metrics":{},"weaknesses":[{"source":"product-cna@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-303"}]}],"references":[{"url":"https:\/\/docs.github.com\/en\/enterprise-server@3.10\/admin\/release-notes#3.10.12","source":"product-cna@github.com"},{"url":"https:\/\/docs.github.com\/en\/enterprise-server@3.11\/admin\/release-notes#3.11.10","source":"product-cna@github.com"},{"url":"https:\/\/docs.github.com\/en\/enterprise-server@3.12\/admin\/release-notes#3.12.4","source":"product-cna@github.com"},{"url":"https:\/\/docs.github.com\/en\/enterprise-server@3.9\/admin\/release-notes#3.9.15","source":"product-cna@github.com"}]}},{"cve":{"id":"CVE-2024-5145","sourceIdentifier":"cna@vuldb.com","published":"2024-05-20T23:15:08.533","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A vulnerability was found in SourceCodester Vehicle Management System up to 1.0 and classified as critical. This issue affects some unknown processing of the file \/newdriver.php of the component HTTP POST Request Handler. The manipulation of the argument file leads to unrestricted upload. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-265289 was assigned to this vulnerability."}],"metrics":{"cvssMetricV31":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.4}],"cvssMetricV2":[{"source":"cna@vuldb.com","type":"Secondary","cvssData":{"version":"2.0","vectorString":"AV:N\/AC:L\/Au:S\/C:P\/I:P\/A:P","accessVector":"NETWORK","accessComplexity":"LOW","authentication":"SINGLE","confidentialityImpact":"PARTIAL","integrityImpact":"PARTIAL","availabilityImpact":"PARTIAL","baseScore":6.5},"baseSeverity":"MEDIUM","exploitabilityScore":8.0,"impactScore":6.4,"acInsufInfo":false,"obtainAllPrivilege":false,"obtainUserPrivilege":false,"obtainOtherPrivilege":false,"userInteractionRequired":false}]},"weaknesses":[{"source":"cna@vuldb.com","type":"Primary","description":[{"lang":"en","value":"CWE-434"}]}],"references":[{"url":"https:\/\/github.com\/CveSecLook\/cve\/issues\/38","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?ctiid.265289","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?id.265289","source":"cna@vuldb.com"},{"url":"https:\/\/vuldb.com\/?submit.339721","source":"cna@vuldb.com"}]}},{"cve":{"id":"CVE-2023-37929","sourceIdentifier":"security@zyxel.com.tw","published":"2024-05-21T02:15:08.470","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The buffer overflow vulnerability in the CGI program of the VMG3625-T50B firmware version V5.50(ABPM.8)C0 could allow an authenticated remote attacker to cause denial of service (DoS) conditions by sending a crafted HTTP request to a vulnerable device."}],"metrics":{"cvssMetricV31":[{"source":"security@zyxel.com.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":6.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":3.6}]},"weaknesses":[{"source":"security@zyxel.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/www.zyxel.com\/global\/en\/support\/security-advisories\/zyxel-security-advisory-for-buffer-overflow-vulnerabilities-in-some-5g-nr-4g-lte-cpe-dsl-ethernet-cpe-fiber-ont-wifi-extender-and-home-router-devices-05-21-2024","source":"security@zyxel.com.tw"}]}},{"cve":{"id":"CVE-2024-0816","sourceIdentifier":"security@zyxel.com.tw","published":"2024-05-21T02:15:08.743","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The buffer overflow vulnerability in the DX3300-T1 firmware version V5.50(ABVY.4)C0 could allow an authenticated local attacker to cause denial of service (DoS) conditions by executing the CLI command with crafted strings on an affected device."}],"metrics":{"cvssMetricV31":[{"source":"security@zyxel.com.tw","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":5.5,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.8,"impactScore":3.6}]},"weaknesses":[{"source":"security@zyxel.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-120"}]}],"references":[{"url":"https:\/\/www.zyxel.com\/global\/en\/support\/security-advisories\/zyxel-security-advisory-for-buffer-overflow-vulnerabilities-in-some-5g-nr-4g-lte-cpe-dsl-ethernet-cpe-fiber-ont-wifi-extender-and-home-router-devices-05-21-2024","source":"security@zyxel.com.tw"}]}},{"cve":{"id":"CVE-2024-3155","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T03:15:08.323","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel – Combo Blocks plugin for WordPress is vulnerable to Stored Cross-Site Scripting via several parameters in all versions up to, and including, 2.2.80 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&new=3084503%40post-grid%2Ftrunk&old=3078364%40post-grid%2Ftrunk&sfp_email=&sfph_mail=","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/84bc611c-c38a-4282-9a9b-5bb9157fb1de?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4943","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T03:15:08.540","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Blocksy theme for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘has_field_link_rel’ parameter in all versions up to, and including, 2.0.46 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/themes.trac.wordpress.org\/changeset?sfp_email=&sfph_mail=&reponame=&new=227333%40blocksy%2F2.0.47&old=227242%40blocksy%2F2.0.46","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/dc7099d7-94fd-42be-a921-bfcad43ae252?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-2189","sourceIdentifier":"contact@wpscan.com","published":"2024-05-21T06:15:08.540","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Social Icons Widget & Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/b8661fbe-78b9-4d29-90bf-5b68af468eb6\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-4061","sourceIdentifier":"contact@wpscan.com","published":"2024-05-21T06:15:09.247","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/175a9f3a-1f8d-44d1-8a12-e037251b025d\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-4289","sourceIdentifier":"contact@wpscan.com","published":"2024-05-21T06:15:09.517","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/072785de-0ce5-42a4-a3fd-4eb1d1a2f1be\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-4290","sourceIdentifier":"contact@wpscan.com","published":"2024-05-21T06:15:09.767","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/a9a10d0f-d8f2-4f3e-92bf-94fc08416d87\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-4372","sourceIdentifier":"contact@wpscan.com","published":"2024-05-21T06:15:10.000","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks"}],"metrics":{},"references":[{"url":"https:\/\/wpscan.com\/vulnerability\/13dcfd8a-e378-44b4-af6f-940bc41539a4\/","source":"contact@wpscan.com"}]}},{"cve":{"id":"CVE-2024-4442","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T07:15:08.460","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Salon booking system plugin for WordPress is vulnerable to arbitrary file deletion in all versions up to, and including, 9.8. This is due to the plugin not properly validating the path of an uploaded file prior to deleting it. This makes it possible for unauthenticated attackers to delete arbitrary files, including the wp-config.php file, which can make site takeover and remote code execution possible."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.1,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":5.2}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/salon-booking-system\/tags\/9.8\/src\/SLN\/Action\/Ajax\/RemoveUploadedFile.php#L5","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088196\/salon-booking-system#file14","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/eaafeadd-f44c-49b1-b900-ef40800c629e?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4470","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T07:15:08.810","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Master Slider – Responsive Touch Slider plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'ms_slide_info' shortcode in all versions up to, and including, 3.9.9 due to insufficient input sanitization and output escaping on user supplied 'tag_name' attribute. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/master-slider\/tags\/3.9.9\/includes\/msp-shortcodes.php#L1078","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3084860\/#file2","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/cd59bee7-5de5-406d-8c1b-654306d68ab8?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4710","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T07:15:09.087","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The UberMenu plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's ubermenu-col, ubermenu_mobile_close_button, ubermenu_toggle, ubermenu-search shortcodes in all versions up to, and including, 3.8.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/codecanyon.net\/item\/ubermenu-wordpress-mega-menu-plugin\/154703","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/96161594-9513-49f7-91ab-9ad05b900a81?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-3345","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T09:15:08.533","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The ShopLentor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's woolentorsearch shortcode in all versions up to, and including, 2.8.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/woolentor-addons\/tags\/2.8.3\/includes\/modules\/ajax-search\/base.php#L137","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088881\/woolentor-addons\/trunk\/includes\/modules\/ajax-search\/base.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/d6a73a7f-53ac-4930-a1cd-c39818f64678?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4566","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T09:15:08.890","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The ShopLentor plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the ajax_dismiss function in all versions up to, and including, 2.8.8. This makes it possible for authenticated attackers, with contributor-level access and above, to set arbitrary WordPress options to \"true\". NOTE: This vulnerability can be exploited by attackers with subscriber- or customer-level access and above if (1) the WooCommerce plugin is deactivated or (2) access to the default WordPress admin dashboard is explicitly enabled for authenticated users."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"HIGH","baseScore":7.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":4.2}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/woolentor-addons\/trunk\/includes\/admin\/include\/class.notice.php#L52","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088881\/woolentor-addons\/trunk\/includes\/admin\/include\/class.notice.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c6aaabe9-4f55-4c01-b350-573e6a944353?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4875","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T09:15:09.103","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The HT Mega – Absolute Addons For Elementor plugin for WordPress is vulnerable to unauthorized modification of data|loss of data due to a missing capability check on the 'ajax_dismiss' function in versions up to, and including, 2.5.2. This makes it possible for authenticated attackers, with subscriber-level permissions and above, to update options such as users_can_register, which can lead to unauthorized user registration."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":4.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":1.4}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/ht-mega-for-elementor\/trunk\/admin\/include\/class.dynamic-notice.php#L52","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088899\/ht-mega-for-elementor\/trunk\/admin\/include\/class.dynamic-notice.php","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/bdd3868a-d741-42b4-bc7f-6fb5d33bb71b?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2023-3938","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T10:15:08.730","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Improper Neutralization of Special Elements used in an SQL Command ('SQL\n Injection') vulnerability in ZkTeco-based OEM devices allows an \nattacker \n to authenticate under any user from the device database.\n\nThis issue affects \n\n\nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec \nST-FR041ME and possibly others) with the ZAM170-NF-1.8.25-7354-Ver1.0.0 \nand possibly others."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:P\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"PHYSICAL","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.6,"baseSeverity":"MEDIUM"},"exploitabilityScore":0.9,"impactScore":3.6}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-001.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2023-3939","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T10:15:09.683","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Improper Neutralization of Special Elements used in an OS Command ('OS \nCommand Injection') vulnerability in ZkTeco-based OEM devices allows OS \nCommand Injection. \nSince all the found command implementations are executed from the \nsuperuser, their impact is the maximum possible.\nThis issue affects \nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec \nST-FR041ME and possibly others) with the ZAM170-NF-1.8.25-7354-Ver1.0.0 \nand possibly other."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":10.0,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":6.0}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-78"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-002.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2024-4435","sourceIdentifier":"6b35d637-e00f-4228-858c-b20ad6e1d07b","published":"2024-05-21T10:15:10.393","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"When storing unbounded types in a BTreeMap, a node is represented as a linked list of \"memory chunks\". It was discovered recently that when we deallocate a node, in some cases only the first memory chunk is deallocated, and the rest of the memory chunks remain (incorrectly) allocated, causing a memory leak. In the worst case, depending on how a canister uses the BTreeMap, an adversary could interact with the canister through its API and trigger interactions with the map that keep consuming memory due to the memory leak. This could potentially lead to using an excessive amount of memory, or even running out of memory.\n\nThis issue has been fixed in  #212 https:\/\/github.com\/dfinity\/stable-structures\/pull\/212  by changing the logic for deallocating nodes to ensure that all of a node's memory chunks are deallocated and users are asked to upgrade to version 0.6.4.. Tests have been added to prevent regressions of this nature moving forward. Note: Users of stable-structure < 0.6.0 are not affected.\n\nUsers who are not storing unbounded types in BTreeMap are not affected and do not need to upgrade. Otherwise, an upgrade to version 0.6.4 is necessary."}],"metrics":{"cvssMetricV31":[{"source":"6b35d637-e00f-4228-858c-b20ad6e1d07b","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"NONE","availabilityImpact":"HIGH","baseScore":5.9,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.2,"impactScore":3.6}]},"weaknesses":[{"source":"6b35d637-e00f-4228-858c-b20ad6e1d07b","type":"Secondary","description":[{"lang":"en","value":"CWE-401"}]}],"references":[{"url":"https:\/\/docs.rs\/ic-stable-structures\/0.6.4\/ic_stable_structures\/","source":"6b35d637-e00f-4228-858c-b20ad6e1d07b"},{"url":"https:\/\/github.com\/dfinity\/stable-structures\/pull\/212","source":"6b35d637-e00f-4228-858c-b20ad6e1d07b"},{"url":"https:\/\/internetcomputer.org\/docs\/current\/developer-docs\/smart-contracts\/maintain\/storage#stable-memory","source":"6b35d637-e00f-4228-858c-b20ad6e1d07b"}]}},{"cve":{"id":"CVE-2024-4553","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T10:15:10.623","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The WP Shortcodes Plugin — Shortcodes Ultimate plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'su_members' shortcode in all versions up to, and including, 7.1.5 due to insufficient input sanitization and output escaping on user supplied 'color' attribute. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/shortcodes-ultimate\/tags\/7.1.4\/includes\/shortcodes\/members.php#L83","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3084162\/#file524","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/d8db8ed5-ebeb-4102-928f-fe417e429ad2?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4695","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T10:15:10.820","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Move Addons for Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via multiple widgets in all versions up to, and including, 1.3.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/data-table\/widget.php#L836","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/event-calendar\/widget.php#L932","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/mailchimp\/widget.php#L728","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/shop-product-grid\/widget.php#L1203","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/team-member\/widget.php#L1464","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/move-addons\/trunk\/includes\/widgets\/user-login\/widget.php#L1146","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088859\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/72662a59-f41c-4df7-aa04-7243ff43c48d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4700","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T10:15:11.023","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The WP Table Builder – WordPress Table Plugin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the button element in all versions up to, and including, 1.4.14 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. By default, this can only be exploited by administrators, but the ability to use and configure WP Table Builder can be extended to contributors."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/wp-table-builder\/trunk\/inc\/admin\/element-classes\/elements\/button-element.php#L343","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088612\/","source":"security@wordfence.com"},{"url":"https:\/\/wordpress.org\/plugins\/wp-table-builder\/#developers","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/20cd08ac-826f-40dd-804a-546b0c334b66?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4988","sourceIdentifier":"907edf6c-bf03-423e-ab1a-8da27e1aa1ea","published":"2024-05-21T10:15:11.240","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The mobile application (com.transsion.videocallenhancer) interface has improper permission control, which can lead to the risk of private file leakage."}],"metrics":{},"references":[{"url":"https:\/\/security.tecno.com\/SRC\/blogdetail\/250?lang=en_US","source":"907edf6c-bf03-423e-ab1a-8da27e1aa1ea"},{"url":"https:\/\/security.tecno.com\/SRC\/securityUpdates","source":"907edf6c-bf03-423e-ab1a-8da27e1aa1ea"}]}},{"cve":{"id":"CVE-2023-3940","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T11:15:08.780","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Relative Path Traversal vulnerability in ZkTeco-based OEM devices allows an attacker \nto access any file on the system.\n\n\nThis issue affects \nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec \nST-FR041ME and possibly others) with the ZAM170-NF-1.8.25-7354-Ver1.0.0 \nand possibly others."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-23"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-003.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2023-3941","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T11:15:09.000","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Relative Path Traversal vulnerability in ZkTeco-based OEM devices allows an attacker \n\nto write any file on the system with root privileges.\n\n\nThis issue affects \nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec \nST-FR041ME and possibly others) with the ZAM170-NF-1.8.25-7354-Ver1.0.0 \nand possibly others."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":10.0,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":6.0}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-23"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-003.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2024-4361","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T11:15:09.210","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Page Builder by SiteOrigin plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'siteorigin_widget' shortcode in all versions up to, and including, 2.29.15 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/siteorigin-panels\/trunk\/inc\/widget-shortcode.php#L40","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3086025\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/a97f72f6-86f7-45dc-908a-292ba735071d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4619","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T11:15:09.397","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The Elementor Website Builder – More than Just a Page Builder plugin for WordPress is vulnerable to DOM-Based Stored Cross-Site Scripting via the ‘hover_animation’ parameter in versions up to, and including, 3.21.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/elementor\/trunk\/includes\/widgets\/image-box.php#L696","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3089420","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/c7e1028e-e04b-46c4-b574-889d9fc1069d?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4876","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T11:15:09.587","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The HT Mega – Absolute Addons For Elementor plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘popover_header_text’ parameter in versions up to, and including, 2.5.2 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/browser\/ht-mega-for-elementor\/tags\/2.5.0\/includes\/widgets\/htmega_popover.php#L891","source":"security@wordfence.com"},{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088899\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/39e104fa-591a-41e8-af7e-f8b32a199170?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-3268","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T12:15:08.397","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The YouTube Video Gallery by YouTube Showcase – Video Gallery Plugin for WordPress plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the emd_form_builder_lite_submit_form function in all versions up to, and including, 3.3.6. This makes it possible for unauthenticated attackers to create arbitrary posts or pages."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Primary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":5.3,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.9,"impactScore":1.4}]},"references":[{"url":"https:\/\/plugins.trac.wordpress.org\/changeset\/3088363\/youtube-showcase","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/0e9d5382-d37d-4a40-8f22-e32b8ee98859?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2024-4420","sourceIdentifier":"cve-coordination@google.com","published":"2024-05-21T12:15:08.627","lastModified":"2024-05-21T12:37:59.687","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"There exists a Denial of service vulnerability in Tink-cc in versions prior to 2.1.3.   *  An adversary can crash binaries using the crypto::tink::JsonKeysetReader in tink-cc by providing an input that is not an encoded JSON object, but still a valid encoded JSON element, for example a number or an array. This will crash as Tink just assumes any valid JSON input will contain an object.\n\n\n  *  An adversary can crash binaries using the crypto::tink::JsonKeysetReader in tink-cc by providing an input containing many nested JSON objects. This may result in a stack overflow.\n\n\nWe recommend upgrading to version 2.1.3 or above"}],"metrics":{},"weaknesses":[{"source":"cve-coordination@google.com","type":"Secondary","description":[{"lang":"en","value":"CWE-116"}]}],"references":[{"url":"https:\/\/github.com\/tink-crypto\/tink-cc\/issues\/4","source":"cve-coordination@google.com"}]}},{"cve":{"id":"CVE-2023-3942","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T13:15:08.580","lastModified":"2024-05-21T16:54:35.880","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An 'SQL Injection' vulnerability, due to improper neutralization of special elements used in SQL commands, exists in ZKTeco-based OEM devices. This vulnerability allows an attacker to, in some cases, impersonate another user or perform unauthorized actions. In other instances, it enables the attacker to access user data and system parameters from the database.\nThis issue affects \nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec ST-FR041ME and possibly others)\n\n with firmware \nZAM170-NF-1.8.25-7354-Ver1.0.0 and possibly other, Standalone service v. 2.1.6-20200907 and possibly others."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":7.5,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":3.6}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-89"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-005.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2024-35180","sourceIdentifier":"security-advisories@github.com","published":"2024-05-21T13:15:08.813","lastModified":"2024-05-21T16:54:35.880","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"OMERO.web provides a web based client and plugin infrastructure. There is currently no escaping or validation of the `callback` parameter that can be passed to various OMERO.web endpoints that have JSONP enabled. This vulnerability has been patched in version 5.26.0.\n"}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.1,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-830"}]}],"references":[{"url":"https:\/\/github.com\/ome\/omero-web\/commit\/d41207cbb82afc56ea79e84db532608aa24ab4aa","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/ome\/omero-web\/security\/advisories\/GHSA-vr85-5pwx-c6gq","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35361","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T13:15:09.057","lastModified":"2024-05-21T16:54:35.880","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"MTab Bookmark v1.9.5 has an SQL injection vulnerability in \/LinkStore\/getIcon. An attacker can execute arbitrary SQL statements through this vulnerability without requiring any user rights."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/Hebing123\/cve\/issues\/37","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2023-3943","sourceIdentifier":"vulnerability@kaspersky.com","published":"2024-05-21T14:15:11.557","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Stack-based Buffer Overflow vulnerability in ZkTeco-based OEM devices allows, in some cases, the execution of arbitrary code. Due to the lack of protection mechanisms such as stack canaries and PIE, it is possible to successfully execute code even under restrictive conditions.\n\nThis issue affects \nZkTeco-based OEM devices (ZkTeco ProFace X, Smartec ST-FR043, Smartec ST-FR041ME and possibly others)\n\n with firmware \nZAM170-NF-1.8.25-7354-Ver1.0.0 and possibly others."}],"metrics":{"cvssMetricV31":[{"source":"vulnerability@kaspersky.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":10.0,"baseSeverity":"CRITICAL"},"exploitabilityScore":3.9,"impactScore":6.0}]},"weaknesses":[{"source":"vulnerability@kaspersky.com","type":"Secondary","description":[{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/github.com\/klsecservices\/Advisories\/blob\/master\/K-ZkTeco-2023-006.md","source":"vulnerability@kaspersky.com"}]}},{"cve":{"id":"CVE-2024-34071","sourceIdentifier":"security-advisories@github.com","published":"2024-05-21T14:15:11.783","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Umbraco is an ASP.NET CMS used by more than 730.000 websites. Umbraco has an endpoint that is vulnerable to open redirects. The endpoint is protected so it requires the user to be signed into backoffice before the vulnerable is exposed. This vulnerability has been patched in version(s) 8.18.14, 10.8.6, 12.3.10 and 13.3.1."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"REQUIRED","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.1,"baseSeverity":"MEDIUM"},"exploitabilityScore":2.8,"impactScore":2.7}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-601"}]}],"references":[{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/5f24de308584b9771240a6db1a34630a5114c450","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/c17d4e1a600098ec524e4126f4395255476bc33f","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/c8f71af646171074c13e5c34f74312def4512031","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/d8df405db4ea884bb4b96f088d10d9a2070cf024","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/security\/advisories\/GHSA-j74q-mv2c-rxmp","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35218","sourceIdentifier":"security-advisories@github.com","published":"2024-05-21T14:15:12.003","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Umbraco CMS is an ASP.NET CMS used by more than 730.000 websites. Stored Cross-site scripting (XSS) enable attackers that have access to backoffice to bring malicious content into a website or application. This vulnerability has been patched in version(s) 8.18.13, 10.8.4, 12.3.7, 13.1.1 by implementing IHtmlSanitizer.\n\n\n\n\n"}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:H\/PR:H\/UI:R\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"HIGH","privilegesRequired":"HIGH","userInteraction":"REQUIRED","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.2,"baseSeverity":"MEDIUM"},"exploitabilityScore":0.5,"impactScore":3.6}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-79"}]}],"references":[{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/1b712fe6ec52aa4e71b3acf63e393c8e6ab85385","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/a2684069b1e9976444f60b4b37a80be05b87f6b6","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/cbf9f9bcd199d7ca0412be3071d275556f10b7ba","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/commit\/d090176272d07500dac0daee7c598aa8bb321050","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/umbraco\/Umbraco-CMS\/security\/advisories\/GHSA-gvpc-3pj6-4m9w","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-35384","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T14:15:12.217","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in Cesanta mjs 2.20.0 allows a remote attacker to cause a denial of service via the mjs_array_length function in the mjs.c file."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/cesanta\/mjs\/issues\/287","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35385","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T14:15:12.307","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in Cesanta mjs 2.20.0 allows a remote attacker to cause a denial of service via the mjs_mk_ffi_sig function in the mjs.c file."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/cesanta\/mjs\/issues\/288","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35386","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T14:15:12.400","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue in Cesanta mjs 2.20.0 allows a remote attacker to cause a denial of service via the mjs_do_gc function in the mjs.c file."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/cesanta\/mjs\/issues\/286","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-4452","sourceIdentifier":"security@wordfence.com","published":"2024-05-21T14:15:12.563","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"The ElementsKit Pro plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the ‘url’ parameter in versions up to, and including, 3.6.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page."}],"metrics":{"cvssMetricV31":[{"source":"security@wordfence.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"references":[{"url":"https:\/\/wpmet.com\/plugin\/elementskit\/","source":"security@wordfence.com"},{"url":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/id\/488ac848-786e-4100-a387-5a40e8fc4175?source=cve","source":"security@wordfence.com"}]}},{"cve":{"id":"CVE-2020-36788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.187","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/nouveau: avoid a use-after-free when BO init fails\n\nnouveau_bo_init() is backed by ttm_bo_init() and ferries its return code\nback to the caller. On failures, ttm_bo_init() invokes the provided\ndestructor which should de-initialize and free the memory.\n\nThus, when nouveau_bo_init() returns an error the gem object has already\nbeen released and the memory freed by nouveau_bo_del_ttm()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/548f2ff8ea5e0ce767ae3418d1ec5308990be87d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcf34aa5082ee2343574bc3f4d1c126030913e54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f86e19d918a85492ad1a01fcdc0ad5ecbdac6f96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47220","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.290","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: core: fix kernel panic when do reboot\n\nWhen do system reboot, it calls dwc3_shutdown and the whole debugfs\nfor dwc3 has removed first, when the gadget tries to do deinit, and\nremove debugfs for its endpoints, it meets NULL pointer dereference\nissue when call debugfs_lookup. Fix it by removing the whole dwc3\ndebugfs later than dwc3_drd_exit.\n\n[ 2924.958838] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000002\n....\n[ 2925.030994] pstate: 60000005 (nZCv daif -PAN -UAO -TCO BTYPE=--)\n[ 2925.037005] pc : inode_permission+0x2c\/0x198\n[ 2925.041281] lr : lookup_one_len_common+0xb0\/0xf8\n[ 2925.045903] sp : ffff80001276ba70\n[ 2925.049218] x29: ffff80001276ba70 x28: ffff0000c01f0000 x27: 0000000000000000\n[ 2925.056364] x26: ffff800011791e70 x25: 0000000000000008 x24: dead000000000100\n[ 2925.063510] x23: dead000000000122 x22: 0000000000000000 x21: 0000000000000001\n[ 2925.070652] x20: ffff8000122c6188 x19: 0000000000000000 x18: 0000000000000000\n[ 2925.077797] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000004\n[ 2925.084943] x14: ffffffffffffffff x13: 0000000000000000 x12: 0000000000000030\n[ 2925.092087] x11: 0101010101010101 x10: 7f7f7f7f7f7f7f7f x9 : ffff8000102b2420\n[ 2925.099232] x8 : 7f7f7f7f7f7f7f7f x7 : feff73746e2f6f64 x6 : 0000000000008080\n[ 2925.106378] x5 : 61c8864680b583eb x4 : 209e6ec2d263dbb7 x3 : 000074756f307065\n[ 2925.113523] x2 : 0000000000000001 x1 : 0000000000000000 x0 : ffff8000122c6188\n[ 2925.120671] Call trace:\n[ 2925.123119]  inode_permission+0x2c\/0x198\n[ 2925.127042]  lookup_one_len_common+0xb0\/0xf8\n[ 2925.131315]  lookup_one_len_unlocked+0x34\/0xb0\n[ 2925.135764]  lookup_positive_unlocked+0x14\/0x50\n[ 2925.140296]  debugfs_lookup+0x68\/0xa0\n[ 2925.143964]  dwc3_gadget_free_endpoints+0x84\/0xb0\n[ 2925.148675]  dwc3_gadget_exit+0x28\/0x78\n[ 2925.152518]  dwc3_drd_exit+0x100\/0x1f8\n[ 2925.156267]  dwc3_remove+0x11c\/0x120\n[ 2925.159851]  dwc3_shutdown+0x14\/0x20\n[ 2925.163432]  platform_shutdown+0x28\/0x38\n[ 2925.167360]  device_shutdown+0x15c\/0x378\n[ 2925.171291]  kernel_restart_prepare+0x3c\/0x48\n[ 2925.175650]  kernel_restart+0x1c\/0x68\n[ 2925.179316]  __do_sys_reboot+0x218\/0x240\n[ 2925.183247]  __arm64_sys_reboot+0x28\/0x30\n[ 2925.187262]  invoke_syscall+0x48\/0x100\n[ 2925.191017]  el0_svc_common.constprop.0+0x48\/0xc8\n[ 2925.195726]  do_el0_svc+0x28\/0x88\n[ 2925.199045]  el0_svc+0x20\/0x30\n[ 2925.202104]  el0_sync_handler+0xa8\/0xb0\n[ 2925.205942]  el0_sync+0x148\/0x180\n[ 2925.209270] Code: a9025bf5 2a0203f5 121f0056 370802b5 (79400660)\n[ 2925.215372] ---[ end trace 124254d8e485a58b ]---\n[ 2925.220012] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b\n[ 2925.227676] Kernel Offset: disabled\n[ 2925.231164] CPU features: 0x00001001,20000846\n[ 2925.235521] Memory Limit: none\n[ 2925.238580] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b ]---\n\n(cherry picked from commit 2a042767814bd0edf2619f06fecd374e266ea068)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/174c27583b3807ac96228c442735b02622d8d1c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4bf584a03eec674975ee9fe36c8583d9d470dab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58b5e02c6ca0e2b7c87cd8023ff786ef3c0eef74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7f9745ab342bcce5efd5d4d2297d0a3dd9db0eac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa8c413e6b74ae5d12daf911c73238c5bdacd8e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd7c4bd582494934be15d41aebe0dbe23790605f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff4c63f3e8cb7af2ce51cc56b031e08fd23c758b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47221","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.380","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/slub: actually fix freelist pointer vs redzoning\n\nIt turns out that SLUB redzoning (\"slub_debug=Z\") checks from\ns->object_size rather than from s->inuse (which is normally bumped to\nmake room for the freelist pointer), so a cache created with an object\nsize less than 24 would have the freelist pointer written beyond\ns->object_size, causing the redzone to be corrupted by the freelist\npointer.  This was very visible with \"slub_debug=ZF\":\n\n  BUG test (Tainted: G    B            ): Right Redzone overwritten\n  -----------------------------------------------------------------------------\n\n  INFO: 0xffff957ead1c05de-0xffff957ead1c05df @offset=1502. First byte 0x1a instead of 0xbb\n  INFO: Slab 0xffffef3950b47000 objects=170 used=170 fp=0x0000000000000000 flags=0x8000000000000200\n  INFO: Object 0xffff957ead1c05d8 @offset=1496 fp=0xffff957ead1c0620\n\n  Redzone  (____ptrval____): bb bb bb bb bb bb bb bb               ........\n  Object   (____ptrval____): 00 00 00 00 00 f6 f4 a5               ........\n  Redzone  (____ptrval____): 40 1d e8 1a aa                        @....\n  Padding  (____ptrval____): 00 00 00 00 00 00 00 00               ........\n\nAdjust the offset to stay within s->object_size.\n\n(Note that no caches of in this size range are known to exist in the\nkernel currently.)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ce6e8bee7a3883e8008b30f5887dbb426aac6a35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e41a49fadbc80b60b48d3c095d9e2ee7ef7c9a8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6ed2357541612a13a5841b3af4dc32ed984a25f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47222","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.453","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bridge: fix vlan tunnel dst refcnt when egressing\n\nThe egress tunnel code uses dst_clone() and directly sets the result\nwhich is wrong because the entry might have 0 refcnt or be already deleted,\ncausing number of problems. It also triggers the WARN_ON() in dst_hold()[1]\nwhen a refcnt couldn't be taken. Fix it by using dst_hold_safe() and\nchecking if a reference was actually taken before setting the dst.\n\n[1] dmesg WARN_ON log and following refcnt errors\n WARNING: CPU: 5 PID: 38 at include\/net\/dst.h:230 br_handle_egress_vlan_tunnel+0x10b\/0x134 [bridge]\n Modules linked in: 8021q garp mrp bridge stp llc bonding ipv6 virtio_net\n CPU: 5 PID: 38 Comm: ksoftirqd\/5 Kdump: loaded Tainted: G        W         5.13.0-rc3+ #360\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33 04\/01\/2014\n RIP: 0010:br_handle_egress_vlan_tunnel+0x10b\/0x134 [bridge]\n Code: e8 85 bc 01 e1 45 84 f6 74 90 45 31 f6 85 db 48 c7 c7 a0 02 19 a0 41 0f 94 c6 31 c9 31 d2 44 89 f6 e8 64 bc 01 e1 85 db 75 02 <0f> 0b 31 c9 31 d2 44 89 f6 48 c7 c7 70 02 19 a0 e8 4b bc 01 e1 49\n RSP: 0018:ffff8881003d39e8 EFLAGS: 00010246\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffffffffa01902a0\n RBP: ffff8881040c6700 R08: 0000000000000000 R09: 0000000000000001\n R10: 2ce93d0054fe0d00 R11: 54fe0d00000e0000 R12: ffff888109515000\n R13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000401\n FS:  0000000000000000(0000) GS:ffff88822bf40000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f42ba70f030 CR3: 0000000109926000 CR4: 00000000000006e0\n Call Trace:\n  br_handle_vlan+0xbc\/0xca [bridge]\n  __br_forward+0x23\/0x164 [bridge]\n  deliver_clone+0x41\/0x48 [bridge]\n  br_handle_frame_finish+0x36f\/0x3aa [bridge]\n  ? skb_dst+0x2e\/0x38 [bridge]\n  ? br_handle_ingress_vlan_tunnel+0x3e\/0x1c8 [bridge]\n  ? br_handle_frame_finish+0x3aa\/0x3aa [bridge]\n  br_handle_frame+0x2c3\/0x377 [bridge]\n  ? __skb_pull+0x33\/0x51\n  ? vlan_do_receive+0x4f\/0x36a\n  ? br_handle_frame_finish+0x3aa\/0x3aa [bridge]\n  __netif_receive_skb_core+0x539\/0x7c6\n  ? __list_del_entry_valid+0x16e\/0x1c2\n  __netif_receive_skb_list_core+0x6d\/0xd6\n  netif_receive_skb_list_internal+0x1d9\/0x1fa\n  gro_normal_list+0x22\/0x3e\n  dev_gro_receive+0x55b\/0x600\n  ? detach_buf_split+0x58\/0x140\n  napi_gro_receive+0x94\/0x12e\n  virtnet_poll+0x15d\/0x315 [virtio_net]\n  __napi_poll+0x2c\/0x1c9\n  net_rx_action+0xe6\/0x1fb\n  __do_softirq+0x115\/0x2d8\n  run_ksoftirqd+0x18\/0x20\n  smpboot_thread_fn+0x183\/0x19c\n  ? smpboot_unregister_percpu_thread+0x66\/0x66\n  kthread+0x10a\/0x10f\n  ? kthread_mod_delayed_work+0xb6\/0xb6\n  ret_from_fork+0x22\/0x30\n ---[ end trace 49f61b07f775fd2b ]---\n dst_release: dst:00000000c02d677a refcnt:-1\n dst_release underflow"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25053a8404ba17ca48f5553d487afc1882e9f56c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42020f7f37a90d24b9551f5f7eba3f7c7c102968","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79855be6445b6592bddb7bd7167083ec8cdbd73f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/84fc1c944e45ab317e2e70a0e7f76fa2a5e43b6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfc579f9d89af4ada58c69b03bcaa4887840f3b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc7fdd8c5c2ad2fe3e297698be9d4dbe4a4e0579","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47223","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.530","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: bridge: fix vlan tunnel dst null pointer dereference\n\nThis patch fixes a tunnel_dst null pointer dereference due to lockless\naccess in the tunnel egress path. When deleting a vlan tunnel the\ntunnel_dst pointer is set to NULL without waiting a grace period (i.e.\nwhile it's still usable) and packets egressing are dereferencing it\nwithout checking. Use READ\/WRITE_ONCE to annotate the lockless use of\ntunnel_id, use RCU for accessing tunnel_dst and make sure it is read\nonly once and checked in the egress path. The dst is already properly RCU\nprotected so we don't need to do anything fancy than to make sure\ntunnel_id and tunnel_dst are read only once and checked in the egress path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24a6e55f17aa123bc1fc54b7d3c410b41bc16530","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58e2071742e38f29f051b709a5cca014ba51166f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2241e62f6b4a774d8a92048fdf59c45f6c2fe5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abb02e05cb1c0a30dd873a29f33bc092067dc35d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad7feefe7164892db424c45687472db803d87f79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe0448a3fad365a747283a00a1d1ad5e8d6675b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47224","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.687","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ll_temac: Make sure to free skb when it is completely used\n\nWith the skb pointer piggy-backed on the TX BD, we have a simple and\nefficient way to free the skb buffer when the frame has been transmitted.\nBut in order to avoid freeing the skb while there are still fragments from\nthe skb in use, we need to piggy-back on the TX BD of the skb, not the\nfirst.\n\nWithout this, we are doing use-after-free on the DMA side, when the first\nBD of a multi TX BD packet is seen as completed in xmit_done, and the\nremaining BDs are still being processed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/019ab7d044d0ebf97e1236bb8935b7809be92358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aa32217a9a446275440ee8724b1ecaf1838df47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d120ab4dc39a543c6b63361e1d0541c382900a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8afe05bd359ebe12a61dbdc94c06c00ea3e8d4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47225","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.760","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix deadlock in AP\/VLAN handling\n\nSyzbot reports that when you have AP_VLAN interfaces that are up\nand close the AP interface they belong to, we get a deadlock. No\nsurprise - since we dev_close() them with the wiphy mutex held,\nwhich goes back into the netdev notifier in cfg80211 and tries to\nacquire the wiphy mutex there.\n\nTo fix this, we need to do two things:\n 1) prevent changing iftype while AP_VLANs are up, we can't\n    easily fix this case since cfg80211 already calls us with\n    the wiphy mutex held, but change_interface() is relatively\n    rare in drivers anyway, so changing iftype isn't used much\n    (and userspace has to fall back to down\/change\/up anyway)\n 2) pull the dev_close() loop over VLANs out of the wiphy mutex\n    section in the normal stop case"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8043903fcb72f545c52e3ec74d6fd82ef79ce7c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5befb224edbe53056c2c18999d630dafb4a08b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47226","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.823","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/fpu: Invalidate FPU state after a failed XRSTOR from a user buffer\n\nBoth Intel and AMD consider it to be architecturally valid for XRSTOR to\nfail with #PF but nonetheless change the register state.  The actual\nconditions under which this might occur are unclear [1], but it seems\nplausible that this might be triggered if one sibling thread unmaps a page\nand invalidates the shared TLB while another sibling thread is executing\nXRSTOR on the page in question.\n\n__fpu__restore_sig() can execute XRSTOR while the hardware registers\nare preserved on behalf of a different victim task (using the\nfpu_fpregs_owner_ctx mechanism), and, in theory, XRSTOR could fail but\nmodify the registers.\n\nIf this happens, then there is a window in which __fpu__restore_sig()\ncould schedule out and the victim task could schedule back in without\nreloading its own FPU registers. This would result in part of the FPU\nstate that __fpu__restore_sig() was attempting to load leaking into the\nvictim task's user-visible state.\n\nInvalidate preserved FPU registers on XRSTOR failure to prevent this\nsituation from corrupting any state.\n\n[1] Frequent readers of the errata lists might imagine \"complex\n    microarchitectural conditions\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/002665dcba4bbec8c82f0aeb4bd3f44334ed2c14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7748e021b9fb7739e3cb88449296539de0b6817","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8778e393afa421f1f117471144f8ce6deb6953a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47227","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:11.900","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/fpu: Prevent state corruption in __fpu__restore_sig()\n\nThe non-compacted slowpath uses __copy_from_user() and copies the entire\nuser buffer into the kernel buffer, verbatim.  This means that the kernel\nbuffer may now contain entirely invalid state on which XRSTOR will #GP.\nvalidate_user_xstate_header() can detect some of that corruption, but that\nleaves the onus on callers to clear the buffer.\n\nPrior to XSAVES support, it was possible just to reinitialize the buffer,\ncompletely, but with supervisor states that is not longer possible as the\nbuffer clearing code split got it backwards. Fixing that is possible but\nnot corrupting the state in the first place is more robust.\n\nAvoid corruption of the kernel XSAVE buffer by using copy_user_to_xstate()\nwhich validates the XSAVE header contents before copying the actual states\nto the kernel. copy_user_to_xstate() was previously only called for\ncompacted-format kernel buffers, but it works for both compacted and\nnon-compacted forms.\n\nUsing it for the non-compacted form is slower because of multiple\n__copy_from_user() operations, but that cost is less important than robust\ncode in an already slow path.\n\n[ Changelog polished by Dave Hansen ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/076f732b16a5bf842686e1b43ab6021a2d98233e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/484cea4f362e1eeb5c869abbfb5f90eae6421b38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec25ea1f3f05d6f8ee51d1277efea986eafd4f2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47228","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.250","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/ioremap: Map EFI-reserved memory as encrypted for SEV\n\nSome drivers require memory that is marked as EFI boot services\ndata. In order for this memory to not be re-used by the kernel\nafter ExitBootServices(), efi_mem_reserve() is used to preserve it\nby inserting a new EFI memory descriptor and marking it with the\nEFI_MEMORY_RUNTIME attribute.\n\nUnder SEV, memory marked with the EFI_MEMORY_RUNTIME attribute needs to\nbe mapped encrypted by Linux, otherwise the kernel might crash at boot\nlike below:\n\n  EFI Variables Facility v0.08 2004-May-17\n  general protection fault, probably for non-canonical address 0x3597688770a868b2: 0000 [#1] SMP NOPTI\n  CPU: 13 PID: 1 Comm: swapper\/0 Not tainted 5.12.4-2-default #1 openSUSE Tumbleweed\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02\/06\/2015\n  RIP: 0010:efi_mokvar_entry_next\n  [...]\n  Call Trace:\n   efi_mokvar_sysfs_init\n   ? efi_mokvar_table_init\n   do_one_initcall\n   ? __kmalloc\n   kernel_init_freeable\n   ? rest_init\n   kernel_init\n   ret_from_fork\n\nExpand the __ioremap_check_other() function to additionally check for\nthis other type of boot data reserved at runtime and indicate that it\nshould be mapped encrypted for an SEV guest.\n\n [ bp: Massage commit message. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/208bb686e7fa7fff16e8fa78ff0db34aa9acdbd7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d651ee9c71bb12fc0c8eb2786b66cbe5aa3e43b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7a05aba39f733ec337c5b952e112dd2dc4fc404","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47229","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.323","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: aardvark: Fix kernel panic during PIO transfer\n\nTrying to start a new PIO transfer by writing value 0 in PIO_START register\nwhen previous transfer has not yet completed (which is indicated by value 1\nin PIO_START) causes an External Abort on CPU, which results in kernel\npanic:\n\n    SError Interrupt on CPU0, code 0xbf000002 -- SError\n    Kernel panic - not syncing: Asynchronous SError Interrupt\n\nTo prevent kernel panic, it is required to reject a new PIO transfer when\nprevious one has not finished yet.\n\nIf previous PIO transfer is not finished yet, the kernel may issue a new\nPIO request only if the previous PIO transfer timed out.\n\nIn the past the root cause of this issue was incorrectly identified (as it\noften happens during link retraining or after link down event) and special\nhack was implemented in Trusted Firmware to catch all SError events in EL3,\nto ignore errors with code 0xbf000002 and not forwarding any other errors\nto kernel and instead throw panic from EL3 Trusted Firmware handler.\n\nLinks to discussion and patches about this issue:\nhttps:\/\/git.trustedfirmware.org\/TF-A\/trusted-firmware-a.git\/commit\/?id=3c7dcdac5c50\nhttps:\/\/lore.kernel.org\/linux-pci\/20190316161243.29517-1-repk@triplefau.lt\/\nhttps:\/\/lore.kernel.org\/linux-pci\/971be151d24312cc533989a64bd454b4@www.loen.fr\/\nhttps:\/\/review.trustedfirmware.org\/c\/TF-A\/trusted-firmware-a\/+\/1541\n\nBut the real cause was the fact that during link retraining or after link\ndown event the PIO transfer may take longer time, up to the 1.44s until it\ntimes out. This increased probability that a new PIO transfer would be\nissued by kernel while previous one has not finished yet.\n\nAfter applying this change into the kernel, it is possible to revert the\nmentioned TF-A hack and SError events do not have to be caught in TF-A EL3."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a1dbc4473974867fe8c5f195c17b341c8e82867","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d213a4ddf49a860be6e795482c17f87e0c82b2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/400e6b1860c8be61388d0b77814c53260f96e17a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c90f90a91d75c3c73dd633827c90e8746d9f54d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b00a9aaa4be20ad6e3311fb78a485eae0899e89a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f18139966d072dab8e4398c95ce955a9742e04f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47230","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.400","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Immediately reset the MMU context when the SMM flag is cleared\n\nImmediately reset the MMU context when the vCPU's SMM flag is cleared so\nthat the SMM flag in the MMU role is always synchronized with the vCPU's\nflag.  If RSM fails (which isn't correctly emulated), KVM will bail\nwithout calling post_leave_smm() and leave the MMU in a bad state.\n\nThe bad MMU role can lead to a NULL pointer dereference when grabbing a\nshadow page's rmap for a page fault as the initial lookups for the gfn\nwill happen with the vCPU's SMM flag (=0), whereas the rmap lookup will\nuse the shadow page's SMM flag, which comes from the MMU (=1).  SMM has\nan entirely different set of memslots, and so the initial lookup can find\na memslot (SMM=0) and then explode on the rmap memslot lookup (SMM=1).\n\n  general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN\n  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n  CPU: 1 PID: 8410 Comm: syz-executor382 Not tainted 5.13.0-rc5-syzkaller #0\n  Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\n  RIP: 0010:__gfn_to_rmap arch\/x86\/kvm\/mmu\/mmu.c:935 [inline]\n  RIP: 0010:gfn_to_rmap+0x2b0\/0x4d0 arch\/x86\/kvm\/mmu\/mmu.c:947\n  Code: <42> 80 3c 20 00 74 08 4c 89 ff e8 f1 79 a9 00 4c 89 fb 4d 8b 37 44\n  RSP: 0018:ffffc90000ffef98 EFLAGS: 00010246\n  RAX: 0000000000000000 RBX: ffff888015b9f414 RCX: ffff888019669c40\n  RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001\n  RBP: 0000000000000001 R08: ffffffff811d9cdb R09: ffffed10065a6002\n  R10: ffffed10065a6002 R11: 0000000000000000 R12: dffffc0000000000\n  R13: 0000000000000003 R14: 0000000000000001 R15: 0000000000000000\n  FS:  000000000124b300(0000) GS:ffff8880b9b00000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000000000000 CR3: 0000000028e31000 CR4: 00000000001526e0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   rmap_add arch\/x86\/kvm\/mmu\/mmu.c:965 [inline]\n   mmu_set_spte+0x862\/0xe60 arch\/x86\/kvm\/mmu\/mmu.c:2604\n   __direct_map arch\/x86\/kvm\/mmu\/mmu.c:2862 [inline]\n   direct_page_fault+0x1f74\/0x2b70 arch\/x86\/kvm\/mmu\/mmu.c:3769\n   kvm_mmu_do_page_fault arch\/x86\/kvm\/mmu.h:124 [inline]\n   kvm_mmu_page_fault+0x199\/0x1440 arch\/x86\/kvm\/mmu\/mmu.c:5065\n   vmx_handle_exit+0x26\/0x160 arch\/x86\/kvm\/vmx\/vmx.c:6122\n   vcpu_enter_guest+0x3bdd\/0x9630 arch\/x86\/kvm\/x86.c:9428\n   vcpu_run+0x416\/0xc20 arch\/x86\/kvm\/x86.c:9494\n   kvm_arch_vcpu_ioctl_run+0x4e8\/0xa40 arch\/x86\/kvm\/x86.c:9722\n   kvm_vcpu_ioctl+0x70f\/0xbb0 arch\/x86\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:3460\n   vfs_ioctl fs\/ioctl.c:51 [inline]\n   __do_sys_ioctl fs\/ioctl.c:1069 [inline]\n   __se_sys_ioctl+0xfb\/0x170 fs\/ioctl.c:1055\n   do_syscall_64+0x3f\/0xb0 arch\/x86\/entry\/common.c:47\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n  RIP: 0033:0x440ce9"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/669a8866e468fd020d34eb00e08cb41d3774b71b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/78fcb2c91adfec8ce3a2ba6b4d0dda89f2f4a7c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbb425f62df9df7abee4b3f068f7ed6ffc3561e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df9a40cfb3be2cbeb1c17bb67c59251ba16630f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47231","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.477","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: mcba_usb: fix memory leak in mcba_usb\n\nSyzbot reported memory leak in SocketCAN driver for Microchip CAN BUS\nAnalyzer Tool. The problem was in unfreed usb_coherent.\n\nIn mcba_usb_start() 20 coherent buffers are allocated and there is\nnothing, that frees them:\n\n1) In callback function the urb is resubmitted and that's all\n2) In disconnect function urbs are simply killed, but URB_FREE_BUFFER\n   is not set (see mcba_usb_start) and this flag cannot be used with\n   coherent buffers.\n\nFail log:\n| [ 1354.053291][ T8413] mcba_usb 1-1:0.0 can0: device disconnected\n| [ 1367.059384][ T8420] kmemleak: 20 new suspected memory leaks (see \/sys\/kernel\/debug\/kmem)\n\nSo, all allocated buffers should be freed with usb_free_coherent()\nexplicitly\n\nNOTE:\nThe same pattern for allocating and freeing coherent buffers\nis used in drivers\/net\/can\/usb\/kvaser_usb\/kvaser_usb_core.c"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6bd3d80d1f019cefa7011056c54b323f1d8b8e83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f87c0e21ad20dd3d22108e33db1c552dfa352a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89df95ce32be204eef2e7d4b2f6fb552fb191a68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91c02557174be7f72e46ed7311e3bea1939840b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a115198caaab6d663bef75823a3c5f0802306d60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0760a4ef85697bc756d06eae17ae27f3f055401","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47232","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.557","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: j1939: fix Use-after-Free, hold skb ref while in use\n\nThis patch fixes a Use-after-Free found by the syzbot.\n\nThe problem is that a skb is taken from the per-session skb queue,\nwithout incrementing the ref count. This leads to a Use-after-Free if\nthe skb is taken concurrently from the session queue due to a CTS."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1071065eeb33d32b7d98c2ce7591881ae7381705","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2030043e616cab40f510299f09b636285e0a3678","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22cba878abf646cd3a02ee7c8c2cef7afe66a256","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/509ab6bfdd0c76daebbad0f0af07da712116de22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47233","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.630","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: rt4801: Fix NULL pointer dereference if priv->enable_gpios is NULL\n\ndevm_gpiod_get_array_optional may return NULL if no GPIO was assigned."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ba8a26a7ce8617f9f3d6230de34b2302df086b41","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb2381cbecb81a8893b2d1e1af29bc2e5531df27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc68f0c9e4a001e02376fe87f4bdcacadb27e8a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47234","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.710","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: phy-mtk-tphy: Fix some resource leaks in mtk_phy_init()\n\nUse clk_disable_unprepare() in the error path of mtk_phy_init() to fix\nsome resource leaks."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6472955af5e88b5489b6d78316082ad56ea3e489","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a17907946232d01aa2ec109da5f93b8d31dd425","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaac9a1bd370338ce372669eb9a6059d16b929aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47235","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.777","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: fix potential use-after-free in ec_bhf_remove\n\nstatic void ec_bhf_remove(struct pci_dev *dev)\n{\n...\n\tstruct ec_bhf_priv *priv = netdev_priv(net_dev);\n\n\tunregister_netdev(net_dev);\n\tfree_netdev(net_dev);\n\n\tpci_iounmap(dev, priv->dma_io);\n\tpci_iounmap(dev, priv->io);\n...\n}\n\npriv is netdev private data, but it is used\nafter free_netdev(). It can cause use-after-free when accessing priv\npointer. So, fix it by moving free_netdev() after pci_iounmap()\ncalls."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0260916843cc74f3906acf8b6f256693e01530a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19f88ca68ccf8771276a606765239b167654f84a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1cafc540b7bf1b6a5a77dc000205fe337ef6eba6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/95deeb29d831e2fae608439e243e7a520611e7ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cca0c2d70149160407bda9a9446ce0c29b6e6c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1ad283755095a4b9d1431aeb357d7df1a33d3bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d11d79e52ba080ee567cb7d7eb42a5ade60a8130","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db2bc3cfd2bc01621014d4f17cdfc74611f339c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47236","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.857","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: cdc_eem: fix tx fixup skb leak\n\nwhen usbnet transmit a skb, eem fixup it in eem_tx_fixup(),\nif skb_copy_expand() failed, it return NULL,\nusbnet_start_xmit() will have no chance to free original skb.\n\nfix it by free orginal skb in eem_tx_fixup() first,\nthen check skb clone status, if failed, return NULL to usbnet."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05b2b9f7d24b5663d9b47427fe1555bdafd3ea02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/14184ec5c958b589ba934da7363a2877879204df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bcacd6088d61c0ac6a990d87975600a81f3247e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81de2ed06df8b5451e050fe6a318af3263dbff3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f7a9fc9d094c0c4a66f2ad7c37b1dbe9e78f88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b26fdf1b32f91c7a3bc743384b4a298ab53ad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f12554b0ff639e74612cc01b3b4a049e098d2d65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4e6a7f19c82f39b1803e91c54718f0d7143767d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47237","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:12.930","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hamradio: fix memory leak in mkiss_close\n\nMy local syzbot instance hit memory leak in\nmkiss_open()[1]. The problem was in missing\nfree_netdev() in mkiss_close().\n\nIn mkiss_open() netdevice is allocated and then\nregistered, but in mkiss_close() netdevice was\nonly unregistered, but not freed.\n\nFail log:\n\nBUG: memory leak\nunreferenced object 0xffff8880281ba000 (size 4096):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    61 78 30 00 00 00 00 00 00 00 00 00 00 00 00 00  ax0.............\n    00 27 fa 2a 80 88 ff ff 00 00 00 00 00 00 00 00  .'.*............\n  backtrace:\n    [<ffffffff81a27201>] kvmalloc_node+0x61\/0xf0\n    [<ffffffff8706e7e8>] alloc_netdev_mqs+0x98\/0xe80\n    [<ffffffff84e64192>] mkiss_open+0xb2\/0x6f0 [1]\n    [<ffffffff842355db>] tty_ldisc_open+0x9b\/0x110\n    [<ffffffff84236488>] tty_set_ldisc+0x2e8\/0x670\n    [<ffffffff8421f7f3>] tty_ioctl+0xda3\/0x1440\n    [<ffffffff81c9f273>] __x64_sys_ioctl+0x193\/0x200\n    [<ffffffff8911263a>] do_syscall_64+0x3a\/0xb0\n    [<ffffffff89200068>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nBUG: memory leak\nunreferenced object 0xffff8880141a9a00 (size 96):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    e8 a2 1b 28 80 88 ff ff e8 a2 1b 28 80 88 ff ff  ...(.......(....\n    98 92 9c aa b0 40 02 00 00 00 00 00 00 00 00 00  .....@..........\n  backtrace:\n    [<ffffffff8709f68b>] __hw_addr_create_ex+0x5b\/0x310\n    [<ffffffff8709fb38>] __hw_addr_add_ex+0x1f8\/0x2b0\n    [<ffffffff870a0c7b>] dev_addr_init+0x10b\/0x1f0\n    [<ffffffff8706e88b>] alloc_netdev_mqs+0x13b\/0xe80\n    [<ffffffff84e64192>] mkiss_open+0xb2\/0x6f0 [1]\n    [<ffffffff842355db>] tty_ldisc_open+0x9b\/0x110\n    [<ffffffff84236488>] tty_set_ldisc+0x2e8\/0x670\n    [<ffffffff8421f7f3>] tty_ioctl+0xda3\/0x1440\n    [<ffffffff81c9f273>] __x64_sys_ioctl+0x193\/0x200\n    [<ffffffff8911263a>] do_syscall_64+0x3a\/0xb0\n    [<ffffffff89200068>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nBUG: memory leak\nunreferenced object 0xffff8880219bfc00 (size 512):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    00 a0 1b 28 80 88 ff ff 80 8f b1 8d ff ff ff ff  ...(............\n    80 8f b1 8d ff ff ff ff 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff81a27201>] kvmalloc_node+0x61\/0xf0\n    [<ffffffff8706eec7>] alloc_netdev_mqs+0x777\/0xe80\n    [<ffffffff84e64192>] mkiss_open+0xb2\/0x6f0 [1]\n    [<ffffffff842355db>] tty_ldisc_open+0x9b\/0x110\n    [<ffffffff84236488>] tty_set_ldisc+0x2e8\/0x670\n    [<ffffffff8421f7f3>] tty_ioctl+0xda3\/0x1440\n    [<ffffffff81c9f273>] __x64_sys_ioctl+0x193\/0x200\n    [<ffffffff8911263a>] do_syscall_64+0x3a\/0xb0\n    [<ffffffff89200068>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nBUG: memory leak\nunreferenced object 0xffff888029b2b200 (size 256):\n  comm \"syz-executor.1\", pid 11443, jiffies 4295046091 (age 17.660s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace:\n    [<ffffffff81a27201>] kvmalloc_node+0x61\/0xf0\n    [<ffffffff8706f062>] alloc_netdev_mqs+0x912\/0xe80\n    [<ffffffff84e64192>] mkiss_open+0xb2\/0x6f0 [1]\n    [<ffffffff842355db>] tty_ldisc_open+0x9b\/0x110\n    [<ffffffff84236488>] tty_set_ldisc+0x2e8\/0x670\n    [<ffffffff8421f7f3>] tty_ioctl+0xda3\/0x1440\n    [<ffffffff81c9f273>] __x64_sys_ioctl+0x193\/0x200\n    [<ffffffff8911263a>] do_syscall_64+0x3a\/0xb0\n    [<ffffffff89200068>] entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/290b0b6432e2599021db0b8d6046f756d931c29f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3942d0f9ace1a95a74930b5b4fc0e5005c62b37b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/765a8a04f828db7222b36a42b1031f576bfe95c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7edcc682301492380fbdd604b4516af5ae667a13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a49cbb762ef20655f5c91abdc13658b0af5e159d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c16c4716a1b5ba4f83c7e00da457cba06761f119","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c634ba0b4159838ff45a60d3a0ace3b4118077a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4de2b43d13b7cf3ced9310e371b90c836dbd7cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47238","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.017","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv4: fix memory leak in ip_mc_add1_src\n\nBUG: memory leak\nunreferenced object 0xffff888101bc4c00 (size 32):\n  comm \"syz-executor527\", pid 360, jiffies 4294807421 (age 19.329s)\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n    01 00 00 00 00 00 00 00 ac 14 14 bb 00 00 02 00 ................\n  backtrace:\n    [<00000000f17c5244>] kmalloc include\/linux\/slab.h:558 [inline]\n    [<00000000f17c5244>] kzalloc include\/linux\/slab.h:688 [inline]\n    [<00000000f17c5244>] ip_mc_add1_src net\/ipv4\/igmp.c:1971 [inline]\n    [<00000000f17c5244>] ip_mc_add_src+0x95f\/0xdb0 net\/ipv4\/igmp.c:2095\n    [<000000001cb99709>] ip_mc_source+0x84c\/0xea0 net\/ipv4\/igmp.c:2416\n    [<0000000052cf19ed>] do_ip_setsockopt net\/ipv4\/ip_sockglue.c:1294 [inline]\n    [<0000000052cf19ed>] ip_setsockopt+0x114b\/0x30c0 net\/ipv4\/ip_sockglue.c:1423\n    [<00000000477edfbc>] raw_setsockopt+0x13d\/0x170 net\/ipv4\/raw.c:857\n    [<00000000e75ca9bb>] __sys_setsockopt+0x158\/0x270 net\/socket.c:2117\n    [<00000000bdb993a8>] __do_sys_setsockopt net\/socket.c:2128 [inline]\n    [<00000000bdb993a8>] __se_sys_setsockopt net\/socket.c:2125 [inline]\n    [<00000000bdb993a8>] __x64_sys_setsockopt+0xba\/0x150 net\/socket.c:2125\n    [<000000006a1ffdbd>] do_syscall_64+0x40\/0x80 arch\/x86\/entry\/common.c:47\n    [<00000000b11467c4>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nIn commit 24803f38a5c0 (\"igmp: do not remove igmp souce list info when set\nlink down\"), the ip_mc_clear_src() in ip_mc_destroy_dev() was removed,\nbecause it was also called in igmpv3_clear_delrec().\n\nRough callgraph:\n\ninetdev_destroy\n-> ip_mc_destroy_dev\n     -> igmpv3_clear_delrec\n        -> ip_mc_clear_src\n-> RCU_INIT_POINTER(dev->ip_ptr, NULL)\n\nHowever, ip_mc_clear_src() called in igmpv3_clear_delrec() doesn't\nrelease in_dev->mc_list->sources. And RCU_INIT_POINTER() assigns the\nNULL to dev->ip_ptr. As a result, in_dev cannot be obtained through\ninetdev_by_index() and then in_dev->mc_list->sources cannot be released\nby ip_mc_del1_src() in the sock_close. Rough call sequence goes like:\n\nsock_close\n-> __sock_release\n   -> inet_release\n      -> ip_mc_drop_socket\n         -> inetdev_by_index\n         -> ip_mc_leave_src\n            -> ip_mc_del_src\n               -> ip_mc_del1_src\n\nSo we still need to call ip_mc_clear_src() in ip_mc_destroy_dev() to free\nin_dev->mc_list->sources."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dc13e75507faa17ac9f7562b4ef7bf8fcd78422","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e28018b5c83d5073f74a6fb72eabe8370b2f501","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3dd2aeac2e9624cff9fa634710837e4f2e352758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6cff57eea3347f79f1867cc53e1093b6614138d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77de6ee73f54a9a89c0afa0bf4c53b239aa9953a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac31cc837cafb57a271babad8ccffbf733caa076","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8e2973029b8b2ce477b564824431f3385c77083","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47239","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.100","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: usb: fix possible use-after-free in smsc75xx_bind\n\nThe commit 46a8b29c6306 (\"net: usb: fix memory leak in smsc75xx_bind\")\nfails to clean up the work scheduled in smsc75xx_reset->\nsmsc75xx_set_multicast, which leads to use-after-free if the work is\nscheduled to start after the deallocation. In addition, this patch\nalso removes a dangling pointer - dev->data[0].\n\nThis patch calls cancel_work_sync to cancel the scheduled work and set\nthe dangling pointer to NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14616c372a7be01a2fb8c56c9d8debd232b9e43d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fc8300c9cfa5167fcb5b1a2a07db6f53e82f59b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4252bf6c2b245f47011098113d405ffad6ad5d5b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56b786d86694e079d8aad9b314e015cd4ac02a3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/570a52cf3e01d19f7fd1a251dfc52b0cd86c13cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64160d1741a3de5204d1a822e058e0b4cc526504","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cc8b2e05fcea6edd022d26e82091d781af8fd9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4e3be2e7742863e454ce31faf8fd0109c00050b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47240","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.177","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qrtr: fix OOB Read in qrtr_endpoint_post\n\nSyzbot reported slab-out-of-bounds Read in\nqrtr_endpoint_post. The problem was in wrong\n_size_ type:\n\n\tif (len != ALIGN(size, 4) + hdrlen)\n\t\tgoto err;\n\nIf size from qrtr_hdr is 4294967293 (0xfffffffd), the result of\nALIGN(size, 4) will be 0. In case of len == hdrlen and size == 4294967293\nin header this check won't fail and\n\n\tskb_put_data(skb, data + hdrlen, size);\n\nwill read out of bound from data, which is hdrlen allocated block."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19892ab9c9d838e2e5a7744d36e4bb8b7c3292fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26b8d10703a9be45d6097946b2b4011f7dd2c56f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/960b08dd36de1e341e3eb43d1c547513e338f4f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad9d24c9429e2159d1e279dc3a83191ccb4daf1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8111c0d7ed42ede41a3d0d393b104de0730a8a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47241","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.250","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: strset: fix message length calculation\n\nOuter nest for ETHTOOL_A_STRSET_STRINGSETS is not accounted for.\nThis may result in ETHTOOL_MSG_STRSET_GET producing a warning like:\n\n    calculated message payload length (684) not sufficient\n    WARNING: CPU: 0 PID: 30967 at net\/ethtool\/netlink.c:369 ethnl_default_doit+0x87a\/0xa20\n\nand a splat.\n\nAs usually with such warnings three conditions must be met for the warning\nto trigger:\n - there must be no skb size rounding up (e.g. reply_size of 684);\n - string set must be per-device (so that the header gets populated);\n - the device name must be at least 12 characters long.\n\nall in all with current user space it looks like reading priv flags\nis the only place this could potentially happen. Or with syzbot :)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/cfc7f0e70d649e6d2233fba0d9390b525677d971","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e175aef902697826d344ce3a12189329848fe898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb3a948143688e14e2cfd2a2812877923d0e5e92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47242","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.327","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix soft lookup in subflow_error_report()\n\nMaxim reported a soft lookup in subflow_error_report():\n\n watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [swapper\/0:0]\n RIP: 0010:native_queued_spin_lock_slowpath\n RSP: 0018:ffffa859c0003bc0 EFLAGS: 00000202\n RAX: 0000000000000101 RBX: 0000000000000001 RCX: 0000000000000000\n RDX: ffff9195c2772d88 RSI: 0000000000000000 RDI: ffff9195c2772d88\n RBP: ffff9195c2772d00 R08: 00000000000067b0 R09: c6e31da9eb1e44f4\n R10: ffff9195ef379700 R11: ffff9195edb50710 R12: ffff9195c2772d88\n R13: ffff9195f500e3d0 R14: ffff9195ef379700 R15: ffff9195ef379700\n FS:  0000000000000000(0000) GS:ffff91961f400000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 000000c000407000 CR3: 0000000002988000 CR4: 00000000000006f0\n Call Trace:\n  <IRQ>\n _raw_spin_lock_bh\n subflow_error_report\n mptcp_subflow_data_available\n __mptcp_move_skbs_from_subflow\n mptcp_data_ready\n tcp_data_queue\n tcp_rcv_established\n tcp_v4_do_rcv\n tcp_v4_rcv\n ip_protocol_deliver_rcu\n ip_local_deliver_finish\n __netif_receive_skb_one_core\n netif_receive_skb\n rtl8139_poll 8139too\n __napi_poll\n net_rx_action\n __do_softirq\n __irq_exit_rcu\n common_interrupt\n  <\/IRQ>\n\nThe calling function - mptcp_subflow_data_available() - can be invoked\nfrom different contexts:\n- plain ssk socket lock\n- ssk socket lock + mptcp_data_lock\n- ssk socket lock + mptcp_data_lock + msk socket lock.\n\nSince subflow_error_report() tries to acquire the mptcp_data_lock, the\nlatter two call chains will cause soft lookup.\n\nThis change addresses the issue moving the error reporting call to\nouter functions, where the held locks list is known and the we can\nacquire only the needed one."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27ef25c72373222aaa5fe7b5cd890ae9cfb89a8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/499ada5073361c631f2a3c4a8aed44d53b6f82ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47243","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.403","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsch_cake: Fix out of bounds when parsing TCP options and header\n\nThe TCP option parser in cake qdisc (cake_get_tcpopt and\ncake_tcph_may_drop) could read one byte out of bounds. When the length\nis 1, the execution flow gets into the loop, reads one byte of the\nopcode, and if the opcode is neither TCPOPT_EOL nor TCPOPT_NOP, it reads\none more byte, which exceeds the length of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\").\n\nv2 changes:\n\nAdded doff validation in cake_get_tcphdr to avoid parsing garbage as TCP\nheader. Although it wasn't strictly an out-of-bounds access (memory was\nallocated), garbage values could be read where CAKE expected the TCP\nheader if doff was smaller than 5."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3371392c60e2685af30bd4547badd880f5df2b3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b491dd593d582ceeb27aa617600712a6bd14246","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4cefa061fc63f4d2dff5ab4083f43857cd7a2335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/595897ef118d6fe66690c4fc5b572028c9da95b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba91c49dedbde758ba0b72f57ac90b06ddf8e548","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47244","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.477","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: Fix out of bounds when parsing TCP options\n\nThe TCP option parser in mptcp (mptcp_get_options) could read one byte\nout of bounds. When the length is 1, the execution flow gets into the\nloop, reads one byte of the opcode, and if the opcode is neither\nTCPOPT_EOL nor TCPOPT_NOP, it reads one more byte, which exceeds the\nlength of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\")."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07718be265680dcf496347d475ce1a5442f55ad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73eeba71dc9932970befa009e68272a3d5ec4a58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76e02b8905d0691e89e104a882f3bba7dd0f6037","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47245","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.550","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: synproxy: Fix out of bounds when parsing TCP options\n\nThe TCP option parser in synproxy (synproxy_parse_options) could read\none byte out of bounds. When the length is 1, the execution flow gets\ninto the loop, reads one byte of the opcode, and if the opcode is\nneither TCPOPT_EOL nor TCPOPT_NOP, it reads one more byte, which exceeds\nthe length of 1.\n\nThis fix is inspired by commit 9609dad263f8 (\"ipv4: tcp_input: fix stack\nout of bounds when parsing TCP options.\").\n\nv2 changes:\n\nAdded an early return when length < 0 to avoid calling\nskb_header_pointer with negative length."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/576c1526b4d83c44ad7b673cb841f36cbc6cb6c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fc177ab759418c9537433e63301096e733fb915","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/674b5f0c6a4fc5d3abce877048290cea6091fcb1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6defc77d48eff74075b80ad5925061b2fc010d98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d9a9a1a88a3da574e019b4de756bc73337b3b0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9cdf299ba4e153b5e56187648420de22c6216f02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1eb98cfeafdd85537e7e3cefe93ca9bfbcc3ea8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f648089337cb8ed40b2bb96e244f72b9d97dc96b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47246","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.623","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix page reclaim for dead peer hairpin\n\nWhen adding a hairpin flow, a firmware-side send queue is created for\nthe peer net device, which claims some host memory pages for its\ninternal ring buffer. If the peer net device is removed\/unbound before\nthe hairpin flow is deleted, then the send queue is not destroyed which\nleads to a stack trace on pci device remove:\n\n[ 748.005230] mlx5_core 0000:08:00.2: wait_func:1094:(pid 12985): MANAGE_PAGES(0x108) timeout. Will cause a leak of a command resource\n[ 748.005231] mlx5_core 0000:08:00.2: reclaim_pages:514:(pid 12985): failed reclaiming pages: err -110\n[ 748.001835] mlx5_core 0000:08:00.2: mlx5_reclaim_root_pages:653:(pid 12985): failed reclaiming pages (-110) for func id 0x0\n[ 748.002171] ------------[ cut here ]------------\n[ 748.001177] FW pages counter is 4 after reclaiming all pages\n[ 748.001186] WARNING: CPU: 1 PID: 12985 at drivers\/net\/ethernet\/mellanox\/mlx5\/core\/pagealloc.c:685 mlx5_reclaim_startup_pages+0x34b\/0x460 [mlx5_core]                      [  +0.002771] Modules linked in: cls_flower mlx5_ib mlx5_core ptp pps_core act_mirred sch_ingress openvswitch nsh xt_conntrack xt_MASQUERADE nf_conntrack_netlink nfnetlink xt_addrtype iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 br_netfilter rpcrdma rdma_ucm ib_iser libiscsi scsi_transport_iscsi rdma_cm ib_umad ib_ipoib iw_cm ib_cm ib_uverbs ib_core overlay fuse [last unloaded: pps_core]\n[ 748.007225] CPU: 1 PID: 12985 Comm: tee Not tainted 5.12.0+ #1\n[ 748.001376] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n[ 748.002315] RIP: 0010:mlx5_reclaim_startup_pages+0x34b\/0x460 [mlx5_core]\n[ 748.001679] Code: 28 00 00 00 0f 85 22 01 00 00 48 81 c4 b0 00 00 00 31 c0 5b 5d 41 5c 41 5d 41 5e 41 5f c3 48 c7 c7 40 cc 19 a1 e8 9f 71 0e e2 <0f> 0b e9 30 ff ff ff 48 c7 c7 a0 cc 19 a1 e8 8c 71 0e e2 0f 0b e9\n[ 748.003781] RSP: 0018:ffff88815220faf8 EFLAGS: 00010286\n[ 748.001149] RAX: 0000000000000000 RBX: ffff8881b4900280 RCX: 0000000000000000\n[ 748.001445] RDX: 0000000000000027 RSI: 0000000000000004 RDI: ffffed102a441f51\n[ 748.001614] RBP: 00000000000032b9 R08: 0000000000000001 R09: ffffed1054a15ee8\n[ 748.001446] R10: ffff8882a50af73b R11: ffffed1054a15ee7 R12: fffffbfff07c1e30\n[ 748.001447] R13: dffffc0000000000 R14: ffff8881b492cba8 R15: 0000000000000000\n[ 748.001429] FS:  00007f58bd08b580(0000) GS:ffff8882a5080000(0000) knlGS:0000000000000000\n[ 748.001695] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 748.001309] CR2: 000055a026351740 CR3: 00000001d3b48006 CR4: 0000000000370ea0\n[ 748.001506] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 748.001483] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 748.001654] Call Trace:\n[ 748.000576]  ? mlx5_satisfy_startup_pages+0x290\/0x290 [mlx5_core]\n[ 748.001416]  ? mlx5_cmd_teardown_hca+0xa2\/0xd0 [mlx5_core]\n[ 748.001354]  ? mlx5_cmd_init_hca+0x280\/0x280 [mlx5_core]\n[ 748.001203]  mlx5_function_teardown+0x30\/0x60 [mlx5_core]\n[ 748.001275]  mlx5_uninit_one+0xa7\/0xc0 [mlx5_core]\n[ 748.001200]  remove_one+0x5f\/0xc0 [mlx5_core]\n[ 748.001075]  pci_device_remove+0x9f\/0x1d0\n[ 748.000833]  device_release_driver_internal+0x1e0\/0x490\n[ 748.001207]  unbind_store+0x19f\/0x200\n[ 748.000942]  ? sysfs_file_ops+0x170\/0x170\n[ 748.001000]  kernfs_fop_write_iter+0x2bc\/0x450\n[ 748.000970]  new_sync_write+0x373\/0x610\n[ 748.001124]  ? new_sync_read+0x600\/0x600\n[ 748.001057]  ? lock_acquire+0x4d6\/0x700\n[ 748.000908]  ? lockdep_hardirqs_on_prepare+0x400\/0x400\n[ 748.001126]  ? fd_install+0x1c9\/0x4d0\n[ 748.000951]  vfs_write+0x4d0\/0x800\n[ 748.000804]  ksys_write+0xf9\/0x1d0\n[ 748.000868]  ? __x64_sys_read+0xb0\/0xb0\n[ 748.000811]  ? filp_open+0x50\/0x50\n[ 748.000919]  ? syscall_enter_from_user_mode+0x1d\/0x50\n[ 748.001223]  do_syscall_64+0x3f\/0x80\n[ 748.000892]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[ 748.00\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4b16118665e94c90a3e84a5190486fd0e4eedd74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3e5fd9314dfc4314a9567cde96e1aef83a7458a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b374c1304f6d3d4752ad1412427b7bf02bb1fd61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be7f3f401d224e1efe8112b2fa8b837eeb8c5e52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47247","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.703","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Fix use-after-free of encap entry in neigh update handler\n\nFunction mlx5e_rep_neigh_update() wasn't updated to accommodate rtnl lock\nremoval from TC filter update path and properly handle concurrent encap\nentry insertion\/deletion which can lead to following use-after-free:\n\n [23827.464923] ==================================================================\n [23827.469446] BUG: KASAN: use-after-free in mlx5e_encap_take+0x72\/0x140 [mlx5_core]\n [23827.470971] Read of size 4 at addr ffff8881d132228c by task kworker\/u20:6\/21635\n [23827.472251]\n [23827.472615] CPU: 9 PID: 21635 Comm: kworker\/u20:6 Not tainted 5.13.0-rc3+ #5\n [23827.473788] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n [23827.475639] Workqueue: mlx5e mlx5e_rep_neigh_update [mlx5_core]\n [23827.476731] Call Trace:\n [23827.477260]  dump_stack+0xbb\/0x107\n [23827.477906]  print_address_description.constprop.0+0x18\/0x140\n [23827.478896]  ? mlx5e_encap_take+0x72\/0x140 [mlx5_core]\n [23827.479879]  ? mlx5e_encap_take+0x72\/0x140 [mlx5_core]\n [23827.480905]  kasan_report.cold+0x7c\/0xd8\n [23827.481701]  ? mlx5e_encap_take+0x72\/0x140 [mlx5_core]\n [23827.482744]  kasan_check_range+0x145\/0x1a0\n [23827.493112]  mlx5e_encap_take+0x72\/0x140 [mlx5_core]\n [23827.494054]  ? mlx5e_tc_tun_encap_info_equal_generic+0x140\/0x140 [mlx5_core]\n [23827.495296]  mlx5e_rep_neigh_update+0x41e\/0x5e0 [mlx5_core]\n [23827.496338]  ? mlx5e_rep_neigh_entry_release+0xb80\/0xb80 [mlx5_core]\n [23827.497486]  ? read_word_at_a_time+0xe\/0x20\n [23827.498250]  ? strscpy+0xa0\/0x2a0\n [23827.498889]  process_one_work+0x8ac\/0x14e0\n [23827.499638]  ? lockdep_hardirqs_on_prepare+0x400\/0x400\n [23827.500537]  ? pwq_dec_nr_in_flight+0x2c0\/0x2c0\n [23827.501359]  ? rwlock_bug.part.0+0x90\/0x90\n [23827.502116]  worker_thread+0x53b\/0x1220\n [23827.502831]  ? process_one_work+0x14e0\/0x14e0\n [23827.503627]  kthread+0x328\/0x3f0\n [23827.504254]  ? _raw_spin_unlock_irq+0x24\/0x40\n [23827.505065]  ? __kthread_bind_mask+0x90\/0x90\n [23827.505912]  ret_from_fork+0x1f\/0x30\n [23827.506621]\n [23827.506987] Allocated by task 28248:\n [23827.507694]  kasan_save_stack+0x1b\/0x40\n [23827.508476]  __kasan_kmalloc+0x7c\/0x90\n [23827.509197]  mlx5e_attach_encap+0xde1\/0x1d40 [mlx5_core]\n [23827.510194]  mlx5e_tc_add_fdb_flow+0x397\/0xc40 [mlx5_core]\n [23827.511218]  __mlx5e_add_fdb_flow+0x519\/0xb30 [mlx5_core]\n [23827.512234]  mlx5e_configure_flower+0x191c\/0x4870 [mlx5_core]\n [23827.513298]  tc_setup_cb_add+0x1d5\/0x420\n [23827.514023]  fl_hw_replace_filter+0x382\/0x6a0 [cls_flower]\n [23827.514975]  fl_change+0x2ceb\/0x4a51 [cls_flower]\n [23827.515821]  tc_new_tfilter+0x89a\/0x2070\n [23827.516548]  rtnetlink_rcv_msg+0x644\/0x8c0\n [23827.517300]  netlink_rcv_skb+0x11d\/0x340\n [23827.518021]  netlink_unicast+0x42b\/0x700\n [23827.518742]  netlink_sendmsg+0x743\/0xc20\n [23827.519467]  sock_sendmsg+0xb2\/0xe0\n [23827.520131]  ____sys_sendmsg+0x590\/0x770\n [23827.520851]  ___sys_sendmsg+0xd8\/0x160\n [23827.521552]  __sys_sendmsg+0xb7\/0x140\n [23827.522238]  do_syscall_64+0x3a\/0x70\n [23827.522907]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n [23827.523797]\n [23827.524163] Freed by task 25948:\n [23827.524780]  kasan_save_stack+0x1b\/0x40\n [23827.525488]  kasan_set_track+0x1c\/0x30\n [23827.526187]  kasan_set_free_info+0x20\/0x30\n [23827.526968]  __kasan_slab_free+0xed\/0x130\n [23827.527709]  slab_free_freelist_hook+0xcf\/0x1d0\n [23827.528528]  kmem_cache_free_bulk+0x33a\/0x6e0\n [23827.529317]  kfree_rcu_work+0x55f\/0xb70\n [23827.530024]  process_one_work+0x8ac\/0x14e0\n [23827.530770]  worker_thread+0x53b\/0x1220\n [23827.531480]  kthread+0x328\/0x3f0\n [23827.532114]  ret_from_fork+0x1f\/0x30\n [23827.532785]\n [23827.533147] Last potentially related work creation:\n [23827.534007]  kasan_save_stack+0x1b\/0x40\n [23827.534710]  kasan_record_aux_stack+0xab\/0xc0\n [23827.535492]  kvfree_call_rcu+0x31\/0x7b0\n [23827.536206]  mlx5e_tc_del\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b6447b72aca571632e71bb73a797118d5ce46a93","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb1a3132ee1ac968316e45d21a48703a6db0b6c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47248","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.780","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudp: fix race between close() and udp_abort()\n\nKaustubh reported and diagnosed a panic in udp_lib_lookup().\nThe root cause is udp_abort() racing with close(). Both\nracing functions acquire the socket lock, but udp{v6}_destroy_sock()\nrelease it before performing destructive actions.\n\nWe can't easily extend the socket lock scope to avoid the race,\ninstead use the SOCK_DEAD flag to prevent udp_abort from doing\nany action when the critical race happens.\n\nDiagnosed-and-tested-by: Kaustubh Pandey <kapandey@codeaurora.org>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f73448041bd0682d4b552cfd314ace66107f1ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a88477c1c85e4baa51e91f2d40f2166235daa56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65310b0aff86980a011c7c7bfa487a333d4ca241","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8729ec8a2238152a4afc212a331a6cd2c61aeeac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0882f68f54f7a8b6308261acee9bd4faab5a69e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8b897c7bcd47f4147d066e22cc01d1026d7640e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3c36c773aed0fef8b1d3d555b43393ec564400f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47249","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.857","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: rds: fix memory leak in rds_recvmsg\n\nSyzbot reported memory leak in rds. The problem\nwas in unputted refcount in case of error.\n\nint rds_recvmsg(struct socket *sock, struct msghdr *msg, size_t size,\n\t\tint msg_flags)\n{\n...\n\n\tif (!rds_next_incoming(rs, &inc)) {\n\t\t...\n\t}\n\nAfter this \"if\" inc refcount incremented and\n\n\tif (rds_cmsg_recv(inc, msg, rs)) {\n\t\tret = -EFAULT;\n\t\tgoto out;\n\t}\n...\nout:\n\treturn ret;\n}\n\nin case of rds_cmsg_recv() fail the refcount won't be\ndecremented. And it's easy to see from ftrace log, that\nrds_inc_addref() don't have rds_inc_put() pair in\nrds_recvmsg() after rds_cmsg_recv()\n\n 1)               |  rds_recvmsg() {\n 1)   3.721 us    |    rds_inc_addref();\n 1)   3.853 us    |    rds_message_inc_copy_to_user();\n 1) + 10.395 us   |    rds_cmsg_recv();\n 1) + 34.260 us   |  }"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06b7cb0194bd1ede0dd27f3a946e7c0279fba44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f79bc8ae81c05eb112a53f981cb2c244ee50d02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2038cd15eacdf7512755c27686822e0052eb9042","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/423c6939758fb3b9cf5abbd1e7792068a5c4ae8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49bfcbfd989a8f1f23e705759a6bb099de2cff9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5946fbf48355f5a8caeff72580c7658da5966b86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c3ec88b03e9e4ca117dcdc4204fd3edcd02084f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b25b60d076164edb3025e85aabd2cf50a5215b91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47250","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:13.930","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv4: fix memory leak in netlbl_cipsov4_add_std\n\nReported by syzkaller:\nBUG: memory leak\nunreferenced object 0xffff888105df7000 (size 64):\ncomm \"syz-executor842\", pid 360, jiffies 4294824824 (age 22.546s)\nhex dump (first 32 bytes):\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\nbacktrace:\n[<00000000e67ed558>] kmalloc include\/linux\/slab.h:590 [inline]\n[<00000000e67ed558>] kzalloc include\/linux\/slab.h:720 [inline]\n[<00000000e67ed558>] netlbl_cipsov4_add_std net\/netlabel\/netlabel_cipso_v4.c:145 [inline]\n[<00000000e67ed558>] netlbl_cipsov4_add+0x390\/0x2340 net\/netlabel\/netlabel_cipso_v4.c:416\n[<0000000006040154>] genl_family_rcv_msg_doit.isra.0+0x20e\/0x320 net\/netlink\/genetlink.c:739\n[<00000000204d7a1c>] genl_family_rcv_msg net\/netlink\/genetlink.c:783 [inline]\n[<00000000204d7a1c>] genl_rcv_msg+0x2bf\/0x4f0 net\/netlink\/genetlink.c:800\n[<00000000c0d6a995>] netlink_rcv_skb+0x134\/0x3d0 net\/netlink\/af_netlink.c:2504\n[<00000000d78b9d2c>] genl_rcv+0x24\/0x40 net\/netlink\/genetlink.c:811\n[<000000009733081b>] netlink_unicast_kernel net\/netlink\/af_netlink.c:1314 [inline]\n[<000000009733081b>] netlink_unicast+0x4a0\/0x6a0 net\/netlink\/af_netlink.c:1340\n[<00000000d5fd43b8>] netlink_sendmsg+0x789\/0xc70 net\/netlink\/af_netlink.c:1929\n[<000000000a2d1e40>] sock_sendmsg_nosec net\/socket.c:654 [inline]\n[<000000000a2d1e40>] sock_sendmsg+0x139\/0x170 net\/socket.c:674\n[<00000000321d1969>] ____sys_sendmsg+0x658\/0x7d0 net\/socket.c:2350\n[<00000000964e16bc>] ___sys_sendmsg+0xf8\/0x170 net\/socket.c:2404\n[<000000001615e288>] __sys_sendmsg+0xd3\/0x190 net\/socket.c:2433\n[<000000004ee8b6a5>] do_syscall_64+0x37\/0x90 arch\/x86\/entry\/common.c:47\n[<00000000171c7cee>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe memory of doi_def->map.std pointing is allocated in\nnetlbl_cipsov4_add_std, but no place has freed it. It should be\nfreed in cipso_v4_doi_free which frees the cipso DOI resource."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/086e92b1d68c6338535f715aad173f8cf4bfbc8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0ffb460be3abac86f884a8c548bb02724ec370f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/212166510582631994be4f4b3fe15e10a03c1dd4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/398a24447eb60f060c8994221cb5ae6caf355fa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5340858147e3dc60913fb3dd0cbb758ec4a26e66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6dcea66d3bb519b426282588f38e884e07893c1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d612c3f3fae221e7ea736d196581c2217304bbbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/deeeb65c6ee404f2d1fb80b38b2730645c0f4663","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47251","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.007","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix skb length check in ieee80211_scan_rx()\n\nReplace hard-coded compile-time constants for header length check\nwith dynamic determination based on the frame type. Otherwise, we\nhit a validation WARN_ON in cfg80211 later.\n\n[style fixes, reword commit message]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5a1cd67a801cf5ef989c4783e07b86a25b143126","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1b949c70206178b12027f66edc088d40375b5cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e298aa358f0ca658406d524b6639fe389cb6e11e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47252","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.083","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbatman-adv: Avoid WARN_ON timing related checks\n\nThe soft\/batadv interface for a queued OGM can be changed during the time\nthe OGM was queued for transmission and when the OGM is actually\ntransmitted by the worker.\n\nBut WARN_ON must be used to denote kernel bugs and not to print simple\nwarnings. A warning can simply be printed using pr_warn."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/282baa8104af44e04c4af3e7f933b44267c7f86f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eb4e0b3631832a4291c8bf4c9db873f60b128c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45011f2973f6b52cf50db397bb27bf805f5f0e7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6031daaaf6d5c359c99dfffa102e332df234ff09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77a99aad5bc3ea105806ebae6be3cbadc2fc615e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f460ae31c4435fd022c443a6029352217a16ac1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7fbd8184fa9e85f0d648c499841cb7ff6dec9f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8e9d2968a9d08bf5c683afca182f1537edebf8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47253","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.160","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix potential memory leak in DMUB hw_init\n\n[Why]\nOn resume we perform DMUB hw_init which allocates memory:\ndm_resume->dm_dmub_hw_init->dc_dmub_srv_create->kzalloc\nThat results in memory leak in suspend\/resume scenarios.\n\n[How]\nAllocate memory for the DC wrapper to DMUB only if it was not\nallocated before.\nNo need to reallocate it on suspend\/resume."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9e8c2af010463197315fa54a6c17e74988b5259c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa000f828e60ac15d6340f606ec4a673966f5b0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5699e2d863f58221044efdc3fa712dd32d55cde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47254","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.233","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix use-after-free in gfs2_glock_shrink_scan\n\nThe GLF_LRU flag is checked under lru_lock in gfs2_glock_remove_from_lru() to\nremove the glock from the lru list in __gfs2_glock_put().\n\nOn the shrink scan path, the same flag is cleared under lru_lock but because\nof cond_resched_lock(&lru_lock) in gfs2_dispose_glock_lru(), progress on the\nput side can be made without deleting the glock from the lru list.\n\nKeep GLF_LRU across the race window opened by cond_resched_lock(&lru_lock) to\nensure correct behavior on both sides - clear GLF_LRU after list_del under\nlru_lock."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0364742decb0f02bc183404868b82896f7992595","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/094bf5670e762afa243d2c41a5c4ab71c7447bf4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ab19c5de4c537ec0d9b21020395a5b5a6c059b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38ce329534500bf4ae71f81df6a37a406cf187b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86fd5b27db743a0ce0cc245e3a34813b2aa6ec1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92869945cc5b78ee8a1ef90336fe070893e3458a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a61156314b66456ab6a291ed5deba1ebd002ab3c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e87ef30fe73e7e10d2c85bdcc778dcec24dca553","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47255","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.303","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkvm: LAPIC: Restore guard to prevent illegal APIC register access\n\nPer the SDM, \"any access that touches bytes 4 through 15 of an APIC\nregister may cause undefined behavior and must not be executed.\"\nWorse, such an access in kvm_lapic_reg_read can result in a leak of\nkernel stack contents. Prior to commit 01402cf81051 (\"kvm: LAPIC:\nwrite down valid APIC registers\"), such an access was explicitly\ndisallowed. Restore the guard that was removed in that commit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/018685461a5b9a9a70e664ac77aef0d7415a3fd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/218bf772bddd221489c38dde6ef8e917131161f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2aff09807fbe4018c269d3773a629949058b210","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf99ea52970caeb4583bdba1192c1f9b53b12c84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47256","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.380","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmm\/memory-failure: make sure wait for page writeback in memory_failure\n\nOur syzkaller trigger the \"BUG_ON(!list_empty(&inode->i_wb_list))\" in\nclear_inode:\n\n  kernel BUG at fs\/inode.c:519!\n  Internal error: Oops - BUG: 0 [#1] SMP\n  Modules linked in:\n  Process syz-executor.0 (pid: 249, stack limit = 0x00000000a12409d7)\n  CPU: 1 PID: 249 Comm: syz-executor.0 Not tainted 4.19.95\n  Hardware name: linux,dummy-virt (DT)\n  pstate: 80000005 (Nzcv daif -PAN -UAO)\n  pc : clear_inode+0x280\/0x2a8\n  lr : clear_inode+0x280\/0x2a8\n  Call trace:\n    clear_inode+0x280\/0x2a8\n    ext4_clear_inode+0x38\/0xe8\n    ext4_free_inode+0x130\/0xc68\n    ext4_evict_inode+0xb20\/0xcb8\n    evict+0x1a8\/0x3c0\n    iput+0x344\/0x460\n    do_unlinkat+0x260\/0x410\n    __arm64_sys_unlinkat+0x6c\/0xc0\n    el0_svc_common+0xdc\/0x3b0\n    el0_svc_handler+0xf8\/0x160\n    el0_svc+0x10\/0x218\n  Kernel panic - not syncing: Fatal exception\n\nA crash dump of this problem show that someone called __munlock_pagevec\nto clear page LRU without lock_page: do_mmap -> mmap_region -> do_munmap\n-> munlock_vma_pages_range -> __munlock_pagevec.\n\nAs a result memory_failure will call identify_page_state without\nwait_on_page_writeback.  And after truncate_error_page clear the mapping\nof this page.  end_page_writeback won't call sb_clear_inode_writeback to\nclear inode->i_wb_list.  That will trigger BUG_ON in clear_inode!\n\nFix it by checking PageWriteback too to help determine should we skip\nwait_on_page_writeback."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28788dc5c70597395b6b451dae4549bbaa8e2c56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/566345aaabac853aa866f53a219c4b02a6beb527","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d210d547adc2218ef8b5bcf23518c5f2f1fd872","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e379da727a7a031be9b877cde7b9c34a0fb8306","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d05267fd27a5c4f54e06daefa3035995d765ca0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8675d291ac007e1c636870db880f837a9ea112a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47257","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.460","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ieee802154: fix null deref in parse dev addr\n\nFix a logic error that could result in a null deref if the user sets\nthe mode incorrectly for the given addr type."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f95741981c899c4724647291fec5faa3c777185","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f728ec65485625e30f46e5b4917ff023ad29ea0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fdd04918a452980631ecc499317881c1d120b70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6998ccfefa652bac3f9b236821e392af43efa1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7836de2cadd88bc2f20f2c5a3d4ef4c73aef627","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0f47648b87b6d5f204cb7f3cbce6d36dab85a67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fdd51e34f45311ab6e48d2147cbc2904731b9993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47258","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.537","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix error handling of scsi_host_alloc()\n\nAfter device is initialized via device_initialize(), or its name is set via\ndev_set_name(), the device has to be freed via put_device().  Otherwise\ndevice name will be leaked because it is allocated dynamically in\ndev_set_name().\n\nFix the leak by replacing kfree() with put_device(). Since\nscsi_host_dev_release() properly handles IDA and kthread removal, remove\nspecial-casing these from the error handling as well."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2dc85045ae65b9302a1d2e2ddd7ce4c030153a6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45d83db4728127944b237c0c8248987df9d478e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66a834d092930cf41d809c0e989b13cd6f9ca006","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79296e292d67fa7b5fb8d8c27343683e823872c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a696ce1d5d16a33a6cd6400bbcc0339b2460e11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8958181c1663e24a13434448e7d6b96b5d04900a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db08ce595dd64ea9859f7d088b51cbfc8e685c66","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47259","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.610","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix use-after-free in nfs4_init_client()\n\nKASAN reports a use-after-free when attempting to mount two different\nexports through two different NICs that belong to the same server.\n\nOlga was able to hit this with kernels starting somewhere between 5.7\nand 5.10, but I traced the patch that introduced the clear_bit() call to\n4.13. So something must have changed in the refcounting of the clp\npointer to make this call to nfs_put_client() the very last one."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3e3c7ebbfac152d08be75c92802a64a1f6471a15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42c10b0db064e45f5c5ae7019bbf2168ffab766c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/476bdb04c501fc64bf3b8464ffddefc8dbe01577","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72651c6579a25317a90536181d311c663d0329ab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3b6cf64dfe4ef96e7341508d50d6998da7062c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7eab9e2d7b4e983ce280276fb920af649955897","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47260","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.690","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFS: Fix a potential NULL dereference in nfs_get_client()\n\nNone of the callers are expecting NULL returns from nfs_get_client() so\nthis code will lead to an Oops.  It's better to return an error\npointer.  I expect that this is dead code so hopefully no one is\naffected."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0057ecef9f324007c0ba5fcca4ddd131178ce78b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09226e8303beeec10f2ff844d2e46d1371dc58e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/279ad78a00f8b9c5ff24171a59297187a3bd44b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b380a7d84ef2ce3f4f5bec5d8706ed937ac6502","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58ddf61f10b8f9b7b1341644bfee2f1c6508d4e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/634f17ff1d59905eb3b4bbbc00805961d08beaee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a979e601000982a3ca693171a6d4dffc47f8ad00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fab8bfdfb4aac9e4e8363666333adfdf21e89106","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47261","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.770","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/mlx5: Fix initializing CQ fragments buffer\n\nThe function init_cq_frag_buf() can be called to initialize the current CQ\nfragments buffer cq->buf, or the temporary cq->resize_buf that is filled\nduring CQ resize operation.\n\nHowever, the offending commit started to use function get_cqe() for\ngetting the CQEs, the issue with this change is that get_cqe() always\nreturns CQEs from cq->buf, which leads us to initialize the wrong buffer,\nand in case of enlarging the CQ we try to access elements beyond the size\nof the current cq->buf and eventually hit a kernel panic.\n\n [exception RIP: init_cq_frag_buf+103]\n  [ffff9f799ddcbcd8] mlx5_ib_resize_cq at ffffffffc0835d60 [mlx5_ib]\n  [ffff9f799ddcbdb0] ib_resize_cq at ffffffffc05270df [ib_core]\n  [ffff9f799ddcbdc0] llt_rdma_setup_qp at ffffffffc0a6a712 [llt]\n  [ffff9f799ddcbe10] llt_rdma_cc_event_action at ffffffffc0a6b411 [llt]\n  [ffff9f799ddcbe98] llt_rdma_client_conn_thread at ffffffffc0a6bb75 [llt]\n  [ffff9f799ddcbec8] kthread at ffffffffa66c5da1\n  [ffff9f799ddcbf50] ret_from_fork_nospec_begin at ffffffffa6d95ddd\n\nFix it by getting the needed CQE by calling mlx5_frag_buf_get_wqe() that\ntakes the correct source buffer as a parameter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ec2dcd680c71d0d36fa25638b327a468babd5c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2ba0aa2feebda680ecfc3c552e867cf4d1b05a3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e670c54eda238cb8a1ea93538a79ae89285c1c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91f7fdc4cc10542ca1045c06aad23365f0d067e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3ecd9c09fcc10cf6b2bc67e2990c397c40a8c26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47262","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:14.930","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Ensure liveliness of nested VM-Enter fail tracepoint message\n\nUse the __string() machinery provided by the tracing subystem to make a\ncopy of the string literals consumed by the \"nested VM-Enter failed\"\ntracepoint.  A complete copy is necessary to ensure that the tracepoint\ncan't outlive the data\/memory it consumes and deference stale memory.\n\nBecause the tracepoint itself is defined by kvm, if kvm-intel and\/or\nkvm-amd are built as modules, the memory holding the string literals\ndefined by the vendor modules will be freed when the module is unloaded,\nwhereas the tracepoint and its data in the ring buffer will live until\nkvm is unloaded (or \"indefinitely\" if kvm is built-in).\n\nThis bug has existed since the tracepoint was added, but was recently\nexposed by a new check in tracing to detect exactly this type of bug.\n\n  fmt: '%s%s\n  ' current_buffer: ' vmx_dirty_log_t-140127  [003] ....  kvm_nested_vmenter_failed: '\n  WARNING: CPU: 3 PID: 140134 at kernel\/trace\/trace.c:3759 trace_check_vprintf+0x3be\/0x3e0\n  CPU: 3 PID: 140134 Comm: less Not tainted 5.13.0-rc1-ce2e73ce600a-req #184\n  Hardware name: ASUS Q87M-E\/Q87M-E, BIOS 1102 03\/03\/2014\n  RIP: 0010:trace_check_vprintf+0x3be\/0x3e0\n  Code: <0f> 0b 44 8b 4c 24 1c e9 a9 fe ff ff c6 44 02 ff 00 49 8b 97 b0 20\n  RSP: 0018:ffffa895cc37bcb0 EFLAGS: 00010282\n  RAX: 0000000000000000 RBX: ffffa895cc37bd08 RCX: 0000000000000027\n  RDX: 0000000000000027 RSI: 00000000ffffdfff RDI: ffff9766cfad74f8\n  RBP: ffffffffc0a041d4 R08: ffff9766cfad74f0 R09: ffffa895cc37bad8\n  R10: 0000000000000001 R11: 0000000000000001 R12: ffffffffc0a041d4\n  R13: ffffffffc0f4dba8 R14: 0000000000000000 R15: ffff976409f2c000\n  FS:  00007f92fa200740(0000) GS:ffff9766cfac0000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000559bd11b0000 CR3: 000000019fbaa002 CR4: 00000000001726e0\n  Call Trace:\n   trace_event_printf+0x5e\/0x80\n   trace_raw_output_kvm_nested_vmenter_failed+0x3a\/0x60 [kvm]\n   print_trace_line+0x1dd\/0x4e0\n   s_show+0x45\/0x150\n   seq_read_iter+0x2d5\/0x4c0\n   seq_read+0x106\/0x150\n   vfs_read+0x98\/0x180\n   ksys_read+0x5f\/0xe0\n   do_syscall_64+0x40\/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/796d3bd4ac9316e70c181189318cd2bd98af34bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fb088ce13bc3c59a51260207b487db3e556f275","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d046f724bbd725a24007b7e52b2d675249870888","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f31500b0d437a2464ca5972d8f5439e156b74960","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47263","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.007","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: wcd934x: Fix shift-out-of-bounds error\n\nbit-mask for pins 0 to 4 is BIT(0) to BIT(4) however we ended up with BIT(n - 1)\nwhich is not right, and this was caught by below usban check\n\nUBSAN: shift-out-of-bounds in drivers\/gpio\/gpio-wcd934x.c:34:14"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/dbec64b11c65d74f31427e2b9d5746fbf17bf840","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd55331d493b7ea75c5db1f24d6822946fde2862","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0b518a2eb44d8a74c19e50f79a8ed393e96d634","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47264","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.070","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: core: Fix Null-point-dereference in fmt_single_name()\n\nCheck the return value of devm_kstrdup() in case of\nNull-point-dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/047fd16015a79180771650aa6ce71f68b2c23368","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0e2c9aeb00289f279b8181fbd4c20765127d8943","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41daf6ba594d55f201c50280ebcd430590441da1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47265","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.147","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA: Verify port when creating flow rule\n\nValidate port value provided by the user and with that remove no longer\nneeded validation by the driver.  The missing check in the mlx5_ib driver\ncould cause to the below oops.\n\nCall trace:\n  _create_flow_rule+0x2d4\/0xf28 [mlx5_ib]\n  mlx5_ib_create_flow+0x2d0\/0x5b0 [mlx5_ib]\n  ib_uverbs_ex_create_flow+0x4cc\/0x624 [ib_uverbs]\n  ib_uverbs_handler_UVERBS_METHOD_INVOKE_WRITE+0xd4\/0x150 [ib_uverbs]\n  ib_uverbs_cmd_verbs.isra.7+0xb28\/0xc50 [ib_uverbs]\n  ib_uverbs_ioctl+0x158\/0x1d0 [ib_uverbs]\n  do_vfs_ioctl+0xd0\/0xaf0\n  ksys_ioctl+0x84\/0xb4\n  __arm64_sys_ioctl+0x28\/0xc4\n  el0_svc_common.constprop.3+0xa4\/0x254\n  el0_svc_handler+0x84\/0xa0\n  el0_svc+0x10\/0x26c\n Code: b9401260 f9615681 51000400 8b001c20 (f9403c1a)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2adcb4c5a52a2623cd2b43efa7041e74d19f3a5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8dc1b0e0ca204596c50bcd159ee069ae0f998176","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47266","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.213","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/ipoib: Fix warning caused by destroying non-initial netns\n\nAfter the commit 5ce2dced8e95 (\"RDMA\/ipoib: Set rtnl_link_ops for ipoib\ninterfaces\"), if the IPoIB device is moved to non-initial netns,\ndestroying that netns lets the device vanish instead of moving it back to\nthe initial netns, This is happening because default_device_exit() skips\nthe interfaces due to having rtnl_link_ops set.\n\nSteps to reporoduce:\n  ip netns add foo\n  ip link set mlx5_ib0 netns foo\n  ip netns delete foo\n\nWARNING: CPU: 1 PID: 704 at net\/core\/dev.c:11435 netdev_exit+0x3f\/0x50\nModules linked in: xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT\nnf_reject_ipv4 nft_compat nft_counter nft_chain_nat nf_nat nf_conntrack\nnf_defrag_ipv6 nf_defrag_ipv4 nf_tables nfnetlink tun d\n fuse\nCPU: 1 PID: 704 Comm: kworker\/u64:3 Tainted: G S      W  5.13.0-rc1+ #1\nHardware name: Dell Inc. PowerEdge R630\/02C2CP, BIOS 2.1.5 04\/11\/2016\nWorkqueue: netns cleanup_net\nRIP: 0010:netdev_exit+0x3f\/0x50\nCode: 48 8b bb 30 01 00 00 e8 ef 81 b1 ff 48 81 fb c0 3a 54 a1 74 13 48\n8b 83 90 00 00 00 48 81 c3 90 00 00 00 48 39 d8 75 02 5b c3 <0f> 0b 5b\nc3 66 66 2e 0f 1f 84 00 00 00 00 00 66 90 0f 1f 44 00\nRSP: 0018:ffffb297079d7e08 EFLAGS: 00010206\nRAX: ffff8eb542c00040 RBX: ffff8eb541333150 RCX: 000000008010000d\nRDX: 000000008010000e RSI: 000000008010000d RDI: ffff8eb440042c00\nRBP: ffffb297079d7e48 R08: 0000000000000001 R09: ffffffff9fdeac00\nR10: ffff8eb5003be000 R11: 0000000000000001 R12: ffffffffa1545620\nR13: ffffffffa1545628 R14: 0000000000000000 R15: ffffffffa1543b20\nFS:  0000000000000000(0000) GS:ffff8ed37fa00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005601b5f4c2e8 CR3: 0000001fc8c10002 CR4: 00000000003706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n ops_exit_list.isra.9+0x36\/0x70\n cleanup_net+0x234\/0x390\n process_one_work+0x1cb\/0x360\n ? process_one_work+0x360\/0x360\n worker_thread+0x30\/0x370\n ? process_one_work+0x360\/0x360\n kthread+0x116\/0x130\n ? kthread_park+0x80\/0x80\n ret_from_fork+0x22\/0x30\n\nTo avoid the above warning and later on the kernel panic that could happen\non shutdown due to a NULL pointer dereference, make sure to set the\nnetns_refund flag that was introduced by commit 3a5ca857079e (\"can: dev:\nMove device back to init netns on owning netns delete\") to properly\nrestore the IPoIB interfaces to the initial netns."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a672f7d89db2da17ae02733ccc08458be72a6f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f1fb6acc2ab95982fc4334f351d7576c26f313","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67cf4e447b5e5e9e94996cb6812ae2828e0e0e27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3e74fb9247cd530dca246699d5eb5a691884d32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47267","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.297","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: fix various gadget panics on 10gbps cabling\n\nusb_assign_descriptors() is called with 5 parameters,\nthe last 4 of which are the usb_descriptor_header for:\n  full-speed (USB1.1 - 12Mbps [including USB1.0 low-speed @ 1.5Mbps),\n  high-speed (USB2.0 - 480Mbps),\n  super-speed (USB3.0 - 5Gbps),\n  super-speed-plus (USB3.1 - 10Gbps).\n\nThe differences between full\/high\/super-speed descriptors are usually\nsubstantial (due to changes in the maximum usb block size from 64 to 512\nto 1024 bytes and other differences in the specs), while the difference\nbetween 5 and 10Gbps descriptors may be as little as nothing\n(in many cases the same tuning is simply good enough).\n\nHowever if a gadget driver calls usb_assign_descriptors() with\na NULL descriptor for super-speed-plus and is then used on a max 10gbps\nconfiguration, the kernel will crash with a null pointer dereference,\nwhen a 10gbps capable device port + cable + host port combination shows up.\n(This wouldn't happen if the gadget max-speed was set to 5gbps, but\nit of course defaults to the maximum, and there's no real reason to\nartificially limit it)\n\nThe fix is to simply use the 5gbps descriptor as the 10gbps descriptor,\nif a 10gbps descriptor wasn't provided.\n\nObviously this won't fix the problem if the 5gbps descriptor is also\nNULL, but such cases can't be so trivially solved (and any such gadgets\nare unlikely to be used with USB3 ports any way)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/032e288097a553db5653af552dd8035cd2a0ba96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45f9a2fe737dc0a5df270787f2231aee8985cd59","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ef23506695b01d5d56a13a092a97f2478069d75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70cd19cb5bd94bbb5bacfc9c1e4ee0071699a604","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b972eff874637402ddc4a7dd11fb22538a0b6d28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca6bc277430d90375452b60b047763a090b7673e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd24be23abf3e94260be0f00bb42c7e91d495f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47268","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.390","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: cancel vdm and state machine hrtimer when unregister tcpm port\n\nA pending hrtimer may expire after the kthread_worker of tcpm port\nis destroyed, see below kernel dump when do module unload, fix it\nby cancel the 2 hrtimers.\n\n[  111.517018] Unable to handle kernel paging request at virtual address ffff8000118cb880\n[  111.518786] blk_update_request: I\/O error, dev sda, sector 60061185 op 0x0:(READ) flags 0x0 phys_seg 1 prio class 0\n[  111.526594] Mem abort info:\n[  111.526597]   ESR = 0x96000047\n[  111.526600]   EC = 0x25: DABT (current EL), IL = 32 bits\n[  111.526604]   SET = 0, FnV = 0\n[  111.526607]   EA = 0, S1PTW = 0\n[  111.526610] Data abort info:\n[  111.526612]   ISV = 0, ISS = 0x00000047\n[  111.526615]   CM = 0, WnR = 1\n[  111.526619] swapper pgtable: 4k pages, 48-bit VAs, pgdp=0000000041d75000\n[  111.526623] [ffff8000118cb880] pgd=10000001bffff003, p4d=10000001bffff003, pud=10000001bfffe003, pmd=10000001bfffa003, pte=0000000000000000\n[  111.526642] Internal error: Oops: 96000047 [#1] PREEMPT SMP\n[  111.526647] Modules linked in: dwc3_imx8mp dwc3 phy_fsl_imx8mq_usb [last unloaded: tcpci]\n[  111.526663] CPU: 0 PID: 0 Comm: swapper\/0 Not tainted 5.13.0-rc4-00927-gebbe9dbd802c-dirty #36\n[  111.526670] Hardware name: NXP i.MX8MPlus EVK board (DT)\n[  111.526674] pstate: 800000c5 (Nzcv daIF -PAN -UAO -TCO BTYPE=--)\n[  111.526681] pc : queued_spin_lock_slowpath+0x1a0\/0x390\n[  111.526695] lr : _raw_spin_lock_irqsave+0x88\/0xb4\n[  111.526703] sp : ffff800010003e20\n[  111.526706] x29: ffff800010003e20 x28: ffff00017f380180\n[  111.537156] buffer_io_error: 6 callbacks suppressed\n[  111.537162] Buffer I\/O error on dev sda1, logical block 60040704, async page read\n[  111.539932]  x27: ffff00017f3801c0\n[  111.539938] x26: ffff800010ba2490 x25: 0000000000000000 x24: 0000000000000001\n[  111.543025] blk_update_request: I\/O error, dev sda, sector 60061186 op 0x0:(READ) flags 0x0 phys_seg 7 prio class 0\n[  111.548304]\n[  111.548306] x23: 00000000000000c0 x22: ffff0000c2a9f184 x21: ffff00017f380180\n[  111.551374] Buffer I\/O error on dev sda1, logical block 60040705, async page read\n[  111.554499]\n[  111.554503] x20: ffff0000c5f14210 x19: 00000000000000c0 x18: 0000000000000000\n[  111.557391] Buffer I\/O error on dev sda1, logical block 60040706, async page read\n[  111.561218]\n[  111.561222] x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n[  111.564205] Buffer I\/O error on dev sda1, logical block 60040707, async page read\n[  111.570887] x14: 00000000000000f5 x13: 0000000000000001 x12: 0000000000000040\n[  111.570902] x11: ffff0000c05ac6d8\n[  111.583420] Buffer I\/O error on dev sda1, logical block 60040708, async page read\n[  111.588978]  x10: 0000000000000000 x9 : 0000000000040000\n[  111.588988] x8 : 0000000000000000\n[  111.597173] Buffer I\/O error on dev sda1, logical block 60040709, async page read\n[  111.605766]  x7 : ffff00017f384880 x6 : ffff8000118cb880\n[  111.605777] x5 : ffff00017f384880\n[  111.611094] Buffer I\/O error on dev sda1, logical block 60040710, async page read\n[  111.617086]  x4 : 0000000000000000 x3 : ffff0000c2a9f184\n[  111.617096] x2 : ffff8000118cb880\n[  111.622242] Buffer I\/O error on dev sda1, logical block 60040711, async page read\n[  111.626927]  x1 : ffff8000118cb880 x0 : ffff00017f384888\n[  111.626938] Call trace:\n[  111.626942]  queued_spin_lock_slowpath+0x1a0\/0x390\n[  111.795809]  kthread_queue_work+0x30\/0xc0\n[  111.799828]  state_machine_timer_handler+0x20\/0x30\n[  111.804624]  __hrtimer_run_queues+0x140\/0x1e0\n[  111.808990]  hrtimer_interrupt+0xec\/0x2c0\n[  111.813004]  arch_timer_handler_phys+0x38\/0x50\n[  111.817456]  handle_percpu_devid_irq+0x88\/0x150\n[  111.821991]  __handle_domain_irq+0x80\/0xe0\n[  111.826093]  gic_handle_irq+0xc0\/0x140\n[  111.829848]  el1_irq+0xbc\/0x154\n[  111.832991]  arch_cpu_idle+0x1c\/0x2c\n[  111.836572]  default_idle_call+0x24\/0x6c\n[  111.840497]  do_idle+0x238\/0x2ac\n[  1\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18eaf0de50eadeeb395b83310b259b21ad8ed0a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a13ff7ef4349d70d1d18378d661117dd5af8efe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0a06696a8a4d99f649240b6f9b8a2e55452ecf5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47269","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.470","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: ep0: fix NULL pointer exception\n\nThere is no validation of the index from dwc3_wIndex_to_dep() and we might\nbe referring a non-existing ep and trigger a NULL pointer exception. In\ncertain configurations we might use fewer eps and the index might wrongly\nindicate a larger ep index than existing.\n\nBy adding this validation from the patch we can actually report a wrong\nindex back to the caller.\n\nIn our usecase we are using a composite device on an older kernel, but\nupstream might use this fix also. Unfortunately, I cannot describe the\nhardware for others to reproduce the issue as it is a proprietary\nimplementation.\n\n[   82.958261] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a4\n[   82.966891] Mem abort info:\n[   82.969663]   ESR = 0x96000006\n[   82.972703]   Exception class = DABT (current EL), IL = 32 bits\n[   82.978603]   SET = 0, FnV = 0\n[   82.981642]   EA = 0, S1PTW = 0\n[   82.984765] Data abort info:\n[   82.987631]   ISV = 0, ISS = 0x00000006\n[   82.991449]   CM = 0, WnR = 0\n[   82.994409] user pgtable: 4k pages, 39-bit VAs, pgdp = 00000000c6210ccc\n[   83.000999] [00000000000000a4] pgd=0000000053aa5003, pud=0000000053aa5003, pmd=0000000000000000\n[   83.009685] Internal error: Oops: 96000006 [#1] PREEMPT SMP\n[   83.026433] Process irq\/62-dwc3 (pid: 303, stack limit = 0x000000003985154c)\n[   83.033470] CPU: 0 PID: 303 Comm: irq\/62-dwc3 Not tainted 4.19.124 #1\n[   83.044836] pstate: 60000085 (nZCv daIf -PAN -UAO)\n[   83.049628] pc : dwc3_ep0_handle_feature+0x414\/0x43c\n[   83.054558] lr : dwc3_ep0_interrupt+0x3b4\/0xc94\n\n...\n\n[   83.141788] Call trace:\n[   83.144227]  dwc3_ep0_handle_feature+0x414\/0x43c\n[   83.148823]  dwc3_ep0_interrupt+0x3b4\/0xc94\n[   83.181546] ---[ end trace aac6b5267d84c32f ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/366369b89bedd59b1425386e8d4a18a466e420e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/470403639114895e2697c766fbe17be8d0e9b67a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60156089f07e724e4dc8483702d5e1ede4522749","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/788755756dd4a6aba1de479fec20b0fa600e7f19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96b74a99d360235c24052f1d060e64ac53f43528","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/990dc90750772622d44ca2ea6652c521e6f67e16","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd551e7c85939de2182010273450bfa78c3742fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d00889080ab60051627dab1d85831cd9db750e2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47270","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.540","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: fix various gadgets null ptr deref on 10gbps cabling.\n\nThis avoids a null pointer dereference in\nf_{ecm,eem,hid,loopback,printer,rndis,serial,sourcesink,subset,tcm}\nby simply reusing the 5gbps config for 10gbps."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10770d2ac0094b053c8897d96d7b2737cd72f7c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b289a0f3033f465b4fd51ba995251a7867a2aa2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8cd5f45c1b769e3e9e0f4325dd08b6c3749dc7ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90c4d05780d47e14a50e11a7f17373104cd47d25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4903f7fdc484628d0b8022daf86e2439d3ab4db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/beb1e67a5ca8d69703c776db9000527f44c0c93c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f17aae7c4009160f0630a91842a281773976a5bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47271","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.610","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdnsp: Fix deadlock issue in cdnsp_thread_irq_handler\n\nPatch fixes the following critical issue caused by deadlock which has been\ndetected during testing NCM class:\n\nsmp: csd: Detected non-responsive CSD lock (#1) on CPU#0\nsmp:     csd: CSD lock (#1) unresponsive.\n....\nRIP: 0010:native_queued_spin_lock_slowpath+0x61\/0x1d0\nRSP: 0018:ffffbc494011cde0 EFLAGS: 00000002\nRAX: 0000000000000101 RBX: ffff9ee8116b4a68 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff9ee8116b4658\nRBP: ffffbc494011cde0 R08: 0000000000000001 R09: 0000000000000000\nR10: ffff9ee8116b4670 R11: 0000000000000000 R12: ffff9ee8116b4658\nR13: ffff9ee8116b4670 R14: 0000000000000246 R15: ffff9ee8116b4658\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f7bcc41a830 CR3: 000000007a612003 CR4: 00000000001706e0\nCall Trace:\n <IRQ>\n do_raw_spin_lock+0xc0\/0xd0\n _raw_spin_lock_irqsave+0x95\/0xa0\n cdnsp_gadget_ep_queue.cold+0x88\/0x107 [cdnsp_udc_pci]\n usb_ep_queue+0x35\/0x110\n eth_start_xmit+0x220\/0x3d0 [u_ether]\n ncm_tx_timeout+0x34\/0x40 [usb_f_ncm]\n ? ncm_free_inst+0x50\/0x50 [usb_f_ncm]\n __hrtimer_run_queues+0xac\/0x440\n hrtimer_run_softirq+0x8c\/0xb0\n __do_softirq+0xcf\/0x428\n asm_call_irq_on_stack+0x12\/0x20\n <\/IRQ>\n do_softirq_own_stack+0x61\/0x70\n irq_exit_rcu+0xc1\/0xd0\n sysvec_apic_timer_interrupt+0x52\/0xb0\n asm_sysvec_apic_timer_interrupt+0x12\/0x20\nRIP: 0010:do_raw_spin_trylock+0x18\/0x40\nRSP: 0018:ffffbc494138bda8 EFLAGS: 00000246\nRAX: 0000000000000000 RBX: ffff9ee8116b4658 RCX: 0000000000000000\nRDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff9ee8116b4658\nRBP: ffffbc494138bda8 R08: 0000000000000001 R09: 0000000000000000\nR10: ffff9ee8116b4670 R11: 0000000000000000 R12: ffff9ee8116b4658\nR13: ffff9ee8116b4670 R14: ffff9ee7b5c73d80 R15: ffff9ee8116b4000\n _raw_spin_lock+0x3d\/0x70\n ? cdnsp_thread_irq_handler.cold+0x32\/0x112c [cdnsp_udc_pci]\n cdnsp_thread_irq_handler.cold+0x32\/0x112c [cdnsp_udc_pci]\n ? cdnsp_remove_request+0x1f0\/0x1f0 [cdnsp_udc_pci]\n ? cdnsp_thread_irq_handler+0x5\/0xa0 [cdnsp_udc_pci]\n ? irq_thread+0xa0\/0x1c0\n irq_thread_fn+0x28\/0x60\n irq_thread+0x105\/0x1c0\n ? __kthread_parkme+0x42\/0x90\n ? irq_forced_thread_fn+0x90\/0x90\n ? wake_threads_waitq+0x30\/0x30\n ? irq_thread_check_affinity+0xe0\/0xe0\n kthread+0x12a\/0x160\n ? kthread_park+0x90\/0x90\n ret_from_fork+0x22\/0x30\n\nThe root cause of issue is spin_lock\/spin_unlock instruction instead\nspin_lock_irqsave\/spin_lock_irqrestore in cdnsp_thread_irq_handler\nfunction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a9aecef198faae3240921b707bc09b602e966fce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae746b6f4ce619cf4032fd798a232b010907a397","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47272","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.687","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: gadget: Bail from dwc3_gadget_exit() if dwc->gadget is NULL\n\nThere exists a possible scenario in which dwc3_gadget_init() can fail:\nduring during host -> peripheral mode switch in dwc3_set_mode(), and\na pending gadget driver fails to bind.  Then, if the DRD undergoes\nanother mode switch from peripheral->host the resulting\ndwc3_gadget_exit() will attempt to reference an invalid and dangling\ndwc->gadget pointer as well as call dma_free_coherent() on unmapped\nDMA pointers.\n\nThe exact scenario can be reproduced as follows:\n - Start DWC3 in peripheral mode\n - Configure ConfigFS gadget with FunctionFS instance (or use g_ffs)\n - Run FunctionFS userspace application (open EPs, write descriptors, etc)\n - Bind gadget driver to DWC3's UDC\n - Switch DWC3 to host mode\n   => dwc3_gadget_exit() is called. usb_del_gadget() will put the\n\tConfigFS driver instance on the gadget_driver_pending_list\n - Stop FunctionFS application (closes the ep files)\n - Switch DWC3 to peripheral mode\n   => dwc3_gadget_init() fails as usb_add_gadget() calls\n\tcheck_pending_gadget_drivers() and attempts to rebind the UDC\n\tto the ConfigFS gadget but fails with -19 (-ENODEV) because the\n\tFFS instance is not in FFS_ACTIVE state (userspace has not\n\tre-opened and written the descriptors yet, i.e. desc_ready!=0).\n - Switch DWC3 back to host mode\n   => dwc3_gadget_exit() is called again, but this time dwc->gadget\n\tis invalid.\n\nAlthough it can be argued that userspace should take responsibility\nfor ensuring that the FunctionFS application be ready prior to\nallowing the composite driver bind to the UDC, failure to do so\nshould not result in a panic from the kernel driver.\n\nFix this by setting dwc->gadget to NULL in the failure path of\ndwc3_gadget_init() and add a check to dwc3_gadget_exit() to bail out\nunless the gadget pointer is valid."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03715ea2e3dbbc56947137ce3b4ac18a726b2f87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4aad390363d2b9b3e92428dd34d27bb7ea8f1ee8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/851dee5a5da56564a70290713aee665403bb0b24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47273","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.760","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3-meson-g12a: fix usb2 PHY glue init when phy0 is disabled\n\nWhen only PHY1 is used (for example on Odroid-HC4), the regmap init code\nuses the usb2 ports when doesn't initialize the PHY1 regmap entry.\n\nThis fixes:\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000020\n...\npc : regmap_update_bits_base+0x40\/0xa0\nlr : dwc3_meson_g12a_usb2_init_phy+0x4c\/0xf8\n...\nCall trace:\nregmap_update_bits_base+0x40\/0xa0\ndwc3_meson_g12a_usb2_init_phy+0x4c\/0xf8\ndwc3_meson_g12a_usb2_init+0x7c\/0xc8\ndwc3_meson_g12a_usb_init+0x28\/0x48\ndwc3_meson_g12a_probe+0x298\/0x540\nplatform_probe+0x70\/0xe0\nreally_probe+0xf0\/0x4d8\ndriver_probe_device+0xfc\/0x168\n..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d2aa178d2ad2fb156711113790dde13e9aa2376","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/750a0d75564293be3ed50f13ef7f38ab75106421","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8dd3754e707104a34f8ec595034d503ea8871a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47274","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.830","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Correct the length check which causes memory corruption\n\nWe've suffered from severe kernel crashes due to memory corruption on\nour production environment, like,\n\nCall Trace:\n[1640542.554277] general protection fault: 0000 [#1] SMP PTI\n[1640542.554856] CPU: 17 PID: 26996 Comm: python Kdump: loaded Tainted:G\n[1640542.556629] RIP: 0010:kmem_cache_alloc+0x90\/0x190\n[1640542.559074] RSP: 0018:ffffb16faa597df8 EFLAGS: 00010286\n[1640542.559587] RAX: 0000000000000000 RBX: 0000000000400200 RCX:\n0000000006e931bf\n[1640542.560323] RDX: 0000000006e931be RSI: 0000000000400200 RDI:\nffff9a45ff004300\n[1640542.560996] RBP: 0000000000400200 R08: 0000000000023420 R09:\n0000000000000000\n[1640542.561670] R10: 0000000000000000 R11: 0000000000000000 R12:\nffffffff9a20608d\n[1640542.562366] R13: ffff9a45ff004300 R14: ffff9a45ff004300 R15:\n696c662f65636976\n[1640542.563128] FS:  00007f45d7c6f740(0000) GS:ffff9a45ff840000(0000)\nknlGS:0000000000000000\n[1640542.563937] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[1640542.564557] CR2: 00007f45d71311a0 CR3: 000000189d63e004 CR4:\n00000000003606e0\n[1640542.565279] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[1640542.566069] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[1640542.566742] Call Trace:\n[1640542.567009]  anon_vma_clone+0x5d\/0x170\n[1640542.567417]  __split_vma+0x91\/0x1a0\n[1640542.567777]  do_munmap+0x2c6\/0x320\n[1640542.568128]  vm_munmap+0x54\/0x70\n[1640542.569990]  __x64_sys_munmap+0x22\/0x30\n[1640542.572005]  do_syscall_64+0x5b\/0x1b0\n[1640542.573724]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n[1640542.575642] RIP: 0033:0x7f45d6e61e27\n\nJames Wang has reproduced it stably on the latest 4.19 LTS.\nAfter some debugging, we finally proved that it's due to ftrace\nbuffer out-of-bound access using a debug tool as follows:\n[   86.775200] BUG: Out-of-bounds write at addr 0xffff88aefe8b7000\n[   86.780806]  no_context+0xdf\/0x3c0\n[   86.784327]  __do_page_fault+0x252\/0x470\n[   86.788367]  do_page_fault+0x32\/0x140\n[   86.792145]  page_fault+0x1e\/0x30\n[   86.795576]  strncpy_from_unsafe+0x66\/0xb0\n[   86.799789]  fetch_memory_string+0x25\/0x40\n[   86.804002]  fetch_deref_string+0x51\/0x60\n[   86.808134]  kprobe_trace_func+0x32d\/0x3a0\n[   86.812347]  kprobe_dispatcher+0x45\/0x50\n[   86.816385]  kprobe_ftrace_handler+0x90\/0xf0\n[   86.820779]  ftrace_ops_assist_func+0xa1\/0x140\n[   86.825340]  0xffffffffc00750bf\n[   86.828603]  do_sys_open+0x5\/0x1f0\n[   86.832124]  do_syscall_64+0x5b\/0x1b0\n[   86.835900]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\ncommit b220c049d519 (\"tracing: Check length before giving out\nthe filter buffer\") adds length check to protect trace data\noverflow introduced in 0fc1b09ff1ff, seems that this fix can't prevent\noverflow entirely, the length check should also take the sizeof\nentry->array[0] into account, since this array[0] is filled the\nlength of trace data and occupy addtional space and risk overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2d598902799886d67947406f26ee8e5fd2ca097f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31ceae385556c37e4d286cb6378696448f566883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e08a9f9760f4a70d633c328a76408e62d6f80a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43c32c22254b9328d7abb1c2b0f689dc67838e60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b16a249eca2230c2cd66fa1d4b94743bd9b6ef92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d63f00ec908b3be635ead5d6029cc94246e1f38d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edcce01e0e50840a9aa6a70baed21477bdd2c9f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47275","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.903","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: avoid oversized read request in cache missing code path\n\nIn the cache missing code path of cached device, if a proper location\nfrom the internal B+ tree is matched for a cache miss range, function\ncached_dev_cache_miss() will be called in cache_lookup_fn() in the\nfollowing code block,\n[code block 1]\n  526         unsigned int sectors = KEY_INODE(k) == s->iop.inode\n  527                 ? min_t(uint64_t, INT_MAX,\n  528                         KEY_START(k) - bio->bi_iter.bi_sector)\n  529                 : INT_MAX;\n  530         int ret = s->d->cache_miss(b, s, bio, sectors);\n\nHere s->d->cache_miss() is the call backfunction pointer initialized as\ncached_dev_cache_miss(), the last parameter 'sectors' is an important\nhint to calculate the size of read request to backing device of the\nmissing cache data.\n\nCurrent calculation in above code block may generate oversized value of\n'sectors', which consequently may trigger 2 different potential kernel\npanics by BUG() or BUG_ON() as listed below,\n\n1) BUG_ON() inside bch_btree_insert_key(),\n[code block 2]\n   886         BUG_ON(b->ops->is_extents && !KEY_SIZE(k));\n2) BUG() inside biovec_slab(),\n[code block 3]\n   51         default:\n   52                 BUG();\n   53                 return NULL;\n\nAll the above panics are original from cached_dev_cache_miss() by the\noversized parameter 'sectors'.\n\nInside cached_dev_cache_miss(), parameter 'sectors' is used to calculate\nthe size of data read from backing device for the cache missing. This\nsize is stored in s->insert_bio_sectors by the following lines of code,\n[code block 4]\n  909    s->insert_bio_sectors = min(sectors, bio_sectors(bio) + reada);\n\nThen the actual key inserting to the internal B+ tree is generated and\nstored in s->iop.replace_key by the following lines of code,\n[code block 5]\n  911   s->iop.replace_key = KEY(s->iop.inode,\n  912                    bio->bi_iter.bi_sector + s->insert_bio_sectors,\n  913                    s->insert_bio_sectors);\nThe oversized parameter 'sectors' may trigger panic 1) by BUG_ON() from\nthe above code block.\n\nAnd the bio sending to backing device for the missing data is allocated\nwith hint from s->insert_bio_sectors by the following lines of code,\n[code block 6]\n  926    cache_bio = bio_alloc_bioset(GFP_NOWAIT,\n  927                 DIV_ROUND_UP(s->insert_bio_sectors, PAGE_SECTORS),\n  928                 &dc->disk.bio_split);\nThe oversized parameter 'sectors' may trigger panic 2) by BUG() from the\nagove code block.\n\nNow let me explain how the panics happen with the oversized 'sectors'.\nIn code block 5, replace_key is generated by macro KEY(). From the\ndefinition of macro KEY(),\n[code block 7]\n  71 #define KEY(inode, offset, size)                                  \\\n  72 ((struct bkey) {                                                  \\\n  73      .high = (1ULL << 63) | ((__u64) (size) << 20) | (inode),     \\\n  74      .low = (offset)                                              \\\n  75 })\n\nHere 'size' is 16bits width embedded in 64bits member 'high' of struct\nbkey. But in code block 1, if \"KEY_START(k) - bio->bi_iter.bi_sector\" is\nvery probably to be larger than (1<<16) - 1, which makes the bkey size\ncalculation in code block 5 is overflowed. In one bug report the value\nof parameter 'sectors' is 131072 (= 1 << 17), the overflowed 'sectors'\nresults the overflowed s->insert_bio_sectors in code block 4, then makes\nsize field of s->iop.replace_key to be 0 in code block 5. Then the 0-\nsized s->iop.replace_key is inserted into the internal B+ tree as cache\nmissing check key (a special key to detect and avoid a racing between\nnormal write request and cache missing read request) as,\n[code block 8]\n  915   ret = bch_btree_insert_check_key(b, &s->op, &s->iop.replace_key);\n\nThen the 0-sized s->iop.replace_key as 3rd parameter triggers the bkey\nsize check BUG_ON() in code block 2, and causes the kernel panic 1).\n\nAnother ke\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/41fe8d088e96472f63164e213de44ec77be69478","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/555002a840ab88468e252b0eedf0b05e2ce7099c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47276","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:15.983","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Do not blindly read the ip address in ftrace_bug()\n\nIt was reported that a bug on arm64 caused a bad ip address to be used for\nupdating into a nop in ftrace_init(), but the error path (rightfully)\nreturned -EINVAL and not -EFAULT, as the bug caused more than one error to\noccur. But because -EINVAL was returned, the ftrace_bug() tried to report\nwhat was at the location of the ip address, and read it directly. This\ncaused the machine to panic, as the ip was not pointing to a valid memory\naddress.\n\nInstead, read the ip address with copy_from_kernel_nofault() to safely\naccess the memory, and if it faults, report that the address faulted,\notherwise report what was in that location."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bc62e398bbd9e600959e610def5109957437b28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e4ddeb68751fb4fb657199aed9cfd5d02796875","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4aedc2bc2b32c93555f47c95610efb89cc1ec09b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c14133d2d3f768e0a35128faac8aa6ed4815051","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e4e824b109f1d41ccf223fbb0565d877d6223a2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/862dcc14f2803c556bdd73b43c27b023fafce2fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97524384762c1fb9b3ded931498dd2047bd0de81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acf671ba79c1feccc3ec7cfdcffead4efcec49e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47277","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.053","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkvm: avoid speculation-based attacks from out-of-range memslot accesses\n\nKVM's mechanism for accessing guest memory translates a guest physical\naddress (gpa) to a host virtual address using the right-shifted gpa\n(also known as gfn) and a struct kvm_memory_slot.  The translation is\nperformed in __gfn_to_hva_memslot using the following formula:\n\n      hva = slot->userspace_addr + (gfn - slot->base_gfn) * PAGE_SIZE\n\nIt is expected that gfn falls within the boundaries of the guest's\nphysical memory.  However, a guest can access invalid physical addresses\nin such a way that the gfn is invalid.\n\n__gfn_to_hva_memslot is called from kvm_vcpu_gfn_to_hva_prot, which first\nretrieves a memslot through __gfn_to_memslot.  While __gfn_to_memslot\ndoes check that the gfn falls within the boundaries of the guest's\nphysical memory or not, a CPU can speculate the result of the check and\ncontinue execution speculatively using an illegal gfn. The speculation\ncan result in calculating an out-of-bounds hva.  If the resulting host\nvirtual address is used to load another guest physical address, this\nis effectively a Spectre gadget consisting of two consecutive reads,\nthe second of which is data dependent on the first.\n\nRight now it's not clear if there are any cases in which this is\nexploitable.  One interesting case was reported by the original author\nof this patch, and involves visiting guest page tables on x86.  Right\nnow these are not vulnerable because the hva read goes through get_user(),\nwhich contains an LFENCE speculation barrier.  However, there are\npatches in progress for x86 uaccess.h to mask kernel addresses instead of\nusing LFENCE; once these land, a guest could use speculation to read\nfrom the VMM's ring 3 address space.  Other architectures such as ARM\nalready use the address masking method, and would be susceptible to\nthis same kind of data-dependent access gadgets.  Therefore, this patch\nproactively protects from these attacks by masking out-of-bounds gfns\nin __gfn_to_hva_memslot, which blocks speculation of invalid hvas.\n\nSean Christopherson noted that this patch does not cover\nkvm_read_guest_offset_cached.  This however is limited to a few bytes\npast the end of the cache, and therefore it is unlikely to be useful in\nthe context of building a chain of data dependent accesses."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/22b87fb17a28d37331bb9c1110737627b17f6781","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3098b86390a6b9ea52657689f08410baf130ceff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/361ce3b917aff93123e9e966d8608655c967f438","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/740621309b25bbf619b8a0ba5fd50a8e58989441","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7af299b97734c7e7f465b42a2139ce4d77246975","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bff1fbf0cf0712686f1df59a83fba6e31d2746a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da27a83fd6cc7780fea190e1f5c19e87019da65c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed0e2a893092c7fcb4ff7ba74e5efce53a6f5940","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47278","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.143","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: pci_generic: Fix possible use-after-free in mhi_pci_remove()\n\nThis driver's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b67808ade8893a1b3608ddd74fac7854786c919","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c597d5c59c7a6417dba06590f59b922e01188e8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47279","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.210","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: misc: brcmstb-usb-pinmap: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2147684be1ebdaf845783139b9bc4eba3fecd9e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbf649cd6d64d40c03c5397ecd6b1ae922ba7afc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47280","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.277","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: Fix use-after-free read in drm_getunique()\n\nThere is a time-of-check-to-time-of-use error in drm_getunique() due\nto retrieving file_priv->master prior to locking the device's master\nmutex.\n\nAn example can be seen in the crash report of the use-after-free error\nfound by Syzbot:\nhttps:\/\/syzkaller.appspot.com\/bug?id=148d2f1dfac64af52ffd27b661981a540724f803\n\nIn the report, the master pointer was used after being freed. This is\nbecause another process had acquired the device's master mutex in\ndrm_setmaster_ioctl(), then overwrote fpriv->master in\ndrm_new_set_master(). The old value of fpriv->master was subsequently\nfreed before the mutex was unlocked.\n\nTo fix this, we lock the device's master mutex before retrieving the\npointer from from fpriv->master. This patch passes the Syzbot\nreproducer test."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17dab9326ff263c62dab1dbac4492e2938a049e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/491d52e0078860b33b6c14f0a7ac74ca1b603bd6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d233ba700ceb593905ea82b42dadb4ec8ef85e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b246b4c70c1250e7814f409b243000f9c0bf79a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b436acd1cf7fac0ba987abd22955d98025c80c2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f773f8cccac13c7e7bbd9182e7996c727742488e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47281","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.353","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: Fix race of snd_seq_timer_open()\n\nThe timer instance per queue is exclusive, and snd_seq_timer_open()\nshould have managed the concurrent accesses.  It looks as if it's\nchecking the already existing timer instance at the beginning, but\nit's not right, because there is no protection, hence any later\nconcurrent call of snd_seq_timer_open() may override the timer\ninstance easily.  This may result in UAF, as the leftover timer\ninstance can keep running while the queue itself gets closed, as\nspotted by syzkaller recently.\n\nFor avoiding the race, add a proper check at the assignment of\ntmr->timeri again, and return -EBUSY if it's been already registered."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/536a7646c00a0f14fee49e5e313109e5da2f6031","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83e197a8414c0ba545e7e3916ce05f836f349273","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd7d88b0874f82f7b29d1a53e574cedaf23166ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47282","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.430","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: bcm2835: Fix out-of-bounds access with more than 4 slaves\n\nCommit 571e31fa60b3 (\"spi: bcm2835: Cache CS register value for\n->prepare_message()\") limited the number of slaves to 3 at compile-time.\nThe limitation was necessitated by a statically-sized array prepare_cs[]\nin the driver private data which contains a per-slave register value.\n\nThe commit sought to enforce the limitation at run-time by setting the\ncontroller's num_chipselect to 3:  Slaves with a higher chipselect are\nrejected by spi_add_device().\n\nHowever the commit neglected that num_chipselect only limits the number\nof *native* chipselects.  If GPIO chipselects are specified in the\ndevice tree for more than 3 slaves, num_chipselect is silently raised by\nof_spi_get_gpio_numbers() and the result are out-of-bounds accesses to\nthe statically-sized array prepare_cs[].\n\nAs a bandaid fix which is backportable to stable, raise the number of\nallowed slaves to 24 (which \"ought to be enough for anybody\"), enforce\nthe limitation on slave ->setup and revert num_chipselect to 3 (which is\nthe number of native chipselects supported by the controller).\nAn upcoming for-next commit will allow an arbitrary number of slaves."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/01415ff85a24308059e06ca3e97fd7bf75648690","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13817d466eb8713a1ffd254f537402f091d48444","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82a8ffba54d31e97582051cb56ba1f988018681e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5502580cf958b094f3b69dfe4eece90eae01fbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47283","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.503","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet:sfc: fix non-freed irq in legacy irq mode\n\nSFC driver can be configured via modparam to work using MSI-X, MSI or\nlegacy IRQ interrupts. In the last one, the interrupt was not properly\nreleased on module remove.\n\nIt was not freed because the flag irqs_hooked was not set during\ninitialization in the case of using legacy IRQ.\n\nExample of (trimmed) trace during module remove without this fix:\n\nremove_proc_entry: removing non-empty directory 'irq\/125', leaking at least '0000:3b:00.1'\nWARNING: CPU: 39 PID: 3658 at fs\/proc\/generic.c:715 remove_proc_entry+0x15c\/0x170\n...trimmed...\nCall Trace:\n unregister_irq_proc+0xe3\/0x100\n free_desc+0x29\/0x70\n irq_free_descs+0x47\/0x70\n mp_unmap_irq+0x58\/0x60\n acpi_unregister_gsi_ioapic+0x2a\/0x40\n acpi_pci_irq_disable+0x78\/0xb0\n pci_disable_device+0xd1\/0x100\n efx_pci_remove+0xa1\/0x1e0 [sfc]\n pci_device_remove+0x38\/0xa0\n __device_release_driver+0x177\/0x230\n driver_detach+0xcb\/0x110\n bus_remove_driver+0x58\/0xd0\n pci_unregister_driver+0x2a\/0xb0\n efx_exit_module+0x24\/0xf40 [sfc]\n __do_sys_delete_module.constprop.0+0x171\/0x280\n ? exit_to_user_mode_prepare+0x83\/0x1d0\n do_syscall_64+0x3d\/0x80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\nRIP: 0033:0x7f9f9385800b\n...trimmed..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/81c4d1d83f88e15b26f4522a35cba6ffd8c5dfdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d717c9135a3340ae62d1699484850bfb4112b0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f03eeb6e0a0a0b8d617ee0a4bce729e47130036","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47284","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.577","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nisdn: mISDN: netjet: Fix crash in nj_probe:\n\n'nj_setup' in netjet.c might fail with -EIO and in this case\n'card->irq' is initialized and is bigger than zero. A subsequent call to\n'nj_release' will free the irq that has not been requested.\n\nFix this bug by deleting the previous assignment to 'card->irq' and just\nkeep the assignment before 'request_irq'.\n\nThe KASAN's log reveals it:\n\n[    3.354615 ] WARNING: CPU: 0 PID: 1 at kernel\/irq\/manage.c:1826\nfree_irq+0x100\/0x480\n[    3.355112 ] Modules linked in:\n[    3.355310 ] CPU: 0 PID: 1 Comm: swapper\/0 Not tainted\n5.13.0-rc1-00144-g25a1298726e #13\n[    3.355816 ] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04\/01\/2014\n[    3.356552 ] RIP: 0010:free_irq+0x100\/0x480\n[    3.356820 ] Code: 6e 08 74 6f 4d 89 f4 e8 5e ac 09 00 4d 8b 74 24 18\n4d 85 f6 75 e3 e8 4f ac 09 00 8b 75 c8 48 c7 c7 78 c1 2e 85 e8 e0 cf f5\nff <0f> 0b 48 8b 75 c0 4c 89 ff e8 72 33 0b 03 48 8b 43 40 4c 8b a0 80\n[    3.358012 ] RSP: 0000:ffffc90000017b48 EFLAGS: 00010082\n[    3.358357 ] RAX: 0000000000000000 RBX: ffff888104dc8000 RCX:\n0000000000000000\n[    3.358814 ] RDX: ffff8881003c8000 RSI: ffffffff8124a9e6 RDI:\n00000000ffffffff\n[    3.359272 ] RBP: ffffc90000017b88 R08: 0000000000000000 R09:\n0000000000000000\n[    3.359732 ] R10: ffffc900000179f0 R11: 0000000000001d04 R12:\n0000000000000000\n[    3.360195 ] R13: ffff888107dc6000 R14: ffff888107dc6928 R15:\nffff888104dc80a8\n[    3.360652 ] FS:  0000000000000000(0000) GS:ffff88817bc00000(0000)\nknlGS:0000000000000000\n[    3.361170 ] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    3.361538 ] CR2: 0000000000000000 CR3: 000000000582e000 CR4:\n00000000000006f0\n[    3.362003 ] DR0: 0000000000000000 DR1: 0000000000000000 DR2:\n0000000000000000\n[    3.362175 ] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:\n0000000000000400\n[    3.362175 ] Call Trace:\n[    3.362175 ]  nj_release+0x51\/0x1e0\n[    3.362175 ]  nj_probe+0x450\/0x950\n[    3.362175 ]  ? pci_device_remove+0x110\/0x110\n[    3.362175 ]  local_pci_probe+0x45\/0xa0\n[    3.362175 ]  pci_device_probe+0x12b\/0x1d0\n[    3.362175 ]  really_probe+0x2a9\/0x610\n[    3.362175 ]  driver_probe_device+0x90\/0x1d0\n[    3.362175 ]  ? mutex_lock_nested+0x1b\/0x20\n[    3.362175 ]  device_driver_attach+0x68\/0x70\n[    3.362175 ]  __driver_attach+0x124\/0x1b0\n[    3.362175 ]  ? device_driver_attach+0x70\/0x70\n[    3.362175 ]  bus_for_each_dev+0xbb\/0x110\n[    3.362175 ]  ? rdinit_setup+0x45\/0x45\n[    3.362175 ]  driver_attach+0x27\/0x30\n[    3.362175 ]  bus_add_driver+0x1eb\/0x2a0\n[    3.362175 ]  driver_register+0xa9\/0x180\n[    3.362175 ]  __pci_register_driver+0x82\/0x90\n[    3.362175 ]  ? w6692_init+0x38\/0x38\n[    3.362175 ]  nj_init+0x36\/0x38\n[    3.362175 ]  do_one_initcall+0x7f\/0x3d0\n[    3.362175 ]  ? rdinit_setup+0x45\/0x45\n[    3.362175 ]  ? rcu_read_lock_sched_held+0x4f\/0x80\n[    3.362175 ]  kernel_init_freeable+0x2aa\/0x301\n[    3.362175 ]  ? rest_init+0x2c0\/0x2c0\n[    3.362175 ]  kernel_init+0x18\/0x190\n[    3.362175 ]  ? rest_init+0x2c0\/0x2c0\n[    3.362175 ]  ? rest_init+0x2c0\/0x2c0\n[    3.362175 ]  ret_from_fork+0x1f\/0x30\n[    3.362175 ] Kernel panic - not syncing: panic_on_warn set ...\n[    3.362175 ] CPU: 0 PID: 1 Comm: swapper\/0 Not tainted\n5.13.0-rc1-00144-g25a1298726e #13\n[    3.362175 ] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\nrel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04\/01\/2014\n[    3.362175 ] Call Trace:\n[    3.362175 ]  dump_stack+0xba\/0xf5\n[    3.362175 ]  ? free_irq+0x100\/0x480\n[    3.362175 ]  panic+0x15a\/0x3f2\n[    3.362175 ]  ? __warn+0xf2\/0x150\n[    3.362175 ]  ? free_irq+0x100\/0x480\n[    3.362175 ]  __warn+0x108\/0x150\n[    3.362175 ]  ? free_irq+0x100\/0x480\n[    3.362175 ]  report_bug+0x119\/0x1c0\n[    3.362175 ]  handle_bug+0x3b\/0x80\n[    3.362175 ]  exc_invalid_op+0x18\/0x70\n[    3.362175 ]  asm_exc_invalid_op+0x12\/0x20\n[    3.362175 ] RIP: 0010:free_irq+0x100\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/143fc7220961220eecc04669e5909af8847bf8c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c1fcb6ec964b44edbf84235134582a5ffae1521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6249193e03709ea625e10706ecaf17fea0427d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/958cb1078ca60d214826fd90a0961a447fade59a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d7d4649dc1c53acf76df260fd519db698ed20d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f6f852550d0e1b7735651228116ae9d300f69b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0a37e4454ca1c0b424edc2c9c2487c2c46a1be6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf78e25bd3f487208e042c67c8a31706c2dba265","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47285","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.653","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/nfc\/rawsock.c: fix a permission check bug\n\nThe function rawsock_create() calls a privileged function sk_alloc(), which requires a ns-aware check to check net->user_ns, i.e., ns_capable(). However, the original code checks the init_user_ns using capable(). So we replace the capable() with ns_capable()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e5cab50208c8fb7351b798cb1d569debfeb994a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38cb2e23188af29c43966acee9dbb18b62e26cfe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ab78863e9eff11910e1ac8bcf478060c29b379e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90d0a3c76965d7a10fc87c07be3e9714e2130d5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c08e0be44759d0b5affc5888be4aa5e536873335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6a21a3fb03300fbaa9fc3ed99f8b0962ce28362","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec72482564ff99c6832d33610d9f8ab7ecc81b6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3ed12af6bbbaf79eddb0ae14656b8ecacea74f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47286","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.723","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: core: Validate channel ID when processing command completions\n\nMHI reads the channel ID from the event ring element sent by the\ndevice which can be any value between 0 and 255. In order to\nprevent any out of bound accesses, add a check against the maximum\nnumber of channels supported by the controller and those channels\nnot configured yet so as to skip processing of that event ring\nelement."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3efec3b4b16fc7af25676a94230a8ab2a3bb867c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/546362a9ef2ef40b57c6605f14e88ced507f8dd0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aed4f5b51aba41e2afd7cfda20a0571a6a67dfe9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47287","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.797","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: auxiliary bus: Fix memory leak when driver_register() fail\n\nIf driver_register() returns with error we need to free the memory\nallocated for auxdrv->driver.name before returning from\n__auxiliary_driver_register()"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4afa0c22eed33cfe0c590742387f0d16f32412f3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce5b3de58fc21303722df46551f7eb9a91afb409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47288","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.867","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: ngene: Fix out-of-bounds bug in ngene_command_config_free_buf()\n\nFix an 11-year old bug in ngene_command_config_free_buf() while\naddressing the following warnings caught with -Warray-bounds:\n\narch\/alpha\/include\/asm\/string.h:22:16: warning: '__builtin_memcpy' offset [12, 16] from the object at 'com' is out of the bounds of referenced subobject 'config' with type 'unsigned char' at offset 10 [-Warray-bounds]\narch\/x86\/include\/asm\/string_32.h:182:25: warning: '__builtin_memcpy' offset [12, 16] from the object at 'com' is out of the bounds of referenced subobject 'config' with type 'unsigned char' at offset 10 [-Warray-bounds]\n\nThe problem is that the original code is trying to copy 6 bytes of\ndata into a one-byte size member _config_ of the wrong structue\nFW_CONFIGURE_BUFFERS, in a single call to memcpy(). This causes a\nlegitimate compiler warning because memcpy() overruns the length\nof &com.cmd.ConfigureBuffers.config. It seems that the right\nstructure is FW_CONFIGURE_FREE_BUFFERS, instead, because it contains\n6 more members apart from the header _hdr_. Also, the name of\nthe function ngene_command_config_free_buf() suggests that the actual\nintention is to ConfigureFreeBuffers, instead of ConfigureBuffers\n(which takes place in the function ngene_command_config_buf(), above).\n\nFix this by enclosing those 6 members of struct FW_CONFIGURE_FREE_BUFFERS\ninto new struct config, and use &com.cmd.ConfigureFreeBuffers.config as\nthe destination address, instead of &com.cmd.ConfigureBuffers.config,\nwhen calling memcpy().\n\nThis also helps with the ongoing efforts to globally enable\n-Warray-bounds and get us closer to being able to tighten the\nFORTIFY_SOURCE routines on memcpy()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4487b968e5eacd02c493303dc2b61150bb7fe4b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d4abca95ecc82fc8c41912fa0085281f19cc29f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9a178f189bb6d75293573e181928735f5e3e070","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6ddeb63dd543b5474b0217c4e47538b7ffd7686","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e617fa62f6cf859a7b042cdd6c73af905ff8fca3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e818f2ff648581a6c553ae2bebc5dcef9a8bb90c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e991457afdcb5f4dbc5bc9d79eaf775be33e7092","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec731c6ef564ee6fc101fc5d73e3a3a953d09a00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47289","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:16.950","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nACPI: fix NULL pointer dereference\n\nCommit 71f642833284 (\"ACPI: utils: Fix reference counting in\nfor_each_acpi_dev_match()\") started doing \"acpi_dev_put()\" on a pointer\nthat was possibly NULL.  That fails miserably, because that helper\ninline function is not set up to handle that case.\n\nJust make acpi_dev_put() silently accept a NULL pointer, rather than\ncalling down to put_device() with an invalid offset off that NULL\npointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38f54217b423c0101d03a00feec6fb8ec608b12e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cae3fa3d8165761f3000f523b11cfa1cd35206bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccf23a0888077a25a0793a746c3941db2a7562e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc68f42aa737dc15e7665a4101d4168aadb8e4c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47290","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.027","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: target: Fix NULL dereference on XCOPY completion\n\nCPU affinity control added with commit 39ae3edda325 (\"scsi: target: core:\nMake completion affinity configurable\") makes target_complete_cmd() queue\nwork on a CPU based on se_tpg->se_tpg_wwn->cmd_compl_affinity state.\n\nLIO's EXTENDED COPY worker is a special case in that read\/write cmds are\ndispatched using the global xcopy_pt_tpg, which carries a NULL se_tpg_wwn\npointer following initialization in target_xcopy_setup_pt().\n\nThe NULL xcopy_pt_tpg->se_tpg_wwn pointer is dereferenced on completion of\nany EXTENDED COPY initiated read\/write cmds. E.g using the libiscsi\nSCSI.ExtendedCopy.Simple test:\n\n  BUG: kernel NULL pointer dereference, address: 00000000000001a8\n  RIP: 0010:target_complete_cmd+0x9d\/0x130 [target_core_mod]\n  Call Trace:\n   fd_execute_rw+0x148\/0x42a [target_core_file]\n   ? __dynamic_pr_debug+0xa7\/0xe0\n   ? target_check_reservation+0x5b\/0x940 [target_core_mod]\n   __target_execute_cmd+0x1e\/0x90 [target_core_mod]\n   transport_generic_new_cmd+0x17c\/0x330 [target_core_mod]\n   target_xcopy_issue_pt_cmd+0x9\/0x60 [target_core_mod]\n   target_xcopy_read_source.isra.7+0x10b\/0x1b0 [target_core_mod]\n   ? target_check_fua+0x40\/0x40 [target_core_mod]\n   ? transport_complete_task_attr+0x130\/0x130 [target_core_mod]\n   target_xcopy_do_work+0x61f\/0xc00 [target_core_mod]\n\nThis fix makes target_complete_cmd() queue work on se_cmd->cpuid if\nse_tpg_wwn is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a47fa41381a09e5997afd762664db4f5f6657e03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7732c5a19a15a62b0b23fd683a639b0483e1f40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47291","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.100","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: fix another slab-out-of-bounds in fib6_nh_flush_exceptions\n\nWhile running the self-tests on a KASAN enabled kernel, I observed a\nslab-out-of-bounds splat very similar to the one reported in\ncommit 821bbf79fe46 (\"ipv6: Fix KASAN: slab-out-of-bounds Read in\n fib6_nh_flush_exceptions\").\n\nWe additionally need to take care of fib6_metrics initialization\nfailure when the caller provides an nh.\n\nThe fix is similar, explicitly free the route instead of calling\nfib6_info_release on a half-initialized object."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/115784bcccf135c3a3548098153413d76f16aae0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/830251361425c5be044db4d826aaf304ea3d14c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fb4792f091e608a0a1d353dfdf07ef55a719db5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce8fafb68051fba52546f8bbe8621f7641683680","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47292","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.173","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: fix memleak in io_init_wq_offload()\n\nI got memory leak report when doing fuzz test:\n\nBUG: memory leak\nunreferenced object 0xffff888107310a80 (size 96):\ncomm \"syz-executor.6\", pid 4610, jiffies 4295140240 (age 20.135s)\nhex dump (first 32 bytes):\n01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................\n00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00 .....N..........\nbacktrace:\n[<000000001974933b>] kmalloc include\/linux\/slab.h:591 [inline]\n[<000000001974933b>] kzalloc include\/linux\/slab.h:721 [inline]\n[<000000001974933b>] io_init_wq_offload fs\/io_uring.c:7920 [inline]\n[<000000001974933b>] io_uring_alloc_task_context+0x466\/0x640 fs\/io_uring.c:7955\n[<0000000039d0800d>] __io_uring_add_tctx_node+0x256\/0x360 fs\/io_uring.c:9016\n[<000000008482e78c>] io_uring_add_tctx_node fs\/io_uring.c:9052 [inline]\n[<000000008482e78c>] __do_sys_io_uring_enter fs\/io_uring.c:9354 [inline]\n[<000000008482e78c>] __se_sys_io_uring_enter fs\/io_uring.c:9301 [inline]\n[<000000008482e78c>] __x64_sys_io_uring_enter+0xabc\/0xc20 fs\/io_uring.c:9301\n[<00000000b875f18f>] do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n[<00000000b875f18f>] do_syscall_64+0x3b\/0x90 arch\/x86\/entry\/common.c:80\n[<000000006b0a8484>] entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nCPU0                          CPU1\nio_uring_enter                io_uring_enter\nio_uring_add_tctx_node        io_uring_add_tctx_node\n__io_uring_add_tctx_node      __io_uring_add_tctx_node\nio_uring_alloc_task_context   io_uring_alloc_task_context\nio_init_wq_offload            io_init_wq_offload\nhash = kzalloc                hash = kzalloc\nctx->hash_map = hash          ctx->hash_map = hash <- one of the hash is leaked\n\nWhen calling io_uring_enter() in parallel, the 'hash_map' will be leaked,\nadd uring_lock to protect 'hash_map'."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/362a9e65289284f36403058eea2462d0330c1f24","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/502731a03f27cba1513fbbff77e508185ffce5bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47293","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.243","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: act_skbmod: Skip non-Ethernet packets\n\nCurrently tcf_skbmod_act() assumes that packets use Ethernet as their L2\nprotocol, which is not always the case.  As an example, for CAN devices:\n\n\t$ ip link add dev vcan0 type vcan\n\t$ ip link set up vcan0\n\t$ tc qdisc add dev vcan0 root handle 1: htb\n\t$ tc filter add dev vcan0 parent 1: protocol ip prio 10 \\\n\t\tmatchall action skbmod swap mac\n\nDoing the above silently corrupts all the packets.  Do not perform skbmod\nactions for non-Ethernet packets."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/071729150be9e1d1b851b70efb6d91ee9269d57b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34f1e1f657fae2891b485a3b2b95fe4d2aef9f0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/727d6a8b7ef3d25080fad228b2c4a1d4da5999c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a88414fb1117f2fe65fb88e45ba694e1d09d5024","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4fdca366806f6bab374d1a95e626a10a3854b0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47294","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.323","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Decrease sock refcount when sock timers expire\n\nCommit 63346650c1a9 (\"netrom: switch to sock timer API\") switched to use\nsock timer API. It replaces mod_timer() by sk_reset_timer(), and\ndel_timer() by sk_stop_timer().\n\nFunction sk_reset_timer() will increase the refcount of sock if it is\ncalled on an inactive timer, hence, in case the timer expires, we need to\ndecrease the refcount ourselves in the handler, otherwise, the sock\nrefcount will be unbalanced and the sock will never be freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/25df44e90ff5959b5c24ad361b648504a7e39ef3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48866fd5c361ea417ed24b43fc2a7dc2f5b060ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/517a16b1a88bdb6b530f48d5d153478b2552d9a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6811744bd0efb9e472cb15d066cdb460beb8cb8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/853262355518cd1247515b74e83fabf038aa6c29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9619cc7d97c3aa8ed3cfd2b8678b74fb6d6c7950","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a01634bf91f2b6c42583770eb6815fb6d1e251cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc1660206c3723c37ed4d622ad81781f1e987250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47295","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.400","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: fix memory leak in tcindex_partial_destroy_work\n\nSyzbot reported memory leak in tcindex_set_parms(). The problem was in\nnon-freed perfect hash in tcindex_partial_destroy_work().\n\nIn tcindex_set_parms() new tcindex_data is allocated and some fields from\nold one are copied to new one, but not the perfect hash. Since\ntcindex_partial_destroy_work() is the destroy function for old\ntcindex_data, we need to free perfect hash to avoid memory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8d7924ce85bae64e7a67c366c7c50840f49f3a62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e9662fde6d63c78eb1350f6167f64c9d71a865b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cac71d27745f92ee13f0ecc668ffe151a4a9c9b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5051bcece50140abd1a11a2d36dc3ec5484fc32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47296","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.477","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: PPC: Fix kvm_arch_vcpu_ioctl vcpu_load leak\n\nvcpu_put is not called if the user copy fails. This can result in preempt\nnotifier corruption and crashes, among other issues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9bafc34dc4ad0cef18727c557f21ed3c3304df50","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4a488915feaad38345cc01b80d52e8200ff5209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bc4188a2f56e821ea057aca6bf444e138d06c252","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e14ef1095387f764d95614d3ec9e4d07c82a3533","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f38527f1890543cdfca8dfd06f75f9887cce6151","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47297","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.553","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix uninit-value in caif_seqpkt_sendmsg\n\nWhen nr_segs equal to zero in iovec_from_user, the object\nmsg->msg_iter.iov is uninit stack memory in caif_seqpkt_sendmsg\nwhich is defined in ___sys_sendmsg. So we cann't just judge\nmsg->msg_iter.iov->base directlly. We can use nr_segs to judge\nmsg in caif_seqpkt_sendmsg whether has data buffers.\n\n=====================================================\nBUG: KMSAN: uninit-value in caif_seqpkt_sendmsg+0x693\/0xf60 net\/caif\/caif_socket.c:542\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0x1c9\/0x220 lib\/dump_stack.c:118\n kmsan_report+0xf7\/0x1e0 mm\/kmsan\/kmsan_report.c:118\n __msan_warning+0x58\/0xa0 mm\/kmsan\/kmsan_instr.c:215\n caif_seqpkt_sendmsg+0x693\/0xf60 net\/caif\/caif_socket.c:542\n sock_sendmsg_nosec net\/socket.c:652 [inline]\n sock_sendmsg net\/socket.c:672 [inline]\n ____sys_sendmsg+0x12b6\/0x1350 net\/socket.c:2343\n ___sys_sendmsg net\/socket.c:2397 [inline]\n __sys_sendmmsg+0x808\/0xc90 net\/socket.c:2480\n __compat_sys_sendmmsg net\/compat.c:656 [inline]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1582a02fecffcee306663035a295e28e1c4aaaff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/452c3ed7bf63721b07bc2238ed1261bb26027e85","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c6d8e2f7187b8e45a18c27acb7a3885f03ee3db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9413c0abb57f70a953b1116318d6aa478013c35d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/991e634360f2622a683b48dfe44fe6d9cb765a09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4c7797ab1517515f0d08b3bc1c6b48883889c54","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9d646acad2c3590e189bb5d5c86ab8bd8a2dfc3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffe31dd70b70a40cd6b21b78c1713a23e021843a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47298","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.657","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Fix potential memory leak on unlikely error case\n\nIf skb_linearize is needed and fails we could leak a msg on the error\nhandling. To fix ensure we kfree the msg block before returning error.\nFound during code review."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6c508a1c6c62793dc6e6872cad4b200097bab7c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/715f378f42909c401ec043f5150c4fdf57fb8889","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e6b27a69167f97c56b5437871d29e9722c3e470","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47299","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.743","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxdp, net: Fix use-after-free in bpf_xdp_link_release\n\nThe problem occurs between dev_get_by_index() and dev_xdp_attach_link().\nAt this point, dev_xdp_uninstall() is called. Then xdp link will not be\ndetached automatically when dev is released. But link->dev already\npoints to dev, when xdp link is released, dev will still be accessed,\nbut dev has been released.\n\ndev_get_by_index()        |\nlink->dev = dev           |\n                          |      rtnl_lock()\n                          |      unregister_netdevice_many()\n                          |          dev_xdp_uninstall()\n                          |      rtnl_unlock()\nrtnl_lock();              |\ndev_xdp_attach_link()     |\nrtnl_unlock();            |\n                          |      netdev_run_todo() \/\/ dev released\nbpf_xdp_link_release()    |\n    \/* access dev.        |\n       use-after-free *\/  |\n\n[   45.966867] BUG: KASAN: use-after-free in bpf_xdp_link_release+0x3b8\/0x3d0\n[   45.967619] Read of size 8 at addr ffff00000f9980c8 by task a.out\/732\n[   45.968297]\n[   45.968502] CPU: 1 PID: 732 Comm: a.out Not tainted 5.13.0+ #22\n[   45.969222] Hardware name: linux,dummy-virt (DT)\n[   45.969795] Call trace:\n[   45.970106]  dump_backtrace+0x0\/0x4c8\n[   45.970564]  show_stack+0x30\/0x40\n[   45.970981]  dump_stack_lvl+0x120\/0x18c\n[   45.971470]  print_address_description.constprop.0+0x74\/0x30c\n[   45.972182]  kasan_report+0x1e8\/0x200\n[   45.972659]  __asan_report_load8_noabort+0x2c\/0x50\n[   45.973273]  bpf_xdp_link_release+0x3b8\/0x3d0\n[   45.973834]  bpf_link_free+0xd0\/0x188\n[   45.974315]  bpf_link_put+0x1d0\/0x218\n[   45.974790]  bpf_link_release+0x3c\/0x58\n[   45.975291]  __fput+0x20c\/0x7e8\n[   45.975706]  ____fput+0x24\/0x30\n[   45.976117]  task_work_run+0x104\/0x258\n[   45.976609]  do_notify_resume+0x894\/0xaf8\n[   45.977121]  work_pending+0xc\/0x328\n[   45.977575]\n[   45.977775] The buggy address belongs to the page:\n[   45.978369] page:fffffc00003e6600 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x4f998\n[   45.979522] flags: 0x7fffe0000000000(node=0|zone=0|lastcpupid=0x3ffff)\n[   45.980349] raw: 07fffe0000000000 fffffc00003e6708 ffff0000dac3c010 0000000000000000\n[   45.981309] raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\n[   45.982259] page dumped because: kasan: bad access detected\n[   45.982948]\n[   45.983153] Memory state around the buggy address:\n[   45.983753]  ffff00000f997f80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   45.984645]  ffff00000f998000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[   45.985533] >ffff00000f998080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[   45.986419]                                               ^\n[   45.987112]  ffff00000f998100: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[   45.988006]  ffff00000f998180: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n[   45.988895] ==================================================================\n[   45.989773] Disabling lock debugging due to kernel taint\n[   45.990552] Kernel panic - not syncing: panic_on_warn set ...\n[   45.991166] CPU: 1 PID: 732 Comm: a.out Tainted: G    B             5.13.0+ #22\n[   45.991929] Hardware name: linux,dummy-virt (DT)\n[   45.992448] Call trace:\n[   45.992753]  dump_backtrace+0x0\/0x4c8\n[   45.993208]  show_stack+0x30\/0x40\n[   45.993627]  dump_stack_lvl+0x120\/0x18c\n[   45.994113]  dump_stack+0x1c\/0x34\n[   45.994530]  panic+0x3a4\/0x7d8\n[   45.994930]  end_report+0x194\/0x198\n[   45.995380]  kasan_report+0x134\/0x200\n[   45.995850]  __asan_report_load8_noabort+0x2c\/0x50\n[   45.996453]  bpf_xdp_link_release+0x3b8\/0x3d0\n[   45.997007]  bpf_link_free+0xd0\/0x188\n[   45.997474]  bpf_link_put+0x1d0\/0x218\n[   45.997942]  bpf_link_release+0x3c\/0x58\n[   45.998429]  __fput+0x20c\/0x7e8\n[   45.998833]  ____fput+0x24\/0x30\n[   45.999247]  task_work_run+0x104\/0x258\n[   45.999731]  do_notify_resume+0x894\/0xaf8\n[   46.000236]  work_pending\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5acc7d3e8d342858405fbbc671221f676b547ce7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7537dc73e69ad9c0b67ad24ad3ebee954ed0af6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca9ba1de8f09976b45ccc8e655c51c6201992139","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47300","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.820","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix tail_call_reachable rejection for interpreter when jit failed\n\nDuring testing of f263a81451c1 (\"bpf: Track subprog poke descriptors correctly\nand fix use-after-free\") under various failure conditions, for example, when\njit_subprogs() fails and tries to clean up the program to be run under the\ninterpreter, we ran into the following freeze:\n\n  [...]\n  #127\/8 tailcall_bpf2bpf_3:FAIL\n  [...]\n  [   92.041251] BUG: KASAN: slab-out-of-bounds in ___bpf_prog_run+0x1b9d\/0x2e20\n  [   92.042408] Read of size 8 at addr ffff88800da67f68 by task test_progs\/682\n  [   92.043707]\n  [   92.044030] CPU: 1 PID: 682 Comm: test_progs Tainted: G   O   5.13.0-53301-ge6c08cb33a30-dirty #87\n  [   92.045542] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04\/01\/2014\n  [   92.046785] Call Trace:\n  [   92.047171]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.047773]  ? __bpf_prog_run_args32+0x8b\/0xb0\n  [   92.048389]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.049019]  ? ktime_get+0x117\/0x130\n  [...] \/\/ few hundred [similar] lines more\n  [   92.659025]  ? ktime_get+0x117\/0x130\n  [   92.659845]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.660738]  ? __bpf_prog_run_args32+0x8b\/0xb0\n  [   92.661528]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.662378]  ? print_usage_bug+0x50\/0x50\n  [   92.663221]  ? print_usage_bug+0x50\/0x50\n  [   92.664077]  ? bpf_ksym_find+0x9c\/0xe0\n  [   92.664887]  ? ktime_get+0x117\/0x130\n  [   92.665624]  ? kernel_text_address+0xf5\/0x100\n  [   92.666529]  ? __kernel_text_address+0xe\/0x30\n  [   92.667725]  ? unwind_get_return_address+0x2f\/0x50\n  [   92.668854]  ? ___bpf_prog_run+0x15d4\/0x2e20\n  [   92.670185]  ? ktime_get+0x117\/0x130\n  [   92.671130]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.672020]  ? __bpf_prog_run_args32+0x8b\/0xb0\n  [   92.672860]  ? __bpf_prog_run_args64+0xc0\/0xc0\n  [   92.675159]  ? ktime_get+0x117\/0x130\n  [   92.677074]  ? lock_is_held_type+0xd5\/0x130\n  [   92.678662]  ? ___bpf_prog_run+0x15d4\/0x2e20\n  [   92.680046]  ? ktime_get+0x117\/0x130\n  [   92.681285]  ? __bpf_prog_run32+0x6b\/0x90\n  [   92.682601]  ? __bpf_prog_run64+0x90\/0x90\n  [   92.683636]  ? lock_downgrade+0x370\/0x370\n  [   92.684647]  ? mark_held_locks+0x44\/0x90\n  [   92.685652]  ? ktime_get+0x117\/0x130\n  [   92.686752]  ? lockdep_hardirqs_on+0x79\/0x100\n  [   92.688004]  ? ktime_get+0x117\/0x130\n  [   92.688573]  ? __cant_migrate+0x2b\/0x80\n  [   92.689192]  ? bpf_test_run+0x2f4\/0x510\n  [   92.689869]  ? bpf_test_timer_continue+0x1c0\/0x1c0\n  [   92.690856]  ? rcu_read_lock_bh_held+0x90\/0x90\n  [   92.691506]  ? __kasan_slab_alloc+0x61\/0x80\n  [   92.692128]  ? eth_type_trans+0x128\/0x240\n  [   92.692737]  ? __build_skb+0x46\/0x50\n  [   92.693252]  ? bpf_prog_test_run_skb+0x65e\/0xc50\n  [   92.693954]  ? bpf_prog_test_run_raw_tp+0x2d0\/0x2d0\n  [   92.694639]  ? __fget_light+0xa1\/0x100\n  [   92.695162]  ? bpf_prog_inc+0x23\/0x30\n  [   92.695685]  ? __sys_bpf+0xb40\/0x2c80\n  [   92.696324]  ? bpf_link_get_from_fd+0x90\/0x90\n  [   92.697150]  ? mark_held_locks+0x24\/0x90\n  [   92.698007]  ? lockdep_hardirqs_on_prepare+0x124\/0x220\n  [   92.699045]  ? finish_task_switch+0xe6\/0x370\n  [   92.700072]  ? lockdep_hardirqs_on+0x79\/0x100\n  [   92.701233]  ? finish_task_switch+0x11d\/0x370\n  [   92.702264]  ? __switch_to+0x2c0\/0x740\n  [   92.703148]  ? mark_held_locks+0x24\/0x90\n  [   92.704155]  ? __x64_sys_bpf+0x45\/0x50\n  [   92.705146]  ? do_syscall_64+0x35\/0x80\n  [   92.706953]  ? entry_SYSCALL_64_after_hwframe+0x44\/0xae\n  [...]\n\nTurns out that the program rejection from e411901c0b77 (\"bpf: allow for tailcalls\nin BPF subprograms for x64 JIT\") is buggy since env->prog->aux->tail_call_reachable\nis never true. Commit ebf7d1f508a7 (\"bpf, x64: rework pro\/epilogue and tailcall\nhandling in JIT\") added a tracker into check_max_stack_depth() which propagates\nthe tail_call_reachable condition throughout the subprograms. This info is then\nassigned to the subprogram's \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39f1735c8107ef43a53c4daf82f330d880488d8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dd0a6b8582ffbfa88351949d50eccd5b6694ade","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbb086074dab631ac43f8645cbac1d7b148e05c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47301","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.890","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigb: Fix use-after-free error during reset\n\nCleans the next descriptor to watch (next_to_watch) when cleaning the\nTX ring.\n\nFailure to do so can cause invalid memory accesses. If igb_poll() runs\nwhile the controller is reset this can lead to the driver try to free\na skb that was already freed.\n\n(The crash is harder to reproduce with the igb driver, but the same\npotential problem exists as the code is identical to igc)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7b292608db23ccbbfbfa50cdb155d01725d7a52e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88e0720133d42d34851c8721cf5f289a50a8710f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e24c12f2ff6d32fd9f057382f08e748ec97194c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3ccb18ed5ac3283c7b31ecc685b499e580d5492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7367f781e5a9ca5df9082b15b272b55e76931f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f153664d8e70c11d0371341613651e1130e20240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47302","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:17.960","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nigc: Fix use-after-free error during reset\n\nCleans the next descriptor to watch (next_to_watch) when cleaning the\nTX ring.\n\nFailure to do so can cause invalid memory accesses. If igc_poll() runs\nwhile the controller is being reset this can lead to the driver try to\nfree a skb that was already freed.\n\nLog message:\n\n [  101.525242] refcount_t: underflow; use-after-free.\n [  101.525251] WARNING: CPU: 1 PID: 646 at lib\/refcount.c:28 refcount_warn_saturate+0xab\/0xf0\n [  101.525259] Modules linked in: sch_etf(E) sch_mqprio(E) rfkill(E) intel_rapl_msr(E) intel_rapl_common(E)\n x86_pkg_temp_thermal(E) intel_powerclamp(E) coretemp(E) binfmt_misc(E) kvm_intel(E) kvm(E) irqbypass(E) crc32_pclmul(E)\n ghash_clmulni_intel(E) aesni_intel(E) mei_wdt(E) libaes(E) crypto_simd(E) cryptd(E) glue_helper(E) snd_hda_codec_hdmi(E)\n rapl(E) intel_cstate(E) snd_hda_intel(E) snd_intel_dspcfg(E) sg(E) soundwire_intel(E) intel_uncore(E) at24(E)\n soundwire_generic_allocation(E) iTCO_wdt(E) soundwire_cadence(E) intel_pmc_bxt(E) serio_raw(E) snd_hda_codec(E)\n iTCO_vendor_support(E) watchdog(E) snd_hda_core(E) snd_hwdep(E) snd_soc_core(E) snd_compress(E) snd_pcsp(E)\n soundwire_bus(E) snd_pcm(E) evdev(E) snd_timer(E) mei_me(E) snd(E) soundcore(E) mei(E) configfs(E) ip_tables(E) x_tables(E)\n autofs4(E) ext4(E) crc32c_generic(E) crc16(E) mbcache(E) jbd2(E) sd_mod(E) t10_pi(E) crc_t10dif(E) crct10dif_generic(E)\n i915(E) ahci(E) libahci(E) ehci_pci(E) igb(E) xhci_pci(E) ehci_hcd(E)\n [  101.525303]  drm_kms_helper(E) dca(E) xhci_hcd(E) libata(E) crct10dif_pclmul(E) cec(E) crct10dif_common(E) tsn(E) igc(E)\n e1000e(E) ptp(E) i2c_i801(E) crc32c_intel(E) psmouse(E) i2c_algo_bit(E) i2c_smbus(E) scsi_mod(E) lpc_ich(E) pps_core(E)\n usbcore(E) drm(E) button(E) video(E)\n [  101.525318] CPU: 1 PID: 646 Comm: irq\/37-enp7s0-T Tainted: G            E     5.10.30-rt37-tsn1-rt-ipipe #ipipe\n [  101.525320] Hardware name: SIEMENS AG SIMATIC IPC427D\/A5E31233588, BIOS V17.02.09 03\/31\/2017\n [  101.525322] RIP: 0010:refcount_warn_saturate+0xab\/0xf0\n [  101.525325] Code: 05 31 48 44 01 01 e8 f0 c6 42 00 0f 0b c3 80 3d 1f 48 44 01 00 75 90 48 c7 c7 78 a8 f3 a6 c6 05 0f 48\n 44 01 01 e8 d1 c6 42 00 <0f> 0b c3 80 3d fe 47 44 01 00 0f 85 6d ff ff ff 48 c7 c7 d0 a8 f3\n [  101.525327] RSP: 0018:ffffbdedc0917cb8 EFLAGS: 00010286\n [  101.525329] RAX: 0000000000000000 RBX: ffff98fd6becbf40 RCX: 0000000000000001\n [  101.525330] RDX: 0000000000000001 RSI: ffffffffa6f2700c RDI: 00000000ffffffff\n [  101.525332] RBP: ffff98fd6becc14c R08: ffffffffa7463d00 R09: ffffbdedc0917c50\n [  101.525333] R10: ffffffffa74c3578 R11: 0000000000000034 R12: 00000000ffffff00\n [  101.525335] R13: ffff98fd6b0b1000 R14: 0000000000000039 R15: ffff98fd6be35c40\n [  101.525337] FS:  0000000000000000(0000) GS:ffff98fd6e240000(0000) knlGS:0000000000000000\n [  101.525339] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [  101.525341] CR2: 00007f34135a3a70 CR3: 0000000150210003 CR4: 00000000001706e0\n [  101.525343] Call Trace:\n [  101.525346]  sock_wfree+0x9c\/0xa0\n [  101.525353]  unix_destruct_scm+0x7b\/0xa0\n [  101.525358]  skb_release_head_state+0x40\/0x90\n [  101.525362]  skb_release_all+0xe\/0x30\n [  101.525364]  napi_consume_skb+0x57\/0x160\n [  101.525367]  igc_poll+0xb7\/0xc80 [igc]\n [  101.525376]  ? sched_clock+0x5\/0x10\n [  101.525381]  ? sched_clock_cpu+0xe\/0x100\n [  101.525385]  net_rx_action+0x14c\/0x410\n [  101.525388]  __do_softirq+0xe9\/0x2f4\n [  101.525391]  __local_bh_enable_ip+0xe3\/0x110\n [  101.525395]  ? irq_finalize_oneshot.part.47+0xe0\/0xe0\n [  101.525398]  irq_forced_thread_fn+0x6a\/0x80\n [  101.525401]  irq_thread+0xe8\/0x180\n [  101.525403]  ? wake_threads_waitq+0x30\/0x30\n [  101.525406]  ? irq_thread_check_affinity+0xd0\/0xd0\n [  101.525408]  kthread+0x183\/0x1a0\n [  101.525412]  ? kthread_park+0x80\/0x80\n [  101.525415]  ret_from_fork+0x22\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/56ea7ed103b46970e171eb1c95916f393d64eeff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9508e0edfe369ac95d0825bcdca976436ce780f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e15f629036bac005fc758b4ad17896cf2312add4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea5e36b7367ea0a36ef73a163768f16d2977bd83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47303","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.037","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Track subprog poke descriptors correctly and fix use-after-free\n\nSubprograms are calling map_poke_track(), but on program release there is no\nhook to call map_poke_untrack(). However, on program release, the aux memory\n(and poke descriptor table) is freed even though we still have a reference to\nit in the element list of the map aux data. When we run map_poke_run(), we then\nend up accessing free'd memory, triggering KASAN in prog_array_map_poke_run():\n\n  [...]\n  [  402.824689] BUG: KASAN: use-after-free in prog_array_map_poke_run+0xc2\/0x34e\n  [  402.824698] Read of size 4 at addr ffff8881905a7940 by task hubble-fgs\/4337\n  [  402.824705] CPU: 1 PID: 4337 Comm: hubble-fgs Tainted: G          I       5.12.0+ #399\n  [  402.824715] Call Trace:\n  [  402.824719]  dump_stack+0x93\/0xc2\n  [  402.824727]  print_address_description.constprop.0+0x1a\/0x140\n  [  402.824736]  ? prog_array_map_poke_run+0xc2\/0x34e\n  [  402.824740]  ? prog_array_map_poke_run+0xc2\/0x34e\n  [  402.824744]  kasan_report.cold+0x7c\/0xd8\n  [  402.824752]  ? prog_array_map_poke_run+0xc2\/0x34e\n  [  402.824757]  prog_array_map_poke_run+0xc2\/0x34e\n  [  402.824765]  bpf_fd_array_map_update_elem+0x124\/0x1a0\n  [...]\n\nThe elements concerned are walked as follows:\n\n    for (i = 0; i < elem->aux->size_poke_tab; i++) {\n           poke = &elem->aux->poke_tab[i];\n    [...]\n\nThe access to size_poke_tab is a 4 byte read, verified by checking offsets\nin the KASAN dump:\n\n  [  402.825004] The buggy address belongs to the object at ffff8881905a7800\n                 which belongs to the cache kmalloc-1k of size 1024\n  [  402.825008] The buggy address is located 320 bytes inside of\n                 1024-byte region [ffff8881905a7800, ffff8881905a7c00)\n\nThe pahole output of bpf_prog_aux:\n\n  struct bpf_prog_aux {\n    [...]\n    \/* --- cacheline 5 boundary (320 bytes) --- *\/\n    u32                        size_poke_tab;        \/*   320     4 *\/\n    [...]\n\nIn general, subprograms do not necessarily manage their own data structures.\nFor example, BTF func_info and linfo are just pointers to the main program\nstructure. This allows reference counting and cleanup to be done on the latter\nwhich simplifies their management a bit. The aux->poke_tab struct, however,\ndid not follow this logic. The initial proposed fix for this use-after-free\nbug further embedded poke data tracking into the subprogram with proper\nreference counting. However, Daniel and Alexei questioned why we were treating\nthese objects special; I agree, its unnecessary. The fix here removes the per\nsubprogram poke table allocation and map tracking and instead simply points\nthe aux->poke_tab pointer at the main programs poke table. This way, map\ntracking is simplified to the main program and we do not need to manage them\nper subprogram.\n\nThis also means, bpf_prog_free_deferred(), which unwinds the program reference\ncounting and kfrees objects, needs to ensure that we don't try to double free\nthe poke_tab when free'ing the subprog structures. This is easily solved by\nNULL'ing the poke_tab pointer. The second detail is to ensure that per\nsubprogram JIT logic only does fixups on poke_tab[] entries it owns. To do\nthis, we add a pointer in the poke structure to point at the subprogram value\nso JITs can easily check while walking the poke_tab structure if the current\nentry belongs to the current program. The aux pointer is stable and therefore\nsuitable for such comparison. On the jit_subprogs() error path, we omit\ncleaning up the poke->aux field because these are only ever referenced from\nthe JIT side, but on error we will never make it to the JIT, so its fine to\nleave them dangling. Removing these pointers would complicate the error path\nfor no reason. However, we do need to untrack all poke descriptors from the\nmain program as otherwise they could race with the freeing of JIT memory from\nthe subprograms. Lastly, a748c6975dea3 (\"bpf: propagate poke des\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/599148d40366bd5d1d504a3a8fcd65e21107e500","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9f36bf3613c65cb587c70fac655c775d911409b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f263a81451c12da5a342d90572e317e611846f2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47304","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.110","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: fix tcp_init_transfer() to not reset icsk_ca_initialized\n\nThis commit fixes a bug (found by syzkaller) that could cause spurious\ndouble-initializations for congestion control modules, which could cause\nmemory leaks or other problems for congestion control modules (like CDG)\nthat allocate memory in their init functions.\n\nThe buggy scenario constructed by syzkaller was something like:\n\n(1) create a TCP socket\n(2) initiate a TFO connect via sendto()\n(3) while socket is in TCP_SYN_SENT, call setsockopt(TCP_CONGESTION),\n    which calls:\n       tcp_set_congestion_control() ->\n         tcp_reinit_congestion_control() ->\n           tcp_init_congestion_control()\n(4) receive ACK, connection is established, call tcp_init_transfer(),\n    set icsk_ca_initialized=0 (without first calling cc->release()),\n    call tcp_init_congestion_control() again.\n\nNote that in this sequence tcp_init_congestion_control() is called\ntwice without a cc->release() call in between. Thus, for CC modules\nthat allocate memory in their init() function, e.g, CDG, a memory leak\nmay occur. The syzkaller tool managed to find a reproducer that\ntriggered such a leak in CDG.\n\nThe bug was introduced when that commit 8919a9b31eb4 (\"tcp: Only init\ncongestion control if not initialized already\")\nintroduced icsk_ca_initialized and set icsk_ca_initialized to 0 in\ntcp_init_transfer(), missing the possibility for a sequence like the\none above, where a process could call setsockopt(TCP_CONGESTION) in\nstate TCP_SYN_SENT (i.e. after the connect() or TFO open sendmsg()),\nwhich would call tcp_init_congestion_control(). It did not intend to\nreset any initialization that the user had already explicitly made;\nit just missed the possibility of that particular sequence (which\nsyzkaller managed to find)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ad4ba3404931745a5977ad12db4f0c34080e52f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be5d1b61a2ad28c7e57fe8bfa277373e8ecffcdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe77b85828ca9ddc42977b79de9e40d18545b4fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47305","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.177","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-buf\/sync_file: Don't leak fences on merge failure\n\nEach add_fence() call does a dma_fence_get() on the relevant fence.  In\nthe error path, we weren't calling dma_fence_put() so all those fences\ngot leaked.  Also, in the krealloc_array failure case, we weren't\nfreeing the fences array.  Instead, ensure that i and fences are always\nzero-initialized and dma_fence_put() all the fences and kfree(fences) on\nevery error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d514185ae792d3a1903c8e1a83899aa996705ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19edcd97727aae9362444a859a24d99a8730cb27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19f51c2529339280d2c8c6427cd3e21ddf1ac3f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41f45e91c92c8480242ea448d54e28c753b13902","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0355a0ad31a1d677b2a4514206de4902bd550e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ffe000217c5068c5da07ccb1c0f8cce7ad767435","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47306","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.250","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fddi: fix UAF in fza_probe\n\nfp is netdev private data and it cannot be\nused after free_netdev() call. Using fp after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() after error message.\n\nTURBOchannel adapter\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04b06716838bfc26742dbed3ae1d3697fe5317ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdfbb51f7a437ae8ea91317a5c133ec13adf3c47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/deb7178eb940e2c5caca1b1db084a69b2e59b4c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f33605908a9b6063525e9f68e62d739948c5fccf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47307","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.320","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: prevent NULL deref in cifs_compose_mount_options()\n\nThe optional @ref parameter might contain an NULL node_name, so\nprevent dereferencing it in cifs_compose_mount_options().\n\nAddresses-Coverity: 1476408 (\"Explicit null dereferenced\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03313d1c3a2f086bb60920607ab79ac8f8578306","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ae3d181f4e912f51af7776ea165f199b16fc165d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e58c162789becede894d3e94c0ce6695a2ef5796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7d1fa65e74263d11f90ddd33b4d4cd905a93759","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47308","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.383","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix array index out of bound exception\n\nFix array index out of bound exception in fc_rport_prli_resp()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0fe70c15f9435bb3c50954778245d62ee38b0e03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44651522941c623e20882b3b443f23f77de1ea8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4921b1618045ffab71b1050bf0014df3313a2289","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8511293e643a18b248510ae5734e4f360754348c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4a54c54af2516caa9c145015844543cfc84316a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b27c4577557045f1ab3cdfeabfc7f3cd24aca1fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47309","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.453","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: validate lwtstate->data before returning from skb_tunnel_info()\n\nskb_tunnel_info() returns pointer of lwtstate->data as ip_tunnel_info\ntype without validation. lwtstate->data can have various types such as\nmpls_iptunnel_encap, etc and these are not compatible.\nSo skb_tunnel_info() should validate before returning that pointer.\n\nSplat looks like:\nBUG: KASAN: slab-out-of-bounds in vxlan_get_route+0x418\/0x4b0 [vxlan]\nRead of size 2 at addr ffff888106ec2698 by task ping\/811\n\nCPU: 1 PID: 811 Comm: ping Not tainted 5.13.0+ #1195\nCall Trace:\n dump_stack_lvl+0x56\/0x7b\n print_address_description.constprop.8.cold.13+0x13\/0x2ee\n ? vxlan_get_route+0x418\/0x4b0 [vxlan]\n ? vxlan_get_route+0x418\/0x4b0 [vxlan]\n kasan_report.cold.14+0x83\/0xdf\n ? vxlan_get_route+0x418\/0x4b0 [vxlan]\n vxlan_get_route+0x418\/0x4b0 [vxlan]\n [ ... ]\n vxlan_xmit_one+0x148b\/0x32b0 [vxlan]\n [ ... ]\n vxlan_xmit+0x25c5\/0x4780 [vxlan]\n [ ... ]\n dev_hard_start_xmit+0x1ae\/0x6e0\n __dev_queue_xmit+0x1f39\/0x31a0\n [ ... ]\n neigh_xmit+0x2f9\/0x940\n mpls_xmit+0x911\/0x1600 [mpls_iptunnel]\n lwtunnel_xmit+0x18f\/0x450\n ip_finish_output2+0x867\/0x2040\n [ ... ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2179d96ec702cc33ead02a9ce40ece599b8538c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67a9c94317402b826fc3db32afc8f39336803d97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83bdcfbd968bcc91a0632b7b625e4a9b0cba5e0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8aa13a86964cdec4fd969ef677c6614ff068641a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bb1589c89e61e3b182dd546f1021928ebb5c2a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a915379594f1e045421635c6316d8f3ffa018c58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b61d327cd3cc5ea591f3bf751dd11e034f388bb5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7f3c9df40515a6c6b46f36c4c94cf48a043f887","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47310","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.520","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ti: fix UAF in tlan_remove_one\n\npriv is netdev private data and it cannot be\nused after free_netdev() call. Using priv after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() at the end of the\nfunction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0336f8ffece62f882ab3012820965a786a983f70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0538b0ab7d2c396e385694228c7cdcd2d2c514e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93efab0ef2a607fff9166d447c4035f98b5db342","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0a817b2d308fac090a05cbbe80988e073ac5193","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a18a8d9cfbb112ad72e625372849adc3986fd6bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7e5563f2a7862a9e4796abb9908b092f677e3c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c263ae8c7e4c482387de5e6c89e213f8173fe8b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2a062fcfe1d6f1b0a86fa76ae21c277d65f4405","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47311","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.590","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: qcom\/emac: fix UAF in emac_remove\n\nadpt is netdev private data and it cannot be\nused after free_netdev() call. Using adpt after free_netdev()\ncan cause UAF bug. Fix it by moving free_netdev() at the end of the\nfunction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11e9d163d631198bb3eb41a677a61b499516c0f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b70ca92847c619d6264c7372ef74fcbfd1e048c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d04a42b926e682140776e54188f4a44f1f01a81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a225a6e07a57a1538d53637cb3d82bd3e477839","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad297cd2db8953e2202970e9504cab247b6c7cb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1e091331920f8fbfc747dcbd16263fcd71abb2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b560521eca03d0a2db6093a5a632cbdd0a0cf833","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47312","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.660","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: Fix dereference of null pointer flow\n\nIn the case where chain->flags & NFT_CHAIN_HW_OFFLOAD is false then\nnft_flow_rule_create is not called and flow is NULL. The subsequent\nerror handling execution via label err_destroy_flow_rule will lead\nto a null pointer dereference on flow when calling nft_flow_rule_destroy.\nSince the error path to err_destroy_flow_rule has to cater for null\nand non-null flows, only call nft_flow_rule_destroy if flow is non-null\nto fix this issue.\n\nAddresses-Coverity: (\"Explicity null dereference\")"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ca041f919f13783b0b03894783deee00dbca19a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70a5a1950cca02c5cd161bb3846b4d983eed97d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47313","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.727","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: CPPC: Fix potential memleak in cppc_cpufreq_cpu_init\n\nIt's a classic example of memleak, we allocate something, we fail and\nnever free the resources.\n\nMake sure we free all resources on policy ->init() failures."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b775383355755885b19d2acef977f1ca132e80a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1b2b2b61d30d7ce057ec17237c217d152ed97f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe2535a44904a77615a3af8e8fd7dafb98fb0e1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47314","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.790","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: fsl_ifc: fix leak of private memory on probe failure\n\nOn probe error the driver should free the memory allocated for private\nstructure.  Fix this by using resource-managed allocation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3b45b8a7d549bd92ec94b5357c2c2c1a7ed107e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/443f6ca6fd186b4fa4e6f377b6e19a91feb1a0d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/48ee69825f7480622ed447b0249123236d3b3ad0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7626ffbea708e5aba6912295c012d2b409a1769f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8018476756066e97ecb886c3dc024aeb7d5792ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e0d09b1232d0538066c40ed4c13086faccbdff6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6b45b4932f7b0c36b41fb56a35ad679ece939a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5789e23773f4a852fbfe244b63f675e265d3a7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee1aa737ba0b75ab8af3444c4ae5bdba36aed6e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47315","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.860","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmemory: fsl_ifc: fix leak of IO mapping on probe failure\n\nOn probe error the driver should unmap the IO memory.  Smatch reports:\n\n  drivers\/memory\/fsl_ifc.c:298 fsl_ifc_ctrl_probe() warn: 'fsl_ifc_ctrl_dev->gregs' not released on lines: 298."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/28f71fd81ebd3b386bf5c7c5539664156f7d72c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b132ab67fc7a358fff35e808fa65d4bea452521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b3b002de90738e3c85853a682ce7e0fa078d42b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83af5816308b490b05fc8fa27fc1bdc769df200a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d071d270afba468708faca5f7b6d9e656f75e27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94bc2fe46102d1e060fc749c0c19511e76c9995f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7a2bcb4a3731d68f938207f75ed3e1d41774510","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd051b3e184fa56eeb6276ee913ba4d48069024b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0d04b95e8ed0223844a1d58497c686fe2e4a955","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9213d4f372d30b5bc4d921795d6bed0c0e3eebf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47316","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:18.940","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix NULL dereference in nfs3svc_encode_getaclres\n\nIn error cases the dentry may be NULL.\n\nBefore 20798dfe249a, the encoder also checked dentry and\nd_really_is_positive(dentry), but that looks like overkill to me--zero\nstatus should be enough to guarantee a positive dentry.\n\nThis isn't the first time we've seen an error-case NULL dereference\nhidden in the initialization of a local variable in an xdr encoder.  But\nI went back through the other recent rewrites and didn't spot any\nsimilar bugs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/650e6f383a6eb40f7c0a010982a74ab4b6893870","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab1016d39cc052064e32f25ad18ef8767a0ee3b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47317","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.007","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/bpf: Fix detecting BPF atomic instructions\n\nCommit 91c960b0056672 (\"bpf: Rename BPF_XADD and prepare to encode other\natomics in .imm\") converted BPF_XADD to BPF_ATOMIC and added a way to\ndistinguish instructions based on the immediate field. Existing JIT\nimplementations were updated to check for the immediate field and to\nreject programs utilizing anything more than BPF_ADD (such as BPF_FETCH)\nin the immediate field.\n\nHowever, the check added to powerpc64 JIT did not look at the correct\nBPF instruction. Due to this, such programs would be accepted and\nincorrectly JIT'ed resulting in soft lockups, as seen with the atomic\nbounds test. Fix this by looking at the correct immediate value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d435b6d94b05dcfd836d758a63145aa566618e2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/419ac821766cbdb9fd85872bb3f1a589df05c94c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7284dab07e4d51d453cc42851fae9ec4fac6ef2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47318","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.080","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narch_topology: Avoid use-after-free for scale_freq_data\n\nCurrently topology_scale_freq_tick() (which gets called from\nscheduler_tick()) may end up using a pointer to \"struct\nscale_freq_data\", which was previously cleared by\ntopology_clear_scale_freq_source(), as there is no protection in place\nhere. The users of topology_clear_scale_freq_source() though needs a\nguarantee that the previously cleared scale_freq_data isn't used\nanymore, so they can free the related resources.\n\nSince topology_scale_freq_tick() is called from scheduler tick, we don't\nwant to add locking in there. Use the RCU update mechanism instead\n(which is already used by the scheduler's utilization update path) to\nguarantee race free updates here.\n\nsynchronize_rcu() makes sure that all RCU critical sections that started\nbefore it is called, will finish before it returns. And so the callers\nof topology_clear_scale_freq_source() don't need to worry about their\ncallback getting called anymore."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/83150f5d05f065fb5c12c612f119015cabdcc124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ccdf7e073170886bc370c613e269de610a794c4a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47319","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.147","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: Fix memory leak among suspend\/resume procedure\n\nThe vblk->vqs should be freed before we call init_vqs()\nin virtblk_restore()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04c6e60b884cb5e94ff32af46867fb41d5848358","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/102d6bc6475ab09bab579c18704e6cf8d898e93c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29a2f4a3214aa14d61cc9737c9f886dae9dbb710","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/381bde79d11e596002edfd914e6714291826967a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/600942d2fd49b90e44857d20c774b20d16f3130f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/863da837964c80c72e368a4f748c30d25daa1815","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b71ba22e7c6c6b279c66f53ee7818709774efa1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca2b8ae93a6da9839dc7f9eb9199b18aa03c3dae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd24da0db9f75ca11eaf6060f0ccb90e2f3be3b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47320","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.220","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: fix acl memory leak of posix_acl_create()\n\nWhen looking into another nfs xfstests report, I found acl and\ndefault_acl in nfs3_proc_create() and nfs3_proc_mknod() error\npaths are possibly leaked. Fix them in advance."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0704f617040c397ae73c1f88f3956787ec5d6529","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1fcb6fcd74a222d9ead54d405842fc763bb86262","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e3960f276b4574a9bb0dfa31a7497302f6363b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b515308ab875c7e8ada8e606fe0c64762da5ed4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/687cf32865b2d6960214bce523f2afac58dd3cd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a2b308a54c5ec224fedc753617f99b29ffcd883","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8fc86e9df6a6a03f5a8e15a3b7a5c75fd05aa38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cef9d9acb7c80ed6bace894b6334557fd493863b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0b32dc1409f7e65e4fcc34e236462268e69a357","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47321","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.297","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: Fix possible use-after-free by calling del_timer_sync()\n\nThis driver's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a053c4d716898a53c2e31c574a70ea0c37044a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c05dac488a660fe2925c047ecb119e7afaaeb1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58606882ad8ec6c39e0f40344b922921ef94ab4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66ba9cf929b1c4fabf545bd4c18f6f64e23e46e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bec568d7518b1504a602ed5376bb322e4dbb270","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca96b8ea5e74956071154bdb456778cc3027e79f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0212f095ab56672f6f36aabc605bda205e1e0bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db222f1477ad5692cd454709b714949807e5d111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecd620e0fb1ff7f78fdb593379b2e6938c99707a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47322","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.397","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nNFSv4: Fix an Oops in pnfs_mark_request_commit() when doing O_DIRECT\n\nFix an Oopsable condition in pnfs_mark_request_commit() when we're\nputting a set of writes on the commit list to reschedule them after a\nfailed pNFS attempt."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3731d44bba8e0116b052b1b374476c5f6dd9a456","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7ef8a3705542136a1e19b070e951f0730b2153","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7aec9f862411906f8c27071ba65a1e110ad7d2fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c96a2ee45be41d5a167e6332d202086752c36bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47323","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.467","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: sc520_wdt: Fix possible use-after-free in wdt_turnoff()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0015581a79bbf8e521f85dddb7d3e4a66b9f51d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2aef07017fae21c3d8acea9656b10e3b9c0f1e04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/522e75ed63f67e815d4ec0deace67df22d9ce78e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c56c5508dc20a6b133bc669fc34327a6711c24c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90b7c141132244e8e49a34a4c1e445cce33e07f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a173e3b62cf6dd3c4a0a10c8a82eedfcae81a566","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3c41ea5bc34d8c7b19e230d80e0e555c6f5057d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4565a8a2d6bffb05bfbec11399d261ec16fe373","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0feab82f6a0323f54d85e8b512a2be64f83648a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47324","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.543","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwatchdog: Fix possible use-after-free in wdt_startup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ac50a76cf3cd63db000648b3b19f3f98b8aaa76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/146cc288fb80c662c9c35e7bc58325d1ac0a7875","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63a3dc24bd053792f84cb4eef0168b1266202a02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/862f2b5a7c38762ac9e369daefbf361a91aca685","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8adbbe6c86bb13e14f8a19e036ae5f4f5661fd90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a397cb4576fc2fc802562418b3a50b8f67d60d31","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4ebf4a4692e84163a69444c70ad515de06e2259","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c08a6b31e4917034f0ed0cb457c3bb209576f542","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc9403097be52d57a5c9c35efa9be79d166a78af","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47325","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.613","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu: Fix arm_smmu_device refcount leak in address translation\n\nThe reference counting issue happens in several exception handling paths\nof arm_smmu_iova_to_phys_hard(). When those error scenarios occur, the\nfunction forgets to decrease the refcount of \"smmu\" increased by\narm_smmu_rpm_get(), causing a refcount leak.\n\nFix this issue by jumping to \"out\" label when those error scenarios\noccur."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f0c5ea09139777d90729d408b807021f2ea6492","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43d1aaa1965f9b58035196dac49b1e1e6c9c25eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f9741a9a91f25c89e04b408cd61e3ab050ce24b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c8f176d6a3fa18aa0f8875da6f7c672ed2a8554","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b11220803ad14a2a880cc06d8e01fe2548cc85b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47326","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.687","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/signal: Detect and prevent an alternate signal stack overflow\n\nThe kernel pushes context on to the userspace stack to prepare for the\nuser's signal handler. When the user has supplied an alternate signal\nstack, via sigaltstack(2), it is easy for the kernel to verify that the\nstack size is sufficient for the current hardware context.\n\nCheck if writing the hardware context to the alternate stack will exceed\nit's size. If yes, then instead of corrupting user-data and proceeding with\nthe original signal handler, an immediate SIGSEGV signal is delivered.\n\nRefactor the stack pointer check code from on_sig_stack() and use the new\nhelper.\n\nWhile the kernel allows new source code to discover and use a sufficient\nalternate signal stack size, this check is still necessary to protect\nbinaries with insufficient alternate signal stack size from data\ncorruption."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00fcd8f33e9b9f57115c3b1cfc4cb96450c18796","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2beb4a53fc3f1081cedc1c1a198c7f56cc4fc60c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74569cb9ed7bc60e395927f55d3dc3be143a0164","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74d6fcea1d896800e60f1c675137efebd1a6c9a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afb04d0b5543a5bf8e157b9119fbfc52606f4c11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47327","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.757","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommu\/arm-smmu: Fix arm_smmu_device refcount leak when arm_smmu_rpm_get fails\n\narm_smmu_rpm_get() invokes pm_runtime_get_sync(), which increases the\nrefcount of the \"smmu\" even though the return value is less than 0.\n\nThe reference counting issue happens in some error handling paths of\narm_smmu_rpm_get() in its caller functions. When arm_smmu_rpm_get()\nfails, the caller functions forget to decrease the refcount of \"smmu\"\nincreased by arm_smmu_rpm_get(), causing a refcount leak.\n\nFix this issue by calling pm_runtime_resume_and_get() instead of\npm_runtime_get_sync() in arm_smmu_rpm_get(), which can keep the refcount\nbalanced in case of failure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1adf30f198c26539a62d761e45af72cde570413d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3761ae0d0e549f2acdaf11f49df4ed06d256b20f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4007596fbdabc29f858dc2e1990858a146b60b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbf4daa6f4105e01fbd3868006f65c163365c1e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe92c058199067ae90cf2a901ddf3c271893557a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47328","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.823","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: iscsi: Fix conn use after free during resets\n\nIf we haven't done a unbind target call we can race where\niscsi_conn_teardown wakes up the EH thread and then frees the conn while\nthose threads are still accessing the conn ehwait.\n\nWe can only do one TMF per session so this just moves the TMF fields from\nthe conn to the session. We can then rely on the\niscsi_session_teardown->iscsi_remove_session->__iscsi_unbind_session call\nto remove the target and it's devices, and know after that point there is\nno device or scsi-ml callout trying to access the session."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/89812e7957ab0746eab66ed6fc49d52bb4dca250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf20d85a88384574fabb3d53ad62a8af57e7ab11","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d04958a348e560938410e04a12fb99da9c7e6a00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec29d0ac29be366450a7faffbcf8cba3a6a3b506","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0a031f7c55ffd944fead1ddaf2aa94df9a158c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa9542b35ceb4202e8f8d65f440529a63524dca9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47329","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.910","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: megaraid_sas: Fix resource leak in case of probe failure\n\nThe driver doesn't clean up all the allocated resources properly when\nscsi_add_host(), megasas_start_aen() function fails during the PCI device\nprobe.\n\nClean up all those resources."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/04b6b9ea80906e3b41ff120b45db31768947cf72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0680db6f41920b2c91c7df3cc9cd5968701a6f74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0c6226601c3e191a44a57d8f9f814b7e5c308959","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5438f48fdd8e1c3f130d32637511efd32038152","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e623f79691c5104317669ab36ec316a90c05062f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47330","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:19.977","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: 8250: serial_cs: Fix a memory leak in error handling path\n\nIn the probe function, if the final 'serial_config()' fails, 'info' is\nleaking.\n\nAdd a resource handling path to free this memory."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/331f5923fce4f45b8170ccf06c529e8eb28f37bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34f4590f5ec9859ea9136249f528173d150bd584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a80f71601af015856a0aeb1e3c294037ac3dd32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b2ef1f5de40342de44fc5355321595f91774dab5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5a2799cd62ed30c81b22c23028d9ee374e2138c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c39cf4df19acf0133fa284a8cd83fad42cd13cc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cddee5c287e26f6b2ba5c0ffdfc3a846f2f10461","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ee16bed959862a6de2913f71a04cb563d7237b67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fad92b11047a748c996ebd6cfb164a63814eeb2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47331","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.067","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: common: usb-conn-gpio: fix NULL pointer dereference of charger\n\nWhen power on system with OTG cable, IDDIG's interrupt arises before\nthe charger registration, it will cause a NULL pointer dereference,\nfix the issue by registering the power supply before requesting\nIDDIG\/VBUS irq."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a133a0996d6b4c83509d570ed4edcba34c44f25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/436906fd248e018403bcda61a9311d9af02912f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/880287910b1892ed2cb38977893b947382a09d21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e8d910e9a3a7fba86140aff4924c30955ab228b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47332","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.133","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usx2y: Don't call free_pages_exact() with NULL address\n\nUnlike some other functions, we can't pass NULL pointer to\nfree_pages_exact().  Add a proper NULL check for avoiding possible\nOops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7d7f30cf182e55023fa8fde4c084b2d37c6be69d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82e5ee742fdd8874fe996181b87fafe1eb5f1196","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88262229b778f4f7a896da828d966f94dcb35d19","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bee295f5e03510252d18b25cc1d26230256eb87a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cae0cf651adccee2c3f376e78f30fbd788d0829f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47333","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.200","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: alcor_pci: fix null-ptr-deref when there is no PCI bridge\n\nThere is an issue with the ASPM(optional) capability checking function.\nA device might be attached to root complex directly, in this case,\nbus->self(bridge) will be NULL, thus priv->parent_pdev is NULL.\nSince alcor_pci_init_check_aspm(priv->parent_pdev) checks the PCI link's\nASPM capability and populate parent_cap_off, which will be used later by\nalcor_pci_aspm_ctrl() to dynamically turn on\/off device, what we can do\nhere is to avoid checking the capability if we are on the root complex.\nThis will make pdev_cap_off 0 and alcor_pci_aspm_ctrl() will simply\nreturn when bring called, effectively disable ASPM for the device.\n\n[    1.246492] BUG: kernel NULL pointer dereference, address: 00000000000000c0\n[    1.248731] RIP: 0010:pci_read_config_byte+0x5\/0x40\n[    1.253998] Call Trace:\n[    1.254131]  ? alcor_pci_find_cap_offset.isra.0+0x3a\/0x100 [alcor_pci]\n[    1.254476]  alcor_pci_probe+0x169\/0x2d5 [alcor_pci]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09d154990ca82d14aed2b72796f6c8845e2e605d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ce3e45cc333da707d4d6eb433574b990bcc26f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/58f69684ba03e5b0e0a3ae844a845280c0f06309","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/717cf5ae52322ddbdf3ac2c584b34c5970b0d174","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2639ffdcad463b358b6bef8645ff81715daffcb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47334","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.273","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmisc\/libmasm\/module: Fix two use after free in ibmasm_init_one\n\nIn ibmasm_init_one, it calls ibmasm_init_remote_input_dev().\nInside ibmasm_init_remote_input_dev, mouse_dev and keybd_dev are\nallocated by input_allocate_device(), and assigned to\nsp->remote.mouse_dev and sp->remote.keybd_dev respectively.\n\nIn the err_free_devices error branch of ibmasm_init_one,\nmouse_dev and keybd_dev are freed by input_free_device(), and return\nerror. Then the execution runs into error_send_message error branch\nof ibmasm_init_one, where ibmasm_free_remote_input_dev(sp) is called\nto unregister the freed sp->remote.mouse_dev and sp->remote.keybd_dev.\n\nMy patch add a \"error_init_remote\" label to handle the error of\nibmasm_init_remote_input_dev(), to avoid the uaf bugs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1512e7dc5eb08b7d92a12e2bfcd9cb8c4a1ec069","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/29ba8e2ba89ee2862a26d91204dd5fe77ceee25a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38660031e80eaa6cc9370b031c180612f414b00d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/481a76d4749ee3a27f902ba213fdcbb4bb39720e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b06ca113bf197aab2ab61288f42506e0049fbab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7272b591c4cb9327c43443f67b8fbae7657dd9ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7268e8a227d5a4f0bd1584f556246b0224ab274","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9c87ce3bc6331f82811a8cf8e930423c22523a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef1067d2baa847d53c9988510d99fb494de4d12c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47335","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.350","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to avoid racing on fsync_entry_slab by multi filesystem instances\n\nAs syzbot reported, there is an use-after-free issue during f2fs recovery:\n\nUse-after-free write at 0xffff88823bc16040 (in kfence-#10):\n kmem_cache_destroy+0x1f\/0x120 mm\/slab_common.c:486\n f2fs_recover_fsync_data+0x75b0\/0x8380 fs\/f2fs\/recovery.c:869\n f2fs_fill_super+0x9393\/0xa420 fs\/f2fs\/super.c:3945\n mount_bdev+0x26c\/0x3a0 fs\/super.c:1367\n legacy_get_tree+0xea\/0x180 fs\/fs_context.c:592\n vfs_get_tree+0x86\/0x270 fs\/super.c:1497\n do_new_mount fs\/namespace.c:2905 [inline]\n path_mount+0x196f\/0x2be0 fs\/namespace.c:3235\n do_mount fs\/namespace.c:3248 [inline]\n __do_sys_mount fs\/namespace.c:3456 [inline]\n __se_sys_mount+0x2f9\/0x3b0 fs\/namespace.c:3433\n do_syscall_64+0x3f\/0xb0 arch\/x86\/entry\/common.c:47\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nThe root cause is multi f2fs filesystem instances can race on accessing\nglobal fsync_entry_slab pointer, result in use-after-free issue of slab\ncache, fixes to init\/destroy this slab cache only once during module\ninit\/destroy procedure to avoid this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/79fa5d944c875711253a23b8155b36883c696409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86786603014e0a22d0d6af8e80ae4b8687927048","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cad83c968c2ebe97905f900326988ed37146c347","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e472b276a0d2180808009be38105e12754432e2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47336","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.437","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmackfs: restrict bytes count in smk_set_cipso()\n\nOops, I failed to update subject line.\n\nFrom 07571157c91b98ce1a4aa70967531e64b78e8346 Mon Sep 17 00:00:00 2001\nDate: Mon, 12 Apr 2021 22:25:06 +0900\nSubject: [PATCH] smackfs: restrict bytes count in smk_set_cipso()\n\nCommit 7ef4c19d245f3dc2 (\"smackfs: restrict bytes count in smackfs write\nfunctions\") missed that count > SMK_CIPSOMAX check applies to only\nformat == SMK_FIXED24_FMT case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/135122f174c357b7a3e58f40fa5792156c5e93e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/258fd821f69378453c071b9dd767b298810fc766","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3780348c1a0e14ffefcaf1fc521f815bcaac94b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49ec114a6e62d8d320037ce71c1aaf9650b3cafd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c2dca9a7a7ff6a2df34158903515e2e4fd3d2b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f9880403e6b71d56924748ba331daf836243fca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5c773a2871cf446e3f36b2834fb25bbb28512b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbd87ba6a13891acf6180783f8234a8b7a3e3d4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47337","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.527","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: core: Fix bad pointer dereference when ehandler kthread is invalid\n\nCommit 66a834d09293 (\"scsi: core: Fix error handling of scsi_host_alloc()\")\nchanged the allocation logic to call put_device() to perform host cleanup\nwith the assumption that IDA removal and stopping the kthread would\nproperly be performed in scsi_host_dev_release(). However, in the unlikely\ncase that the error handler thread fails to spawn, shost->ehandler is set\nto ERR_PTR(-ENOMEM).\n\nThe error handler cleanup code in scsi_host_dev_release() will call\nkthread_stop() if shost->ehandler != NULL which will always be the case\nwhether the kthread was successfully spawned or not. In the case that it\nfailed to spawn this has the nasty side effect of trying to dereference an\ninvalid pointer when kthread_stop() is called. The following splat provides\nan example of this behavior in the wild:\n\nscsi host11: error handler thread failed to spawn, error = -4\nKernel attempted to read user page (10c) - exploit attempt? (uid: 0)\nBUG: Kernel NULL pointer dereference on read at 0x0000010c\nFaulting instruction address: 0xc00000000818e9a8\nOops: Kernel access of bad area, sig: 11 [#1]\nLE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: ibmvscsi(+) scsi_transport_srp dm_multipath dm_mirror dm_region\n hash dm_log dm_mod fuse overlay squashfs loop\nCPU: 12 PID: 274 Comm: systemd-udevd Not tainted 5.13.0-rc7 #1\nNIP:  c00000000818e9a8 LR: c0000000089846e8 CTR: 0000000000007ee8\nREGS: c000000037d12ea0 TRAP: 0300   Not tainted  (5.13.0-rc7)\nMSR:  800000000280b033 &lt;SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE&gt;  CR: 28228228\nXER: 20040001\nCFAR: c0000000089846e4 DAR: 000000000000010c DSISR: 40000000 IRQMASK: 0\nGPR00: c0000000089846e8 c000000037d13140 c000000009cc1100 fffffffffffffffc\nGPR04: 0000000000000001 0000000000000000 0000000000000000 c000000037dc0000\nGPR08: 0000000000000000 c000000037dc0000 0000000000000001 00000000fffff7ff\nGPR12: 0000000000008000 c00000000a049000 c000000037d13d00 000000011134d5a0\nGPR16: 0000000000001740 c0080000190d0000 c0080000190d1740 c000000009129288\nGPR20: c000000037d13bc0 0000000000000001 c000000037d13bc0 c0080000190b7898\nGPR24: c0080000190b7708 0000000000000000 c000000033bb2c48 0000000000000000\nGPR28: c000000046b28280 0000000000000000 000000000000010c fffffffffffffffc\nNIP [c00000000818e9a8] kthread_stop+0x38\/0x230\nLR [c0000000089846e8] scsi_host_dev_release+0x98\/0x160\nCall Trace:\n[c000000033bb2c48] 0xc000000033bb2c48 (unreliable)\n[c0000000089846e8] scsi_host_dev_release+0x98\/0x160\n[c00000000891e960] device_release+0x60\/0x100\n[c0000000087e55c4] kobject_release+0x84\/0x210\n[c00000000891ec78] put_device+0x28\/0x40\n[c000000008984ea4] scsi_host_alloc+0x314\/0x430\n[c0080000190b38bc] ibmvscsi_probe+0x54\/0xad0 [ibmvscsi]\n[c000000008110104] vio_bus_probe+0xa4\/0x4b0\n[c00000000892a860] really_probe+0x140\/0x680\n[c00000000892aefc] driver_probe_device+0x15c\/0x200\n[c00000000892b63c] device_driver_attach+0xcc\/0xe0\n[c00000000892b740] __driver_attach+0xf0\/0x200\n[c000000008926f28] bus_for_each_dev+0xa8\/0x130\n[c000000008929ce4] driver_attach+0x34\/0x50\n[c000000008928fc0] bus_add_driver+0x1b0\/0x300\n[c00000000892c798] driver_register+0x98\/0x1a0\n[c00000000810eb60] __vio_register_driver+0x80\/0xe0\n[c0080000190b4a30] ibmvscsi_module_init+0x9c\/0xdc [ibmvscsi]\n[c0000000080121d0] do_one_initcall+0x60\/0x2d0\n[c000000008261abc] do_init_module+0x7c\/0x320\n[c000000008265700] load_module+0x2350\/0x25b0\n[c000000008265cb4] __do_sys_finit_module+0xd4\/0x160\n[c000000008031110] system_call_exception+0x150\/0x2d0\n[c00000000800d35c] system_call_common+0xec\/0x278\n\nFix this be nulling shost->ehandler when the kthread fails to spawn."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/887bfae2732b5b02a86a859fd239d34f7ff93c05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e4212ecf0713dd57d0e3209a66201da582149b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93aa71ad7379900e61c8adff6a710a4c18c7c99b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1671d2d2ef8a84837eea1b4d99ca0c6a66fb691","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2f0b960d07e52bb664471b4de0ed8b08c636b3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1bd3fac2baa3d5c04375980c1d5263a3335af92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea518b70ed5e4598c8d706f37fc16f7b06e440bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f3d0a109240c9bed5c60d819014786be3a2fe515","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47338","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.610","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbmem: Do not delete the mode that is still in use\n\nThe execution of fb_delete_videomode() is not based on the result of the\nprevious fbcon_mode_deleted(). As a result, the mode is directly deleted,\nregardless of whether it is still in use, which may cause UAF.\n\n==================================================================\nBUG: KASAN: use-after-free in fb_mode_is_equal+0x36e\/0x5e0 \\\ndrivers\/video\/fbdev\/core\/modedb.c:924\nRead of size 4 at addr ffff88807e0ddb1c by task syz-executor.0\/18962\n\nCPU: 2 PID: 18962 Comm: syz-executor.0 Not tainted 5.10.45-rc1+ #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ...\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0x137\/0x1be lib\/dump_stack.c:118\n print_address_description+0x6c\/0x640 mm\/kasan\/report.c:385\n __kasan_report mm\/kasan\/report.c:545 [inline]\n kasan_report+0x13d\/0x1e0 mm\/kasan\/report.c:562\n fb_mode_is_equal+0x36e\/0x5e0 drivers\/video\/fbdev\/core\/modedb.c:924\n fbcon_mode_deleted+0x16a\/0x220 drivers\/video\/fbdev\/core\/fbcon.c:2746\n fb_set_var+0x1e1\/0xdb0 drivers\/video\/fbdev\/core\/fbmem.c:975\n do_fb_ioctl+0x4d9\/0x6e0 drivers\/video\/fbdev\/core\/fbmem.c:1108\n vfs_ioctl fs\/ioctl.c:48 [inline]\n __do_sys_ioctl fs\/ioctl.c:753 [inline]\n __se_sys_ioctl+0xfb\/0x170 fs\/ioctl.c:739\n do_syscall_64+0x2d\/0x70 arch\/x86\/entry\/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nFreed by task 18960:\n kasan_save_stack mm\/kasan\/common.c:48 [inline]\n kasan_set_track+0x3d\/0x70 mm\/kasan\/common.c:56\n kasan_set_free_info+0x17\/0x30 mm\/kasan\/generic.c:355\n __kasan_slab_free+0x108\/0x140 mm\/kasan\/common.c:422\n slab_free_hook mm\/slub.c:1541 [inline]\n slab_free_freelist_hook+0xd6\/0x1a0 mm\/slub.c:1574\n slab_free mm\/slub.c:3139 [inline]\n kfree+0xca\/0x3d0 mm\/slub.c:4121\n fb_delete_videomode+0x56a\/0x820 drivers\/video\/fbdev\/core\/modedb.c:1104\n fb_set_var+0x1f3\/0xdb0 drivers\/video\/fbdev\/core\/fbmem.c:978\n do_fb_ioctl+0x4d9\/0x6e0 drivers\/video\/fbdev\/core\/fbmem.c:1108\n vfs_ioctl fs\/ioctl.c:48 [inline]\n __do_sys_ioctl fs\/ioctl.c:753 [inline]\n __se_sys_ioctl+0xfb\/0x170 fs\/ioctl.c:739\n do_syscall_64+0x2d\/0x70 arch\/x86\/entry\/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/087bff9acd2ec6db3f61aceb3224bde90fe0f7f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0af778269a522c988ef0b4188556aba97fb420cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/359311b85ebec7c07c3a08ae2f3def946cad33fa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d6e76469157d8f240e5dec6f8411aa8d306b1126","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f193509afc7ff37a46862610c93b896044d5b693","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47339","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.693","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: v4l2-core: explicitly clear ioctl input data\n\nAs seen from a recent syzbot bug report, mistakes in the compat ioctl\nimplementation can lead to uninitialized kernel stack data getting used\nas input for driver ioctl handlers.\n\nThe reported bug is now fixed, but it's possible that other related\nbugs are still present or get added in the future. As the drivers need\nto check user input already, the possible impact is fairly low, but it\nmight still cause an information leak.\n\nTo be on the safe side, always clear the entire ioctl buffer before\ncalling the conversion handler functions that are meant to initialize\nthem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7b53cca764f9b291b7907fcd39d9e66ad728ee0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfb48b54db25c3b4ef4bef5e0691464ebc4aa335","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc02c0b2bd6096f2f3ce63e1fc317aeda05f74d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47340","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.770","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix GPF in diFree\n\nAvoid passing inode with\nJFS_SBI(inode->i_sb)->ipimap == NULL to\ndiFree()[1]. GFP will appear:\n\n\tstruct inode *ipimap = JFS_SBI(ip->i_sb)->ipimap;\n\tstruct inomap *imap = JFS_IP(ipimap)->i_imap;\n\nJFS_IP() will return invalid pointer when ipimap == NULL\n\nCall Trace:\n diFree+0x13d\/0x2dc0 fs\/jfs\/jfs_imap.c:853 [1]\n jfs_evict_inode+0x2c9\/0x370 fs\/jfs\/inode.c:154\n evict+0x2ed\/0x750 fs\/inode.c:578\n iput_final fs\/inode.c:1654 [inline]\n iput.part.0+0x3fe\/0x820 fs\/inode.c:1680\n iput+0x58\/0x70 fs\/inode.c:1670"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3bb27e27240289b47d3466f647a55c567adbdc3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42f102ea1943ecb10a0756bf75424de5d1d5beed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49def1b0644892e3b113673c13d650c3060b43bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/745c9a59422c63f661f4374ed5181740db4130a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bde24bde490f3139eee147efc6d60d6040fe975","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8018936950360f1c503bb385e158cfc5e4945d18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d574f985fe33efd6911f4d752de6f485a1ea732","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a21e5cb1a64c904f1f0ef7b2d386fc7d2b1d2ce2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aff8d95b69051d0cf4acc3d91f22299fdbb9dfb3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47341","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.850","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: mmio: Fix use-after-free Read in kvm_vm_ioctl_unregister_coalesced_mmio\n\nBUG: KASAN: use-after-free in kvm_vm_ioctl_unregister_coalesced_mmio+0x7c\/0x1ec arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/coalesced_mmio.c:183\nRead of size 8 at addr ffff0000c03a2500 by task syz-executor083\/4269\n\nCPU: 5 PID: 4269 Comm: syz-executor083 Not tainted 5.10.0 #7\nHardware name: linux,dummy-virt (DT)\nCall trace:\n dump_backtrace+0x0\/0x2d0 arch\/arm64\/kernel\/stacktrace.c:132\n show_stack+0x28\/0x34 arch\/arm64\/kernel\/stacktrace.c:196\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0x110\/0x164 lib\/dump_stack.c:118\n print_address_description+0x78\/0x5c8 mm\/kasan\/report.c:385\n __kasan_report mm\/kasan\/report.c:545 [inline]\n kasan_report+0x148\/0x1e4 mm\/kasan\/report.c:562\n check_memory_region_inline mm\/kasan\/generic.c:183 [inline]\n __asan_load8+0xb4\/0xbc mm\/kasan\/generic.c:252\n kvm_vm_ioctl_unregister_coalesced_mmio+0x7c\/0x1ec arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/coalesced_mmio.c:183\n kvm_vm_ioctl+0xe30\/0x14c4 arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:3755\n vfs_ioctl fs\/ioctl.c:48 [inline]\n __do_sys_ioctl fs\/ioctl.c:753 [inline]\n __se_sys_ioctl fs\/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88\/0x131c fs\/ioctl.c:739\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:36 [inline]\n invoke_syscall arch\/arm64\/kernel\/syscall.c:48 [inline]\n el0_svc_common arch\/arm64\/kernel\/syscall.c:158 [inline]\n do_el0_svc+0x120\/0x290 arch\/arm64\/kernel\/syscall.c:220\n el0_svc+0x1c\/0x28 arch\/arm64\/kernel\/entry-common.c:367\n el0_sync_handler+0x98\/0x170 arch\/arm64\/kernel\/entry-common.c:383\n el0_sync+0x140\/0x180 arch\/arm64\/kernel\/entry.S:670\n\nAllocated by task 4269:\n stack_trace_save+0x80\/0xb8 kernel\/stacktrace.c:121\n kasan_save_stack mm\/kasan\/common.c:48 [inline]\n kasan_set_track mm\/kasan\/common.c:56 [inline]\n __kasan_kmalloc+0xdc\/0x120 mm\/kasan\/common.c:461\n kasan_kmalloc+0xc\/0x14 mm\/kasan\/common.c:475\n kmem_cache_alloc_trace include\/linux\/slab.h:450 [inline]\n kmalloc include\/linux\/slab.h:552 [inline]\n kzalloc include\/linux\/slab.h:664 [inline]\n kvm_vm_ioctl_register_coalesced_mmio+0x78\/0x1cc arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/coalesced_mmio.c:146\n kvm_vm_ioctl+0x7e8\/0x14c4 arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:3746\n vfs_ioctl fs\/ioctl.c:48 [inline]\n __do_sys_ioctl fs\/ioctl.c:753 [inline]\n __se_sys_ioctl fs\/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88\/0x131c fs\/ioctl.c:739\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:36 [inline]\n invoke_syscall arch\/arm64\/kernel\/syscall.c:48 [inline]\n el0_svc_common arch\/arm64\/kernel\/syscall.c:158 [inline]\n do_el0_svc+0x120\/0x290 arch\/arm64\/kernel\/syscall.c:220\n el0_svc+0x1c\/0x28 arch\/arm64\/kernel\/entry-common.c:367\n el0_sync_handler+0x98\/0x170 arch\/arm64\/kernel\/entry-common.c:383\n el0_sync+0x140\/0x180 arch\/arm64\/kernel\/entry.S:670\n\nFreed by task 4269:\n stack_trace_save+0x80\/0xb8 kernel\/stacktrace.c:121\n kasan_save_stack mm\/kasan\/common.c:48 [inline]\n kasan_set_track+0x38\/0x6c mm\/kasan\/common.c:56\n kasan_set_free_info+0x20\/0x40 mm\/kasan\/generic.c:355\n __kasan_slab_free+0x124\/0x150 mm\/kasan\/common.c:422\n kasan_slab_free+0x10\/0x1c mm\/kasan\/common.c:431\n slab_free_hook mm\/slub.c:1544 [inline]\n slab_free_freelist_hook mm\/slub.c:1577 [inline]\n slab_free mm\/slub.c:3142 [inline]\n kfree+0x104\/0x38c mm\/slub.c:4124\n coalesced_mmio_destructor+0x94\/0xa4 arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/coalesced_mmio.c:102\n kvm_iodevice_destructor include\/kvm\/iodev.h:61 [inline]\n kvm_io_bus_unregister_dev+0x248\/0x280 arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:4374\n kvm_vm_ioctl_unregister_coalesced_mmio+0x158\/0x1ec arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/coalesced_mmio.c:186\n kvm_vm_ioctl+0xe30\/0x14c4 arch\/arm64\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:3755\n vfs_ioctl fs\/ioctl.c:48 [inline]\n __do_sys_ioctl fs\/ioctl.c:753 [inline]\n __se_sys_ioctl fs\/ioctl.c:739 [inline]\n __arm64_sys_ioctl+0xf88\/0x131c fs\/ioctl.c:739\n __invoke_syscall arch\/arm64\/kernel\/syscall.c:36 [inline]\n invoke_syscall arch\/arm64\/kernel\/sys\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/069d44a24c0ff8f85adf49233aae7a8ca16f5c7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/23fa2e46a5556f787ce2ea1a315d3ab93cced204","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/679837dc0abaa2c6e2a7bcd86483e05eee1d5066","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d7c539316d652d217e5e82b89ee204c812a7061","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2ff9d03432fcb160e9f7d4be26174d89de2779a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47342","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.923","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix possible UAF when remounting r\/o a mmp-protected file system\n\nAfter commit 618f003199c6 (\"ext4: fix memory leak in\next4_fill_super\"), after the file system is remounted read-only, there\nis a race where the kmmpd thread can exit, causing sbi->s_mmp_tsk to\npoint at freed memory, which the call to ext4_stop_mmpd() can trip\nover.\n\nFix this by only allowing kmmpd() to exit when it is stopped via\next4_stop_mmpd().\n\nBug-Report-Link: <20210629143603.2166962-1-yebin10@huawei.com>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61bb4a1c417e5b95d9edb4f887f131de32e419cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ed572cdf11081f8f9e07abd4bea56a3f2c4edbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b663890d854403e566169f7e90aed5cd6ff64f6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47343","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:20.993","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndm btree remove: assign new_root only when removal succeeds\n\nremove_raw() in dm_btree_remove() may fail due to IO read error\n(e.g. read the content of origin block fails during shadowing),\nand the value of shadow_spine::root is uninitialized, but\nthe uninitialized value is still assign to new_root in the\nend of dm_btree_remove().\n\nFor dm-thin, the value of pmd->details_root or pmd->root will become\nan uninitialized value, so if trying to read details_info tree again\nout-of-bound memory may occur as showed below:\n\n  general protection fault, probably for non-canonical address 0x3fdcb14c8d7520\n  CPU: 4 PID: 515 Comm: dmsetup Not tainted 5.13.0-rc6\n  Hardware name: QEMU Standard PC\n  RIP: 0010:metadata_ll_load_ie+0x14\/0x30\n  Call Trace:\n   sm_metadata_count_is_more_than_one+0xb9\/0xe0\n   dm_tm_shadow_block+0x52\/0x1c0\n   shadow_step+0x59\/0xf0\n   remove_raw+0xb2\/0x170\n   dm_btree_remove+0xf4\/0x1c0\n   dm_pool_delete_thin_device+0xc3\/0x140\n   pool_message+0x218\/0x2b0\n   target_message+0x251\/0x290\n   ctl_ioctl+0x1c4\/0x4d0\n   dm_ctl_ioctl+0xe\/0x20\n   __x64_sys_ioctl+0x7b\/0xb0\n   do_syscall_64+0x40\/0xb0\n   entry_SYSCALL_64_after_hwframe+0x44\/0xae\n\nFixing it by only assign new_root when removal succeeds"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c84b3e0728ffe10d89c633694c35a02b5c477dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/73f27adaa73e3057a9ec464e33c4f54d34ea5de3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89bf942314b78d454db92427201421b5dec132d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8fbae4a1bdb5b889490cdee929e68540151536e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/964d57d1962d7e68f0f578f05d9ae4a104d74851","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad365e9351ac2b450e7e79932ff6abf59342d91a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6e58b5466b2959f83034bead2e2e1395cca8aeb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba47e65a5de3e0e8270301a409fc63d3129fdb9e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c154775619186781aaf8a99333ac07437a1768d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47344","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.067","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: zr364xx: fix memory leak in zr364xx_start_readpipe\n\nsyzbot reported memory leak in zr364xx driver.\nThe problem was in non-freed urb in case of\nusb_submit_urb() fail.\n\nbacktrace:\n  [<ffffffff82baedf6>] kmalloc include\/linux\/slab.h:561 [inline]\n  [<ffffffff82baedf6>] usb_alloc_urb+0x66\/0xe0 drivers\/usb\/core\/urb.c:74\n  [<ffffffff82f7cce8>] zr364xx_start_readpipe+0x78\/0x130 drivers\/media\/usb\/zr364xx\/zr364xx.c:1022\n  [<ffffffff84251dfc>] zr364xx_board_init drivers\/media\/usb\/zr364xx\/zr364xx.c:1383 [inline]\n  [<ffffffff84251dfc>] zr364xx_probe+0x6a3\/0x851 drivers\/media\/usb\/zr364xx\/zr364xx.c:1516\n  [<ffffffff82bb6507>] usb_probe_interface+0x177\/0x370 drivers\/usb\/core\/driver.c:396\n  [<ffffffff826018a9>] really_probe+0x159\/0x500 drivers\/base\/dd.c:576"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/021c294dff030f3ba38eb81e400ba123db32ecbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a045eac8d0427b64577a24d74bb8347c905ac65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0edd6759167295ea9969e89283b81017b4c688aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f3f81f1c96b501d180021c23c25e9f48eaab235","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0633051a6cb24186ff04ce1af99c7de18c1987e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbc80a972a3c5d7eba3f6c9c07af8fea42f5c513","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c57b2bd3247925e253729dce283d6bf6abc9339d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c57bfd8000d7677bf435873b440eec0c47f73a08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d69b39d89f362cfeeb54a68690768d0d257b2c8f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47345","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.143","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cma: Fix rdma_resolve_route() memory leak\n\nFix a memory leak when \"mda_resolve_route() is called more than once on\nthe same \"rdma_cm_id\".\n\nThis is possible if cma_query_handler() triggers the\nRDMA_CM_EVENT_ROUTE_ERROR flow which puts the state machine back and\nallows rdma_resolve_route() to be called again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/032c68b4f5be128a2167f35b558b7cec88fe4972","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/07583ba2e2d8947c3d365d97608cb436510885ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d08b5917984f737f32d5bee9737b9075c3895c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40b613db3a95bc27998e4097d74c2f7e5d083a0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4893c938f2a140a74be91779e45e4a7fa111198f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/74f160ead74bfe5f2b38afb4fcf86189f9ff40c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2da8ce2a9543f3ca5c93369bd1fe6eeb572101a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4e062da082a199357ba4911145f331d40139ad8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4f553d67236145fa5fd203ed7b35b9377e19939","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47346","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.217","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: tmc-etf: Fix global-out-of-bounds in tmc_update_etf_buffer()\n\ncommit 6f755e85c332 (\"coresight: Add helper for inserting synchronization\npackets\") removed trailing '\\0' from barrier_pkt array and updated the\ncall sites like etb_update_buffer() to have proper checks for barrier_pkt\nsize before read but missed updating tmc_update_etf_buffer() which still\nreads barrier_pkt past the array size resulting in KASAN out-of-bounds\nbug. Fix this by adding a check for barrier_pkt size before accessing\nlike it is done in etb_update_buffer().\n\n BUG: KASAN: global-out-of-bounds in tmc_update_etf_buffer+0x4b8\/0x698\n Read of size 4 at addr ffffffd05b7d1030 by task perf\/2629\n\n Call trace:\n  dump_backtrace+0x0\/0x27c\n  show_stack+0x20\/0x2c\n  dump_stack+0x11c\/0x188\n  print_address_description+0x3c\/0x4a4\n  __kasan_report+0x140\/0x164\n  kasan_report+0x10\/0x18\n  __asan_report_load4_noabort+0x1c\/0x24\n  tmc_update_etf_buffer+0x4b8\/0x698\n  etm_event_stop+0x248\/0x2d8\n  etm_event_del+0x20\/0x2c\n  event_sched_out+0x214\/0x6f0\n  group_sched_out+0xd0\/0x270\n  ctx_sched_out+0x2ec\/0x518\n  __perf_event_task_sched_out+0x4fc\/0xe6c\n  __schedule+0x1094\/0x16a0\n  preempt_schedule_irq+0x88\/0x170\n  arm64_preempt_schedule_irq+0xf0\/0x18c\n  el1_irq+0xe8\/0x180\n  perf_event_exec+0x4d8\/0x56c\n  setup_new_exec+0x204\/0x400\n  load_elf_binary+0x72c\/0x18c0\n  search_binary_handler+0x13c\/0x420\n  load_script+0x500\/0x6c4\n  search_binary_handler+0x13c\/0x420\n  exec_binprm+0x118\/0x654\n  __do_execve_file+0x77c\/0xba4\n  __arm64_compat_sys_execve+0x98\/0xac\n  el0_svc_common+0x1f8\/0x5e0\n  el0_svc_compat_handler+0x84\/0xb0\n  el0_svc_compat+0x10\/0x50\n\n The buggy address belongs to the variable:\n  barrier_pkt+0x10\/0x40\n\n Memory state around the buggy address:\n  ffffffd05b7d0f00: fa fa fa fa 04 fa fa fa fa fa fa fa 00 00 00 00\n  ffffffd05b7d0f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n >ffffffd05b7d1000: 00 00 00 00 00 00 fa fa fa fa fa fa 00 00 00 03\n                                      ^\n  ffffffd05b7d1080: fa fa fa fa 00 02 fa fa fa fa fa fa 03 fa fa fa\n  ffffffd05b7d1100: fa fa fa fa 00 00 00 00 05 fa fa fa fa fa fa fa\n =================================================================="}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0115687be7b13993066aef602253a53d55f5b11f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/04bd77ef4f4d9fc6102023b85f4590fc2130aac5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35c1c4bd2d59ad734129d4e232af9d1098023918","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fae8a946ac2df879caf3f79a193d4766d00239b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/733d4d95c0101d5f277b8e4910411d016e49a9dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef0a06acc6b16388640ad367eedfa2a17f1945db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47347","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.287","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwl1251: Fix possible buffer overflow in wl1251_cmd_scan\n\nFunction wl1251_cmd_scan calls memcpy without checking the length.\nHarden by checking the length is within the maximum allowed size."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f6c0488368c9ac1aa685821916fadba32f5d1ef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/115103f6e3f1c26c473766c16439c7c8b235529a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/302e2ee34c5f7c5d805b7f835d9a6f2b43474e2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/40af3960a15339e8bbd3be50c3bc7b35e1a0b6ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57ad99ae3c6738ba87bad259bb57c641ca68ebf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5e4a10d7bd5d4f419d8b9705dff60cf69b302a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d10a87a3535cce2b890897914f5d0d83df669c63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d3d8b9c9c7843dce31e284927d4c9904fd5a510a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d71dddeb5380613f9ef199f3e7368fd78fb1a46e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47348","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.350","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Avoid HDCP over-read and corruption\n\nInstead of reading the desired 5 bytes of the actual target field,\nthe code was reading 8. This could result in a corrupted value if the\ntrailing 3 bytes were non-zero, so instead use an appropriately sized\nand zero-initialized bounce buffer, and read only 5 bytes before casting\nto u64."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06888d571b513cbfc0b41949948def6cb81021b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b2b93a485fb7a970bc8b5daef16f4cf579d172f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44c7c901cb368a9f2493748f213b247b5872639f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5b518f4b98dbb2bc31b6a55e6aaa1e0e2948f2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47349","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.417","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmwifiex: bring down link before deleting interface\n\nWe can deadlock when rmmod'ing the driver or going through firmware\nreset, because the cfg80211_unregister_wdev() has to bring down the link\nfor us, ... which then grab the same wiphy lock.\n\nnl80211_del_interface() already handles a very similar case, with a nice\ndescription:\n\n        \/*\n         * We hold RTNL, so this is safe, without RTNL opencount cannot\n         * reach 0, and thus the rdev cannot be deleted.\n         *\n         * We need to do it for the dev_close(), since that will call\n         * the netdev notifiers, and we need to acquire the mutex there\n         * but don't know if we get there from here or from some other\n         * place (e.g. \"ip link set ... down\").\n         *\/\n        mutex_unlock(&rdev->wiphy.mtx);\n...\n\nDo similarly for mwifiex teardown, by ensuring we bring the link down\nfirst.\n\nSample deadlock trace:\n\n[  247.103516] INFO: task rmmod:2119 blocked for more than 123 seconds.\n[  247.110630]       Not tainted 5.12.4 #5\n[  247.115796] \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n[  247.124557] task:rmmod           state:D stack:    0 pid: 2119 ppid:  2114 flags:0x00400208\n[  247.133905] Call trace:\n[  247.136644]  __switch_to+0x130\/0x170\n[  247.140643]  __schedule+0x714\/0xa0c\n[  247.144548]  schedule_preempt_disabled+0x88\/0xf4\n[  247.149714]  __mutex_lock_common+0x43c\/0x750\n[  247.154496]  mutex_lock_nested+0x5c\/0x68\n[  247.158884]  cfg80211_netdev_notifier_call+0x280\/0x4e0 [cfg80211]\n[  247.165769]  raw_notifier_call_chain+0x4c\/0x78\n[  247.170742]  call_netdevice_notifiers_info+0x68\/0xa4\n[  247.176305]  __dev_close_many+0x7c\/0x138\n[  247.180693]  dev_close_many+0x7c\/0x10c\n[  247.184893]  unregister_netdevice_many+0xfc\/0x654\n[  247.190158]  unregister_netdevice_queue+0xb4\/0xe0\n[  247.195424]  _cfg80211_unregister_wdev+0xa4\/0x204 [cfg80211]\n[  247.201816]  cfg80211_unregister_wdev+0x20\/0x2c [cfg80211]\n[  247.208016]  mwifiex_del_virtual_intf+0xc8\/0x188 [mwifiex]\n[  247.214174]  mwifiex_uninit_sw+0x158\/0x1b0 [mwifiex]\n[  247.219747]  mwifiex_remove_card+0x38\/0xa0 [mwifiex]\n[  247.225316]  mwifiex_pcie_remove+0xd0\/0xe0 [mwifiex_pcie]\n[  247.231451]  pci_device_remove+0x50\/0xe0\n[  247.235849]  device_release_driver_internal+0x110\/0x1b0\n[  247.241701]  driver_detach+0x5c\/0x9c\n[  247.245704]  bus_remove_driver+0x84\/0xb8\n[  247.250095]  driver_unregister+0x3c\/0x60\n[  247.254486]  pci_unregister_driver+0x2c\/0x90\n[  247.259267]  cleanup_module+0x18\/0xcdc [mwifiex_pcie]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f9482aa8d412b4ba06ce6ab8e333fb8ca29a06e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/35af69c7c0490fdccfc159c6a87e4d1dc070838a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a3041d39d3c14da97fa3476835aba043ba810cf0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47350","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.483","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/mm: Fix lockup on kernel exec fault\n\nThe powerpc kernel is not prepared to handle exec faults from kernel.\nEspecially, the function is_exec_fault() will return 'false' when an\nexec fault is taken by kernel, because the check is based on reading\ncurrent->thread.regs->trap which contains the trap from user.\n\nFor instance, when provoking a LKDTM EXEC_USERSPACE test,\ncurrent->thread.regs->trap is set to SYSCALL trap (0xc00), and\nthe fault taken by the kernel is not seen as an exec fault by\nset_access_flags_filter().\n\nCommit d7df2443cd5f (\"powerpc\/mm: Fix spurious segfaults on radix\nwith autonuma\") made it clear and handled it properly. But later on\ncommit d3ca587404b3 (\"powerpc\/mm: Fix reporting of kernel execute\nfaults\") removed that handling, introducing test based on error_code.\nAnd here is the problem, because on the 603 all upper bits of SRR1\nget cleared when the TLB instruction miss handler bails out to ISI.\n\nUntil commit cbd7e6ca0210 (\"powerpc\/fault: Avoid heavy\nsearch_exception_tables() verification\"), an exec fault from kernel\nat a userspace address was indirectly caught by the lack of entry for\nthat address in the exception tables. But after that commit the\nkernel mainly relies on KUAP or on core mm handling to catch wrong\nuser accesses. Here the access is not wrong, so mm handles it.\nIt is a minor fault because PAGE_EXEC is not set,\nset_access_flags_filter() should set PAGE_EXEC and voila.\nBut as is_exec_fault() returns false as explained in the beginning,\nset_access_flags_filter() bails out without setting PAGE_EXEC flag,\nwhich leads to a forever minor exec fault.\n\nAs the kernel is not prepared to handle such exec faults, the thing to\ndo is to fire in bad_kernel_fault() for any exec fault taken by the\nkernel, as it was prior to commit d3ca587404b3."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/500f81cec9f1bfa5210aa9dd5ba9a06e22f62a35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a96ec5ebf96ad8e2ba7b1b34103a0be5140fc70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a82471a14aad90f79d1608d2bcbb019f0ffb53f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd5d5e602f502895e47e18cd46804d6d7014e65c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2e52d4664097a6c1f591d869ec594bd7a0d4925","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47351","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.553","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nubifs: Fix races between xattr_{set|get} and listxattr operations\n\nUBIFS may occur some problems with concurrent xattr_{set|get} and\nlistxattr operations, such as assertion failure, memory corruption,\nstale xattr value[1].\n\nFix it by importing a new rw-lock in @ubifs_inode to serilize write\noperations on xattr, concurrent read operations are still effective,\njust like ext4.\n\n[1] https:\/\/lore.kernel.org\/linux-mtd\/20200630130438.141649-1-houtao1@huawei.com"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38dde03eb239605f428f3f1e4baa73d4933a4cc6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7adc05b73d91a5e3d4ca7714fa53ad9b70c53d08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9558612cb829f2c022b788f55d6b8437d5234a82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0756f75c22149d20fcb7d8409827cee905eb386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4e3634a3b642225a530c292fdb1e8a4007507f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47352","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.620","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-net: Add validation for used length\n\nThis adds validation for used length (might come\nfrom an untrusted device) to avoid data corruption\nor loss."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3133e01514c3c498f2b01ff210ee6134b70c663c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad993a95c508417acdeb15244109e009e50d8758","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba710baa1cc1b17a0483f7befe03e696efd17292","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c92298d228f61589dd21657af2bea95fc866b813","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47353","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.693","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nudf: Fix NULL pointer dereference in udf_symlink function\n\nIn function udf_symlink, epos.bh is assigned with the value returned\nby udf_tgetblk. The function udf_tgetblk is defined in udf\/misc.c\nand returns the value of sb_getblk function that could be NULL.\nThen, epos.bh is used without any check, causing a possible\nNULL pointer dereference when sb_getblk fails.\n\nThis fix adds a check to validate the value of epos.bh."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/21bf1414580c36ffc8d8de043beb3508cf812238","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f3d9ddd32a28803baa547e6274983b67d5e287c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3638705ecd5ad2785e996f820121c0ad15ce64b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/371566f63cbd0bb6fbb25b8fe9d5798268d35af9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5150877e4d99f85057a458daac7cd7c01005d5c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/80d505aee6398cf8beb72475c7edcf1733c1c68b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aebed6b19e51a34003d998da5ebb1dfdd2cb1d02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/baea588a42d675e35daeaddd10fbc9700550bc4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fa236c2b2d4436d9f19ee4e5d5924e90ffd7bb43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47354","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.767","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/sched: Avoid data corruptions\n\nWait for all dependencies of a job  to complete before\nkilling it to avoid data corruptions."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0687411e2a8858262de2fc4a1d576016fd77292e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b10ab80695d61422337ede6ff496552d8ace99d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50d7e03ad487cc45fc85164a299b945a41756ac0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8e23e3c1ff9ec598ab1b3a941ace6045027781f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c32d0f0e164ffab2a56c7cf8e612584b4b740e2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47355","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.840","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\natm: nicstar: Fix possible use-after-free in nicstar_cleanup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f958b6f6ba0854b39be748d21dfe71e0fe6580f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34e7434ba4e97f4b85c1423a59b2922ba7dff2ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e2a0848ea2cab0716d46f85a8ccd5fa9a493e51","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b991df8881088448cb223e769e37cab8dd40706","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99779c9d9ffc7775da6f7fd8a7c93ac61657bed5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7a7b2848312cc4c3a42b6e42a8ab2e441857aba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7f7c42e31157d1f0871d6a8e1a0b73a6b4ea785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdf5334250c69fabf555b7322c75249ea7d5f148","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c471569632654e57c83512e0fc1ba0dbb4544ad6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47356","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:21.920","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmISDN: fix possible use-after-free in HFC_cleanup()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/009fc857c5f6fda81f2f7dd851b2d54193a8e733","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ecd228c636ee17c14662729737fa07242a93cb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/49331c07ef0f8fdfa42b30ba6a83a657b29d7fbe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54ff3202928952a100c477248e65ac6db01258a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f2818185da0fe82a932f0856633038b66faf124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/61370ff07e0acc657559a8fac02551dfeb9d3020","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7867ddc5f3de7f289aee63233afc0df4b62834c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b7ee9ae1e0cf55a037c4a99af2acc5d78cb7802d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed7c3739d0a07e2ec3ccbffe7e93cea01c438cda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47357","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.000","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\natm: iphase: fix possible use-after-free in ia_module_exit()\n\nThis module's remove path calls del_timer(). However, that function\ndoes not wait until the timer handler finishes. This means that the\ntimer handler may still be running after the driver's remove function\nhas finished, which would result in a use-after-free.\n\nFix by calling del_timer_sync(), which makes sure the timer handler\nhas finished, and unable to re-schedule itself."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c72e6ab66b9598cac741ed397438a52065a8f1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89ce0b0747f319eb70f85bc820dcc43cebbd5417","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9e161687855175334ca93c6c3ccb221731194479","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a832ee2f2145f57443b2d565f8cb5490e8339f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b58d246a058ae88484758cd4ab27b3180fd5ecf8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcdd2be48edd8c6867fb44112cb8d18086beae29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9172498d4d62c9b64e5fb37c1ee0343e65fe51b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1fb12412874c94ad037e11d0ecdd1140a439297","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e759ff76ebbbfcdcf83b6634c54dc47828573d8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47358","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.073","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nstaging: greybus: uart: fix tty use after free\n\nUser space can hold a tty open indefinitely and tty drivers must not\nrelease the underlying structures until the last user is gone.\n\nSwitch to using the tty-port reference counter to manage the life time\nof the greybus tty state to avoid use after free after a disconnect."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4dc56951a8d9d61d364d346c61a5f1d70b4f5e14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64062fcaca8872f063ec9da011e7bf30470be33f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92b67aaafb7c449db9f0c3dcabc0ff967cb3a42d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92dc0b1f46e12cfabd28d709bb34f7a39431b44f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9872ff6fdce8b229f01993b611b5d1719cb70ff1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5cfd51f6348e8fd7531461366946039c29c7e69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9e697e60ce9890e9258a73eb061288e7d68e5e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47359","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.143","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix soft lockup during fsstress\n\nBelow traces are observed during fsstress and system got hung.\n[  130.698396] watchdog: BUG: soft lockup - CPU#6 stuck for 26s!"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/71826b068884050d5fdd37fda857ba1539c513d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f6c7aff21f81ae8856da1f63847d1362d523409","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47360","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.210","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbinder: make sure fd closes complete\n\nDuring BC_FREE_BUFFER processing, the BINDER_TYPE_FDA object\ncleanup may close 1 or more fds. The close operations are\ncompleted using the task work mechanism -- which means the thread\nneeds to return to userspace or the file object may never be\ndereferenced -- which can lead to hung processes.\n\nForce the binder thread back to userspace if an fd is closed during\nBC_FREE_BUFFER handling."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5fdb55c1ac9585eb23bb2541d5819224429e103d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa2c274c279ff365a06a4cba263f04965895166e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b95483d8d94b41fa31a84c1d86710b7907a37621","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5b0473707fa53b03a5db0256ce62b2874bddbc7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47361","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.283","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmcb: fix error handling in mcb_alloc_bus()\n\nThere are two bugs:\n1) If ida_simple_get() fails then this code calls put_device(carrier)\n   but we haven't yet called get_device(carrier) and probably that\n   leads to a use after free.\n2) After device_initialize() then we need to use put_device() to\n   release the bus.  This will free the internal resources tied to the\n   device and call mcb_free_bus() which will free the rest."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/115b07d9f47e3996430b8f2007edd9768e1f807f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25a1433216489de4abc889910f744e952cb6dbae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66f74ba9be9daf9c47fface6af3677f602774f6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7751f609eadf36b1f53712bae430019c53a16eb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a558261fa57a6deefb0925ab1829f698b194aea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91e4ad05bf18322b5921d1a6c9b603f6eb1694f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fc198f415dee070a1de957bb5bf5921d8df3499","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47362","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.357","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/pm: Update intermediate power state for SI\n\nUpdate the current state as boot state during dpm initialization.\nDuring the subsequent initialization, set_power_state gets called to\ntransition to the final power state. set_power_state refers to values\nfrom the current state and without current state populated, it could\nresult in NULL pointer dereference.\n\nFor ex: on platforms where PCI speed change is supported through ACPI\nATCS method, the link speed of current state needs to be queried before\ndeciding on changing to final power state's link speed. The logic to query\nATCS-support was broken on certain platforms. The issue became visible\nwhen broken ATCS-support logic got fixed with commit\nf9b7f3703ff9 (\"drm\/amdgpu\/acpi: make ATPX\/ATCS structures global (v2)\").\n\nBug: https:\/\/gitlab.freedesktop.org\/drm\/amd\/-\/issues\/1698"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06a18e64256f7aecb5a27df02faa3568fcd3c105","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/68d4fbe6220cd1f3d07cab0a4901e62f8c12cc68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab39d3cef526ba09c4c6923b4cd7e6ec1c5d4faa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47363","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.430","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnexthop: Fix division by zero while replacing a resilient group\n\nThe resilient nexthop group torture tests in fib_nexthop.sh exposed a\npossible division by zero while replacing a resilient group [1]. The\ndivision by zero occurs when the data path sees a resilient nexthop\ngroup with zero buckets.\n\nThe tests replace a resilient nexthop group in a loop while traffic is\nforwarded through it. The tests do not specify the number of buckets\nwhile performing the replacement, resulting in the kernel allocating a\nstub resilient table (i.e, 'struct nh_res_table') with zero buckets.\n\nThis table should never be visible to the data path, but the old nexthop\ngroup (i.e., 'oldg') might still be used by the data path when the stub\ntable is assigned to it.\n\nFix this by only assigning the stub table to the old nexthop group after\nmaking sure the group is no longer used by the data path.\n\nTested with fib_nexthops.sh:\n\nTests passed: 222\nTests failed:   0\n\n[1]\n divide error: 0000 [#1] PREEMPT SMP KASAN\n CPU: 0 PID: 1850 Comm: ping Not tainted 5.14.0-custom-10271-ga86eb53057fe #1107\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04\/01\/2014\n RIP: 0010:nexthop_select_path+0x2d2\/0x1a80\n[...]\n Call Trace:\n  fib_select_multipath+0x79b\/0x1530\n  fib_select_path+0x8fb\/0x1c10\n  ip_route_output_key_hash_rcu+0x1198\/0x2da0\n  ip_route_output_key_hash+0x190\/0x340\n  ip_route_output_flow+0x21\/0x120\n  raw_sendmsg+0x91d\/0x2e10\n  inet_sendmsg+0x9e\/0xe0\n  __sys_sendto+0x23d\/0x360\n  __x64_sys_sendto+0xe1\/0x1b0\n  do_syscall_64+0x35\/0x80\n  entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/563f23b002534176f49524b5ca0e1d94d8906c40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9d32ec26e7f01d1af13bdc687f586362546aa25","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47364","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.497","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncomedi: Fix memory leak in compat_insnlist()\n\n`compat_insnlist()` handles the 32-bit version of the `COMEDI_INSNLIST`\nioctl (whenwhen `CONFIG_COMPAT` is enabled).  It allocates memory to\ntemporarily hold an array of `struct comedi_insn` converted from the\n32-bit version in user space.  This memory is only being freed if there\nis a fault while filling the array, otherwise it is leaked.\n\nAdd a call to `kfree()` to fix the leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8d6a21e4cd6a319b0662cbe4ad6199e276ac776a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb509a6ffed2c8b0950f637ab5779aa818ed1596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f217b6c1e28ed0b353634ce4d92a155b80bd1671","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47365","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.563","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix page leak\n\nThere's a loop in afs_extend_writeback() that adds extra pages to a write\nwe want to make to improve the efficiency of the writeback by making it\nlarger.  This loop stops, however, if we hit a page we can't write back\nfrom immediately, but it doesn't get rid of the page ref we speculatively\nacquired.\n\nThis was caused by the removal of the cleanup loop when the code switched\nfrom using find_get_pages_contig() to xarray scanning as the latter only\ngets a single page at a time, not a batch.\n\nFix this by putting the page on a ref on an early break from the loop.\nUnfortunately, we can't just add that page to the pagevec we're employing\nas we'll go through that and add those pages to the RPC call.\n\nThis was found by the generic\/074 test.  It leaks ~4GiB of RAM each time it\nis run - which can be observed with \"top\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/581b2027af0018944ba301d68e7af45c6d1128b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d130b5fdd42254d92948d06347940276140c927e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47366","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.633","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nafs: Fix corruption in reads at fpos 2G-4G from an OpenAFS server\n\nAFS-3 has two data fetch RPC variants, FS.FetchData and FS.FetchData64, and\nLinux's afs client switches between them when talking to a non-YFS server\nif the read size, the file position or the sum of the two have the upper 32\nbits set of the 64-bit value.\n\nThis is a problem, however, since the file position and length fields of\nFS.FetchData are *signed* 32-bit values.\n\nFix this by capturing the capability bits obtained from the fileserver when\nit's sent an FS.GetCapabilities RPC, rather than just discarding them, and\nthen picking out the VICED_CAPABILITY_64BITFILES flag.  This can then be\nused to decide whether to use FS.FetchData or FS.FetchData64 - and also\nFS.StoreData or FS.StoreData64 - rather than using upper_32_bits() to\nswitch on the parameter values.\n\nThis capabilities flag could also be used to limit the maximum size of the\nfile, but all servers must be checked for that.\n\nNote that the issue does not exist with FS.StoreData - that uses *unsigned*\n32-bit values.  It's also not a problem with Auristor servers as its\nYFS.FetchData64 op uses unsigned 64-bit values.\n\nThis can be tested by cloning a git repo through an OpenAFS client to an\nOpenAFS server and then doing \"git status\" on it from a Linux afs\nclient[1].  Provided the clone has a pack file that's in the 2G-4G range,\nthe git status will show errors like:\n\n\terror: packfile .git\/objects\/pack\/pack-5e813c51d12b6847bbc0fcd97c2bca66da50079c.pack does not match index\n\terror: packfile .git\/objects\/pack\/pack-5e813c51d12b6847bbc0fcd97c2bca66da50079c.pack does not match index\n\nThis can be observed in the server's FileLog with something like the\nfollowing appearing:\n\nSun Aug 29 19:31:39 2021 SRXAFS_FetchData, Fid = 2303380852.491776.3263114, Host 192.168.11.201:7001, Id 1001\nSun Aug 29 19:31:39 2021 CheckRights: len=0, for host=192.168.11.201:7001\nSun Aug 29 19:31:39 2021 FetchData_RXStyle: Pos 18446744071815340032, Len 3154\nSun Aug 29 19:31:39 2021 FetchData_RXStyle: file size 2400758866\n...\nSun Aug 29 19:31:40 2021 SRXAFS_FetchData returns 5\n\nNote the file position of 18446744071815340032.  This is the requested file\nposition sign-extended."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b537a3c21775075395af475dcc6ef212fcf29db8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e66fc460d6dcf85cf12288e133a081205aebcd97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47367","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.700","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-net: fix pages leaking when building skb in big mode\n\nWe try to use build_skb() if we had sufficient tailroom. But we forget\nto release the unused pages chained via private in big mode which will\nleak pages. Fixing this by release the pages after building the skb in\nbig mode."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/afd92d82c9d715fb97565408755acad81573591a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f020bb63b5d2e5576acadd10e158fe3b04af67ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47368","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.773","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nenetc: Fix illegal access when reading affinity_hint\n\nirq_set_affinity_hit() stores a reference to the cpumask_t\nparameter in the irq descriptor, and that reference can be\naccessed later from irq_affinity_hint_proc_show(). Since\nthe cpu_mask parameter passed to irq_set_affinity_hit() has\nonly temporary storage (it's on the stack memory), later\naccesses to it are illegal. Thus reads from the corresponding\nprocfs affinity_hint file can result in paging request oops.\n\nThe issue is fixed by the get_cpu_mask() helper, which provides\na permanent storage for the cpumask_t parameter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4c4c3052911b577920353a7646e4883d5da40c28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c3f1b741c6c2914ea120e3a5790d3e900152f7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f329d9da2a5ae032fcde800a99b118124ed5270","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7237a494decfa17d0b9d0076e6cee3235719de90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47369","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.853","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/qeth: fix NULL deref in qeth_clear_working_pool_list()\n\nWhen qeth_set_online() calls qeth_clear_working_pool_list() to roll\nback after an error exit from qeth_hardsetup_card(), we are at risk of\naccessing card->qdio.in_q before it was allocated by\nqeth_alloc_qdio_queues() via qeth_mpc_initialize().\n\nqeth_clear_working_pool_list() then dereferences NULL, and by writing to\nqueue->bufs[i].pool_entry scribbles all over the CPU's lowcore.\nResulting in a crash when those lowcore areas are used next (eg. on\nthe next machine-check interrupt).\n\nSuch a scenario would typically happen when the device is first set\nonline and its queues aren't allocated yet. An early IO error or certain\nmisconfigs (eg. mismatched transport mode, bad portno) then cause us to\nerror out from qeth_hardsetup_card() with card->qdio.in_q still being\nNULL.\n\nFix it by checking the pointer for NULL before accessing it.\n\nNote that we also have (rare) paths inside qeth_mpc_initialize() where\na configuration change can cause us to free the existing queues,\nexpecting that subsequent code will allocate them again. If we then\nerror out before that re-allocation happens, the same bug occurs.\n\nRoot-caused-by: Heiko Carstens <hca@linux.ibm.com>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/248f064af222a1f97ee02c84a98013dfbccad386","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b00fb12cdc9d8d1c3ffe82a78e74738127803fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db94f89e1dadf693c15c2d60de0c34777cea5779","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47370","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:22.927","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: ensure tx skbs always have the MPTCP ext\n\nDue to signed\/unsigned comparison, the expression:\n\n\tinfo->size_goal - skb->len > 0\n\nevaluates to true when the size goal is smaller than the\nskb size. That results in lack of tx cache refill, so that\nthe skb allocated by the core TCP code lacks the required\nMPTCP skb extensions.\n\nDue to the above, syzbot is able to trigger the following WARN_ON():\n\nWARNING: CPU: 1 PID: 810 at net\/mptcp\/protocol.c:1366 mptcp_sendmsg_frag+0x1362\/0x1bc0 net\/mptcp\/protocol.c:1366\nModules linked in:\nCPU: 1 PID: 810 Comm: syz-executor.4 Not tainted 5.14.0-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:mptcp_sendmsg_frag+0x1362\/0x1bc0 net\/mptcp\/protocol.c:1366\nCode: ff 4c 8b 74 24 50 48 8b 5c 24 58 e9 0f fb ff ff e8 13 44 8b f8 4c 89 e7 45 31 ed e8 98 57 2e fe e9 81 f4 ff ff e8 fe 43 8b f8 <0f> 0b 41 bd ea ff ff ff e9 6f f4 ff ff 4c 89 e7 e8 b9 8e d2 f8 e9\nRSP: 0018:ffffc9000531f6a0 EFLAGS: 00010216\nRAX: 000000000000697f RBX: 0000000000000000 RCX: ffffc90012107000\nRDX: 0000000000040000 RSI: ffffffff88eac9e2 RDI: 0000000000000003\nRBP: ffff888078b15780 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff88eac017 R11: 0000000000000000 R12: ffff88801de0a280\nR13: 0000000000006b58 R14: ffff888066278280 R15: ffff88803c2fe9c0\nFS:  00007fd9f866e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007faebcb2f718 CR3: 00000000267cb000 CR4: 00000000001506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n __mptcp_push_pending+0x1fb\/0x6b0 net\/mptcp\/protocol.c:1547\n mptcp_release_cb+0xfe\/0x210 net\/mptcp\/protocol.c:3003\n release_sock+0xb4\/0x1b0 net\/core\/sock.c:3206\n sk_stream_wait_memory+0x604\/0xed0 net\/core\/stream.c:145\n mptcp_sendmsg+0xc39\/0x1bc0 net\/mptcp\/protocol.c:1749\n inet6_sendmsg+0x99\/0xe0 net\/ipv6\/af_inet6.c:643\n sock_sendmsg_nosec net\/socket.c:704 [inline]\n sock_sendmsg+0xcf\/0x120 net\/socket.c:724\n sock_write_iter+0x2a0\/0x3e0 net\/socket.c:1057\n call_write_iter include\/linux\/fs.h:2163 [inline]\n new_sync_write+0x40b\/0x640 fs\/read_write.c:507\n vfs_write+0x7cf\/0xae0 fs\/read_write.c:594\n ksys_write+0x1ee\/0x250 fs\/read_write.c:647\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\nRIP: 0033:0x4665f9\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fd9f866e188 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\nRAX: ffffffffffffffda RBX: 000000000056c038 RCX: 00000000004665f9\nRDX: 00000000000e7b78 RSI: 0000000020000000 RDI: 0000000000000003\nRBP: 00000000004bfcc4 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 000000000056c038\nR13: 0000000000a9fb1f R14: 00007fd9f866e300 R15: 0000000000022000\n\nFix the issue rewriting the relevant expression to avoid\nsign-related problems - note: size_goal is always >= 0.\n\nAdditionally, ensure that the skb in the tx cache always carries\nthe relevant extension."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/977d293e23b48a1129830d7968605f61c4af71a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8ff625a8082db8c2b58dcb5229b27928943b94b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47371","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.000","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnexthop: Fix memory leaks in nexthop notification chain listeners\n\nsyzkaller discovered memory leaks [1] that can be reduced to the\nfollowing commands:\n\n # ip nexthop add id 1 blackhole\n # devlink dev reload pci\/0000:06:00.0\n\nAs part of the reload flow, mlxsw will unregister its netdevs and then\nunregister from the nexthop notification chain. Before unregistering\nfrom the notification chain, mlxsw will receive delete notifications for\nnexthop objects using netdevs registered by mlxsw or their uppers. mlxsw\nwill not receive notifications for nexthops using netdevs that are not\ndismantled as part of the reload flow. For example, the blackhole\nnexthop above that internally uses the loopback netdev as its nexthop\ndevice.\n\nOne way to fix this problem is to have listeners flush their nexthop\ntables after unregistering from the notification chain. This is\nerror-prone as evident by this patch and also not symmetric with the\nregistration path where a listener receives a dump of all the existing\nnexthops.\n\nTherefore, fix this problem by replaying delete notifications for the\nlistener being unregistered. This is symmetric to the registration path\nand also consistent with the netdev notification chain.\n\nThe above means that unregister_nexthop_notifier(), like\nregister_nexthop_notifier(), will have to take RTNL in order to iterate\nover the existing nexthops and that any callers of the function cannot\nhold RTNL. This is true for mlxsw and netdevsim, but not for the VXLAN\ndriver. To avoid a deadlock, change the latter to unregister its nexthop\nlistener without holding RTNL, making it symmetric to the registration\npath.\n\n[1]\nunreferenced object 0xffff88806173d600 (size 512):\n  comm \"syz-executor.0\", pid 1290, jiffies 4295583142 (age 143.507s)\n  hex dump (first 32 bytes):\n    41 9d 1e 60 80 88 ff ff 08 d6 73 61 80 88 ff ff  A..`......sa....\n    08 d6 73 61 80 88 ff ff 01 00 00 00 00 00 00 00  ..sa............\n  backtrace:\n    [<ffffffff81a6b576>] kmemleak_alloc_recursive include\/linux\/kmemleak.h:43 [inline]\n    [<ffffffff81a6b576>] slab_post_alloc_hook+0x96\/0x490 mm\/slab.h:522\n    [<ffffffff81a716d3>] slab_alloc_node mm\/slub.c:3206 [inline]\n    [<ffffffff81a716d3>] slab_alloc mm\/slub.c:3214 [inline]\n    [<ffffffff81a716d3>] kmem_cache_alloc_trace+0x163\/0x370 mm\/slub.c:3231\n    [<ffffffff82e8681a>] kmalloc include\/linux\/slab.h:591 [inline]\n    [<ffffffff82e8681a>] kzalloc include\/linux\/slab.h:721 [inline]\n    [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_group_create drivers\/net\/ethernet\/mellanox\/mlxsw\/spectrum_router.c:4918 [inline]\n    [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_new drivers\/net\/ethernet\/mellanox\/mlxsw\/spectrum_router.c:5054 [inline]\n    [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_event+0x59a\/0x2910 drivers\/net\/ethernet\/mellanox\/mlxsw\/spectrum_router.c:5239\n    [<ffffffff813ef67d>] notifier_call_chain+0xbd\/0x210 kernel\/notifier.c:83\n    [<ffffffff813f0662>] blocking_notifier_call_chain kernel\/notifier.c:318 [inline]\n    [<ffffffff813f0662>] blocking_notifier_call_chain+0x72\/0xa0 kernel\/notifier.c:306\n    [<ffffffff8384b9c6>] call_nexthop_notifiers+0x156\/0x310 net\/ipv4\/nexthop.c:244\n    [<ffffffff83852bd8>] insert_nexthop net\/ipv4\/nexthop.c:2336 [inline]\n    [<ffffffff83852bd8>] nexthop_add net\/ipv4\/nexthop.c:2644 [inline]\n    [<ffffffff83852bd8>] rtm_new_nexthop+0x14e8\/0x4d10 net\/ipv4\/nexthop.c:2913\n    [<ffffffff833e9a78>] rtnetlink_rcv_msg+0x448\/0xbf0 net\/core\/rtnetlink.c:5572\n    [<ffffffff83608703>] netlink_rcv_skb+0x173\/0x480 net\/netlink\/af_netlink.c:2504\n    [<ffffffff833de032>] rtnetlink_rcv+0x22\/0x30 net\/core\/rtnetlink.c:5590\n    [<ffffffff836069de>] netlink_unicast_kernel net\/netlink\/af_netlink.c:1314 [inline]\n    [<ffffffff836069de>] netlink_unicast+0x5ae\/0x7f0 net\/netlink\/af_netlink.c:1340\n    [<ffffffff83607501>] netlink_sendmsg+0x8e1\/0xe30 net\/netlink\/af_netlink.c:1929\n    [<ffffffff832fde84>] sock_sendmsg_nosec net\/socket.c:704 [inline\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3106a0847525befe3e22fc723909d1b21eb0d520","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/741760fa6252628a3d3afad439b72437d4b123d9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47372","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.087","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: macb: fix use after free on rmmod\n\nplat_dev->dev->platform_data is released by platform_device_unregister(),\nuse of pclk and hclk is a use-after-free. Since device unregister won't\nneed a clk device we adjust the function call sequence to fix this issue.\n\n[   31.261225] BUG: KASAN: use-after-free in macb_remove+0x77\/0xc6 [macb_pci]\n[   31.275563] Freed by task 306:\n[   30.276782]  platform_device_release+0x25\/0x80"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1da750d1e2140ef43d64d17f301ff6f41b45541e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/46670fb832ee80943715df618632ca13c2e96f2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ad6f2d23b0f6ac0d3e5f3102a4256d1c86c90f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7721221e87d25c9840d9ca6b986dbdc410d5ce2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7d521cc726f30b8e679a6f36d04b18a8ab3c536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d82d5303c4c539db86588ffb5dc5b26c3f1513e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47373","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.157","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip\/gic-v3-its: Fix potential VPE leak on error\n\nIn its_vpe_irq_domain_alloc, when its_vpe_init() returns an error,\nthere is an off-by-one in the number of VPEs to be freed.\n\nFix it by simply passing the number of VPEs allocated, which is the\nindex of the loop iterating over the VPEs.\n\n[maz: fixed commit message]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/280bef512933b2dda01d681d8cbe499b98fc5bdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/42d3711c23781045e7a5cd28536c774b9a66d20b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/568662e37f927e3dc3e475f3ff7cf4ab7719c5e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5701e8bff314c155e7afdc467b1e0389d86853d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d39992d45acd6f2d6b2f62389c55b61fb3d486b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0c1c2e5da19685a20557a50f10c6aa4fa26aa84","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47374","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.223","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndma-debug: prevent an error message from causing runtime problems\n\nFor some drivers, that use the DMA API. This error message can be reached\nseveral millions of times per second, causing spam to the kernel's printk\nbuffer and bringing the CPU usage up to 100% (so, it should be rate\nlimited). However, since there is at least one driver that is in the\nmainline and suffers from the error condition, it is more useful to\nerr_printk() here instead of just rate limiting the error message (in hopes\nthat it will make it easier for other drivers that suffer from this issue\nto be spotted)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/510e1a724ab1bf38150be2c1acabb303f98d0047","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de4afec2d2946c92c62a15ab341c70b287289e6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47375","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.290","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblktrace: Fix uaf in blk_trace access after removing by sysfs\n\nThere is an use-after-free problem triggered by following process:\n\n      P1(sda)\t\t\t\tP2(sdb)\n\t\t\techo 0 > \/sys\/block\/sdb\/trace\/enable\n\t\t\t  blk_trace_remove_queue\n\t\t\t    synchronize_rcu\n\t\t\t    blk_trace_free\n\t\t\t      relay_close\nrcu_read_lock\n__blk_add_trace\n  trace_note_tsk\n  (Iterate running_trace_list)\n\t\t\t        relay_close_buf\n\t\t\t\t  relay_destroy_buf\n\t\t\t\t    kfree(buf)\n    trace_note(sdb's bt)\n      relay_reserve\n        buf->offset <- nullptr deference (use-after-free) !!!\nrcu_read_unlock\n\n[  502.714379] BUG: kernel NULL pointer dereference, address:\n0000000000000010\n[  502.715260] #PF: supervisor read access in kernel mode\n[  502.715903] #PF: error_code(0x0000) - not-present page\n[  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0\n[  502.717252] Oops: 0000 [#1] SMP\n[  502.720308] RIP: 0010:trace_note.isra.0+0x86\/0x360\n[  502.732872] Call Trace:\n[  502.733193]  __blk_add_trace.cold+0x137\/0x1a3\n[  502.733734]  blk_add_trace_rq+0x7b\/0xd0\n[  502.734207]  blk_add_trace_rq_issue+0x54\/0xa0\n[  502.734755]  blk_mq_start_request+0xde\/0x1b0\n[  502.735287]  scsi_queue_rq+0x528\/0x1140\n...\n[  502.742704]  sg_new_write.isra.0+0x16e\/0x3e0\n[  502.747501]  sg_ioctl+0x466\/0x1100\n\nReproduce method:\n  ioctl(\/dev\/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(\/dev\/sda, BLKTRACESTART)\n  ioctl(\/dev\/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])\n  ioctl(\/dev\/sdb, BLKTRACESTART)\n\n  echo 0 > \/sys\/block\/sdb\/trace\/enable &\n  \/\/ Add delay(mdelay\/msleep) before kernel enters blk_trace_free()\n\n  ioctl$SG_IO(\/dev\/sda, SG_IO, ...)\n  \/\/ Enters trace_note_tsk() after blk_trace_free() returned\n  \/\/ Use mdelay in rcu region rather than msleep(which may schedule out)\n\nRemove blk_trace from running_list before calling blk_trace_free() by\nsysfs if blk_trace is at Blktrace_running state."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3815fe7371d2411ce164281cef40d9fc7b323dee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/488da313edf3abea7f7733efe011c96b23740ab5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5afedf670caf30a2b5a52da96eb7eac7dee6a9c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/677e362ba807f3aafe6f405c07e0b37244da5222","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a5f8e86192612d0183047448d8bbe7918b3f1a26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d56171d9360c0170c5c5f8f7e2362a2e999eca40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dacfd5e4d1142bfb3809aab3634a375f6f373269","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebb8d26d93c3ec3c7576c52a8373a2309423c069","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47376","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.380","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Add oversize check before call kvcalloc()\n\nCommit 7661809d493b (\"mm: don't allow oversized kvmalloc() calls\") add the\noversize check. When the allocation is larger than what kmalloc() supports,\nthe following warning triggered:\n\nWARNING: CPU: 0 PID: 8408 at mm\/util.c:597 kvmalloc_node+0x108\/0x110 mm\/util.c:597\nModules linked in:\nCPU: 0 PID: 8408 Comm: syz-executor221 Not tainted 5.14.0-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:kvmalloc_node+0x108\/0x110 mm\/util.c:597\nCall Trace:\n kvmalloc include\/linux\/mm.h:806 [inline]\n kvmalloc_array include\/linux\/mm.h:824 [inline]\n kvcalloc include\/linux\/mm.h:829 [inline]\n check_btf_line kernel\/bpf\/verifier.c:9925 [inline]\n check_btf_info kernel\/bpf\/verifier.c:10049 [inline]\n bpf_check+0xd634\/0x150d0 kernel\/bpf\/verifier.c:13759\n bpf_prog_load kernel\/bpf\/syscall.c:2301 [inline]\n __sys_bpf+0x11181\/0x126e0 kernel\/bpf\/syscall.c:4587\n __do_sys_bpf kernel\/bpf\/syscall.c:4691 [inline]\n __se_sys_bpf kernel\/bpf\/syscall.c:4689 [inline]\n __x64_sys_bpf+0x78\/0x90 kernel\/bpf\/syscall.c:4689\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e6491b559704da720f6da09dd0a52c4df44c514","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6345a0bee80139ea00a341c4202ebfd1534b5eb0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93937596e0652d50973f9dc944fea1694ac8cdfd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5fe7cdfee5901ce5513c30e554d51536e003bde","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47377","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.453","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxen\/balloon: use a kernel thread instead a workqueue\n\nToday the Xen ballooning is done via delayed work in a workqueue. This\nmight result in workqueue hangups being reported in case of large\namounts of memory are being ballooned in one go (here 16GB):\n\nBUG: workqueue lockup - pool cpus=6 node=0 flags=0x0 nice=0 stuck for 64s!\nShowing busy workqueues and worker pools:\nworkqueue events: flags=0x0\n  pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=2\/256 refcnt=3\n    in-flight: 229:balloon_process\n    pending: cache_reap\nworkqueue events_freezable_power_: flags=0x84\n  pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1\/256 refcnt=2\n    pending: disk_events_workfn\nworkqueue mm_percpu_wq: flags=0x8\n  pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1\/256 refcnt=2\n    pending: vmstat_update\npool 12: cpus=6 node=0 flags=0x0 nice=0 hung=64s workers=3 idle: 2222 43\n\nThis can easily be avoided by using a dedicated kernel thread for doing\nthe ballooning work."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29917bbb07c30be295dece245c7c21872e1a6fbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/372d3e6ea1e115942fdfb4b25f7003d822d071be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6bba79c6a073741b672b0bf86a1f03c0fe47f973","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8480ed9c2bbd56fc86524998e5f2e3e22f5038f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/922fd5b6bb13ad31ff36e86e2eba2f26d8135272","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c5d5a43dd2b649a0a290bfed00fb76d1aff89be6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47378","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.527","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-rdma: destroy cm id before destroy qp to avoid use after free\n\nWe should always destroy cm_id before destroy qp to avoid to get cma\nevent after qp was destroyed, which may lead to use after free.\nIn RDMA connection establishment error flow, don't destroy qp in cm\nevent handler.Just report cm_error to upper level, qp will be destroy\nin nvme_rdma_alloc_queue() after destroy cm id."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9817d763dbe15327b9b3ff4404fa6f27f927e744","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d268a182c56e8361e19fb781137411643312b994","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecf0dc5a904830c926a64feffd8e01141f89822f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47379","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.590","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-cgroup: fix UAF by grabbing blkcg lock before destroying blkg pd\n\nKASAN reports a use-after-free report when doing fuzz test:\n\n[693354.104835] ==================================================================\n[693354.105094] BUG: KASAN: use-after-free in bfq_io_set_weight_legacy+0xd3\/0x160\n[693354.105336] Read of size 4 at addr ffff888be0a35664 by task sh\/1453338\n\n[693354.105607] CPU: 41 PID: 1453338 Comm: sh Kdump: loaded Not tainted 4.18.0-147\n[693354.105610] Hardware name: Huawei 2288H V5\/BC11SPSCB0, BIOS 0.81 07\/02\/2018\n[693354.105612] Call Trace:\n[693354.105621]  dump_stack+0xf1\/0x19b\n[693354.105626]  ? show_regs_print_info+0x5\/0x5\n[693354.105634]  ? printk+0x9c\/0xc3\n[693354.105638]  ? cpumask_weight+0x1f\/0x1f\n[693354.105648]  print_address_description+0x70\/0x360\n[693354.105654]  kasan_report+0x1b2\/0x330\n[693354.105659]  ? bfq_io_set_weight_legacy+0xd3\/0x160\n[693354.105665]  ? bfq_io_set_weight_legacy+0xd3\/0x160\n[693354.105670]  bfq_io_set_weight_legacy+0xd3\/0x160\n[693354.105675]  ? bfq_cpd_init+0x20\/0x20\n[693354.105683]  cgroup_file_write+0x3aa\/0x510\n[693354.105693]  ? ___slab_alloc+0x507\/0x540\n[693354.105698]  ? cgroup_file_poll+0x60\/0x60\n[693354.105702]  ? 0xffffffff89600000\n[693354.105708]  ? usercopy_abort+0x90\/0x90\n[693354.105716]  ? mutex_lock+0xef\/0x180\n[693354.105726]  kernfs_fop_write+0x1ab\/0x280\n[693354.105732]  ? cgroup_file_poll+0x60\/0x60\n[693354.105738]  vfs_write+0xe7\/0x230\n[693354.105744]  ksys_write+0xb0\/0x140\n[693354.105749]  ? __ia32_sys_read+0x50\/0x50\n[693354.105760]  do_syscall_64+0x112\/0x370\n[693354.105766]  ? syscall_return_slowpath+0x260\/0x260\n[693354.105772]  ? do_page_fault+0x9b\/0x270\n[693354.105779]  ? prepare_exit_to_usermode+0xf9\/0x1a0\n[693354.105784]  ? enter_from_user_mode+0x30\/0x30\n[693354.105793]  entry_SYSCALL_64_after_hwframe+0x65\/0xca\n\n[693354.105875] Allocated by task 1453337:\n[693354.106001]  kasan_kmalloc+0xa0\/0xd0\n[693354.106006]  kmem_cache_alloc_node_trace+0x108\/0x220\n[693354.106010]  bfq_pd_alloc+0x96\/0x120\n[693354.106015]  blkcg_activate_policy+0x1b7\/0x2b0\n[693354.106020]  bfq_create_group_hierarchy+0x1e\/0x80\n[693354.106026]  bfq_init_queue+0x678\/0x8c0\n[693354.106031]  blk_mq_init_sched+0x1f8\/0x460\n[693354.106037]  elevator_switch_mq+0xe1\/0x240\n[693354.106041]  elevator_switch+0x25\/0x40\n[693354.106045]  elv_iosched_store+0x1a1\/0x230\n[693354.106049]  queue_attr_store+0x78\/0xb0\n[693354.106053]  kernfs_fop_write+0x1ab\/0x280\n[693354.106056]  vfs_write+0xe7\/0x230\n[693354.106060]  ksys_write+0xb0\/0x140\n[693354.106064]  do_syscall_64+0x112\/0x370\n[693354.106069]  entry_SYSCALL_64_after_hwframe+0x65\/0xca\n\n[693354.106114] Freed by task 1453336:\n[693354.106225]  __kasan_slab_free+0x130\/0x180\n[693354.106229]  kfree+0x90\/0x1b0\n[693354.106233]  blkcg_deactivate_policy+0x12c\/0x220\n[693354.106238]  bfq_exit_queue+0xf5\/0x110\n[693354.106241]  blk_mq_exit_sched+0x104\/0x130\n[693354.106245]  __elevator_exit+0x45\/0x60\n[693354.106249]  elevator_switch_mq+0xd6\/0x240\n[693354.106253]  elevator_switch+0x25\/0x40\n[693354.106257]  elv_iosched_store+0x1a1\/0x230\n[693354.106261]  queue_attr_store+0x78\/0xb0\n[693354.106264]  kernfs_fop_write+0x1ab\/0x280\n[693354.106268]  vfs_write+0xe7\/0x230\n[693354.106271]  ksys_write+0xb0\/0x140\n[693354.106275]  do_syscall_64+0x112\/0x370\n[693354.106280]  entry_SYSCALL_64_after_hwframe+0x65\/0xca\n\n[693354.106329] The buggy address belongs to the object at ffff888be0a35580\n                 which belongs to the cache kmalloc-1k of size 1024\n[693354.106736] The buggy address is located 228 bytes inside of\n                 1024-byte region [ffff888be0a35580, ffff888be0a35980)\n[693354.107114] The buggy address belongs to the page:\n[693354.107273] page:ffffea002f828c00 count:1 mapcount:0 mapping:ffff888107c17080 index:0x0 compound_mapcount: 0\n[693354.107606] flags: 0x17ffffc0008100(slab|head)\n[693354.107760] raw: 0017ffffc0008100 ffffea002fcbc808 ffffea0030bd3a08 ffff888107c17080\n[693354.108020] r\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7c2c69e010431b0157c9454adcdd2305809bf9fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/858560b27645e7e97aca37ee8f232cccd658fbd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d12ddd843f1877de1f7dd2aeea4907cf9ff3ac08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f58d305887ad7b24986d58e881f6806bb81b2bdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47380","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.663","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: amd_sfh: Fix potential NULL pointer dereference\n\ndevm_add_action_or_reset() can suddenly invoke amd_mp2_pci_remove() at\nregistration that will cause NULL pointer dereference since\ncorresponding data is not initialized yet. The patch moves\ninitialization of data before devm_add_action_or_reset().\n\nFound by Linux Driver Verification project (linuxtesting.org).\n\n[jkosina@suse.cz: rebase]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/283e4bee701dfcd409dd293f19a268bb2bc8ff38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d46ef750ed58cbeeba2d9a55c99231c30a172764","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47381","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.733","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: SOF: Fix DSP oops stack dump output contents\n\nFix @buf arg given to hex_dump_to_buffer() and stack address used\nin dump error output."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a6bb576ead074ca6fa3b53cb1c5d4037a23de81b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac4dfccb96571ca03af7cac64b7a0b2952c97f3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47382","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.803","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/qeth: fix deadlock during failing recovery\n\nCommit 0b9902c1fcc5 (\"s390\/qeth: fix deadlock during recovery\") removed\ntaking discipline_mutex inside qeth_do_reset(), fixing potential\ndeadlocks. An error path was missed though, that still takes\ndiscipline_mutex and thus has the original deadlock potential.\n\nIntermittent deadlocks were seen when a qeth channel path is configured\noffline, causing a race between qeth_do_reset and ccwgroup_remove.\nCall qeth_set_offline() directly in the qeth_do_reset() error case and\nthen a new variant of ccwgroup_set_offline(), without taking\ndiscipline_mutex."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0bfe741741327822d1482c7edef0184636d08b40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2b59bd4b06d84a4eadb520b0f71c62fe8ec0a62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47383","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.873","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: Fix out-of-bound vmalloc access in imageblit\n\nThis issue happens when a userspace program does an ioctl\nFBIOPUT_VSCREENINFO passing the fb_var_screeninfo struct\ncontaining only the fields xres, yres, and bits_per_pixel\nwith values.\n\nIf this struct is the same as the previous ioctl, the\nvc_resize() detects it and doesn't call the resize_screen(),\nleaving the fb_var_screeninfo incomplete. And this leads to\nthe updatescrollmode() calculates a wrong value to\nfbcon_display->vrows, which makes the real_y() return a\nwrong value of y, and that value, eventually, causes\nthe imageblit to access an out-of-bound address value.\n\nTo solve this issue I made the resize_screen() be called\neven if the screen does not need any resizing, so it will\n\"fix and fill\" the fb_var_screeninfo independently."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/067c694d06040db6f0c65281bb358452ca6d85b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b0c406124719b625b1aba431659f5cdc24a982c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/699d926585daa6ec44be556cdc1ab89e5d54557b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70aed03b1d5a5df974f456cdc8eedb213c94bb8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e71fcedfda6f7de18f850a6b36e78d78b04476f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/883f7897a25e3ce14a7f274ca4c73f49ac84002a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a6a240f52e14356386030d8958ae8b1761d2325","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d570c48dd37dbe8fc6875d4461d01a9554ae2560","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47384","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:23.947","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (w83793) Fix NULL pointer dereference by removing unnecessary structure field\n\nIf driver read tmp value sufficient for\n(tmp & 0x08) && (!(tmp & 0x80)) && ((tmp & 0x7) == ((tmp >> 4) & 0x7))\nfrom device then Null pointer dereference occurs.\n(It is possible if tmp = 0b0xyz1xyz, where same literals mean same numbers)\nAlso lm75[] does not serve a purpose anymore after switching to\ndevm_i2c_new_dummy_device() in w83791d_detect_subclients().\n\nThe patch fixes possible NULL pointer dereference by removing lm75[].\n\nFound by Linux Driver Verification project (linuxtesting.org).\n\n[groeck: Dropped unnecessary continuation lines, fixed multi-line alignments]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6cb01fe630eaffc5a2c3f7364436caddba286623","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/746011193f44f97f8784edcf8327c587946745fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c4fd5de39f273626a2b0f3a446d2cc85cd47616","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd4d747ef05addab887dc8ff0d6ab9860bbcd783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47385","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.020","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (w83792d) Fix NULL pointer dereference by removing unnecessary structure field\n\nIf driver read val value sufficient for\n(val & 0x08) && (!(val & 0x80)) && ((val & 0x7) == ((val >> 4) & 0x7))\nfrom device then Null pointer dereference occurs.\n(It is possible if tmp = 0b0xyz1xyz, where same literals mean same numbers)\nAlso lm75[] does not serve a purpose anymore after switching to\ndevm_i2c_new_dummy_device() in w83791d_detect_subclients().\n\nThe patch fixes possible NULL pointer dereference by removing lm75[].\n\nFound by Linux Driver Verification project (linuxtesting.org).\n\n[groeck: Dropped unnecessary continuation lines, fixed multipline alignment]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f36b88173f028e372668ae040ab1a496834d278","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1499bb2c3a87a2efea0065adab2bd66badee61c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/200ced5ba724d8bbf29dfac4ed1e17a39ccaccd1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/24af1fe376e22c42238a4a604d31e46c486876c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47386","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.117","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (w83791d) Fix NULL pointer dereference by removing unnecessary structure field\n\nIf driver read val value sufficient for\n(val & 0x08) && (!(val & 0x80)) && ((val & 0x7) == ((val >> 4) & 0x7))\nfrom device then Null pointer dereference occurs.\n(It is possible if tmp = 0b0xyz1xyz, where same literals mean same numbers)\nAlso lm75[] does not serve a purpose anymore after switching to\ndevm_i2c_new_dummy_device() in w83791d_detect_subclients().\n\nThe patch fixes possible NULL pointer dereference by removing lm75[].\n\nFound by Linux Driver Verification project (linuxtesting.org).\n\n[groeck: Dropped unnecessary continuation lines, fixed multi-line alignment]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16887ae4e3defd2c4e7913b6c539f33eaf4eac5c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44d3c480e4e2a75bf6296a18b4356157991ccd80","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/516d9055039017a20a698103be2b556b4c976bb8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/943c15ac1b84d378da26bba41c83c67e16499ac4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47387","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.183","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: schedutil: Use kobject release() method to free sugov_tunables\n\nThe struct sugov_tunables is protected by the kobject, so we can't free\nit directly. Otherwise we would get a call trace like this:\n  ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0\/0x30\n  WARNING: CPU: 3 PID: 720 at lib\/debugobjects.c:505 debug_print_object+0xb8\/0x100\n  Modules linked in:\n  CPU: 3 PID: 720 Comm: a.sh Tainted: G        W         5.14.0-rc1-next-20210715-yocto-standard+ #507\n  Hardware name: Marvell OcteonTX CN96XX board (DT)\n  pstate: 40400009 (nZcv daif +PAN -UAO -TCO BTYPE=--)\n  pc : debug_print_object+0xb8\/0x100\n  lr : debug_print_object+0xb8\/0x100\n  sp : ffff80001ecaf910\n  x29: ffff80001ecaf910 x28: ffff00011b10b8d0 x27: ffff800011043d80\n  x26: ffff00011a8f0000 x25: ffff800013cb3ff0 x24: 0000000000000000\n  x23: ffff80001142aa68 x22: ffff800011043d80 x21: ffff00010de46f20\n  x20: ffff800013c0c520 x19: ffff800011d8f5b0 x18: 0000000000000010\n  x17: 6e6968207473696c x16: 5f72656d6974203a x15: 6570797420746365\n  x14: 6a626f2029302065 x13: 303378302f307830 x12: 2b6e665f72656d69\n  x11: ffff8000124b1560 x10: ffff800012331520 x9 : ffff8000100ca6b0\n  x8 : 000000000017ffe8 x7 : c0000000fffeffff x6 : 0000000000000001\n  x5 : ffff800011d8c000 x4 : ffff800011d8c740 x3 : 0000000000000000\n  x2 : ffff0001108301c0 x1 : ab3c90eedf9c0f00 x0 : 0000000000000000\n  Call trace:\n   debug_print_object+0xb8\/0x100\n   __debug_check_no_obj_freed+0x1c0\/0x230\n   debug_check_no_obj_freed+0x20\/0x88\n   slab_free_freelist_hook+0x154\/0x1c8\n   kfree+0x114\/0x5d0\n   sugov_exit+0xbc\/0xc0\n   cpufreq_exit_governor+0x44\/0x90\n   cpufreq_set_policy+0x268\/0x4a8\n   store_scaling_governor+0xe0\/0x128\n   store+0xc0\/0xf0\n   sysfs_kf_write+0x54\/0x80\n   kernfs_fop_write_iter+0x128\/0x1c0\n   new_sync_write+0xf0\/0x190\n   vfs_write+0x2d4\/0x478\n   ksys_write+0x74\/0x100\n   __arm64_sys_write+0x24\/0x30\n   invoke_syscall.constprop.0+0x54\/0xe0\n   do_el0_svc+0x64\/0x158\n   el0_svc+0x2c\/0xb0\n   el0t_64_sync_handler+0xb0\/0xb8\n   el0t_64_sync+0x198\/0x19c\n  irq event stamp: 5518\n  hardirqs last  enabled at (5517): [<ffff8000100cbd7c>] console_unlock+0x554\/0x6c8\n  hardirqs last disabled at (5518): [<ffff800010fc0638>] el1_dbg+0x28\/0xa0\n  softirqs last  enabled at (5504): [<ffff8000100106e0>] __do_softirq+0x4d0\/0x6c0\n  softirqs last disabled at (5483): [<ffff800010049548>] irq_exit+0x1b0\/0x1b8\n\nSo split the original sugov_tunables_free() into two functions,\nsugov_clear_global_tunables() is just used to clear the global_tunables\nand the new sugov_tunables_free() is used as kobj_type::release to\nrelease the sugov_tunables safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/30d57cf2c4116ca6d34ecd1cac94ad84f8bc446c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/463c46705f321201090b69c4ad5da0cd2ce614c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/67c98e023135ff81b8d52998a6fdb8ca0c518d82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d62aec52a8c5b1d25a2364b243fcc5098a2ede9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7d4fc84404d45d72f4490417e8cc3efa4af93f1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb4a53ba37532c861a5f3f22803391018a41849a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5c6b312ce3cc97e90ea159446e6bfa06645364d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47388","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.257","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: fix use-after-free in CCMP\/GCMP RX\n\nWhen PN checking is done in mac80211, for fragmentation we need\nto copy the PN to the RX struct so we can later use it to do a\ncomparison, since commit bf30ca922a0c (\"mac80211: check defrag\nPN against current frame\").\n\nUnfortunately, in that commit I used the 'hdr' variable without\nit being necessarily valid, so use-after-free could occur if it\nwas necessary to reallocate (parts of) the frame.\n\nFix this by reloading the variable after the code that results\nin the reallocations, if any.\n\nThis fixes https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=214401."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27d3eb5616ee2c0a3b30c3fa34813368ed1f3dc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/31de381aef0ab1b342f62485118dc8a19363dc78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d5d629c99c468458022e9b381789de3595bf4dd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/447d001b875d0e7f211c4ba004916028da994258","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50149e0866a82cef33e680ee68dc380a5bc75d32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57de2dcb18742dc2860861c9f496da7d42b67da0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94513069eb549737bcfc3d988d6ed4da948a2de8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f556e1d6fb9f2923a9a36f3df638c7d79ba09dbb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47389","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.330","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: fix missing sev_decommission in sev_receive_start\n\nDECOMMISSION the current SEV context if binding an ASID fails after\nRECEIVE_START.  Per AMD's SEV API, RECEIVE_START generates a new guest\ncontext and thus needs to be paired with DECOMMISSION:\n\n     The RECEIVE_START command is the only command other than the LAUNCH_START\n     command that generates a new guest context and guest handle.\n\nThe missing DECOMMISSION can result in subsequent SEV launch failures,\nas the firmware leaks memory and might not able to allocate more SEV\nguest contexts in the future.\n\nNote, LAUNCH_START suffered the same bug, but was previously fixed by\ncommit 934002cd660b (\"KVM: SVM: Call SEV Guest Decommission if ASID\nbinding fails\")."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/efd7866e114dcb44f86d151e843f8276b7efbc67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1815e0aa770f2127c5df31eb5c2f0e37b60fa77","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47390","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.397","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Fix stack-out-of-bounds memory access from ioapic_write_indirect()\n\nKASAN reports the following issue:\n\n BUG: KASAN: stack-out-of-bounds in kvm_make_vcpus_request_mask+0x174\/0x440 [kvm]\n Read of size 8 at addr ffffc9001364f638 by task qemu-kvm\/4798\n\n CPU: 0 PID: 4798 Comm: qemu-kvm Tainted: G               X --------- ---\n Hardware name: AMD Corporation DAYTONA_X\/DAYTONA_X, BIOS RYM0081C 07\/13\/2020\n Call Trace:\n  dump_stack+0xa5\/0xe6\n  print_address_description.constprop.0+0x18\/0x130\n  ? kvm_make_vcpus_request_mask+0x174\/0x440 [kvm]\n  __kasan_report.cold+0x7f\/0x114\n  ? kvm_make_vcpus_request_mask+0x174\/0x440 [kvm]\n  kasan_report+0x38\/0x50\n  kasan_check_range+0xf5\/0x1d0\n  kvm_make_vcpus_request_mask+0x174\/0x440 [kvm]\n  kvm_make_scan_ioapic_request_mask+0x84\/0xc0 [kvm]\n  ? kvm_arch_exit+0x110\/0x110 [kvm]\n  ? sched_clock+0x5\/0x10\n  ioapic_write_indirect+0x59f\/0x9e0 [kvm]\n  ? static_obj+0xc0\/0xc0\n  ? __lock_acquired+0x1d2\/0x8c0\n  ? kvm_ioapic_eoi_inject_work+0x120\/0x120 [kvm]\n\nThe problem appears to be that 'vcpu_bitmap' is allocated as a single long\non stack and it should really be KVM_MAX_VCPUS long. We also seem to clear\nthe lower 16 bits of it with bitmap_zero() for no particular reason (my\nguess would be that 'bitmap' and 'vcpu_bitmap' variables in\nkvm_bitmap_or_dest_vcpus() caused the confusion: while the later is indeed\n16-bit long, the later should accommodate all possible vCPUs)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f9b68f57c6278c322793a06063181deded0ad69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99a9e9b80f19fc63be005a33d76211dd23114792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bebabb76ad9acca8858e0371e102fb60d708e25b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47391","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.480","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cma: Ensure rdma_addr_cancel() happens before issuing more requests\n\nThe FSM can run in a circle allowing rdma_resolve_ip() to be called twice\non the same id_priv. While this cannot happen without going through the\nwork, it violates the invariant that the same address resolution\nbackground request cannot be active twice.\n\n       CPU 1                                  CPU 2\n\nrdma_resolve_addr():\n  RDMA_CM_IDLE -> RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)  #1\n\n\t\t\t process_one_req(): for #1\n                          addr_handler():\n                            RDMA_CM_ADDR_QUERY -> RDMA_CM_ADDR_BOUND\n                            mutex_unlock(&id_priv->handler_mutex);\n                            [.. handler still running ..]\n\nrdma_resolve_addr():\n  RDMA_CM_ADDR_BOUND -> RDMA_CM_ADDR_QUERY\n  rdma_resolve_ip(addr_handler)\n    !! two requests are now on the req_list\n\nrdma_destroy_id():\n destroy_id_handler_unlock():\n  _destroy_id():\n   cma_cancel_operation():\n    rdma_addr_cancel()\n\n                          \/\/ process_one_req() self removes it\n\t\t          spin_lock_bh(&lock);\n                           cancel_delayed_work(&req->work);\n\t                   if (!list_empty(&req->list)) == true\n\n      ! rdma_addr_cancel() returns after process_on_req #1 is done\n\n   kfree(id_priv)\n\n\t\t\t process_one_req(): for #2\n                          addr_handler():\n\t                    mutex_lock(&id_priv->handler_mutex);\n                            !! Use after free on id_priv\n\nrdma_addr_cancel() expects there to be one req on the list and only\ncancels the first one. The self-removal behavior of the work only happens\nafter the handler has returned. This yields a situations where the\nreq_list can have two reqs for the same \"handle\" but rdma_addr_cancel()\nonly cancels the first one.\n\nThe second req remains active beyond rdma_destroy_id() and will\nuse-after-free id_priv once it inevitably triggers.\n\nFix this by remembering if the id_priv has called rdma_resolve_ip() and\nalways cancel before calling it again. This ensures the req_list never\ngets more than one item in it and doesn't cost anything in the normal flow\nthat never uses this strange error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03d884671572af8bcfbc9e63944c1021efce7589","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/305d568b72f17f674155a2a8275f865f207b3808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a085fa9b7d644a234465091e038c1911e1a4f2a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47392","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.553","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/cma: Fix listener leak in rdma_cma_listen_on_all() failure\n\nIf cma_listen_on_all() fails it leaves the per-device ID still on the\nlisten_list but the state is not set to RDMA_CM_ADDR_BOUND.\n\nWhen the cmid is eventually destroyed cma_cancel_listens() is not called\ndue to the wrong state, however the per-device IDs are still holding the\nrefcount preventing the ID from being destroyed, thus deadlocking:\n\n task:rping state:D stack:   0 pid:19605 ppid: 47036 flags:0x00000084\n Call Trace:\n  __schedule+0x29a\/0x780\n  ? free_unref_page_commit+0x9b\/0x110\n  schedule+0x3c\/0xa0\n  schedule_timeout+0x215\/0x2b0\n  ? __flush_work+0x19e\/0x1e0\n  wait_for_completion+0x8d\/0xf0\n  _destroy_id+0x144\/0x210 [rdma_cm]\n  ucma_close_id+0x2b\/0x40 [rdma_ucm]\n  __destroy_id+0x93\/0x2c0 [rdma_ucm]\n  ? __xa_erase+0x4a\/0xa0\n  ucma_destroy_id+0x9a\/0x120 [rdma_ucm]\n  ucma_write+0xb8\/0x130 [rdma_ucm]\n  vfs_write+0xb4\/0x250\n  ksys_write+0xb5\/0xd0\n  ? syscall_trace_enter.isra.19+0x123\/0x190\n  do_syscall_64+0x33\/0x40\n  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nEnsure that cma_listen_on_all() atomically unwinds its action under the\nlock during error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f4e68902d2e545033c80d7ad62fd9a439e573f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca465e1f1f9b38fe916a36f7d80c5d25f2337c81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e56a5146ef8cb51cd7c9e748267dce7564448a35","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47393","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.627","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (mlxreg-fan) Return non-zero value when fan current state is enforced from sysfs\n\nFan speed minimum can be enforced from sysfs. For example, setting\ncurrent fan speed to 20 is used to enforce fan speed to be at 100%\nspeed, 19 - to be not below 90% speed, etcetera. This feature provides\nability to limit fan speed according to some system wise\nconsiderations, like absence of some replaceable units or high system\nambient temperature.\n\nRequest for changing fan minimum speed is configuration request and can\nbe set only through 'sysfs' write procedure. In this situation value of\nargument 'state' is above nominal fan speed maximum.\n\nReturn non-zero code in this case to avoid\nthermal_cooling_device_stats_update() call, because in this case\nstatistics update violates thermal statistics table range.\nThe issues is observed in case kernel is configured with option\nCONFIG_THERMAL_STATISTICS.\n\nHere is the trace from KASAN:\n[  159.506659] BUG: KASAN: slab-out-of-bounds in thermal_cooling_device_stats_update+0x7d\/0xb0\n[  159.516016] Read of size 4 at addr ffff888116163840 by task hw-management.s\/7444\n[  159.545625] Call Trace:\n[  159.548366]  dump_stack+0x92\/0xc1\n[  159.552084]  ? thermal_cooling_device_stats_update+0x7d\/0xb0\n[  159.635869]  thermal_zone_device_update+0x345\/0x780\n[  159.688711]  thermal_zone_device_set_mode+0x7d\/0xc0\n[  159.694174]  mlxsw_thermal_modules_init+0x48f\/0x590 [mlxsw_core]\n[  159.700972]  ? mlxsw_thermal_set_cur_state+0x5a0\/0x5a0 [mlxsw_core]\n[  159.731827]  mlxsw_thermal_init+0x763\/0x880 [mlxsw_core]\n[  160.070233] RIP: 0033:0x7fd995909970\n[  160.074239] Code: 73 01 c3 48 8b 0d 28 d5 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 99 2d 2c 00 00 75 10 b8 01 00 00 00 0f 05 <48> 3d 01 f0 ff ..\n[  160.095242] RSP: 002b:00007fff54f5d938 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[  160.103722] RAX: ffffffffffffffda RBX: 0000000000000013 RCX: 00007fd995909970\n[  160.111710] RDX: 0000000000000013 RSI: 0000000001906008 RDI: 0000000000000001\n[  160.119699] RBP: 0000000001906008 R08: 00007fd995bc9760 R09: 00007fd996210700\n[  160.127687] R10: 0000000000000073 R11: 0000000000000246 R12: 0000000000000013\n[  160.135673] R13: 0000000000000001 R14: 00007fd995bc8600 R15: 0000000000000013\n[  160.143671]\n[  160.145338] Allocated by task 2924:\n[  160.149242]  kasan_save_stack+0x19\/0x40\n[  160.153541]  __kasan_kmalloc+0x7f\/0xa0\n[  160.157743]  __kmalloc+0x1a2\/0x2b0\n[  160.161552]  thermal_cooling_device_setup_sysfs+0xf9\/0x1a0\n[  160.167687]  __thermal_cooling_device_register+0x1b5\/0x500\n[  160.173833]  devm_thermal_of_cooling_device_register+0x60\/0xa0\n[  160.180356]  mlxreg_fan_probe+0x474\/0x5e0 [mlxreg_fan]\n[  160.248140]\n[  160.249807] The buggy address belongs to the object at ffff888116163400\n[  160.249807]  which belongs to the cache kmalloc-1k of size 1024\n[  160.263814] The buggy address is located 64 bytes to the right of\n[  160.263814]  1024-byte region [ffff888116163400, ffff888116163800)\n[  160.277536] The buggy address belongs to the page:\n[  160.282898] page:0000000012275840 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888116167000 pfn:0x116160\n[  160.294872] head:0000000012275840 order:3 compound_mapcount:0 compound_pincount:0\n[  160.303251] flags: 0x200000000010200(slab|head|node=0|zone=2)\n[  160.309694] raw: 0200000000010200 ffffea00046f7208 ffffea0004928208 ffff88810004dbc0\n[  160.318367] raw: ffff888116167000 00000000000a0006 00000001ffffffff 0000000000000000\n[  160.327033] page dumped because: kasan: bad access detected\n[  160.333270]\n[  160.334937] Memory state around the buggy address:\n[  160.356469] >ffff888116163800: fc .."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c6e0bce647d9cb32a17d58ffa669b3421fcc6ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76bbb482d33bfcd7e9070ecf594c9ec73e01c930","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a6c42ae1530f94724d3c42cf91fe3d3c5e394f8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa85fb7bde558bb2e364e85976b14b259c8b6fe8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6fab7af6ba1bc77c78713a83876f60ca7a4a064","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47394","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.710","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: unlink table before deleting it\n\nsyzbot reports following UAF:\nBUG: KASAN: use-after-free in memcmp+0x18f\/0x1c0 lib\/string.c:955\n nla_strcmp+0xf2\/0x130 lib\/nlattr.c:836\n nft_table_lookup.part.0+0x1a2\/0x460 net\/netfilter\/nf_tables_api.c:570\n nft_table_lookup net\/netfilter\/nf_tables_api.c:4064 [inline]\n nf_tables_getset+0x1b3\/0x860 net\/netfilter\/nf_tables_api.c:4064\n nfnetlink_rcv_msg+0x659\/0x13f0 net\/netfilter\/nfnetlink.c:285\n netlink_rcv_skb+0x153\/0x420 net\/netlink\/af_netlink.c:2504\n\nProblem is that all get operations are lockless, so the commit_mutex\nheld by nft_rcv_nl_event() isn't enough to stop a parallel GET request\nfrom doing read-accesses to the table object even after synchronize_rcu().\n\nTo avoid this, unlink the table first and store the table objects in\non-stack scratch space."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/a499b03bf36b0c2e3b958a381d828678ab0ffc5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f65c73d3aabb87d4353e0bc4a718b5ae8c43fd04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47395","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.810","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211: limit injected vht mcs\/nss in ieee80211_parse_tx_radiotap\n\nLimit max values for vht mcs and nss in ieee80211_parse_tx_radiotap\nroutine in order to fix the following warning reported by syzbot:\n\nWARNING: CPU: 0 PID: 10717 at include\/net\/mac80211.h:989 ieee80211_rate_set_vht include\/net\/mac80211.h:989 [inline]\nWARNING: CPU: 0 PID: 10717 at include\/net\/mac80211.h:989 ieee80211_parse_tx_radiotap+0x101e\/0x12d0 net\/mac80211\/tx.c:2244\nModules linked in:\nCPU: 0 PID: 10717 Comm: syz-executor.5 Not tainted 5.14.0-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:ieee80211_rate_set_vht include\/net\/mac80211.h:989 [inline]\nRIP: 0010:ieee80211_parse_tx_radiotap+0x101e\/0x12d0 net\/mac80211\/tx.c:2244\nRSP: 0018:ffffc9000186f3e8 EFLAGS: 00010216\nRAX: 0000000000000618 RBX: ffff88804ef76500 RCX: ffffc900143a5000\nRDX: 0000000000040000 RSI: ffffffff888f478e RDI: 0000000000000003\nRBP: 00000000ffffffff R08: 0000000000000000 R09: 0000000000000100\nR10: ffffffff888f46f9 R11: 0000000000000000 R12: 00000000fffffff8\nR13: ffff88804ef7653c R14: 0000000000000001 R15: 0000000000000004\nFS:  00007fbf5718f700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000001b2de23000 CR3: 000000006a671000 CR4: 00000000001506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\nCall Trace:\n ieee80211_monitor_select_queue+0xa6\/0x250 net\/mac80211\/iface.c:740\n netdev_core_pick_tx+0x169\/0x2e0 net\/core\/dev.c:4089\n __dev_queue_xmit+0x6f9\/0x3710 net\/core\/dev.c:4165\n __bpf_tx_skb net\/core\/filter.c:2114 [inline]\n __bpf_redirect_no_mac net\/core\/filter.c:2139 [inline]\n __bpf_redirect+0x5ba\/0xd20 net\/core\/filter.c:2162\n ____bpf_clone_redirect net\/core\/filter.c:2429 [inline]\n bpf_clone_redirect+0x2ae\/0x420 net\/core\/filter.c:2401\n bpf_prog_eeb6f53a69e5c6a2+0x59\/0x234\n bpf_dispatcher_nop_func include\/linux\/bpf.h:717 [inline]\n __bpf_prog_run include\/linux\/filter.h:624 [inline]\n bpf_prog_run include\/linux\/filter.h:631 [inline]\n bpf_test_run+0x381\/0xa30 net\/bpf\/test_run.c:119\n bpf_prog_test_run_skb+0xb84\/0x1ee0 net\/bpf\/test_run.c:663\n bpf_prog_test_run kernel\/bpf\/syscall.c:3307 [inline]\n __sys_bpf+0x2137\/0x5df0 kernel\/bpf\/syscall.c:4605\n __do_sys_bpf kernel\/bpf\/syscall.c:4691 [inline]\n __se_sys_bpf kernel\/bpf\/syscall.c:4689 [inline]\n __x64_sys_bpf+0x75\/0xb0 kernel\/bpf\/syscall.c:4689\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\nRIP: 0033:0x4665f9"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1282bb00835ff79d2d9c023055d514df5b4de260","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13cb6d826e0ac0d144b0d48191ff1a111d32f0c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76538c7b4df314bb937e44c5cb1782f37d47443c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/997ee230e4f5285cd98445c102d9033c7ec4814b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ab85997465b972d39d9747fc16311fa5773374b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce5f372f5f084ff51c285fc27b232f15a3d00f0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5bb852aa2ad963074f0ad73030dbc20a30853e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47396","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:24.920","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmac80211-hwsim: fix late beacon hrtimer handling\n\nThomas explained in https:\/\/lore.kernel.org\/r\/87mtoeb4hb.ffs@tglx\nthat our handling of the hrtimer here is wrong: If the timer fires\nlate (e.g. due to vCPU scheduling, as reported by Dmitry\/syzbot)\nthen it tries to actually rearm the timer at the next deadline,\nwhich might be in the past already:\n\n 1          2          3          N          N+1\n |          |          |   ...    |          |\n\n ^ intended to fire here (1)\n            ^ next deadline here (2)\n                                      ^ actually fired here\n\nThe next time it fires, it's later, but will still try to schedule\nfor the next deadline (now 3), etc. until it catches up with N,\nbut that might take a long time, causing stalls etc.\n\nNow, all of this is simulation, so we just have to fix it, but\nnote that the behaviour is wrong even per spec, since there's no\nvalue then in sending all those beacons unaligned - they should be\naligned to the TBTT (1, 2, 3, ... in the picture), and if we're a\nbit (or a lot) late, then just resume at that point.\n\nTherefore, change the code to use hrtimer_forward_now() which will\nensure that the next firing of the timer would be at N+1 (in the\npicture), i.e. the next interval point after the current time."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c204cf594df3b9468368dc9d0b24d482d93cda7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/313bbd1990b6ddfdaa7da098d0c56b098a833572","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bee85de2c8155388c09a2e1530a243ec1c96f05","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ed2adf69e29848d1eb9df99633dde655421c92ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47397","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.017","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: break out if skb_header_pointer returns NULL in sctp_rcv_ootb\n\nWe should always check if skb_header_pointer's return is NULL before\nusing it, otherwise it may cause null-ptr-deref, as syzbot reported:\n\n  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\n  RIP: 0010:sctp_rcv_ootb net\/sctp\/input.c:705 [inline]\n  RIP: 0010:sctp_rcv+0x1d84\/0x3220 net\/sctp\/input.c:196\n  Call Trace:\n  <IRQ>\n   sctp6_rcv+0x38\/0x60 net\/sctp\/ipv6.c:1109\n   ip6_protocol_deliver_rcu+0x2e9\/0x1ca0 net\/ipv6\/ip6_input.c:422\n   ip6_input_finish+0x62\/0x170 net\/ipv6\/ip6_input.c:463\n   NF_HOOK include\/linux\/netfilter.h:307 [inline]\n   NF_HOOK include\/linux\/netfilter.h:301 [inline]\n   ip6_input+0x9c\/0xd0 net\/ipv6\/ip6_input.c:472\n   dst_input include\/net\/dst.h:460 [inline]\n   ip6_rcv_finish net\/ipv6\/ip6_input.c:76 [inline]\n   NF_HOOK include\/linux\/netfilter.h:307 [inline]\n   NF_HOOK include\/linux\/netfilter.h:301 [inline]\n   ipv6_rcv+0x28c\/0x3c0 net\/ipv6\/ip6_input.c:297"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/77bc7dcf0fcc1519341a91788d7a2914fcfddf6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8180611c238e11676612eb2a9828b1c7a3a4d77b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c630a7b4f9dec63f08bd881ab77984a724a5124","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c6591ae8e63f93c895ad5e2703c36c548aac997","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec018021cf445abbe8e2f3e2a7f1dcc813cb8ea1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7e745f8e94492a8ac0b0a26e25f2b19d342918f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47398","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.247","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/hfi1: Fix kernel pointer leak\n\nPointers should be printed with %p or %px rather than cast to 'unsigned\nlong long' and printed with %llx.  Change %llx to %p to print the secured\npointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/714bfabe5f2901d96902e271d7217601fe4703e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d5cfafe8b4006a75b55c2f1fdfdb363f9a5cc98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47399","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.360","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nixgbe: Fix NULL pointer dereference in ixgbe_xdp_setup\n\nThe ixgbe driver currently generates a NULL pointer dereference with\nsome machine (online cpus < 63). This is due to the fact that the\nmaximum value of num_xdp_queues is nr_cpu_ids. Code is in\n\"ixgbe_set_rss_queues\"\".\n\nHere's how the problem repeats itself:\nSome machine (online cpus < 63), And user set num_queues to 63 through\nethtool. Code is in the \"ixgbe_set_channels\",\n\tadapter->ring_feature[RING_F_FDIR].limit = count;\n\nIt becomes 63.\n\nWhen user use xdp, \"ixgbe_set_rss_queues\" will set queues num.\n\tadapter->num_rx_queues = rss_i;\n\tadapter->num_tx_queues = rss_i;\n\tadapter->num_xdp_queues = ixgbe_xdp_queues(adapter);\n\nAnd rss_i's value is from\n\tf = &adapter->ring_feature[RING_F_FDIR];\n\trss_i = f->indices = f->limit;\n\nSo \"num_rx_queues\" > \"num_xdp_queues\", when run to \"ixgbe_xdp_setup\",\n\tfor (i = 0; i < adapter->num_rx_queues; i++)\n\t\tif (adapter->xdp_ring[i]->xsk_umem)\n\nIt leads to panic.\n\nCall trace:\n[exception RIP: ixgbe_xdp+368]\nRIP: ffffffffc02a76a0  RSP: ffff9fe16202f8d0  RFLAGS: 00010297\nRAX: 0000000000000000  RBX: 0000000000000020  RCX: 0000000000000000\nRDX: 0000000000000000  RSI: 000000000000001c  RDI: ffffffffa94ead90\nRBP: ffff92f8f24c0c18   R8: 0000000000000000   R9: 0000000000000000\nR10: ffff9fe16202f830  R11: 0000000000000000  R12: ffff92f8f24c0000\nR13: ffff9fe16202fc01  R14: 000000000000000a  R15: ffffffffc02a7530\nORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018\n 7 [ffff9fe16202f8f0] dev_xdp_install at ffffffffa89fbbcc\n 8 [ffff9fe16202f920] dev_change_xdp_fd at ffffffffa8a08808\n 9 [ffff9fe16202f960] do_setlink at ffffffffa8a20235\n10 [ffff9fe16202fa88] rtnl_setlink at ffffffffa8a20384\n11 [ffff9fe16202fc78] rtnetlink_rcv_msg at ffffffffa8a1a8dd\n12 [ffff9fe16202fcf0] netlink_rcv_skb at ffffffffa8a717eb\n13 [ffff9fe16202fd40] netlink_unicast at ffffffffa8a70f88\n14 [ffff9fe16202fd80] netlink_sendmsg at ffffffffa8a71319\n15 [ffff9fe16202fdf0] sock_sendmsg at ffffffffa89df290\n16 [ffff9fe16202fe08] __sys_sendto at ffffffffa89e19c8\n17 [ffff9fe16202ff30] __x64_sys_sendto at ffffffffa89e1a64\n18 [ffff9fe16202ff38] do_syscall_64 at ffffffffa84042b9\n19 [ffff9fe16202ff50] entry_SYSCALL_64_after_hwframe at ffffffffa8c0008c\n\nSo I fix ixgbe_max_channels so that it will not allow a setting of queues\nto be higher than the num_online_cpus(). And when run to ixgbe_xdp_setup,\ntake the smaller value of num_rx_queues and num_xdp_queues."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20f6c4a31a525edd9ea6243712b868ba0e4e331e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2744341dd52e935344ca1b4bf189ba0d182a3e8e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/513e605d7a9ce136886cb42ebb2c40e9a6eb6333","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47400","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.457","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: do not allow call hns3_nic_net_open repeatedly\n\nhns3_nic_net_open() is not allowed to called repeatly, but there\nis no checking for this. When doing device reset and setup tc\nconcurrently, there is a small oppotunity to call hns3_nic_net_open\nrepeatedly, and cause kernel bug by calling napi_enable twice.\n\nThe calltrace information is like below:\n[ 3078.222780] ------------[ cut here ]------------\n[ 3078.230255] kernel BUG at net\/core\/dev.c:6991!\n[ 3078.236224] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP\n[ 3078.243431] Modules linked in: hns3 hclgevf hclge hnae3 vfio_iommu_type1 vfio_pci vfio_virqfd vfio pv680_mii(O)\n[ 3078.258880] CPU: 0 PID: 295 Comm: kworker\/u8:5 Tainted: G           O      5.14.0-rc4+ #1\n[ 3078.269102] Hardware name:  , BIOS KpxxxFPGA 1P B600 V181 08\/12\/2021\n[ 3078.276801] Workqueue: hclge hclge_service_task [hclge]\n[ 3078.288774] pstate: 60400009 (nZCv daif +PAN -UAO -TCO BTYPE=--)\n[ 3078.296168] pc : napi_enable+0x80\/0x84\ntc qdisc sho[w  3d0e7v8 .e3t0h218 79] lr : hns3_nic_net_open+0x138\/0x510 [hns3]\n\n[ 3078.314771] sp : ffff8000108abb20\n[ 3078.319099] x29: ffff8000108abb20 x28: 0000000000000000 x27: ffff0820a8490300\n[ 3078.329121] x26: 0000000000000001 x25: ffff08209cfc6200 x24: 0000000000000000\n[ 3078.339044] x23: ffff0820a8490300 x22: ffff08209cd76000 x21: ffff0820abfe3880\n[ 3078.349018] x20: 0000000000000000 x19: ffff08209cd76900 x18: 0000000000000000\n[ 3078.358620] x17: 0000000000000000 x16: ffffc816e1727a50 x15: 0000ffff8f4ff930\n[ 3078.368895] x14: 0000000000000000 x13: 0000000000000000 x12: 0000259e9dbeb6b4\n[ 3078.377987] x11: 0096a8f7e764eb40 x10: 634615ad28d3eab5 x9 : ffffc816ad8885b8\n[ 3078.387091] x8 : ffff08209cfc6fb8 x7 : ffff0820ac0da058 x6 : ffff0820a8490344\n[ 3078.396356] x5 : 0000000000000140 x4 : 0000000000000003 x3 : ffff08209cd76938\n[ 3078.405365] x2 : 0000000000000000 x1 : 0000000000000010 x0 : ffff0820abfe38a0\n[ 3078.414657] Call trace:\n[ 3078.418517]  napi_enable+0x80\/0x84\n[ 3078.424626]  hns3_reset_notify_up_enet+0x78\/0xd0 [hns3]\n[ 3078.433469]  hns3_reset_notify+0x64\/0x80 [hns3]\n[ 3078.441430]  hclge_notify_client+0x68\/0xb0 [hclge]\n[ 3078.450511]  hclge_reset_rebuild+0x524\/0x884 [hclge]\n[ 3078.458879]  hclge_reset_service_task+0x3c4\/0x680 [hclge]\n[ 3078.467470]  hclge_service_task+0xb0\/0xb54 [hclge]\n[ 3078.475675]  process_one_work+0x1dc\/0x48c\n[ 3078.481888]  worker_thread+0x15c\/0x464\n[ 3078.487104]  kthread+0x160\/0x170\n[ 3078.492479]  ret_from_fork+0x10\/0x18\n[ 3078.498785] Code: c8027c81 35ffffa2 d50323bf d65f03c0 (d4210000)\n[ 3078.506889] ---[ end trace 8ebe0340a1b0fb44 ]---\n\nOnce hns3_nic_net_open() is excute success, the flag\nHNS3_NIC_STATE_DOWN will be cleared. So add checking for this\nflag, directly return when HNS3_NIC_STATE_DOWN is no set."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3dac38bdce7932901b9f0b71c62331852c809e61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a31d4e73ada8022427b69b10fd1f01a6a8d4b3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b09e88e1bf7fe86540fab4b5f3eece8abead39e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f8ba689cb69523144d10606096ef686002dd7285","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47401","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.563","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipack: ipoctal: fix stack information leak\n\nThe tty driver name is used also after registering the driver and must\nspecifically not be allocated on the stack to avoid leaking information\nto user space (or triggering an oops).\n\nDrivers should not try to encode topology information in the tty device\nname but this one snuck in through staging without anyone noticing and\nanother driver has since copied this malpractice.\n\nFixing the ABI is a separate issue, but this at least plugs the security\nhole."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a9c36a2e06a249acbed64e8e0b84637c2ad7575","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2725925982dc96a78069cd118ea3d66759bfdad7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f6a309a699675680df15d9b6d389114515b4426","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/741ea2670e021350e54f491106bdaa22dc50e6a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/829f13d6079cf7a2465522f39acb43033e9b320d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8657158a3b68c85234e6da3d8eae33d6183588b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a89936cce87d60766a75732a9e7e25c51164f47c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acb96e782bad427ca4bb1bd94af660acd1462380","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47402","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.690","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: flower: protect fl_walk() with rcu\n\nPatch that refactored fl_walk() to use idr_for_each_entry_continue_ul()\nalso removed rcu protection of individual filters which causes following\nuse-after-free when filter is deleted concurrently. Fix fl_walk() to obtain\nrcu read lock while iterating and taking the filter reference and temporary\nrelease the lock while calling arg->fn() callback that can sleep.\n\nKASAN trace:\n\n[  352.773640] ==================================================================\n[  352.775041] BUG: KASAN: use-after-free in fl_walk+0x159\/0x240 [cls_flower]\n[  352.776304] Read of size 4 at addr ffff8881c8251480 by task tc\/2987\n\n[  352.777862] CPU: 3 PID: 2987 Comm: tc Not tainted 5.15.0-rc2+ #2\n[  352.778980] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n[  352.781022] Call Trace:\n[  352.781573]  dump_stack_lvl+0x46\/0x5a\n[  352.782332]  print_address_description.constprop.0+0x1f\/0x140\n[  352.783400]  ? fl_walk+0x159\/0x240 [cls_flower]\n[  352.784292]  ? fl_walk+0x159\/0x240 [cls_flower]\n[  352.785138]  kasan_report.cold+0x83\/0xdf\n[  352.785851]  ? fl_walk+0x159\/0x240 [cls_flower]\n[  352.786587]  kasan_check_range+0x145\/0x1a0\n[  352.787337]  fl_walk+0x159\/0x240 [cls_flower]\n[  352.788163]  ? fl_put+0x10\/0x10 [cls_flower]\n[  352.789007]  ? __mutex_unlock_slowpath.constprop.0+0x220\/0x220\n[  352.790102]  tcf_chain_dump+0x231\/0x450\n[  352.790878]  ? tcf_chain_tp_delete_empty+0x170\/0x170\n[  352.791833]  ? __might_sleep+0x2e\/0xc0\n[  352.792594]  ? tfilter_notify+0x170\/0x170\n[  352.793400]  ? __mutex_unlock_slowpath.constprop.0+0x220\/0x220\n[  352.794477]  tc_dump_tfilter+0x385\/0x4b0\n[  352.795262]  ? tc_new_tfilter+0x1180\/0x1180\n[  352.796103]  ? __mod_node_page_state+0x1f\/0xc0\n[  352.796974]  ? __build_skb_around+0x10e\/0x130\n[  352.797826]  netlink_dump+0x2c0\/0x560\n[  352.798563]  ? netlink_getsockopt+0x430\/0x430\n[  352.799433]  ? __mutex_unlock_slowpath.constprop.0+0x220\/0x220\n[  352.800542]  __netlink_dump_start+0x356\/0x440\n[  352.801397]  rtnetlink_rcv_msg+0x3ff\/0x550\n[  352.802190]  ? tc_new_tfilter+0x1180\/0x1180\n[  352.802872]  ? rtnl_calcit.isra.0+0x1f0\/0x1f0\n[  352.803668]  ? tc_new_tfilter+0x1180\/0x1180\n[  352.804344]  ? _copy_from_iter_nocache+0x800\/0x800\n[  352.805202]  ? kasan_set_track+0x1c\/0x30\n[  352.805900]  netlink_rcv_skb+0xc6\/0x1f0\n[  352.806587]  ? rht_deferred_worker+0x6b0\/0x6b0\n[  352.807455]  ? rtnl_calcit.isra.0+0x1f0\/0x1f0\n[  352.808324]  ? netlink_ack+0x4d0\/0x4d0\n[  352.809086]  ? netlink_deliver_tap+0x62\/0x3d0\n[  352.809951]  netlink_unicast+0x353\/0x480\n[  352.810744]  ? netlink_attachskb+0x430\/0x430\n[  352.811586]  ? __alloc_skb+0xd7\/0x200\n[  352.812349]  netlink_sendmsg+0x396\/0x680\n[  352.813132]  ? netlink_unicast+0x480\/0x480\n[  352.813952]  ? __import_iovec+0x192\/0x210\n[  352.814759]  ? netlink_unicast+0x480\/0x480\n[  352.815580]  sock_sendmsg+0x6c\/0x80\n[  352.816299]  ____sys_sendmsg+0x3a5\/0x3c0\n[  352.817096]  ? kernel_sendmsg+0x30\/0x30\n[  352.817873]  ? __ia32_sys_recvmmsg+0x150\/0x150\n[  352.818753]  ___sys_sendmsg+0xd8\/0x140\n[  352.819518]  ? sendmsg_copy_msghdr+0x110\/0x110\n[  352.820402]  ? ___sys_recvmsg+0xf4\/0x1a0\n[  352.821110]  ? __copy_msghdr_from_user+0x260\/0x260\n[  352.821934]  ? _raw_spin_lock+0x81\/0xd0\n[  352.822680]  ? __handle_mm_fault+0xef3\/0x1b20\n[  352.823549]  ? rb_insert_color+0x2a\/0x270\n[  352.824373]  ? copy_page_range+0x16b0\/0x16b0\n[  352.825209]  ? perf_event_update_userpage+0x2d0\/0x2d0\n[  352.826190]  ? __fget_light+0xd9\/0xf0\n[  352.826941]  __sys_sendmsg+0xb3\/0x130\n[  352.827613]  ? __sys_sendmsg_sock+0x20\/0x20\n[  352.828377]  ? do_user_addr_fault+0x2c5\/0x8a0\n[  352.829184]  ? fpregs_assert_state_consistent+0x52\/0x60\n[  352.830001]  ? exit_to_user_mode_prepare+0x32\/0x160\n[  352.830845]  do_syscall_64+0x35\/0x80\n[  352.831445]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[  352.832331] RIP: 0033:0x7f7bee973c17\n[ \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/694b0cee7f8546b69a80996a29cb3cf4149c0453","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0d520c19e7ea19ed38dc5797b12397b6ccf9f88","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d5ef190693a7d76c5c192d108e8dec48307b46ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dab4677bdbffa5c8270e79e34e51c89efa0728a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47403","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.803","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipack: ipoctal: fix module reference leak\n\nA reference to the carrier module was taken on every open but was only\nreleased once when the final reference to the tty struct was dropped.\n\nFix this by taking the module reference and initialising the tty driver\ndata when installing the tty."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/31398849b84ebae0d43a1cf379cb9895597f221a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3253c87e1e5bc0107aab773af2f135ebccf38666","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cea848678470daadbfdaa6a112b823c290f900c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/811178f296b16af30264def74c8d2179a72d5562","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9c5b77a7ffc983b2429ce158b50497c5d3c86a69","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb8a4fcb2136508224c596a7e665bdba1d7c3c27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0adb5a947dec6cff7050ec56d78ecd3916f9ce6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dde4c1429b97383689f755ce92b4ed1e84a9c92b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47404","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:25.920","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: betop: fix slab-out-of-bounds Write in betop_probe\n\nSyzbot reported slab-out-of-bounds Write bug in hid-betopff driver.\nThe problem is the driver assumes the device must have an input report but\nsome malicious devices violate this assumption.\n\nSo this patch checks hid_device's input is non empty before it's been used."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c83c38dec83d57bc18d0c01d82c413d3b34ccb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e4ce418b1cb1a810256b5fb3fd33d22d1325993","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fc4476dda58f6c00097c7ddec3b772513f57525","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/708107b80aa616976d1c5fa60ac0c1390749db5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4faa7153b87fbcfe4be15f4278676f79ca6e019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb8b72374db69afa25a5b65cf1c092860c6fe914","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dedfc35a2de2bae9fa3da8210a05bfd515f83fee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe9bb925e7096509711660d39c0493a1546e9550","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47405","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.030","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: usbhid: free raw_report buffers in usbhid_stop\n\nFree the unsent raw_report buffers when the device is removed.\n\nFixes a memory leak reported by syzbot at:\nhttps:\/\/syzkaller.appspot.com\/bug?id=7b4fa7cb1a7c2d3342a2a8a6c53371c8c418ab47"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b704864c92dcec2b295f276fcfbfb81d9831f81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/764ac04de056801dfe52a716da63f6e7018e7f3b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ce4e49146612261265671b1d30d117139021030","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/965147067fa1bedff3ae1f07ce3f89f1a14d2df3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c3156fea4d8a0e643625dff69a0421e872d1fdae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efc5c8d29256955cc90d8d570849b2d6121ed09f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7744fa16b96da57187dc8e5634152d3b63d72de","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f7ac4d24e1610b92689946fa88177673f1e88a3f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47406","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.170","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: add error checking to ext4_ext_replay_set_iblocks()\n\nIf the call to ext4_map_blocks() fails due to an corrupted file\nsystem, ext4_ext_replay_set_iblocks() can get stuck in an infinite\nloop.  This could be reproduced by running generic\/526 with a file\nsystem that has inline_data and fast_commit enabled.  The system will\nrepeatedly log to the console:\n\nEXT4-fs warning (device dm-3): ext4_block_to_path:105: block 1074800922 > max in inode 131076\n\nand the stack that it gets stuck in is:\n\n   ext4_block_to_path+0xe3\/0x130\n   ext4_ind_map_blocks+0x93\/0x690\n   ext4_map_blocks+0x100\/0x660\n   skip_hole+0x47\/0x70\n   ext4_ext_replay_set_iblocks+0x223\/0x440\n   ext4_fc_replay_inode+0x29e\/0x3b0\n   ext4_fc_replay+0x278\/0x550\n   do_one_pass+0x646\/0xc10\n   jbd2_journal_recover+0x14a\/0x270\n   jbd2_journal_load+0xc4\/0x150\n   ext4_load_journal+0x1f3\/0x490\n   ext4_fill_super+0x22d4\/0x2c00\n\nWith this patch, generic\/526 still fails, but system is no longer\nlocking up in a tight loop.  It's likely the root casue is that\nfast_commit replay is corrupting file systems with inline_data, and we\nprobably need to add better error handling in the fast commit replay\ncode path beyond what is done here, which essentially just breaks the\ninfinite loop without reporting the to the higher levels of the code."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fd95c05d8f742abfe906620780aee4dbe1a2db0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/27e10c5d31ff1d222c7f797f1ee96d422859ba67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a63474dbf692dd09b50fed592bc41f6de5f102fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47407","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.247","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Handle SRCU initialization failure during page track init\n\nCheck the return of init_srcu_struct(), which can fail due to OOM, when\ninitializing the page track mechanism.  Lack of checking leads to a NULL\npointer deref found by a modified syzkaller.\n\n[Move the call towards the beginning of kvm_arch_init_vm. - Paolo]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4664318f73e496cd22c71b10888e75434a123e23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/deb2949417677649e2413266d7ce8c2ff73952b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb7511bf9182292ef1df1082d23039e856d1ddfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47408","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.337","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: serialize hash resizes and cleanups\n\nSyzbot was able to trigger the following warning [1]\n\nNo repro found by syzbot yet but I was able to trigger similar issue\nby having 2 scripts running in parallel, changing conntrack hash sizes,\nand:\n\nfor j in `seq 1 1000` ; do unshare -n \/bin\/true >\/dev\/null ; done\n\nIt would take more than 5 minutes for net_namespace structures\nto be cleaned up.\n\nThis is because nf_ct_iterate_cleanup() has to restart everytime\na resize happened.\n\nBy adding a mutex, we can serialize hash resizes and cleanups\nand also make get_next_corpse() faster by skipping over empty\nbuckets.\n\nEven without resizes in the picture, this patch considerably\nspeeds up network namespace dismantles.\n\n[1]\nINFO: task syz-executor.0:8312 can't die for more than 144 seconds.\ntask:syz-executor.0  state:R  running task     stack:25672 pid: 8312 ppid:  6573 flags:0x00004006\nCall Trace:\n context_switch kernel\/sched\/core.c:4955 [inline]\n __schedule+0x940\/0x26f0 kernel\/sched\/core.c:6236\n preempt_schedule_common+0x45\/0xc0 kernel\/sched\/core.c:6408\n preempt_schedule_thunk+0x16\/0x18 arch\/x86\/entry\/thunk_64.S:35\n __local_bh_enable_ip+0x109\/0x120 kernel\/softirq.c:390\n local_bh_enable include\/linux\/bottom_half.h:32 [inline]\n get_next_corpse net\/netfilter\/nf_conntrack_core.c:2252 [inline]\n nf_ct_iterate_cleanup+0x15a\/0x450 net\/netfilter\/nf_conntrack_core.c:2275\n nf_conntrack_cleanup_net_list+0x14c\/0x4f0 net\/netfilter\/nf_conntrack_core.c:2469\n ops_exit_list+0x10d\/0x160 net\/core\/net_namespace.c:171\n setup_net+0x639\/0xa30 net\/core\/net_namespace.c:349\n copy_net_ns+0x319\/0x760 net\/core\/net_namespace.c:470\n create_new_namespaces+0x3f6\/0xb20 kernel\/nsproxy.c:110\n unshare_nsproxy_namespaces+0xc1\/0x1f0 kernel\/nsproxy.c:226\n ksys_unshare+0x445\/0x920 kernel\/fork.c:3128\n __do_sys_unshare kernel\/fork.c:3202 [inline]\n __se_sys_unshare kernel\/fork.c:3200 [inline]\n __x64_sys_unshare+0x2d\/0x40 kernel\/fork.c:3200\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae\nRIP: 0033:0x7f63da68e739\nRSP: 002b:00007f63d7c05188 EFLAGS: 00000246 ORIG_RAX: 0000000000000110\nRAX: ffffffffffffffda RBX: 00007f63da792f80 RCX: 00007f63da68e739\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000040000000\nRBP: 00007f63da6e8cc4 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f63da792f80\nR13: 00007fff50b75d3f R14: 00007f63d7c05300 R15: 0000000000022000\n\nShowing all locks held in the system:\n1 lock held by khungtaskd\/27:\n #0: ffffffff8b980020 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x53\/0x260 kernel\/locking\/lockdep.c:6446\n2 locks held by kworker\/u4:2\/153:\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: arch_atomic64_set arch\/x86\/include\/asm\/atomic64_64.h:34 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: arch_atomic_long_set include\/linux\/atomic\/atomic-long.h:41 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: atomic_long_set include\/linux\/atomic\/atomic-instrumented.h:1198 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: set_work_data kernel\/workqueue.c:634 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: set_work_pool_and_clear_pending kernel\/workqueue.c:661 [inline]\n #0: ffff888010c69138 ((wq_completion)events_unbound){+.+.}-{0:0}, at: process_one_work+0x896\/0x1690 kernel\/workqueue.c:2268\n #1: ffffc9000140fdb0 ((kfence_timer).work){+.+.}-{0:0}, at: process_one_work+0x8ca\/0x1690 kernel\/workqueue.c:2272\n1 lock held by systemd-udevd\/2970:\n1 lock held by in:imklog\/6258:\n #0: ffff88807f970ff0 (&f->f_pos_lock){+.+.}-{3:3}, at: __fdget_pos+0xe9\/0x100 fs\/file.c:990\n3 locks held by kworker\/1:6\/8158:\n1 lock held by syz-executor.0\/8312:\n2 locks held by kworker\/u4:13\/9320:\n1 lock held by\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7ea6f5848281182ce0cff6cafdcf3fbdeb8ca7e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2d192301a0df8160d1555b66ae8611e8050e424","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9edc188fc76499b0b9bd60364084037f6d03773","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47409","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.433","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: check return value after calling platform_get_resource()\n\nIt will cause null-ptr-deref if platform_get_resource() returns NULL,\nwe need check the return value."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2754fa3b73df7d0ae042f3ed6cfd9df9042f6262","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/337f00a0bc62d7cb7d10ec0b872c79009a1641df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b7f4a0eb92bf37bea4cd838c7f83ea42823ca8b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/856e6e8e0f9300befa87dde09edb578555c99a82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b9c1c33e51d0959f2aec573dfbac0ffd3f5c0b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7182993dd8e09f96839ddc3ac54f9b37370d282","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47410","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.527","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: fix svm_migrate_fini warning\n\nDevice manager releases device-specific resources when a driver\ndisconnects from a device, devm_memunmap_pages and\ndevm_release_mem_region calls in svm_migrate_fini are redundant.\n\nIt causes below warning trace after patch \"drm\/amdgpu: Split\namdgpu_device_fini into early and late\", so remove function\nsvm_migrate_fini.\n\nBUG: https:\/\/gitlab.freedesktop.org\/drm\/amd\/-\/issues\/1718\n\nWARNING: CPU: 1 PID: 3646 at drivers\/base\/devres.c:795\ndevm_release_action+0x51\/0x60\nCall Trace:\n    ? memunmap_pages+0x360\/0x360\n    svm_migrate_fini+0x2d\/0x60 [amdgpu]\n    kgd2kfd_device_exit+0x23\/0xa0 [amdgpu]\n    amdgpu_amdkfd_device_fini_sw+0x1d\/0x30 [amdgpu]\n    amdgpu_device_fini_sw+0x45\/0x290 [amdgpu]\n    amdgpu_driver_release_kms+0x12\/0x30 [amdgpu]\n    drm_dev_release+0x20\/0x40 [drm]\n    release_nodes+0x196\/0x1e0\n    device_release_driver_internal+0x104\/0x1d0\n    driver_detach+0x47\/0x90\n    bus_remove_driver+0x7a\/0xd0\n    pci_unregister_driver+0x3d\/0x90\n    amdgpu_exit+0x11\/0x20 [amdgpu]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/197ae17722e989942b36e33e044787877f158574","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ac7d732b24f4061f8a732ada49b054ab38c63e15","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47411","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.617","lastModified":"2024-05-21T16:54:26.047","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: allow conditional reschedule for intensive iterators\n\nIf we have a lot of threads and rings, the tctx list can get quite big.\nThis is especially true if we keep creating new threads and rings.\nLikewise for the provided buffers list. Be nice and insert a conditional\nreschedule point while iterating the nodes for deletion."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/648f59a06b0e1fec7a4158cdee9acd362e493ce1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bab4c09f24ec8d4a7a78ab343620f89d3a24804","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47412","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.700","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblock: don't call rq_qos_ops->done_bio if the bio isn't tracked\n\nrq_qos framework is only applied on request based driver, so:\n\n1) rq_qos_done_bio() needn't to be called for bio based driver\n\n2) rq_qos_done_bio() needn't to be called for bio which isn't tracked,\nsuch as bios ended from error handling code.\n\nEspecially in bio_endio():\n\n1) request queue is referred via bio->bi_bdev->bd_disk->queue, which\nmay be gone since request queue refcount may not be held in above two\ncases\n\n2) q->rq_qos may be freed in blk_cleanup_queue() when calling into\n__rq_qos_done_bio()\n\nFix the potential kernel panic by not calling rq_qos_ops->done_bio if\nthe bio isn't tracked. This way is safe because both ioc_rqos_done_bio()\nand blkcg_iolatency_done_bio() are nop if the bio isn't tracked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/004b8f8a691205a93d9e80d98b786b2b97424d6e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a647a524a46736786c95cdb553a070322ca096e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47413","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.793","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: chipidea: ci_hdrc_imx: Also search for 'phys' phandle\n\nWhen passing 'phys' in the devicetree to describe the USB PHY phandle\n(which is the recommended way according to\nDocumentation\/devicetree\/bindings\/usb\/ci-hdrc-usb2.txt) the\nfollowing NULL pointer dereference is observed on i.MX7 and i.MX8MM:\n\n[    1.489344] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000098\n[    1.498170] Mem abort info:\n[    1.500966]   ESR = 0x96000044\n[    1.504030]   EC = 0x25: DABT (current EL), IL = 32 bits\n[    1.509356]   SET = 0, FnV = 0\n[    1.512416]   EA = 0, S1PTW = 0\n[    1.515569]   FSC = 0x04: level 0 translation fault\n[    1.520458] Data abort info:\n[    1.523349]   ISV = 0, ISS = 0x00000044\n[    1.527196]   CM = 0, WnR = 1\n[    1.530176] [0000000000000098] user address but active_mm is swapper\n[    1.536544] Internal error: Oops: 96000044 [#1] PREEMPT SMP\n[    1.542125] Modules linked in:\n[    1.545190] CPU: 3 PID: 7 Comm: kworker\/u8:0 Not tainted 5.14.0-dirty #3\n[    1.551901] Hardware name: Kontron i.MX8MM N801X S (DT)\n[    1.557133] Workqueue: events_unbound deferred_probe_work_func\n[    1.562984] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO BTYPE=--)\n[    1.568998] pc : imx7d_charger_detection+0x3f0\/0x510\n[    1.573973] lr : imx7d_charger_detection+0x22c\/0x510\n\nThis happens because the charger functions check for the phy presence\ninside the imx_usbmisc_data structure (data->usb_phy), but the chipidea\ncore populates the usb_phy passed via 'phys' inside 'struct ci_hdrc'\n(ci->usb_phy) instead.\n\nThis causes the NULL pointer dereference inside imx7d_charger_detection().\n\nFix it by also searching for 'phys' in case 'fsl,usbphy' is not found.\n\nTested on a imx7s-warp board."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66dd03b10e1c0b2fae006c6e34c18ea8ee033e7b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8253a34bfae3278baca52fc1209b7c29270486ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3265b88e83b16c7be762fa5fb7e0632bce0002c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47414","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.887","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: Flush current cpu icache before other cpus\n\nOn SiFive Unmatched, I recently fell onto the following BUG when booting:\n\n[    0.000000] ftrace: allocating 36610 entries in 144 pages\n[    0.000000] Oops - illegal instruction [#1]\n[    0.000000] Modules linked in:\n[    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 5.13.1+ #5\n[    0.000000] Hardware name: SiFive HiFive Unmatched A00 (DT)\n[    0.000000] epc : riscv_cpuid_to_hartid_mask+0x6\/0xae\n[    0.000000]  ra : __sbi_rfence_v02+0xc8\/0x10a\n[    0.000000] epc : ffffffff80007240 ra : ffffffff80009964 sp : ffffffff81803e10\n[    0.000000]  gp : ffffffff81a1ea70 tp : ffffffff8180f500 t0 : ffffffe07fe30000\n[    0.000000]  t1 : 0000000000000004 t2 : 0000000000000000 s0 : ffffffff81803e60\n[    0.000000]  s1 : 0000000000000000 a0 : ffffffff81a22238 a1 : ffffffff81803e10\n[    0.000000]  a2 : 0000000000000000 a3 : 0000000000000000 a4 : 0000000000000000\n[    0.000000]  a5 : 0000000000000000 a6 : ffffffff8000989c a7 : 0000000052464e43\n[    0.000000]  s2 : ffffffff81a220c8 s3 : 0000000000000000 s4 : 0000000000000000\n[    0.000000]  s5 : 0000000000000000 s6 : 0000000200000100 s7 : 0000000000000001\n[    0.000000]  s8 : ffffffe07fe04040 s9 : ffffffff81a22c80 s10: 0000000000001000\n[    0.000000]  s11: 0000000000000004 t3 : 0000000000000001 t4 : 0000000000000008\n[    0.000000]  t5 : ffffffcf04000808 t6 : ffffffe3ffddf188\n[    0.000000] status: 0000000200000100 badaddr: 0000000000000000 cause: 0000000000000002\n[    0.000000] [<ffffffff80007240>] riscv_cpuid_to_hartid_mask+0x6\/0xae\n[    0.000000] [<ffffffff80009474>] sbi_remote_fence_i+0x1e\/0x26\n[    0.000000] [<ffffffff8000b8f4>] flush_icache_all+0x12\/0x1a\n[    0.000000] [<ffffffff8000666c>] patch_text_nosync+0x26\/0x32\n[    0.000000] [<ffffffff8000884e>] ftrace_init_nop+0x52\/0x8c\n[    0.000000] [<ffffffff800f051e>] ftrace_process_locs.isra.0+0x29c\/0x360\n[    0.000000] [<ffffffff80a0e3c6>] ftrace_init+0x80\/0x130\n[    0.000000] [<ffffffff80a00f8c>] start_kernel+0x5c4\/0x8f6\n[    0.000000] ---[ end trace f67eb9af4d8d492b ]---\n[    0.000000] Kernel panic - not syncing: Attempted to kill the idle task!\n[    0.000000] ---[ end Kernel panic - not syncing: Attempted to kill the idle task! ]---\n\nWhile ftrace is looping over a list of addresses to patch, it always failed\nwhen patching the same function: riscv_cpuid_to_hartid_mask. Looking at the\nbacktrace, the illegal instruction is encountered in this same function.\nHowever, patch_text_nosync, after patching the instructions, calls\nflush_icache_range. But looking at what happens in this function:\n\nflush_icache_range -> flush_icache_all\n                   -> sbi_remote_fence_i\n                   -> __sbi_rfence_v02\n                   -> riscv_cpuid_to_hartid_mask\n\nThe icache and dcache of the current cpu are never synchronized between the\npatching of riscv_cpuid_to_hartid_mask and calling this same function.\n\nSo fix this by flushing the current cpu's icache before asking for the other\ncpus to do the same."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/427faa29e06f0709476ea1bd59758f997ec8b64e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb8958d5dc79acbd071397abb57b8756375fe1ce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1c7aa87c423e765e3862349c2f095fdfccdd9b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47415","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:26.983","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niwlwifi: mvm: Fix possible NULL dereference\n\nIn __iwl_mvm_remove_time_event() check that 'te_data->vif' is NULL\nbefore dereferencing it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24d5f16e407b75bc59d5419b957a9cab423b2681","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/432d8185e9ffce97e3866ca71c39b0807a456920","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47416","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.083","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nphy: mdio: fix memory leak\n\nSyzbot reported memory leak in MDIO bus interface, the problem was in\nwrong state logic.\n\nMDIOBUS_ALLOCATED indicates 2 states:\n\t1. Bus is only allocated\n\t2. Bus allocated and __mdiobus_register() fails, but\n\t   device_register() was called\n\nIn case of device_register() has been called we should call put_device()\nto correctly free the memory allocated for this device, but mdiobus_free()\ncalls just kfree(dev) in case of MDIOBUS_ALLOCATED state\n\nTo avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED\n_before_ calling device_register(), because put_device() should be\ncalled even in case of device_register() failure."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/064c2616234a7394867c924b5c1303974f3a4f4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0d2dd40a7be61b89a7c99dae8ee96389d27b413a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2250392d930bd0d989f24d355d6355b0150256e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2397b9e118721292429fea8807a698e71b94795f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25e9f88c7e3cc35f5e3d3db199660d28a15df639","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/414bb4ead1362ef2c8592db723c017258f213988","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca6e11c337daf7925ff8a2aac8e84490a8691905","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f4f502a04ee1e543825af78f47eb7785015cd9f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47417","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.173","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlibbpf: Fix memory leak in strset\n\nFree struct strset itself, not just its internal parts."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9e8e7504e09831c469b67d6dc11d9a72654bdb8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0e875bac0fab3e7a7431c2eee36a8ccc0c712ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47418","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.257","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: fix NULL deref in fifo_set_limit()\n\nsyzbot reported another NULL deref in fifo_set_limit() [1]\n\nI could repro the issue with :\n\nunshare -n\ntc qd add dev lo root handle 1:0 tbf limit 200000 burst 70000 rate 100Mbit\ntc qd replace dev lo parent 1:0 pfifo_fast\ntc qd change dev lo root handle 1:0 tbf limit 300000 burst 70000 rate 100Mbit\n\npfifo_fast does not have a change() operation.\nMake fifo_set_limit() more robust about this.\n\n[1]\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nPGD 1cf99067 P4D 1cf99067 PUD 7ca49067 PMD 0\nOops: 0010 [#1] PREEMPT SMP KASAN\nCPU: 1 PID: 14443 Comm: syz-executor959 Not tainted 5.15.0-rc3-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:0x0\nCode: Unable to access opcode bytes at RIP 0xffffffffffffffd6.\nRSP: 0018:ffffc9000e2f7310 EFLAGS: 00010246\nRAX: dffffc0000000000 RBX: ffffffff8d6ecc00 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffff888024c27910 RDI: ffff888071e34000\nRBP: ffff888071e34000 R08: 0000000000000001 R09: ffffffff8fcfb947\nR10: 0000000000000001 R11: 0000000000000000 R12: ffff888024c27910\nR13: ffff888071e34018 R14: 0000000000000000 R15: ffff88801ef74800\nFS:  00007f321d897700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffffffffffffd6 CR3: 00000000722c3000 CR4: 00000000003506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n fifo_set_limit net\/sched\/sch_fifo.c:242 [inline]\n fifo_set_limit+0x198\/0x210 net\/sched\/sch_fifo.c:227\n tbf_change+0x6ec\/0x16d0 net\/sched\/sch_tbf.c:418\n qdisc_change net\/sched\/sch_api.c:1332 [inline]\n tc_modify_qdisc+0xd9a\/0x1a60 net\/sched\/sch_api.c:1634\n rtnetlink_rcv_msg+0x413\/0xb80 net\/core\/rtnetlink.c:5572\n netlink_rcv_skb+0x153\/0x420 net\/netlink\/af_netlink.c:2504\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1314 [inline]\n netlink_unicast+0x533\/0x7d0 net\/netlink\/af_netlink.c:1340\n netlink_sendmsg+0x86d\/0xdb0 net\/netlink\/af_netlink.c:1929\n sock_sendmsg_nosec net\/socket.c:704 [inline]\n sock_sendmsg+0xcf\/0x120 net\/socket.c:724\n ____sys_sendmsg+0x6e8\/0x810 net\/socket.c:2409\n ___sys_sendmsg+0xf3\/0x170 net\/socket.c:2463\n __sys_sendmsg+0xe5\/0x1b0 net\/socket.c:2492\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x44\/0xae"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08d7056e8e250fd2e67dbea5be5fdecdd75bf6b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd7ddc462b9c2d31eb5a9926a2cc63eaa3e9f52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/26af64d71b6277841285fa40e3f7164a378dfda9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/560ee196fe9e5037e5015e2cdb14b3aecb1cd7dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acff2d182c0768a713cee77442caeb07668bd68f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c951a3be5e8803e93bb49a0aca0d30457d3c1b67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d07098f45be868a9cdce6c616563c36c64dbbd87","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb58cd7991747b5e0b110c98c922d7b0e47a1f14","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47419","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.350","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/sched: sch_taprio: properly cancel timer from taprio_destroy()\n\nThere is a comment in qdisc_create() about us not calling ops->reset()\nin some cases.\n\nerr_out4:\n\t\/*\n\t * Any broken qdiscs that would require a ops->reset() here?\n\t * The qdisc was never in action so it shouldn't be necessary.\n\t *\/\n\nAs taprio sets a timer before actually receiving a packet, we need\nto cancel it from ops->destroy, just in case ops->reset has not\nbeen called.\n\nsyzbot reported:\n\nODEBUG: free active (active state 0) object type: hrtimer hint: advance_sched+0x0\/0x9a0 arch\/x86\/include\/asm\/atomic64_64.h:22\nWARNING: CPU: 0 PID: 8441 at lib\/debugobjects.c:505 debug_print_object+0x16e\/0x250 lib\/debugobjects.c:505\nModules linked in:\nCPU: 0 PID: 8441 Comm: syz-executor813 Not tainted 5.14.0-rc6-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/01\/2011\nRIP: 0010:debug_print_object+0x16e\/0x250 lib\/debugobjects.c:505\nCode: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd e0 d3 e3 89 4c 89 ee 48 c7 c7 e0 c7 e3 89 e8 5b 86 11 05 <0f> 0b 83 05 85 03 92 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3\nRSP: 0018:ffffc9000130f330 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000\nRDX: ffff88802baeb880 RSI: ffffffff815d87b5 RDI: fffff52000261e58\nRBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000\nR10: ffffffff815d25ee R11: 0000000000000000 R12: ffffffff898dd020\nR13: ffffffff89e3ce20 R14: ffffffff81653630 R15: dffffc0000000000\nFS:  0000000000f0d300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007ffb64b3e000 CR3: 0000000036557000 CR4: 00000000001506e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n __debug_check_no_obj_freed lib\/debugobjects.c:987 [inline]\n debug_check_no_obj_freed+0x301\/0x420 lib\/debugobjects.c:1018\n slab_free_hook mm\/slub.c:1603 [inline]\n slab_free_freelist_hook+0x171\/0x240 mm\/slub.c:1653\n slab_free mm\/slub.c:3213 [inline]\n kfree+0xe4\/0x540 mm\/slub.c:4267\n qdisc_create+0xbcf\/0x1320 net\/sched\/sch_api.c:1299\n tc_modify_qdisc+0x4c8\/0x1a60 net\/sched\/sch_api.c:1663\n rtnetlink_rcv_msg+0x413\/0xb80 net\/core\/rtnetlink.c:5571\n netlink_rcv_skb+0x153\/0x420 net\/netlink\/af_netlink.c:2504\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1314 [inline]\n netlink_unicast+0x533\/0x7d0 net\/netlink\/af_netlink.c:1340\n netlink_sendmsg+0x86d\/0xdb0 net\/netlink\/af_netlink.c:1929\n sock_sendmsg_nosec net\/socket.c:704 [inline]\n sock_sendmsg+0xcf\/0x120 net\/socket.c:724\n ____sys_sendmsg+0x6e8\/0x810 net\/socket.c:2403\n ___sys_sendmsg+0xf3\/0x170 net\/socket.c:2457\n __sys_sendmsg+0xe5\/0x1b0 net\/socket.c:2486\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x35\/0xb0 arch\/x86\/entry\/common.c:80"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3ec73ffeef54596c32aff0e73fe60971b9c8b866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7a1c1af341041221b3acb9d7036cc2b43e0efa75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a56d447f196fa9973c568f54c0d76d5391c3b0c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c951c08a5996365aecbc5f1a9bddec3905e1ddfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47420","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.450","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: fix a potential ttm->sg memory leak\n\nMemory is allocated for ttm->sg by kmalloc in kfd_mem_dmamap_userptr,\nbut isn't freed by kfree in kfd_mem_dmaunmap_userptr. Free it!"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7e5ce6029b627efb4a004746cfdc1eeff850e6eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b072ef1215aca33186e3a10109e872e528a9e516","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47421","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.537","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: handle the case of pci_channel_io_frozen only in amdgpu_pci_resume\n\nIn current code, when a PCI error state pci_channel_io_normal is detectd,\nit will report PCI_ERS_RESULT_CAN_RECOVER status to PCI driver, and PCI\ndriver will continue the execution of PCI resume callback report_resume by\npci_walk_bridge, and the callback will go into amdgpu_pci_resume\nfinally, where write lock is releasd unconditionally without acquiring\nsuch lock first. In this case, a deadlock will happen when other threads\nstart to acquire the read lock.\n\nTo fix this, add a member in amdgpu_device strucutre to cache\npci_channel_state, and only continue the execution in amdgpu_pci_resume\nwhen it's pci_channel_io_frozen."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/248b061689a40f4fed05252ee2c89f87cf26d7d8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72e9a1bf9b722628c28092e0c2cd8717edd201dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47422","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.633","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/nouveau\/kms\/nv50-: fix file release memory leak\n\nWhen using single_open() for opening, single_release() should be\ncalled, otherwise the 'op' allocated in single_open() will be leaked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b3d4945cc7e7ea1acd52cb06dfa83bfe265b6d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0b4e9fc14973a94ac0520f19b3633493ae13c912","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/65fff0a8efcdca8d84ffe3e23057c3b32403482d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47423","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.727","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/nouveau\/debugfs: fix file release memory leak\n\nWhen using single_open() for opening, single_release() should be\ncalled, otherwise the 'op' allocated in single_open() will be leaked."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11cd944bb87d9e575b94c07c952105eda745b459","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1508b09945bde393326a9dab73b1fc35f672d771","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88c3610045ca6e699331b6bb5c095c5565f30721","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f9d4c88b2edc7924e19c44909cfc3fa4e4d3d43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df0c9418923679bc6d0060bdb1b5bf2c755159e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f5a8703a9c418c6fc54eb772712dfe7641e3991c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f69556a42043b5444ca712ee889829ba89fdcba8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47424","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.830","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni40e: Fix freeing of uninitialized misc IRQ vector\n\nWhen VSI set up failed in i40e_probe() as part of PF switch set up\ndriver was trying to free misc IRQ vectors in\ni40e_clear_interrupt_scheme and produced a kernel Oops:\n\n   Trying to free already-free IRQ 266\n   WARNING: CPU: 0 PID: 5 at kernel\/irq\/manage.c:1731 __free_irq+0x9a\/0x300\n   Workqueue: events work_for_cpu_fn\n   RIP: 0010:__free_irq+0x9a\/0x300\n   Call Trace:\n   ? synchronize_irq+0x3a\/0xa0\n   free_irq+0x2e\/0x60\n   i40e_clear_interrupt_scheme+0x53\/0x190 [i40e]\n   i40e_probe.part.108+0x134b\/0x1a40 [i40e]\n   ? kmem_cache_alloc+0x158\/0x1c0\n   ? acpi_ut_update_ref_count.part.1+0x8e\/0x345\n   ? acpi_ut_update_object_reference+0x15e\/0x1e2\n   ? strstr+0x21\/0x70\n   ? irq_get_irq_data+0xa\/0x20\n   ? mp_check_pin_attr+0x13\/0xc0\n   ? irq_get_irq_data+0xa\/0x20\n   ? mp_map_pin_to_irq+0xd3\/0x2f0\n   ? acpi_register_gsi_ioapic+0x93\/0x170\n   ? pci_conf1_read+0xa4\/0x100\n   ? pci_bus_read_config_word+0x49\/0x70\n   ? do_pci_enable_device+0xcc\/0x100\n   local_pci_probe+0x41\/0x90\n   work_for_cpu_fn+0x16\/0x20\n   process_one_work+0x1a7\/0x360\n   worker_thread+0x1cf\/0x390\n   ? create_worker+0x1a0\/0x1a0\n   kthread+0x112\/0x130\n   ? kthread_flush_work_fn+0x10\/0x10\n   ret_from_fork+0x1f\/0x40\n\nThe problem is that at that point misc IRQ vectors\nwere not allocated yet and we get a call trace\nthat driver is trying to free already free IRQ vectors.\n\nAdd a check in i40e_clear_interrupt_scheme for __I40E_MISC_IRQ_REQUESTED\nPF state before calling i40e_free_misc_vector. This state is set only if\nmisc IRQ vectors were properly initialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/17063cac4088b8e2fc0f633abddca5426ed58312","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e5a20573a926302b233b0c2e1077f5debc7ab2e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60ad4cde0ad28921f9ea25b0201c774b95ffa4b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75099439209d3cda439a1d9b00d19a50f0066fef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97aeed72af4f83ae51534f0a2473ff52f8d66236","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47425","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:27.930","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: acpi: fix resource leak in reconfiguration device addition\n\nacpi_i2c_find_adapter_by_handle() calls bus_find_device() which takes a\nreference on the adapter which is never released which will result in a\nreference count leak and render the adapter unremovable.  Make sure to\nput the adapter after creating the client in the same manner that we do\nfor OF.\n\n[wsa: fixed title]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3d9d458a8aaafa47268ea4f1b4114a9f12927989","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60bacf259e8c2eb2324f3e13275200baaee9494b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6558b646ce1c2a872fe1c2c7cb116f05a2c1950f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90f1077c9184ec2ae9989e4642f211263f301694","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b8090a84d7758b929d348bafbd86bb7a10c5fb63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f86de018fd7a24ee07372d55ffa7824f0c674a95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47426","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.027","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, s390: Fix potential memory leak about jit_data\n\nMake sure to free jit_data through kfree() in the error path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/29fdb11ca88d3c490a3d56f0dc77eb9444d086be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/686cb8b9f6b46787f035afe8fbd132a74e6b1bdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a326f9c01cfbee4450ae49ce618ae6cbc0f76842","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d590a410e472417a22336c7c37685bfb38e801f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47427","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.117","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: iscsi: Fix iscsi_task use after free\n\nCommit d39df158518c (\"scsi: iscsi: Have abort handler get ref to conn\")\nadded iscsi_get_conn()\/iscsi_put_conn() calls during abort handling but\nthen also changed the handling of the case where we detect an already\ncompleted task where we now end up doing a goto to the common put\/cleanup\ncode. This results in a iscsi_task use after free, because the common\ncleanup code will do a put on the iscsi_task.\n\nThis reverts the goto and moves the iscsi_get_conn() to after we've checked\nif the iscsi_task is valid."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1642f51ac0d4f2b55d5748094c49ff8f7191b93c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/258aad75c62146453d03028a44f2f1590d58e1f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47428","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.210","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/64s: fix program check interrupt emergency stack path\n\nEmergency stack path was jumping into a 3: label inside the\n__GEN_COMMON_BODY macro for the normal path after it had finished,\nrather than jumping over it. By a small miracle this is the correct\nplace to build up a new interrupt frame with the existing stack\npointer, so things basically worked okay with an added weird looking\n700 trap frame on top (which had the wrong ->nip so it didn't decode\nbug messages either).\n\nFix this by avoiding using numeric labels when jumping over non-trivial\nmacros.\n\nBefore:\n\n LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV\n Modules linked in:\n CPU: 0 PID: 88 Comm: sh Not tainted 5.15.0-rc2-00034-ge057cdade6e5 #2637\n NIP:  7265677368657265 LR: c00000000006c0c8 CTR: c0000000000097f0\n REGS: c0000000fffb3a50 TRAP: 0700   Not tainted\n MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 00000700  XER: 20040000\n CFAR: c0000000000098b0 IRQMASK: 0\n GPR00: c00000000006c964 c0000000fffb3cf0 c000000001513800 0000000000000000\n GPR04: 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299\n GPR08: 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8\n GPR12: 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001\n GPR16: 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8\n GPR20: 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158\n GPR24: 0000000002000000 0000000002000000 0000000000000255 0000000000000300\n GPR28: c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80\n NIP [7265677368657265] 0x7265677368657265\n LR [c00000000006c0c8] ___do_page_fault+0x3f8\/0xb10\n Call Trace:\n [c0000000fffb3cf0] [c00000000000bdac] soft_nmi_common+0x13c\/0x1d0 (unreliable)\n --- interrupt: 700 at decrementer_common_virt+0xb8\/0x230\n NIP:  c0000000000098b8 LR: c00000000006c0c8 CTR: c0000000000097f0\n REGS: c0000000fffb3d60 TRAP: 0700   Not tainted\n MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 22424282  XER: 20040000\n CFAR: c0000000000098b0 IRQMASK: 0\n GPR00: c00000000006c964 0000000000002400 c000000001513800 0000000000000000\n GPR04: 0000000048ab0778 0000000042000000 0000000000000000 0000000000001299\n GPR08: 000001e447c718ec 0000000022424282 0000000000002710 c00000000006bee8\n GPR12: 9000000000009033 c0000000016b0000 00000000000000b0 0000000000000001\n GPR16: 0000000000000000 0000000000000002 0000000000000000 0000000000000ff8\n GPR20: 0000000000001fff 0000000000000007 0000000000000080 00007fff89d90158\n GPR24: 0000000002000000 0000000002000000 0000000000000255 0000000000000300\n GPR28: c000000001270000 0000000042000000 0000000048ab0778 c000000080647e80\n NIP [c0000000000098b8] decrementer_common_virt+0xb8\/0x230\n LR [c00000000006c0c8] ___do_page_fault+0x3f8\/0xb10\n --- interrupt: 700\n Instruction dump:\n XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX\n ---[ end trace 6d28218e0cc3c949 ]---\n\nAfter:\n\n ------------[ cut here ]------------\n kernel BUG at arch\/powerpc\/kernel\/exceptions-64s.S:491!\n Oops: Exception in kernel mode, sig: 5 [#1]\n LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV\n Modules linked in:\n CPU: 0 PID: 88 Comm: login Not tainted 5.15.0-rc2-00034-ge057cdade6e5-dirty #2638\n NIP:  c0000000000098b8 LR: c00000000006bf04 CTR: c0000000000097f0\n REGS: c0000000fffb3d60 TRAP: 0700   Not tainted\n MSR:  9000000000021031 <SF,HV,ME,IR,DR,LE>  CR: 24482227  XER: 00040000\n CFAR: c0000000000098b0 IRQMASK: 0\n GPR00: c00000000006bf04 0000000000002400 c000000001513800 c000000001271868\n GPR04: 00000000100f0d29 0000000042000000 0000000000000007 0000000000000009\n GPR08: 00000000100f0d29 0000000024482227 0000000000002710 c000000000181b3c\n GPR12: 9000000000009033 c0000000016b0000 00000000100f0d29 c000000005b22f00\n GPR16: 00000000ffff0000 0000000000000001 0000000000000009 00000000100eed90\n GPR20: 00000000100eed90 00000\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3e607dc4df180b72a38e75030cb0f94d12808712","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/411b38fe68ba20a8bbe724b0939762c3f16e16ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c835b3d1d6362b4a4ebb192da7e7fd27a0a45d01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47429","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.303","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/64s: Fix unrecoverable MCE calling async handler from NMI\n\nThe machine check handler is not considered NMI on 64s. The early\nhandler is the true NMI handler, and then it schedules the\nmachine_check_exception handler to run when interrupts are enabled.\n\nThis works fine except the case of an unrecoverable MCE, where the true\nNMI is taken when MSR[RI] is clear, it can not recover, so it calls\nmachine_check_exception directly so something might be done about it.\n\nCalling an async handler from NMI context can result in irq state and\nother things getting corrupted. This can also trigger the BUG at\n  arch\/powerpc\/include\/asm\/interrupt.h:168\n  BUG_ON(!arch_irq_disabled_regs(regs) && !(regs->msr & MSR_EE));\n\nFix this by making an _async version of the handler which is called\nin the normal case, and a NMI version that is called for unrecoverable\ninterrupts."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/d7a8e38999fbd6910516e44cb43f9f4317e54f73","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f08fb25bc66986b0952724530a640d9970fa52c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47430","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.400","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/entry: Clear X86_FEATURE_SMAP when CONFIG_X86_SMAP=n\n\nCommit\n\n  3c73b81a9164 (\"x86\/entry, selftests: Further improve user entry sanity checks\")\n\nadded a warning if AC is set when in the kernel.\n\nCommit\n\n  662a0221893a3d (\"x86\/entry: Fix AC assertion\")\n\nchanged the warning to only fire if the CPU supports SMAP.\n\nHowever, the warning can still trigger on a machine that supports SMAP\nbut where it's disabled in the kernel config and when running the\nsyscall_nt selftest, for example:\n\n  ------------[ cut here ]------------\n  WARNING: CPU: 0 PID: 49 at irqentry_enter_from_user_mode\n  CPU: 0 PID: 49 Comm: init Tainted: G                T 5.15.0-rc4+ #98 e6202628ee053b4f310759978284bd8bb0ce6905\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\n  RIP: 0010:irqentry_enter_from_user_mode\n  ...\n  Call Trace:\n   ? irqentry_enter\n   ? exc_general_protection\n   ? asm_exc_general_protection\n   ? asm_exc_general_protectio\n\nIS_ENABLED(CONFIG_X86_SMAP) could be added to the warning condition, but\neven this would not be enough in case SMAP is disabled at boot time with\nthe \"nosmap\" parameter.\n\nTo be consistent with \"nosmap\" behaviour, clear X86_FEATURE_SMAP when\n!CONFIG_X86_SMAP.\n\nFound using entry-fuzz + satrandconfig.\n\n [ bp: Massage commit message. ]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3958b9c34c2729597e182cc606cc43942fd19f7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e9ec1c65da98c293f75d83755dfa5e03075a6d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f2447f6587b8ffe42ba04d14ce67d429a1163e5e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2021-47431","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T15:15:28.487","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: fix gart.bo pin_count leak\n\ngmc_v{9,10}_0_gart_disable() isn't called matched with\ncorrespoding gart_enbale function in SRIOV case. This will\nlead to gart.bo pin_count leak on driver unload."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18d1c5ea3798ba42cfa0f8b2264d873463facb03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/621ddffb70db824eabd63d18ac635180fe9500f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66805763a97f8f7bdf742fc0851d85c02ed9411f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/83d857d6b0967b6709cd38750c3ce2ed8ced1a95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-33526","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T15:15:28.933","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-site Scripting (XSS) vulnerability in the \"Import of user role and title of user role\" feature in ILIAS 7 before 7.30 and ILIAS 8 before 8.11 allows remote authenticated attackers with administrative privileges to inject arbitrary web script or HTML via XML file upload."}],"metrics":{},"references":[{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170029","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-33527","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T15:15:29.050","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-site Scripting (XSS) vulnerability in the \"Import of Users and login name of user\" feature in ILIAS 7 before 7.30 and ILIAS 8 before 8.11 allows remote authenticated attackers with administrative privileges to inject arbitrary web script or HTML via XML file upload."}],"metrics":{},"references":[{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170029","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-33528","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T15:15:29.167","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A Stored Cross-site Scripting (XSS) vulnerability in ILIAS 7 before 7.30 and ILIAS 8 before 8.11 allows remote authenticated attackers with tutor privileges to inject arbitrary web script or HTML via XML file upload."}],"metrics":{},"references":[{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170029","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-33529","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T15:15:29.290","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"ILIAS 7 before 7.30 and ILIAS 8 before 8.11 as well as ILIAS 9.0 allow remote authenticated attackers with administrative privileges to execute operating system commands via file uploads with dangerous types."}],"metrics":{},"references":[{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170040","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2021-47432","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.007","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlib\/generic-radix-tree.c: Don't overflow in peek()\n\nWhen we started spreading new inode numbers throughout most of the 64\nbit inode space, that triggered some corner case bugs, in particular\nsome integer overflows related to the radix tree code. Oops."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/784d01f9bbc282abb0c5ade5beb98a87f50343ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9492261ff2460252cf2d8de89cdf854c7e2b28a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa7f1827953100cdde0795289a80c6c077bfe437","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec298b958cb0c40d70c68079da933c8f31c5134c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48706","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.100","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvdpa: ifcvf: Do proper cleanup if IFCVF init fails\n\nifcvf_mgmt_dev leaks memory if it is not freed before\nreturning. Call is made to correct return statement\nso memory does not leak. ifcvf_init_hw does not take\ncare of this so it is needed to do it here."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5d2cc32c1c10bd889125d2adc16a6bc3338dcd3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b04456e248761cf68f562f2fd7c04e591fcac94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48707","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.173","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/region: Fix null pointer dereference for resetting decoder\n\nNot all decoders have a reset callback.\n\nThe CXL specification allows a host bridge with a single root port to\nhave no explicit HDM decoders. Currently the region driver assumes there\nare none.  As such the CXL core creates a special pass through decoder\ninstance without a commit\/reset callback.\n\nPrior to this patch, the ->reset() callback was called unconditionally when\ncalling cxl_region_decode_reset. Thus a configuration with 1 Host Bridge,\n1 Root Port, and one directly attached CXL type 3 device or multiple CXL\ntype 3 devices attached to downstream ports of a switch can cause a null\npointer dereference.\n\nBefore the fix, a kernel crash was observed when we destroy the region, and\na pass through decoder is reset.\n\nThe issue can be reproduced as below,\n    1) create a region with a CXL setup which includes a HB with a\n    single root port under which a memdev is attached directly.\n    2) destroy the region with cxl destroy-region regionX -f."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4fa4302d6dc7de7e8e74dc7405611a2efb4bf54b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a04c7d062b537ff787d00da95bdfe343260d4beb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48708","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.253","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npinctrl: single: fix potential NULL dereference\n\nAdded checking of pointer \"function\" in pcs_set_mux().\npinmux_generic_get_function() can return NULL and the pointer\n\"function\" was dereferenced without checking against NULL.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1177bdafe87cbe543a2dc48a9bbac265aa5864db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b763f7de108cb1a5ad5ed08e617d677341947cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6e2a0521e4e84a2698f2da3950fb5c5496a4d208","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/71668706fbe7d20e6f172fa3287fa8aac1b56c26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bcc487001a15f71f103d102cba4ac8145d7a68f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2d73e6d4822140445ad4a7b1c6091e0f5fe703b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e671e63587c92b3fd767cf82e73129f6d5feeb33","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48709","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.330","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: switch: fix potential memleak in ice_add_adv_recipe()\n\nWhen ice_add_special_words() fails, the 'rm' is not released, which will\nlead to a memory leak. Fix this up by going to 'err_unroll' label.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/47f4ff6f23f00f5501ff2d7054c1a37c170a7aa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a606ce68426c88ff2563382b33cc34f3485fe57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2022-48710","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.393","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/radeon: fix a possible null pointer dereference\n\nIn radeon_fp_native_mode(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd.\n\nThe failure status of drm_cvt_mode() on the other path is checked too."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/140d9807b96e1303f6f2675a7ae8710a2094bd17","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/16a0f0b63c4c7eb46fc4c3f00bf2836e6ee46a9f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/28fd384c78d7d8ed8af0d086d778c3e438ba7f60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b7fba107b2c4ec7673d0f45bdbb9d1af697d9b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a89bfeef9abe93371e3ea8796377f2d132eee29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a2b28708b645c5632dc93669ab06e97874c8244f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b33f7d99c9226892c7794dc2500fae35966020c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e938d24f0b7392e142b8aa434f18590d99dbe479","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fee8ae0a0bb66eb7730c22f44fbd7203f63c2eab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52700","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.480","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix kernel warning when sending SYN message\n\nWhen sending a SYN message, this kernel stack trace is observed:\n\n...\n[   13.396352] RIP: 0010:_copy_from_iter+0xb4\/0x550\n...\n[   13.398494] Call Trace:\n[   13.398630]  <TASK>\n[   13.398630]  ? __alloc_skb+0xed\/0x1a0\n[   13.398630]  tipc_msg_build+0x12c\/0x670 [tipc]\n[   13.398630]  ? shmem_add_to_page_cache.isra.71+0x151\/0x290\n[   13.398630]  __tipc_sendmsg+0x2d1\/0x710 [tipc]\n[   13.398630]  ? tipc_connect+0x1d9\/0x230 [tipc]\n[   13.398630]  ? __local_bh_enable_ip+0x37\/0x80\n[   13.398630]  tipc_connect+0x1d9\/0x230 [tipc]\n[   13.398630]  ? __sys_connect+0x9f\/0xd0\n[   13.398630]  __sys_connect+0x9f\/0xd0\n[   13.398630]  ? preempt_count_add+0x4d\/0xa0\n[   13.398630]  ? fpregs_assert_state_consistent+0x22\/0x50\n[   13.398630]  __x64_sys_connect+0x16\/0x20\n[   13.398630]  do_syscall_64+0x42\/0x90\n[   13.398630]  entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nIt is because commit a41dad905e5a (\"iov_iter: saner checks for attempt\nto copy to\/from iterator\") has introduced sanity check for copying\nfrom\/to iov iterator. Lacking of copy direction from the iterator\nviewpoint would lead to kernel stack trace like above.\n\nThis commit fixes this issue by initializing the iov iterator with\nthe correct copy direction when sending SYN or ACK without data."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/11a4d6f67cf55883dc78e31c247d1903ed7feccc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54b6082aec178f16ad6d193b4ecdc9c4823d9a32","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52701","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.547","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: use a bounce buffer for copying skb->mark\n\nsyzbot found arm64 builds would crash in sock_recv_mark()\nwhen CONFIG_HARDENED_USERCOPY=y\n\nx86 and powerpc are not detecting the issue because\nthey define user_access_begin.\nThis will be handled in a different patch,\nbecause a check_object_size() is missing.\n\nOnly data from skb->cb[] can be copied directly to\/from user space,\nas explained in commit 79a8a642bf05 (\"net: Whitelist\nthe skbuff_head_cache \"cb\" field\")\n\nsyzbot report was:\nusercopy: Kernel memory exposure attempt detected from SLUB object 'skbuff_head_cache' (offset 168, size 4)!\n------------[ cut here ]------------\nkernel BUG at mm\/usercopy.c:102 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 4410 Comm: syz-executor533 Not tainted 6.2.0-rc7-syzkaller-17907-g2d3827b3f393 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 01\/21\/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : usercopy_abort+0x90\/0x94 mm\/usercopy.c:90\nlr : usercopy_abort+0x90\/0x94 mm\/usercopy.c:90\nsp : ffff80000fb9b9a0\nx29: ffff80000fb9b9b0 x28: ffff0000c6073400 x27: 0000000020001a00\nx26: 0000000000000014 x25: ffff80000cf52000 x24: fffffc0000000000\nx23: 05ffc00000000200 x22: fffffc000324bf80 x21: ffff0000c92fe1a8\nx20: 0000000000000001 x19: 0000000000000004 x18: 0000000000000000\nx17: 656a626f2042554c x16: ffff0000c6073dd0 x15: ffff80000dbd2118\nx14: ffff0000c6073400 x13: 00000000ffffffff x12: ffff0000c6073400\nx11: ff808000081bbb4c x10: 0000000000000000 x9 : 7b0572d7cc0ccf00\nx8 : 7b0572d7cc0ccf00 x7 : ffff80000bf650d4 x6 : 0000000000000000\nx5 : 0000000000000001 x4 : 0000000000000001 x3 : 0000000000000000\nx2 : ffff0001fefbff08 x1 : 0000000100000000 x0 : 000000000000006c\nCall trace:\nusercopy_abort+0x90\/0x94 mm\/usercopy.c:90\n__check_heap_object+0xa8\/0x100 mm\/slub.c:4761\ncheck_heap_object mm\/usercopy.c:196 [inline]\n__check_object_size+0x208\/0x6b8 mm\/usercopy.c:251\ncheck_object_size include\/linux\/thread_info.h:199 [inline]\n__copy_to_user include\/linux\/uaccess.h:115 [inline]\nput_cmsg+0x408\/0x464 net\/core\/scm.c:238\nsock_recv_mark net\/socket.c:975 [inline]\n__sock_recv_cmsgs+0x1fc\/0x248 net\/socket.c:984\nsock_recv_cmsgs include\/net\/sock.h:2728 [inline]\npacket_recvmsg+0x2d8\/0x678 net\/packet\/af_packet.c:3482\n____sys_recvmsg+0x110\/0x3a0\n___sys_recvmsg net\/socket.c:2737 [inline]\n__sys_recvmsg+0x194\/0x210 net\/socket.c:2767\n__do_sys_recvmsg net\/socket.c:2777 [inline]\n__se_sys_recvmsg net\/socket.c:2774 [inline]\n__arm64_sys_recvmsg+0x2c\/0x3c net\/socket.c:2774\n__invoke_syscall arch\/arm64\/kernel\/syscall.c:38 [inline]\ninvoke_syscall+0x64\/0x178 arch\/arm64\/kernel\/syscall.c:52\nel0_svc_common+0xbc\/0x180 arch\/arm64\/kernel\/syscall.c:142\ndo_el0_svc+0x48\/0x110 arch\/arm64\/kernel\/syscall.c:193\nel0_svc+0x58\/0x14c arch\/arm64\/kernel\/entry-common.c:637\nel0t_64_sync_handler+0x84\/0xf0 arch\/arm64\/kernel\/entry-common.c:655\nel0t_64_sync+0x190\/0x194 arch\/arm64\/kernel\/entry.S:591\nCode: 91388800 aa0903e1 f90003e8 94e6d752 (d4210000)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2558b8039d059342197610498c8749ad294adee5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/863a7de987f02a901bf215509276a7de0370e0f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52702","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.617","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix possible memory leak in ovs_meter_cmd_set()\n\nold_meter needs to be free after it is detached regardless of whether\nthe new meter is successfully attached."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1563e998a938f095548054ef09e277b562b79536","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fa28f5c6fcbfc794340684f36d2581b4f2d20b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0f65ee0a3329eb4b94beaef0268633696e2d0c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e336a9e08618203a456fb5367f1387b14554f55e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52703","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.683","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/usb: kalmia: Don't pass act_len in usb_bulk_msg error path\n\nsyzbot reported that act_len in kalmia_send_init_packet() is\nuninitialized when passing it to the first usb_bulk_msg error path. Jiri\nPirko noted that it's pointless to pass it in the error path, and that\nthe value that would be printed in the second error path would be the\nvalue of act_len from the first call to usb_bulk_msg.[1]\n\nWith this in mind, let's just not pass act_len to the usb_bulk_msg error\npaths.\n\n1: https:\/\/lore.kernel.org\/lkml\/Y9pY61y1nwTuzMOa@nanopsycho\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/02df3170c04a8356cd571ab9155a42f030190abc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1b5de7d44890b78519acbcc80d8d1f23ff2872e5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/338f826d3afead6e4df521f7972a4bef04a72efb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/525bdcb0838d19d918c7786151ee14661967a030","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/723ef7b66f37c0841f5a451ccbce47ee1641e081","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a753352622b4f3c0219e0e9c73114b2848ae6042","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c68f345b7c425b38656e1791a0486769a8797016","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52704","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.760","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfreezer,umh: Fix call_usermode_helper_exec() vs SIGKILL\n\nTetsuo-San noted that commit f5d39b020809 (\"freezer,sched: Rewrite\ncore freezer logic\") broke call_usermodehelper_exec() for the KILLABLE\ncase.\n\nSpecifically it was missed that the second, unconditional,\nwait_for_completion() was not optional and ensures the on-stack\ncompletion is unused before going out-of-scope."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7f9f6c54da876b3f0bece2b569456ceb96965ed7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eedeb787ebb53de5c5dcf7b7b39d01bf1b0f037d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52705","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.840","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: fix underflow in second superblock position calculations\n\nMacro NILFS_SB2_OFFSET_BYTES, which computes the position of the second\nsuperblock, underflows when the argument device size is less than 4096\nbytes.  Therefore, when using this macro, it is necessary to check in\nadvance that the device size is not less than a lower limit, or at least\nthat underflow does not occur.\n\nThe current nilfs2 implementation lacks this check, causing out-of-bound\nblock access when mounting devices smaller than 4096 bytes:\n\n I\/O error, dev loop0, sector 36028797018963960 op 0x0:(READ) flags 0x0\n phys_seg 1 prio class 2\n NILFS (loop0): unable to read secondary superblock (blocksize = 1024)\n\nIn addition, when trying to resize the filesystem to a size below 4096\nbytes, this underflow occurs in nilfs_resize_fs(), passing a huge number\nof segments to nilfs_sufile_resize(), corrupting parameters such as the\nnumber of segments in superblocks.  This causes excessive loop iterations\nin nilfs_sufile_resize() during a subsequent resize ioctl, causing\nsemaphore ns_segctor_sem to block for a long time and hang the writer\nthread:\n\n INFO: task segctord:5067 blocked for more than 143 seconds.\n      Not tainted 6.2.0-rc8-syzkaller-00015-gf6feea56f66d #0\n \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n task:segctord        state:D stack:23456 pid:5067  ppid:2\n flags:0x00004000\n Call Trace:\n  <TASK>\n  context_switch kernel\/sched\/core.c:5293 [inline]\n  __schedule+0x1409\/0x43f0 kernel\/sched\/core.c:6606\n  schedule+0xc3\/0x190 kernel\/sched\/core.c:6682\n  rwsem_down_write_slowpath+0xfcf\/0x14a0 kernel\/locking\/rwsem.c:1190\n  nilfs_transaction_lock+0x25c\/0x4f0 fs\/nilfs2\/segment.c:357\n  nilfs_segctor_thread_construct fs\/nilfs2\/segment.c:2486 [inline]\n  nilfs_segctor_thread+0x52f\/0x1140 fs\/nilfs2\/segment.c:2570\n  kthread+0x270\/0x300 kernel\/kthread.c:376\n  ret_from_fork+0x1f\/0x30 arch\/x86\/entry\/entry_64.S:308\n  <\/TASK>\n ...\n Call Trace:\n  <TASK>\n  folio_mark_accessed+0x51c\/0xf00 mm\/swap.c:515\n  __nilfs_get_page_block fs\/nilfs2\/page.c:42 [inline]\n  nilfs_grab_buffer+0x3d3\/0x540 fs\/nilfs2\/page.c:61\n  nilfs_mdt_submit_block+0xd7\/0x8f0 fs\/nilfs2\/mdt.c:121\n  nilfs_mdt_read_block+0xeb\/0x430 fs\/nilfs2\/mdt.c:176\n  nilfs_mdt_get_block+0x12d\/0xbb0 fs\/nilfs2\/mdt.c:251\n  nilfs_sufile_get_segment_usage_block fs\/nilfs2\/sufile.c:92 [inline]\n  nilfs_sufile_truncate_range fs\/nilfs2\/sufile.c:679 [inline]\n  nilfs_sufile_resize+0x7a3\/0x12b0 fs\/nilfs2\/sufile.c:777\n  nilfs_resize_fs+0x20c\/0xed0 fs\/nilfs2\/super.c:422\n  nilfs_ioctl_resize fs\/nilfs2\/ioctl.c:1033 [inline]\n  nilfs_ioctl+0x137c\/0x2440 fs\/nilfs2\/ioctl.c:1301\n  ...\n\nThis fixes these issues by inserting appropriate minimum device size\nchecks or anti-underflow checks, depending on where the macro is used."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ee5ed0126a2211f7174492da2ca2c29f43755c5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f7a1135b202977b82457adde7db6c390056863b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/52844d8382cd9166d708032def8905ffc3ae550f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99b9402a36f0799f25feee4465bfa4b8dfa74b4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a158782b56b070485d54d25fc9aaf2c8f3752205","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a8ef5109f93cea9933bbac0455d8c18757b3fcb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b96591e2c35c8b47db0ec816b5fc6cb8868000ff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52706","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.920","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngpio: sim: fix a memory leak\n\nFix an inverted logic bug in gpio_sim_remove_hogs() that leads to GPIO\nhog structures never being freed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/79eeab1d85e0fee4c0bc36f3b6ddf3920f39f74b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/854e1ecff266033d3149666d3c5b8b0e174b4210","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52707","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:12.993","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsched\/psi: Fix use-after-free in ep_remove_wait_queue()\n\nIf a non-root cgroup gets removed when there is a thread that registered\ntrigger and is polling on a pressure file within the cgroup, the polling\nwaitqueue gets freed in the following path:\n\n do_rmdir\n   cgroup_rmdir\n     kernfs_drain_open_files\n       cgroup_file_release\n         cgroup_pressure_release\n           psi_trigger_destroy\n\nHowever, the polling thread still has a reference to the pressure file and\nwill access the freed waitqueue when the file is closed or upon exit:\n\n fput\n   ep_eventpoll_release\n     ep_free\n       ep_remove_wait_queue\n         remove_wait_queue\n\nThis results in use-after-free as pasted below.\n\nThe fundamental problem here is that cgroup_file_release() (and\nconsequently waitqueue's lifetime) is not tied to the file's real lifetime.\nUsing wake_up_pollfree() here might be less than ideal, but it is in line\nwith the comment at commit 42288cb44c4b (\"wait: add wake_up_pollfree()\")\nsince the waitqueue's lifetime is not tied to file's one and can be\nconsidered as another special case. While this would be fixable by somehow\nmaking cgroup_file_release() be tied to the fput(), it would require\nsizable refactoring at cgroups or higher layer which might be more\njustifiable if we identify more cases like this.\n\n  BUG: KASAN: use-after-free in _raw_spin_lock_irqsave+0x60\/0xc0\n  Write of size 4 at addr ffff88810e625328 by task a.out\/4404\n\n\tCPU: 19 PID: 4404 Comm: a.out Not tainted 6.2.0-rc6 #38\n\tHardware name: Amazon EC2 c5a.8xlarge\/, BIOS 1.0 10\/16\/2017\n\tCall Trace:\n\t<TASK>\n\tdump_stack_lvl+0x73\/0xa0\n\tprint_report+0x16c\/0x4e0\n\tkasan_report+0xc3\/0xf0\n\tkasan_check_range+0x2d2\/0x310\n\t_raw_spin_lock_irqsave+0x60\/0xc0\n\tremove_wait_queue+0x1a\/0xa0\n\tep_free+0x12c\/0x170\n\tep_eventpoll_release+0x26\/0x30\n\t__fput+0x202\/0x400\n\ttask_work_run+0x11d\/0x170\n\tdo_exit+0x495\/0x1130\n\tdo_group_exit+0x100\/0x100\n\tget_signal+0xd67\/0xde0\n\tarch_do_signal_or_restart+0x2a\/0x2b0\n\texit_to_user_mode_prepare+0x94\/0x100\n\tsyscall_exit_to_user_mode+0x20\/0x40\n\tdo_syscall_64+0x52\/0x90\n\tentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\t<\/TASK>\n\n Allocated by task 4404:\n\n\tkasan_set_track+0x3d\/0x60\n\t__kasan_kmalloc+0x85\/0x90\n\tpsi_trigger_create+0x113\/0x3e0\n\tpressure_write+0x146\/0x2e0\n\tcgroup_file_write+0x11c\/0x250\n\tkernfs_fop_write_iter+0x186\/0x220\n\tvfs_write+0x3d8\/0x5c0\n\tksys_write+0x90\/0x110\n\tdo_syscall_64+0x43\/0x90\n\tentry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\n Freed by task 4407:\n\n\tkasan_set_track+0x3d\/0x60\n\tkasan_save_free_info+0x27\/0x40\n\t____kasan_slab_free+0x11d\/0x170\n\tslab_free_freelist_hook+0x87\/0x150\n\t__kmem_cache_free+0xcb\/0x180\n\tpsi_trigger_destroy+0x2e8\/0x310\n\tcgroup_file_release+0x4f\/0xb0\n\tkernfs_drain_open_files+0x165\/0x1f0\n\tkernfs_drain+0x162\/0x1a0\n\t__kernfs_remove+0x1fb\/0x310\n\tkernfs_remove_by_name_ns+0x95\/0xe0\n\tcgroup_addrm_files+0x67f\/0x700\n\tcgroup_destroy_locked+0x283\/0x3c0\n\tcgroup_rmdir+0x29\/0x100\n\tkernfs_iop_rmdir+0xd1\/0x140\n\tvfs_rmdir+0xfe\/0x240\n\tdo_rmdir+0x13d\/0x280\n\t__x64_sys_rmdir+0x2c\/0x30\n\tdo_syscall_64+0x43\/0x90\n\tentry_SYSCALL_64_after_hwframe+0x63\/0xcd"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7caeb5457bd01ccba0df1d6f4872f20d28e50b38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c2dbe32d5db5c4ead121cf86dabd5ab691fb47fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6879a4dcefe92d870ab68cabaa9caeda4f2af5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cca2b3feb70170ef6f0fbc4b4d91eea235a2b73a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ec9c7aa08819f976b2492fa63c41b5712d2924b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52708","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.080","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: mmc_spi: fix error handling in mmc_spi_probe()\n\nIf mmc_add_host() fails, it doesn't need to call mmc_remove_host(),\nor it will cause null-ptr-deref, because of deleting a not added\ndevice in mmc_remove_host().\n\nTo fix this, goto label 'fail_glue_init', if mmc_add_host() fails,\nand change the label 'fail_add_host' to 'fail_gpiod_request'."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b3edcb24bd81b3b2e3dac89f4733bfd47d283be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/82645bf4ed02abe930a659c5fe16d593a6dbd93f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf4c9d2ac1e42c7d18b921bec39486896645b714","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9b488d60f51ae312006e224e03a30a151c28bdd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecad2fafd424ffdc203b2748ded0b37e4bbecef3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52730","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.157","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmmc: sdio: fix possible resource leaks in some error paths\n\nIf sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can\nnot release the resources, because the sdio function is not presented\nin these two cases, it won't call of_node_put() or put_device().\n\nTo fix these leaks, make sdio_func_present() only control whether\ndevice_del() needs to be called or not, then always call of_node_put()\nand put_device().\n\nIn error case in sdio_init_func(), the reference of 'card->dev' is\nnot get, to avoid redundant put in sdio_free_func_cis(), move the\nget_device() to sdio_alloc_func() and put_device() to sdio_release_func(),\nit can keep the get\/put function be balanced.\n\nWithout this patch, while doing fault inject test, it can get the\nfollowing leak reports, after this fix, the leak is gone.\n\nunreferenced object 0xffff888112514000 (size 2048):\n  comm \"kworker\/3:2\", pid 65, jiffies 4294741614 (age 124.774s)\n  hex dump (first 32 bytes):\n    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......\n    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21\/0x110\n    [<000000002f839ccb>] mmc_alloc_card+0x38\/0xb0 [mmc_core]\n    [<0000000004adcbf6>] mmc_sdio_init_card+0xde\/0x170 [mmc_core]\n    [<000000007538fea0>] mmc_attach_sdio+0xcb\/0x1b0 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a\/0x640 [mmc_core]\n\nunreferenced object 0xffff888112511000 (size 2048):\n  comm \"kworker\/3:2\", pid 65, jiffies 4294741623 (age 124.766s)\n  hex dump (first 32 bytes):\n    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......\n    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....\n  backtrace:\n    [<000000009e5931da>] kmalloc_trace+0x21\/0x110\n    [<00000000fcbe706c>] sdio_alloc_func+0x35\/0x100 [mmc_core]\n    [<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1\/0x395 [mmc_core]\n    [<00000000d4fdeba7>] mmc_rescan+0x54a\/0x640 [mmc_core]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1e06cf04239e202248c8fa356bf11449dc73cfbd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/30716d9f0fa1766e522cf24c8a456244e4fc9931","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c7858adada31dbed042448cff6997dd6efc472a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/605d9fb9556f8f5fb4566f4df1480f280f308ded","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/761db46b29b496946046d8cb33c7ea6de6bef36e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92ff03c2563c9b57a027c744750f3b7d2f261c58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f855d31bb38d663c3ba672345d7cce9324ba3b72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52731","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.237","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: Fix invalid page access after closing deferred I\/O devices\n\nWhen a fbdev with deferred I\/O is once opened and closed, the dirty\npages still remain queued in the pageref list, and eventually later\nthose may be processed in the delayed work.  This may lead to a\ncorruption of pages, hitting an Oops.\n\nThis patch makes sure to cancel the delayed work and clean up the\npageref list at closing the device for addressing the bug.  A part of\nthe cleanup code is factored out as a new helper function that is\ncalled from the common fb_release()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3efc61d95259956db25347e2a9562c3e54546e20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87b9802ca824fcee7915e717e9a60471af62e8e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1d91f0e9d5a240a809698d7d9c5a538e7dcc149","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52732","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.303","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nceph: blocklist the kclient when receiving corrupted snap trace\n\nWhen received corrupted snap trace we don't know what exactly has\nhappened in MDS side. And we shouldn't continue IOs and metadatas\naccess to MDS, which may corrupt or get incorrect contents.\n\nThis patch will just block all the further IO\/MDS requests\nimmediately and then evict the kclient itself.\n\nThe reason why we still need to evict the kclient just after\nblocking all the further IOs is that the MDS could revoke the caps\nfaster."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/66ec619e4591f8350f99c5269a7ce160cccc7a7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a68e564adcaa69b0930809fb64d9d5f7d9c32ba9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52733","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.380","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/decompressor: specify __decompress() buf len to avoid overflow\n\nHistorically calls to __decompress() didn't specify \"out_len\" parameter\non many architectures including s390, expecting that no writes beyond\nuncompressed kernel image are performed. This has changed since commit\n2aa14b1ab2c4 (\"zstd: import usptream v1.5.2\") which includes zstd library\ncommit 6a7ede3dfccb (\"Reduce size of dctx by reutilizing dst buffer\n(#2751)\"). Now zstd decompression code might store literal buffer in\nthe unwritten portion of the destination buffer. Since \"out_len\" is\nnot set, it is considered to be unlimited and hence free to use for\noptimization needs. On s390 this might corrupt initrd or ipl report\nwhich are often placed right after the decompressor buffer. Luckily the\nsize of uncompressed kernel image is already known to the decompressor,\nso to avoid the problem simply specify it in the \"out_len\" parameter."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/16409f7d9ca5bb8220e1049ea9aae0d3c94d2dfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55dbd6f4ea954751340f4f73d5dcd7c8f12208b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ab41c2c08a32132ba8c14624910e2fe8ce4ba4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ed522143f959630f8b7782ddc212900d8f609a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1eb22d0ff064ad458b3b1a1eaa84ac3996206c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52734","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.450","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: sched: sch: Bounds check priority\n\nNothing was explicitly bounds checking the priority index used to access\nclpriop[]. WARN and bail out early if it's pathological. Seen with GCC 13:\n\n..\/net\/sched\/sch_htb.c: In function 'htb_activate_prios':\n..\/net\/sched\/sch_htb.c:437:44: warning: array subscript [0, 31] is outside array bounds of 'struct htb_prio[8]' [-Warray-bounds=]\n  437 |                         if (p->inner.clprio[prio].feed.rb_node)\n      |                             ~~~~~~~~~~~~~~~^~~~~~\n..\/net\/sched\/sch_htb.c:131:41: note: while referencing 'clprio'\n  131 |                         struct htb_prio clprio[TC_HTB_NUMPRIO];\n      |                                         ^~~~~~"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/90fcf55d83b20da1091f926a291af05fb74f61c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/99875ea9b5b47995bfb3c684d21eb17feb4b7e6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de5ca4c3852f896cacac2bf259597aab5e17d9e3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6415c9c9a0b3881543d38528a58b54af4351522","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbe71c5dacaa5a9960323215f118958174c81aa0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52735","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.523","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, sockmap: Don't let sock_map_{close,destroy,unhash} call itself\n\nsock_map proto callbacks should never call themselves by design. Protect\nagainst bugs like [1] and break out of the recursive loop to avoid a stack\noverflow in favor of a resource leak.\n\n[1] https:\/\/lore.kernel.org\/all\/00000000000073b14905ef2e7401@google.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4a79ba65a1ab479903fff2e604865d229b70a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7499859881488da97589f3c79cc66fa75748ad49","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f312367f5246e04df564d341044286e9e37a97ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52736","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.597","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: Do not unset preset when cleaning up codec\n\nSeveral functions that take part in codec's initialization and removal\nare re-used by ASoC codec drivers implementations. Drivers mimic the\nbehavior of hda_codec_driver_probe\/remove() found in\nsound\/pci\/hda\/hda_bind.c with their component->probe\/remove() instead.\n\nOne of the reasons for that is the expectation of\nsnd_hda_codec_device_new() to receive a valid pointer to an instance of\nstruct snd_card. This expectation can be met only once sound card\ncomponents probing commences.\n\nAs ASoC sound card may be unbound without codec device being actually\nremoved from the system, unsetting ->preset in\nsnd_hda_codec_cleanup_for_unbind() interferes with module unload -> load\nscenario causing null-ptr-deref. Preset is assigned only once, during\ndevice\/driver matching whereas ASoC codec driver's module reloading may\noccur several times throughout the lifetime of an audio stack."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/427ca2530da8dc61a42620d7113b05e187b6c2c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7fc4e7191eae9d9325511e03deadfdb2224914f8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87978e6ad45a16835cc58234451111091be3c59a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e909f5f2aa55a8f9aa6919cce08015cb0e8d4668","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52737","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.667","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: lock the inode in shared mode before starting fiemap\n\nCurrently fiemap does not take the inode's lock (VFS lock), it only locks\na file range in the inode's io tree. This however can lead to a deadlock\nif we have a concurrent fsync on the file and fiemap code triggers a fault\nwhen accessing the user space buffer with fiemap_fill_next_extent(). The\ndeadlock happens on the inode's i_mmap_lock semaphore, which is taken both\nby fsync and btrfs_page_mkwrite(). This deadlock was recently reported by\nsyzbot and triggers a trace like the following:\n\n   task:syz-executor361 state:D stack:20264 pid:5668  ppid:5119   flags:0x00004004\n   Call Trace:\n    <TASK>\n    context_switch kernel\/sched\/core.c:5293 [inline]\n    __schedule+0x995\/0xe20 kernel\/sched\/core.c:6606\n    schedule+0xcb\/0x190 kernel\/sched\/core.c:6682\n    wait_on_state fs\/btrfs\/extent-io-tree.c:707 [inline]\n    wait_extent_bit+0x577\/0x6f0 fs\/btrfs\/extent-io-tree.c:751\n    lock_extent+0x1c2\/0x280 fs\/btrfs\/extent-io-tree.c:1742\n    find_lock_delalloc_range+0x4e6\/0x9c0 fs\/btrfs\/extent_io.c:488\n    writepage_delalloc+0x1ef\/0x540 fs\/btrfs\/extent_io.c:1863\n    __extent_writepage+0x736\/0x14e0 fs\/btrfs\/extent_io.c:2174\n    extent_write_cache_pages+0x983\/0x1220 fs\/btrfs\/extent_io.c:3091\n    extent_writepages+0x219\/0x540 fs\/btrfs\/extent_io.c:3211\n    do_writepages+0x3c3\/0x680 mm\/page-writeback.c:2581\n    filemap_fdatawrite_wbc+0x11e\/0x170 mm\/filemap.c:388\n    __filemap_fdatawrite_range mm\/filemap.c:421 [inline]\n    filemap_fdatawrite_range+0x175\/0x200 mm\/filemap.c:439\n    btrfs_fdatawrite_range fs\/btrfs\/file.c:3850 [inline]\n    start_ordered_ops fs\/btrfs\/file.c:1737 [inline]\n    btrfs_sync_file+0x4ff\/0x1190 fs\/btrfs\/file.c:1839\n    generic_write_sync include\/linux\/fs.h:2885 [inline]\n    btrfs_do_write_iter+0xcd3\/0x1280 fs\/btrfs\/file.c:1684\n    call_write_iter include\/linux\/fs.h:2189 [inline]\n    new_sync_write fs\/read_write.c:491 [inline]\n    vfs_write+0x7dc\/0xc50 fs\/read_write.c:584\n    ksys_write+0x177\/0x2a0 fs\/read_write.c:637\n    do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n    do_syscall_64+0x3d\/0xb0 arch\/x86\/entry\/common.c:80\n    entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n   RIP: 0033:0x7f7d4054e9b9\n   RSP: 002b:00007f7d404fa2f8 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n   RAX: ffffffffffffffda RBX: 00007f7d405d87a0 RCX: 00007f7d4054e9b9\n   RDX: 0000000000000090 RSI: 0000000020000000 RDI: 0000000000000006\n   RBP: 00007f7d405a51d0 R08: 0000000000000000 R09: 0000000000000000\n   R10: 0000000000000000 R11: 0000000000000246 R12: 61635f65646f6e69\n   R13: 65646f7475616f6e R14: 7261637369646f6e R15: 00007f7d405d87a8\n    <\/TASK>\n   INFO: task syz-executor361:5697 blocked for more than 145 seconds.\n         Not tainted 6.2.0-rc3-syzkaller-00376-g7c6984405241 #0\n   \"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\n   task:syz-executor361 state:D stack:21216 pid:5697  ppid:5119   flags:0x00004004\n   Call Trace:\n    <TASK>\n    context_switch kernel\/sched\/core.c:5293 [inline]\n    __schedule+0x995\/0xe20 kernel\/sched\/core.c:6606\n    schedule+0xcb\/0x190 kernel\/sched\/core.c:6682\n    rwsem_down_read_slowpath+0x5f9\/0x930 kernel\/locking\/rwsem.c:1095\n    __down_read_common+0x54\/0x2a0 kernel\/locking\/rwsem.c:1260\n    btrfs_page_mkwrite+0x417\/0xc80 fs\/btrfs\/inode.c:8526\n    do_page_mkwrite+0x19e\/0x5e0 mm\/memory.c:2947\n    wp_page_shared+0x15e\/0x380 mm\/memory.c:3295\n    handle_pte_fault mm\/memory.c:4949 [inline]\n    __handle_mm_fault mm\/memory.c:5073 [inline]\n    handle_mm_fault+0x1b79\/0x26b0 mm\/memory.c:5219\n    do_user_addr_fault+0x69b\/0xcb0 arch\/x86\/mm\/fault.c:1428\n    handle_page_fault arch\/x86\/mm\/fault.c:1519 [inline]\n    exc_page_fault+0x7a\/0x110 arch\/x86\/mm\/fault.c:1575\n    asm_exc_page_fault+0x22\/0x30 arch\/x86\/include\/asm\/idtentry.h:570\n   RIP: 0010:copy_user_short_string+0xd\/0x40 arch\/x86\/lib\/copy_user_64.S:233\n   Code: 74 0a 89 (...)\n   RSP: 0018:ffffc9000570f330 EFLAGS: 000502\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/519b7e13b5ae8dd38da1e52275705343be6bb508","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8c594da79bc0244e610a70594e824a401802be1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52738","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.740","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu\/fence: Fix oops due to non-matching drm_sched init\/fini\n\nCurrently amdgpu calls drm_sched_fini() from the fence driver sw fini\nroutine - such function is expected to be called only after the\nrespective init function - drm_sched_init() - was executed successfully.\n\nHappens that we faced a driver probe failure in the Steam Deck\nrecently, and the function drm_sched_fini() was called even without\nits counter-part had been previously called, causing the following oops:\n\namdgpu: probe of 0000:04:00.0 failed with error -110\nBUG: kernel NULL pointer dereference, address: 0000000000000090\nPGD 0 P4D 0\nOops: 0002 [#1] PREEMPT SMP NOPTI\nCPU: 0 PID: 609 Comm: systemd-udevd Not tainted 6.2.0-rc3-gpiccoli #338\nHardware name: Valve Jupiter\/Jupiter, BIOS F7A0113 11\/04\/2022\nRIP: 0010:drm_sched_fini+0x84\/0xa0 [gpu_sched]\n[...]\nCall Trace:\n <TASK>\n amdgpu_fence_driver_sw_fini+0xc8\/0xd0 [amdgpu]\n amdgpu_device_fini_sw+0x2b\/0x3b0 [amdgpu]\n amdgpu_driver_release_kms+0x16\/0x30 [amdgpu]\n devm_drm_dev_init_release+0x49\/0x70\n [...]\n\nTo prevent that, check if the drm_sched was properly initialized for a\ngiven ring before calling its fini counter-part.\n\nNotice ideally we'd use sched.ready for that; such field is set as the latest\nthing on drm_sched_init(). But amdgpu seems to \"override\" the meaning of such\nfield - in the above oops for example, it was a GFX ring causing the crash, and\nthe sched.ready field was set to true in the ring init routine, regardless of\nthe state of the DRM scheduler. Hence, we ended-up using sched.ops as per\nChristian's suggestion [0], and also removed the no_scheduler check [1].\n\n[0] https:\/\/lore.kernel.org\/amd-gfx\/984ee981-2906-0eaf-ccec-9f80975cb136@amd.com\/\n[1] https:\/\/lore.kernel.org\/amd-gfx\/cd0e2994-f85f-d837-609f-7056d5fb7231@amd.com\/"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2bcbbef9cace772f5b7128b11401c515982de34b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e557c8ca2c585bdef591b8503ba83b85f5d0afd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5ad7bbf3dba5c4a684338df1f285080f2588b535","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52739","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.820","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nFix page corruption caused by racy check in __free_pages\n\nWhen we upgraded our kernel, we started seeing some page corruption like\nthe following consistently:\n\n  BUG: Bad page state in process ganesha.nfsd  pfn:1304ca\n  page:0000000022261c55 refcount:0 mapcount:-128 mapping:0000000000000000 index:0x0 pfn:0x1304ca\n  flags: 0x17ffffc0000000()\n  raw: 0017ffffc0000000 ffff8a513ffd4c98 ffffeee24b35ec08 0000000000000000\n  raw: 0000000000000000 0000000000000001 00000000ffffff7f 0000000000000000\n  page dumped because: nonzero mapcount\n  CPU: 0 PID: 15567 Comm: ganesha.nfsd Kdump: loaded Tainted: P    B      O      5.10.158-1.nutanix.20221209.el7.x86_64 #1\n  Hardware name: VMware, Inc. VMware Virtual Platform\/440BX Desktop Reference Platform, BIOS 6.00 04\/05\/2016\n  Call Trace:\n   dump_stack+0x74\/0x96\n   bad_page.cold+0x63\/0x94\n   check_new_page_bad+0x6d\/0x80\n   rmqueue+0x46e\/0x970\n   get_page_from_freelist+0xcb\/0x3f0\n   ? _cond_resched+0x19\/0x40\n   __alloc_pages_nodemask+0x164\/0x300\n   alloc_pages_current+0x87\/0xf0\n   skb_page_frag_refill+0x84\/0x110\n   ...\n\nSometimes, it would also show up as corruption in the free list pointer\nand cause crashes.\n\nAfter bisecting the issue, we found the issue started from commit\ne320d3012d25 (\"mm\/page_alloc.c: fix freeing non-compound pages\"):\n\n\tif (put_page_testzero(page))\n\t\tfree_the_page(page, order);\n\telse if (!PageHead(page))\n\t\twhile (order-- > 0)\n\t\t\tfree_the_page(page + (1 << order), order);\n\nSo the problem is the check PageHead is racy because at this point we\nalready dropped our reference to the page.  So even if we came in with\ncompound page, the page can already be freed and PageHead can return\nfalse and we will end up freeing all the tail pages causing double free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a626e27f984dfbe96bd8e4fd08f20a2ede3ea23","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3af734f3eac6f70ef8e272a80da40544b9d0f2b5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b4c045a98f53a8890a94bb5846a390c8e39e673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/462a8e08e0e6287e5ce13187257edbf24213ed03","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52740","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:13.900","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npowerpc\/64s\/interrupt: Fix interrupt exit race with security mitigation switch\n\nThe RFI and STF security mitigation options can flip the\ninterrupt_exit_not_reentrant static branch condition concurrently with\nthe interrupt exit code which tests that branch.\n\nInterrupt exit tests this condition to set MSR[EE|RI] for exit, then\nagain in the case a soft-masked interrupt is found pending, to recover\nthe MSR so the interrupt can be replayed before attempting to exit\nagain. If the condition changes between these two tests, the MSR and irq\nsoft-mask state will become corrupted, leading to warnings and possible\ncrashes. For example, if the branch is initially true then false,\nMSR[EE] will be 0 but PACA_IRQ_HARD_DIS clear and EE may not get\nenabled, leading to warnings in irq_64.c."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ea31e2e62bbc4d11c411eeb36f1b02841dbcab1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f097c24815e67909a1fcc2c605586d02babd673","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86f7e423933608d536015a0f2eb9e0338c1227e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52741","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.000","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix use-after-free in rdata->read_into_pages()\n\nWhen the network status is unstable, use-after-free may occur when\nread data from the server.\n\n  BUG: KASAN: use-after-free in readpages_fill_pages+0x14c\/0x7e0\n\n  Call Trace:\n   <TASK>\n   dump_stack_lvl+0x38\/0x4c\n   print_report+0x16f\/0x4a6\n   kasan_report+0xb7\/0x130\n   readpages_fill_pages+0x14c\/0x7e0\n   cifs_readv_receive+0x46d\/0xa40\n   cifs_demultiplex_thread+0x121c\/0x1490\n   kthread+0x16b\/0x1a0\n   ret_from_fork+0x2c\/0x50\n   <\/TASK>\n\n  Allocated by task 2535:\n   kasan_save_stack+0x22\/0x50\n   kasan_set_track+0x25\/0x30\n   __kasan_kmalloc+0x82\/0x90\n   cifs_readdata_direct_alloc+0x2c\/0x110\n   cifs_readdata_alloc+0x2d\/0x60\n   cifs_readahead+0x393\/0xfe0\n   read_pages+0x12f\/0x470\n   page_cache_ra_unbounded+0x1b1\/0x240\n   filemap_get_pages+0x1c8\/0x9a0\n   filemap_read+0x1c0\/0x540\n   cifs_strict_readv+0x21b\/0x240\n   vfs_read+0x395\/0x4b0\n   ksys_read+0xb8\/0x150\n   do_syscall_64+0x3f\/0x90\n   entry_SYSCALL_64_after_hwframe+0x72\/0xdc\n\n  Freed by task 79:\n   kasan_save_stack+0x22\/0x50\n   kasan_set_track+0x25\/0x30\n   kasan_save_free_info+0x2e\/0x50\n   __kasan_slab_free+0x10e\/0x1a0\n   __kmem_cache_free+0x7a\/0x1a0\n   cifs_readdata_release+0x49\/0x60\n   process_one_work+0x46c\/0x760\n   worker_thread+0x2a4\/0x6f0\n   kthread+0x16b\/0x1a0\n   ret_from_fork+0x2c\/0x50\n\n  Last potentially related work creation:\n   kasan_save_stack+0x22\/0x50\n   __kasan_record_aux_stack+0x95\/0xb0\n   insert_work+0x2b\/0x130\n   __queue_work+0x1fe\/0x660\n   queue_work_on+0x4b\/0x60\n   smb2_readv_callback+0x396\/0x800\n   cifs_abort_connection+0x474\/0x6a0\n   cifs_reconnect+0x5cb\/0xa50\n   cifs_readv_from_socket.cold+0x22\/0x6c\n   cifs_read_page_from_socket+0xc1\/0x100\n   readpages_fill_pages.cold+0x2f\/0x46\n   cifs_readv_receive+0x46d\/0xa40\n   cifs_demultiplex_thread+0x121c\/0x1490\n   kthread+0x16b\/0x1a0\n   ret_from_fork+0x2c\/0x50\n\nThe following function calls will cause UAF of the rdata pointer.\n\nreadpages_fill_pages\n cifs_read_page_from_socket\n  cifs_readv_from_socket\n   cifs_reconnect\n    __cifs_reconnect\n     cifs_abort_connection\n      mid->callback() --> smb2_readv_callback\n       queue_work(&rdata->work)  # if the worker completes first,\n                                 # the rdata is freed\n          cifs_readv_complete\n            kref_put\n              cifs_readdata_release\n                kfree(rdata)\n return rdata->...               # UAF in readpages_fill_pages()\n\nSimilarly, this problem also occurs in the uncache_fill_pages().\n\nFix this by adjusts the order of condition judgment in the return\nstatement."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2b693fe3f760c87fd9768e759f6297f743a1b3b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3684a2f6affa1ca52a5d4a12f04d0652efdee65e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa5465aeca3c66fecdf7efcf554aed79b4c4b211","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1fba1e096ffc7ec11df863a97c50203c47315b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52742","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.080","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: USB: Fix wrong-direction WARNING in plusb.c\n\nThe syzbot fuzzer detected a bug in the plusb network driver: A\nzero-length control-OUT transfer was treated as a read instead of a\nwrite.  In modern kernels this error provokes a WARNING:\n\nusb 1-1: BOGUS control dir, pipe 80000280 doesn't match bRequestType c0\nWARNING: CPU: 0 PID: 4645 at drivers\/usb\/core\/urb.c:411\nusb_submit_urb+0x14a7\/0x1880 drivers\/usb\/core\/urb.c:411\nModules linked in:\nCPU: 1 PID: 4645 Comm: dhcpcd Not tainted\n6.2.0-rc6-syzkaller-00050-g9f266ccaa2f5 #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google\n01\/12\/2023\nRIP: 0010:usb_submit_urb+0x14a7\/0x1880 drivers\/usb\/core\/urb.c:411\n...\nCall Trace:\n <TASK>\n usb_start_wait_urb+0x101\/0x4b0 drivers\/usb\/core\/message.c:58\n usb_internal_control_msg drivers\/usb\/core\/message.c:102 [inline]\n usb_control_msg+0x320\/0x4a0 drivers\/usb\/core\/message.c:153\n __usbnet_read_cmd+0xb9\/0x390 drivers\/net\/usb\/usbnet.c:2010\n usbnet_read_cmd+0x96\/0xf0 drivers\/net\/usb\/usbnet.c:2068\n pl_vendor_req drivers\/net\/usb\/plusb.c:60 [inline]\n pl_set_QuickLink_features drivers\/net\/usb\/plusb.c:75 [inline]\n pl_reset+0x2f\/0xf0 drivers\/net\/usb\/plusb.c:85\n usbnet_open+0xcc\/0x5d0 drivers\/net\/usb\/usbnet.c:889\n __dev_open+0x297\/0x4d0 net\/core\/dev.c:1417\n __dev_change_flags+0x587\/0x750 net\/core\/dev.c:8530\n dev_change_flags+0x97\/0x170 net\/core\/dev.c:8602\n devinet_ioctl+0x15a2\/0x1d70 net\/ipv4\/devinet.c:1147\n inet_ioctl+0x33f\/0x380 net\/ipv4\/af_inet.c:979\n sock_do_ioctl+0xcc\/0x230 net\/socket.c:1169\n sock_ioctl+0x1f8\/0x680 net\/socket.c:1286\n vfs_ioctl fs\/ioctl.c:51 [inline]\n __do_sys_ioctl fs\/ioctl.c:870 [inline]\n __se_sys_ioctl fs\/ioctl.c:856 [inline]\n __x64_sys_ioctl+0x197\/0x210 fs\/ioctl.c:856\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x39\/0xb0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nThe fix is to call usbnet_write_cmd() instead of usbnet_read_cmd() and\nremove the USB_DIR_IN flag."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d2cf3fae701646061e295815bb7588d2f3671cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1be271c52bf3554edcb8d124d1f8c7f777ee5727","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25141fb4119112f4ebf8f00cf52014abbc8020b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43379fcacea2dcee35d02efc9c8fe97807a503c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6f69307f625904feed189008381fd83bd1a35b63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/811d581194f7412eda97acc03d17fc77824b561f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0ad46ef772438c0596df370450d8bdc8a12dbfb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52743","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.157","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nice: Do not use WQ_MEM_RECLAIM flag for workqueue\n\nWhen both ice and the irdma driver are loaded, a warning in\ncheck_flush_dependency is being triggered. This is due to ice driver\nworkqueue being allocated with the WQ_MEM_RECLAIM flag and the irdma one\nis not.\n\nAccording to kernel documentation, this flag should be set if the\nworkqueue will be involved in the kernel's memory reclamation flow.\nSince it is not, there is no need for the ice driver's WQ to have this\nflag set so remove it.\n\nExample trace:\n\n[  +0.000004] workqueue: WQ_MEM_RECLAIM ice:ice_service_task [ice] is flushing !WQ_MEM_RECLAIM infiniband:0x0\n[  +0.000139] WARNING: CPU: 0 PID: 728 at kernel\/workqueue.c:2632 check_flush_dependency+0x178\/0x1a0\n[  +0.000011] Modules linked in: bonding tls xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT nf_reject_ipv4 nft_compat nft_cha\nin_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 nf_tables nfnetlink bridge stp llc rfkill vfat fat intel_rapl_msr intel\n_rapl_common isst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel kvm irqbypass crct1\n0dif_pclmul crc32_pclmul ghash_clmulni_intel rapl intel_cstate rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_\ncore_mod ib_iser libiscsi scsi_transport_iscsi rdma_cm ib_cm iw_cm iTCO_wdt iTCO_vendor_support ipmi_ssif irdma mei_me ib_uverbs\nib_core intel_uncore joydev pcspkr i2c_i801 acpi_ipmi mei lpc_ich i2c_smbus intel_pch_thermal ioatdma ipmi_si acpi_power_meter\nacpi_pad xfs libcrc32c sd_mod t10_pi crc64_rocksoft crc64 sg ahci ixgbe libahci ice i40e igb crc32c_intel mdio i2c_algo_bit liba\nta dca wmi dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse\n[  +0.000161]  [last unloaded: bonding]\n[  +0.000006] CPU: 0 PID: 728 Comm: kworker\/0:2 Tainted: G S                 6.2.0-rc2_next-queue-13jan-00458-gc20aabd57164 #1\n[  +0.000006] Hardware name: Intel Corporation S2600WFT\/S2600WFT, BIOS SE5C620.86B.02.01.0010.010620200716 01\/06\/2020\n[  +0.000003] Workqueue: ice ice_service_task [ice]\n[  +0.000127] RIP: 0010:check_flush_dependency+0x178\/0x1a0\n[  +0.000005] Code: 89 8e 02 01 e8 49 3d 40 00 49 8b 55 18 48 8d 8d d0 00 00 00 48 8d b3 d0 00 00 00 4d 89 e0 48 c7 c7 e0 3b 08\n9f e8 bb d3 07 01 <0f> 0b e9 be fe ff ff 80 3d 24 89 8e 02 00 0f 85 6b ff ff ff e9 06\n[  +0.000004] RSP: 0018:ffff88810a39f990 EFLAGS: 00010282\n[  +0.000005] RAX: 0000000000000000 RBX: ffff888141bc2400 RCX: 0000000000000000\n[  +0.000004] RDX: 0000000000000001 RSI: dffffc0000000000 RDI: ffffffffa1213a80\n[  +0.000003] RBP: ffff888194bf3400 R08: ffffed117b306112 R09: ffffed117b306112\n[  +0.000003] R10: ffff888bd983088b R11: ffffed117b306111 R12: 0000000000000000\n[  +0.000003] R13: ffff888111f84d00 R14: ffff88810a3943ac R15: ffff888194bf3400\n[  +0.000004] FS:  0000000000000000(0000) GS:ffff888bd9800000(0000) knlGS:0000000000000000\n[  +0.000003] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  +0.000003] CR2: 000056035b208b60 CR3: 000000017795e005 CR4: 00000000007706f0\n[  +0.000003] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  +0.000003] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  +0.000002] PKRU: 55555554\n[  +0.000003] Call Trace:\n[  +0.000002]  <TASK>\n[  +0.000003]  __flush_workqueue+0x203\/0x840\n[  +0.000006]  ? mutex_unlock+0x84\/0xd0\n[  +0.000008]  ? __pfx_mutex_unlock+0x10\/0x10\n[  +0.000004]  ? __pfx___flush_workqueue+0x10\/0x10\n[  +0.000006]  ? mutex_lock+0xa3\/0xf0\n[  +0.000005]  ib_cache_cleanup_one+0x39\/0x190 [ib_core]\n[  +0.000174]  __ib_unregister_device+0x84\/0xf0 [ib_core]\n[  +0.000094]  ib_unregister_device+0x25\/0x30 [ib_core]\n[  +0.000093]  irdma_ib_unregister_device+0x97\/0xc0 [irdma]\n[  +0.000064]  ? __pfx_irdma_ib_unregister_device+0x10\/0x10 [irdma]\n[  +0.000059]  ? up_write+0x5c\/0x90\n[  +0.000005]  irdma_remove+0x36\/0x90 [irdma]\n[  +0.000062]  auxiliary_bus_remove+0x32\/0x50\n[  +0.000007]  device_r\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1ad4112c9fcf0bc08222b2b1614fba52ffd12255","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d159f7884f78b1aacb99b4fc37d1e3cb1194e39","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87a5e3fc8416106e290c448fc8a6dd50ab24c634","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca834a017851c50464c25a85f3cb2daefff7bede","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df59e05401450973c8c7e96fd74b49e24442dc1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52744","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.230","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA\/irdma: Fix potential NULL-ptr-dereference\n\nin_dev_get() can return NULL which will cause a failure once idev is\ndereferenced in in_dev_for_each_ifa_rtnl(). This patch adds a\ncheck for NULL value in idev beforehand.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/360682fe7df262d94fae54f737c487bec0f9190d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d9745cead1f121974322b94ceadfb4d1e67960e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f5fe1cd8e6a97f94840b55f59ed08cbc397086f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52745","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.303","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/IPoIB: Fix legacy IPoIB due to wrong number of queues\n\nThe cited commit creates child PKEY interfaces over netlink will\nmultiple tx and rx queues, but some devices doesn't support more than 1\ntx and 1 rx queues. This causes to a crash when traffic is sent over the\nPKEY interface due to the parent having a single queue but the child\nhaving multiple queues.\n\nThis patch fixes the number of queues to 1 for legacy IPoIB at the\nearliest possible point in time.\n\nBUG: kernel NULL pointer dereference, address: 000000000000036b\nPGD 0 P4D 0\nOops: 0000 [#1] SMP\nCPU: 4 PID: 209665 Comm: python3 Not tainted 6.1.0_for_upstream_min_debug_2022_12_12_17_02 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\nRIP: 0010:kmem_cache_alloc+0xcb\/0x450\nCode: ce 7e 49 8b 50 08 49 83 78 10 00 4d 8b 28 0f 84 cb 02 00 00 4d 85 ed 0f 84 c2 02 00 00 41 8b 44 24 28 48 8d 4a\n01 49 8b 3c 24 <49> 8b 5c 05 00 4c 89 e8 65 48 0f c7 0f 0f 94 c0 84 c0 74 b8 41 8b\nRSP: 0018:ffff88822acbbab8 EFLAGS: 00010202\nRAX: 0000000000000070 RBX: ffff8881c28e3e00 RCX: 00000000064f8dae\nRDX: 00000000064f8dad RSI: 0000000000000a20 RDI: 0000000000030d00\nRBP: 0000000000000a20 R08: ffff8882f5d30d00 R09: ffff888104032f40\nR10: ffff88810fade828 R11: 736f6d6570736575 R12: ffff88810081c000\nR13: 00000000000002fb R14: ffffffff817fc865 R15: 0000000000000000\nFS:  00007f9324ff9700(0000) GS:ffff8882f5d00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000000000036b CR3: 00000001125af004 CR4: 0000000000370ea0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n skb_clone+0x55\/0xd0\n ip6_finish_output2+0x3fe\/0x690\n ip6_finish_output+0xfa\/0x310\n ip6_send_skb+0x1e\/0x60\n udp_v6_send_skb+0x1e5\/0x420\n udpv6_sendmsg+0xb3c\/0xe60\n ? ip_mc_finish_output+0x180\/0x180\n ? __switch_to_asm+0x3a\/0x60\n ? __switch_to_asm+0x34\/0x60\n sock_sendmsg+0x33\/0x40\n __sys_sendto+0x103\/0x160\n ? _copy_to_user+0x21\/0x30\n ? kvm_clock_get_cycles+0xd\/0x10\n ? ktime_get_ts64+0x49\/0xe0\n __x64_sys_sendto+0x25\/0x30\n do_syscall_64+0x3d\/0x90\n entry_SYSCALL_64_after_hwframe+0x46\/0xb0\nRIP: 0033:0x7f9374f1ed14\nCode: 42 41 f8 ff 44 8b 4c 24 2c 4c 8b 44 24 20 89 c5 44 8b 54 24 28 48 8b 54 24 18 b8 2c 00 00 00 48 8b 74 24 10 8b\n7c 24 08 0f 05 <48> 3d 00 f0 ff ff 77 34 89 ef 48 89 44 24 08 e8 68 41 f8 ff 48 8b\nRSP: 002b:00007f9324ff7bd0 EFLAGS: 00000293 ORIG_RAX: 000000000000002c\nRAX: ffffffffffffffda RBX: 00007f9324ff7cc8 RCX: 00007f9374f1ed14\nRDX: 00000000000002fb RSI: 00007f93000052f0 RDI: 0000000000000030\nRBP: 0000000000000000 R08: 00007f9324ff7d40 R09: 000000000000001c\nR10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000\nR13: 000000012a05f200 R14: 0000000000000001 R15: 00007f9374d57bdc\n <\/TASK>"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1b4ef90cbcfa603b3bb536fbd6f261197012b6f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a779187db39b2f32d048a752573e56e4e77807f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7197460dcd43ff0e4a502ba855dd82d37c2848cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1afb666c32931667c15ad1b58e7203f0119dcaf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e632291a2dbce45a24cddeb5fe28fe71d724ba43","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52746","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.377","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm\/compat: prevent potential spectre v1 gadget in xfrm_xlate32_attr()\n\n  int type = nla_type(nla);\n\n  if (type > XFRMA_MAX) {\n            return -EOPNOTSUPP;\n  }\n\n@type is then used as an array index and can be used\nas a Spectre v1 gadget.\n\n  if (nla_len(nla) < compat_policy[type].len) {\n\narray_index_nospec() can be used to prevent leaking\ncontent of kernel memory to malicious users."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/419674224390fca298020fc0751a20812f84b12d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5dc688fae6b7be9dbbf5304a3d2520d038e06db5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a893cc644812728e86e9aff517fd5698812ecef0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b6ee896385380aa621102e8ea402ba12db1cabff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52747","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.443","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/hfi1: Restore allocated resources on failed copyout\n\nFix a resource leak if an error occurs."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00d9e212b8a39e6ffcf31b9d2e503d2bf6009d45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0a4f811f2e5d07bbd0c9226f4afb0a1270a831ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6601fc0d15ffc20654e39486f9bef35567106d68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7896accedf5bf1277d2f305718e36dc8bac7e321","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79b595d9591426156a9e0635a5b5115508a36fef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9bae58d58b6bb73b572356b31a62d2afc7378d12","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52748","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.517","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: avoid format-overflow warning\n\nWith gcc and W=1 option, there's a warning like this:\n\nfs\/f2fs\/compress.c: In function ‘f2fs_init_page_array_cache’:\nfs\/f2fs\/compress.c:1984:47: error: ‘%u’ directive writing between\n1 and 7 bytes into a region of size between 5 and 8\n[-Werror=format-overflow=]\n 1984 |  sprintf(slab_name, \"f2fs_page_array_entry-%u:%u\", MAJOR(dev),\n\t\tMINOR(dev));\n      |                                               ^~\n\nString \"f2fs_page_array_entry-%u:%u\" can up to 35. The first \"%u\" can up\nto 4 and the second \"%u\" can up to 7, so total size is \"24 + 4 + 7 = 35\".\nslab_name's size should be 35 rather than 32."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3eebe636cac53886bd5d1cdd55e082ec9e84983f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/526dd7540a09ecf87b5f54f3ab4e0a2528f25a79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fca08fd3085253b48fcb1bd243a0a5e18821a00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c041f5ddef00c731c541e00bc8ae97b8c84c682f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0d4e8acb3789c5a8651061fbab62ca24a45c063","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e4088d7d8f1123006d46a42edf51b8c960a58ef9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52749","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.587","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nspi: Fix null dereference on suspend\n\nA race condition exists where a synchronous (noqueue) transfer can be\nactive during a system suspend. This can cause a null pointer\ndereference exception to occur when the system resumes.\n\nExample order of events leading to the exception:\n1. spi_sync() calls __spi_transfer_message_noqueue() which sets\n   ctlr->cur_msg\n2. Spi transfer begins via spi_transfer_one_message()\n3. System is suspended interrupting the transfer context\n4. System is resumed\n6. spi_controller_resume() calls spi_start_queue() which resets cur_msg\n   to NULL\n7. Spi transfer context resumes and spi_finalize_current_message() is\n   called which dereferences cur_msg (which is now NULL)\n\nWait for synchronous transfers to complete before suspending by\nacquiring the bus mutex and setting\/checking a suspend flag."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ec4508db97502a12daee88c74782e8d35ced068","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96474ea47dc67b0704392d59192b233c8197db0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bef4a48f4ef798c4feddf045d49e53c8a97d5e37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52750","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.687","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\narm64: Restrict CPU_BIG_ENDIAN to GNU as or LLVM IAS 15.x or newer\n\nPrior to LLVM 15.0.0, LLVM's integrated assembler would incorrectly\nbyte-swap NOP when compiling for big-endian, and the resulting series of\nbytes happened to match the encoding of FNMADD S21, S30, S0, S0.\n\nThis went unnoticed until commit:\n\n  34f66c4c4d5518c1 (\"arm64: Use a positive cpucap for FP\/SIMD\")\n\nPrior to that commit, the kernel would always enable the use of FPSIMD\nearly in boot when __cpu_setup() initialized CPACR_EL1, and so usage of\nFNMADD within the kernel was not detected, but could result in the\ncorruption of user or kernel FPSIMD state.\n\nAfter that commit, the instructions happen to trap during boot prior to\nFPSIMD being detected and enabled, e.g.\n\n| Unhandled 64-bit el1h sync exception on CPU0, ESR 0x000000001fe00000 -- ASIMD\n| CPU: 0 PID: 0 Comm: swapper Not tainted 6.6.0-rc3-00013-g34f66c4c4d55 #1\n| Hardware name: linux,dummy-virt (DT)\n| pstate: 400000c9 (nZcv daIF -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n| pc : __pi_strcmp+0x1c\/0x150\n| lr : populate_properties+0xe4\/0x254\n| sp : ffffd014173d3ad0\n| x29: ffffd014173d3af0 x28: fffffbfffddffcb8 x27: 0000000000000000\n| x26: 0000000000000058 x25: fffffbfffddfe054 x24: 0000000000000008\n| x23: fffffbfffddfe000 x22: fffffbfffddfe000 x21: fffffbfffddfe044\n| x20: ffffd014173d3b70 x19: 0000000000000001 x18: 0000000000000005\n| x17: 0000000000000010 x16: 0000000000000000 x15: 00000000413e7000\n| x14: 0000000000000000 x13: 0000000000001bcc x12: 0000000000000000\n| x11: 00000000d00dfeed x10: ffffd414193f2cd0 x9 : 0000000000000000\n| x8 : 0101010101010101 x7 : ffffffffffffffc0 x6 : 0000000000000000\n| x5 : 0000000000000000 x4 : 0101010101010101 x3 : 000000000000002a\n| x2 : 0000000000000001 x1 : ffffd014171f2988 x0 : fffffbfffddffcb8\n| Kernel panic - not syncing: Unhandled exception\n| CPU: 0 PID: 0 Comm: swapper Not tainted 6.6.0-rc3-00013-g34f66c4c4d55 #1\n| Hardware name: linux,dummy-virt (DT)\n| Call trace:\n|  dump_backtrace+0xec\/0x108\n|  show_stack+0x18\/0x2c\n|  dump_stack_lvl+0x50\/0x68\n|  dump_stack+0x18\/0x24\n|  panic+0x13c\/0x340\n|  el1t_64_irq_handler+0x0\/0x1c\n|  el1_abort+0x0\/0x5c\n|  el1h_64_sync+0x64\/0x68\n|  __pi_strcmp+0x1c\/0x150\n|  unflatten_dt_nodes+0x1e8\/0x2d8\n|  __unflatten_device_tree+0x5c\/0x15c\n|  unflatten_device_tree+0x38\/0x50\n|  setup_arch+0x164\/0x1e0\n|  start_kernel+0x64\/0x38c\n|  __primary_switched+0xbc\/0xc4\n\nRestrict CONFIG_CPU_BIG_ENDIAN to a known good assembler, which is\neither GNU as or LLVM's IAS 15.0.0 and newer, which contains the linked\ncommit."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/146a15b873353f8ac28dc281c139ff611a3c4848","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69e619d2fd056fe1f5d0adf01584f2da669e0d28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/936c9c10efaefaf1ab3ef020e1f8aaaaff1ad2f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd31e534721ab95ef237020fe6995c899ffdf21a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d08a1e75253b4e19ae290b1c35349f12cfcebc0a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef0224ee5399ea8a46bc07dc6c6494961ed5fdd2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52751","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.763","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free in smb2_query_info_compound()\n\nThe following UAF was triggered when running fstests generic\/072 with\nKASAN enabled against Windows Server 2022 and mount options\n'multichannel,max_channels=2,vers=3.1.1,mfsymlinks,noperm'\n\n  BUG: KASAN: slab-use-after-free in smb2_query_info_compound+0x423\/0x6d0 [cifs]\n  Read of size 8 at addr ffff888014941048 by task xfs_io\/27534\n\n  CPU: 0 PID: 27534 Comm: xfs_io Not tainted 6.6.0-rc7 #1\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS\n  rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04\/01\/2014\n  Call Trace:\n   dump_stack_lvl+0x4a\/0x80\n   print_report+0xcf\/0x650\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? __phys_addr+0x46\/0x90\n   kasan_report+0xda\/0x110\n   ? smb2_query_info_compound+0x423\/0x6d0 [cifs]\n   ? smb2_query_info_compound+0x423\/0x6d0 [cifs]\n   smb2_query_info_compound+0x423\/0x6d0 [cifs]\n   ? __pfx_smb2_query_info_compound+0x10\/0x10 [cifs]\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? __stack_depot_save+0x39\/0x480\n   ? kasan_save_stack+0x33\/0x60\n   ? kasan_set_track+0x25\/0x30\n   ? ____kasan_slab_free+0x126\/0x170\n   smb2_queryfs+0xc2\/0x2c0 [cifs]\n   ? __pfx_smb2_queryfs+0x10\/0x10 [cifs]\n   ? __pfx___lock_acquire+0x10\/0x10\n   smb311_queryfs+0x210\/0x220 [cifs]\n   ? __pfx_smb311_queryfs+0x10\/0x10 [cifs]\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? __lock_acquire+0x480\/0x26c0\n   ? lock_release+0x1ed\/0x640\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? do_raw_spin_unlock+0x9b\/0x100\n   cifs_statfs+0x18c\/0x4b0 [cifs]\n   statfs_by_dentry+0x9b\/0xf0\n   fd_statfs+0x4e\/0xb0\n   __do_sys_fstatfs+0x7f\/0xe0\n   ? __pfx___do_sys_fstatfs+0x10\/0x10\n   ? srso_alias_return_thunk+0x5\/0x7f\n   ? lockdep_hardirqs_on_prepare+0x136\/0x200\n   ? srso_alias_return_thunk+0x5\/0x7f\n   do_syscall_64+0x3f\/0x90\n   entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n\n  Allocated by task 27534:\n   kasan_save_stack+0x33\/0x60\n   kasan_set_track+0x25\/0x30\n   __kasan_kmalloc+0x8f\/0xa0\n   open_cached_dir+0x71b\/0x1240 [cifs]\n   smb2_query_info_compound+0x5c3\/0x6d0 [cifs]\n   smb2_queryfs+0xc2\/0x2c0 [cifs]\n   smb311_queryfs+0x210\/0x220 [cifs]\n   cifs_statfs+0x18c\/0x4b0 [cifs]\n   statfs_by_dentry+0x9b\/0xf0\n   fd_statfs+0x4e\/0xb0\n   __do_sys_fstatfs+0x7f\/0xe0\n   do_syscall_64+0x3f\/0x90\n   entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n\n  Freed by task 27534:\n   kasan_save_stack+0x33\/0x60\n   kasan_set_track+0x25\/0x30\n   kasan_save_free_info+0x2b\/0x50\n   ____kasan_slab_free+0x126\/0x170\n   slab_free_freelist_hook+0xd0\/0x1e0\n   __kmem_cache_free+0x9d\/0x1b0\n   open_cached_dir+0xff5\/0x1240 [cifs]\n   smb2_query_info_compound+0x5c3\/0x6d0 [cifs]\n   smb2_queryfs+0xc2\/0x2c0 [cifs]\n\nThis is a race between open_cached_dir() and cached_dir_lease_break()\nwhere the cache entry for the open directory handle receives a lease\nbreak while creating it.  And before returning from open_cached_dir(),\nwe put the last reference of the new @cfid because of\n!@cfid->has_lease.\n\nBesides the UAF, while running xfstests a lot of missed lease breaks\nhave been noticed in tests that run several concurrent statfs(2) calls\non those cached fids\n\n  CIFS: VFS: \\\\w22-root1.gandalf.test No task to wake, unknown frame...\n  CIFS: VFS: \\\\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...\n  CIFS: VFS: \\\\w22-root1.gandalf.test smb buf 00000000715bfe83 len 108\n  CIFS: VFS: Dump pending requests:\n  CIFS: VFS: \\\\w22-root1.gandalf.test No task to wake, unknown frame...\n  CIFS: VFS: \\\\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...\n  CIFS: VFS: \\\\w22-root1.gandalf.test smb buf 000000005aa7316e len 108\n  ...\n\nTo fix both, in open_cached_dir() ensure that @cfid->has_lease is set\nright before sending out compounded request so that any potential\nlease break will be get processed by demultiplex thread while we're\nstill caching @cfid.  And, if open failed for some reason, re-check\n@cfid->has_lease to decide whether or not put lease reference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5c86919455c1edec99ebd3338ad213b59271a71b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6db94d08359c43f2c8fe372811cdee04564a41b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93877b9afc2994c89362007aac480a7b150f386f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52752","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.833","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix use-after-free bug in cifs_debug_data_proc_show()\n\nSkip SMB sessions that are being teared down\n(e.g. @ses->ses_status == SES_EXITING) in cifs_debug_data_proc_show()\nto avoid use-after-free in @ses.\n\nThis fixes the following GPF when reading from \/proc\/fs\/cifs\/DebugData\nwhile mounting and umounting\n\n  [ 816.251274] general protection fault, probably for non-canonical\n  address 0x6b6b6b6b6b6b6d81: 0000 [#1] PREEMPT SMP NOPTI\n  ...\n  [  816.260138] Call Trace:\n  [  816.260329]  <TASK>\n  [  816.260499]  ? die_addr+0x36\/0x90\n  [  816.260762]  ? exc_general_protection+0x1b3\/0x410\n  [  816.261126]  ? asm_exc_general_protection+0x26\/0x30\n  [  816.261502]  ? cifs_debug_tcon+0xbd\/0x240 [cifs]\n  [  816.261878]  ? cifs_debug_tcon+0xab\/0x240 [cifs]\n  [  816.262249]  cifs_debug_data_proc_show+0x516\/0xdb0 [cifs]\n  [  816.262689]  ? seq_read_iter+0x379\/0x470\n  [  816.262995]  seq_read_iter+0x118\/0x470\n  [  816.263291]  proc_reg_read_iter+0x53\/0x90\n  [  816.263596]  ? srso_alias_return_thunk+0x5\/0x7f\n  [  816.263945]  vfs_read+0x201\/0x350\n  [  816.264211]  ksys_read+0x75\/0x100\n  [  816.264472]  do_syscall_64+0x3f\/0x90\n  [  816.264750]  entry_SYSCALL_64_after_hwframe+0x6e\/0xd8\n  [  816.265135] RIP: 0033:0x7fd5e669d381"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ab6f842452ce2cae04209d4671ac6289d0aef8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/558817597d5fbd7af31f891b67b0fd20f0d047b7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/89929ea46f9cc11ba66d2c64713aa5d5dc723b09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d328c09ee9f15ee5a26431f5aad7c9239fa85e62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52753","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.900","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Avoid NULL dereference of timing generator\n\n[Why & How]\nCheck whether assigned timing generator is NULL or not before\naccessing its funcs to prevent NULL dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09909f515032fa80b921fd3118efe66b185d10fd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e497f1acd99075b13605b2e7fa0cba721a2cfd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6d8653b1a7a8dc938b566ae8c4f373b36e792c68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79b6a90f4f2433312154cd68452b0ba501fa74db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a06894666e0b462c9316b26ab615cefdd0d676c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b1904ed480cee3f9f4036ea0e36d139cb5fee2d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df8bc953eed72371e43ca407bd063507f760cf89","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eac3e4760aa12159f7f5475d55a67b7933abc195","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52754","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:14.970","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: imon: fix access to invalid resource for the second interface\n\nimon driver probes two USB interfaces, and at the probe of the second\ninterface, the driver assumes blindly that the first interface got\nbound with the same imon driver.  It's usually true, but it's still\npossible that the first interface is bound with another driver via a\nmalformed descriptor.  Then it may lead to a memory corruption, as\nspotted by syzkaller; imon driver accesses the data from drvdata as\nstruct imon_context object although it's a completely different one\nthat was assigned by another driver.\n\nThis patch adds a sanity check -- whether the first interface is\nreally bound with the imon driver or not -- for avoiding the problem\nabove at the probe time."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f5068519f89d928d6c51100e4b274479123829f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/10ec5a97f8f5a772a1a42b4eb27196b447cd3aa9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a493a34bd6e496c55fabedd82b957193ace178f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e0b788fb96be36d1baf1a5c88d09c7c82a0452a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1766a4fd83befa0b34d932d532e7ebb7fab1fa7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b083aaf5db2eeca9e362723258e5d8698f7dd84e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52755","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.037","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nksmbd: fix slab out of bounds write in smb_inherit_dacl()\n\nslab out-of-bounds write is caused by that offsets is bigger than pntsd\nallocation size. This patch add the check to validate 3 offsets using\nallocation size."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09d9d8b40a3338193619c14ed4dc040f4f119e70","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/712e01f32e577e7e48ab0adb5fe550646a3d93cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8387c94d73ec66eb597c7a23a8d9eadf64bfbafa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aaf0a07d60887d6c36fc46a24de0083744f07819","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eebff19acaa35820cb09ce2ccb3d21bee2156ffb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52756","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.113","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npwm: Fix double shift bug\n\nThese enums are passed to set\/test_bit().  The set\/test_bit() functions\ntake a bit number instead of a shifted value.  Passing a shifted value\nis a double shift bug like doing BIT(BIT(1)).  The double shift bug\ndoesn't cause a problem here because we are only checking 0 and 1 but\nif the value was 5 or above then it can lead to a buffer overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fb3a9c59e7f7d2b1d737a0d6e02e31d5b516455","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45d0a298e05adee521f6fe605d6a88341ba07edd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7ee519e8095d9c834086d0ff40da11415e1e4d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a98ff250b5af87f92f17bb9725cb21de1931ee57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bce1f7c7e9812da57de1dda293cba87c693e9958","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c19a8794bf4fe45cff997f07a75ea84cc9e5d89c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d27abbfd4888d79dd24baf50e774631046ac4732","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e52518b9cb9fc98fc043c8fb2b8cfc619ca8a88b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eca19db60f99925461f49c3fd743733881395728","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52757","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.187","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential deadlock when releasing mids\n\nAll release_mid() callers seem to hold a reference of @mid so there is\nno need to call kref_put(&mid->refcount, __release_mid) under\n@server->mid_lock spinlock.  If they don't, then an use-after-free bug\nwould have occurred anyways.\n\nBy getting rid of such spinlock also fixes a potential deadlock as\nshown below\n\nCPU 0                                CPU 1\n------------------------------------------------------------------\ncifs_demultiplex_thread()            cifs_debug_data_proc_show()\n release_mid()\n  spin_lock(&server->mid_lock);\n                                     spin_lock(&cifs_tcp_ses_lock)\n\t\t\t\t      spin_lock(&server->mid_lock)\n  __release_mid()\n   smb2_find_smb_tcon()\n    spin_lock(&cifs_tcp_ses_lock) *deadlock*"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9eb44db68c5b7f5aa22b8fc7de74a3e2e08d1f29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b9bb9607b1fc12fca51f5632da25b36975f599bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c1a5962f1462b64fe7b69f20a4b6af8067bc2d26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6322fd177c6885a21dd4609dc5e5c973d1a2eb7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52758","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.257","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: dev: copy userspace array safely\n\ni2c-dev.c utilizes memdup_user() to copy a userspace array. This is done\nwithout an overflow check.\n\nUse the new wrapper memdup_array_user() to copy the array more safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38ada2f304f6f2065dd59613ef236a26f4dd73cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aff8be2cad74a22525cd89cdff0b72a5c9a4c0c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bef76b8544939518dafa3325bcd438b111136437","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc9c54232f04aef3a5d7f64a0ece7df00f1aaa3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe4eb2157d8c45b127bd88b1376c38c27b741293","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52759","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.330","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: ignore negated quota changes\n\nWhen lots of quota changes are made, there may be cases in which an\ninode's quota information is increased and then decreased, such as when\nblocks are added to a file, then deleted from it. If the timing is\nright, function do_qc can add pending quota changes to a transaction,\nthen later, another call to do_qc can negate those changes, resulting\nin a net gain of 0. The quota_change information is recorded in the qc\nbuffer (and qd element of the inode as well). The buffer is added to the\ntransaction by the first call to do_qc, but a subsequent call changes\nthe value from non-zero back to zero. At that point it's too late to\nremove the buffer_head from the transaction. Later, when the quota sync\ncode is called, the zero-change qd element is discovered and flagged as\nan assert warning. If the fs is mounted with errors=panic, the kernel\nwill panic.\n\nThis is usually seen when files are truncated and the quota changes are\nnegated by punch_hole\/truncate which uses gfs2_quota_hold and\ngfs2_quota_unhold rather than block allocations that use gfs2_quota_lock\nand gfs2_quota_unlock which automatically do quota sync.\n\nThis patch solves the problem by adding a check to qd_check_sync such\nthat net-zero quota changes already added to the transaction are no\nlonger deemed necessary to be synced, and skipped.\n\nIn this case references are taken for the qd and the slot from do_qc\nso those need to be put. The normal sequence of events for a normal\nnon-zero quota change is as follows:\n\ngfs2_quota_change\n   do_qc\n      qd_hold\n      slot_hold\n\nLater, when the changes are to be synced:\n\ngfs2_quota_sync\n   qd_fish\n      qd_check_sync\n         gets qd ref via lockref_get_not_dead\n   do_sync\n      do_qc(QC_SYNC)\n         qd_put\n\t    lockref_put_or_lock\n   qd_unlock\n      qd_put\n         lockref_put_or_lock\n\nIn the net-zero change case, we add a check to qd_check_sync so it puts\nthe qd and slot references acquired in gfs2_quota_change and skip the\nunneeded sync."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/119565e566f91ff3588ffcd5812f0c8061586c6b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1c28dace66015b675a343b89b0c87abbfda05ff4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/212f112fe5e90e98eb8d48585682880dae139f4c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a054b87a1b799b391e578597a42ee6e57a987ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2bb42a27a92ff3984c9fa5fbe128eced3ea693f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c6a08125f2249531ec01783a5f4317d7342add5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53fc16c1ad84f5467ec24341670b63aa759335d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5bfda356e903633d16ae1bac1ee38364e12628a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4deec69fe32b58dc5fb4ace52456ece85b75561","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52760","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.410","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Fix slab-use-after-free in gfs2_qd_dealloc\n\nIn gfs2_put_super(), whether withdrawn or not, the quota should\nbe cleaned up by gfs2_quota_cleanup().\n\nOtherwise, struct gfs2_sbd will be freed before gfs2_qd_dealloc (rcu\ncallback) has run for all gfs2_quota_data objects, resulting in\nuse-after-free.\n\nAlso, gfs2_destroy_threads() and gfs2_quota_cleanup() is already called\nby gfs2_make_fs_ro(), so in gfs2_put_super(), after calling\ngfs2_make_fs_ro(), there is no need to call them again."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/08a28272faa750d4357ea2cb48d2baefd778ea81","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdcb8aa434c6d36b5c215d02a9ef07551be25a37","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52761","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.487","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: VMAP_STACK overflow detection thread-safe\n\ncommit 31da94c25aea (\"riscv: add VMAP_STACK overflow detection\") added\nsupport for CONFIG_VMAP_STACK. If overflow is detected, CPU switches to\n`shadow_stack` temporarily before switching finally to per-cpu\n`overflow_stack`.\n\nIf two CPUs\/harts are racing and end up in over flowing kernel stack, one\nor both will end up corrupting each other state because `shadow_stack` is\nnot per-cpu. This patch optimizes per-cpu overflow stack switch by\ndirectly picking per-cpu `overflow_stack` and gets rid of `shadow_stack`.\n\nFollowing are the changes in this patch\n\n - Defines an asm macro to obtain per-cpu symbols in destination\n   register.\n - In entry.S, when overflow is detected, per-cpu overflow stack is\n   located using per-cpu asm macro. Computing per-cpu symbol requires\n   a temporary register. x31 is saved away into CSR_SCRATCH\n   (CSR_SCRATCH is anyways zero since we're in kernel).\n\nPlease see Links for additional relevant disccussion and alternative\nsolution.\n\nTested by `echo EXHAUST_STACK > \/sys\/kernel\/debug\/provoke-crash\/DIRECT`\nKernel crash log below\n\n Insufficient stack space to handle exception!\/debug\/provoke-crash\/DIRECT\n Task stack:     [0xff20000010a98000..0xff20000010a9c000]\n Overflow stack: [0xff600001f7d98370..0xff600001f7d99370]\n CPU: 1 PID: 205 Comm: bash Not tainted 6.1.0-rc2-00001-g328a1f96f7b9 #34\n Hardware name: riscv-virtio,qemu (DT)\n epc : __memset+0x60\/0xfc\n  ra : recursive_loop+0x48\/0xc6 [lkdtm]\n epc : ffffffff808de0e4 ra : ffffffff0163a752 sp : ff20000010a97e80\n  gp : ffffffff815c0330 tp : ff600000820ea280 t0 : ff20000010a97e88\n  t1 : 000000000000002e t2 : 3233206874706564 s0 : ff20000010a982b0\n  s1 : 0000000000000012 a0 : ff20000010a97e88 a1 : 0000000000000000\n  a2 : 0000000000000400 a3 : ff20000010a98288 a4 : 0000000000000000\n  a5 : 0000000000000000 a6 : fffffffffffe43f0 a7 : 00007fffffffffff\n  s2 : ff20000010a97e88 s3 : ffffffff01644680 s4 : ff20000010a9be90\n  s5 : ff600000842ba6c0 s6 : 00aaaaaac29e42b0 s7 : 00fffffff0aa3684\n  s8 : 00aaaaaac2978040 s9 : 0000000000000065 s10: 00ffffff8a7cad10\n  s11: 00ffffff8a76a4e0 t3 : ffffffff815dbaf4 t4 : ffffffff815dbaf4\n  t5 : ffffffff815dbab8 t6 : ff20000010a9bb48\n status: 0000000200000120 badaddr: ff20000010a97e88 cause: 000000000000000f\n Kernel panic - not syncing: Kernel stack overflow\n CPU: 1 PID: 205 Comm: bash Not tainted 6.1.0-rc2-00001-g328a1f96f7b9 #34\n Hardware name: riscv-virtio,qemu (DT)\n Call Trace:\n [<ffffffff80006754>] dump_backtrace+0x30\/0x38\n [<ffffffff808de798>] show_stack+0x40\/0x4c\n [<ffffffff808ea2a8>] dump_stack_lvl+0x44\/0x5c\n [<ffffffff808ea2d8>] dump_stack+0x18\/0x20\n [<ffffffff808dec06>] panic+0x126\/0x2fe\n [<ffffffff800065ea>] walk_stackframe+0x0\/0xf0\n [<ffffffff0163a752>] recursive_loop+0x48\/0xc6 [lkdtm]\n SMP: stopping secondary CPUs\n ---[ end Kernel panic - not syncing: Kernel stack overflow ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1493baaf09e3c1899959c8a107cd1207e16d1788","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be97d0db5f44c0674480cb79ac6f5b0529b84c76","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eff53aea3855f71992c043cebb1c00988c17ee20","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52762","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.560","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio-blk: fix implicit overflow on virtio_max_dma_size\n\nThe following codes have an implicit conversion from size_t to u32:\n(u32)max_size = (size_t)virtio_max_dma_size(vdev);\n\nThis may lead overflow, Ex (size_t)4G -> (u32)0. Once\nvirtio_max_dma_size() has a larger size than U32_MAX, use U32_MAX\ninstead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/017278f141141367f7d14b203e930b45b6ffffb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/472bd4787406bef2e8b41ee4c74d960a06a49a48","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/72775cad7f572bb2501f9ea609e1d20e68f0b38b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d667fe301dcbcb12d1d6494fc4b8abee2cb75d90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fafb51a67fb883eb2dde352539df939a251851be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52763","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.630","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: master: mipi-i3c-hci: Fix a kernel panic for accessing DAT_data.\n\nThe `i3c_master_bus_init` function may attach the I2C devices before the\nI3C bus initialization. In this flow, the DAT `alloc_entry`` will be used\nbefore the DAT `init`. Additionally, if the `i3c_master_bus_init` fails,\nthe DAT `cleanup` will execute before the device is detached, which will\nexecue DAT `free_entry` function. The above scenario can cause the driver\nto use DAT_data when it is NULL."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/39c71357e68e2f03766f9321b9f4882e49ff1442","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cb79a365e7cce8f121bba91312e2ddd206b9781","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b53e9758a31c683fc8615df930262192ed5f034b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e64d23dc65810be4e3395d72df0c398f60c991f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eed74230435c61eeb58abaa275b1820e6a4b7f02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52764","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.700","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: gspca: cpia1: shift-out-of-bounds in set_flicker\n\nSyzkaller reported the following issue:\nUBSAN: shift-out-of-bounds in drivers\/media\/usb\/gspca\/cpia1.c:1031:27\nshift exponent 245 is too large for 32-bit type 'int'\n\nWhen the value of the variable \"sd->params.exposure.gain\" exceeds the\nnumber of bits in an integer, a shift-out-of-bounds error is reported. It\nis triggered because the variable \"currentexp\" cannot be left-shifted by\nmore than the number of bits in an integer. In order to avoid invalid\nrange during left-shift, the conditional expression is added."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/099be1822d1f095433f4b08af9cc9d6308ec1953","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/09cd8b561aa9796903710a1046957f2b112c8f26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2eee8edfff90e22980a6b22079d238c3c9d323bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69bba62600bd91d6b7c1e8ca181faf8ac64f7060","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f83c85ee88225319c52680792320c02158c2a9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/93bddd6529f187f510eec759f37d0569243c9809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a647f27a7426d2fe1b40da7c8fa2b81354a51177","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6b6b8692218da73b33b310d7c1df90f115bdd9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e2d7149b913d14352c82624e723ce1c211ca06d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52765","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.777","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: qcom-spmi-pmic: Fix revid implementation\n\nThe Qualcomm SPMI PMIC revid implementation is broken in multiple ways.\n\nFirst, it assumes that just because the sibling base device has been\nregistered that means that it is also bound to a driver, which may not\nbe the case (e.g. due to probe deferral or asynchronous probe). This\ncould trigger a NULL-pointer dereference when attempting to access the\ndriver data of the unbound device.\n\nSecond, it accesses driver data of a sibling device directly and without\nany locking, which means that the driver data may be freed while it is\nbeing accessed (e.g. on driver unbind).\n\nThird, it leaks a struct device reference to the sibling device which is\nlooked up using the spmi_device_from_of() every time a function (child)\ndevice is calling the revid function (e.g. on probe).\n\nFix this mess by reimplementing the revid lookup so that it is done only\nat probe of the PMIC device; the base device fetches the revid info from\nthe hardware, while any secondary SPMI device fetches the information\nfrom the base device and caches it so that it can be accessed safely\nfrom its children. If the base device has not been probed yet then probe\nof a secondary device is deferred."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4ce77b023d42a9f1062eecf438df1af4b4072eb2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b439aaa62fee474a0d84d67a25f4984467e7b95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/affae18838db5e6b463ee30c821385695af56dc2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db98de0809f12b0edb9cd1be78e1ec1bfeba8f40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52766","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.847","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: mipi-i3c-hci: Fix out of bounds access in hci_dma_irq_handler\n\nDo not loop over ring headers in hci_dma_irq_handler() that are not\nallocated and enabled in hci_dma_init(). Otherwise out of bounds access\nwill occur from rings->headers[i] access when i >= number of allocated\nring headers."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/45a832f989e520095429589d5b01b0c65da9b574","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c86cb2321bd9c72d3b945ce7f747961beda8e65","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c2b91b30d74d7c407118ad72502d4ca28af1af6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8be39f66915b40d26ea2c18ba84b5c3d5da6809b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d23ad76f240c0f597b7a9eb79905d246f27d40df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52767","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.917","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix NULL deref on tls_sw_splice_eof() with empty record\n\nsyzkaller discovered that if tls_sw_splice_eof() is executed as part of\nsendfile() when the plaintext\/ciphertext sk_msg are empty, the send path\ngets confused because the empty ciphertext buffer does not have enough\nspace for the encryption overhead. This causes tls_push_record() to go on\nthe `split = true` path (which is only supposed to be used when interacting\nwith an attached BPF program), and then get further confused and hit the\ntls_merge_open_record() path, which then assumes that there must be at\nleast one populated buffer element, leading to a NULL deref.\n\nIt is possible to have empty plaintext\/ciphertext buffers if we previously\nbailed from tls_sw_sendmsg_locked() via the tls_trim_both_msgs() path.\ntls_sw_push_pending_record() already handles this case correctly; let's do\nthe same check in tls_sw_splice_eof()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2214e2bb5489145aba944874d0ee1652a0a63dc8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53f2cb491b500897a619ff6abd72f565933760f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/944900fe2736c07288efe2d9394db4d3ca23f2c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52768","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:15.983","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wilc1000: use vmm_table as array in wilc struct\n\nEnabling KASAN and running some iperf tests raises some memory issues with\nvmm_table:\n\nBUG: KASAN: slab-out-of-bounds in wilc_wlan_handle_txq+0x6ac\/0xdb4\nWrite of size 4 at addr c3a61540 by task wlan0-tx\/95\n\nKASAN detects that we are writing data beyond range allocated to vmm_table.\nThere is indeed a mismatch between the size passed to allocator in\nwilc_wlan_init, and the range of possible indexes used later: allocation\nsize is missing a multiplication by sizeof(u32)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05ac1a198a63ad66bf5ae8b7321407c102d40ef3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3ce1c2c3999b232258f7aabab311d47dda75605c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b0d6ddb6466d10df878a7787f175a0e4adc3e27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/541b3757fd443a68ed8d25968eae511a8275e7c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6aaf7cd8bdfe245d3c9a8b48fe70c2011965948e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52769","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.140","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix htt mlo-offset event locking\n\nThe ath12k active pdevs are protected by RCU but the htt mlo-offset\nevent handling code calling ath12k_mac_get_ar_by_pdev_id() was not\nmarked as a read-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6afc57ea315e0f660b1f870a681737bb7b71faef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/afd3425bd69610f318403084fe491e24a1357fb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d908ca431e20b0e4bfc5d911d1744910ed779bdb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52770","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.220","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: split initial and dynamic conditions for extent_cache\n\nLet's allocate the extent_cache tree without dynamic conditions to avoid a\nmissing condition causing a panic as below.\n\n # create a file w\/ a compressed flag\n # disable the compression\n # panic while updating extent_cache\n\nF2FS-fs (dm-64): Swapfile: last extent is not aligned to section\nF2FS-fs (dm-64): Swapfile (3) is not align to section: 1) creat(), 2) ioctl(F2FS_IOC_SET_PIN_FILE), 3) fallocate(2097152 * N)\nAdding 124996k swap on .\/swap-file.  Priority:0 extents:2 across:17179494468k\n==================================================================\nBUG: KASAN: null-ptr-deref in instrument_atomic_read_write out\/common\/include\/linux\/instrumented.h:101 [inline]\nBUG: KASAN: null-ptr-deref in atomic_try_cmpxchg_acquire out\/common\/include\/asm-generic\/atomic-instrumented.h:705 [inline]\nBUG: KASAN: null-ptr-deref in queued_write_lock out\/common\/include\/asm-generic\/qrwlock.h:92 [inline]\nBUG: KASAN: null-ptr-deref in __raw_write_lock out\/common\/include\/linux\/rwlock_api_smp.h:211 [inline]\nBUG: KASAN: null-ptr-deref in _raw_write_lock+0x5a\/0x110 out\/common\/kernel\/locking\/spinlock.c:295\nWrite of size 4 at addr 0000000000000030 by task syz-executor154\/3327\n\nCPU: 0 PID: 3327 Comm: syz-executor154 Tainted: G           O      5.10.185 #1\nHardware name: emulation qemu-x86\/qemu-x86, BIOS 2023.01-21885-gb3cc1cd24d 01\/01\/2023\nCall Trace:\n __dump_stack out\/common\/lib\/dump_stack.c:77 [inline]\n dump_stack_lvl+0x17e\/0x1c4 out\/common\/lib\/dump_stack.c:118\n __kasan_report+0x16c\/0x260 out\/common\/mm\/kasan\/report.c:415\n kasan_report+0x51\/0x70 out\/common\/mm\/kasan\/report.c:428\n kasan_check_range+0x2f3\/0x340 out\/common\/mm\/kasan\/generic.c:186\n __kasan_check_write+0x14\/0x20 out\/common\/mm\/kasan\/shadow.c:37\n instrument_atomic_read_write out\/common\/include\/linux\/instrumented.h:101 [inline]\n atomic_try_cmpxchg_acquire out\/common\/include\/asm-generic\/atomic-instrumented.h:705 [inline]\n queued_write_lock out\/common\/include\/asm-generic\/qrwlock.h:92 [inline]\n __raw_write_lock out\/common\/include\/linux\/rwlock_api_smp.h:211 [inline]\n _raw_write_lock+0x5a\/0x110 out\/common\/kernel\/locking\/spinlock.c:295\n __drop_extent_tree+0xdf\/0x2f0 out\/common\/fs\/f2fs\/extent_cache.c:1155\n f2fs_drop_extent_tree+0x17\/0x30 out\/common\/fs\/f2fs\/extent_cache.c:1172\n f2fs_insert_range out\/common\/fs\/f2fs\/file.c:1600 [inline]\n f2fs_fallocate+0x19fd\/0x1f40 out\/common\/fs\/f2fs\/file.c:1764\n vfs_fallocate+0x514\/0x9b0 out\/common\/fs\/open.c:310\n ksys_fallocate out\/common\/fs\/open.c:333 [inline]\n __do_sys_fallocate out\/common\/fs\/open.c:341 [inline]\n __se_sys_fallocate out\/common\/fs\/open.c:339 [inline]\n __x64_sys_fallocate+0xb8\/0x100 out\/common\/fs\/open.c:339\n do_syscall_64+0x35\/0x50 out\/common\/arch\/x86\/entry\/common.c:46"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/9de787139b0258a5dd1f498780c26d76b61d2958","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d83309e7e006cee8afca83523559017c824fbf7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f803982190f0265fd36cf84670aa6daefc2b0768","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52771","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.323","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/port: Fix delete_endpoint() vs parent unregistration race\n\nThe CXL subsystem, at cxl_mem ->probe() time, establishes a lineage of\nports (struct cxl_port objects) between an endpoint and the root of a\nCXL topology. Each port including the endpoint port is attached to the\ncxl_port driver.\n\nGiven that setup, it follows that when either any port in that lineage\ngoes through a cxl_port ->remove() event, or the memdev goes through a\ncxl_mem ->remove() event. The hierarchy below the removed port, or the\nentire hierarchy if the memdev is removed needs to come down.\n\nThe delete_endpoint() callback is careful to check whether it is being\ncalled to tear down the hierarchy, or if it is only being called to\nteardown the memdev because an ancestor port is going through\n->remove().\n\nThat care needs to take the device_lock() of the endpoint's parent.\nWhich requires 2 bugs to be fixed:\n\n1\/ A reference on the parent is needed to prevent use-after-free\n   scenarios like this signature:\n\n    BUG: spinlock bad magic on CPU#0, kworker\/u56:0\/11\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS edk2-20230524-3.fc38 05\/24\/2023\n    Workqueue: cxl_port detach_memdev [cxl_core]\n    RIP: 0010:spin_bug+0x65\/0xa0\n    Call Trace:\n      do_raw_spin_lock+0x69\/0xa0\n     __mutex_lock+0x695\/0xb80\n     delete_endpoint+0xad\/0x150 [cxl_core]\n     devres_release_all+0xb8\/0x110\n     device_unbind_cleanup+0xe\/0x70\n     device_release_driver_internal+0x1d2\/0x210\n     detach_memdev+0x15\/0x20 [cxl_core]\n     process_one_work+0x1e3\/0x4c0\n     worker_thread+0x1dd\/0x3d0\n\n2\/ In the case of RCH topologies, the parent device that needs to be\n   locked is not always @port->dev as returned by cxl_mem_find_port(), use\n   endpoint->dev.parent instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/37179fcc916bce8c3cc7b36d67ef814cce55142b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b2e428e673b3f55965674a426c40922e91388aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8d2ad999ca3c64cb08cf6a58d227b9d9e746d708","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52772","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.390","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\naf_unix: fix use-after-free in unix_stream_read_actor()\n\nsyzbot reported the following crash [1]\n\nAfter releasing unix socket lock, u->oob_skb can be changed\nby another thread. We must temporarily increase skb refcount\nto make sure this other thread will not free the skb under us.\n\n[1]\n\nBUG: KASAN: slab-use-after-free in unix_stream_read_actor+0xa7\/0xc0 net\/unix\/af_unix.c:2866\nRead of size 4 at addr ffff88801f3b9cc4 by task syz-executor107\/5297\n\nCPU: 1 PID: 5297 Comm: syz-executor107 Not tainted 6.6.0-syzkaller-15910-gb8e3a87a627b #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/09\/2023\nCall Trace:\n<TASK>\n__dump_stack lib\/dump_stack.c:88 [inline]\ndump_stack_lvl+0xd9\/0x1b0 lib\/dump_stack.c:106\nprint_address_description mm\/kasan\/report.c:364 [inline]\nprint_report+0xc4\/0x620 mm\/kasan\/report.c:475\nkasan_report+0xda\/0x110 mm\/kasan\/report.c:588\nunix_stream_read_actor+0xa7\/0xc0 net\/unix\/af_unix.c:2866\nunix_stream_recv_urg net\/unix\/af_unix.c:2587 [inline]\nunix_stream_read_generic+0x19a5\/0x2480 net\/unix\/af_unix.c:2666\nunix_stream_recvmsg+0x189\/0x1b0 net\/unix\/af_unix.c:2903\nsock_recvmsg_nosec net\/socket.c:1044 [inline]\nsock_recvmsg+0xe2\/0x170 net\/socket.c:1066\n____sys_recvmsg+0x21f\/0x5c0 net\/socket.c:2803\n___sys_recvmsg+0x115\/0x1a0 net\/socket.c:2845\n__sys_recvmsg+0x114\/0x1e0 net\/socket.c:2875\ndo_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\ndo_syscall_64+0x3f\/0x110 arch\/x86\/entry\/common.c:82\nentry_SYSCALL_64_after_hwframe+0x63\/0x6b\nRIP: 0033:0x7fc67492c559\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 51 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fc6748ab228 EFLAGS: 00000246 ORIG_RAX: 000000000000002f\nRAX: ffffffffffffffda RBX: 000000000000001c RCX: 00007fc67492c559\nRDX: 0000000040010083 RSI: 0000000020000140 RDI: 0000000000000004\nRBP: 00007fc6749b6348 R08: 00007fc6748ab6c0 R09: 00007fc6748ab6c0\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fc6749b6340\nR13: 00007fc6749b634c R14: 00007ffe9fac52a0 R15: 00007ffe9fac5388\n<\/TASK>\n\nAllocated by task 5295:\nkasan_save_stack+0x33\/0x50 mm\/kasan\/common.c:45\nkasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\n__kasan_slab_alloc+0x81\/0x90 mm\/kasan\/common.c:328\nkasan_slab_alloc include\/linux\/kasan.h:188 [inline]\nslab_post_alloc_hook mm\/slab.h:763 [inline]\nslab_alloc_node mm\/slub.c:3478 [inline]\nkmem_cache_alloc_node+0x180\/0x3c0 mm\/slub.c:3523\n__alloc_skb+0x287\/0x330 net\/core\/skbuff.c:641\nalloc_skb include\/linux\/skbuff.h:1286 [inline]\nalloc_skb_with_frags+0xe4\/0x710 net\/core\/skbuff.c:6331\nsock_alloc_send_pskb+0x7e4\/0x970 net\/core\/sock.c:2780\nsock_alloc_send_skb include\/net\/sock.h:1884 [inline]\nqueue_oob net\/unix\/af_unix.c:2147 [inline]\nunix_stream_sendmsg+0xb5f\/0x10a0 net\/unix\/af_unix.c:2301\nsock_sendmsg_nosec net\/socket.c:730 [inline]\n__sock_sendmsg+0xd5\/0x180 net\/socket.c:745\n____sys_sendmsg+0x6ac\/0x940 net\/socket.c:2584\n___sys_sendmsg+0x135\/0x1d0 net\/socket.c:2638\n__sys_sendmsg+0x117\/0x1e0 net\/socket.c:2667\ndo_syscall_x64 arch\/x86\/entry\/common.c:51 [inline]\ndo_syscall_64+0x3f\/0x110 arch\/x86\/entry\/common.c:82\nentry_SYSCALL_64_after_hwframe+0x63\/0x6b\n\nFreed by task 5295:\nkasan_save_stack+0x33\/0x50 mm\/kasan\/common.c:45\nkasan_set_track+0x25\/0x30 mm\/kasan\/common.c:52\nkasan_save_free_info+0x2b\/0x40 mm\/kasan\/generic.c:522\n____kasan_slab_free mm\/kasan\/common.c:236 [inline]\n____kasan_slab_free+0x15b\/0x1b0 mm\/kasan\/common.c:200\nkasan_slab_free include\/linux\/kasan.h:164 [inline]\nslab_free_hook mm\/slub.c:1800 [inline]\nslab_free_freelist_hook+0x114\/0x1e0 mm\/slub.c:1826\nslab_free mm\/slub.c:3809 [inline]\nkmem_cache_free+0xf8\/0x340 mm\/slub.c:3831\nkfree_skbmem+0xef\/0x1b0 net\/core\/skbuff.c:1015\n__kfree_skb net\/core\/skbuff.c:1073 [inline]\nconsume_skb net\/core\/skbuff.c:1288 [inline]\nconsume_skb+0xdf\/0x170 net\/core\/skbuff.c:1282\nqueue_oob net\/unix\/af_unix.c:2178 [inline]\nu\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/069a3ec329ff43e7869a3d94c62cd03203016bce","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4b7b492615cf3017190f55444f7016812b66611d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75bcfc188abf4fae9c1d5f5dc0a03540be602eef","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d179189eec426fe4801e4b91efa1889faed12700","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eae0b295ce16d8c8b4114c3037993191b4bb92f0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52773","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.467","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: fix a NULL pointer dereference in amdgpu_dm_i2c_xfer()\n\nWhen ddc_service_construct() is called, it explicitly checks both the\nlink type and whether there is something on the link which will\ndictate whether the pin is marked as hw_supported.\n\nIf the pin isn't set or the link is not set (such as from\nunloading\/reloading amdgpu in an IGT test) then fail the\namdgpu_dm_i2c_xfer() call."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d07b7e84276777dad3c8cfebdf8e739606f90c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b14cf37b9f01de0b28c6f8960019d4c7883ce42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b71f4ade1b8900d30c661d6c27f87c35214c398c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5c134ca589fe670430acc9e7ebf2691ca2476d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52774","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.537","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ns390\/dasd: protect device queue against concurrent access\n\nIn dasd_profile_start() the amount of requests on the device queue are\ncounted. The access to the device queue is unprotected against\nconcurrent access. With a lot of parallel I\/O, especially with alias\ndevices enabled, the device queue can change while dasd_profile_start()\nis accessing the queue. In the worst case this leads to a kernel panic\ndue to incorrect pointer accesses.\n\nFix this by taking the device lock before accessing the queue and\ncounting the requests. Additionally the check for a valid profile data\npointer can be done earlier to avoid unnecessary locking in a hot path."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6062c527d0403cef27c54b91ac8390c3a497b250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9372aab5d0ff621ea203c8c603e7e5f75e888240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c841de6247e94e07566d57163d3c0d8b29278f7a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/db46cd1e0426f52999d50fa72cfa97fa39952885","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dc96fde8fcb2b896fd6c64802a7f4ece2e69b0be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ebdc569a07a3e8dbe66b4184922ad6f88ac0b96f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1ac7789406e2ca9ac51c41ad2daa597f47bdd4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f75617cc8df4155374132f0b500b0b3ebb967458","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52775","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.610","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/smc: avoid data corruption caused by decline\n\nWe found a data corruption issue during testing of SMC-R on Redis\napplications.\n\nThe benchmark has a low probability of reporting a strange error as\nshown below.\n\n\"Error: Protocol error, got \"\\xe2\" as reply type byte\"\n\nFinally, we found that the retrieved error data was as follows:\n\n0xE2 0xD4 0xC3 0xD9 0x04 0x00 0x2C 0x20 0xA6 0x56 0x00 0x16 0x3E 0x0C\n0xCB 0x04 0x02 0x01 0x00 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00\n0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xE2\n\nIt is quite obvious that this is a SMC DECLINE message, which means that\nthe applications received SMC protocol message.\nWe found that this was caused by the following situations:\n\nclient                  server\n        ¦  clc proposal\n        ------------->\n        ¦  clc accept\n        <-------------\n        ¦  clc confirm\n        ------------->\nwait llc confirm\n\t\t\tsend llc confirm\n        ¦failed llc confirm\n        ¦   x------\n(after 2s)timeout\n                        wait llc confirm rsp\n\nwait decline\n\n(after 1s) timeout\n                        (after 2s) timeout\n        ¦   decline\n        -------------->\n        ¦   decline\n        <--------------\n\nAs a result, a decline message was sent in the implementation, and this\nmessage was read from TCP by the already-fallback connection.\n\nThis patch double the client timeout as 2x of the server value,\nWith this simple change, the Decline messages should never cross or\ncollide (during Confirm link timeout).\n\nThis issue requires an immediate solution, since the protocol updates\ninvolve a more long-term solution."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/5ada292b5c504720a0acef8cae9acc62a694d19c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7234d2b5dffa5af77fd4e0deaebab509e130c6b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90072af9efe8c7bd7d086709014ddd44cebd5e7c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/94a0ae698b4d5d5bb598e23228002a1491c50add","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e6d71b437abc2f249e3b6a1ae1a7228e09c6e563","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52776","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.680","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix dfs-radar and temperature event locking\n\nThe ath12k active pdevs are protected by RCU but the DFS-radar and\ntemperature event handling code calling ath12k_mac_get_ar_by_pdev_id()\nwas not marked as a read-side critical section.\n\nMark the code in question as RCU read-side critical sections to avoid\nany potential use-after-free issues.\n\nNote that the temperature event handler looks like a place holder\ncurrently but would still trigger an RCU lockdep splat.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/69bd216e049349886405b1c87a55dce3d35d1ba7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/774de37c147fea81f2c2e4be5082304f4f71d535","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d7a5f7f76568e48869916d769e28b9f3ca70c78e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52777","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.747","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix gtk offload status event locking\n\nThe ath11k active pdevs are protected by RCU but the gtk offload status\nevent handling code calling ath11k_mac_get_arvif_by_vdev_id() was not\nmarked as a read-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cf7577b6b3153b4b49deea9719fe43f96469c6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1dea3c0720a146bd7193969f2847ccfed5be2221","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf9c7d783a2bf9305df4ef5b93d9063a52e18fca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e83246ecd3b193f8d91fce778e8a5ba747fc7d8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52778","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.817","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: deal with large GSO size\n\nAfter the blamed commit below, the TCP sockets (and the MPTCP subflows)\ncan build egress packets larger than 64K. That exceeds the maximum DSS\ndata size, the length being misrepresent on the wire and the stream being\ncorrupted, as later observed on the receiver:\n\n  WARNING: CPU: 0 PID: 9696 at net\/mptcp\/protocol.c:705 __mptcp_move_skbs_from_subflow+0x2604\/0x26e0\n  CPU: 0 PID: 9696 Comm: syz-executor.7 Not tainted 6.6.0-rc5-gcd8bdf563d46 #45\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04\/01\/2014\n  netlink: 8 bytes leftover after parsing attributes in process `syz-executor.4'.\n  RIP: 0010:__mptcp_move_skbs_from_subflow+0x2604\/0x26e0 net\/mptcp\/protocol.c:705\n  RSP: 0018:ffffc90000006e80 EFLAGS: 00010246\n  RAX: ffffffff83e9f674 RBX: ffff88802f45d870 RCX: ffff888102ad0000\n  netlink: 8 bytes leftover after parsing attributes in process `syz-executor.4'.\n  RDX: 0000000080000303 RSI: 0000000000013908 RDI: 0000000000003908\n  RBP: ffffc90000007110 R08: ffffffff83e9e078 R09: 1ffff1100e548c8a\n  R10: dffffc0000000000 R11: ffffed100e548c8b R12: 0000000000013908\n  R13: dffffc0000000000 R14: 0000000000003908 R15: 000000000031cf29\n  FS:  00007f239c47e700(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 00007f239c45cd78 CR3: 000000006a66c006 CR4: 0000000000770ef0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\n  PKRU: 55555554\n  Call Trace:\n   <IRQ>\n   mptcp_data_ready+0x263\/0xac0 net\/mptcp\/protocol.c:819\n   subflow_data_ready+0x268\/0x6d0 net\/mptcp\/subflow.c:1409\n   tcp_data_queue+0x21a1\/0x7a60 net\/ipv4\/tcp_input.c:5151\n   tcp_rcv_established+0x950\/0x1d90 net\/ipv4\/tcp_input.c:6098\n   tcp_v6_do_rcv+0x554\/0x12f0 net\/ipv6\/tcp_ipv6.c:1483\n   tcp_v6_rcv+0x2e26\/0x3810 net\/ipv6\/tcp_ipv6.c:1749\n   ip6_protocol_deliver_rcu+0xd6b\/0x1ae0 net\/ipv6\/ip6_input.c:438\n   ip6_input+0x1c5\/0x470 net\/ipv6\/ip6_input.c:483\n   ipv6_rcv+0xef\/0x2c0 include\/linux\/netfilter.h:304\n   __netif_receive_skb+0x1ea\/0x6a0 net\/core\/dev.c:5532\n   process_backlog+0x353\/0x660 net\/core\/dev.c:5974\n   __napi_poll+0xc6\/0x5a0 net\/core\/dev.c:6536\n   net_rx_action+0x6a0\/0xfd0 net\/core\/dev.c:6603\n   __do_softirq+0x184\/0x524 kernel\/softirq.c:553\n   do_softirq+0xdd\/0x130 kernel\/softirq.c:454\n\nAddress the issue explicitly bounding the maximum GSO size to what MPTCP\nactually allows."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/342b528c0e849bed9def76dadaa470d3af678e94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57ced2eb77343a91d28f4a73675b05fe7b555def","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70ff9b65a72885b3a2dfde6709da1f19b85fa696","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fce92f050f448a0d1ddd9083ef967d9930f1e52","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52779","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.890","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs: Pass AT_GETATTR_NOSEC flag to getattr interface function\n\nWhen vfs_getattr_nosec() calls a filesystem's getattr interface function\nthen the 'nosec' should propagate into this function so that\nvfs_getattr_nosec() can again be called from the filesystem's gettattr\nrather than vfs_getattr(). The latter would add unnecessary security\nchecks that the initial vfs_getattr_nosec() call wanted to avoid.\nTherefore, introduce the getattr flag GETATTR_NOSEC and allow to pass\nwith the new getattr_flags parameter to the getattr interface function.\nIn overlayfs and ecryptfs use this flag to determine which one of the\ntwo functions to call.\n\nIn a recent code change introduced to IMA vfs_getattr_nosec() ended up\ncalling vfs_getattr() in overlayfs, which in turn called\nsecurity_inode_getattr() on an exiting process that did not have\ncurrent->fs set anymore, which then caused a kernel NULL pointer\ndereference. With this change the call to security_inode_getattr() can\nbe avoided, thus avoiding the NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3fb0fa08641903304b9d81d52a379ff031dc41d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a924db2d7b5eb69ba08b1a0af46e9f1359a9bdf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52780","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:16.957","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvneta: fix calls to page_pool_get_stats\n\nCalling page_pool_get_stats in the mvneta driver without checks\nleads to kernel crashes.\nFirst the page pool is only available if the bm is not used.\nThe page pool is also not allocated when the port is stopped.\nIt can also be not allocated in case of errors.\n\nThe current implementation leads to the following crash calling\nethstats on a port that is down or when calling it at the wrong moment:\n\nble to handle kernel NULL pointer dereference at virtual address 00000070\n[00000070] *pgd=00000000\nInternal error: Oops: 5 [#1] SMP ARM\nHardware name: Marvell Armada 380\/385 (Device Tree)\nPC is at page_pool_get_stats+0x18\/0x1cc\nLR is at mvneta_ethtool_get_stats+0xa0\/0xe0 [mvneta]\npc : [<c0b413cc>]    lr : [<bf0a98d8>]    psr: a0000013\nsp : f1439d48  ip : f1439dc0  fp : 0000001d\nr10: 00000100  r9 : c4816b80  r8 : f0d75150\nr7 : bf0b400c  r6 : c238f000  r5 : 00000000  r4 : f1439d68\nr3 : c2091040  r2 : ffffffd8  r1 : f1439d68  r0 : 00000000\nFlags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 10c5387d  Table: 066b004a  DAC: 00000051\nRegister r0 information: NULL pointer\nRegister r1 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c\/0x390\nRegister r2 information: non-paged memory\nRegister r3 information: slab kmalloc-2k start c2091000 pointer offset 64 size 2048\nRegister r4 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c\/0x390\nRegister r5 information: NULL pointer\nRegister r6 information: slab kmalloc-cg-4k start c238f000 pointer offset 0 size 4096\nRegister r7 information: 15-page vmalloc region starting at 0xbf0a8000 allocated at load_module+0xa30\/0x219c\nRegister r8 information: 1-page vmalloc region starting at 0xf0d75000 allocated at ethtool_get_stats+0x138\/0x208\nRegister r9 information: slab task_struct start c4816b80 pointer offset 0\nRegister r10 information: non-paged memory\nRegister r11 information: non-paged memory\nRegister r12 information: 2-page vmalloc region starting at 0xf1438000 allocated at kernel_clone+0x9c\/0x390\nProcess snmpd (pid: 733, stack limit = 0x38de3a88)\nStack: (0xf1439d48 to 0xf143a000)\n9d40:                   000000c0 00000001 c238f000 bf0b400c f0d75150 c4816b80\n9d60: 00000100 bf0a98d8 00000000 00000000 00000000 00000000 00000000 00000000\n9d80: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9da0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9dc0: 00000dc0 5335509c 00000035 c238f000 bf0b2214 01067f50 f0d75000 c0b9b9c8\n9de0: 0000001d 00000035 c2212094 5335509c c4816b80 c238f000 c5ad6e00 01067f50\n9e00: c1b0be80 c4816b80 00014813 c0b9d7f0 00000000 00000000 0000001d 0000001d\n9e20: 00000000 00001200 00000000 00000000 c216ed90 c73943b8 00000000 00000000\n9e40: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\n9e60: 00000000 c0ad9034 00000000 00000000 00000000 00000000 00000000 00000000\n9e80: 00000000 00000000 00000000 5335509c c1b0be80 f1439ee4 00008946 c1b0be80\n9ea0: 01067f50 f1439ee3 00000000 00000046 b6d77ae0 c0b383f0 00008946 becc83e8\n9ec0: c1b0be80 00000051 0000000b c68ca480 c7172d00 c0ad8ff0 f1439ee3 cf600e40\n9ee0: 01600e40 32687465 00000000 00000000 00000000 01067f50 00000000 00000000\n9f00: 00000000 5335509c 00008946 00008946 00000000 c68ca480 becc83e8 c05e2de0\n9f20: f1439fb0 c03002f0 00000006 5ac3c35a c4816b80 00000006 b6d77ae0 c030caf0\n9f40: c4817350 00000014 f1439e1c 0000000c 00000000 00000051 01000000 00000014\n9f60: 00003fec f1439edc 00000001 c0372abc b6d77ae0 c0372abc cf600e40 5335509c\n9f80: c21e6800 01015c9c 0000000b 00008946 00000036 c03002f0 c4816b80 00000036\n9fa0: b6d77ae0 c03000c0 01015c9c 0000000b 0000000b 00008946 becc83e8 00000000\n9fc0: 01015c9c 0000000b 00008946 00000036 00000035 010678a0 b6d797ec b6d77ae0\n9fe0: b6dbf738 becc838c b6d186d7 b6baa858 40000030 0000000b 00000000 00000000\n page_pool_get_s\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/00768b3e90e648227eaa959d9d279f5e32823df1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/230dc06e2495487d88b3410da055bb618febb19b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2b0e99072654edd601d05c0061a20337af5008ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca8add922f9c7f6e2e3c71039da8e0dcc64b87ed","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52781","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.023","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: config: fix iteration issue in 'usb_get_bos_descriptor()'\n\nThe BOS descriptor defines a root descriptor and is the base descriptor for\naccessing a family of related descriptors.\n\nFunction 'usb_get_bos_descriptor()' encounters an iteration issue when\nskipping the 'USB_DT_DEVICE_CAPABILITY' descriptor type. This results in\nthe same descriptor being read repeatedly.\n\nTo address this issue, a 'goto' statement is introduced to ensure that the\npointer and the amount read is updated correctly. This ensures that the\nfunction iterates to the next descriptor instead of reading the same\ndescriptor repeatedly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64c27b7b2357ddb38b6afebaf46d5bff4d250702","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c0244cc311a4038505b73682b7c8ceaa5c7a8c8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/974bba5c118f4c2baf00de0356e3e4f7928b4cbc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ef94ec8e52eaf7b9abc5b5f8f5b911751112223","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f89fef7710b2ba0f7a1e46594e530dcf2f77be91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52782","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.097","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet\/mlx5e: Track xmit submission to PTP WQ after populating metadata map\n\nEnsure the skb is available in metadata mapping to skbs before tracking the\nmetadata index for detecting undelivered CQEs. If the metadata index is put\nin the tracking list before putting the skb in the map, the metadata index\nmight be used for detecting undelivered CQEs before the relevant skb is\navailable in the map, which can lead to a null-ptr-deref.\n\nLog:\n    general protection fault, probably for non-canonical address 0xdffffc0000000005: 0000 [#1] SMP KASAN\n    KASAN: null-ptr-deref in range [0x0000000000000028-0x000000000000002f]\n    CPU: 0 PID: 1243 Comm: kworker\/0:2 Not tainted 6.6.0-rc4+ #108\n    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04\/01\/2014\n    Workqueue: events mlx5e_rx_dim_work [mlx5_core]\n    RIP: 0010:mlx5e_ptp_napi_poll+0x9a4\/0x2290 [mlx5_core]\n    Code: 8c 24 38 cc ff ff 4c 8d 3c c1 4c 89 f9 48 c1 e9 03 42 80 3c 31 00 0f 85 97 0f 00 00 4d 8b 3f 49 8d 7f 28 48 89 f9 48 c1 e9 03 <42> 80 3c 31 00 0f 85 8b 0f 00 00 49 8b 47 28 48 85 c0 0f 84 05 07\n    RSP: 0018:ffff8884d3c09c88 EFLAGS: 00010206\n    RAX: 0000000000000069 RBX: ffff8881160349d8 RCX: 0000000000000005\n    RDX: ffffed10218f48cf RSI: 0000000000000004 RDI: 0000000000000028\n    RBP: ffff888122707700 R08: 0000000000000001 R09: ffffed109a781383\n    R10: 0000000000000003 R11: 0000000000000003 R12: ffff88810c7a7a40\n    R13: ffff888122707700 R14: dffffc0000000000 R15: 0000000000000000\n    FS:  0000000000000000(0000) GS:ffff8884d3c00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 00007f4f878dd6e0 CR3: 000000014d108002 CR4: 0000000000370eb0\n    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n    Call Trace:\n    <IRQ>\n    ? die_addr+0x3c\/0xa0\n    ? exc_general_protection+0x144\/0x210\n    ? asm_exc_general_protection+0x22\/0x30\n    ? mlx5e_ptp_napi_poll+0x9a4\/0x2290 [mlx5_core]\n    ? mlx5e_ptp_napi_poll+0x8f6\/0x2290 [mlx5_core]\n    __napi_poll.constprop.0+0xa4\/0x580\n    net_rx_action+0x460\/0xb80\n    ? _raw_spin_unlock_irqrestore+0x32\/0x60\n    ? __napi_poll.constprop.0+0x580\/0x580\n    ? tasklet_action_common.isra.0+0x2ef\/0x760\n    __do_softirq+0x26c\/0x827\n    irq_exit_rcu+0xc2\/0x100\n    common_interrupt+0x7f\/0xa0\n    <\/IRQ>\n    <TASK>\n    asm_common_interrupt+0x22\/0x40\n    RIP: 0010:__kmem_cache_alloc_node+0xb\/0x330\n    Code: 41 5d 41 5e 41 5f c3 8b 44 24 14 8b 4c 24 10 09 c8 eb d5 e8 b7 43 ca 01 0f 1f 80 00 00 00 00 0f 1f 44 00 00 55 48 89 e5 41 57 <41> 56 41 89 d6 41 55 41 89 f5 41 54 49 89 fc 53 48 83 e4 f0 48 83\n    RSP: 0018:ffff88812c4079c0 EFLAGS: 00000246\n    RAX: 1ffffffff083c7fe RBX: ffff888100042dc0 RCX: 0000000000000218\n    RDX: 00000000ffffffff RSI: 0000000000000dc0 RDI: ffff888100042dc0\n    RBP: ffff88812c4079c8 R08: ffffffffa0289f96 R09: ffffed1025880ea9\n    R10: ffff888138839f80 R11: 0000000000000002 R12: 0000000000000dc0\n    R13: 0000000000000100 R14: 000000000000008c R15: ffff8881271fc450\n    ? cmd_exec+0x796\/0x2200 [mlx5_core]\n    kmalloc_trace+0x26\/0xc0\n    cmd_exec+0x796\/0x2200 [mlx5_core]\n    mlx5_cmd_do+0x22\/0xc0 [mlx5_core]\n    mlx5_cmd_exec+0x17\/0x30 [mlx5_core]\n    mlx5_core_modify_cq_moderation+0x139\/0x1b0 [mlx5_core]\n    ? mlx5_add_cq_to_tasklet+0x280\/0x280 [mlx5_core]\n    ? lockdep_set_lock_cmp_fn+0x190\/0x190\n    ? process_one_work+0x659\/0x1220\n    mlx5e_rx_dim_work+0x9d\/0x100 [mlx5_core]\n    process_one_work+0x730\/0x1220\n    ? lockdep_hardirqs_on_prepare+0x400\/0x400\n    ? max_active_store+0xf0\/0xf0\n    ? assign_work+0x168\/0x240\n    worker_thread+0x70f\/0x12d0\n    ? __kthread_parkme+0xd1\/0x1d0\n    ? process_one_work+0x1220\/0x1220\n    kthread+0x2d9\/0x3b0\n    ? kthread_complete_and_exit+0x20\/0x20\n    ret_from_fork+0x2d\/0x70\n    ? kthread_complete_and_exit+0x20\/0x20\n    ret_from_fork_as\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4d510506b46504664eacf8a44a9e8f3e54c137b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7e3f3ba97e6cc6fce5bf62df2ca06c8e59040167","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a9d6c0c5a6bd9ca88e964f8843ea41bc085de866","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52783","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.167","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wangxun: fix kernel panic due to null pointer\n\nWhen the device uses a custom subsystem vendor ID, the function\nwx_sw_init() returns before the memory of 'wx->mac_table' is allocated.\nThe null pointer will causes the kernel panic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61a55071653974dab172d4c5d699bb365cfd13c9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ba2c459668cfe2aaacc5ebcd35b4b9ef8643013","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52784","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.233","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: stop the device in bond_setup_by_slave()\n\nCommit 9eed321cde22 (\"net: lapbether: only support ethernet devices\")\nhas been able to keep syzbot away from net\/lapb, until today.\n\nIn the following splat [1], the issue is that a lapbether device has\nbeen created on a bonding device without members. Then adding a non\nARPHRD_ETHER member forced the bonding master to change its type.\n\nThe fix is to make sure we call dev_close() in bond_setup_by_slave()\nso that the potential linked lapbether devices (or any other devices\nhaving assumptions on the physical device) are removed.\n\nA similar bug has been addressed in commit 40baec225765\n(\"bonding: fix panic on non-ARPHRD_ETHER enslave failure\")\n\n[1]\nskbuff: skb_under_panic: text:ffff800089508810 len:44 put:40 head:ffff0000c78e7c00 data:ffff0000c78e7bea tail:0x16 end:0x140 dev:bond0\nkernel BUG at net\/core\/skbuff.c:192 !\nInternal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\nModules linked in:\nCPU: 0 PID: 6007 Comm: syz-executor383 Not tainted 6.6.0-rc3-syzkaller-gbf6547d8715b #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 08\/04\/2023\npstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : skb_panic net\/core\/skbuff.c:188 [inline]\npc : skb_under_panic+0x13c\/0x140 net\/core\/skbuff.c:202\nlr : skb_panic net\/core\/skbuff.c:188 [inline]\nlr : skb_under_panic+0x13c\/0x140 net\/core\/skbuff.c:202\nsp : ffff800096a06aa0\nx29: ffff800096a06ab0 x28: ffff800096a06ba0 x27: dfff800000000000\nx26: ffff0000ce9b9b50 x25: 0000000000000016 x24: ffff0000c78e7bea\nx23: ffff0000c78e7c00 x22: 000000000000002c x21: 0000000000000140\nx20: 0000000000000028 x19: ffff800089508810 x18: ffff800096a06100\nx17: 0000000000000000 x16: ffff80008a629a3c x15: 0000000000000001\nx14: 1fffe00036837a32 x13: 0000000000000000 x12: 0000000000000000\nx11: 0000000000000201 x10: 0000000000000000 x9 : cb50b496c519aa00\nx8 : cb50b496c519aa00 x7 : 0000000000000001 x6 : 0000000000000001\nx5 : ffff800096a063b8 x4 : ffff80008e280f80 x3 : ffff8000805ad11c\nx2 : 0000000000000001 x1 : 0000000100000201 x0 : 0000000000000086\nCall trace:\nskb_panic net\/core\/skbuff.c:188 [inline]\nskb_under_panic+0x13c\/0x140 net\/core\/skbuff.c:202\nskb_push+0xf0\/0x108 net\/core\/skbuff.c:2446\nip6gre_header+0xbc\/0x738 net\/ipv6\/ip6_gre.c:1384\ndev_hard_header include\/linux\/netdevice.h:3136 [inline]\nlapbeth_data_transmit+0x1c4\/0x298 drivers\/net\/wan\/lapbether.c:257\nlapb_data_transmit+0x8c\/0xb0 net\/lapb\/lapb_iface.c:447\nlapb_transmit_buffer+0x178\/0x204 net\/lapb\/lapb_out.c:149\nlapb_send_control+0x220\/0x320 net\/lapb\/lapb_subr.c:251\n__lapb_disconnect_request+0x9c\/0x17c net\/lapb\/lapb_iface.c:326\nlapb_device_event+0x288\/0x4e0 net\/lapb\/lapb_iface.c:492\nnotifier_call_chain+0x1a4\/0x510 kernel\/notifier.c:93\nraw_notifier_call_chain+0x3c\/0x50 kernel\/notifier.c:461\ncall_netdevice_notifiers_info net\/core\/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net\/core\/dev.c:2008 [inline]\ncall_netdevice_notifiers net\/core\/dev.c:2022 [inline]\n__dev_close_many+0x1b8\/0x3c4 net\/core\/dev.c:1508\ndev_close_many+0x1e0\/0x470 net\/core\/dev.c:1559\ndev_close+0x174\/0x250 net\/core\/dev.c:1585\nlapbeth_device_event+0x2e4\/0x958 drivers\/net\/wan\/lapbether.c:466\nnotifier_call_chain+0x1a4\/0x510 kernel\/notifier.c:93\nraw_notifier_call_chain+0x3c\/0x50 kernel\/notifier.c:461\ncall_netdevice_notifiers_info net\/core\/dev.c:1970 [inline]\ncall_netdevice_notifiers_extack net\/core\/dev.c:2008 [inline]\ncall_netdevice_notifiers net\/core\/dev.c:2022 [inline]\n__dev_close_many+0x1b8\/0x3c4 net\/core\/dev.c:1508\ndev_close_many+0x1e0\/0x470 net\/core\/dev.c:1559\ndev_close+0x174\/0x250 net\/core\/dev.c:1585\nbond_enslave+0x2298\/0x30cc drivers\/net\/bonding\/bond_main.c:2332\nbond_do_ioctl+0x268\/0xc64 drivers\/net\/bonding\/bond_main.c:4539\ndev_ifsioc+0x754\/0x9ac\ndev_ioctl+0x4d8\/0xd34 net\/core\/dev_ioctl.c:786\nsock_do_ioctl+0x1d4\/0x2d0 net\/socket.c:1217\nsock_ioctl+0x4e8\/0x834 net\/socket.c:1322\nvfs_ioctl fs\/ioctl.c:51 [inline]\n__do_\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19554aa901b5833787df4417a05ccdebf351b7f4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/396baca6683f415b5bc2b380289387bef1406edc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3cffa2ddc4d3fcf70cde361236f5a614f81a09b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53064e8239dd2ecfefc5634e991f1025abc2ee0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87c49806a37f88eddde3f537c162fd0c2834170c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4f0e605a508f6d7cda6df2f03a0c676b778b1fe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d98c91215a5748a0f536e7ccea26027005196859","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52785","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.330","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: core: Fix racing issue between ufshcd_mcq_abort() and ISR\n\nIf command timeout happens and cq complete IRQ is raised at the same time,\nufshcd_mcq_abort clears lprb->cmd and a NULL pointer deref happens in the\nISR. Error log:\n\nufshcd_abort: Device abort task at tag 18\nUnable to handle kernel NULL pointer dereference at virtual address\n0000000000000108\npc : [0xffffffe27ef867ac] scsi_dma_unmap+0xc\/0x44\nlr : [0xffffffe27f1b898c] ufshcd_release_scsi_cmd+0x24\/0x114"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/27900d7119c464b43cd9eac69c85884d17bae240","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f15a7e3c054d960bbd1521110700450bbf798a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f84d461f33a6b27304d468d9cfb56c0cefdb4ee7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52786","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.413","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix racy may inline data check in dio write\n\nsyzbot reports that the following warning from ext4_iomap_begin()\ntriggers as of the commit referenced below:\n\n        if (WARN_ON_ONCE(ext4_has_inline_data(inode)))\n                return -ERANGE;\n\nThis occurs during a dio write, which is never expected to encounter\nan inode with inline data. To enforce this behavior,\next4_dio_write_iter() checks the current inline state of the inode\nand clears the MAY_INLINE_DATA state flag to either fall back to\nbuffered writes, or enforce that any other writers in progress on\nthe inode are not allowed to create inline data.\n\nThe problem is that the check for existing inline data and the state\nflag can span a lock cycle. For example, if the ilock is originally\nlocked shared and subsequently upgraded to exclusive, another writer\nmay have reacquired the lock and created inline data before the dio\nwrite task acquires the lock and proceeds.\n\nThe commit referenced below loosens the lock requirements to allow\nsome forms of unaligned dio writes to occur under shared lock, but\nAFAICT the inline data check was technically already racy for any\ndio write that would have involved a lock cycle. Regardless, lift\nclearing of the state bit to the same lock critical section that\nchecks for preexisting inline data on the inode to close the race."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/7343c23ebcadbedc23a7063d1e24d976eccb0d0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce56d21355cd6f6937aca32f1f44ca749d1e4808","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3b83d87c93eb6fc96a80b5e8527f7dc9f5a11bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52787","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.500","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: make sure active queue usage is held for bio_integrity_prep()\n\nblk_integrity_unregister() can come if queue usage counter isn't held\nfor one bio with integrity prepared, so this request may be completed with\ncalling profile->complete_fn, then kernel panic.\n\nAnother constraint is that bio_integrity_prep() needs to be called\nbefore bio merge.\n\nFix the issue by:\n\n- call bio_integrity_prep() with one queue usage counter grabbed reliably\n\n- call bio_integrity_prep() before bio merge"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/b0077e269f6c152e807fdac90b58caf012cdbaab","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5c8e0ff76d10f6bf70a7237678f27c20cf59bc9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b80056bd75a16e4550873ecefe12bc8fd190b1cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e9c309ded295b7f8849097d71ae231456ca79f78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52788","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.570","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni915\/perf: Fix NULL deref bugs with drm_dbg() calls\n\nWhen i915 perf interface is not available dereferencing it will lead to\nNULL dereferences.\n\nAs returning -ENOTSUPP is pretty clear return when perf interface is not\navailable.\n\n[tursulin: added stable tag]\n(cherry picked from commit 36f27350ff745bd228ab04d7845dfbffc177a889)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10f49cdfd5fb342a1a9641930dc040c570694e98","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1566e8be73fd5fa424e88d2a4cffdc34f970f0e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/471aa951bf1206d3c10d0daa67005b8e4db4ff83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/55db76caa782baa4a1bf02296e2773c38a524a3e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf8e105030083e7b71591cdf437e464bcd8a0c09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52789","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.637","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: vcc: Add check for kstrdup() in vcc_probe()\n\nAdd check for the return value of kstrdup() and return the error, if it\nfails in order to avoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/38cd56fc9de78bf3c878790785e8c231116ef9d3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/460284dfb10b207980c6f3f7046e33446ceb38ac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a24a31826246b15477399febd13292b0c9f0ee9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4ef41a7f33ffe1a335e7db7e1564ddc6afad47cc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c80f48912b5bd4965352d1a9a989e21743a4a06","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7cebc86481bf16049e266f6774d90f2fd4f8d5d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f8771757b130383732195497e47fba2aba76d3a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/909963e0c16778cec28efb1affc21558825f4200","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d81ffb87aaa75f842cd7aa57091810353755b3e6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52790","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.707","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nswiotlb: fix out-of-bounds TLB allocations with CONFIG_SWIOTLB_DYNAMIC\n\nLimit the free list length to the size of the IO TLB. Transient pool can be\nsmaller than IO_TLB_SEGSIZE, but the free list is initialized with the\nassumption that the total number of slots is a multiple of IO_TLB_SEGSIZE.\nAs a result, swiotlb_area_find_slots() may allocate slots past the end of\na transient IO TLB buffer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/53c87e846e335e3c18044c397cc35178163d7827","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce7612496a4ba6068bc68aa1fa9d947dadb4ad9b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52791","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.777","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: core: Run atomic i2c xfer when !preemptible\n\nSince bae1d3a05a8b, i2c transfers are non-atomic if preemption is\ndisabled. However, non-atomic i2c transfers require preemption (e.g. in\nwait_for_completion() while waiting for the DMA).\n\npanic() calls preempt_disable_notrace() before calling\nemergency_restart(). Therefore, if an i2c device is used for the\nrestart, the xfer should be atomic. This avoids warnings like:\n\n[   12.667612] WARNING: CPU: 1 PID: 1 at kernel\/rcu\/tree_plugin.h:318 rcu_note_context_switch+0x33c\/0x6b0\n[   12.676926] Voluntary context switch within RCU read-side critical section!\n...\n[   12.742376]  schedule_timeout from wait_for_completion_timeout+0x90\/0x114\n[   12.749179]  wait_for_completion_timeout from tegra_i2c_wait_completion+0x40\/0x70\n...\n[   12.994527]  atomic_notifier_call_chain from machine_restart+0x34\/0x58\n[   13.001050]  machine_restart from panic+0x2a8\/0x32c\n\nUse !preemptible() instead, which is basically the same check as\npre-v5.2."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/185f3617adc8fe45e40489b458f03911f0dec46c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25284c46b657f48c0f3880a2e0706c70d81182c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25eb381a736e7ae39a4245ef5c96484eb1073809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3473cf43b9068b9dfef2f545f833f33c6a544b91","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c3fa52a46ff4d208cefb1a462ec94e0043a91e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa49c90894d06e18a1ee7c095edbd2f37c232d02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6237afabc349c1c7909db00e15d2816519e0d2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52792","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.857","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/region: Do not try to cleanup after cxl_region_setup_targets() fails\n\nCommit 5e42bcbc3fef (\"cxl\/region: decrement ->nr_targets on error in\ncxl_region_attach()\") tried to avoid 'eiw' initialization errors when\n->nr_targets exceeded 16, by just decrementing ->nr_targets when\ncxl_region_setup_targets() failed.\n\nCommit 86987c766276 (\"cxl\/region: Cleanup target list on attach error\")\nextended that cleanup to also clear cxled->pos and p->targets[pos]. The\ninitialization error was incidentally fixed separately by:\nCommit 8d4285425714 (\"cxl\/region: Fix port setup uninitialized variable\nwarnings\") which was merged a few days after 5e42bcbc3fef.\n\nBut now the original cleanup when cxl_region_setup_targets() fails\nprevents endpoint and switch decoder resources from being reused:\n\n1) the cleanup does not set the decoder's region to NULL, which results\n   in future dpa_size_store() calls returning -EBUSY\n2) the decoder is not properly freed, which results in future commit\n   errors associated with the upstream switch\n\nNow that the initialization errors were fixed separately, the proper\ncleanup for this case is to just return immediately. Then the resources\nassociated with this target get cleanup up as normal when the failed\nregion is deleted.\n\nThe ->nr_targets decrement in the error case also helped prevent\na p->targets[] array overflow, so add a new check to prevent against\nthat overflow.\n\nTested by trying to create an invalid region for a 2 switch * 2 endpoint\ntopology, and then following up with creating a valid region."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0718588c7aaa7a1510b4de972370535b61dddd0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/07ffcd8ec79cf7383e1e45815f4842fd357991c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9090c5537c93cd0811ab7bfbd925b57addfffb60","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/90db4c1d5ebaf574d3c3065c055977982c378a83","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52793","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:17.927","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsamples\/bpf: syscall_tp_user: Fix array out-of-bound access\n\nCommit 06744f24696e (\"samples\/bpf: Add openat2() enter\/exit tracepoint\nto syscall_tp sample\") added two more eBPF programs to support the\nopenat2() syscall. However, it did not increase the size of the array\nthat holds the corresponding bpf_links. This leads to an out-of-bound\naccess on that array in the bpf_object__for_each_program loop and could\ncorrupt other variables on the stack. On our testing QEMU, it corrupts\nthe map1_fds array and causes the sample to fail:\n\n  # .\/syscall_tp\n  prog #0: map ids 4 5\n  verify map:4 val: 5\n  map_lookup failed: Bad file descriptor\n\nDynamically allocate the array based on the number of programs reported\nby libbpf to prevent similar inconsistencies in the future"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61576b7a0f28f924da06bead92a39a6d9aa2404a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9220c3ef6fefbf18f24aeedb1142a642b3de0596","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de4825a444560f8cb78b03dda3ba873fab88bc4f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52794","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.000","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: intel: powerclamp: fix mismatch in get function for max_idle\n\nKASAN reported this\n\n      [ 444.853098] BUG: KASAN: global-out-of-bounds in param_get_int+0x77\/0x90\n      [ 444.853111] Read of size 4 at addr ffffffffc16c9220 by task cat\/2105\n      ...\n      [ 444.853442] The buggy address belongs to the variable:\n      [ 444.853443] max_idle+0x0\/0xffffffffffffcde0 [intel_powerclamp]\n\nThere is a mismatch between the param_get_int and the definition of\nmax_idle.  Replacing param_get_int with param_get_byte resolves this\nissue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a8585281b11e3a0723bba8d8085d61f0b55f37c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6a3866dbdcf39ac93e98708e6abced511733dc18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fae633cfb729da2771b5433f6b84ae7e8b4aa5f7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52795","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.073","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvhost-vdpa: fix use after free in vhost_vdpa_probe()\n\nThe put_device() calls vhost_vdpa_release_dev() which calls\nida_simple_remove() and frees \"v\".  So this call to\nida_simple_remove() is a use after free and a double free."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/ae8ea4e200675a940c365b496ef8e3fb4123601c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf04132cd64ccde4e9e9765d489c83fe83c09b7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c0f8b8fb7df9d1a38652eb5aa817afccd3c56111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e07754e0a1ea2d63fb29574253d1fd7405607343","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52796","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.157","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nipvlan: add ipvlan_route_v6_outbound() helper\n\nInspired by syzbot reports using a stack of multiple ipvlan devices.\n\nReduce stack size needed in ipvlan_process_v6_outbound() by moving\nthe flowi6 struct used for the route lookup in an non inlined\nhelper. ipvlan_route_v6_outbound() needs 120 bytes on the stack,\nimmediately reclaimed.\n\nAlso make sure ipvlan_process_v4_outbound() is not inlined.\n\nWe might also have to lower MAX_NEST_DEV, because only syzbot uses\nsetups with more than four stacked devices.\n\nBUG: TASK stack guard page was hit at ffffc9000e803ff8 (stack is ffffc9000e804000..ffffc9000e808000)\nstack guard page: 0000 [#1] SMP KASAN\nCPU: 0 PID: 13442 Comm: syz-executor.4 Not tainted 6.1.52-syzkaller #0\nHardware name: Google Google Compute Engine\/Google Compute Engine, BIOS Google 10\/09\/2023\nRIP: 0010:kasan_check_range+0x4\/0x2a0 mm\/kasan\/generic.c:188\nCode: 48 01 c6 48 89 c7 e8 db 4e c1 03 31 c0 5d c3 cc 0f 0b eb 02 0f 0b b8 ea ff ff ff 5d c3 cc 00 00 cc cc 00 00 cc cc 55 48 89 e5 <41> 57 41 56 41 55 41 54 53 b0 01 48 85 f6 0f 84 a4 01 00 00 48 89\nRSP: 0018:ffffc9000e804000 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff817e5bf2\nRDX: 0000000000000000 RSI: 0000000000000008 RDI: ffffffff887c6568\nRBP: ffffc9000e804000 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: dffffc0000000001 R12: 1ffff92001d0080c\nR13: dffffc0000000000 R14: ffffffff87e6b100 R15: 0000000000000000\nFS: 00007fd0c55826c0(0000) GS:ffff8881f6800000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: ffffc9000e803ff8 CR3: 0000000170ef7000 CR4: 00000000003506f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n<#DF>\n<\/#DF>\n<TASK>\n[<ffffffff81f281d1>] __kasan_check_read+0x11\/0x20 mm\/kasan\/shadow.c:31\n[<ffffffff817e5bf2>] instrument_atomic_read include\/linux\/instrumented.h:72 [inline]\n[<ffffffff817e5bf2>] _test_bit include\/asm-generic\/bitops\/instrumented-non-atomic.h:141 [inline]\n[<ffffffff817e5bf2>] cpumask_test_cpu include\/linux\/cpumask.h:506 [inline]\n[<ffffffff817e5bf2>] cpu_online include\/linux\/cpumask.h:1092 [inline]\n[<ffffffff817e5bf2>] trace_lock_acquire include\/trace\/events\/lock.h:24 [inline]\n[<ffffffff817e5bf2>] lock_acquire+0xe2\/0x590 kernel\/locking\/lockdep.c:5632\n[<ffffffff8563221e>] rcu_lock_acquire+0x2e\/0x40 include\/linux\/rcupdate.h:306\n[<ffffffff8561464d>] rcu_read_lock include\/linux\/rcupdate.h:747 [inline]\n[<ffffffff8561464d>] ip6_pol_route+0x15d\/0x1440 net\/ipv6\/route.c:2221\n[<ffffffff85618120>] ip6_pol_route_output+0x50\/0x80 net\/ipv6\/route.c:2606\n[<ffffffff856f65b5>] pol_lookup_func include\/net\/ip6_fib.h:584 [inline]\n[<ffffffff856f65b5>] fib6_rule_lookup+0x265\/0x620 net\/ipv6\/fib6_rules.c:116\n[<ffffffff85618009>] ip6_route_output_flags_noref+0x2d9\/0x3a0 net\/ipv6\/route.c:2638\n[<ffffffff8561821a>] ip6_route_output_flags+0xca\/0x340 net\/ipv6\/route.c:2651\n[<ffffffff838bd5a3>] ip6_route_output include\/net\/ip6_route.h:100 [inline]\n[<ffffffff838bd5a3>] ipvlan_process_v6_outbound drivers\/net\/ipvlan\/ipvlan_core.c:473 [inline]\n[<ffffffff838bd5a3>] ipvlan_process_outbound drivers\/net\/ipvlan\/ipvlan_core.c:529 [inline]\n[<ffffffff838bd5a3>] ipvlan_xmit_mode_l3 drivers\/net\/ipvlan\/ipvlan_core.c:602 [inline]\n[<ffffffff838bd5a3>] ipvlan_queue_xmit+0xc33\/0x1be0 drivers\/net\/ipvlan\/ipvlan_core.c:677\n[<ffffffff838c2909>] ipvlan_start_xmit+0x49\/0x100 drivers\/net\/ipvlan\/ipvlan_main.c:229\n[<ffffffff84d03900>] netdev_start_xmit include\/linux\/netdevice.h:4966 [inline]\n[<ffffffff84d03900>] xmit_one net\/core\/dev.c:3644 [inline]\n[<ffffffff84d03900>] dev_hard_start_xmit+0x320\/0x980 net\/core\/dev.c:3660\n[<ffffffff84d080e2>] __dev_queue_xmit+0x16b2\/0x3370 net\/core\/dev.c:4324\n[<ffffffff855ce4cd>] dev_queue_xmit include\/linux\/netdevice.h:3067 [inline]\n[<ffffffff855ce4cd>] neigh_hh_output include\/net\/neighbour.h:529 [inline]\n[<f\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03cddc4df8c6be47fd27c8f8b87e5f9a989e1458","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/18f039428c7df183b09c69ebf10ffd4e521035d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1f64cad3ac38ac5978b53c40e6c5e6fd3477c68f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43b781e7cb5cd0b435de276111953bf2bacd1f02","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4d2d30f0792b47908af64c4d02ed1ee25ff50542","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f7f850611aa27aaaf1bf5687702ad2240ae442a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/732a67ca436887b594ebc43bb5a04ffb0971a760","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8872dc638c24bb774cd2224a69d72a7f661a4d56","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52797","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.230","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: perf: Check find_first_bit() return value\n\nWe must check the return value of find_first_bit() before using the\nreturn value as an index array since it happens to overflow the array\nand then panic:\n\n[  107.318430] Kernel BUG [#1]\n[  107.319434] CPU: 3 PID: 1238 Comm: kill Tainted: G            E      6.6.0-rc6ubuntu-defconfig #2\n[  107.319465] Hardware name: riscv-virtio,qemu (DT)\n[  107.319551] epc : pmu_sbi_ovf_handler+0x3a4\/0x3ae\n[  107.319840]  ra : pmu_sbi_ovf_handler+0x52\/0x3ae\n[  107.319868] epc : ffffffff80a0a77c ra : ffffffff80a0a42a sp : ffffaf83fecda350\n[  107.319884]  gp : ffffffff823961a8 tp : ffffaf8083db1dc0 t0 : ffffaf83fecda480\n[  107.319899]  t1 : ffffffff80cafe62 t2 : 000000000000ff00 s0 : ffffaf83fecda520\n[  107.319921]  s1 : ffffaf83fecda380 a0 : 00000018fca29df0 a1 : ffffffffffffffff\n[  107.319936]  a2 : 0000000001073734 a3 : 0000000000000004 a4 : 0000000000000000\n[  107.319951]  a5 : 0000000000000040 a6 : 000000001d1c8774 a7 : 0000000000504d55\n[  107.319965]  s2 : ffffffff82451f10 s3 : ffffffff82724e70 s4 : 000000000000003f\n[  107.319980]  s5 : 0000000000000011 s6 : ffffaf8083db27c0 s7 : 0000000000000000\n[  107.319995]  s8 : 0000000000000001 s9 : 00007fffb45d6558 s10: 00007fffb45d81a0\n[  107.320009]  s11: ffffaf7ffff60000 t3 : 0000000000000004 t4 : 0000000000000000\n[  107.320023]  t5 : ffffaf7f80000000 t6 : ffffaf8000000000\n[  107.320037] status: 0000000200000100 badaddr: 0000000000000000 cause: 0000000000000003\n[  107.320081] [<ffffffff80a0a77c>] pmu_sbi_ovf_handler+0x3a4\/0x3ae\n[  107.320112] [<ffffffff800b42d0>] handle_percpu_devid_irq+0x9e\/0x1a0\n[  107.320131] [<ffffffff800ad92c>] generic_handle_domain_irq+0x28\/0x36\n[  107.320148] [<ffffffff8065f9f8>] riscv_intc_irq+0x36\/0x4e\n[  107.320166] [<ffffffff80caf4a0>] handle_riscv_irq+0x54\/0x86\n[  107.320189] [<ffffffff80cb0036>] do_irq+0x64\/0x96\n[  107.320271] Code: 85a6 855e b097 ff7f 80e7 9220 b709 9002 4501 bbd9 (9002) 6097\n[  107.320585] ---[ end trace 0000000000000000 ]---\n[  107.320704] Kernel panic - not syncing: Fatal exception in interrupt\n[  107.320775] SMP: stopping secondary CPUs\n[  107.321219] Kernel Offset: 0x0 from 0xffffffff80000000\n[  107.333051] ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c86b24095fcf72cf51bc72d12e4350163b4e11d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/45a0de41ec383c8b7c6d442734ba3852dd2fc4a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6e316ac05532febb0c966fa9b55f5258ed037be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52798","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.370","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix dfs radar event locking\n\nThe ath11k active pdevs are protected by RCU but the DFS radar event\nhandling code calling ath11k_mac_get_ar_by_pdev_id() was not marked as a\nread-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fd878e1750190a612b5de2af357cca422ec0822","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21ebb0aba580d347e12f01ce5f6e75044427b3d5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3b6c14833165f689cc5928574ebafe52bbce5f1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/426e718ce9ba60013364a54233feee309356cb82","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca420ac4f9451f22347bae44b18ab47ba2c267ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f882f51905517575c9f793a3dff567af90ef9a10","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52799","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.443","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in dbFindLeaf\n\nCurrently while searching for dmtree_t for sufficient free blocks there\nis an array out of bounds while getting element in tp->dm_stree. To add\nthe required check for out of bound we first need to determine the type\nof dmtree. Thus added an extra parameter to dbFindLeaf so that the type\nof tree can be determined and the required check can be applied."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/20f9310a18e3e99fc031e036fcbed67105ae1859","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22cad8bc1d36547cdae0eef316c47d917ce3147c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81aa58cd8495b8c3b527f58ccbe19478d8087f61","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86df90f3fea7c5591f05c8a0010871d435e83046","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87c681ab49e99039ff2dd3e71852417381b13878","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88b7894a8f8705bf4e7ea90b10229376abf14514","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a50b796d36719757526ee094c703378895ab5e67","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da3da5e1e6f71c21d8e6149d7076d936ef5d4cb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ecfb47f13b08b02cf28b7b50d4941eefa21954d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52800","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.523","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix htt pktlog locking\n\nThe ath11k active pdevs are protected by RCU but the htt pktlog handling\ncode calling ath11k_mac_get_ar_by_pdev_id() was not marked as a\nread-side critical section.\n\nMark the code in question as an RCU read-side critical section to avoid\nany potential use-after-free issues.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/03ed26935bebf6b6fd8a656490bf3dcc71b72679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a51e6b4da71fdfa43ec006d6abc020f3e22d14e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f77c7d605b29df277d77e9ee75d96e7ad145d2d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/423762f021825b5e57c3d6f01ff96a9ff19cdcd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/69cede2a5a5f60e3f5602b901b52cb64edd2ea6c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3199b3fac65c9f103055390b6fd07c5cffa5961","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52801","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.603","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niommufd: Fix missing update of domains_itree after splitting iopt_area\n\nIn iopt_area_split(), if the original iopt_area has filled a domain and is\nlinked to domains_itree, pages_nodes have to be properly\nreinserted. Otherwise the domains_itree becomes corrupted and we will UAF."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/836db2e7e4565d8218923b3552304a1637e2f28d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7250ab7ca4998fe026f2149805b03e09dc32498","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcb32111f01ddf3cbd04644cde1773428e31de6a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52802","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.680","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Undergoing Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\niio: adc: stm32-adc: harden against NULL pointer deref in stm32_adc_probe()\n\nof_match_device() may fail and returns a NULL pointer.\n\nIn practice there is no known reasonable way to trigger this, but\nin case one is added in future, harden the code by adding the check"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3a23b384e7e3d64d5587ad10729a34d4f761517e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b82e4240533bcd4691e50b64ec86d0d7fbd21b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b028f89c56e964a22d3ddb8eab1a0e7e980841b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b80aaff5f7817d50798ac61ed75973f004dd5202","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52803","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.753","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nSUNRPC: Fix RPC client cleaned up the freed pipefs dentries\n\nRPC client pipefs dentries cleanup is in separated rpc_remove_pipedir()\nworkqueue,which takes care about pipefs superblock locking.\nIn some special scenarios, when kernel frees the pipefs sb of the\ncurrent client and immediately alloctes a new pipefs sb,\nrpc_remove_pipedir function would misjudge the existence of pipefs\nsb which is not the one it used to hold. As a result,\nthe rpc_remove_pipedir would clean the released freed pipefs dentries.\n\nTo fix this issue, rpc_remove_pipedir should check whether the\ncurrent pipefs sb is consistent with the original pipefs sb.\n\nThis error can be catched by KASAN:\n=========================================================\n[  250.497700] BUG: KASAN: slab-use-after-free in dget_parent+0x195\/0x200\n[  250.498315] Read of size 4 at addr ffff88800a2ab804 by task kworker\/0:18\/106503\n[  250.500549] Workqueue: events rpc_free_client_work\n[  250.501001] Call Trace:\n[  250.502880]  kasan_report+0xb6\/0xf0\n[  250.503209]  ? dget_parent+0x195\/0x200\n[  250.503561]  dget_parent+0x195\/0x200\n[  250.503897]  ? __pfx_rpc_clntdir_depopulate+0x10\/0x10\n[  250.504384]  rpc_rmdir_depopulate+0x1b\/0x90\n[  250.504781]  rpc_remove_client_dir+0xf5\/0x150\n[  250.505195]  rpc_free_client_work+0xe4\/0x230\n[  250.505598]  process_one_work+0x8ee\/0x13b0\n...\n[   22.039056] Allocated by task 244:\n[   22.039390]  kasan_save_stack+0x22\/0x50\n[   22.039758]  kasan_set_track+0x25\/0x30\n[   22.040109]  __kasan_slab_alloc+0x59\/0x70\n[   22.040487]  kmem_cache_alloc_lru+0xf0\/0x240\n[   22.040889]  __d_alloc+0x31\/0x8e0\n[   22.041207]  d_alloc+0x44\/0x1f0\n[   22.041514]  __rpc_lookup_create_exclusive+0x11c\/0x140\n[   22.041987]  rpc_mkdir_populate.constprop.0+0x5f\/0x110\n[   22.042459]  rpc_create_client_dir+0x34\/0x150\n[   22.042874]  rpc_setup_pipedir_sb+0x102\/0x1c0\n[   22.043284]  rpc_client_register+0x136\/0x4e0\n[   22.043689]  rpc_new_client+0x911\/0x1020\n[   22.044057]  rpc_create_xprt+0xcb\/0x370\n[   22.044417]  rpc_create+0x36b\/0x6c0\n...\n[   22.049524] Freed by task 0:\n[   22.049803]  kasan_save_stack+0x22\/0x50\n[   22.050165]  kasan_set_track+0x25\/0x30\n[   22.050520]  kasan_save_free_info+0x2b\/0x50\n[   22.050921]  __kasan_slab_free+0x10e\/0x1a0\n[   22.051306]  kmem_cache_free+0xa5\/0x390\n[   22.051667]  rcu_core+0x62c\/0x1930\n[   22.051995]  __do_softirq+0x165\/0x52a\n[   22.052347]\n[   22.052503] Last potentially related work creation:\n[   22.052952]  kasan_save_stack+0x22\/0x50\n[   22.053313]  __kasan_record_aux_stack+0x8e\/0xa0\n[   22.053739]  __call_rcu_common.constprop.0+0x6b\/0x8b0\n[   22.054209]  dentry_free+0xb2\/0x140\n[   22.054540]  __dentry_kill+0x3be\/0x540\n[   22.054900]  shrink_dentry_list+0x199\/0x510\n[   22.055293]  shrink_dcache_parent+0x190\/0x240\n[   22.055703]  do_one_tree+0x11\/0x40\n[   22.056028]  shrink_dcache_for_umount+0x61\/0x140\n[   22.056461]  generic_shutdown_super+0x70\/0x590\n[   22.056879]  kill_anon_super+0x3a\/0x60\n[   22.057234]  rpc_kill_sb+0x121\/0x200"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/194454afa6aa9d6ed74f0c57127bc8beb27c20df","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1cdb52ffd6600a37bd355d8dce58ecd03e55e618","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7749fd2dbef72a52b5c9ffdbf877691950ed4680","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bfca5fb4e97c46503ddfc582335917b0cc228264","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc2e7ebbeb1d0601f7f3c8d93b78fcc03a95e44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dedf2a0eb9448ae73b270743e6ea9b108189df46","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52804","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.820","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/jfs: Add validity check for db_maxag and db_agpref\n\nBoth db_maxag and db_agpref are used as the index of the\ndb_agfree array, but there is currently no validity check for\ndb_maxag and db_agpref, which can lead to errors.\n\nThe following is related bug reported by Syzbot:\n\nUBSAN: array-index-out-of-bounds in fs\/jfs\/jfs_dmap.c:639:20\nindex 7936 is out of range for type 'atomic_t[128]'\n\nAdd checking that the values of db_maxag and db_agpref are valid\nindexes for the db_agfree array."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f74d336990f37703a8eee77153463d65b67f70e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2323de34a3ae61a9f9b544c18583f71cea86721f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/32bd8f1cbcf8b663e29dd1f908ba3a129541a11b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5013f8269887642cca784adc8db9b5f0b771533f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64933ab7b04881c6c18b21ff206c12278341c72e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a0649e2dd4a3595b5595a29d0064d047c2fae2fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c6c8863fb3f57700ab583d875adda04caaf2278a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce15b0f1a431168f07b1cc6c9f71206a2db5c809","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dca403bb035a565bb98ecc1dda5d30f676feda40","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52805","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.890","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix array-index-out-of-bounds in diAlloc\n\nCurrently there is not check against the agno of the iag while\nallocating new inodes to avoid fragmentation problem. Added the check\nwhich is required."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/05d9ea1ceb62a55af6727a69269a4fd310edf483","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1708d0a9917fea579cc9da3d87b154285abd2cd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1ba7df5457dc1c1071c5f92ac11323533a6430e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2308d0fb0dc32446b4e6ca37cd09c30374bb64e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f062baf202b82f54987a3f614a6c8f3e466641","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/665b44e55c2767a4f899c3b18f49e9e1c9983777","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7467ca10a5ff09b0e87edf6c4d2a4bfdee69cf2c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c68af2af697ba2ba3b138be0c6d72e2ce3a3d6d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf7e3e84df36a9953796c737f080712f631d7083","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52806","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:18.963","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: hda: Fix possible null-ptr-deref when assigning a stream\n\nWhile AudioDSP drivers assign streams exclusively of HOST or LINK type,\nnothing blocks a user to attempt to assign a COUPLED stream. As\nsupplied substream instance may be a stub, what is the case when\ncode-loading, such scenario ends with null-ptr-deref."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2527775616f3638f4fd54649eba8c7b84d5e4250","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/25354bae4fc310c3928e8a42fda2d486f67745d7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/43b91df291c8802268ab3cfd8fccfdf135800ed4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4a320da7f7cbdab2098b103c47f45d5061f42edd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/631a96e9eb4228ff75fce7e72d133ca81194797e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/758c7733cb821041f5fd403b7b97c0b95d319323","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7de25112de8222fd20564769e6c99dc9f9738a0b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f93dc90c2e8ed664985e366aa6459ac83cdab236","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fe7c1a0c2b25c82807cb46fc3aadbf2664a682b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52807","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.033","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnet: hns3: fix out-of-bounds access may occur when coalesce info is read via debugfs\n\nThe hns3 driver define an array of string to show the coalesce\ninfo, but if the kernel adds a new mode or a new state,\nout-of-bounds access may occur when coalesce info is read via\ndebugfs, this patch fix the problem."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/07f5b8c47152cadbd9102e053dcb60685820aa09","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53aba458f23846112c0d44239580ff59bc5c36c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be1f703f39efa27b7371b9a4cd983317f1366792","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f79d985c69060047426be68b7e4c1663d5d731b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52808","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.113","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: hisi_sas: Set debugfs_dir pointer to NULL after removing debugfs\n\nIf init debugfs failed during device registration due to memory allocation\nfailure, debugfs_remove_recursive() is called, after which debugfs_dir is\nnot set to NULL. debugfs_remove_recursive() will be called again during\ndevice removal. As a result, illegal pointer is accessed.\n\n[ 1665.467244] hisi_sas_v3_hw 0000:b4:02.0: failed to init debugfs!\n...\n[ 1669.836708] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000a0\n[ 1669.872669] pc : down_write+0x24\/0x70\n[ 1669.876315] lr : down_write+0x1c\/0x70\n[ 1669.879961] sp : ffff000036f53a30\n[ 1669.883260] x29: ffff000036f53a30 x28: ffffa027c31549f8\n[ 1669.888547] x27: ffffa027c3140000 x26: 0000000000000000\n[ 1669.893834] x25: ffffa027bf37c270 x24: ffffa027bf37c270\n[ 1669.899122] x23: ffff0000095406b8 x22: ffff0000095406a8\n[ 1669.904408] x21: 0000000000000000 x20: ffffa027bf37c310\n[ 1669.909695] x19: 00000000000000a0 x18: ffff8027dcd86f10\n[ 1669.914982] x17: 0000000000000000 x16: 0000000000000000\n[ 1669.920268] x15: 0000000000000000 x14: ffffa0274014f870\n[ 1669.925555] x13: 0000000000000040 x12: 0000000000000228\n[ 1669.930842] x11: 0000000000000020 x10: 0000000000000bb0\n[ 1669.936129] x9 : ffff000036f537f0 x8 : ffff80273088ca10\n[ 1669.941416] x7 : 000000000000001d x6 : 00000000ffffffff\n[ 1669.946702] x5 : ffff000008a36310 x4 : ffff80273088be00\n[ 1669.951989] x3 : ffff000009513e90 x2 : 0000000000000000\n[ 1669.957276] x1 : 00000000000000a0 x0 : ffffffff00000001\n[ 1669.962563] Call trace:\n[ 1669.965000]  down_write+0x24\/0x70\n[ 1669.968301]  debugfs_remove_recursive+0x5c\/0x1b0\n[ 1669.972905]  hisi_sas_debugfs_exit+0x24\/0x30 [hisi_sas_main]\n[ 1669.978541]  hisi_sas_v3_remove+0x130\/0x150 [hisi_sas_v3_hw]\n[ 1669.984175]  pci_device_remove+0x48\/0xd8\n[ 1669.988082]  device_release_driver_internal+0x1b4\/0x250\n[ 1669.993282]  device_release_driver+0x28\/0x38\n[ 1669.997534]  pci_stop_bus_device+0x84\/0xb8\n[ 1670.001611]  pci_stop_and_remove_bus_device_locked+0x24\/0x40\n[ 1670.007244]  remove_store+0xfc\/0x140\n[ 1670.010802]  dev_attr_store+0x44\/0x60\n[ 1670.014448]  sysfs_kf_write+0x58\/0x80\n[ 1670.018095]  kernfs_fop_write+0xe8\/0x1f0\n[ 1670.022000]  __vfs_write+0x60\/0x190\n[ 1670.025472]  vfs_write+0xac\/0x1c0\n[ 1670.028771]  ksys_write+0x6c\/0xd8\n[ 1670.032071]  __arm64_sys_write+0x24\/0x30\n[ 1670.035977]  el0_svc_common+0x78\/0x130\n[ 1670.039710]  el0_svc_handler+0x38\/0x78\n[ 1670.043442]  el0_svc+0x8\/0xc\n\nTo fix this, set debugfs_dir to NULL after debugfs_remove_recursive()."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33331b265aac9441ac0c1a5442e3f05d038240ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6de426f9276c448e2db7238911c97fb157cb23be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75a2656260fe8c7eeabda6ff4600b29e183f48db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b4465009e7d60c6111946db4c8f1e50d401ed7be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0bfc8a5561fb0b2c48183dcbfe00bdd6d973bd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52809","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.197","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: libfc: Fix potential NULL pointer dereference in fc_lport_ptp_setup()\n\nfc_lport_ptp_setup() did not check the return value of fc_rport_create()\nwhich can return NULL and would cause a NULL pointer dereference. Address\nthis issue by checking return value of fc_rport_create() and log error\nmessage on fc_rport_create() failed."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/442fd24d7b6b29e4a9cd9225afba4142d5f522ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4df105f0ce9f6f30cda4e99f577150d23f0c9c5f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56d78b5495ebecbb9395101f3be177cd0a52450b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b9ecf4e1032e645873933e5b43cbb84cac19106","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77072ec41d6ab3718c3fc639bc149b8037caedfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/930f0aaba4820d6362de4e6ed569eaf444f1ea4e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b549acf999824d4f751ca57965700372f2f3ad00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb83f79f90e92f46466adcfd4fd264a7ae0f0f01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6fe7261b92b21109678747f36df9fdab1e30c34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52810","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.270","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfs\/jfs: Add check for negative db_l2nbperpage\n\nl2nbperpage is log2(number of blks per page), and the minimum legal\nvalue should be 0, not negative.\n\nIn the case of l2nbperpage being negative, an error will occur\nwhen subsequently used as shift exponent.\n\nSyzbot reported this bug:\n\nUBSAN: shift-out-of-bounds in fs\/jfs\/jfs_dmap.c:799:12\nshift exponent -16777216 is negative"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0cb567e727339a192f9fd0db00781d73a91d15a6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1a7c53fdea1d189087544d9a606d249e93c4934b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/491085258185ffc4fb91555b0dba895fe7656a45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/524b4f203afcf87accfe387e846f33f916f0c907","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/525b861a008143048535011f3816d407940f4bfa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5f148b16972e5f4592629b244d5109b15135f53f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f2964df6bfce9d92d81ca552010b8677af8d9dc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a81a56b4cbe3142cc99f6b98e8f9b3a631c768e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc61fcf7d1c99f148fe8ddfb5c6ed0bb75861f01","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52811","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.347","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ibmvfc: Remove BUG_ON in the case of an empty event pool\n\nIn practice the driver should never send more commands than are allocated\nto a queue's event pool. In the unlikely event that this happens, the code\nasserts a BUG_ON, and in the case that the kernel is not configured to\ncrash on panic returns a junk event pointer from the empty event list\ncausing things to spiral from there. This BUG_ON is a historical artifact\nof the ibmvfc driver first being upstreamed, and it is well known now that\nthe use of BUG_ON is bad practice except in the most unrecoverable\nscenario. There is nothing about this scenario that prevents the driver\nfrom recovering and carrying on.\n\nRemove the BUG_ON in question from ibmvfc_get_event() and return a NULL\npointer in the case of an empty event pool. Update all call sites to\nibmvfc_get_event() to check for a NULL pointer and perfrom the appropriate\nfailure or recovery action."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/88984ec4792766df5a9de7a2ff2b5f281f94c7d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8bbe784c2ff28d56ca0c548aaf3e584edc77052d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b39f2d10b86d0af353ea339e5815820026bca48f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d2af4ef80601224b90630c1ddc7cd2c7c8ab4dd8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e1d1f79b1929dce470a5dc9281c574cd58e8c6c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52812","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.410","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd: check num of link levels when update pcie param\n\nIn SR-IOV environment, the value of pcie_table->num_of_link_levels will\nbe 0, and num_of_levels - 1 will cause array index out of bounds"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/09f617219fe9ccd8d7b65dc3e879b5889f663b5a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/406e8845356d18bdf3d3a23b347faf67706472ec","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5b4574b663d0a1a0a62d5232429b7db9ae6d0670","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52813","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.477","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: pcrypt - Fix hungtask for PADATA_RESET\n\nWe found a hungtask bug in test_aead_vec_cfg as follows:\n\nINFO: task cryptomgr_test:391009 blocked for more than 120 seconds.\n\"echo 0 > \/proc\/sys\/kernel\/hung_task_timeout_secs\" disables this message.\nCall trace:\n __switch_to+0x98\/0xe0\n __schedule+0x6c4\/0xf40\n schedule+0xd8\/0x1b4\n schedule_timeout+0x474\/0x560\n wait_for_common+0x368\/0x4e0\n wait_for_completion+0x20\/0x30\n wait_for_completion+0x20\/0x30\n test_aead_vec_cfg+0xab4\/0xd50\n test_aead+0x144\/0x1f0\n alg_test_aead+0xd8\/0x1e0\n alg_test+0x634\/0x890\n cryptomgr_test+0x40\/0x70\n kthread+0x1e0\/0x220\n ret_from_fork+0x10\/0x18\n Kernel panic - not syncing: hung_task: blocked tasks\n\nFor padata_do_parallel, when the return err is 0 or -EBUSY, it will call\nwait_for_completion(&wait->completion) in test_aead_vec_cfg. In normal\ncase, aead_request_complete() will be called in pcrypt_aead_serial and the\nreturn err is 0 for padata_do_parallel. But, when pinst->flags is\nPADATA_RESET, the return err is -EBUSY for padata_do_parallel, and it\nwon't call aead_request_complete(). Therefore, test_aead_vec_cfg will\nhung at wait_for_completion(&wait->completion), which will cause\nhungtask.\n\nThe problem comes as following:\n(padata_do_parallel)                 |\n    rcu_read_lock_bh();              |\n    err = -EINVAL;                   |   (padata_replace)\n                                     |     pinst->flags |= PADATA_RESET;\n    err = -EBUSY                     |\n    if (pinst->flags & PADATA_RESET) |\n        rcu_read_unlock_bh()         |\n        return err\n\nIn order to resolve the problem, we replace the return err -EBUSY with\n-EAGAIN, which means parallel_data is changing, and the caller should call\nit again.\n\nv3:\nremove retry and just change the return err.\nv2:\nintroduce padata_try_do_parallel() in pcrypt_aead_encrypt and\npcrypt_aead_decrypt to solve the hungtask."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/039fec48e062504f14845124a1a25eb199b2ddc0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/372636debe852913529b1716f44addd94fff2d28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/546c1796ad1ed0d87dab3c4b5156d75819be2316","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8f4f68e788c3a7a696546291258bfa5fdb215523","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c55fc098fd9d2dca475b82d00ffbcaf97879d77e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9c1334697301c10e6918d747ed38abfbc0c96e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e134f3aba98e6c801a693f540912c2d493718ddf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e97bf4ada7dddacd184c3e196bd063b0dc71b41d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb2d3a50a8f29a3c66682bb426144f40e32ab818","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52814","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.547","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Fix potential null pointer derefernce\n\nThe amdgpu_ras_get_context may return NULL if device\nnot support ras feature, so add check before using."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/80285ae1ec8717b597b20de38866c29d84d321a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9b70fc7d70e8ef7c4a65034c9487f58609e708a1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0702ee4d811708251cdf54d4a1d3e888d365111","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b93a25de28af153312f0fc979b0663fc4bd3442b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c11cf5e117f50f5a767054600885acd981449afe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/da46e63482fdc5e35c008865c22ac64027f6f0c2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52815","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.620","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu\/vkms: fix a possible null pointer dereference\n\nIn amdgpu_vkms_conn_get_modes(), the return value of drm_cvt_mode()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_cvt_mode(). Add a check to avoid null pointer\ndereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/33fb1a555354bd593f785935ddcb5d9dd4d3847f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/70f831f21155c692bb336c434936fd6f24f3f81a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c6c85a073768df68c1a3fea143d013a38c66d34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd90511557fdfb394bb4ac4c3b539b007383914c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaa03ea366c85ae3cb69c8d4bbc67c8bc2167a27","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52816","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.690","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Fix shift out-of-bounds issue\n\n[  567.613292] shift exponent 255 is too large for 64-bit type 'long unsigned int'\n[  567.614498] CPU: 5 PID: 238 Comm: kworker\/5:1 Tainted: G           OE      6.2.0-34-generic #34~22.04.1-Ubuntu\n[  567.614502] Hardware name: AMD Splinter\/Splinter-RPL, BIOS WS43927N_871 09\/25\/2023\n[  567.614504] Workqueue: events send_exception_work_handler [amdgpu]\n[  567.614748] Call Trace:\n[  567.614750]  <TASK>\n[  567.614753]  dump_stack_lvl+0x48\/0x70\n[  567.614761]  dump_stack+0x10\/0x20\n[  567.614763]  __ubsan_handle_shift_out_of_bounds+0x156\/0x310\n[  567.614769]  ? srso_alias_return_thunk+0x5\/0x7f\n[  567.614773]  ? update_sd_lb_stats.constprop.0+0xf2\/0x3c0\n[  567.614780]  svm_range_split_by_granularity.cold+0x2b\/0x34 [amdgpu]\n[  567.615047]  ? srso_alias_return_thunk+0x5\/0x7f\n[  567.615052]  svm_migrate_to_ram+0x185\/0x4d0 [amdgpu]\n[  567.615286]  do_swap_page+0x7b6\/0xa30\n[  567.615291]  ? srso_alias_return_thunk+0x5\/0x7f\n[  567.615294]  ? __free_pages+0x119\/0x130\n[  567.615299]  handle_pte_fault+0x227\/0x280\n[  567.615303]  __handle_mm_fault+0x3c0\/0x720\n[  567.615311]  handle_mm_fault+0x119\/0x330\n[  567.615314]  ? lock_mm_and_find_vma+0x44\/0x250\n[  567.615318]  do_user_addr_fault+0x1a9\/0x640\n[  567.615323]  exc_page_fault+0x81\/0x1b0\n[  567.615328]  asm_exc_page_fault+0x27\/0x30\n[  567.615332] RIP: 0010:__get_user_8+0x1c\/0x30"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2806f880379232e789957c2078d612669eb7a69c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/282c1d793076c2edac6c3db51b7e8ed2b41d60a5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f7a400d5e80f99581e3e8a9843e1f6118bf454f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56649c43d40ce0147465a2d5756d300e87f9ee1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d33a35b13cbfec3238043f196fa87a6384f9d087","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52817","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.763","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdgpu: Fix a null pointer access when the smc_rreg pointer is NULL\n\nIn certain types of chips, such as VEGA20, reading the amdgpu_regs_smc file could result in an abnormal null pointer access when the smc_rreg pointer is NULL. Below are the steps to reproduce this issue and the corresponding exception log:\n\n1. Navigate to the directory: \/sys\/kernel\/debug\/dri\/0\n2. Execute command: cat amdgpu_regs_smc\n3. Exception Log::\n[4005007.702554] BUG: kernel NULL pointer dereference, address: 0000000000000000\n[4005007.702562] #PF: supervisor instruction fetch in kernel mode\n[4005007.702567] #PF: error_code(0x0010) - not-present page\n[4005007.702570] PGD 0 P4D 0\n[4005007.702576] Oops: 0010 [#1] SMP NOPTI\n[4005007.702581] CPU: 4 PID: 62563 Comm: cat Tainted: G           OE     5.15.0-43-generic #46-Ubunt       u\n[4005007.702590] RIP: 0010:0x0\n[4005007.702598] Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.\n[4005007.702600] RSP: 0018:ffffa82b46d27da0 EFLAGS: 00010206\n[4005007.702605] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffa82b46d27e68\n[4005007.702609] RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff9940656e0000\n[4005007.702612] RBP: ffffa82b46d27dd8 R08: 0000000000000000 R09: ffff994060c07980\n[4005007.702615] R10: 0000000000020000 R11: 0000000000000000 R12: 00007f5e06753000\n[4005007.702618] R13: ffff9940656e0000 R14: ffffa82b46d27e68 R15: 00007f5e06753000\n[4005007.702622] FS:  00007f5e0755b740(0000) GS:ffff99479d300000(0000) knlGS:0000000000000000\n[4005007.702626] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[4005007.702629] CR2: ffffffffffffffd6 CR3: 00000003253fc000 CR4: 00000000003506e0\n[4005007.702633] Call Trace:\n[4005007.702636]  <TASK>\n[4005007.702640]  amdgpu_debugfs_regs_smc_read+0xb0\/0x120 [amdgpu]\n[4005007.703002]  full_proxy_read+0x5c\/0x80\n[4005007.703011]  vfs_read+0x9f\/0x1a0\n[4005007.703019]  ksys_read+0x67\/0xe0\n[4005007.703023]  __x64_sys_read+0x19\/0x20\n[4005007.703028]  do_syscall_64+0x5c\/0xc0\n[4005007.703034]  ? do_user_addr_fault+0x1e3\/0x670\n[4005007.703040]  ? exit_to_user_mode_prepare+0x37\/0xb0\n[4005007.703047]  ? irqentry_exit_to_user_mode+0x9\/0x20\n[4005007.703052]  ? irqentry_exit+0x19\/0x30\n[4005007.703057]  ? exc_page_fault+0x89\/0x160\n[4005007.703062]  ? asm_exc_page_fault+0x8\/0x30\n[4005007.703068]  entry_SYSCALL_64_after_hwframe+0x44\/0xae\n[4005007.703075] RIP: 0033:0x7f5e07672992\n[4005007.703079] Code: c0 e9 b2 fe ff ff 50 48 8d 3d fa b2 0c 00 e8 c5 1d 02 00 0f 1f 44 00 00 f3 0f        1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 0f 05 <48> 3d 00 f0 ff ff 77 56 c3 0f 1f 44 00 00 48 83 e       c 28 48 89 54 24\n[4005007.703083] RSP: 002b:00007ffe03097898 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\n[4005007.703088] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f5e07672992\n[4005007.703091] RDX: 0000000000020000 RSI: 00007f5e06753000 RDI: 0000000000000003\n[4005007.703094] RBP: 00007f5e06753000 R08: 00007f5e06752010 R09: 00007f5e06752010\n[4005007.703096] R10: 0000000000000022 R11: 0000000000000246 R12: 0000000000022000\n[4005007.703099] R13: 0000000000000003 R14: 0000000000020000 R15: 0000000000020000\n[4005007.703105]  <\/TASK>\n[4005007.703107] Modules linked in: nf_tables libcrc32c nfnetlink algif_hash af_alg binfmt_misc nls_       iso8859_1 ipmi_ssif ast intel_rapl_msr intel_rapl_common drm_vram_helper drm_ttm_helper amd64_edac t       tm edac_mce_amd kvm_amd ccp mac_hid k10temp kvm acpi_ipmi ipmi_si rapl sch_fq_codel ipmi_devintf ipm       i_msghandler msr parport_pc ppdev lp parport mtd pstore_blk efi_pstore ramoops pstore_zone reed_solo       mon ip_tables x_tables autofs4 ib_uverbs ib_core amdgpu(OE) amddrm_ttm_helper(OE) amdttm(OE) iommu_v       2 amd_sched(OE) amdkcl(OE) drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops cec rc_core        drm igb ahci xhci_pci libahci i2c_piix4 i2c_algo_bit xhci_pci_renesas dca\n[4005007.703184] CR2: 0000000000000000\n[4005007.703188] ---[ en\n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/174f62a0aa15c211e60208b41ee9e7cdfb73d455","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/437e0fa907ba39b4d7eda863c03ea9cf48bd93a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5104fdf50d326db2c1a994f8b35dcd46e63ae4ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c1b3d89a2dda79881726bb6e37af19c0936d736","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/820daf9ffe2b0afb804567b10983fb38bc5ae288","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba3c0796d292de84f2932cc5bbb0f771fc720996","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bf2d51eedf03bd61e3556e35d74d49e2e6112398","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f475d5502f33a6c5b149b0afe96316ad1962a64a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52818","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.840","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd: Fix UBSAN array-index-out-of-bounds for SMU7\n\nFor pptable structs that use flexible array sizes, use flexible arrays."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/6dffdddfca818c02a42b6caa1d9845995f0a1f94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/760efbca74a405dc439a013a5efaa9fadc95a8c3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8af28ae3acb736ada4ce3457662fa446cc913bb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/92a775e7c9707aed28782bafe636bf87675f5a97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/acdb6830de02cf2873aeaccdf2d9bca4aee50e47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c847379a5d00078ad6fcb1c24230e72c5609342f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfd8cd907fd94538561479a43aea455f5cf16928","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e52e324a21341c97350d5f11de14721c1c609498","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc9ac0e8e0bcb3740c6eaad3a1a50c20016d422b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52819","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.910","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd: Fix UBSAN array-index-out-of-bounds for Polaris and Tonga\n\nFor pptable structs that use flexible array sizes, use flexible arrays."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f0e59075b5c22f1e871fbd508d6e4f495048356","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/60a00dfc7c5deafd1dd393beaf53224f7256dad6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c68283f3166221af3df5791f0e13d3137a72216","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c1dbddbfcb051e82cea0c197c620f9dcdc38e92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a237675aa1e62bbfaa341c535331c8656a508fa1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a63fd579e7b1c3a9ebd6e6c494d49b1b6cf5515e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3b8b7c040cf069da7afe11c5bd73b870b8f3d18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0725232da777840703f5f1e22f2e3081d712aa4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d50a56749e5afdc63491b88f5153c1aae00d4679","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52820","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:19.980","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm_lease.c: copy user-array safely\n\nCurrently, there is no overflow-check with memdup_user().\n\nUse the new function memdup_array_user() instead of memdup_user() for\nduplicating the user-space array safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f5f56745188b06f13509e5054231cb7a4cb047d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/301e597e7b81efa307dd0969ff8f2af9d7b9064e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ea42bc330723644a0bd01d7124a601ab60b27747","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f37d63e219c39199a59b8b8a211412ff27192830","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52821","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.047","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panel: fix a possible null pointer dereference\n\nIn versatile_panel_get_modes(), the return value of drm_mode_duplicate()\nis assigned to mode, which will lead to a NULL pointer dereference\non failure of drm_mode_duplicate(). Add a check to avoid npd."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2381f6b628b3214f07375e0adf5ce17093c31190","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4fa930ba046d20fc1899770396ee11e905fa96e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79813cd59398015867d51e6d7dcc14d287d4c402","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8a9dd36fcb4f3906982b82593393578db4479992","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/924e5814d1f84e6fa5cb19c6eceb69f066225229","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7dc0aca5962fb37dbea9769dd26ec37813faae1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52822","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.120","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: vmwgfx_surface.c: copy user-array safely\n\nCurrently, there is no overflow-check with memdup_user().\n\nUse the new function memdup_array_user() instead of memdup_user() for\nduplicating the user-space array safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/06ab64a0d836ac430c5f94669710a78aa43942cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1eacb4c96e73225a2f6f276bade006abbe4d8341","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21e29f1437b7c36c76efa908589578eaf0f50900","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/412ce89669341dfd8ed98a4746ad3dbe9653a7b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/689b33b94f096e717cd8f140a8b5502e7e4fe759","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52823","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.187","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkernel: kexec: copy user-array safely\n\nCurrently, there is no overflow-check with memdup_user().\n\nUse the new function memdup_array_user() instead of memdup_user() for\nduplicating the user-space array safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4fc857cc5cb9b7ce6940898857d773564973a584","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/569c8d82f95eb5993c84fb61a649a9c4ddd208b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8332523b13dbfcce60f631dfb34ac90df021b4bd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0ed017a2b9735753eb95798d9f60176480424ca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4f2c09d4672f0e997ba4b1b589cc376be7ec938","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52824","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.253","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nkernel: watch_queue: copy user-array safely\n\nCurrently, there is no overflow-check with memdup_user().\n\nUse the new function memdup_array_user() instead of memdup_user() for\nduplicating the user-space array safely."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f403ebad98e6151aaa9c96c9aae5549aa4d87cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/22260dabcfe30ab70440d91aa1e4a703d13925c4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6995df256e4f5841fb45cf40d04f94b62b8067e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7acf02df1673a4ea7d6401ac4bc773ffe6a88f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca0776571d3163bd03b3e8c9e3da936abfaecbf6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52825","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.320","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amdkfd: Fix a race condition of vram buffer unref in svm code\n\nprange->svm_bo unref can happen in both mmu callback and a callback after\nmigrate to system ram. Both are async call in different tasks. Sync svm_bo\nunref operation to avoid random \"use-after-free\"."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/50f35a907c4f9ed431fd3dbb8b871ef1cbb0718e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/709c348261618da7ed89d6c303e2ceb9e453ba74","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d43cdd22cd81a2b079e864c4321b9aba4c6af34","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c772eacbd6d0845fc922af8716bb9d29ae27b8cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc0210720127cc6302e6d6f3de48f49c3fcf5659","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52826","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.390","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/panel\/panel-tpo-tpg110: fix a possible null pointer dereference\n\nIn tpg110_get_modes(), the return value of drm_mode_duplicate() is\nassigned to mode, which will lead to a NULL pointer dereference on\nfailure of drm_mode_duplicate(). Add a check to avoid npd."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/84c923d898905187ebfd4c0ef38cd1450af7e0ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9268bfd76bebc85ff221691b61498cc16d75451c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9acc2bc00135e9ecd13a70ce1140e2673e504cdc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0bc9ab0a161a9745273f5bf723733a8e6c57aca","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eaede6900c0961b072669d6bd97fe8f90ed1900f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f22def5970c423ea7f87d5247bd0ef91416b0658","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52827","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.463","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix possible out-of-bound read in ath12k_htt_pull_ppdu_stats()\n\nlen is extracted from HTT message and could be an unexpected value in\ncase errors happen, so add validation before using to avoid possible\nout-of-bound read in the following message iteration and parsing.\n\nThe same issue also applies to ppdu_info->ppdu_stats.common.num_users,\nso validate it before using too.\n\nThese are found during code review.\n\nCompile test only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1bc44a505a229bb1dd4957e11aa594edeea3690e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/79527c21a3ce04cffc35ea54f74ee087e532be57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c9e44111da221246efb2e623ae1be40a5cf6542c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52828","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.533","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Detect IP == ksym.end as part of BPF program\n\nNow that bpf_throw kfunc is the first such call instruction that has\nnoreturn semantics within the verifier, this also kicks in dead code\nelimination in unprecedented ways. For one, any instruction following\na bpf_throw call will never be marked as seen. Moreover, if a callchain\nends up throwing, any instructions after the call instruction to the\neventually throwing subprog in callers will also never be marked as\nseen.\n\nThe tempting way to fix this would be to emit extra 'int3' instructions\nwhich bump the jited_len of a program, and ensure that during runtime\nwhen a program throws, we can discover its boundaries even if the call\ninstruction to bpf_throw (or to subprogs that always throw) is emitted\nas the final instruction in the program.\n\nAn example of such a program would be this:\n\ndo_something():\n\t...\n\tr0 = 0\n\texit\n\nfoo():\n\tr1 = 0\n\tcall bpf_throw\n\tr0 = 0\n\texit\n\nbar(cond):\n\tif r1 != 0 goto pc+2\n\tcall do_something\n\texit\n\tcall foo\n\tr0 = 0  \/\/ Never seen by verifier\n\texit\t\/\/\n\nmain(ctx):\n\tr1 = ...\n\tcall bar\n\tr0 = 0\n\texit\n\nHere, if we do end up throwing, the stacktrace would be the following:\n\nbpf_throw\nfoo\nbar\nmain\n\nIn bar, the final instruction emitted will be the call to foo, as such,\nthe return address will be the subsequent instruction (which the JIT\nemits as int3 on x86). This will end up lying outside the jited_len of\nthe program, thus, when unwinding, we will fail to discover the return\naddress as belonging to any program and end up in a panic due to the\nunreliable stack unwinding of BPF programs that we never expect.\n\nTo remedy this case, make bpf_prog_ksym_find treat IP == ksym.end as\npart of the BPF program, so that is_bpf_text_address returns true when\nsuch a case occurs, and we are able to unwind reliably when the final\ninstruction ends up being a call instruction."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/327b92e8cb527ae097961ffd1610c720481947f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6058e4829696412457729a00734969acc6fd1d18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66d9111f3517f85ef2af0337ece02683ce0faf21","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/821a7e4143af115b840ec199eb179537e18af922","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aa42a7cb92647786719fe9608685da345883878f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf353904a82873e952633fcac4385c2fcd3a46e1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52829","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.600","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: fix possible out-of-bound write in ath12k_wmi_ext_hal_reg_caps()\n\nreg_cap.phy_id is extracted from WMI event and could be an unexpected value\nin case some errors happen. As a result out-of-bound write may occur to\nsoc->hal_reg_cap. Fix it by validating reg_cap.phy_id before using it.\n\nThis is found during code review.\n\nCompile tested only."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4dd0547e8b45faf6f95373be5436b66cde326c0e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b302dce3d9edea5b93d1902a541684a967f3c63c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dfe13eaab043130f90dd3d57c7d88577c04adc97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52830","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.670","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: Fix double free in hci_conn_cleanup\n\nsyzbot reports a slab use-after-free in hci_conn_hash_flush [1].\nAfter releasing an object using hci_conn_del_sysfs in the\nhci_conn_cleanup function, releasing the same object again\nusing the hci_dev_put and hci_conn_put functions causes a double free.\nHere's a simplified flow:\n\nhci_conn_del_sysfs:\n  hci_dev_put\n    put_device\n      kobject_put\n        kref_put\n          kobject_release\n            kobject_cleanup\n              kfree_const\n                kfree(name)\n\nhci_dev_put:\n  ...\n    kfree(name)\n\nhci_conn_put:\n  put_device\n    ...\n      kfree(name)\n\nThis patch drop the hci_dev_put and hci_conn_put function\ncall in hci_conn_cleanup function, because the object is\nfreed in hci_conn_del_sysfs function.\n\nThis patch also fixes the refcounting in hci_conn_add_sysfs() and\nhci_conn_del_sysfs() to take into account device_add() failures.\n\nThis fixes CVE-2023-28464."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3c4236f1b2a715e878a06599fa8b0cc21f165d28","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53d61daf35b1bbf3ae06e852ee107aa2f05b3776","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56a4fdde95ed98d864611155f6728983e199e198","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c53afc766e07098429520b7677eaa164b593451","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/87624b1f9b781549e69f92db7ede012a21cec275","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a85fb91e3d728bdfc80833167e8162cce8bc7004","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ba7088769800d9892a7e4f35c3137a5b3e65410b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fc666d1b47518a18519241cae213de1babd4a4ba","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52831","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.743","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncpu\/hotplug: Don't offline the last non-isolated CPU\n\nIf a system has isolated CPUs via the \"isolcpus=\" command line parameter,\nthen an attempt to offline the last housekeeping CPU will result in a\nWARN_ON() when rebuilding the scheduler domains and a subsequent panic due\nto and unhandled empty CPU mas in partition_sched_domains_locked().\n\ncpuset_hotplug_workfn()\n  rebuild_sched_domains_locked()\n    ndoms = generate_sched_domains(&doms, &attr);\n      cpumask_and(doms[0], top_cpuset.effective_cpus, housekeeping_cpumask(HK_FLAG_DOMAIN));\n\nThus results in an empty CPU mask which triggers the warning and then the\nsubsequent crash:\n\nWARNING: CPU: 4 PID: 80 at kernel\/sched\/topology.c:2366 build_sched_domains+0x120c\/0x1408\nCall trace:\n build_sched_domains+0x120c\/0x1408\n partition_sched_domains_locked+0x234\/0x880\n rebuild_sched_domains_locked+0x37c\/0x798\n rebuild_sched_domains+0x30\/0x58\n cpuset_hotplug_workfn+0x2a8\/0x930\n\nUnable to handle kernel paging request at virtual address fffe80027ab37080\n partition_sched_domains_locked+0x318\/0x880\n rebuild_sched_domains_locked+0x37c\/0x798\n\nAside of the resulting crash, it does not make any sense to offline the last\nlast housekeeping CPU.\n\nPrevent this by masking out the non-housekeeping CPUs when selecting a\ntarget CPU for initiating the CPU unplug operation via the work queue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3073f6df783d9d75f7f69f73e16c7ef85d6cfb63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/335a47ed71e332c82339d1aec0c7f6caccfcda13","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3410b702354702b500bde10e3cc1f9db8731d908","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/38685e2a0476127db766f81b1c06019ddc4c9ffa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52832","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.813","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: don't return unset power in ieee80211_get_tx_power()\n\nWe can get a UBSAN warning if ieee80211_get_tx_power() returns the\nINT_MIN value mac80211 internally uses for \"unset power level\".\n\n UBSAN: signed-integer-overflow in net\/wireless\/nl80211.c:3816:5\n -2147483648 * 100 cannot be represented in type 'int'\n CPU: 0 PID: 20433 Comm: insmod Tainted: G        WC OE\n Call Trace:\n  dump_stack+0x74\/0x92\n  ubsan_epilogue+0x9\/0x50\n  handle_overflow+0x8d\/0xd0\n  __ubsan_handle_mul_overflow+0xe\/0x10\n  nl80211_send_iface+0x688\/0x6b0 [cfg80211]\n  [...]\n  cfg80211_register_wdev+0x78\/0xb0 [cfg80211]\n  cfg80211_netdev_notifier_call+0x200\/0x620 [cfg80211]\n  [...]\n  ieee80211_if_add+0x60e\/0x8f0 [mac80211]\n  ieee80211_register_hw+0xda5\/0x1170 [mac80211]\n\nIn this case, simply return an error instead, to indicate\nthat no data is available."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1571120c44dbe5757aee1612c5b6097cdc42710f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/21a0f310a9f3bfd2b4cf4f382430e638607db846","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/298e767362cade639b7121ecb3cc5345b6529f62","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2be24c47ac19bf639c48c082486c08888bd603c6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5a94cffe90e20e8fade0b9abd4370bd671fe87c7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/717de20abdcd1d4993fa450e28b8086a352620ea","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/adc2474d823fe81d8da759207f4f1d3691aa775a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e160ab85166e77347d0cbe5149045cb25e83937f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/efeae5f4972f75d50002bc50eb112ab9e7069b18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52833","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.883","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btusb: Add date->evt_skb is NULL check\n\nfix crash because of null pointers\n\n[ 6104.969662] BUG: kernel NULL pointer dereference, address: 00000000000000c8\n[ 6104.969667] #PF: supervisor read access in kernel mode\n[ 6104.969668] #PF: error_code(0x0000) - not-present page\n[ 6104.969670] PGD 0 P4D 0\n[ 6104.969673] Oops: 0000 [#1] SMP NOPTI\n[ 6104.969684] RIP: 0010:btusb_mtk_hci_wmt_sync+0x144\/0x220 [btusb]\n[ 6104.969688] RSP: 0018:ffffb8d681533d48 EFLAGS: 00010246\n[ 6104.969689] RAX: 0000000000000000 RBX: ffff8ad560bb2000 RCX: 0000000000000006\n[ 6104.969691] RDX: 0000000000000000 RSI: ffffb8d681533d08 RDI: 0000000000000000\n[ 6104.969692] RBP: ffffb8d681533d70 R08: 0000000000000001 R09: 0000000000000001\n[ 6104.969694] R10: 0000000000000001 R11: 00000000fa83b2da R12: ffff8ad461d1d7c0\n[ 6104.969695] R13: 0000000000000000 R14: ffff8ad459618c18 R15: ffffb8d681533d90\n[ 6104.969697] FS:  00007f5a1cab9d40(0000) GS:ffff8ad578200000(0000) knlGS:00000\n[ 6104.969699] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 6104.969700] CR2: 00000000000000c8 CR3: 000000018620c001 CR4: 0000000000760ef0\n[ 6104.969701] PKRU: 55555554\n[ 6104.969702] Call Trace:\n[ 6104.969708]  btusb_mtk_shutdown+0x44\/0x80 [btusb]\n[ 6104.969732]  hci_dev_do_close+0x470\/0x5c0 [bluetooth]\n[ 6104.969748]  hci_rfkill_set_block+0x56\/0xa0 [bluetooth]\n[ 6104.969753]  rfkill_set_block+0x92\/0x160\n[ 6104.969755]  rfkill_fop_write+0x136\/0x1e0\n[ 6104.969759]  __vfs_write+0x18\/0x40\n[ 6104.969761]  vfs_write+0xdf\/0x1c0\n[ 6104.969763]  ksys_write+0xb1\/0xe0\n[ 6104.969765]  __x64_sys_write+0x1a\/0x20\n[ 6104.969769]  do_syscall_64+0x51\/0x180\n[ 6104.969771]  entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n[ 6104.969773] RIP: 0033:0x7f5a21f18fef\n[ 6104.9] RSP: 002b:00007ffeefe39010 EFLAGS: 00000293 ORIG_RAX: 0000000000000001\n[ 6104.969780] RAX: ffffffffffffffda RBX: 000055c10a7560a0 RCX: 00007f5a21f18fef\n[ 6104.969781] RDX: 0000000000000008 RSI: 00007ffeefe39060 RDI: 0000000000000012\n[ 6104.969782] RBP: 00007ffeefe39060 R08: 0000000000000000 R09: 0000000000000017\n[ 6104.969784] R10: 00007ffeefe38d97 R11: 0000000000000293 R12: 0000000000000002\n[ 6104.969785] R13: 00007ffeefe39220 R14: 00007ffeefe391a0 R15: 000055c10a72acf0"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0048ddf045bddc4dacb3e783fd869a2f8fb5be30","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/13b1ebad4c175e6a9b0748acbf133c21a15d282a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/624820f7c8826dd010e8b1963303c145f99816e9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9f8e4d1a4ca1179aaeb43f91f3e2a386e7e616b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a556f2ef556a04790f67f2fa272f1a77336d15a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f9de14bde56dcbb0765284c6dfc35842b021733c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52834","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:20.950","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\natl1c: Work around the DMA RX overflow issue\n\nThis is based on alx driver commit 881d0327db37 (\"net: alx: Work around\nthe DMA RX overflow issue\").\n\nThe alx and atl1c drivers had RX overflow error which was why a custom\nallocator was created to avoid certain addresses. The simpler workaround\nthen created for alx driver, but not for atl1c due to lack of tester.\n\nInstead of using a custom allocator, check the allocated skb address and\nuse skb_reserve() to move away from problematic 0x...fc0 address.\n\nTested on AR8131 on Acer 4540."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/32f08b7b430ee01ec47d730f961a3306c1c7b6fb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54a6152da4993ec8e4b53dc3cf577f5a2c829afa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/57e44ff9c2c9747b2b1a53556810b0e5192655d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/86565682e9053e5deb128193ea9e88531bbae9cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c29a89b23f67ee592f4dee61f9d7efbf86d60315","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52835","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.023","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf\/core: Bail out early if the request AUX area is out of bound\n\nWhen perf-record with a large AUX area, e.g 4GB, it fails with:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0\/\/ -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)\n\nand it reveals a WARNING with __alloc_pages():\n\n\t------------[ cut here ]------------\n\tWARNING: CPU: 44 PID: 17573 at mm\/page_alloc.c:5568 __alloc_pages+0x1ec\/0x248\n\tCall trace:\n\t __alloc_pages+0x1ec\/0x248\n\t __kmalloc_large_node+0xc0\/0x1f8\n\t __kmalloc_node+0x134\/0x1e8\n\t rb_alloc_aux+0xe0\/0x298\n\t perf_mmap+0x440\/0x660\n\t mmap_region+0x308\/0x8a8\n\t do_mmap+0x3c0\/0x528\n\t vm_mmap_pgoff+0xf4\/0x1b8\n\t ksys_mmap_pgoff+0x18c\/0x218\n\t __arm64_sys_mmap+0x38\/0x58\n\t invoke_syscall+0x50\/0x128\n\t el0_svc_common.constprop.0+0x58\/0x188\n\t do_el0_svc+0x34\/0x50\n\t el0_svc+0x34\/0x108\n\t el0t_64_sync_handler+0xb8\/0xc0\n\t el0t_64_sync+0x1a4\/0x1a8\n\n'rb->aux_pages' allocated by kcalloc() is a pointer array which is used to\nmaintains AUX trace pages. The allocated page for this array is physically\ncontiguous (and virtually contiguous) with an order of 0..MAX_ORDER. If the\nsize of pointer array crosses the limitation set by MAX_ORDER, it reveals a\nWARNING.\n\nSo bail out early with -ENOMEM if the request AUX area is out of bound,\ne.g.:\n\n    #perf record -C 0 -m ,4G -e arm_spe_0\/\/ -- sleep 1\n    failed to mmap with 12 (Cannot allocate memory)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1a2a4202c60fcdffbf04f259002ce9bff39edece","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2424410f94a94d91230ced094062d859714c984a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2e905e608e38cf7f8dcddcf8a6036e91a78444cb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/54aee5f15b83437f23b2b2469bcf21bdd9823916","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/788c0b3442ead737008934947730a6d1ff703734","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8c504f615d7ed60ae035c51d0c789137ced6797f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ce4e87a8efd37c85766ec08b15e885cab08553a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fd0df3f8719201dbe61a4d39083d5aecd705399a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52836","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.090","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nlocking\/ww_mutex\/test: Fix potential workqueue corruption\n\nIn some cases running with the test-ww_mutex code, I was seeing\nodd behavior where sometimes it seemed flush_workqueue was\nreturning before all the work threads were finished.\n\nOften this would cause strange crashes as the mutexes would be\nfreed while they were being used.\n\nLooking at the code, there is a lifetime problem as the\ncontrolling thread that spawns the work allocates the\n\"struct stress\" structures that are passed to the workqueue\nthreads. Then when the workqueue threads are finished,\nthey free the stress struct that was passed to them.\n\nUnfortunately the workqueue work_struct node is in the stress\nstruct. Which means the work_struct is freed before the work\nthread returns and while flush_workqueue is waiting.\n\nIt seems like a better idea to have the controlling thread\nboth allocate and free the stress structures, so that we can\nbe sure we don't corrupt the workqueue by freeing the structure\nprematurely.\n\nSo this patch reworks the test to do so, and with this change\nI no longer see the early flush_workqueue returns."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/304a2c4aad0fff887ce493e4197bf9cbaf394479","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ed2d68b3925145f5f51c46559484881d6082f75","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bccdd808902f8c677317cec47c306e42b93b849e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c56df79d68677cf062da1b6e3b33e74299a92dfc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d4d37c9e6a4dbcca958dabd99216550525c7e389","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d8267cabbe1bed15ccf8b0e684c528bf8eeef715","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dcd85e3c929368076a7592b27f541e0da8b427f5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e36407713163363e65566e7af0abe207d5f59a0c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e89d0ed45a419c485bae999426ecf92697cbdda3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52837","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.170","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nnbd: fix uaf in nbd_open\n\nCommit 4af5f2e03013 (\"nbd: use blk_mq_alloc_disk and\nblk_cleanup_disk\") cleans up disk by blk_cleanup_disk() and it won't set\ndisk->private_data as NULL as before. UAF may be triggered in nbd_open()\nif someone tries to open nbd device right after nbd_put() since nbd has\nbeen free in nbd_dev_remove().\n\nFix this by implementing ->free_disk and free private data in it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/327462725b0f759f093788dfbcb2f1fd132f956b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4e9b3ec84dc97909876641dad14e0a2300d6c2a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/56bd7901b5e9dbc9112036ea615ebcba1565fafe","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/879947f4180bc6e83af64eb0515e0cf57fce15db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52838","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.240","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: imsttfb: fix a resource leak in probe\n\nI've re-written the error handling but the bug is that if init_imstt()\nfails we need to call iounmap(par->cmap_regs)."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/18d26f9baca7d0d309303e3074a2252b8310884a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/382e1931e0c9cd58a5a8519cdc6cd9dc4d82b485","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c66d737b2726ac7784269ddf32a31634f8f269d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bc7b82fb2191b0d50a80ee4e27030918767dd1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8e4b510fe91782522b7ca0ca881b663b5d35e513","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4dfebec32ec6d420a5506dd56a7834c91be28e4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aba6ab57a910ad4b940c2024d15f2cdbf5b7f76b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b346a531159d08c564a312a9eaeea691704f3c00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52839","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.310","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers: perf: Do not broadcast to other cpus when starting a counter\n\nThis command:\n\n$ perf record -e cycles:k -e instructions:k -c 10000 -m 64M dd if=\/dev\/zero of=\/dev\/null count=1000\n\ngives rise to this kernel warning:\n\n[  444.364395] WARNING: CPU: 0 PID: 104 at kernel\/smp.c:775 smp_call_function_many_cond+0x42c\/0x436\n[  444.364515] Modules linked in:\n[  444.364657] CPU: 0 PID: 104 Comm: perf-exec Not tainted 6.6.0-rc6-00051-g391df82e8ec3-dirty #73\n[  444.364771] Hardware name: riscv-virtio,qemu (DT)\n[  444.364868] epc : smp_call_function_many_cond+0x42c\/0x436\n[  444.364917]  ra : on_each_cpu_cond_mask+0x20\/0x32\n[  444.364948] epc : ffffffff8009f9e0 ra : ffffffff8009fa5a sp : ff20000000003800\n[  444.364966]  gp : ffffffff81500aa0 tp : ff60000002b83000 t0 : ff200000000038c0\n[  444.364982]  t1 : ffffffff815021f0 t2 : 000000000000001f s0 : ff200000000038b0\n[  444.364998]  s1 : ff60000002c54d98 a0 : ff60000002a73940 a1 : 0000000000000000\n[  444.365013]  a2 : 0000000000000000 a3 : 0000000000000003 a4 : 0000000000000100\n[  444.365029]  a5 : 0000000000010100 a6 : 0000000000f00000 a7 : 0000000000000000\n[  444.365044]  s2 : 0000000000000000 s3 : ffffffffffffffff s4 : ff60000002c54d98\n[  444.365060]  s5 : ffffffff81539610 s6 : ffffffff80c20c48 s7 : 0000000000000000\n[  444.365075]  s8 : 0000000000000000 s9 : 0000000000000001 s10: 0000000000000001\n[  444.365090]  s11: ffffffff80099394 t3 : 0000000000000003 t4 : 00000000eac0c6e6\n[  444.365104]  t5 : 0000000400000000 t6 : ff60000002e010d0\n[  444.365120] status: 0000000200000100 badaddr: 0000000000000000 cause: 0000000000000003\n[  444.365226] [<ffffffff8009f9e0>] smp_call_function_many_cond+0x42c\/0x436\n[  444.365295] [<ffffffff8009fa5a>] on_each_cpu_cond_mask+0x20\/0x32\n[  444.365311] [<ffffffff806e90dc>] pmu_sbi_ctr_start+0x7a\/0xaa\n[  444.365327] [<ffffffff806e880c>] riscv_pmu_start+0x48\/0x66\n[  444.365339] [<ffffffff8012111a>] perf_adjust_freq_unthr_context+0x196\/0x1ac\n[  444.365356] [<ffffffff801237aa>] perf_event_task_tick+0x78\/0x8c\n[  444.365368] [<ffffffff8003faf4>] scheduler_tick+0xe6\/0x25e\n[  444.365383] [<ffffffff8008a042>] update_process_times+0x80\/0x96\n[  444.365398] [<ffffffff800991ec>] tick_sched_handle+0x26\/0x52\n[  444.365410] [<ffffffff800993e4>] tick_sched_timer+0x50\/0x98\n[  444.365422] [<ffffffff8008a6aa>] __hrtimer_run_queues+0x126\/0x18a\n[  444.365433] [<ffffffff8008b350>] hrtimer_interrupt+0xce\/0x1da\n[  444.365444] [<ffffffff806cdc60>] riscv_timer_interrupt+0x30\/0x3a\n[  444.365457] [<ffffffff8006afa6>] handle_percpu_devid_irq+0x80\/0x114\n[  444.365470] [<ffffffff80065b82>] generic_handle_domain_irq+0x1c\/0x2a\n[  444.365483] [<ffffffff8045faec>] riscv_intc_irq+0x2e\/0x46\n[  444.365497] [<ffffffff808a9c62>] handle_riscv_irq+0x4a\/0x74\n[  444.365521] [<ffffffff808aa760>] do_irq+0x7c\/0x7e\n[  444.365796] ---[ end trace 0000000000000000 ]---\n\nThat's because the fix in commit 3fec323339a4 (\"drivers: perf: Fix panic\nin riscv SBI mmap support\") was wrong since there is no need to broadcast\nto other cpus when starting a counter, that's only needed in mmap when\nthe counters could have already been started on other cpus, so simply\nremove this broadcast."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/61e3d993c8bd3e80f8f1363ed5e04f88ab531b72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/85be1a73fd298ed3fd060dfce97caef5f9928c57","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52840","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.377","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nInput: synaptics-rmi4 - fix use after free in rmi_unregister_function()\n\nThe put_device() calls rmi_release_function() which frees \"fn\" so the\ndereference on the next line \"fn->num_of_irqs\" is a use after free.\nMove the put_device() to the end to fix this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2f236d8638f5b43e0c72919a6a27fe286c32053f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/303766bb92c5c225cf40f9bbbe7e29749406e2f2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50d12253666195a14c6cd2b81c376e2dbeedbdff","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c71e065befb2fae8f1461559b940c04e1071bd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7082b1fb5321037bc11ba1cf2d7ed23c6b2b521f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c8e639f5743cf4b01f8c65e0df075fe4d782b585","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc56c4d17721dcb10ad4e9c9266e449be1462683","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb988e46da2e4eae89f5337e047ce372fe33d5b1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52841","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.440","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: mux: Add check and kfree for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference.\nMoreover, use kfree() in the later error handling in order to avoid\nmemory leak."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1fd6eb12642e0c32692924ff359c07de4b781d78","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64863ba8e6b7651d994c6e6d506cc8aa2ac45edb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/980be4c3b0d51c0f873fd750117774561c66cf68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a254ee1ddc592ae1efcce96b8c014e1bd2d5a2b4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/aae7598aff291d4d140be1355aa20930af948785","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cb13001411999adb158b39e76d94705eb2da100d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52842","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.510","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nvirtio\/vsock: Fix uninit-value in virtio_transport_recv_pkt()\n\nKMSAN reported the following uninit-value access issue:\n\n=====================================================\nBUG: KMSAN: uninit-value in virtio_transport_recv_pkt+0x1dfb\/0x26a0 net\/vmw_vsock\/virtio_transport_common.c:1421\n virtio_transport_recv_pkt+0x1dfb\/0x26a0 net\/vmw_vsock\/virtio_transport_common.c:1421\n vsock_loopback_work+0x3bb\/0x5a0 net\/vmw_vsock\/vsock_loopback.c:120\n process_one_work kernel\/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6\/0x1e60 kernel\/workqueue.c:2703\n worker_thread+0xeca\/0x14d0 kernel\/workqueue.c:2784\n kthread+0x3cc\/0x520 kernel\/kthread.c:388\n ret_from_fork+0x66\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:304\n\nUninit was stored to memory at:\n virtio_transport_space_update net\/vmw_vsock\/virtio_transport_common.c:1274 [inline]\n virtio_transport_recv_pkt+0x1ee8\/0x26a0 net\/vmw_vsock\/virtio_transport_common.c:1415\n vsock_loopback_work+0x3bb\/0x5a0 net\/vmw_vsock\/vsock_loopback.c:120\n process_one_work kernel\/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6\/0x1e60 kernel\/workqueue.c:2703\n worker_thread+0xeca\/0x14d0 kernel\/workqueue.c:2784\n kthread+0x3cc\/0x520 kernel\/kthread.c:388\n ret_from_fork+0x66\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:304\n\nUninit was created at:\n slab_post_alloc_hook+0x105\/0xad0 mm\/slab.h:767\n slab_alloc_node mm\/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x5a2\/0xaf0 mm\/slub.c:3523\n kmalloc_reserve+0x13c\/0x4a0 net\/core\/skbuff.c:559\n __alloc_skb+0x2fd\/0x770 net\/core\/skbuff.c:650\n alloc_skb include\/linux\/skbuff.h:1286 [inline]\n virtio_vsock_alloc_skb include\/linux\/virtio_vsock.h:66 [inline]\n virtio_transport_alloc_skb+0x90\/0x11e0 net\/vmw_vsock\/virtio_transport_common.c:58\n virtio_transport_reset_no_sock net\/vmw_vsock\/virtio_transport_common.c:957 [inline]\n virtio_transport_recv_pkt+0x1279\/0x26a0 net\/vmw_vsock\/virtio_transport_common.c:1387\n vsock_loopback_work+0x3bb\/0x5a0 net\/vmw_vsock\/vsock_loopback.c:120\n process_one_work kernel\/workqueue.c:2630 [inline]\n process_scheduled_works+0xff6\/0x1e60 kernel\/workqueue.c:2703\n worker_thread+0xeca\/0x14d0 kernel\/workqueue.c:2784\n kthread+0x3cc\/0x520 kernel\/kthread.c:388\n ret_from_fork+0x66\/0x80 arch\/x86\/kernel\/process.c:147\n ret_from_fork_asm+0x11\/0x20 arch\/x86\/entry\/entry_64.S:304\n\nCPU: 1 PID: 10664 Comm: kworker\/1:5 Not tainted 6.6.0-rc3-00146-g9f3ebbef746f #3\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-1.fc38 04\/01\/2014\nWorkqueue: vsock-loopback vsock_loopback_work\n=====================================================\n\nThe following simple reproducer can cause the issue described above:\n\nint main(void)\n{\n  int sock;\n  struct sockaddr_vm addr = {\n    .svm_family = AF_VSOCK,\n    .svm_cid = VMADDR_CID_ANY,\n    .svm_port = 1234,\n  };\n\n  sock = socket(AF_VSOCK, SOCK_STREAM, 0);\n  connect(sock, (struct sockaddr *)&addr, sizeof(addr));\n  return 0;\n}\n\nThis issue occurs because the `buf_alloc` and `fwd_cnt` fields of the\n`struct virtio_vsock_hdr` are not initialized when a new skb is allocated\nin `virtio_transport_init_hdr()`. This patch resolves the issue by\ninitializing these fields during allocation."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0b8906fb48b99e993d6e8a12539f618f4854dd26","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/34c4effacfc329aeca5635a69fd9e0f6c90b4101","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cd12535b97dd7d18cf655ec78ce1cf1f29a576be","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52843","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.583","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nllc: verify mac len before reading mac header\n\nLLC reads the mac header with eth_hdr without verifying that the skb\nhas an Ethernet header.\n\nSyzbot was able to enter llc_rcv on a tun device. Tun can insert\npackets without mac len and with user configurable skb->protocol\n(passing a tun_pi header when not configuring IFF_NO_PI).\n\n    BUG: KMSAN: uninit-value in llc_station_ac_send_test_r net\/llc\/llc_station.c:81 [inline]\n    BUG: KMSAN: uninit-value in llc_station_rcv+0x6fb\/0x1290 net\/llc\/llc_station.c:111\n    llc_station_ac_send_test_r net\/llc\/llc_station.c:81 [inline]\n    llc_station_rcv+0x6fb\/0x1290 net\/llc\/llc_station.c:111\n    llc_rcv+0xc5d\/0x14a0 net\/llc\/llc_input.c:218\n    __netif_receive_skb_one_core net\/core\/dev.c:5523 [inline]\n    __netif_receive_skb+0x1a6\/0x5a0 net\/core\/dev.c:5637\n    netif_receive_skb_internal net\/core\/dev.c:5723 [inline]\n    netif_receive_skb+0x58\/0x660 net\/core\/dev.c:5782\n    tun_rx_batched+0x3ee\/0x980 drivers\/net\/tun.c:1555\n    tun_get_user+0x54c5\/0x69c0 drivers\/net\/tun.c:2002\n\nAdd a mac_len test before all three eth_hdr(skb) calls under net\/llc.\n\nThere are further uses in include\/net\/llc_pdu.h. All these are\nprotected by a test skb->protocol == ETH_P_802_2. Which does not\nprotect against this tun scenario.\n\nBut the mac_len test added in this patch in llc_fixup_skb will\nindirectly protect those too. That is called from llc_rcv before any\nother LLC code.\n\nIt is tempting to just add a blanket mac_len check in llc_rcv, but\nnot sure whether that could break valid LLC paths that do not assume\nan Ethernet header. 802.2 LLC may be used on top of non-802.3\nprotocols in principle. The below referenced commit shows that used\nto, on top of Token Ring.\n\nAt least one of the three eth_hdr uses goes back to before the start\nof git history. But the one that syzbot exercises is introduced in\nthis commit. That commit is old enough (2008), that effectively all\nstable kernels should receive this."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0a720d0259ad3521ec6c9e4199f9f6fc75bac77a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/352887b3edd007cf9b0abc30fe9d98622acd859b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a2653828ffc6101aef80bf58d5b77484239f779","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b3ba18703a63f6fd487183b9262b08e5632da1b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/900a4418e3f66a32db6baaf23f92b99c20ae6535","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9a3f9054a5227d7567cba1fb821df48ccecad10c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbdcdf42d15dac74c7287679fb2a9d955f8feb1f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f980e9a57dfb9530f1f4ee41a2420f2a256d7b29","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ff5cb6a4f0c6d7fbdc84858323fb4b7af32cfd79","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52844","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.653","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: vidtv: psi: Add check for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3387490c89b10aeb4e71d78b65dbc9ba4b2385b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5c26aae3723965c291c65dd2ecad6a3240d422b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5cfcc8de7d733a1137b86954cc28ce99972311ad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/76a2c5df6ca8bd8ada45e953b8c72b746f42918d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a51335704a3f90eaf23a6864faefca34b382490a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d17269fb9161995303985ab2fe6f16cfb72152f9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52845","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.723","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: Change nla_policy for bearer-related names to NLA_NUL_STRING\n\nsyzbot reported the following uninit-value access issue [1]:\n\n=====================================================\nBUG: KMSAN: uninit-value in strlen lib\/string.c:418 [inline]\nBUG: KMSAN: uninit-value in strstr+0xb8\/0x2f0 lib\/string.c:756\n strlen lib\/string.c:418 [inline]\n strstr+0xb8\/0x2f0 lib\/string.c:756\n tipc_nl_node_reset_link_stats+0x3ea\/0xb50 net\/tipc\/node.c:2595\n genl_family_rcv_msg_doit net\/netlink\/genetlink.c:971 [inline]\n genl_family_rcv_msg net\/netlink\/genetlink.c:1051 [inline]\n genl_rcv_msg+0x11ec\/0x1290 net\/netlink\/genetlink.c:1066\n netlink_rcv_skb+0x371\/0x650 net\/netlink\/af_netlink.c:2545\n genl_rcv+0x40\/0x60 net\/netlink\/genetlink.c:1075\n netlink_unicast_kernel net\/netlink\/af_netlink.c:1342 [inline]\n netlink_unicast+0xf47\/0x1250 net\/netlink\/af_netlink.c:1368\n netlink_sendmsg+0x1238\/0x13d0 net\/netlink\/af_netlink.c:1910\n sock_sendmsg_nosec net\/socket.c:730 [inline]\n sock_sendmsg net\/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2\/0xd60 net\/socket.c:2541\n ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2595\n __sys_sendmsg net\/socket.c:2624 [inline]\n __do_sys_sendmsg net\/socket.c:2633 [inline]\n __se_sys_sendmsg net\/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307\/0x490 net\/socket.c:2631\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nUninit was created at:\n slab_post_alloc_hook+0x12f\/0xb70 mm\/slab.h:767\n slab_alloc_node mm\/slub.c:3478 [inline]\n kmem_cache_alloc_node+0x577\/0xa80 mm\/slub.c:3523\n kmalloc_reserve+0x13d\/0x4a0 net\/core\/skbuff.c:559\n __alloc_skb+0x318\/0x740 net\/core\/skbuff.c:650\n alloc_skb include\/linux\/skbuff.h:1286 [inline]\n netlink_alloc_large_skb net\/netlink\/af_netlink.c:1214 [inline]\n netlink_sendmsg+0xb34\/0x13d0 net\/netlink\/af_netlink.c:1885\n sock_sendmsg_nosec net\/socket.c:730 [inline]\n sock_sendmsg net\/socket.c:753 [inline]\n ____sys_sendmsg+0x9c2\/0xd60 net\/socket.c:2541\n ___sys_sendmsg+0x28d\/0x3c0 net\/socket.c:2595\n __sys_sendmsg net\/socket.c:2624 [inline]\n __do_sys_sendmsg net\/socket.c:2633 [inline]\n __se_sys_sendmsg net\/socket.c:2631 [inline]\n __x64_sys_sendmsg+0x307\/0x490 net\/socket.c:2631\n do_syscall_x64 arch\/x86\/entry\/common.c:50 [inline]\n do_syscall_64+0x41\/0xc0 arch\/x86\/entry\/common.c:80\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nTIPC bearer-related names including link names must be null-terminated\nstrings. If a link name which is not null-terminated is passed through\nnetlink, strstr() and similar functions can cause buffer overrun. This\ncauses the above issue.\n\nThis patch changes the nla_policy for bearer-related names from NLA_STRING\nto NLA_NUL_STRING. This resolves the issue by ensuring that only\nnull-terminated strings are accepted as bearer-related names.\n\nsyzbot reported similar uninit-value issue related to bearer names [2]. The\nroot cause of this issue is that a non-null-terminated bearer name was\npassed. This patch also resolved this issue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19b3f72a41a8751e26bffc093bb7e1cef29ad579","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2199260c42e6fbc5af8adae3bf78e623407c91b0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2426425d686b43adbc4f2f4a367b494f06f159d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3907b89cd17fcc23e9a80789c36856f00ece0ba8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c731e98fe4d678e87ba3e4d45d3cf0a5a193dc4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/560992f41c0cea44b7603bc9e6c73bffbf6b5709","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6744008c354bca2e4686a5b6056ee6b535d9f67d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/abc1582119e8c4af14cedb0db6541fd603f45a04","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b33d130f07f1decd756b849ab03c23d11d4dd294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52846","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.800","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhsr: Prevent use after free in prp_create_tagged_frame()\n\nThe prp_fill_rct() function can fail.  In that situation, it frees the\nskb and returns NULL.  Meanwhile on the success path, it returns the\noriginal skb.  So it's straight forward to fix bug by using the returned\nvalue."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1787b9f0729d318d67cf7c5a95f0c3dba9a7cc18","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6086258bd5ea7b5c706ff62da42b8e271b2401db","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/876f8ab52363f649bcc74072157dfd7adfbabc0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a1a485e45d24b1cd8fe834fd6f1b06e2903827da","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d103fb6726904e353b4773188ee3d3acb4078363","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddf4e04e946aaa6c458b8b6829617cc44af2bffd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52847","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.873","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: bttv: fix use after free error due to btv->timeout timer\n\nThere may be some a race condition between timer function\nbttv_irq_timeout and bttv_remove. The timer is setup in\nprobe and there is no timer_delete operation in remove\nfunction. When it hit kfree btv, the function might still be\ninvoked, which will cause use after free bug.\n\nThis bug is found by static analysis, it may be false positive.\n\nFix it by adding del_timer_sync invoking to the remove function.\n\ncpu0                cpu1\n                  bttv_probe\n                    ->timer_setup\n                      ->bttv_set_dma\n                        ->mod_timer;\nbttv_remove\n  ->kfree(btv);\n                  ->bttv_irq_timeout\n                    ->USE btv"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1871014d6ef4812ad11ef7d838d73ce09d632267","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20568d06f6069cb835e05eed432edf962645d226","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2f3d9198cdae1cb079ec8652f4defacd481eab2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/51c94256a83fe4e17406c66ff3e1ad7d242d8574","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/847599fffa528b2cdec4e21b6bf7586dad982132","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b35fdade92c5058a5e727e233fe263b828de2c9a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bbc3b8dd2cb7817e703f112d988e4f4728f0f2a9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bd5b50b329e850d467e7bcc07b2b6bde3752fbda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52848","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:21.947","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: fix to drop meta_inode's page cache in f2fs_put_super()\n\nsyzbot reports a kernel bug as below:\n\nF2FS-fs (loop1): detect filesystem reference count leak during umount, type: 10, count: 1\nkernel BUG at fs\/f2fs\/super.c:1639!\nCPU: 0 PID: 15451 Comm: syz-executor.1 Not tainted 6.5.0-syzkaller-09338-ge0152e7481c6 #0\nRIP: 0010:f2fs_put_super+0xce1\/0xed0 fs\/f2fs\/super.c:1639\nCall Trace:\n generic_shutdown_super+0x161\/0x3c0 fs\/super.c:693\n kill_block_super+0x3b\/0x70 fs\/super.c:1646\n kill_f2fs_super+0x2b7\/0x3d0 fs\/f2fs\/super.c:4879\n deactivate_locked_super+0x9a\/0x170 fs\/super.c:481\n deactivate_super+0xde\/0x100 fs\/super.c:514\n cleanup_mnt+0x222\/0x3d0 fs\/namespace.c:1254\n task_work_run+0x14d\/0x240 kernel\/task_work.c:179\n resume_user_mode_work include\/linux\/resume_user_mode.h:49 [inline]\n exit_to_user_mode_loop kernel\/entry\/common.c:171 [inline]\n exit_to_user_mode_prepare+0x210\/0x240 kernel\/entry\/common.c:204\n __syscall_exit_to_user_mode_work kernel\/entry\/common.c:285 [inline]\n syscall_exit_to_user_mode+0x1d\/0x60 kernel\/entry\/common.c:296\n do_syscall_64+0x44\/0xb0 arch\/x86\/entry\/common.c:86\n entry_SYSCALL_64_after_hwframe+0x63\/0xcd\n\nIn f2fs_put_super(), it tries to do sanity check on dirty and IO\nreference count of f2fs, once there is any reference count leak,\nit will trigger panic.\n\nThe root case is, during f2fs_put_super(), if there is any IO error\nin f2fs_wait_on_all_pages(), we missed to truncate meta_inode's page\ncache later, result in panic, fix this case."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10b2a6c0dade67b5a2b2d17fb75c457ea1985fad","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a4639380bbe66172df329f8b54aa7d2e943f0f64","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb42e1862aa7934c2c21890097ce4993c5e0d192","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52849","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.023","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncxl\/mem: Fix shutdown order\n\nIra reports that removing cxl_mock_mem causes a crash with the following\ntrace:\n\n BUG: kernel NULL pointer dereference, address: 0000000000000044\n [..]\n RIP: 0010:cxl_region_decode_reset+0x7f\/0x180 [cxl_core]\n [..]\n Call Trace:\n  <TASK>\n  cxl_region_detach+0xe8\/0x210 [cxl_core]\n  cxl_decoder_kill_region+0x27\/0x40 [cxl_core]\n  cxld_unregister+0x29\/0x40 [cxl_core]\n  devres_release_all+0xb8\/0x110\n  device_unbind_cleanup+0xe\/0x70\n  device_release_driver_internal+0x1d2\/0x210\n  bus_remove_device+0xd7\/0x150\n  device_del+0x155\/0x3e0\n  device_unregister+0x13\/0x60\n  devm_release_action+0x4d\/0x90\n  ? __pfx_unregister_port+0x10\/0x10 [cxl_core]\n  delete_endpoint+0x121\/0x130 [cxl_core]\n  devres_release_all+0xb8\/0x110\n  device_unbind_cleanup+0xe\/0x70\n  device_release_driver_internal+0x1d2\/0x210\n  bus_remove_device+0xd7\/0x150\n  device_del+0x155\/0x3e0\n  ? lock_release+0x142\/0x290\n  cdev_device_del+0x15\/0x50\n  cxl_memdev_unregister+0x54\/0x70 [cxl_core]\n\nThis crash is due to the clearing out the cxl_memdev's driver context\n(@cxlds) before the subsystem is done with it. This is ultimately due to\nthe region(s), that this memdev is a member, being torn down and expecting\nto be able to de-reference @cxlds, like here:\n\nstatic int cxl_region_decode_reset(struct cxl_region *cxlr, int count)\n...\n                if (cxlds->rcd)\n                        goto endpoint_reset;\n...\n\nFix it by keeping the driver context valid until memdev-device\nunregistration, and subsequently the entire stack of related\ndependencies, unwinds."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0ca074f7d788627a4e0b047ca5fbdb5fc567220c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/20bd0198bebdd706bd4614b3933ef70d7c19618f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7c7371b41a14e86f53e7dbe5baa7b1d3e0ab324b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88d3917f82ed4215a2154432c26de1480a61b209","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cad22a757029c3a1985c221a2d4a6491ad4035ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52850","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.097","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: hantro: Check whether reset op is defined before use\n\nThe i.MX8MM\/N\/P does not define the .reset op since reset of the VPU is\ndone by genpd. Check whether the .reset op is defined before calling it\nto avoid NULL pointer dereference.\n\nNote that the Fixes tag is set to the commit which removed the reset op\nfrom i.MX8M Hantro G2 implementation, this is because before this commit\nall the implementations did define the .reset op."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/24c06295f28335ced3aad53dd4b0a0bae7b9b100","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64f55cebb4339ae771e9e7f3f42bee2489e2fa00","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/66b4c5f980d741f3a47e4b65eeaf2797f2d59294","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/88d4b23a629ebd34f682f770cb6c2116c851f7b8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52851","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.160","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nIB\/mlx5: Fix init stage error handling to avoid double free of same QP and UAF\n\nIn the unlikely event that workqueue allocation fails and returns NULL in\nmlx5_mkey_cache_init(), delete the call to\nmlx5r_umr_resource_cleanup() (which frees the QP) in\nmlx5_ib_stage_post_ib_reg_umr_init().  This will avoid attempted double\nfree of the same QP when __mlx5_ib_add() does its cleanup.\n\nResolves a splat:\n\n   Syzkaller reported a UAF in ib_destroy_qp_user\n\n   workqueue: Failed to create a rescuer kthread for wq \"mkey_cache\": -EINTR\n   infiniband mlx5_0: mlx5_mkey_cache_init:981:(pid 1642):\n   failed to create work queue\n   infiniband mlx5_0: mlx5_ib_stage_post_ib_reg_umr_init:4075:(pid 1642):\n   mr cache init failed -12\n   ==================================================================\n   BUG: KASAN: slab-use-after-free in ib_destroy_qp_user (drivers\/infiniband\/core\/verbs.c:2073)\n   Read of size 8 at addr ffff88810da310a8 by task repro_upstream\/1642\n\n   Call Trace:\n   <TASK>\n   kasan_report (mm\/kasan\/report.c:590)\n   ib_destroy_qp_user (drivers\/infiniband\/core\/verbs.c:2073)\n   mlx5r_umr_resource_cleanup (drivers\/infiniband\/hw\/mlx5\/umr.c:198)\n   __mlx5_ib_add (drivers\/infiniband\/hw\/mlx5\/main.c:4178)\n   mlx5r_probe (drivers\/infiniband\/hw\/mlx5\/main.c:4402)\n   ...\n   <\/TASK>\n\n   Allocated by task 1642:\n   __kmalloc (.\/include\/linux\/kasan.h:198 mm\/slab_common.c:1026\n   mm\/slab_common.c:1039)\n   create_qp (.\/include\/linux\/slab.h:603 .\/include\/linux\/slab.h:720\n   .\/include\/rdma\/ib_verbs.h:2795 drivers\/infiniband\/core\/verbs.c:1209)\n   ib_create_qp_kernel (drivers\/infiniband\/core\/verbs.c:1347)\n   mlx5r_umr_resource_init (drivers\/infiniband\/hw\/mlx5\/umr.c:164)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers\/infiniband\/hw\/mlx5\/main.c:4070)\n   __mlx5_ib_add (drivers\/infiniband\/hw\/mlx5\/main.c:4168)\n   mlx5r_probe (drivers\/infiniband\/hw\/mlx5\/main.c:4402)\n   ...\n\n   Freed by task 1642:\n   __kmem_cache_free (mm\/slub.c:1826 mm\/slub.c:3809 mm\/slub.c:3822)\n   ib_destroy_qp_user (drivers\/infiniband\/core\/verbs.c:2112)\n   mlx5r_umr_resource_cleanup (drivers\/infiniband\/hw\/mlx5\/umr.c:198)\n   mlx5_ib_stage_post_ib_reg_umr_init (drivers\/infiniband\/hw\/mlx5\/main.c:4076\n   drivers\/infiniband\/hw\/mlx5\/main.c:4065)\n   __mlx5_ib_add (drivers\/infiniband\/hw\/mlx5\/main.c:4168)\n   mlx5r_probe (drivers\/infiniband\/hw\/mlx5\/main.c:4402)\n   ..."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2ef422f063b74adcc4a4a9004b0a87bb55e0a836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/437f033e30c897bb3723eac9e9003cd9f88d00a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f4a7a7d1404297f2a92df0046f7e64dc5c52dd9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6387f269d84e6e149499408c4d1fc805017729b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52852","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.227","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nf2fs: compress: fix to avoid use-after-free on dic\n\nCall trace:\n __memcpy+0x128\/0x250\n f2fs_read_multi_pages+0x940\/0xf7c\n f2fs_mpage_readpages+0x5a8\/0x624\n f2fs_readahead+0x5c\/0x110\n page_cache_ra_unbounded+0x1b8\/0x590\n do_sync_mmap_readahead+0x1dc\/0x2e4\n filemap_fault+0x254\/0xa8c\n f2fs_filemap_fault+0x2c\/0x104\n __do_fault+0x7c\/0x238\n do_handle_mm_fault+0x11bc\/0x2d14\n do_mem_abort+0x3a8\/0x1004\n el0_da+0x3c\/0xa0\n el0t_64_sync_handler+0xc4\/0xec\n el0t_64_sync+0x1b4\/0x1b8\n\nIn f2fs_read_multi_pages(), once f2fs_decompress_cluster() was called if\nwe hit cached page in compress_inode's cache, dic may be released, it needs\nbreak the loop rather than continuing it, in order to avoid accessing\ninvalid dic pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/8c4504cc0c64862740a6acb301e0cfa59580dbc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/932ddb5c29e884cc6fac20417ece72ba4a35c401","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9375ea7f269093d7c884857ae1f47633a91f429c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9d065aa52b6ee1b06f9c4eca881c9b4425a12ba2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0327c84e91a0f4f0abced8cb83ec86a7083f086","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52853","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.303","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhid: cp2112: Fix duplicate workqueue initialization\n\nPreviously the cp2112 driver called INIT_DELAYED_WORK within\ncp2112_gpio_irq_startup, resulting in duplicate initilizations of the\nworkqueue on subsequent IRQ startups following an initial request. This\nresulted in a warning in set_work_data in workqueue.c, as well as a rare\nNULL dereference within process_one_work in workqueue.c.\n\nInitialize the workqueue within _probe instead."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/012d0c66f9392a99232ac28217229f32dd3a70cf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3d959406c8fff2334d83d0c352d54fd6f5b2e7cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/727203e6e7e7020e1246fc1628cbdb8d90177819","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bafb12b629b7c3ad59812dd1ac1b0618062e0e38","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df0daac2709473531d6a3472997cc65301ac06d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e3c2d2d144c082dd71596953193adf9891491f42","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eb1121fac7986b30915ba20c5a04cc01fdcf160c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb5718bc67337dde1528661f419ffcf275757592","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52854","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.377","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npadata: Fix refcnt handling in padata_free_shell()\n\nIn a high-load arm64 environment, the pcrypt_aead01 test in LTP can lead\nto system UAF (Use-After-Free) issues. Due to the lengthy analysis of\nthe pcrypt_aead01 function call, I'll describe the problem scenario\nusing a simplified model:\n\nSuppose there's a user of padata named `user_function` that adheres to\nthe padata requirement of calling `padata_free_shell` after `serial()`\nhas been invoked, as demonstrated in the following code:\n\n```c\nstruct request {\n    struct padata_priv padata;\n    struct completion *done;\n};\n\nvoid parallel(struct padata_priv *padata) {\n    do_something();\n}\n\nvoid serial(struct padata_priv *padata) {\n    struct request *request = container_of(padata,\n    \t\t\t\tstruct request,\n\t\t\t\tpadata);\n    complete(request->done);\n}\n\nvoid user_function() {\n    DECLARE_COMPLETION(done)\n    padata->parallel = parallel;\n    padata->serial = serial;\n    padata_do_parallel();\n    wait_for_completion(&done);\n    padata_free_shell();\n}\n```\n\nIn the corresponding padata.c file, there's the following code:\n\n```c\nstatic void padata_serial_worker(struct work_struct *serial_work) {\n    ...\n    cnt = 0;\n\n    while (!list_empty(&local_list)) {\n        ...\n        padata->serial(padata);\n        cnt++;\n    }\n\n    local_bh_enable();\n\n    if (refcount_sub_and_test(cnt, &pd->refcnt))\n        padata_free_pd(pd);\n}\n```\n\nBecause of the high system load and the accumulation of unexecuted\nsoftirq at this moment, `local_bh_enable()` in padata takes longer\nto execute than usual. Subsequently, when accessing `pd->refcnt`,\n`pd` has already been released by `padata_free_shell()`, resulting\nin a UAF issue with `pd->refcnt`.\n\nThe fix is straightforward: add `refcount_dec_and_test` before calling\n`padata_free_pd` in `padata_free_shell`."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0dd34a7ad395dbcf6ae60e48e9786050e25b9bc5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1734a79e951914f1db2c65e635012a35db1c674b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1e901bcb8af19416b65f5063a4af7996e5a51d7f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/41aad9d6953984d134fc50f631f24ef476875d4d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7ddc21e317b360c3444de3023bcc83b85fabae2f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c7c26d0ef5d20f00dbb2ae3befcabbe0efa77275","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52855","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.453","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc2: fix possible NULL pointer dereference caused by driver concurrency\n\nIn _dwc2_hcd_urb_enqueue(), \"urb->hcpriv = NULL\" is executed without\nholding the lock \"hsotg->lock\". In _dwc2_hcd_urb_dequeue():\n\n    spin_lock_irqsave(&hsotg->lock, flags);\n    ...\n\tif (!urb->hcpriv) {\n\t\tdev_dbg(hsotg->dev, \"## urb->hcpriv is NULL ##\\n\");\n\t\tgoto out;\n\t}\n    rc = dwc2_hcd_urb_dequeue(hsotg, urb->hcpriv); \/\/ Use urb->hcpriv\n    ...\nout:\n    spin_unlock_irqrestore(&hsotg->lock, flags);\n\nWhen _dwc2_hcd_urb_enqueue() and _dwc2_hcd_urb_dequeue() are\nconcurrently executed, the NULL check of \"urb->hcpriv\" can be executed\nbefore \"urb->hcpriv = NULL\". After urb->hcpriv is NULL, it can be used\nin the function call to dwc2_hcd_urb_dequeue(), which can cause a NULL\npointer dereference.\n\nThis possible bug is found by an experimental static analysis tool\ndeveloped by myself. This tool analyzes the locking APIs to extract\nfunction pairs that can be concurrently executed, and then analyzes the\ninstructions in the paired functions to identify possible concurrency\nbugs including data races and atomicity violations. The above possible\nbug is reported, when my tool analyzes the source code of Linux 6.5.\n\nTo fix this possible bug, \"urb->hcpriv = NULL\" should be executed with\nholding the lock \"hsotg->lock\". After using this patch, my tool never\nreports the possible bug, with the kernelconfiguration allyesconfig for\nx86_64. Because I have no associated hardware, I cannot test the patch\nin runtime testing, and just verify it according to the code logic."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/14c9ec34e8118fbffd7f5431814d767726323e72","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3e851a77a13ce944d703721793f49ee82622986d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/64c47749fc7507ed732e155c958253968c1d275e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6b21a22728852d020a6658d39cd7bb7e14b07790","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a7bee9598afb38004841a41dd8fe68c1faff4e90","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bdb3dd4096302d6b87441fdc528439f171b04be6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ef307bc6ef04e8c1ea843231db58e3afaafa9fa6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcaafb574fc88a52dce817f039f7ff2f9da38001","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fed492aa6493a91a77ebd51da6fb939c98d94a0d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52856","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.727","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/bridge: lt8912b: Fix crash on bridge detach\n\nThe lt8912b driver, in its bridge detach function, calls\ndrm_connector_unregister() and drm_connector_cleanup().\n\ndrm_connector_unregister() should be called only for connectors\nexplicitly registered with drm_connector_register(), which is not the\ncase in lt8912b.\n\nThe driver's drm_connector_funcs.destroy hook is set to\ndrm_connector_cleanup().\n\nThus the driver should not call either drm_connector_unregister() nor\ndrm_connector_cleanup() in its lt8912_bridge_detach(), as they cause a\ncrash on bridge detach:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000000\nMem abort info:\n  ESR = 0x0000000096000006\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x06: level 2 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000006, ISS2 = 0x00000000\n  CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n  GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=00000000858f3000\n[0000000000000000] pgd=0800000085918003, p4d=0800000085918003, pud=0800000085431003, pmd=0000000000000000\nInternal error: Oops: 0000000096000006 [#1] PREEMPT SMP\nModules linked in: tidss(-) display_connector lontium_lt8912b tc358768 panel_lvds panel_simple drm_dma_helper drm_kms_helper drm drm_panel_orientation_quirks\nCPU: 3 PID: 462 Comm: rmmod Tainted: G        W          6.5.0-rc2+ #2\nHardware name: Toradex Verdin AM62 on Verdin Development Board (DT)\npstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : drm_connector_cleanup+0x78\/0x2d4 [drm]\nlr : lt8912_bridge_detach+0x54\/0x6c [lontium_lt8912b]\nsp : ffff800082ed3a90\nx29: ffff800082ed3a90 x28: ffff0000040c1940 x27: 0000000000000000\nx26: 0000000000000000 x25: dead000000000122 x24: dead000000000122\nx23: dead000000000100 x22: ffff000003fb6388 x21: 0000000000000000\nx20: 0000000000000000 x19: ffff000003fb6260 x18: fffffffffffe56e8\nx17: 0000000000000000 x16: 0010000000000000 x15: 0000000000000038\nx14: 0000000000000000 x13: ffff800081914b48 x12: 000000000000040e\nx11: 000000000000015a x10: ffff80008196ebb8 x9 : ffff800081914b48\nx8 : 00000000ffffefff x7 : ffff0000040c1940 x6 : ffff80007aa649d0\nx5 : 0000000000000000 x4 : 0000000000000001 x3 : ffff80008159e008\nx2 : 0000000000000000 x1 : 0000000000000000 x0 : 0000000000000000\nCall trace:\n drm_connector_cleanup+0x78\/0x2d4 [drm]\n lt8912_bridge_detach+0x54\/0x6c [lontium_lt8912b]\n drm_bridge_detach+0x44\/0x84 [drm]\n drm_encoder_cleanup+0x40\/0xb8 [drm]\n drmm_encoder_alloc_release+0x1c\/0x30 [drm]\n drm_managed_release+0xac\/0x148 [drm]\n drm_dev_put.part.0+0x88\/0xb8 [drm]\n devm_drm_dev_init_release+0x14\/0x24 [drm]\n devm_action_release+0x14\/0x20\n release_nodes+0x5c\/0x90\n devres_release_all+0x8c\/0xe0\n device_unbind_cleanup+0x18\/0x68\n device_release_driver_internal+0x208\/0x23c\n driver_detach+0x4c\/0x94\n bus_remove_driver+0x70\/0xf4\n driver_unregister+0x30\/0x60\n platform_driver_unregister+0x14\/0x20\n tidss_platform_driver_exit+0x18\/0xb2c [tidss]\n __arm64_sys_delete_module+0x1a0\/0x2b4\n invoke_syscall+0x48\/0x110\n el0_svc_common.constprop.0+0x60\/0x10c\n do_el0_svc_compat+0x1c\/0x40\n el0_svc_compat+0x40\/0xac\n el0t_32_sync_handler+0xb0\/0x138\n el0t_32_sync+0x194\/0x198\nCode: 9104a276 f2fbd5b7 aa0203e1 91008af8 (f85c0420)"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/42071feab712ba2a139b8928f7e0f8d3a6fc719e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44283993144a03af9df31934d6c32bbd42d1a347","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7bf0cb8f40280a85034990dfe42be8ca8f80f37a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b65e3249f3ca96e3c736af889461d80d675feab6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fcd9895e365474709844eeb31cfe53d912c3596e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52857","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.803","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/mediatek: Fix coverity issue with unintentional integer overflow\n\n1. Instead of multiplying 2 variable of different types. Change to\nassign a value of one variable and then multiply the other variable.\n\n2. Add a int variable for multiplier calculation instead of calculating\ndifferent types multiplier with dma_addr_t variable directly."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d8a1df39d3fc34560e2cc663b5c340d06a25396","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96312a251d4dcee5d36e32edba3002bfde0ddd9c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b0b0d811eac6b4c52cb9ad632fa6384cf48869e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52858","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.867","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt7629: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1d89430fc3158f872d492f1b88d07262f48290c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2befa515c1bb6cdd33c262b909d93d1973a219aa","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4f861b63945e076f9f003a5fad958174096df1ee","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5fbea47eebff5daeca7d918c99289bcd3ae4dc8d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a836efc21ef04608333d6d05753e558ebd1f85d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e8ae4b49dd9cfde69d8de8c0c0cd7cf1b004482e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e964d21dc034b650d719c4ea39564bec72b42f94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52859","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:22.933","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nperf: hisi: Fix use-after-free when register pmu fails\n\nWhen we fail to register the uncore pmu, the pmu context may not been\nallocated. The error handing will call cpuhp_state_remove_instance()\nto call uncore pmu offline callback, which migrate the pmu context.\nSince that's liable to lead to some kind of use-after-free.\n\nUse cpuhp_state_remove_instance_nocalls() instead of\ncpuhp_state_remove_instance() so that the notifiers don't execute after\nthe PMU device has been failed to register."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0e1e88bba286621b886218363de07b319d6208b2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3405f364f82d4f5407a8b4c519dc15d24b847fda","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/75bab28ffd05ec8879c197890b1bd1dfec8d3f63","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b660420f449d094b1fabfa504889810b3a63cdd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b805cafc604bfdb671fae7347a57f51154afa735","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52860","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.003","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrivers\/perf: hisi: use cpuhp_state_remove_instance_nocalls() for hisi_hns3_pmu uninit process\n\nWhen tearing down a 'hisi_hns3' PMU, we mistakenly run the CPU hotplug\ncallbacks after the device has been unregistered, leading to fireworks\nwhen we try to execute empty function callbacks within the driver:\n\n  | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  | CPU: 0 PID: 15 Comm: cpuhp\/0 Tainted: G        W  O      5.12.0-rc4+ #1\n  | Hardware name:  , BIOS KpxxxFPGA 1P B600 V143 04\/22\/2021\n  | pstate: 80400009 (Nzcv daif +PAN -UAO -TCO BTYPE=--)\n  | pc : perf_pmu_migrate_context+0x98\/0x38c\n  | lr : perf_pmu_migrate_context+0x94\/0x38c\n  |\n  | Call trace:\n  |  perf_pmu_migrate_context+0x98\/0x38c\n  |  hisi_hns3_pmu_offline_cpu+0x104\/0x12c [hisi_hns3_pmu]\n\nUse cpuhp_state_remove_instance_nocalls() instead of\ncpuhp_state_remove_instance() so that the notifiers don't execute after\nthe PMU device has been unregistered.\n\n[will: Rewrote commit message]"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/3f5827371763f2d9c70719c270055a81d030f3d0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4589403a343bb0c72a6faf5898386ff964d4e01a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/50b560783f7f71790bcf70e9e9855155fb0af8c1","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d04ff5437a45f275db5530efb49b68d0ec851f6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52861","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.073","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm: bridge: it66121: Fix invalid connector dereference\n\nFix the NULL pointer dereference when no monitor is connected, and the\nsound card is opened from userspace.\n\nInstead return an empty buffer (of zeroes) as the EDID information to\nthe sound framework if there is no connector attached."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1374561a7cbc9a000b77bb0473bb2c19daf18d86","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1669d7b21a664aa531856ce85b01359a376baebc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2c80c4f0d2845645f41cbb7c9304c8efbdbd4331","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d0375f6858c4ff7244b62b02eb5e93428e1916cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52862","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.150","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/amd\/display: Fix null pointer dereference in error message\n\nThis patch fixes a null pointer dereference in the error message that is\nprinted when the Display Core (DC) fails to initialize. The original\nmessage includes the DC version number, which is undefined if the DC is\nnot initialized."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0c3601a2fbfb265ce283651480e30c8e60459112","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8b72c5d4a5d25e76b16283397c40b8b3c0d70019","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/97ef07182ac46b069bb5e7d46cb903a764d67898","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52863","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.233","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (axi-fan-control) Fix possible NULL pointer dereference\n\naxi_fan_control_irq_handler(), dependent on the private\naxi_fan_control_data structure, might be called before the hwmon\ndevice is registered. That will cause an \"Unable to handle kernel\nNULL pointer dereference\" error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2a5b3370a1d9750eca325292e291c8c7cb8cf2e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/33de53a2706066d526173dc743faf43d92c62105","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7d870088db4863c514a7f8751cd593751983029a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b3e7eb23a6e97642ff3190431c06475d9ca1e062","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c49f14cc1bb12c625a1c572e8a95b6adefd4d8eb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f62b8969847850ba7596cb145cc47c65ea57dae0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52864","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.317","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nplatform\/x86: wmi: Fix opening of char device\n\nSince commit fa1f68db6ca7 (\"drivers: misc: pass miscdevice pointer via\nfile private data\"), the miscdevice stores a pointer to itself inside\nfilp->private_data, which means that private_data will not be NULL when\nwmi_char_open() is called. This might cause memory corruption should\nwmi_char_open() be unable to find its driver, something which can\nhappen when the associated WMI device is deleted in wmi_free_devices().\n\nFix the problem by using the miscdevice pointer to retrieve the WMI\ndevice data associated with a char device using container_of(). This\nalso avoids wmi_char_open() picking a wrong WMI device bound to a\ndriver with the same name as the original driver."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/36d85fa7ae0d6be651c1a745191fa7ef055db43e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/44a96796d25809502c75771d40ee693c2e44724e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9fb0eed09e1470cd4021ff52b2b9dfcbcee4c203","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cf098e937dd125c0317a0d6f261ac2a950a233d6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d426a2955e45a95b2282764105fcfb110a540453","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e0bf076b734a2fab92d8fddc2b8b03462eee7097","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/eba9ac7abab91c8f6d351460239108bef5e7a0b6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fb7b06b59c6887659c6ed0ecd3110835eecbb6a3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52865","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.403","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6797: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/122ac6496e4975ddd7ec1edba4f6fc1e15e39478","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2705c5b97f504e831ae1935c05f0e44f80dfa6b3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/357df1c2f6ace96defd557fad709ed1f9f70e16c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3aefc6fcfbada57fac27f470602d5565e5b76cb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/4c79cbfb8e9e2311be77182893fda5ea4068c836","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/606f6366a35a3329545e38129804d65ef26ed7d2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81b16286110728674dcf81137be0687c5055e7bf","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/be3f12f16038a558f08fa93cc32fa715746a5235","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c26feedbc561f2a3cee1a4f717e61bdbdfb4fa92","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52866","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.480","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nHID: uclogic: Fix user-memory-access bug in uclogic_params_ugee_v2_init_event_hooks()\n\nWhen CONFIG_HID_UCLOGIC=y and CONFIG_KUNIT_ALL_TESTS=y, launch kernel and\nthen the below user-memory-access bug occurs.\n\nIn hid_test_uclogic_params_cleanup_event_hooks(),it call\nuclogic_params_ugee_v2_init_event_hooks() with the first arg=NULL, so\nwhen it calls uclogic_params_ugee_v2_has_battery(), the hid_get_drvdata()\nwill access hdev->dev with hdev=NULL, which will cause below\nuser-memory-access.\n\nSo add a fake_device with quirks member and call hid_set_drvdata()\nto assign hdev->dev->driver_data which avoids the null-ptr-def bug\nfor drvdata->quirks in uclogic_params_ugee_v2_has_battery(). After applying\nthis patch, the below user-memory-access bug never occurs.\n\n general protection fault, probably for non-canonical address 0xdffffc0000000329: 0000 [#1] PREEMPT SMP KASAN\n KASAN: probably user-memory-access in range [0x0000000000001948-0x000000000000194f]\n CPU: 5 PID: 2189 Comm: kunit_try_catch Tainted: G    B   W        N 6.6.0-rc2+ #30\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04\/01\/2014\n RIP: 0010:uclogic_params_ugee_v2_init_event_hooks+0x87\/0x600\n Code: f3 f3 65 48 8b 14 25 28 00 00 00 48 89 54 24 60 31 d2 48 89 fa c7 44 24 30 00 00 00 00 48 c7 44 24 28 02 f8 02 01 48 c1 ea 03 <80> 3c 02 00 0f 85 2c 04 00 00 48 8b 9d 48 19 00 00 48 b8 00 00 00\n RSP: 0000:ffff88810679fc88 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: 0000000000000004 RCX: 0000000000000000\n RDX: 0000000000000329 RSI: ffff88810679fd88 RDI: 0000000000001948\n RBP: 0000000000000000 R08: 0000000000000000 R09: ffffed1020f639f0\n R10: ffff888107b1cf87 R11: 0000000000000400 R12: 1ffff11020cf3f92\n R13: ffff88810679fd88 R14: ffff888100b97b08 R15: ffff8881030bb080\n FS:  0000000000000000(0000) GS:ffff888119e80000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000000005286001 CR4: 0000000000770ee0\n DR0: ffffffff8fdd6cf4 DR1: ffffffff8fdd6cf5 DR2: ffffffff8fdd6cf6\n DR3: ffffffff8fdd6cf7 DR6: 00000000fffe0ff0 DR7: 0000000000000600\n PKRU: 55555554\n Call Trace:\n  <TASK>\n  ? die_addr+0x3d\/0xa0\n  ? exc_general_protection+0x144\/0x220\n  ? asm_exc_general_protection+0x22\/0x30\n  ? uclogic_params_ugee_v2_init_event_hooks+0x87\/0x600\n  ? sched_clock_cpu+0x69\/0x550\n  ? uclogic_parse_ugee_v2_desc_gen_params+0x70\/0x70\n  ? load_balance+0x2950\/0x2950\n  ? rcu_trc_cmpxchg_need_qs+0x67\/0xa0\n  hid_test_uclogic_params_cleanup_event_hooks+0x9e\/0x1a0\n  ? uclogic_params_ugee_v2_init_event_hooks+0x600\/0x600\n  ? __switch_to+0x5cf\/0xe60\n  ? migrate_enable+0x260\/0x260\n  ? __kthread_parkme+0x83\/0x150\n  ? kunit_try_run_case_cleanup+0xe0\/0xe0\n  kunit_generic_run_threadfn_adapter+0x4a\/0x90\n  ? kunit_try_catch_throw+0x80\/0x80\n  kthread+0x2b5\/0x380\n  ? kthread_complete_and_exit+0x20\/0x20\n  ret_from_fork+0x2d\/0x70\n  ? kthread_complete_and_exit+0x20\/0x20\n  ret_from_fork_asm+0x11\/0x20\n  <\/TASK>\n Modules linked in:\n Dumping ftrace buffer:\n    (ftrace buffer empty)\n ---[ end trace 0000000000000000 ]---\n RIP: 0010:uclogic_params_ugee_v2_init_event_hooks+0x87\/0x600\n Code: f3 f3 65 48 8b 14 25 28 00 00 00 48 89 54 24 60 31 d2 48 89 fa c7 44 24 30 00 00 00 00 48 c7 44 24 28 02 f8 02 01 48 c1 ea 03 <80> 3c 02 00 0f 85 2c 04 00 00 48 8b 9d 48 19 00 00 48 b8 00 00 00\n RSP: 0000:ffff88810679fc88 EFLAGS: 00010202\n RAX: dffffc0000000000 RBX: 0000000000000004 RCX: 0000000000000000\n RDX: 0000000000000329 RSI: ffff88810679fd88 RDI: 0000000000001948\n RBP: 0000000000000000 R08: 0000000000000000 R09: ffffed1020f639f0\n R10: ffff888107b1cf87 R11: 0000000000000400 R12: 1ffff11020cf3f92\n R13: ffff88810679fd88 R14: ffff888100b97b08 R15: ffff8881030bb080\n FS:  0000000000000000(0000) GS:ffff888119e80000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000000 CR3: 0000000005286001 CR4: 0000000000770ee0\n DR0: ffffffff8fdd6cf4 DR1: \n---truncated---"}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/64da1f6147dac7f8499d4937a0d7ea990bf569e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6c8f953728d75104d994893f58801c457274335a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/91cfe0bbaa1c434d4271eb6e1d7aaa1fe8d121f6","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52867","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.597","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ndrm\/radeon: possible buffer overflow\n\nBuffer 'afmt_status' of size 6 could overflow, since index 'afmt_idx' is\nchecked after access."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/112d4b02d94bf9fa4f1d3376587878400dd74783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/19534a7a225f1bf2da70a9a90d41d0215f8f6b45","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/341e79f8aec6af6b0061b8171d77b085835c6a58","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/347f025a02b3a5d715a0b471fc3b1439c338ad94","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/7b063c93bece827fde237fae1c101bceeee4e896","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/caaa74541459c4c9e2c10046cf66ad2890483d0f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d9b4fa249deaae1145d6fc2b64dae718e5c7a855","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd05484f99d16715a88eedfca363828ef9a4c2d4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ddc42881f170f1f518496f5a70447501335fc783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52868","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.673","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: core: prevent potential string overflow\n\nThe dev->id value comes from ida_alloc() so it's a number between zero\nand INT_MAX.  If it's too high then these sprintf()s will overflow."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0f6b3be28c4d62ef6498133959c72266629bea97","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3091ab943dfc7b2578599b0fe203350286fab5bb","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a8f4e58e1ee707b4f46a1000b40b86ea3dd509c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3f795fb35c2d8a637efe76b4518216c9319b998c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6ad1bf47fbe5750c4d5d8e41337665e193e2c521","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/77ff34a56b695e228e6daf30ee30be747973d6e8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b55f0a9f865be75ca1019aad331f3225f7b50ce8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c99626092efca3061b387043d4a7399bf75fbdd5","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/edbd6bbe40ac524a8f2273ffacc53edf14f3c686","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52869","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.750","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\npstore\/platform: Add check for kstrdup\n\nAdd check for the return value of kstrdup() and return the error\nif it fails in order to avoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1c426da79f9fc7b761021b5eb44185ba119cd44a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/379b120e4f27fd1cf636a5f85570c4d240a3f688","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/63f637309baadf81a095f2653e3b807d4b5814b9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a19d48f7c5d57c0f0405a7d4334d1d38fe9d3c1c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ad5cb6deb41417ef41b9d6ff54f789212108606f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb166bdae1a7d7db30e9be7e6ccaba606debc05f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52870","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.833","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6765: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/10cc81124407d862f0f747db4baa9c006510b480","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2617aa8ceaf30e41d3eb7f5fef3445542bef193a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/533ca5153ad6c7b7d47ae0114b14d0333964b946","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b5ff3e89b4e7f46ad2aa0de7e08d18e6f87d71bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b82681042724924ae3ba0f2f2eeec217fa31e830","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/dd1f30d68fa98eb672c0a259297b761656a9025f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52871","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.907","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: qcom: llcc: Handle a second device without data corruption\n\nUsually there is only one llcc device. But if there were a second, even\na failed probe call would modify the global drv_data pointer. So check\nif drv_data is valid before overwriting it."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1143bfb9b055897975aeaea254da148e19524493","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3565684309e54fa998ea27f37028d67cc3e1dff2","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5e5b85ea0f4bc484bfe4cc73ead51fa48d2366a0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/995ee1e84e8db7fa5dcdde7dfe0bd7bb6f9bbb8c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cc1a1dcb411fe224f48553cfdcdfe6e61395b69c","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f0ef883cae309bc5e8cdfcdbc1b4822732ce20a8","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f1a1bc8775b26345aba2be278118999e7f661d3d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52872","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:23.990","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntty: n_gsm: fix race condition in status line change on dead connections\n\ngsm_cleanup_mux() cleans up the gsm by closing all DLCIs, stopping all\ntimers, removing the virtual tty devices and clearing the data queues.\nThis procedure, however, may cause subsequent changes of the virtual modem\nstatus lines of a DLCI. More data is being added the outgoing data queue\nand the deleted kick timer is restarted to handle this. At this point many\nresources have already been removed by the cleanup procedure. Thus, a\nkernel panic occurs.\n\nFix this by proving in gsm_modem_update() that the cleanup procedure has\nnot been started and the mux is still alive.\n\nNote that writing to a virtual tty is already protected by checks against\nthe DLCI specific connection state."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/19d34b73234af542cc8a218cf398dee73cdb1890","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3a75b205de43365f80a33b98ec9289785da56243","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/81a4dd5e6c78f5d8952fa8c9d36565db1fe01444","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ce4df90333c4fe65acb8b5089fdfe9b955ce976a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df6cfab66ff2a44bd23ad5dd5309cb3421bb6593","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52873","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.080","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt6779: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/1f57f78fbacf630430bf954e5a84caafdfea30c0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/3994387ba3564976731179c4d4a6d7850ddda71a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a90239551abc181687f8c0ba60b276f7d75c141e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/ca6d565a2319d69d9766e6ecbb5af827fc4afb2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/df1c4a9efa3f5b6fb5e0ae63890230dbe2190b7e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/f6a7c51cf07a399ec067d39f0a22f1817c5c7d2b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/fbe466f06d4ea18745da0d57540539b7b36936ae","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52874","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.157","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nx86\/tdx: Zero out the missing RSI in TDX_HYPERCALL macro\n\nIn the TDX_HYPERCALL asm, after the TDCALL instruction returns from the\nuntrusted VMM, the registers that the TDX guest shares to the VMM need\nto be cleared to avoid speculative execution of VMM-provided values.\n\nRSI is specified in the bitmap of those registers, but it is missing\nwhen zeroing out those registers in the current TDX_HYPERCALL.\n\nIt was there when it was originally added in commit 752d13305c78\n(\"x86\/tdx: Expand __tdx_hypercall() to handle more arguments\"), but was\nlater removed in commit 1e70c680375a (\"x86\/tdx: Do not corrupt\nframe-pointer in __tdx_hypercall()\"), which was correct because %rsi is\nlater restored in the \"pop %rsi\".  However a later commit 7a3a401874be\n(\"x86\/tdx: Drop flags from __tdx_hypercall()\") removed that \"pop %rsi\"\nbut forgot to add the \"xor %rsi, %rsi\" back.\n\nFix by adding it back."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2191950d35d8f81620ea8d4e04d983f664fe3a8a","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/5d092b66119d774853cc9308522620299048a662","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/de4c5bacca4f50233f1f791bec9eeb4dee1b14cd","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52875","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.227","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt2701: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/001e5def774fa1a8f2b29567c0b0cd3e3a859a96","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/0d6e24b422a2166a9297a8286ff2e6ab9a5e8cd3","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1953e62366da5460dc712e045f94fb0d8918999d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1bf9c204aef4cc55ce46a7ff2d4dc7e5f86551a7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2a18dd653284550900b02107c3c7b3ac5e0eb802","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6fccee2af400edaed9cf349d506c5971d4762739","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1175cf4bd2b4c5f7c43f677ea1ce9ad2c18d055","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/d1461f0c9ca0827c03730fe9652ebbf6316a2a95","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e61934720af4a58ffd43a63ffdd6f3a0bd7d7b47","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52876","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.297","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nclk: mediatek: clk-mt7629-eth: Add check for mtk_alloc_clk_data\n\nAdd the check for the return value of mtk_alloc_clk_data() in order to\navoid NULL pointer dereference."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0884393c63cc9a1772f7121a6645ba7bd76feeb9","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/1639072f6260babd017556e9f236ca2ad589d1e7","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/96e9544a0c4faca616b3f9f4034dcd83a14e7f22","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a540ca0aeae83c2f3964bcb4e383f64ce2ec1783","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b20cfe007a46f8c165d42a05c50a8d3d893e6592","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/c4070ada5d5155c8d4d17ea64bd246949889f25b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cfa68e0ac5dcde43577adadf6f0f26f3b365ad68","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52877","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.377","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: tcpm: Fix NULL pointer dereference in tcpm_pd_svdm()\n\nIt is possible that typec_register_partner() returns ERR_PTR on failure.\nWhen port->partner is an error, a NULL pointer dereference may occur as\nshown below.\n\n[91222.095236][  T319] typec port0: failed to register partner (-17)\n...\n[91225.061491][  T319] Unable to handle kernel NULL pointer dereference\nat virtual address 000000000000039f\n[91225.274642][  T319] pc : tcpm_pd_data_request+0x310\/0x13fc\n[91225.274646][  T319] lr : tcpm_pd_data_request+0x298\/0x13fc\n[91225.308067][  T319] Call trace:\n[91225.308070][  T319]  tcpm_pd_data_request+0x310\/0x13fc\n[91225.308073][  T319]  tcpm_pd_rx_handler+0x100\/0x9e8\n[91225.355900][  T319]  kthread_worker_fn+0x178\/0x58c\n[91225.355902][  T319]  kthread+0x150\/0x200\n[91225.355905][  T319]  ret_from_fork+0x10\/0x30\n\nAdd a check for port->partner to avoid dereferencing a NULL pointer."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/4987daf86c152ff882d51572d154ad12e4ff3a4b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9ee038590d808a95d16adf92818dcd4752273c08","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/b37a168c0137156042a0ca9626651b5a789e822b","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e5f53a68a596e04df3fde3099273435a30b6fdac","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/e7a802447c491903aa7cb45967aa2a934a4e63fc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52878","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.450","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ncan: dev: can_put_echo_skb(): don't crash kernel if can_priv::echo_skb is accessed out of bounds\n\nIf the \"struct can_priv::echoo_skb\" is accessed out of bounds, this\nwould cause a kernel crash. Instead, issue a meaningful warning\nmessage and return with an error."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/0d30931f1fa0fb893fb7d5dc32b6b7edfb775be4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/53c468008a7c9ca3f5fc985951f35ec2acae85bc","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/6411959c10fe917288cbb1038886999148560057","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/826120c9ba68f2d0dbae58e99013929c883d1444","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/8ab67da060157362b2e0926692c659808784708f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2023-52879","sourceIdentifier":"416baaa9-dc9f-4396-8d5f-8c081fb06d67","published":"2024-05-21T16:15:24.530","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Have trace_event_file have ref counters\n\nThe following can crash the kernel:\n\n # cd \/sys\/kernel\/tracing\n # echo 'p:sched schedule' > kprobe_events\n # exec 5>>events\/kprobes\/sched\/enable\n # > kprobe_events\n # exec 5>&-\n\nThe above commands:\n\n 1. Change directory to the tracefs directory\n 2. Create a kprobe event (doesn't matter what one)\n 3. Open bash file descriptor 5 on the enable file of the kprobe event\n 4. Delete the kprobe event (removes the files too)\n 5. Close the bash file descriptor 5\n\nThe above causes a crash!\n\n BUG: kernel NULL pointer dereference, address: 0000000000000028\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: 0000 [#1] PREEMPT SMP PTI\n CPU: 6 PID: 877 Comm: bash Not tainted 6.5.0-rc4-test-00008-g2c6b6b1029d4-dirty #186\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04\/01\/2014\n RIP: 0010:tracing_release_file_tr+0xc\/0x50\n\nWhat happens here is that the kprobe event creates a trace_event_file\n\"file\" descriptor that represents the file in tracefs to the event. It\nmaintains state of the event (is it enabled for the given instance?).\nOpening the \"enable\" file gets a reference to the event \"file\" descriptor\nvia the open file descriptor. When the kprobe event is deleted, the file is\nalso deleted from the tracefs system which also frees the event \"file\"\ndescriptor.\n\nBut as the tracefs file is still opened by user space, it will not be\ntotally removed until the final dput() is called on it. But this is not\ntrue with the event \"file\" descriptor that is already freed. If the user\ndoes a write to or simply closes the file descriptor it will reference the\nevent \"file\" descriptor that was just freed, causing a use-after-free bug.\n\nTo solve this, add a ref count to the event \"file\" descriptor as well as a\nnew flag called \"FREED\". The \"file\" will not be freed until the last\nreference is released. But the FREE flag will be set when the event is\nremoved to prevent any more modifications to that event from happening,\neven if there's still a reference to the event \"file\" descriptor."}],"metrics":{},"references":[{"url":"https:\/\/git.kernel.org\/stable\/c\/2c9de867ca285c397cd71af703763fe416265706","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/2fa74d29fc1899c237d51bf9a6e132ea5c488976","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/9034c87d61be8cff989017740a91701ac8195a1d","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/961c4511c7578d6b8f39118be919016ec3db1c1e","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/a98172e36e5f1b3d29ad71fade2d611cfcc2fe6f","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/bb32500fb9b78215e4ef6ee8b4345c5f5d7eafb4","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"},{"url":"https:\/\/git.kernel.org\/stable\/c\/cbc7c29dff0fa18162f2a3889d82eeefd67305e0","source":"416baaa9-dc9f-4396-8d5f-8c081fb06d67"}]}},{"cve":{"id":"CVE-2024-1721","sourceIdentifier":"security@hypr.com","published":"2024-05-21T16:15:24.607","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"Improper Verification of Cryptographic Signature vulnerability in HYPR Passwordless on Windows allows Malicious Software Update.This issue affects HYPR Passwordless: before 9.1."}],"metrics":{},"weaknesses":[{"source":"security@hypr.com","type":"Secondary","description":[{"lang":"en","value":"CWE-347"}]}],"references":[{"url":"https:\/\/www.hypr.com\/trust-center\/security-advisories","source":"security@hypr.com"}]}},{"cve":{"id":"CVE-2024-21902","sourceIdentifier":"security@qnapsecurity.com.tw","published":"2024-05-21T16:15:24.743","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An incorrect permission assignment for critical resource vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow authenticated users to read or modify the resource via a network.\n\nWe have already fixed the vulnerability in the following version:\nQTS 5.1.7.2770 build 20240520 and later\nQuTS hero h5.1.7.2770 build 20240520 and later"}],"metrics":{"cvssMetricV31":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:L\/I:L\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"LOW","integrityImpact":"LOW","availabilityImpact":"NONE","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@qnapsecurity.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-200"},{"lang":"en","value":"CWE-732"}]}],"references":[{"url":"https:\/\/www.qnap.com\/en\/security-advisory\/qsa-24-23","source":"security@qnapsecurity.com.tw"}]}},{"cve":{"id":"CVE-2024-27127","sourceIdentifier":"security@qnapsecurity.com.tw","published":"2024-05-21T16:15:24.997","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A double free vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow authenticated users to execute arbitrary code via a network.\n\nWe have already fixed the vulnerability in the following version:\nQTS 5.1.7.2770 build 20240520 and later\nQuTS hero h5.1.7.2770 build 20240520 and later"}],"metrics":{"cvssMetricV31":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:N\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":2.7}]},"weaknesses":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","description":[{"lang":"en","value":"CWE-415"}]}],"references":[{"url":"https:\/\/www.qnap.com\/en\/security-advisory\/qsa-24-23","source":"security@qnapsecurity.com.tw"}]}},{"cve":{"id":"CVE-2024-27128","sourceIdentifier":"security@qnapsecurity.com.tw","published":"2024-05-21T16:15:25.230","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A buffer copy without checking size of input vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow authenticated users to execute code via a network.\n\nWe have already fixed the vulnerability in the following version:\nQTS 5.1.7.2770 build 20240520 and later\nQuTS hero h5.1.7.2770 build 20240520 and later"}],"metrics":{"cvssMetricV31":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:N\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@qnapsecurity.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-120"},{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/www.qnap.com\/en\/security-advisory\/qsa-24-23","source":"security@qnapsecurity.com.tw"}]}},{"cve":{"id":"CVE-2024-27129","sourceIdentifier":"security@qnapsecurity.com.tw","published":"2024-05-21T16:15:25.457","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A buffer copy without checking size of input vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow authenticated users to execute code via a network.\n\nWe have already fixed the vulnerability in the following version:\nQTS 5.1.7.2770 build 20240520 and later\nQuTS hero h5.1.7.2770 build 20240520 and later"}],"metrics":{"cvssMetricV31":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:C\/C:N\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":6.4,"baseSeverity":"MEDIUM"},"exploitabilityScore":3.1,"impactScore":2.7}]},"weaknesses":[{"source":"security@qnapsecurity.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-120"},{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/www.qnap.com\/en\/security-advisory\/qsa-24-23","source":"security@qnapsecurity.com.tw"}]}},{"cve":{"id":"CVE-2024-27130","sourceIdentifier":"security@qnapsecurity.com.tw","published":"2024-05-21T16:15:25.737","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"A buffer copy without checking size of input vulnerability has been reported to affect several QNAP operating system versions. If exploited, the vulnerability could allow users to execute code via a network.\n\nWe have already fixed the vulnerability in the following version:\nQTS 5.1.7.2770 build 20240520 and later\nQuTS hero h5.1.7.2770 build 20240520 and later"}],"metrics":{"cvssMetricV31":[{"source":"security@qnapsecurity.com.tw","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:N\/I:L\/A:L","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"NONE","integrityImpact":"LOW","availabilityImpact":"LOW","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":3.9,"impactScore":2.7}]},"weaknesses":[{"source":"security@qnapsecurity.com.tw","type":"Primary","description":[{"lang":"en","value":"CWE-120"},{"lang":"en","value":"CWE-121"}]}],"references":[{"url":"https:\/\/www.qnap.com\/en\/security-advisory\/qsa-24-23","source":"security@qnapsecurity.com.tw"}]}},{"cve":{"id":"CVE-2024-31840","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T16:15:25.943","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue was discovered in Italtel Embrace 1.6.4. The web application inserts cleartext passwords in the HTML source code. An authenticated user is able to edit the configuration of the email server. Once the user access the edit function, the web application fills the edit form with the current credentials for the email account, including the cleartext password."}],"metrics":{},"references":[{"url":"https:\/\/www.gruppotim.it\/it\/footer\/red-team.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-31844","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T16:15:26.027","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue was discovered in Italtel Embrace 1.6.4. The server does not properly handle application errors. In some cases, this leads to a disclosure of information about the server. An unauthenticated user is able craft specific requests in order to make the application generate an error. Inside an error message, some information about the server is revealed, such as the absolute path of the source code of the application. This kind of information can help an attacker to perform other attacks against the system. This can be exploited without authentication."}],"metrics":{},"references":[{"url":"https:\/\/www.gruppotim.it\/it\/footer\/red-team.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-31845","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T16:15:26.103","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue was discovered in Italtel Embrace 1.6.4. The product does not neutralize or incorrectly neutralizes output that is written to logs. The web application writes logs using a GET query string parameter. This parameter can be modified by an attacker, so that every action he performs is attributed to a different user. This can be exploited without authentication."}],"metrics":{},"references":[{"url":"https:\/\/www.gruppotim.it\/it\/footer\/red-team.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-31847","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T16:15:26.210","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"An issue was discovered in Italtel Embrace 1.6.4. A stored cross-site scripting (XSS) vulnerability allows authenticated and unauthenticated remote attackers to inject arbitrary web script or HTML into a GET parameter. This reflects\/stores the user input without sanitization."}],"metrics":{},"references":[{"url":"https:\/\/www.gruppotim.it\/it\/footer\/red-team.html","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36039","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T16:15:26.293","lastModified":"2024-05-21T16:53:56.550","vulnStatus":"Awaiting Analysis","descriptions":[{"lang":"en","value":"PyMySQL through 1.1.0 allows SQL injection if used with untrusted JSON input because keys are not escaped by escape_dict."}],"metrics":{},"references":[{"url":"https:\/\/github.com\/PyMySQL\/PyMySQL\/releases\/tag\/v1.1.1","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-36052","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T17:15:09.250","lastModified":"2024-05-21T17:15:09.250","vulnStatus":"Received","descriptions":[{"lang":"en","value":"RARLAB WinRAR before 7.00, on Windows, allows attackers to spoof the screen output via ANSI escape sequences, a different issue than CVE-2024-33899."}],"metrics":{},"references":[{"url":"https:\/\/sdushantha.medium.com\/ansi-escape-injection-vulnerability-in-winrar-a2cbfac4b983","source":"cve@mitre.org"},{"url":"https:\/\/www.rarlab.com\/rarnew.htm","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-22273","sourceIdentifier":"security@vmware.com","published":"2024-05-21T18:15:08.993","lastModified":"2024-05-21T18:15:08.993","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The storage controllers on VMware ESXi, Workstation, and Fusion have out-of-bounds read\/write vulnerability. A malicious actor with access to a virtual machine with storage controllers enabled may exploit this issue to create a denial of service condition or execute code on the hypervisor from a virtual machine in conjunction with other issues."}],"metrics":{"cvssMetricV31":[{"source":"security@vmware.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:H\/PR:N\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"LOCAL","attackComplexity":"HIGH","privilegesRequired":"NONE","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":8.1,"baseSeverity":"HIGH"},"exploitabilityScore":1.4,"impactScore":6.0}]},"references":[{"url":"https:\/\/support.broadcom.com\/web\/ecx\/support-content-notification\/-\/external\/content\/SecurityAdvisories\/0\/24308","source":"security@vmware.com"}]}},{"cve":{"id":"CVE-2024-22274","sourceIdentifier":"security@vmware.com","published":"2024-05-21T18:15:09.190","lastModified":"2024-05-21T18:15:09.190","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The vCenter Server contains an authenticated remote code execution vulnerability. A malicious actor with administrative privileges on the vCenter appliance shell may exploit this issue to run arbitrary commands on the underlying operating system."}],"metrics":{"cvssMetricV31":[{"source":"security@vmware.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.2,"baseSeverity":"HIGH"},"exploitabilityScore":1.2,"impactScore":5.9}]},"references":[{"url":"https:\/\/support.broadcom.com\/web\/ecx\/support-content-notification\/-\/external\/content\/SecurityAdvisories\/0\/24308","source":"security@vmware.com"}]}},{"cve":{"id":"CVE-2024-22275","sourceIdentifier":"security@vmware.com","published":"2024-05-21T18:15:09.383","lastModified":"2024-05-21T18:15:09.383","vulnStatus":"Received","descriptions":[{"lang":"en","value":"The vCenter Server contains a partial file read vulnerability. A malicious actor with administrative privileges on the vCenter appliance shell may exploit this issue to partially read arbitrary files containing sensitive data."}],"metrics":{"cvssMetricV31":[{"source":"security@vmware.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:N\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"HIGH","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"HIGH","integrityImpact":"NONE","availabilityImpact":"NONE","baseScore":4.9,"baseSeverity":"MEDIUM"},"exploitabilityScore":1.2,"impactScore":3.6}]},"references":[{"url":"https:\/\/support.broadcom.com\/web\/ecx\/support-content-notification\/-\/external\/content\/SecurityAdvisories\/0\/24308","source":"security@vmware.com"}]}},{"cve":{"id":"CVE-2024-31757","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T18:15:09.563","lastModified":"2024-05-21T18:15:09.563","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in TeraByte Unlimited Image for Windows v.3.64.0.0 and before and fixed in v.4.0.0.0 allows a local attacker to escalate privileges via the TBOFLHelper64.sys and TBOFLHelper.sys component."}],"metrics":{},"references":[{"url":"https:\/\/www.terabyteunlimited.com\/image-for-windows\/","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-34240","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T18:15:09.650","lastModified":"2024-05-21T18:15:09.650","vulnStatus":"Received","descriptions":[{"lang":"en","value":"QDOCS Smart School 7.0.0 is vulnerable to Cross Site Scripting (XSS) resulting in arbitrary code execution in admin functions related to adding or updating records."}],"metrics":{},"references":[{"url":"https:\/\/grumpz.net\/cve-2024-34240-latest-stored-xss-0day-vulnerability-unveiled","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35056","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T18:15:09.737","lastModified":"2024-05-21T18:15:09.737","vulnStatus":"Received","descriptions":[{"lang":"en","value":"NASA AIT-Core v2.5.2 was discovered to contain multiple SQL injection vulnerabilities via the query_packets and insert functions."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35057","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T18:15:09.820","lastModified":"2024-05-21T18:15:09.820","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in NASA AIT-Core v2.5.2 allows attackers to execute arbitrary code via a crafted packet."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35058","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T18:15:09.903","lastModified":"2024-05-21T18:15:09.903","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in the API wait function of NASA AIT-Core v2.5.2 allows attackers to execute arbitrary code via supplying a crafted string."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-4154","sourceIdentifier":"security@huntr.dev","published":"2024-05-21T18:15:09.987","lastModified":"2024-05-21T18:15:09.987","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In lunary-ai\/lunary version 1.2.2, an incorrect synchronization vulnerability allows unprivileged users to rename projects they do not have access to. Specifically, an unprivileged user can send a PATCH request to the project's endpoint with a new name for a project, despite not having the necessary permissions or being assigned to the project. This issue allows for unauthorized modification of project names, potentially leading to confusion or unauthorized access to project resources."}],"metrics":{"cvssMetricV30":[{"source":"security@huntr.dev","type":"Secondary","cvssData":{"version":"3.0","vectorString":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:H\/A:N","attackVector":"NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"NONE","baseScore":7.1,"baseSeverity":"HIGH"},"exploitabilityScore":2.8,"impactScore":4.2}]},"weaknesses":[{"source":"security@huntr.dev","type":"Primary","description":[{"lang":"en","value":"CWE-821"}]}],"references":[{"url":"https:\/\/huntr.com\/bounties\/e56509af-f7af-4e1e-a04b-9cb53545f30f","source":"security@huntr.dev"}]}},{"cve":{"id":"CVE-2024-25724","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T19:15:09.557","lastModified":"2024-05-21T19:15:09.557","vulnStatus":"Received","descriptions":[{"lang":"en","value":"In RTI Connext Professional 5.3.1 through 6.1.0 before 6.1.1, a buffer overflow in XML parsing from Routing Service, Recording Service, Queuing Service, and Cloud Discovery Service allows attackers to execute code with the affected service's privileges, compromise the service's integrity, leak sensitive information, or crash the service. These attacks could be done via a remote malicious RTPS message; a compromised call with malicious parameters to the RTI_RoutingService_new, rti::recording::Service, RTI_QueuingService_new, or RTI_CDS_Service_new public APIs; or a compromised local file system containing a malicious XML file."}],"metrics":{"cvssMetricV31":[{"source":"cve@mitre.org","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:L\/I:H\/A:H","attackVector":"LOCAL","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"UNCHANGED","confidentialityImpact":"LOW","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":7.3,"baseSeverity":"HIGH"},"exploitabilityScore":1.8,"impactScore":5.5}]},"references":[{"url":"https:\/\/community.rti.com\/static\/documentation\/connext-dds\/current\/doc\/vulnerabilities\/index.html#cve-2024-25724","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-31989","sourceIdentifier":"security-advisories@github.com","published":"2024-05-21T19:15:09.770","lastModified":"2024-05-21T19:15:09.770","vulnStatus":"Received","descriptions":[{"lang":"en","value":"Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. It has been discovered that an unprivileged pod in a different namespace on the same cluster could connect to the Redis server on port 6379. Despite having installed the latest version of the VPC CNI plugin on the EKS cluster, it requires manual enablement through configuration to enforce network policies. This raises concerns that many clients might unknowingly have open access to their Redis servers. This vulnerability could lead to Privilege Escalation to the level of cluster controller, or to information leakage, affecting anyone who does not have strict access controls on their Redis instance. This issue has been patched in version(s) 2.8.19, 2.9.15 and 2.10.10."}],"metrics":{"cvssMetricV31":[{"source":"security-advisories@github.com","type":"Secondary","cvssData":{"version":"3.1","vectorString":"CVSS:3.1\/AV:A\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:H\/A:H","attackVector":"ADJACENT_NETWORK","attackComplexity":"LOW","privilegesRequired":"LOW","userInteraction":"NONE","scope":"CHANGED","confidentialityImpact":"HIGH","integrityImpact":"HIGH","availabilityImpact":"HIGH","baseScore":9.0,"baseSeverity":"CRITICAL"},"exploitabilityScore":2.3,"impactScore":6.0}]},"weaknesses":[{"source":"security-advisories@github.com","type":"Secondary","description":[{"lang":"en","value":"CWE-327"}]}],"references":[{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/2de0ceade243039c120c28374016c04ff9590d1d","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/35a7d6c7fa1534aceba763d6a68697f36c12e678","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/4e2fe302c3352a0012ecbe7f03476b0e07f7fc6c","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/53570cbd143bced49d4376d6e31bd9c7bd2659ff","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/6ef7b62a0f67e74b4aac2aee31c98ae49dd95d12","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/9552034a80070a93a161bfa330359585f3b85f07","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/bdd889d43969ba738ddd15e1f674d27964048994","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/commit\/f1a449e83ee73f8f14d441563b6a31b504f8d8b0","source":"security-advisories@github.com"},{"url":"https:\/\/github.com\/argoproj\/argo-cd\/security\/advisories\/GHSA-9766-5277-j5hr","source":"security-advisories@github.com"}]}},{"cve":{"id":"CVE-2024-33525","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T19:15:10.010","lastModified":"2024-05-21T19:15:10.010","vulnStatus":"Received","descriptions":[{"lang":"en","value":"A Stored Cross-site Scripting (XSS) vulnerability in the \"Import of organizational units and title of organizational unit\" feature in ILIAS 7.20 to 7.30 and ILIAS 8.4 to 8.10 as well as ILIAS 9.0 allows remote authenticated attackers with administrative privileges to inject arbitrary web script or HTML via XML file upload."}],"metrics":{},"references":[{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=159938","source":"cve@mitre.org"},{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170029","source":"cve@mitre.org"},{"url":"https:\/\/docu.ilias.de\/ilias.php?baseClass=illmpresentationgui&cmd=layout&ref_id=1719&obj_id=170040","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35059","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T19:15:10.240","lastModified":"2024-05-21T19:15:10.240","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in the Pickle Python library of NASA AIT-Core v2.5.2 allows attackers to execute arbitrary commands."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35060","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T19:15:10.313","lastModified":"2024-05-21T19:15:10.313","vulnStatus":"Received","descriptions":[{"lang":"en","value":"An issue in the YAML Python library of NASA AIT-Core v2.5.2 allows attackers to execute arbitrary commands via supplying a crafted YAML file."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}},{"cve":{"id":"CVE-2024-35061","sourceIdentifier":"cve@mitre.org","published":"2024-05-21T19:15:10.390","lastModified":"2024-05-21T19:15:10.390","vulnStatus":"Received","descriptions":[{"lang":"en","value":"NASA AIT-Core v2.5.2 was discovered to use unencrypted channels to exchange data over the network, allowing attackers to execute a man-in-the-middle attack."}],"metrics":{},"references":[{"url":"https:\/\/www.linkedin.com\/pulse\/remote-code-execution-via-man-in-the-middle-more-ujkze","source":"cve@mitre.org"}]}}]}